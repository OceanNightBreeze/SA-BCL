#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (14,370) 31 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (14,370) 31 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 2 218 1 222 1 364 1 132 1 28 1 273 9 325 3 298 1 108 2 86 2 134 1 370 1 37 2 256 2 192 2 10 2 284 9 285 1 166 4 14 1 138 1 77 1 209 1 171 5 119 6 311 1 175 1 
240 2 218 1 222 1 364 1 132 1 28 1 273 9 325 3 298 1 108 2 86 2 134 1 370 1 37 2 256 2 10 2 192 2 284 9 285 1 166 4 14 1 138 1 77 1 209 1 171 5 119 6 311 1 175 1 
240 2 218 1 222 1 364 1 132 1 28 1 273 10 325 4 298 1 108 2 86 2 134 1 370 1 37 2 256 2 10 2 192 2 284 10 285 1 166 5 14 1 138 1 77 1 209 1 171 6 119 7 311 1 175 1 
240 2 218 1 222 1 364 1 28 1 273 7 325 2 298 1 108 2 86 2 134 1 370 1 37 2 256 1 10 2 192 2 284 7 285 1 166 3 14 1 138 1 77 1 209 1 171 4 119 4 311 1 175 1 
240 1 37 1 256 2 10 1 284 4 166 2 138 1 77 1 132 1 28 1 325 1 273 4 119 3 171 3 311 1 108 1 86 1 134 1 
240 1 37 1 115 1 192 1 284 2 364 1 138 1 4 1 77 1 153 1 273 2 171 1 311 1 108 1 86 1 175 1 
240 2 192 1 284 3 166 1 14 1 138 1 77 1 273 3 325 1 171 2 119 1 311 1 86 2 
14 1 240 1 138 1 273 1 31 1 284 1 86 1 
14 1 240 1 138 1 273 1 31 1 284 1 86 1 
204 1 358 1 64 1 
204 1 344 1 309 2 
58 1 70 2 162 2 206 1 7 2 374 2 65 2 180 2 
122 1 263 1 289 1 82 1 316 1 101 1 23 1 180 2 128 1 26 1 58 1 30 1 276 1 202 1 7 3 65 3 349 1 67 2 35 2 371 1 205 1 70 2 162 2 206 1 40 1 305 1 374 2 13 1 168 1 97 1 211 1 359 1 49 1 141 2 337 2 239 2 380 1 
159 1 70 1 162 1 210 1 299 1 206 1 7 1 374 1 65 1 180 1 
204 1 70 1 72 1 324 1 5 1 334 1 356 1 299 1 336 1 64 1 251 1 7 1 65 1 381 1 
204 1 70 1 162 1 72 1 374 1 180 1 324 1 356 1 299 1 336 2 64 1 251 1 7 1 65 1 381 2 
366 1 336 1 179 1 381 1 157 1 
366 1 204 1 66 1 336 2 64 1 248 1 381 2 157 1 
366 1 336 1 381 1 
159 1 70 1 162 1 206 1 374 1 180 1 210 1 299 1 336 1 6 1 7 1 65 1 157 1 381 1 
204 1 
366 1 204 1 369 1 66 1 336 2 64 1 381 2 157 1 
204 1 241 2 66 1 176 1 315 1 114 2 103 1 366 2 56 1 342 1 154 1 139 1 236 1 155 1 336 5 262 2 64 1 157 2 381 5 
58 1 358 1 
70 2 162 1 93 1 374 1 180 1 54 1 58 2 7 2 65 2 
216 1 274 1 237 1 
289 1 122 1 67 1 82 1 35 1 316 1 371 1 101 1 23 1 244 1 58 1 359 1 7 1 65 1 239 1 380 1 
122 1 289 1 67 1 82 1 316 1 145 1 35 1 371 1 101 1 70 1 23 1 374 1 180 1 274 1 359 1 133 1 7 2 65 2 380 1 239 1 
290 1 229 1 145 2 70 5 162 1 93 1 374 4 180 4 58 1 5 1 355 1 133 1 7 5 65 5 
159 1 70 2 16 1 299 1 7 2 374 2 65 2 180 2 
58 1 145 1 70 3 162 1 7 3 374 3 65 3 180 3 
159 1 70 1 299 1 7 1 374 1 65 1 180 1 
54 1 70 1 162 1 299 1 93 1 7 1 374 1 65 1 180 1 
122 1 289 1 82 1 316 1 145 1 101 1 23 1 180 3 128 1 26 1 324 1 58 1 299 1 276 1 133 1 202 1 251 1 7 4 65 4 67 1 35 1 371 1 70 3 162 2 93 1 72 1 206 1 40 1 12 1 374 3 13 1 168 1 97 1 211 1 356 1 212 1 359 1 336 1 49 1 141 1 337 2 380 1 381 1 239 1 
290 1 58 1 145 1 5 1 70 2 7 2 374 1 65 2 180 1 
204 1 145 2 70 3 162 1 292 1 93 1 72 1 374 3 180 3 324 1 356 1 299 1 212 1 336 1 133 1 251 1 7 3 65 3 381 1 
145 1 70 2 162 1 274 1 93 1 237 1 7 2 374 2 65 2 180 2 
289 1 122 1 67 1 35 1 316 1 82 1 371 1 101 1 23 1 58 1 359 1 7 1 65 1 239 1 380 1 
158 1 289 1 122 1 67 1 35 1 316 1 82 1 371 1 58 1 359 1 98 1 7 1 65 1 239 1 380 1 
215 1 216 2 242 1 128 1 26 1 296 1 271 1 274 2 186 1 276 1 279 1 92 1 230 1 205 2 164 1 40 2 168 1 376 1 97 1 235 1 237 2 49 1 337 2 141 4 
70 1 16 1 299 1 251 1 7 1 374 1 65 1 180 1 
94 1 322 1 
94 1 322 1 
328 1 261 1 
328 1 261 1 
328 1 261 1 
94 1 360 1 322 1 
94 1 360 1 322 1 
94 1 207 1 322 1 
55 1 328 1 185 1 261 1 94 2 322 2 
94 1 360 1 322 1 
94 1 137 1 322 1 
94 1 137 1 322 1 
94 1 137 1 322 1 
53 1 320 1 322 1 247 1 180 2 182 1 58 1 183 1 7 2 65 2 70 2 94 1 258 1 374 2 207 1 193 1 169 1 308 1 196 1 78 1 336 1 378 1 99 1 381 1 
204 1 89 1 219 1 53 3 94 2 320 2 258 2 322 2 247 1 126 2 323 1 42 1 343 1 308 2 185 1 336 2 378 2 379 1 381 2 
37 1 10 1 108 1 
4 1 37 1 108 1 
4 1 69 1 10 2 172 1 108 3 95 1 
4 1 69 1 10 1 108 2 95 1 118 1 
4 1 69 2 10 1 108 2 95 1 
241 1 81 2 242 1 105 1 366 1 182 1 183 1 344 1 154 3 225 1 186 1 278 1 155 1 187 1 64 1 157 4 190 1 204 2 66 1 9 2 114 1 164 1 43 2 376 1 15 1 196 1 309 3 139 2 262 1 336 5 140 1 381 5 
241 2 176 1 81 6 242 3 125 5 105 1 179 5 365 1 366 6 182 4 344 3 154 8 61 1 186 3 300 1 107 1 155 1 64 1 157 7 190 2 204 5 66 1 372 1 114 2 164 3 44 1 43 6 376 3 15 3 309 9 139 6 336 9 262 2 140 2 381 9 
241 1 176 1 81 2 242 1 182 1 344 2 154 3 225 1 186 1 64 1 187 1 157 2 190 1 204 3 9 1 114 1 164 1 15 1 376 1 43 2 309 4 139 2 262 1 336 3 140 1 381 3 
241 1 81 4 176 1 242 2 365 1 182 2 344 3 154 5 225 1 186 2 107 1 64 1 187 1 157 3 190 1 204 4 9 2 372 1 114 1 164 2 43 4 15 2 376 2 309 7 139 4 262 1 336 4 140 1 381 4 
82 1 291 1 358 1 
82 1 293 1 
214 1 
122 1 82 1 359 1 
82 1 373 1 
122 1 82 1 
122 1 82 3 291 2 359 1 304 1 165 1 
203 1 33 1 230 2 242 1 205 4 164 1 40 3 295 1 340 1 375 1 167 1 271 3 332 1 333 1 29 2 50 1 141 7 
203 1 33 1 230 2 242 1 205 4 164 1 40 3 295 1 340 1 375 1 167 1 271 3 332 1 333 1 29 2 50 1 141 7 
203 1 361 1 33 1 230 2 242 1 205 4 164 1 40 3 295 1 340 1 375 1 167 1 271 3 332 1 333 1 29 2 50 1 141 7 
266 1 242 4 340 1 295 2 128 1 271 10 29 3 347 1 275 1 186 3 327 1 188 1 203 5 33 2 91 4 230 5 329 3 205 16 164 4 40 15 375 1 167 2 168 1 15 3 376 3 354 1 332 1 333 2 97 1 335 1 49 1 50 1 337 2 141 31 
242 1 340 1 295 1 128 2 271 4 29 2 347 1 203 1 33 1 351 1 230 3 205 5 135 1 164 1 40 4 375 1 168 2 167 1 333 1 97 2 49 2 50 1 337 4 141 9 
240 1 316 1 20 1 223 1 152 1 4 1 345 1 273 2 301 1 63 1 108 2 86 1 67 1 68 1 35 1 37 1 10 1 192 1 11 1 284 2 194 1 138 1 77 1 171 1 119 1 48 1 311 1 172 1 239 1 380 1 
240 1 268 1 316 1 20 1 223 1 152 1 4 1 345 1 273 3 301 1 85 1 108 2 86 1 67 1 68 1 35 1 37 1 10 1 192 1 11 1 284 3 194 1 77 1 171 1 119 2 311 1 172 1 80 1 239 1 380 1 
268 1 316 1 20 1 223 1 152 1 4 1 273 2 301 1 85 1 108 2 67 1 68 1 35 1 37 1 192 1 10 1 284 2 194 1 77 1 171 1 119 2 311 1 172 1 239 1 380 1 
122 1 240 1 316 1 82 1 294 1 152 2 106 1 131 1 273 1 301 2 189 1 86 1 67 1 68 2 35 1 371 1 163 1 192 2 284 1 74 1 80 1 239 1 380 1 
240 1 316 1 20 1 223 1 152 1 4 1 345 1 273 1 301 1 85 1 108 2 86 1 67 1 68 1 35 1 37 1 10 1 192 1 11 1 284 1 194 1 138 1 48 1 172 1 239 1 380 1 
3 1 
241 1 294 1 57 1 344 2 5 1 154 2 299 1 155 1 64 1 251 1 109 1 7 1 65 1 204 2 255 2 66 3 67 2 70 1 163 1 114 1 72 1 73 1 116 2 117 1 307 1 75 2 309 2 356 1 262 1 213 4 19 1 122 1 264 1 124 2 82 1 316 1 366 6 324 1 368 1 88 2 90 1 35 2 371 2 232 1 234 1 334 1 139 2 287 1 288 2 377 2 336 5 140 1 381 5 239 2 380 1 
264 1 366 2 324 1 5 1 299 1 368 1 251 1 7 1 65 1 369 1 90 1 66 1 70 1 72 1 116 1 334 1 356 1 287 1 336 3 213 2 19 1 381 3 
264 1 366 1 324 1 5 1 299 1 368 1 251 1 64 1 7 1 65 1 204 1 369 1 90 1 66 1 70 1 72 1 334 1 356 1 287 1 288 1 336 3 213 3 19 1 381 3 
264 1 366 2 324 1 5 1 299 1 368 1 251 1 64 1 7 1 65 1 369 1 204 1 66 1 90 1 70 1 72 1 116 1 75 1 334 1 356 1 287 1 288 1 336 3 213 3 19 1 381 3 
241 1 57 1 344 2 5 1 154 1 299 1 155 1 251 1 64 5 7 1 65 1 254 1 204 5 255 2 66 3 70 1 114 1 72 1 116 4 306 1 117 1 75 4 356 1 357 1 213 6 262 1 19 1 264 1 124 2 220 1 366 7 324 1 368 1 88 2 369 1 90 1 286 1 334 1 139 1 287 1 288 4 336 5 377 2 381 5 
241 1 57 1 344 2 5 1 154 1 299 1 155 1 251 1 64 1 7 1 109 1 65 1 255 2 204 2 66 2 70 1 114 1 72 1 116 2 117 1 75 2 309 2 356 1 213 4 262 1 19 1 264 1 124 2 366 4 324 1 368 1 88 2 90 1 334 1 139 1 287 1 288 2 336 4 377 2 381 4 
264 1 241 1 124 2 366 4 57 1 324 1 344 2 5 1 154 1 299 1 368 1 155 1 64 1 251 1 7 1 65 1 254 1 88 2 204 1 255 2 66 2 90 1 70 1 114 1 72 1 116 2 117 1 75 2 286 1 334 1 139 1 356 1 287 1 357 1 288 2 377 2 336 4 213 4 262 1 19 1 381 4 
264 1 241 1 124 2 366 4 57 1 324 1 344 2 5 1 154 1 299 1 368 1 155 1 64 1 251 1 7 1 65 1 254 1 88 2 204 1 255 2 66 2 90 1 70 1 114 1 72 1 116 2 117 1 75 2 286 1 334 1 139 1 356 1 287 1 357 1 288 2 377 2 336 4 213 4 262 1 19 1 381 4 
264 1 265 1 241 1 124 2 51 1 366 4 324 1 5 1 154 1 299 1 368 1 155 1 64 1 252 2 251 1 7 1 65 1 88 2 204 1 66 2 90 1 70 1 114 1 72 1 116 2 233 1 117 1 75 2 286 1 309 2 334 1 139 1 356 1 287 1 288 2 173 2 336 4 213 4 262 1 19 1 381 4 
241 1 264 1 124 2 366 5 57 1 324 1 344 2 5 1 154 1 299 1 368 1 155 1 64 1 251 1 7 1 65 1 254 1 88 2 204 1 255 2 66 2 90 1 70 1 114 1 72 1 116 3 117 1 306 1 75 3 286 1 334 1 139 1 356 1 357 1 287 1 288 3 377 2 262 1 336 4 213 5 19 1 381 4 
241 1 264 1 124 2 366 5 57 1 324 1 344 2 5 1 154 1 299 1 368 1 155 1 64 1 251 1 7 1 65 1 254 1 88 2 204 1 255 2 66 2 90 1 70 1 114 1 72 1 116 3 117 1 306 1 75 3 286 1 334 1 139 1 356 1 357 1 287 1 288 3 377 2 262 1 336 4 213 5 19 1 381 4 
264 1 241 1 124 2 51 1 366 4 324 1 5 1 154 1 299 1 368 1 155 1 64 1 252 2 251 1 109 1 7 1 65 1 88 2 204 1 66 2 90 1 70 1 114 1 72 1 116 2 117 1 75 2 309 2 334 1 139 1 356 1 287 1 288 2 173 2 262 1 336 4 213 4 19 1 381 4 
216 1 242 1 340 1 295 1 128 1 26 1 296 1 271 2 58 2 29 1 274 1 276 1 230 2 205 3 164 1 40 3 375 1 167 1 168 1 97 1 237 1 358 1 49 1 50 1 337 2 141 6 
83 1 216 11 242 2 198 1 128 2 26 1 58 1 271 2 184 1 274 11 275 1 186 1 276 2 327 1 156 1 349 1 203 1 91 3 230 1 329 3 205 8 164 1 40 6 168 2 15 2 376 2 46 1 97 2 211 1 237 4 49 2 337 4 141 14 
122 1 289 1 82 1 316 1 145 1 101 1 83 1 23 1 244 1 178 1 150 1 180 1 128 1 26 1 58 1 276 1 133 1 7 2 65 2 349 1 67 1 35 1 371 1 70 1 205 1 41 1 40 1 374 1 168 1 97 1 211 1 359 1 237 1 49 1 380 1 239 1 337 2 141 2 
289 2 143 1 144 2 145 1 101 2 242 3 295 1 340 1 58 2 62 2 202 2 7 3 65 3 349 1 203 4 67 3 70 1 205 10 164 3 167 1 168 3 15 2 211 1 359 2 174 1 122 2 316 2 82 2 83 1 216 7 23 2 180 1 127 2 128 3 26 3 271 8 29 1 274 7 186 2 85 1 276 3 133 1 36 1 35 3 230 4 371 1 40 10 374 1 375 1 330 2 376 2 97 3 237 7 49 3 50 1 239 3 337 6 141 20 380 2 
122 2 145 1 316 2 82 3 338 1 294 1 1 1 180 1 128 2 26 2 296 1 348 1 85 1 276 2 63 1 7 1 65 1 349 1 34 1 67 8 35 7 371 2 70 1 161 1 205 1 38 1 163 1 40 1 374 1 305 2 168 2 47 1 97 2 211 1 49 2 380 2 239 8 337 4 141 2 
216 1 83 1 242 1 180 1 128 1 26 1 271 1 274 1 186 1 276 1 7 1 65 1 191 1 230 1 70 1 205 1 162 1 93 1 164 1 40 2 374 1 168 1 15 1 376 1 97 1 237 1 49 1 337 2 141 3 
203 1 215 1 216 1 242 1 205 2 168 1 128 1 26 1 376 1 271 1 296 1 97 1 274 1 237 1 276 1 49 1 141 2 337 2 
279 1 230 1 216 1 164 1 40 2 168 1 128 1 26 1 271 1 296 1 97 1 274 1 186 1 237 1 276 1 49 1 141 2 337 2 
216 2 242 1 128 1 26 1 296 1 271 2 274 2 186 1 276 1 203 1 230 1 205 2 164 1 40 2 168 1 376 1 15 1 97 1 237 2 49 1 337 2 141 4 
203 1 215 1 216 1 161 1 242 1 205 2 168 1 128 1 26 1 376 1 271 1 97 1 274 1 237 1 276 1 49 1 141 2 337 2 
279 1 230 1 216 1 161 1 164 1 40 2 168 1 128 1 26 1 271 1 97 1 274 1 186 1 237 1 276 1 49 1 141 2 337 2 
216 2 242 1 128 1 26 1 271 2 274 2 186 1 276 1 203 1 230 1 205 2 161 1 164 1 40 2 168 1 376 1 15 1 97 1 237 2 49 1 337 2 141 4 
216 2 242 1 128 1 26 1 271 2 274 2 186 1 276 1 203 1 230 1 205 2 164 1 40 2 168 1 376 1 15 1 97 1 237 2 49 1 141 4 337 2 
122 1 289 1 316 1 82 1 101 1 23 1 128 1 26 1 58 1 276 1 202 1 7 1 65 1 349 1 67 1 35 1 371 1 205 1 40 1 168 1 97 1 211 1 359 1 49 1 141 2 380 1 239 1 337 2 
122 1 289 1 316 1 82 1 128 1 26 1 58 1 276 1 7 1 65 1 349 1 158 1 67 1 35 1 371 1 205 1 282 1 40 1 168 1 97 1 211 1 359 1 98 1 49 1 141 2 380 1 239 1 337 2 
83 1 216 2 242 1 128 1 26 1 271 2 274 2 186 1 276 1 203 1 230 1 205 2 164 1 40 2 168 1 376 1 15 1 97 1 237 2 49 1 337 2 141 4 
289 1 122 1 144 1 316 1 82 1 216 2 101 1 242 1 23 1 128 1 26 1 271 2 274 2 186 1 276 1 63 1 202 1 7 1 65 1 203 1 67 1 35 1 230 1 205 2 164 1 40 2 168 1 376 1 15 1 97 1 237 2 359 1 49 1 141 4 380 1 239 1 337 2 
83 1 216 1 242 1 180 1 128 1 26 1 271 1 130 1 274 1 186 1 276 1 7 1 65 1 203 1 70 1 205 2 162 1 93 1 164 1 40 1 374 1 168 1 15 1 376 1 97 1 237 1 49 1 337 2 141 3 
318 1 319 2 242 3 24 1 246 1 201 1 128 2 271 6 275 1 186 3 327 1 87 1 203 3 351 1 110 1 91 2 230 3 329 1 205 9 164 3 40 10 168 2 352 2 15 3 376 3 97 2 18 1 49 2 337 4 141 19 
318 2 319 4 242 3 269 1 149 1 201 1 128 3 271 4 347 2 186 2 327 2 87 1 203 2 351 1 110 1 91 2 230 2 205 14 329 2 112 1 164 2 40 12 168 3 352 1 76 1 15 3 376 3 195 1 197 1 97 3 18 2 49 3 337 6 141 26 
314 1 318 1 319 4 242 5 149 1 269 1 246 1 295 1 340 1 201 1 128 3 271 8 29 1 347 1 275 1 186 4 327 3 87 1 203 4 351 1 110 1 91 4 230 4 329 3 205 20 112 1 164 5 40 21 375 1 167 1 168 3 352 1 76 1 15 4 376 4 195 1 197 1 97 3 18 2 49 3 50 1 337 6 141 41 
314 1 318 1 319 4 242 5 149 1 269 1 246 1 295 1 340 1 201 1 128 4 271 7 29 1 347 2 275 1 186 3 327 3 87 1 203 3 351 1 110 1 91 4 230 4 329 3 205 20 112 1 164 4 40 18 375 1 167 1 168 4 352 1 76 1 15 4 376 4 195 1 197 1 97 4 18 2 49 4 50 1 337 8 141 38 
318 1 319 4 242 8 149 1 269 1 295 1 340 1 201 1 128 2 271 14 29 1 347 1 275 2 186 7 327 2 87 1 203 7 351 1 110 1 91 4 230 7 329 4 205 27 112 1 164 8 40 25 375 1 167 1 168 2 352 1 76 1 15 7 376 7 195 1 46 2 197 1 97 2 18 1 49 2 50 1 337 4 141 52 
42 1 308 1 219 1 185 1 94 1 326 1 258 1 378 1 320 1 322 1 
207 1 193 1 
181 1 96 1 60 1 308 1 94 1 258 1 378 1 320 1 322 1 
32 1 360 1 
55 1 104 1 137 1 
204 1 89 1 219 1 53 2 94 1 320 1 258 1 247 1 322 1 126 1 42 1 343 1 308 1 185 1 336 1 378 1 379 1 381 1 
204 1 89 1 219 1 53 2 94 1 320 1 258 1 247 1 322 1 126 1 42 1 343 1 308 1 185 1 336 1 378 1 379 1 381 1 
204 1 89 1 219 1 53 2 94 1 320 1 258 1 247 1 322 1 126 1 42 1 343 1 308 1 185 1 336 1 378 1 379 1 381 1 
55 1 32 1 360 1 
55 1 32 1 360 1 
104 1 137 1 
55 1 104 1 137 1 
78 1 99 1 
217 1 53 1 320 1 322 1 126 1 180 2 182 1 58 1 183 1 7 2 65 2 157 1 70 2 94 1 258 1 207 1 374 2 193 1 169 1 308 1 196 1 78 1 336 1 378 1 99 1 379 1 381 1 
122 1 313 1 316 1 82 1 83 1 270 1 128 1 26 1 276 1 7 2 65 2 349 1 34 1 67 2 35 2 280 1 70 2 205 1 38 1 40 1 305 2 168 1 97 1 260 1 211 1 79 1 49 1 380 1 239 2 337 2 141 2 
67 2 316 1 35 2 317 1 20 1 37 1 10 1 194 1 152 1 249 1 4 1 345 1 226 1 172 1 85 1 108 2 63 1 380 1 239 2 
67 1 35 1 316 1 20 1 37 1 148 1 10 1 194 1 152 1 249 1 4 1 345 1 172 1 85 1 108 2 239 1 380 1 
122 1 67 1 316 1 82 1 35 1 371 1 317 1 163 1 294 1 74 1 152 1 346 1 380 1 239 1 
67 1 316 1 35 1 317 1 20 1 37 1 10 1 194 1 152 1 249 1 4 1 345 1 226 1 172 1 85 1 108 2 239 1 380 1 
281 1 
56 1 204 1 342 1 154 1 139 1 358 1 64 1 
241 1 366 1 57 1 344 1 154 1 155 1 64 1 204 2 255 1 66 1 114 1 309 1 139 1 377 1 262 1 336 1 381 1 
241 4 146 1 147 2 242 2 291 2 293 3 200 2 151 1 56 1 342 1 59 2 344 6 154 9 63 1 155 4 64 2 204 8 67 3 66 3 71 2 114 4 304 1 164 2 307 1 15 2 259 1 309 12 359 3 262 4 120 2 312 2 122 3 81 6 316 4 82 10 84 2 366 5 324 2 186 2 277 2 35 3 371 1 283 1 373 2 330 2 43 6 376 2 331 1 139 8 336 5 140 2 380 3 239 3 381 5 
241 2 81 5 242 2 269 1 149 1 177 1 366 1 344 3 250 1 154 8 186 2 277 1 155 2 64 2 327 1 204 5 66 1 91 1 329 1 112 1 71 2 114 2 164 2 307 1 76 1 43 5 15 2 376 2 195 1 309 6 139 5 336 1 262 2 140 1 381 1 
241 1 242 2 295 1 180 1 154 2 299 1 277 1 302 1 155 1 6 1 7 1 65 1 159 1 70 1 162 1 71 2 114 1 206 1 164 1 374 1 167 1 210 1 139 2 357 1 262 1 336 1 50 1 381 1 
241 1 204 1 114 1 56 1 342 1 154 1 139 1 155 1 262 1 64 1 
204 5 81 5 242 2 71 2 164 2 330 1 15 2 376 2 43 5 344 5 154 5 309 10 139 5 186 2 277 1 
366 1 204 1 66 1 336 1 64 1 381 1 
122 1 100 1 241 2 176 1 316 1 82 1 294 1 363 1 366 4 154 2 155 1 67 4 66 2 35 4 371 2 232 1 114 2 163 1 283 1 73 1 307 2 259 2 139 2 262 2 336 3 140 2 380 1 239 4 381 3 
289 1 122 1 316 1 82 1 101 1 23 1 180 2 128 1 26 1 58 1 276 1 202 1 7 3 65 3 67 1 35 1 371 1 70 2 162 2 206 1 40 1 374 2 13 1 168 1 97 1 211 1 359 1 49 1 141 1 337 2 239 1 380 1 
241 1 204 4 81 2 114 1 307 1 43 2 344 2 29 1 154 1 309 4 139 2 155 1 262 1 64 2 140 1 
258 1 378 1 321 1 
258 1 378 1 321 1 
219 1 258 1 378 1 99 1 25 1 
258 1 378 1 321 1 
111 1 258 1 378 1 
111 1 258 1 378 1 
111 1 258 1 378 1 
258 1 378 1 
94 1 322 1 
203 1 230 2 242 1 205 4 164 1 40 4 340 1 295 1 375 1 168 2 167 1 128 2 271 3 29 1 97 2 347 1 49 2 50 1 141 8 337 4 
230 2 242 1 205 3 164 1 40 3 340 1 295 1 375 1 167 1 271 2 29 1 358 1 50 1 141 6 
203 1 267 1 230 1 242 1 205 2 164 1 40 2 168 1 128 1 15 1 376 1 271 2 97 1 186 1 49 1 337 2 141 4 
203 1 91 2 230 1 329 1 205 3 242 1 164 1 40 4 15 1 376 1 271 2 186 1 275 1 327 1 141 7 
242 3 295 2 340 1 128 2 271 9 29 1 184 1 347 2 275 1 186 2 203 4 91 2 230 5 205 11 329 2 164 3 40 12 208 1 375 1 167 2 168 2 376 2 15 2 46 1 97 2 49 2 50 1 141 23 337 4 
91 1 40 1 141 1 
205 1 329 1 141 1 
203 1 267 1 230 2 242 1 205 3 164 1 40 3 168 1 128 1 330 1 15 1 376 1 271 3 97 1 186 1 49 1 337 2 141 6 
242 2 269 1 149 1 128 1 271 2 186 2 327 1 203 1 351 1 91 1 230 1 329 1 205 6 112 1 164 2 40 6 168 1 76 1 15 2 376 2 195 1 97 1 49 1 141 12 337 2 
203 1 230 1 242 1 205 3 164 1 40 3 295 1 167 1 271 2 50 1 141 6 
203 1 230 1 205 1 40 2 295 1 340 1 208 1 375 1 167 1 168 1 128 1 271 2 347 1 97 1 49 1 141 3 337 2 
203 2 351 1 230 3 205 5 242 2 164 2 40 5 295 2 168 1 167 2 128 1 271 5 97 1 302 1 49 1 50 1 337 2 141 10 
203 1 351 1 242 1 205 2 168 1 128 1 376 1 271 1 97 1 49 1 337 2 141 2 
203 1 351 1 230 1 242 1 205 2 164 1 40 2 168 1 128 1 15 1 376 1 271 2 97 1 186 1 49 1 337 2 141 4 
203 1 351 1 230 1 205 1 40 2 246 1 295 1 208 1 168 3 167 1 128 3 271 2 347 1 97 3 49 3 141 3 337 6 
267 1 242 5 295 3 340 1 246 1 128 5 271 12 29 1 347 2 275 1 186 3 188 1 327 1 203 5 351 1 91 4 230 7 329 3 205 16 164 5 40 18 208 1 375 1 167 3 168 5 15 3 376 3 354 1 97 5 335 1 49 5 50 2 337 10 141 34 
242 1 269 1 340 1 295 1 128 1 271 2 29 1 327 1 351 1 91 1 230 2 329 1 205 4 164 1 40 4 375 1 168 1 167 1 97 1 49 1 50 1 141 8 337 2 
267 1 242 2 269 1 295 1 340 1 128 2 271 3 29 1 275 1 327 1 203 1 351 1 91 2 230 2 329 1 205 6 164 1 40 5 375 1 167 1 168 2 15 1 376 1 97 2 49 2 50 1 141 11 337 4 
267 1 242 3 269 1 149 1 295 1 340 1 128 3 271 4 29 1 347 1 186 2 327 1 203 1 351 1 91 1 230 3 329 1 205 9 112 1 164 3 40 10 375 1 167 1 168 3 76 1 15 2 376 2 195 1 97 3 49 3 50 1 141 19 337 6 
267 1 242 3 269 1 149 1 295 1 340 1 128 3 271 5 29 1 347 1 186 1 327 1 203 2 351 1 91 1 230 3 329 1 205 10 112 1 164 2 40 7 375 1 167 1 168 3 76 1 15 2 376 2 195 1 97 3 49 3 50 1 141 17 337 6 
242 1 269 1 340 1 295 1 128 1 271 2 29 1 327 1 351 1 91 1 230 2 329 1 205 4 164 1 40 4 375 1 168 1 167 1 97 1 49 1 50 1 141 8 337 2 
242 2 269 1 149 1 128 1 271 2 186 2 327 1 203 1 351 1 91 1 230 1 329 1 205 6 112 1 164 2 40 6 168 1 76 1 15 2 376 2 195 1 97 1 49 1 141 12 337 2 
267 1 242 3 269 1 149 1 295 1 340 1 128 4 271 5 29 1 347 2 186 1 327 1 203 2 351 1 91 1 230 3 329 1 205 10 112 1 164 2 40 8 375 1 167 1 168 4 76 1 15 2 376 2 195 1 97 4 49 4 50 1 141 18 337 8 
242 3 269 1 149 1 246 1 128 4 271 6 347 2 186 2 327 1 203 3 351 1 91 1 230 3 329 1 205 9 112 1 164 2 40 7 168 4 76 1 15 3 376 3 195 1 97 4 49 4 141 16 337 8 
203 3 230 3 242 1 205 3 164 1 40 4 340 2 295 3 375 1 167 3 271 6 50 1 141 7 
242 3 269 1 149 1 295 1 340 1 246 1 128 4 271 4 29 1 347 2 186 1 327 1 203 1 351 1 91 1 230 3 329 1 205 10 112 1 164 2 40 8 375 1 167 1 168 4 76 1 15 2 376 2 195 1 97 4 49 4 50 1 141 18 337 8 
290 1 58 1 5 1 70 1 231 1 7 1 65 1 
290 1 228 1 52 1 231 1 70 1 303 1 245 1 58 1 5 1 7 1 227 1 65 1 
122 1 67 1 316 1 82 1 35 1 371 1 163 1 358 1 294 1 380 1 239 1 
122 1 289 1 67 1 82 1 316 1 145 1 35 1 371 1 70 1 23 1 374 1 180 1 58 1 359 1 7 2 65 2 239 1 380 1 
289 1 122 2 145 1 316 1 82 3 23 1 180 2 58 1 59 1 299 1 251 1 7 2 65 2 67 1 35 1 70 2 373 1 374 1 259 1 356 1 359 2 380 1 239 1 
289 1 122 2 145 1 316 1 82 3 180 2 58 1 59 1 299 1 251 1 7 2 65 2 160 1 67 2 35 2 70 2 373 1 374 1 259 1 356 1 359 2 98 1 380 1 239 2 
122 1 82 4 316 1 291 1 293 1 366 1 129 1 324 1 59 1 64 1 350 1 204 1 160 1 67 3 35 3 371 1 373 1 259 1 359 1 336 2 380 1 239 3 381 2 
122 1 204 1 160 1 67 3 316 1 35 3 82 4 371 1 291 1 293 1 373 1 84 1 366 1 324 1 59 1 259 1 359 1 336 2 64 1 381 2 239 3 380 1 
67 1 316 1 35 1 338 1 380 1 239 1 
122 2 67 7 35 6 82 3 316 3 371 2 338 1 38 1 304 1 305 1 1 1 47 1 170 1 348 1 310 1 85 1 359 1 63 1 253 1 239 7 380 2 
289 1 144 1 145 1 101 1 242 1 340 1 295 1 58 2 63 1 202 1 7 2 65 2 67 1 70 1 205 3 164 1 168 2 167 1 359 1 79 1 122 1 316 1 82 1 83 1 216 1 23 1 180 1 127 1 128 2 26 2 271 2 29 1 274 1 276 2 35 1 230 2 40 3 374 1 375 1 97 2 237 1 49 2 50 1 239 1 337 4 380 1 141 6 
241 2 82 2 291 1 293 1 200 1 84 1 366 2 56 1 342 1 324 1 154 1 155 2 64 1 157 1 204 1 67 1 66 1 35 1 371 1 114 2 283 1 139 1 262 2 336 3 120 1 239 1 381 3 312 1 
122 1 67 2 35 2 82 2 316 2 291 1 338 1 304 1 331 1 359 1 63 1 239 2 380 1 
142 1 122 1 160 1 67 4 316 1 35 4 82 1 371 1 163 1 294 1 63 1 239 4 380 1 
122 1 143 1 67 2 35 2 82 1 316 2 243 1 224 1 259 1 170 1 359 1 253 1 239 2 380 1 
4 1 67 1 316 1 35 1 371 1 37 1 108 1 380 1 194 1 239 1 
122 1 67 2 316 1 82 1 35 2 260 1 38 1 85 1 63 1 380 1 239 2 
142 1 122 2 67 5 35 4 82 3 316 2 371 1 163 1 38 1 294 1 1 1 259 1 47 1 63 1 239 5 380 2 
142 1 8 1 122 2 67 5 35 4 82 3 316 2 371 1 163 1 38 1 294 1 259 1 47 1 63 1 239 5 380 2 
122 1 289 1 67 1 82 1 316 1 145 1 35 1 371 1 70 1 374 1 180 1 58 1 359 1 98 1 7 2 65 2 239 1 380 1 
122 1 67 1 35 1 82 1 316 2 304 1 259 1 170 1 310 1 359 1 253 1 239 1 380 1 
123 1 362 1 58 1 17 1 121 1 
123 2 362 2 204 1 21 1 113 1 72 1 324 1 58 1 45 1 356 1 17 1 299 1 212 1 336 2 64 1 251 1 157 1 381 2 121 2 
362 1 313 1 280 1 70 1 270 1 17 1 7 1 65 1 121 1 
123 1 362 1 324 1 45 1 356 1 17 1 299 1 212 1 113 1 72 1 251 1 121 1 
77 1 171 1 311 1 358 1 
240 1 77 1 273 1 171 1 311 1 284 1 86 1 
273 1 192 1 301 1 
240 1 138 1 77 1 27 1 273 3 171 1 22 1 311 1 284 3 86 1 238 1 175 2 
240 1 77 1 273 2 171 1 119 1 256 1 311 1 284 2 86 1 
240 1 37 1 10 1 284 1 166 1 138 1 273 1 171 1 108 1 86 1 134 1 
240 1 138 1 77 1 273 1 171 1 284 1 86 1 
240 1 138 1 77 2 273 1 311 1 284 1 86 1 
240 2 138 1 77 1 273 2 171 1 257 1 221 1 339 1 284 2 86 2 
240 1 284 3 285 1 166 1 138 1 77 1 209 1 273 3 325 1 119 2 171 2 311 1 86 1 
240 1 102 1 37 1 10 1 284 2 4 1 138 1 77 1 273 2 171 1 119 1 311 1 172 1 108 2 86 1 
240 2 256 1 284 4 166 1 138 1 77 1 132 1 273 4 325 1 119 2 171 2 311 1 86 2 
240 1 138 1 77 1 273 1 171 1 311 1 284 1 86 1 
240 1 22 1 136 1 284 4 166 1 27 1 77 2 273 4 325 1 119 2 171 3 311 2 86 1 175 1 
240 1 0 1 284 2 2 1 341 1 138 1 77 1 273 2 171 1 119 1 311 1 86 1 
240 1 138 1 77 1 27 2 273 3 171 1 22 1 311 1 199 1 284 3 86 1 175 2 
353 1 171 2 297 2 39 1 
240 1 138 1 272 1 273 1 284 1 86 1 
240 1 138 1 77 1 273 2 171 1 119 1 311 1 284 2 86 1 285 1 
367 1 
240 1 138 1 77 1 273 1 171 1 311 1 284 1 86 1 
240 1 284 3 285 1 138 1 77 1 273 3 119 1 171 1 311 1 86 1 175 1 
325 1 171 1 136 1 166 1 
77 1 171 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
103 2 335 1 135 1 339 2 143 1 362 2 365 1 318 1 290 1 144 2 39 2 191 4 208 1 367 9 15 1 279 1 66 1 348 3 215 2 121 1 199 1 126 1 200 6 237 1 353 9 128 2 307 1 52 5 
103 2 335 1 135 1 339 2 143 1 362 2 365 1 318 1 290 1 144 2 39 2 191 4 208 1 367 9 15 1 279 1 66 1 348 3 215 2 121 1 199 1 126 1 200 6 237 1 353 9 128 2 307 1 52 5 
103 2 335 1 135 1 339 2 143 1 362 2 365 1 318 1 290 1 144 2 39 2 191 5 208 1 367 10 15 1 279 1 66 1 348 4 215 2 121 1 199 1 126 1 200 7 237 1 353 10 128 2 307 1 52 6 
103 2 335 1 135 1 339 2 143 1 362 2 365 1 318 1 144 1 39 2 191 3 208 1 367 7 15 1 279 1 66 1 348 2 215 2 121 1 199 1 126 1 200 4 237 1 353 7 128 2 307 1 52 4 
103 1 279 1 348 1 215 1 339 1 121 1 126 1 200 3 353 4 362 1 365 1 290 1 144 2 39 1 191 2 52 3 367 4 208 1 
103 1 24 1 250 1 215 1 121 1 126 1 353 2 332 1 237 1 362 1 128 1 365 1 318 1 52 1 39 1 367 2 
103 2 348 1 121 1 143 1 126 1 200 1 353 3 362 2 128 1 365 1 191 1 52 2 367 3 
103 2 335 1 339 1 143 1 362 2 365 1 290 1 344 1 144 2 191 4 39 1 367 9 208 1 322 1 279 1 66 1 348 3 215 1 121 1 126 1 200 7 353 9 128 1 52 5 
103 2 335 1 339 1 143 1 362 2 365 1 290 1 344 1 144 2 191 4 39 1 367 9 208 1 322 1 279 1 66 1 348 3 215 1 121 1 126 1 200 7 353 9 128 1 52 5 
20 1 108 1 50 1 
20 1 364 2 253 1 
53 2 122 2 262 2 356 1 6 2 26 2 30 2 148 1 
53 2 2 1 337 1 181 1 262 3 356 1 313 2 6 2 26 2 243 1 30 3 248 1 272 1 341 2 363 1 93 1 114 2 274 1 167 2 369 1 118 1 375 1 148 1 172 1 216 1 73 1 49 1 282 1 329 1 122 2 351 1 127 1 51 1 238 1 257 2 239 1 308 1 
145 1 53 1 43 1 122 1 262 1 356 1 6 1 26 1 30 1 158 1 
145 1 293 1 262 1 108 1 96 1 6 1 120 1 30 1 84 1 20 1 187 1 268 1 174 1 36 1 
53 1 145 1 262 1 108 1 96 1 6 1 26 1 30 1 84 1 20 1 187 1 122 1 268 2 174 2 36 1 
133 1 278 1 268 1 174 1 155 1 
20 1 195 1 133 1 268 2 108 1 174 2 155 1 41 1 
268 1 174 1 155 1 
145 1 53 1 133 1 43 1 262 1 356 1 6 1 26 1 69 1 30 1 122 1 268 1 174 1 158 1 
20 1 
20 1 133 1 268 2 108 1 338 1 174 2 155 1 41 1 
133 2 136 2 108 1 64 2 324 1 9 1 70 2 186 1 56 1 20 1 47 1 21 1 90 1 268 5 303 1 174 5 227 1 155 2 41 1 
50 1 148 1 
53 1 262 2 372 1 6 2 26 1 30 2 148 2 266 1 122 1 
236 1 251 1 189 1 
262 1 118 1 375 1 30 1 148 1 49 1 127 1 341 1 363 1 51 1 35 1 238 1 257 1 239 1 308 1 167 1 
53 3 122 3 262 3 6 3 26 1 380 1 30 3 148 1 
145 1 53 1 122 1 262 1 6 1 30 1 158 1 
145 1 53 1 122 1 262 1 372 1 6 1 26 1 30 1 266 1 
53 3 2 1 337 1 181 1 262 4 356 1 313 1 6 3 26 2 243 1 30 4 84 1 266 1 87 1 187 1 248 1 268 1 272 1 363 1 341 1 114 2 36 1 167 1 145 1 321 1 96 1 118 1 375 1 148 1 172 1 216 1 198 1 73 1 49 1 282 1 122 3 174 1 127 1 51 1 238 1 380 1 239 1 257 1 308 1 
53 1 292 1 122 1 262 2 6 2 120 1 380 1 30 2 148 1 
145 1 53 3 262 3 96 1 6 3 26 1 84 1 30 3 266 1 198 1 20 1 87 1 187 1 112 1 122 3 268 1 174 1 380 2 36 1 
53 2 262 2 6 2 26 1 251 1 30 2 266 1 122 2 380 1 189 1 
262 1 118 1 375 1 30 1 148 1 49 1 127 1 341 1 363 1 51 1 238 1 257 1 239 1 308 1 167 1 
262 1 118 1 68 1 375 1 30 1 148 1 49 1 330 1 127 1 341 1 51 1 238 1 257 1 308 1 167 1 
2 1 337 1 181 2 313 4 109 1 207 1 29 1 164 1 140 1 340 1 272 1 93 2 114 2 189 2 368 1 345 1 251 2 119 1 327 1 172 1 73 1 282 1 236 2 305 1 
187 1 145 1 53 1 122 1 262 1 6 1 30 1 192 1 
53 1 262 2 6 1 118 1 375 1 30 2 87 1 49 1 122 1 127 1 51 1 341 1 363 1 189 1 238 1 380 1 239 1 257 1 308 1 167 1 
53 4 292 1 180 1 262 5 6 5 26 1 120 1 30 5 148 1 266 1 87 1 122 4 380 2 219 1 
145 1 53 2 122 2 262 2 6 2 30 2 192 1 158 1 
104 1 65 1 
104 1 65 1 
79 1 193 1 
79 1 193 1 
79 1 193 1 
104 1 105 1 65 1 
104 1 105 1 65 1 
104 1 65 1 185 1 
104 2 79 1 107 1 65 2 228 1 193 1 
104 1 105 1 65 1 
104 1 295 1 65 1 
104 1 295 1 65 1 
104 1 295 1 65 1 
249 1 104 2 240 2 137 1 213 2 346 1 373 2 65 2 67 1 214 1 225 2 265 3 20 1 317 1 165 1 268 2 174 2 333 2 228 1 
53 2 78 1 240 1 104 1 260 1 262 2 6 2 242 1 30 2 185 1 265 1 225 1 268 1 320 1 169 1 213 1 346 1 65 1 148 1 254 1 122 2 174 1 333 1 309 1 
215 1 39 1 339 1 
332 1 215 1 39 1 
179 1 332 1 354 1 339 2 39 3 86 1 
179 1 332 1 342 1 339 1 39 2 86 1 
179 1 332 1 339 1 39 2 86 2 
220 2 133 4 136 1 241 1 108 1 242 1 244 1 186 3 164 1 340 1 58 1 268 5 227 2 364 3 41 1 320 1 169 1 277 1 17 1 64 1 119 1 253 1 327 1 70 1 97 1 46 1 235 2 20 2 21 1 125 2 174 5 155 1 
133 7 136 2 241 3 108 1 55 1 223 1 244 1 264 1 359 1 186 8 164 3 340 3 33 1 268 9 227 6 364 9 320 4 41 1 278 5 64 2 119 3 253 3 327 3 70 2 97 2 46 2 235 6 20 5 21 1 303 1 125 6 174 9 378 5 155 6 283 1 
220 1 133 2 136 1 108 1 241 1 186 3 164 1 340 1 58 1 268 3 227 2 364 4 320 1 277 1 64 1 119 1 253 2 327 1 70 1 97 1 46 1 20 3 235 2 303 1 125 2 174 3 
220 2 133 3 136 1 108 1 241 2 55 1 223 1 264 1 186 5 164 2 340 2 58 1 268 4 227 4 364 7 320 2 277 1 64 1 119 2 253 3 327 2 70 1 97 1 46 1 20 4 235 4 125 4 303 1 174 4 
100 1 50 1 238 1 
81 1 238 1 
355 1 
238 1 308 1 
44 1 100 2 375 1 326 1 238 3 308 1 
375 1 238 1 308 1 
238 1 256 1 
345 2 205 1 181 3 80 1 109 3 313 7 183 1 7 2 327 1 111 1 141 1 340 1 124 1 269 1 101 1 93 4 157 1 
345 2 205 1 181 3 80 1 109 3 313 7 183 1 7 2 327 1 111 1 141 1 340 1 124 1 269 1 101 1 93 4 157 1 
345 2 205 1 181 3 80 1 109 3 313 7 183 1 296 1 7 2 327 1 111 1 141 1 340 1 124 1 269 1 101 1 93 4 157 1 
132 1 2 1 205 2 337 1 181 15 54 1 80 1 241 3 183 1 313 31 109 10 286 1 222 4 7 3 316 3 164 3 141 2 111 5 340 4 269 2 272 1 114 2 93 16 42 1 345 5 323 1 294 1 119 3 327 4 300 1 73 1 124 1 101 2 157 1 
345 3 205 1 2 2 337 2 54 1 181 4 80 1 183 1 109 4 313 9 7 2 327 1 299 1 111 1 141 1 73 2 302 1 340 1 124 1 269 1 272 2 101 1 93 5 114 4 
103 1 77 1 162 1 339 1 57 1 139 1 12 1 362 1 341 1 365 1 39 2 275 1 167 1 367 2 118 1 231 1 215 1 121 1 71 1 49 1 217 1 150 1 126 1 200 1 353 2 332 1 354 1 128 1 257 1 52 1 
103 1 5 1 162 1 339 1 57 1 139 1 288 1 12 1 362 1 341 1 365 1 39 2 275 1 167 1 367 3 118 1 231 1 215 1 71 1 74 1 49 1 217 1 126 1 200 2 353 3 332 1 354 1 128 1 257 1 52 1 
5 1 162 1 339 1 288 1 12 1 341 1 365 1 39 2 275 1 167 1 367 2 118 1 231 1 215 1 71 1 49 1 217 1 126 1 200 2 353 2 332 1 354 1 128 1 257 1 52 1 
103 1 177 1 311 1 184 1 162 2 362 1 341 1 14 1 167 1 367 1 275 2 118 1 328 1 232 1 49 1 74 1 217 2 353 1 127 1 128 2 238 1 257 1 308 1 
103 1 77 1 162 1 339 1 57 1 139 1 288 1 12 1 362 1 341 1 39 2 275 1 167 1 367 1 118 1 231 1 215 1 121 1 71 1 49 1 217 1 353 1 332 1 354 1 128 1 257 1 
196 1 
0 2 3 1 108 1 6 1 287 2 10 2 14 1 341 2 166 1 343 4 167 2 168 2 291 2 170 1 293 1 16 1 64 1 118 1 18 2 120 1 253 2 70 1 20 2 21 1 350 1 174 5 127 2 257 2 308 1 131 1 136 1 262 1 27 1 28 2 30 1 84 1 186 2 187 1 267 1 268 5 227 2 188 1 364 2 36 1 41 3 145 1 96 1 232 1 97 1 233 1 49 1 331 1 201 1 238 1 155 6 
3 1 262 1 338 1 6 1 30 1 84 1 10 1 187 1 267 1 268 3 36 1 343 2 41 1 145 1 170 1 293 1 96 1 120 1 233 1 174 3 155 2 131 1 
0 1 3 1 262 1 108 1 338 1 6 1 30 1 84 1 187 1 267 1 268 3 36 1 343 3 41 1 145 1 170 1 293 1 96 1 120 1 233 1 20 1 174 3 155 1 131 1 
0 1 3 1 262 1 338 1 108 1 6 1 30 1 84 1 10 1 187 1 267 1 268 3 36 1 343 3 41 1 145 1 170 1 293 1 96 1 18 1 120 1 233 1 20 1 174 3 155 2 131 1 
0 4 3 1 338 1 108 5 6 1 206 1 287 2 10 4 163 1 110 1 113 1 343 6 61 1 291 2 168 2 170 1 293 1 64 1 18 4 120 1 253 2 70 1 20 5 21 1 174 5 131 1 262 1 136 1 27 1 28 2 84 1 30 1 186 1 187 1 267 1 268 5 188 1 227 1 36 1 41 3 145 1 96 1 233 1 155 7 
0 2 3 1 108 1 6 1 287 2 10 2 343 4 291 2 168 2 170 1 293 1 64 1 18 2 120 1 253 2 70 1 20 2 21 1 174 4 131 1 262 1 136 1 27 1 28 2 84 1 30 1 186 1 187 1 267 1 268 4 188 1 227 1 364 2 36 1 41 2 145 1 96 1 233 1 331 1 155 4 
0 2 3 1 136 1 262 1 108 1 206 1 6 1 287 2 27 1 28 2 10 2 30 1 84 1 110 1 186 1 187 1 267 1 268 4 227 1 188 1 113 1 36 1 343 4 41 2 168 2 291 2 145 1 170 1 293 1 96 1 64 1 18 2 120 1 253 2 233 1 70 1 20 1 21 1 174 4 155 4 131 1 
0 2 3 1 136 1 262 1 108 1 206 1 6 1 287 2 27 1 28 2 10 2 30 1 84 1 110 1 186 1 187 1 267 1 268 4 227 1 188 1 113 1 36 1 343 4 41 2 168 2 291 2 145 1 170 1 293 1 96 1 64 1 18 2 120 1 253 2 233 1 70 1 20 1 21 1 174 4 155 4 131 1 
0 2 3 1 136 1 262 1 108 1 206 1 6 1 27 1 10 2 30 1 84 1 186 1 187 1 32 2 267 1 268 4 227 1 364 2 92 1 36 1 343 4 41 2 168 2 291 2 209 1 145 1 170 1 293 1 96 1 64 1 18 2 120 1 233 1 70 1 20 1 48 2 21 1 174 4 153 1 155 4 131 1 
0 3 3 1 136 1 262 1 108 1 206 1 6 1 287 2 27 1 28 2 30 1 84 1 163 1 10 3 110 1 186 1 187 1 267 1 268 4 227 1 188 1 113 1 36 1 343 5 41 2 168 2 291 2 145 1 170 1 293 1 64 1 96 1 18 3 120 1 253 2 70 1 233 1 20 1 21 1 174 4 155 5 131 1 
0 3 3 1 136 1 262 1 108 1 206 1 6 1 287 2 27 1 28 2 30 1 84 1 163 1 10 3 110 1 186 1 187 1 267 1 268 4 227 1 188 1 113 1 36 1 343 5 41 2 168 2 291 2 145 1 170 1 293 1 64 1 96 1 18 3 120 1 253 2 70 1 233 1 20 1 21 1 174 4 155 5 131 1 
0 2 3 1 136 1 262 1 108 1 6 1 27 1 10 2 30 1 84 1 186 1 187 1 32 2 267 1 268 4 227 1 364 2 36 1 343 4 92 1 41 2 168 2 291 2 145 1 170 1 293 1 64 1 96 1 18 2 120 1 233 1 70 1 20 1 48 2 21 1 331 1 174 4 155 4 131 1 
2 1 337 1 181 3 80 1 183 1 109 2 313 6 7 1 340 1 269 1 272 1 189 1 114 2 93 3 368 1 345 2 251 1 327 1 172 1 148 2 73 1 282 1 124 1 236 1 50 1 101 1 
2 1 337 1 181 4 241 2 109 2 313 10 222 2 316 2 164 1 111 1 246 1 340 1 361 1 91 1 272 1 114 2 189 8 93 6 345 1 251 3 119 2 327 2 172 1 300 1 149 1 73 1 282 1 236 8 102 1 
53 1 2 1 337 1 262 2 181 1 182 1 6 1 313 2 30 2 87 1 246 1 248 1 272 1 363 1 341 1 35 1 114 2 93 1 167 1 194 1 118 1 251 1 375 1 148 1 172 1 49 1 73 1 282 1 122 1 329 1 127 1 51 1 129 1 238 1 380 1 239 1 257 1 308 1 
53 1 2 3 337 3 161 2 241 2 6 1 109 8 7 1 243 2 164 2 288 1 111 4 246 1 340 3 248 1 341 3 114 6 167 3 345 4 118 2 251 7 119 2 172 3 73 3 124 1 122 1 127 1 76 1 257 3 308 2 178 1 181 10 262 3 80 1 183 1 313 20 30 3 87 1 269 1 271 1 272 3 363 2 94 2 189 7 93 10 37 2 325 2 375 2 327 3 148 2 49 2 282 3 329 1 236 7 51 2 101 1 380 1 238 2 239 2 
53 1 2 2 337 2 262 1 181 1 6 1 313 2 30 1 288 1 245 1 248 1 270 1 272 2 341 8 14 1 114 4 93 1 167 8 368 1 369 2 212 1 118 2 298 1 172 2 232 1 376 1 49 2 73 2 150 1 282 2 122 1 329 1 175 1 127 2 380 1 238 3 257 7 308 2 259 1 
53 1 2 1 337 1 262 1 181 2 241 1 109 1 6 1 313 3 26 1 30 1 266 1 164 1 246 1 340 1 272 1 189 1 114 2 93 1 345 1 251 1 119 1 327 1 172 1 73 1 282 1 236 1 122 1 334 1 
368 1 2 1 337 1 109 1 313 2 251 1 119 1 327 1 172 1 111 1 73 1 282 1 236 1 272 1 305 1 189 1 114 2 93 2 
368 1 345 1 2 1 337 1 181 2 109 1 313 2 251 1 29 1 172 1 164 1 73 1 282 1 340 1 236 1 272 1 189 1 114 2 
2 1 337 1 181 2 241 1 313 4 109 2 164 1 111 1 340 1 272 1 93 2 114 2 189 2 368 1 345 1 251 2 119 1 327 1 172 1 73 1 282 1 236 2 
2 1 337 1 109 1 313 2 251 1 119 1 327 1 172 1 111 1 73 1 245 1 282 1 236 1 272 1 305 1 189 1 114 2 93 2 
345 1 2 1 337 1 181 2 109 1 313 2 251 1 29 1 172 1 164 1 73 1 245 1 282 1 340 1 236 1 272 1 189 1 114 2 
2 1 337 1 181 2 241 1 313 4 109 2 164 1 111 1 245 1 340 1 272 1 93 2 114 2 189 2 345 1 251 2 119 1 327 1 172 1 73 1 282 1 236 2 
2 1 337 1 181 2 241 1 313 4 109 2 164 1 111 1 340 1 272 1 93 2 114 2 189 2 345 1 251 2 119 1 327 1 172 1 73 1 282 1 236 2 
2 1 337 1 262 1 181 1 313 2 243 1 30 1 248 1 272 1 363 1 341 1 93 1 114 2 167 1 118 1 375 1 148 1 172 1 49 1 73 1 282 1 329 1 127 1 51 1 238 1 239 1 257 1 308 1 
2 1 337 1 262 1 181 1 313 2 30 1 248 1 272 1 341 1 93 1 114 2 167 1 118 1 68 1 375 1 148 1 172 1 49 1 73 1 99 1 282 1 329 1 330 1 127 1 51 1 238 1 257 1 308 1 
2 1 337 1 181 2 241 1 313 4 109 2 164 1 111 1 246 1 340 1 272 1 93 2 114 2 189 2 345 1 251 2 119 1 327 1 172 1 73 1 282 1 236 2 
2 1 337 1 181 2 262 1 241 1 109 2 313 4 243 1 30 1 164 1 111 1 340 1 272 1 363 1 341 1 189 2 93 2 94 1 114 2 167 1 345 1 251 2 118 1 119 1 375 1 327 1 172 1 49 1 73 1 150 1 282 1 236 2 51 1 238 1 239 1 257 1 308 1 
53 1 2 1 337 1 181 1 262 1 241 1 109 1 6 1 313 3 26 1 30 1 266 1 164 1 111 1 246 1 340 1 34 1 272 1 114 2 93 2 189 1 251 1 119 1 327 1 172 1 73 1 282 1 122 1 236 1 
2 3 337 3 54 1 241 4 109 8 7 1 11 2 164 4 111 4 340 5 114 6 345 4 119 4 347 1 349 1 300 1 73 3 302 1 124 1 123 1 352 1 130 1 176 1 132 3 181 21 80 1 313 41 82 1 183 1 222 4 316 3 88 1 89 1 269 1 272 3 93 20 95 1 229 1 146 1 45 4 327 5 377 1 101 1 
132 3 2 4 337 4 54 2 181 18 80 1 241 4 183 1 82 1 313 38 109 7 222 4 7 1 316 3 11 2 164 3 111 3 89 1 88 1 340 4 269 1 272 4 114 8 93 20 95 1 345 4 146 1 229 1 45 4 119 4 347 1 327 5 349 1 300 1 377 1 73 4 302 1 123 1 124 1 352 1 101 1 130 1 176 1 
132 2 2 2 337 2 54 1 181 25 80 1 241 7 183 1 82 1 313 52 109 14 222 4 7 1 316 4 11 1 164 7 111 7 89 1 340 8 269 1 272 2 114 4 93 27 95 1 345 7 146 1 229 1 45 4 119 7 347 1 327 8 349 1 300 2 377 1 149 2 73 2 302 1 124 1 352 1 101 1 130 1 176 1 
132 1 2 2 337 2 181 10 241 3 313 19 109 6 357 1 222 2 316 1 11 1 164 3 111 3 89 2 88 1 340 3 272 2 114 4 93 9 345 3 229 1 45 2 119 3 347 1 327 3 300 1 377 1 73 2 302 1 176 1 
132 2 2 3 337 3 54 2 181 12 241 3 109 4 313 26 82 1 222 2 316 2 11 2 164 2 111 2 89 1 340 2 272 3 114 6 93 14 95 1 345 2 146 1 229 1 45 4 119 3 347 2 327 3 349 1 377 1 73 3 302 1 352 1 130 1 176 1 
249 1 240 1 104 1 165 1 213 1 65 1 379 1 333 1 228 1 225 1 
78 1 185 1 
240 1 104 1 213 1 65 1 315 1 154 1 333 1 306 1 225 1 
249 1 104 1 240 1 137 1 346 1 213 1 373 1 65 1 214 1 225 1 265 2 20 1 317 1 165 1 268 1 174 1 333 1 228 1 
249 1 104 1 240 1 137 1 346 1 213 1 373 1 65 1 214 1 225 1 265 2 20 1 317 1 165 1 268 1 174 1 333 1 228 1 
249 1 104 1 240 1 137 1 346 1 213 1 373 1 65 1 214 1 225 1 265 2 20 1 317 1 165 1 268 1 174 1 333 1 228 1 
105 1 151 1 107 1 
105 1 151 1 107 1 
295 1 314 1 
107 1 295 1 314 1 
254 1 309 1 
53 2 133 1 78 1 240 1 104 1 260 1 262 2 6 2 242 1 30 2 185 1 225 1 265 1 268 1 320 1 169 1 373 1 117 1 213 1 65 1 214 1 148 1 254 1 122 2 174 1 333 1 309 1 
105 1 151 1 
107 1 295 1 314 1 
336 1 2 1 337 1 4 1 262 2 181 1 6 2 313 2 30 2 246 1 248 1 272 1 341 2 114 2 93 1 366 1 167 2 369 2 212 1 118 1 298 1 280 1 172 1 49 1 73 1 282 1 329 1 202 1 238 1 257 2 308 1 
134 1 118 1 231 1 215 1 339 1 72 1 71 1 139 1 49 1 288 1 150 1 332 1 354 1 341 2 257 2 39 2 258 1 167 2 275 1 
118 1 224 1 231 1 215 1 339 1 71 1 139 1 288 1 49 1 332 1 354 1 341 1 257 1 39 2 258 1 167 1 275 1 
159 1 177 1 134 1 118 1 232 1 49 1 127 1 341 1 14 1 238 1 257 1 308 1 167 1 275 1 
134 1 118 1 231 1 215 1 339 1 72 1 71 1 139 1 49 1 288 1 332 1 354 1 341 1 257 1 39 2 258 1 167 1 275 1 
358 1 
20 1 90 1 108 1 50 1 227 1 186 1 56 1 
136 1 108 1 287 1 28 1 186 1 268 1 227 1 188 1 364 1 41 1 64 1 253 1 70 1 20 2 21 1 174 1 155 1 
1 2 284 2 108 2 241 2 8 2 56 1 164 2 340 2 341 3 289 1 167 3 64 4 118 3 119 2 19 2 253 6 70 4 20 8 21 4 350 1 125 6 174 5 127 1 256 2 257 3 308 3 23 1 136 4 312 1 81 3 84 2 186 9 85 2 90 1 268 5 227 8 364 12 319 2 190 2 41 3 370 1 325 2 375 3 374 1 326 1 327 2 97 2 281 2 235 6 49 4 150 1 100 2 238 10 155 5 
132 1 1 2 136 2 241 2 108 2 82 1 222 1 8 1 316 1 186 8 164 2 340 2 268 1 227 5 364 6 38 1 95 1 41 1 64 2 147 1 119 2 253 3 327 2 97 1 70 2 349 1 235 5 20 5 21 2 350 1 125 5 352 1 174 1 130 1 155 1 
1 2 53 1 262 1 136 1 80 1 356 1 6 1 26 1 8 1 30 1 186 2 340 1 269 1 268 1 113 1 227 2 145 1 43 1 63 1 64 1 69 1 327 2 70 1 21 1 122 1 174 1 101 1 158 1 
136 1 64 1 108 1 70 1 56 1 186 1 20 1 21 1 90 1 227 1 
1 2 241 2 325 1 119 2 8 1 327 2 253 5 186 5 235 5 20 5 164 2 340 2 125 5 227 5 364 10 
20 1 268 1 108 1 174 1 155 1 41 1 
204 1 25 1 136 2 312 1 138 1 186 2 31 1 268 3 13 1 341 4 227 2 14 1 166 1 40 1 167 4 41 2 370 2 64 2 118 2 375 1 70 2 97 2 232 1 49 3 21 1 350 2 303 1 174 3 127 2 201 1 238 2 257 4 155 4 308 2 
53 2 2 1 337 1 181 1 262 3 356 1 313 1 6 2 26 2 243 1 30 3 248 1 272 1 341 1 363 1 114 2 167 1 118 1 375 1 148 1 216 1 172 1 49 1 73 1 282 1 122 2 127 1 51 1 238 1 257 1 239 1 308 1 
136 1 64 1 108 2 7 1 253 2 70 1 97 1 186 1 235 2 20 4 21 1 350 1 125 2 227 2 364 4 
301 1 240 1 225 1 
301 1 240 1 225 1 
240 1 165 1 116 1 309 1 225 1 
301 1 240 1 225 1 
142 1 240 1 225 1 
142 1 240 1 225 1 
142 1 240 1 225 1 
240 1 225 1 
104 1 65 1 
132 1 2 1 337 1 181 4 80 1 313 8 183 1 109 2 222 1 7 1 316 1 340 1 269 1 272 1 114 2 93 4 345 2 327 1 349 1 73 1 302 1 124 1 101 1 
132 1 2 2 337 2 181 5 80 1 285 1 241 1 183 1 313 11 109 3 222 2 7 1 316 1 111 1 340 1 269 1 272 2 114 4 93 6 345 2 119 1 327 2 349 1 300 1 73 2 302 1 124 1 101 1 
132 1 2 3 337 3 181 10 54 1 80 1 285 1 241 2 183 1 313 19 82 1 109 4 222 1 7 1 316 1 164 2 111 1 340 3 269 1 272 3 114 6 93 9 95 1 345 3 119 2 327 3 349 1 73 3 302 1 124 1 352 1 101 1 130 1 
132 1 2 3 337 3 54 1 181 7 80 1 285 1 241 2 183 1 313 17 82 1 109 5 222 1 7 1 316 1 164 1 111 2 340 2 269 1 272 3 114 6 93 10 95 1 345 3 119 2 327 3 349 1 73 3 302 1 124 1 352 1 101 1 130 1 
132 1 2 1 337 1 181 4 80 1 313 8 183 1 109 2 222 1 7 1 316 1 340 1 269 1 272 1 114 2 93 4 345 2 327 1 349 1 73 1 302 1 124 1 101 1 
132 1 2 1 337 1 181 6 241 2 313 12 82 1 109 2 222 1 316 1 164 2 111 1 340 2 272 1 114 2 93 6 95 1 345 1 119 2 327 2 349 1 73 1 302 1 352 1 130 1 
132 1 2 4 337 4 181 8 54 2 80 1 285 1 241 2 183 1 313 18 82 1 109 5 222 1 7 1 316 1 164 1 111 2 340 2 269 1 272 4 114 8 93 10 95 1 345 3 119 2 327 3 349 1 73 4 302 1 124 1 352 1 101 1 130 1 
132 1 2 4 337 4 181 7 54 2 241 3 313 16 82 1 109 6 222 1 316 1 164 2 111 3 88 1 340 2 272 4 114 8 93 9 95 1 345 3 119 3 327 3 349 1 73 4 302 1 352 1 130 1 
345 3 181 4 80 1 313 7 183 1 109 6 327 1 111 3 340 1 124 2 269 3 101 3 93 3 
132 1 2 4 337 4 181 8 54 2 80 1 241 2 183 1 313 18 82 1 109 4 222 1 7 1 316 1 164 1 111 1 88 1 340 2 269 1 272 4 114 8 93 10 95 1 345 3 119 2 327 3 349 1 73 4 302 1 124 1 352 1 101 1 130 1 
345 2 2 2 337 2 181 4 54 1 80 1 313 8 109 3 183 1 7 1 327 1 111 1 73 2 340 1 124 1 269 1 272 2 101 1 93 4 114 4 
345 2 181 3 80 1 183 1 109 2 313 6 7 1 327 1 340 1 124 1 269 1 50 1 101 1 93 3 
345 1 2 1 337 1 181 2 285 1 241 1 109 2 313 4 119 1 327 1 164 1 73 1 111 1 340 1 272 1 114 2 93 2 
132 1 345 1 181 4 241 1 313 7 109 2 222 2 119 1 316 1 327 1 164 1 300 1 111 1 340 1 93 3 
2 2 337 2 181 12 54 2 80 1 241 2 183 1 109 9 313 23 222 2 7 1 316 2 164 2 111 4 340 3 91 1 269 2 272 2 273 1 93 11 114 4 345 5 119 2 327 3 300 1 149 1 73 2 124 1 101 2 
181 1 313 1 222 1 
313 1 93 1 316 1 
2 1 345 2 337 1 181 3 285 1 241 1 313 6 109 3 325 1 119 1 327 1 164 1 73 1 111 1 340 1 272 1 114 2 93 3 
132 1 2 1 337 1 181 6 241 2 313 12 82 1 109 2 222 1 316 1 164 2 111 1 340 2 272 1 114 2 93 6 95 1 345 1 119 2 327 2 349 1 73 1 302 1 352 1 130 1 
345 1 181 3 80 1 313 6 109 2 327 1 111 1 340 1 269 1 101 1 93 3 
345 1 2 1 337 1 181 2 54 1 109 2 313 3 183 1 111 1 73 1 124 1 269 1 272 1 101 1 273 1 93 1 114 2 
2 1 345 3 337 1 63 1 181 5 80 1 109 5 313 10 327 2 73 1 111 2 302 1 340 2 269 2 272 1 101 2 114 2 93 5 
2 1 337 1 313 2 109 1 119 1 327 1 73 1 111 1 302 1 272 1 114 2 93 2 
345 1 2 1 337 1 181 2 241 1 109 2 313 4 119 1 327 1 164 1 73 1 111 1 302 1 340 1 272 1 114 2 93 2 
2 3 345 1 337 3 54 1 181 2 313 3 109 2 73 3 111 1 88 1 302 1 269 1 272 3 101 1 273 1 114 6 93 1 
132 1 2 5 337 5 54 2 181 18 80 2 285 1 241 3 183 1 286 1 313 34 109 12 222 4 7 1 316 3 164 3 111 5 88 1 340 5 269 3 272 5 273 1 114 10 93 16 345 7 323 1 294 1 119 3 327 5 300 1 73 5 302 1 124 1 101 3 
115 1 292 1 262 1 6 1 120 1 30 1 148 1 
98 1 115 1 292 1 262 1 210 1 261 1 6 1 218 1 230 1 120 1 30 1 148 1 
49 1 50 1 127 1 118 1 14 1 341 1 238 1 257 1 308 1 232 1 167 1 
53 1 262 2 6 1 118 1 375 1 30 2 148 1 49 1 122 1 127 1 51 1 341 1 238 1 380 1 257 1 239 1 308 1 167 1 
145 1 53 2 370 1 262 2 96 1 6 2 118 1 375 2 30 2 148 1 187 1 49 1 122 1 51 1 341 1 256 1 190 1 238 3 380 1 257 1 239 1 308 2 167 1 
145 1 53 2 370 1 262 2 96 1 6 2 118 1 375 2 30 2 148 1 187 1 49 1 173 1 122 1 330 1 51 1 341 2 256 1 190 1 238 3 380 1 257 2 308 2 167 2 
370 1 108 1 160 1 81 1 118 1 375 1 84 1 20 1 49 1 173 1 268 2 100 1 174 2 127 1 341 3 152 1 256 1 190 1 238 4 257 3 155 1 308 1 167 3 
370 1 108 1 81 1 118 1 375 1 84 1 20 1 49 1 173 1 268 2 100 1 174 2 127 1 341 3 256 1 190 1 319 1 238 4 257 3 155 1 308 1 167 3 
49 1 118 1 341 1 257 1 167 1 259 1 
369 1 204 1 212 1 118 2 326 1 375 1 376 1 288 1 49 3 150 1 175 1 270 1 13 1 127 2 341 7 60 1 238 3 257 6 308 2 259 1 167 7 
53 1 336 1 2 2 337 2 6 1 109 2 243 1 7 1 246 1 340 1 341 1 114 4 167 1 345 2 251 1 118 1 172 2 73 2 122 1 124 1 257 1 308 1 262 2 181 3 80 1 183 1 313 6 30 2 269 1 272 2 363 1 94 1 93 3 189 1 37 1 375 1 327 1 148 2 49 1 150 1 282 2 236 1 51 1 101 1 380 1 238 1 239 1 
133 1 136 2 108 1 312 1 81 1 84 1 186 1 56 1 85 1 90 1 268 3 227 1 341 1 319 1 167 1 41 1 64 2 19 1 70 2 281 1 20 1 21 2 100 1 174 3 127 1 238 2 257 1 155 2 
118 1 326 1 375 1 49 2 150 1 100 1 341 2 238 2 257 2 23 1 308 1 259 1 167 2 
118 1 232 1 49 1 173 1 247 1 150 1 127 1 341 4 14 1 238 1 257 4 308 1 167 4 
370 1 204 1 25 1 118 1 375 1 49 2 13 1 341 2 76 1 238 1 257 2 308 1 167 2 40 1 
49 1 332 1 127 1 118 1 341 1 231 1 257 1 215 1 39 1 167 1 
212 1 118 1 288 1 49 1 150 1 341 2 238 1 257 2 366 1 308 1 167 2 
370 1 212 1 118 2 232 1 376 1 49 2 247 1 150 1 127 1 270 1 14 1 341 5 238 3 257 4 308 2 167 5 
370 1 212 1 118 2 232 1 49 2 247 1 150 1 59 1 127 1 270 1 14 1 341 5 238 3 257 4 308 2 167 5 
53 1 262 2 6 1 118 1 375 1 30 2 148 1 49 1 122 1 330 1 127 1 51 1 341 1 238 1 380 1 257 1 308 1 167 1 
370 1 204 1 118 1 326 1 375 1 49 2 13 1 341 1 60 1 238 1 257 1 308 1 167 1 
4 1 262 1 6 1 280 1 30 1 360 1 202 1 156 1 203 1 
360 1 263 1 252 1 
360 1 226 1 156 1 148 1 203 1 
145 1 133 1 108 1 96 1 263 1 252 1 83 1 84 1 148 1 198 1 20 1 187 1 360 1 268 2 174 2 226 2 36 1 156 2 203 2 
126 1 50 1 365 1 52 1 
103 1 126 1 353 1 362 1 365 1 52 1 367 1 
353 1 128 1 162 1 
103 1 297 1 121 1 75 1 126 1 353 3 362 1 318 2 365 1 52 1 381 1 367 3 
103 1 126 1 200 1 353 2 362 1 365 1 144 1 52 1 367 2 
103 1 353 1 362 1 215 1 39 1 339 1 52 1 191 1 208 1 367 1 121 1 
103 1 126 1 353 1 362 1 52 1 367 1 121 1 
103 1 126 2 353 1 362 1 365 1 367 1 121 1 
103 2 211 1 126 1 353 2 362 2 197 1 171 1 52 1 367 2 121 1 
103 1 335 1 66 1 348 1 121 1 126 1 200 2 353 3 362 1 365 1 191 1 52 2 367 3 
103 1 106 1 339 1 215 1 121 1 126 1 200 1 332 1 353 2 362 1 354 1 365 1 52 1 39 2 367 2 
103 2 348 1 121 1 126 1 200 2 353 4 362 2 365 1 290 1 144 1 191 1 52 2 367 4 
103 1 126 1 353 1 362 1 365 1 52 1 367 1 121 1 
103 1 297 1 348 1 75 1 126 2 304 1 200 2 353 4 362 1 318 1 365 2 191 1 52 3 367 4 
103 1 310 1 322 1 371 1 121 1 126 1 200 1 353 2 362 1 365 1 52 1 367 2 
103 1 297 2 121 1 75 1 126 1 353 3 362 1 22 1 318 2 365 1 52 1 367 3 
276 1 221 1 52 2 234 2 
103 1 62 1 353 1 362 1 367 1 121 1 
335 1 103 1 126 1 200 1 353 2 362 1 365 1 52 1 367 2 121 1 
255 1 
103 1 126 1 353 1 362 1 365 1 52 1 367 1 121 1 
103 1 335 1 121 1 200 1 126 1 353 3 362 1 318 1 365 1 52 1 367 3 
304 1 348 1 52 1 191 1 
126 1 52 1 

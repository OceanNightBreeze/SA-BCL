#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 48 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 4 2 2 226 2 96 1 354 1 227 9 97 1 28 1 180 6 274 2 317 1 79 2 9 1 129 1 340 5 187 9 42 1 105 1 242 1 86 1 266 1 243 2 285 3 245 2 377 1 328 2 140 1 291 1 
0 4 2 2 226 2 96 1 354 1 227 9 97 1 28 1 180 6 274 2 317 1 79 2 9 1 129 1 340 5 187 9 42 1 105 1 242 1 86 1 266 1 243 2 285 3 245 2 377 1 328 2 140 1 291 1 
0 5 2 2 226 2 96 1 354 1 227 10 97 1 28 1 180 7 274 2 317 1 79 2 9 1 129 1 340 6 187 10 42 1 105 1 242 1 86 1 266 1 243 2 285 4 245 2 377 1 328 2 140 1 291 1 
0 3 2 2 226 2 96 1 354 1 227 7 97 1 28 1 180 4 274 1 317 1 79 2 9 1 129 1 340 4 187 7 42 1 105 1 242 1 86 1 266 1 243 2 285 2 245 2 377 1 328 2 140 1 
79 1 0 2 9 1 2 1 129 1 340 3 96 1 187 4 42 1 354 1 227 4 285 1 243 1 245 1 180 3 328 1 274 2 291 1 
39 1 79 1 81 1 226 1 340 1 96 1 187 2 42 1 354 1 227 2 105 1 243 1 60 1 245 1 328 1 140 1 
0 1 285 1 79 2 226 1 180 1 340 2 328 2 187 3 96 1 317 1 42 1 354 1 227 3 
79 2 0 4 9 1 2 1 226 1 129 1 340 5 96 1 187 9 42 1 354 1 227 9 28 1 243 1 285 3 374 1 245 1 180 7 377 1 274 2 328 2 31 1 317 1 291 1 
79 2 0 4 9 1 2 1 226 1 129 1 340 5 96 1 187 9 42 1 354 1 227 9 28 1 243 1 285 3 374 1 245 1 180 7 377 1 274 2 328 2 31 1 317 1 291 1 
238 1 48 1 144 1 
280 1 318 2 144 1 
336 2 246 1 62 2 366 2 217 2 36 2 70 1 319 2 
22 1 116 2 115 1 70 1 296 1 357 1 228 1 150 1 333 1 361 1 34 1 36 2 231 1 319 2 364 2 336 3 337 1 155 1 237 2 154 1 366 2 281 1 343 2 41 1 368 1 241 1 373 1 372 1 192 1 246 1 62 3 217 2 380 1 194 2 197 1 222 1 21 1 
336 1 62 1 366 1 273 1 217 1 36 1 64 1 70 1 319 1 90 1 
336 1 93 1 40 1 366 1 238 1 83 1 144 1 213 1 191 1 147 1 87 1 62 1 302 1 90 1 
336 1 93 2 40 1 366 1 238 1 83 2 144 1 213 1 147 1 87 1 62 1 217 1 36 1 319 1 90 1 
59 1 93 1 136 1 177 1 83 1 
59 1 93 2 177 1 24 1 238 1 83 2 144 1 223 1 
59 1 93 1 83 1 
336 1 93 1 366 1 83 1 321 1 70 1 177 1 273 1 62 1 217 1 36 1 64 1 319 1 90 1 
144 1 
59 1 93 2 177 1 279 1 24 1 238 1 83 2 144 1 
127 1 93 5 153 1 320 2 24 1 256 1 238 1 83 5 144 1 43 1 215 1 356 2 59 2 177 2 107 1 181 1 329 1 334 2 111 1 
246 1 48 1 
91 1 336 2 366 2 246 2 62 2 248 1 217 1 36 1 319 1 
25 1 283 1 252 1 
336 1 115 1 237 1 41 1 343 1 296 1 73 1 373 1 372 1 192 1 357 1 228 1 246 1 62 1 194 1 222 1 
336 2 115 1 237 1 4 1 366 1 41 1 343 1 296 1 372 1 373 1 192 1 244 1 357 1 228 1 62 2 217 1 36 1 194 1 252 1 222 1 
336 5 94 1 4 2 366 5 244 1 135 1 246 1 62 5 248 1 217 4 302 1 33 1 36 4 319 1 
336 2 216 1 62 2 366 2 217 2 36 2 64 1 90 1 
336 3 246 1 4 1 62 3 366 3 217 3 36 3 319 1 
336 1 62 1 366 1 217 1 36 1 64 1 90 1 
91 1 336 1 62 1 366 1 248 1 217 1 36 1 319 1 90 1 
93 1 116 1 115 1 4 1 70 1 296 1 357 1 228 1 147 1 333 1 34 1 36 3 231 1 319 2 364 2 336 4 337 1 40 1 155 1 154 1 237 1 366 3 281 1 83 1 41 1 343 1 368 1 213 1 284 1 372 1 373 1 192 1 244 1 87 1 246 1 248 1 62 4 217 3 380 1 289 1 194 1 222 1 197 1 90 1 
336 2 94 1 246 1 4 1 62 2 366 2 217 1 302 1 36 1 
336 3 93 1 40 1 4 2 366 3 83 1 144 1 57 1 213 1 244 1 147 1 87 1 248 1 62 3 217 3 36 3 289 1 319 1 90 1 
336 2 25 1 4 1 366 2 248 1 62 2 217 2 36 2 252 1 319 1 
336 1 115 1 237 1 41 1 343 1 296 1 373 1 372 1 192 1 357 1 228 1 246 1 62 1 194 1 222 1 
336 1 312 1 307 1 115 1 237 1 41 1 343 1 296 1 372 1 192 1 357 1 246 1 62 1 194 1 222 1 
166 1 1 1 351 1 116 4 25 2 69 1 75 1 99 1 150 2 123 1 333 1 34 1 101 1 364 2 305 1 365 1 337 1 155 1 281 1 368 1 283 2 324 1 380 2 252 2 
336 1 87 1 216 1 62 1 366 1 217 1 36 1 90 1 
349 1 219 1 
349 1 219 1 
171 1 134 1 
171 1 134 1 
171 1 134 1 
349 1 219 1 335 1 
349 1 219 1 126 1 
349 2 254 1 255 1 171 1 219 2 134 1 
349 1 219 1 335 1 
349 1 219 1 335 1 
349 1 315 1 219 1 
349 1 315 1 219 1 
349 1 315 1 219 1 
165 1 349 1 113 1 93 1 6 1 71 1 175 1 178 1 359 1 8 1 36 2 126 1 102 1 336 2 265 1 366 2 83 1 240 1 323 1 348 1 246 1 62 2 217 2 219 1 
102 2 349 2 254 1 113 2 265 2 93 2 234 1 23 1 367 1 83 2 240 2 144 1 323 3 358 1 160 2 8 1 20 1 219 2 196 1 
243 1 2 1 245 1 
39 1 243 1 245 1 
39 1 243 3 2 2 114 1 259 1 124 1 
39 1 16 1 243 2 2 1 259 1 124 1 
39 1 243 2 2 1 259 2 124 1 
166 1 49 1 93 5 24 1 144 2 175 1 356 1 177 4 359 1 123 1 181 1 318 3 261 1 334 1 38 1 127 3 305 1 264 2 320 1 280 1 83 5 238 1 85 1 346 2 59 1 348 1 324 1 247 1 220 1 329 2 330 2 163 1 
166 3 49 2 93 9 66 1 24 1 144 5 175 4 145 1 356 2 177 7 123 3 181 1 206 1 35 1 318 9 334 2 127 8 305 3 264 6 320 2 280 3 83 9 238 1 43 1 85 1 190 5 346 6 59 6 286 1 136 5 347 1 324 3 220 2 329 6 163 3 
166 1 49 1 93 3 144 3 175 1 356 1 177 2 123 1 318 4 334 1 38 1 127 3 305 1 264 2 320 1 280 2 238 1 83 3 43 1 346 2 324 1 247 1 220 1 330 1 329 2 163 1 
166 2 49 1 93 4 144 4 175 2 145 1 356 1 177 3 123 2 206 1 318 7 334 1 38 1 127 5 305 2 264 4 320 1 280 3 238 1 83 4 43 1 346 4 347 1 324 2 247 1 220 1 330 2 329 4 163 2 
115 1 48 1 269 1 
115 1 133 1 
275 1 
192 1 357 1 115 1 
77 1 115 1 
357 1 115 1 
371 1 192 1 357 1 115 3 162 1 269 2 
310 1 116 9 314 1 353 1 69 3 298 1 146 1 53 1 7 1 150 5 123 2 101 2 305 2 130 1 369 1 44 1 380 4 381 1 
310 1 116 9 314 1 353 1 69 4 298 1 146 2 53 1 7 1 150 5 123 2 101 2 305 2 130 1 369 1 44 1 380 4 381 1 
310 1 116 9 314 1 353 1 69 3 118 1 298 1 146 1 53 1 7 1 150 5 123 2 101 2 305 2 130 1 369 1 44 1 380 4 381 1 
310 1 166 3 116 33 314 2 353 1 69 11 298 1 120 3 146 6 299 1 53 2 7 2 150 17 123 5 333 1 34 1 101 5 364 2 305 5 306 4 103 1 130 2 281 1 368 1 369 1 44 1 109 1 17 1 88 1 324 3 327 1 309 1 380 16 381 2 163 3 
310 1 143 1 116 11 314 1 69 5 353 1 298 1 272 1 146 2 53 1 7 1 123 2 150 6 333 2 34 2 101 3 364 4 305 2 103 1 281 2 130 1 368 2 44 1 380 5 381 1 
270 1 2 1 226 1 114 1 352 1 96 1 68 1 354 1 227 2 296 1 74 1 180 1 277 1 125 1 39 1 79 1 278 1 340 1 237 1 11 1 343 1 187 2 239 1 84 1 42 1 372 1 243 2 245 1 328 1 194 1 
270 1 2 1 114 1 226 1 68 1 354 1 227 3 296 1 74 1 180 2 277 1 125 1 39 1 233 1 79 1 278 1 235 1 340 1 237 1 128 1 343 1 187 3 239 1 84 1 42 1 372 1 243 2 245 1 328 1 194 1 
270 1 2 1 226 1 114 1 354 1 227 2 296 1 180 2 277 1 125 1 39 1 233 1 278 1 235 1 340 1 237 1 343 1 187 2 239 1 84 1 42 1 372 1 243 2 245 1 194 1 
270 2 79 1 115 1 226 2 128 1 237 1 187 1 41 1 343 1 84 2 296 1 227 1 267 1 372 1 76 1 357 1 161 1 30 1 328 1 54 1 183 1 194 1 125 2 
270 1 2 1 226 1 114 1 96 1 68 1 227 1 296 1 74 1 277 1 125 1 39 1 79 1 278 1 235 1 237 1 11 1 343 1 187 1 239 1 84 1 372 1 243 2 245 1 328 1 194 1 
106 1 
92 1 93 5 200 4 144 2 296 1 52 2 98 1 147 1 301 2 302 1 334 1 262 2 336 1 211 1 343 2 104 1 213 1 59 6 110 1 161 1 62 1 220 1 350 1 170 2 67 1 115 1 24 3 27 2 117 1 356 1 357 1 122 2 181 1 318 2 183 1 127 2 40 1 320 1 280 2 237 2 186 1 366 1 238 1 83 5 41 2 322 1 132 1 191 1 372 1 87 1 194 2 329 2 253 2 290 1 90 1 
93 3 200 2 24 1 98 1 147 1 302 1 336 1 40 1 279 1 366 1 211 1 83 3 104 1 213 1 191 1 59 2 87 1 110 1 62 1 290 1 253 1 90 1 
93 3 200 3 24 1 144 1 52 1 98 1 147 1 302 1 336 1 40 1 279 1 366 1 211 1 83 3 104 1 238 1 213 1 191 1 59 1 87 1 110 1 62 1 290 1 90 1 
93 3 200 3 24 1 144 1 52 1 98 1 122 1 147 1 302 1 336 1 40 1 279 1 366 1 211 1 83 3 104 1 238 1 213 1 191 1 59 2 87 1 110 1 62 1 290 1 253 1 90 1 
93 5 200 6 144 5 52 4 98 1 147 1 301 2 302 1 334 1 262 2 336 1 10 1 211 1 104 1 213 1 59 7 110 1 62 1 170 2 24 3 26 1 27 2 356 1 122 4 179 1 181 1 127 1 40 1 279 1 320 1 280 2 366 1 83 5 238 5 188 1 132 1 322 1 191 1 87 1 326 1 329 1 253 4 290 1 90 1 
93 4 200 4 144 2 52 2 98 1 147 1 301 2 302 1 334 1 262 2 336 1 211 1 104 1 213 1 59 4 110 1 62 1 350 1 170 2 24 2 27 2 356 1 122 2 181 1 318 2 127 1 40 1 320 1 280 2 366 1 83 4 238 1 132 1 322 1 191 1 87 1 329 1 290 1 253 2 90 1 
93 4 170 2 200 4 24 2 27 2 26 1 144 1 52 2 356 1 122 2 98 1 147 1 181 1 301 2 302 1 334 1 262 2 127 1 336 1 40 1 320 1 280 2 366 1 211 1 238 1 83 4 104 1 322 1 132 1 188 1 213 1 191 1 59 4 87 1 110 1 62 1 326 1 329 1 253 2 290 1 90 1 
93 4 170 2 200 4 24 2 27 2 26 1 144 1 52 2 356 1 122 2 98 1 147 1 181 1 301 2 302 1 334 1 262 2 127 1 336 1 40 1 320 1 280 2 366 1 211 1 238 1 83 4 104 1 322 1 132 1 188 1 213 1 191 1 59 4 87 1 110 1 62 1 326 1 329 1 253 2 290 1 90 1 
198 2 93 4 112 1 200 4 24 2 27 2 26 1 144 1 52 2 356 1 122 2 98 1 147 1 181 1 302 1 318 2 334 1 262 2 127 1 336 1 40 1 320 1 366 1 211 1 238 1 83 4 104 1 322 1 156 1 213 1 370 1 191 1 59 4 46 2 87 1 110 1 62 1 329 1 253 2 290 1 90 1 
93 4 170 2 200 5 24 2 27 2 26 1 144 1 52 3 356 1 98 1 122 3 147 1 179 1 181 1 301 2 302 1 334 1 262 2 127 1 336 1 40 1 320 1 280 2 366 1 211 1 238 1 83 4 104 1 322 1 132 1 188 1 213 1 191 1 59 5 87 1 110 1 62 1 326 1 329 1 290 1 253 3 90 1 
93 4 170 2 200 5 24 2 27 2 26 1 144 1 52 3 356 1 98 1 122 3 147 1 179 1 181 1 301 2 302 1 334 1 262 2 127 1 336 1 40 1 320 1 280 2 366 1 211 1 238 1 83 4 104 1 322 1 132 1 188 1 213 1 191 1 59 5 87 1 110 1 62 1 326 1 329 1 290 1 253 3 90 1 
93 4 198 2 200 4 144 1 52 2 98 1 147 1 302 1 334 1 262 2 336 1 211 1 104 1 156 1 213 1 59 4 110 1 62 1 350 1 24 2 27 2 356 1 122 2 181 1 318 2 127 1 40 1 320 1 366 1 83 4 238 1 322 1 191 1 46 2 87 1 329 1 290 1 253 2 90 1 
75 1 337 1 155 1 333 1 281 1 353 1 34 1 368 1 48 1 44 1 364 2 
166 1 331 1 168 1 116 14 25 4 69 2 271 1 202 1 120 3 146 1 150 8 123 2 333 2 32 1 34 2 101 1 231 1 364 4 305 1 306 3 337 1 155 2 281 2 368 2 283 11 241 1 109 1 246 1 324 2 309 1 380 6 252 11 163 2 
331 1 115 1 116 2 25 1 4 1 296 1 73 1 121 1 357 1 228 1 150 1 333 1 34 1 36 1 231 1 364 2 336 2 337 1 237 1 155 1 366 1 343 1 41 1 281 1 368 1 241 1 372 1 373 1 192 1 244 1 246 1 62 2 139 1 217 1 193 1 194 1 380 1 222 1 
331 1 293 2 4 1 296 2 298 1 146 1 7 1 150 11 333 3 101 4 336 3 305 4 337 3 341 1 155 3 154 2 343 1 62 3 217 1 222 2 163 2 310 1 166 2 225 2 116 22 313 2 115 2 25 6 353 1 69 5 357 2 228 2 123 4 360 1 34 3 36 1 231 1 364 6 82 2 237 1 366 1 41 1 281 3 368 3 283 6 241 1 44 1 373 2 372 2 244 1 192 2 246 1 324 2 380 11 250 1 194 1 381 1 252 6 90 1 
167 1 50 1 115 3 116 2 4 1 352 1 296 2 75 1 203 1 357 2 150 1 333 2 34 2 36 1 183 1 231 1 364 4 336 1 235 1 337 2 237 8 155 2 366 1 343 8 41 2 281 2 368 2 241 1 13 1 372 2 15 1 47 1 288 1 161 1 62 1 217 1 194 7 380 1 21 2 
166 1 331 1 116 3 25 1 69 1 123 1 150 1 333 1 34 1 101 1 36 1 319 1 364 2 336 1 305 1 337 1 155 1 366 1 281 1 368 1 283 1 324 1 248 1 378 1 62 1 217 1 380 2 252 1 163 1 
365 1 337 1 116 2 25 1 155 1 281 1 69 1 368 1 283 1 75 1 146 1 123 1 150 2 333 1 324 1 34 1 252 1 364 2 
166 1 305 1 337 1 116 2 25 1 155 1 281 1 69 1 368 1 283 1 75 1 99 1 333 1 34 1 101 1 380 2 252 1 364 2 
166 1 116 4 25 2 69 2 75 1 146 1 150 2 123 1 333 1 34 1 101 1 364 2 305 1 337 1 155 1 281 1 368 1 283 2 324 1 380 2 252 2 163 1 
365 1 337 1 116 2 25 1 155 1 281 1 69 1 368 1 283 1 15 1 146 1 123 1 150 2 333 1 324 1 34 1 252 1 364 2 
166 1 305 1 337 1 116 2 25 1 155 1 281 1 69 1 368 1 283 1 15 1 99 1 333 1 34 1 101 1 380 2 252 1 364 2 
166 1 116 4 25 2 69 2 146 1 150 2 123 1 333 1 34 1 101 1 364 2 305 1 337 1 155 1 281 1 368 1 283 2 15 1 324 1 380 2 252 2 163 1 
166 1 116 4 25 2 69 2 146 1 150 2 123 1 333 1 34 1 101 1 364 2 305 1 337 1 155 1 281 1 368 1 283 2 324 1 380 2 252 2 163 1 
116 2 115 1 296 1 357 1 228 1 150 1 333 1 34 1 231 1 364 2 336 1 337 1 154 1 237 1 155 1 343 1 41 1 281 1 368 1 241 1 372 1 373 1 192 1 246 1 62 1 194 1 380 1 222 1 
312 1 116 2 115 1 296 1 357 1 150 1 149 1 333 1 34 1 231 1 364 2 336 1 337 1 307 1 237 1 155 1 343 1 41 1 281 1 368 1 241 1 372 1 192 1 246 1 62 1 194 1 380 1 222 1 
166 1 331 1 116 4 25 2 69 2 146 1 150 2 123 1 333 1 34 1 101 1 364 2 305 1 337 1 155 1 281 1 368 1 283 2 324 1 380 2 252 2 163 1 
166 1 225 1 116 4 115 1 25 2 352 1 69 2 296 1 357 1 146 1 228 1 150 2 123 1 333 1 34 1 101 1 364 2 305 1 336 1 337 1 154 1 237 1 155 1 343 1 281 1 368 1 283 2 372 1 373 1 192 1 324 1 62 1 380 2 194 1 252 2 222 1 163 1 
166 1 331 1 116 3 25 1 69 1 146 1 123 1 150 2 333 1 207 1 34 1 36 1 319 1 364 2 305 1 336 1 337 1 155 1 366 1 281 1 368 1 283 1 324 1 248 1 62 1 217 1 380 1 252 1 163 1 
166 3 116 19 5 1 69 6 119 1 72 2 272 1 120 1 146 3 150 9 123 3 333 2 34 2 101 3 182 1 364 4 305 3 306 2 80 1 281 2 368 2 14 1 109 1 375 2 376 1 324 3 218 1 309 1 380 10 163 3 
166 2 332 1 116 26 5 2 69 4 119 1 355 1 72 1 272 1 120 2 146 2 300 1 150 14 123 3 333 3 34 3 101 2 182 1 364 6 305 2 306 2 338 1 12 1 103 2 281 3 131 1 368 3 109 2 375 4 376 2 324 3 218 1 380 12 163 3 
166 4 332 1 116 34 5 1 353 1 69 6 119 1 355 1 72 1 272 1 120 3 146 3 300 1 150 16 123 4 333 3 34 3 101 3 182 1 232 1 364 6 305 4 306 4 338 1 12 1 103 1 131 1 281 3 368 3 44 1 14 1 109 3 375 4 376 2 324 4 218 1 309 1 380 18 163 4 
166 3 332 1 116 33 5 1 353 1 69 6 119 1 355 1 72 1 272 1 120 3 146 3 300 1 150 17 123 4 333 4 34 4 101 3 182 1 232 1 364 8 305 3 306 4 338 1 12 1 103 2 131 1 281 4 368 4 44 1 14 1 109 3 375 4 376 2 324 4 218 1 309 1 380 16 163 4 
166 7 332 1 116 47 5 1 353 1 69 13 119 1 271 2 355 1 72 1 272 1 120 4 146 7 300 1 150 24 123 7 333 2 34 2 101 6 182 1 364 4 305 7 306 4 338 1 12 1 103 1 131 1 281 2 368 2 44 1 109 2 375 4 376 1 324 7 218 1 309 2 380 23 163 7 
102 1 349 1 254 1 265 1 113 1 358 1 367 1 240 1 219 1 257 1 
126 1 71 1 
102 1 292 1 349 1 265 1 113 1 212 1 303 1 240 1 219 1 
151 1 335 1 
255 1 95 1 315 1 
102 1 349 1 254 1 93 1 113 1 265 1 234 1 23 1 367 1 83 1 240 1 144 1 323 2 358 1 160 1 8 1 20 1 219 1 
102 1 349 1 254 1 93 1 113 1 265 1 234 1 23 1 367 1 83 1 240 1 144 1 323 2 358 1 160 1 8 1 20 1 219 1 
102 1 349 1 254 1 93 1 113 1 265 1 234 1 23 1 367 1 83 1 240 1 144 1 323 2 358 1 160 1 8 1 20 1 219 1 
255 1 151 1 335 1 
255 1 151 1 335 1 
95 1 315 1 
255 1 95 1 315 1 
165 1 6 1 
165 1 349 1 93 1 113 1 6 1 71 1 175 1 177 1 178 1 359 1 36 2 126 1 102 1 336 2 265 1 366 2 83 1 240 1 323 1 348 1 160 1 246 1 325 1 62 2 20 1 217 2 219 1 
331 1 115 1 116 2 173 1 296 1 203 1 357 1 150 1 333 1 34 1 152 1 231 1 37 1 364 2 336 2 337 1 237 2 155 1 366 2 343 2 281 1 368 1 241 1 372 1 89 1 288 1 62 2 380 1 194 2 382 1 21 2 
39 1 270 1 311 1 2 1 235 1 114 1 237 2 343 2 352 1 239 1 296 1 372 1 74 1 243 2 245 1 268 1 277 1 194 2 263 1 
39 1 270 1 311 1 2 1 235 1 114 1 237 1 343 1 239 1 189 1 296 1 74 1 372 1 243 2 245 1 277 1 194 1 
372 1 169 1 270 1 357 1 115 1 237 1 161 1 30 1 268 1 343 1 41 1 183 1 194 1 296 1 
39 1 270 1 311 1 2 1 235 1 114 1 237 1 343 1 239 1 296 1 372 1 74 1 243 2 245 1 268 1 277 1 194 1 263 1 
276 1 
127 1 215 1 256 1 238 1 48 1 144 1 329 1 
127 1 93 1 170 1 320 1 24 1 280 1 238 1 83 1 132 1 144 2 59 1 356 1 181 1 301 1 318 1 334 1 329 1 
92 1 93 5 293 2 256 1 294 2 144 8 296 3 204 2 55 2 304 1 334 4 260 1 264 6 305 2 339 2 210 2 343 3 215 1 59 5 346 6 108 2 18 2 220 2 221 1 163 2 269 2 166 2 115 10 24 3 352 1 356 4 357 3 77 2 123 2 181 4 29 1 230 1 318 12 127 9 40 2 320 4 237 3 280 6 238 2 41 1 83 5 133 3 371 1 372 4 192 3 324 2 379 2 194 3 329 8 
166 2 92 1 93 1 24 1 144 5 355 1 174 1 356 2 120 1 300 1 123 2 181 2 55 1 318 6 334 2 127 8 264 5 305 2 306 1 338 1 320 2 280 3 12 1 83 1 131 1 238 2 59 1 346 5 109 1 18 2 324 2 220 1 329 5 195 1 163 2 
310 1 93 1 70 1 298 1 356 1 7 1 123 2 181 1 273 1 55 1 36 1 334 1 319 1 127 2 336 1 305 1 320 1 366 1 83 1 188 1 321 1 18 2 62 1 217 1 64 1 381 1 329 2 90 1 
127 1 320 1 256 1 238 1 144 1 215 1 356 1 181 1 334 1 329 1 
166 2 127 5 264 5 305 2 293 1 280 5 144 5 346 5 18 2 123 2 324 2 55 1 318 10 329 5 163 2 
93 1 59 1 24 1 238 1 83 1 144 1 
92 2 93 3 115 1 67 1 24 2 117 1 296 1 356 2 357 1 181 1 230 1 183 1 334 2 127 2 320 2 237 4 343 4 41 2 83 3 56 1 43 1 372 1 59 4 161 1 194 4 220 2 141 1 221 2 329 2 
116 1 115 1 70 1 296 1 357 1 228 1 333 1 34 1 36 2 231 1 319 2 364 2 336 3 337 1 237 1 154 1 155 1 366 2 343 1 41 1 281 1 368 1 373 1 372 1 192 1 246 1 62 3 217 2 380 1 194 1 197 1 222 1 
127 1 264 2 92 1 320 1 280 2 130 1 238 2 144 4 346 2 356 1 181 1 318 4 220 1 329 2 334 1 
102 1 65 1 240 1 
165 1 102 1 358 1 19 1 240 1 
102 1 65 1 240 1 
102 1 65 1 240 1 
102 1 209 1 240 1 
102 1 209 1 240 1 
102 1 209 1 240 1 
102 1 240 1 
349 1 219 1 
310 1 305 2 116 10 103 1 281 2 69 4 368 2 353 1 44 1 298 1 146 2 7 1 123 2 150 5 333 2 34 2 380 5 101 2 381 1 364 4 
353 1 48 1 44 1 
166 1 305 1 116 4 281 1 69 2 368 1 146 1 123 1 150 2 333 1 324 1 362 1 34 1 101 1 380 2 163 1 364 2 
166 1 305 1 306 2 116 7 69 2 120 1 146 1 109 1 150 3 123 1 324 1 309 1 101 1 380 4 163 1 
310 1 166 2 116 20 353 1 69 5 271 1 298 1 120 2 146 2 7 1 123 4 150 10 333 1 32 1 34 1 101 3 364 2 305 4 306 2 103 1 281 1 368 1 44 1 324 2 309 1 380 10 381 1 163 2 
306 1 116 1 380 1 
120 1 116 1 150 1 
166 1 305 1 116 6 293 1 281 1 368 1 69 3 146 1 123 1 150 3 333 1 324 1 34 1 362 1 380 3 101 2 163 1 364 2 
166 2 116 12 69 2 355 1 272 1 120 1 146 1 300 1 150 6 123 2 333 1 34 1 101 1 364 2 305 2 306 1 338 1 12 1 281 1 131 1 368 1 109 1 324 2 380 6 163 2 
305 1 116 6 69 2 298 1 146 1 7 1 123 1 150 3 380 3 101 1 381 1 
310 1 116 3 103 1 281 1 69 2 368 1 353 1 344 1 44 1 146 1 7 1 150 1 333 1 34 1 101 1 380 2 381 1 364 2 
310 1 305 2 116 10 281 1 368 1 69 5 272 1 298 1 146 2 7 2 150 5 123 2 333 1 34 1 101 3 380 5 381 2 364 2 
116 2 281 1 368 1 69 1 272 1 146 1 123 1 150 2 333 1 324 1 34 1 364 2 
166 1 305 1 116 4 281 1 69 2 368 1 272 1 146 1 123 1 150 2 333 1 324 1 34 1 101 1 380 2 163 1 364 2 
116 3 103 1 281 3 368 3 69 2 344 1 14 1 272 1 146 1 7 1 150 1 333 3 34 3 380 2 101 1 381 1 364 6 
310 1 166 2 116 24 353 1 69 6 298 1 272 1 120 3 146 3 299 1 7 1 150 12 123 4 333 4 362 1 34 4 101 3 364 8 305 4 306 3 103 1 281 4 368 4 44 1 14 1 109 1 17 1 324 2 327 1 380 12 381 1 163 2 
310 1 116 10 69 3 353 1 298 1 272 1 120 1 146 1 300 1 7 1 123 2 150 5 333 1 34 1 101 2 364 2 305 2 306 1 281 1 368 1 44 1 109 1 380 5 381 1 
310 1 116 13 353 1 69 4 298 1 272 1 120 1 146 2 300 1 7 1 150 7 123 3 333 2 34 2 362 1 101 2 364 4 305 2 306 2 281 2 368 2 44 1 109 1 324 1 309 1 380 6 381 1 163 1 
310 1 166 2 116 21 353 1 69 5 355 1 298 1 272 1 120 1 146 2 300 1 7 1 150 10 123 4 333 3 362 1 34 3 101 3 364 6 305 4 306 1 338 1 12 1 103 1 281 3 131 1 368 3 44 1 109 1 324 2 380 11 381 1 163 2 
310 1 166 1 116 19 353 1 69 6 355 1 298 1 272 1 120 1 146 3 300 1 7 1 150 11 123 4 333 3 362 1 34 3 101 3 364 6 305 3 306 1 338 1 12 1 103 1 281 3 131 1 368 3 44 1 109 1 324 2 380 8 381 1 163 2 
310 1 116 10 69 3 353 1 298 1 272 1 120 1 146 1 300 1 7 1 123 2 150 5 333 1 34 1 101 2 364 2 305 2 306 1 281 1 368 1 44 1 109 1 380 5 381 1 
166 2 116 12 69 2 355 1 272 1 120 1 146 1 300 1 150 6 123 2 333 1 34 1 101 1 364 2 305 2 306 1 338 1 12 1 281 1 131 1 368 1 109 1 324 2 380 6 163 2 
310 1 166 1 116 20 353 1 69 5 355 1 298 1 272 1 120 1 146 2 300 1 7 1 150 11 123 4 333 4 362 1 34 4 101 3 364 8 305 3 306 1 338 1 12 1 103 2 281 4 131 1 368 4 44 1 109 1 324 2 380 9 381 1 163 2 
166 2 116 16 69 6 355 1 272 1 120 1 146 3 300 1 150 9 123 3 333 4 34 4 101 3 364 8 305 2 306 1 338 1 12 1 103 2 281 4 131 1 368 4 14 1 109 1 324 3 380 7 163 3 
310 1 305 1 116 5 353 1 69 4 44 1 298 1 146 2 7 2 150 2 123 1 380 3 101 2 381 2 
310 1 166 1 116 20 353 1 69 5 355 1 298 1 272 1 120 1 146 2 300 1 7 1 150 11 123 4 333 4 34 4 101 3 364 8 305 3 306 1 338 1 12 1 103 2 281 4 131 1 368 4 44 1 14 1 109 1 324 2 380 9 381 1 163 2 
336 1 94 1 246 1 62 1 366 1 302 1 158 1 
336 1 94 1 366 1 214 1 158 1 287 1 148 1 246 1 138 1 62 1 302 1 184 1 
372 1 357 1 115 1 237 1 161 1 343 1 41 1 183 1 48 1 194 1 296 1 
336 2 115 1 237 1 4 1 366 1 41 1 343 1 296 1 372 1 192 1 357 1 228 1 246 1 62 2 217 1 36 1 194 1 222 1 
336 2 115 3 237 1 4 1 366 2 343 1 213 1 296 1 372 1 192 2 357 2 77 1 228 1 87 1 246 1 379 1 62 2 217 2 36 1 194 1 221 1 222 1 90 1 
312 1 115 3 4 1 296 1 357 2 77 1 36 1 336 2 237 2 366 2 343 2 213 1 372 1 192 2 87 1 246 1 62 2 379 1 217 2 194 2 251 1 221 1 222 1 90 1 
93 2 199 1 115 4 144 1 296 1 357 1 77 1 40 1 237 3 343 3 83 2 238 1 41 1 133 1 372 1 59 1 192 1 379 1 194 3 251 1 221 1 164 1 269 1 
93 2 40 1 115 4 237 3 210 1 41 1 238 1 83 2 343 3 133 1 144 1 296 1 372 1 192 1 59 1 357 1 77 1 379 1 194 3 251 1 221 1 269 1 
372 1 50 1 237 1 343 1 194 1 296 1 
167 1 50 1 235 1 115 3 237 7 352 1 41 2 343 7 13 1 296 2 345 1 371 1 372 3 203 1 192 1 357 2 47 1 205 1 363 1 194 6 21 1 
331 1 4 1 296 1 298 1 146 1 7 1 150 4 333 2 101 2 336 2 305 2 337 2 341 1 154 1 155 2 343 1 62 2 217 1 222 1 310 1 225 1 313 1 115 1 116 8 352 1 353 1 69 3 357 1 228 1 123 2 34 2 36 1 37 1 364 4 237 1 366 1 281 2 368 2 44 1 373 1 372 1 192 1 246 1 194 1 380 4 381 1 90 1 
93 3 115 2 24 1 256 1 294 1 144 1 356 2 177 1 204 1 181 2 230 1 334 2 127 1 40 1 320 2 237 1 210 1 238 1 41 1 83 3 343 1 133 1 215 1 59 2 108 1 194 1 329 1 269 1 
50 1 115 2 237 2 352 1 343 2 296 1 371 1 372 2 192 1 357 1 194 2 304 1 269 1 
115 1 237 4 41 1 343 4 352 1 282 1 296 1 372 1 357 1 161 1 194 4 183 1 251 1 
224 1 115 1 237 2 343 2 296 1 345 1 45 1 297 1 372 2 192 1 357 1 363 1 194 2 221 1 
39 1 372 1 243 1 245 1 237 1 343 1 41 1 277 1 194 1 296 1 
235 1 115 1 237 2 352 1 343 2 296 1 372 1 203 1 357 1 194 2 152 1 
167 1 115 3 237 5 41 1 343 5 352 1 282 1 13 1 296 2 372 2 203 1 357 2 161 1 183 1 194 4 221 1 
167 1 115 3 237 5 41 1 343 5 352 1 282 1 295 1 296 2 372 2 203 1 357 2 161 1 183 1 194 4 221 1 
336 2 312 1 115 1 237 1 4 1 366 1 41 1 343 1 296 1 372 1 192 1 357 1 246 1 62 2 217 1 36 1 194 1 222 1 
115 1 237 1 343 1 296 1 345 1 371 1 372 2 192 1 357 1 205 1 363 1 194 1 221 1 
61 1 100 1 236 1 342 1 246 1 
93 2 208 1 40 1 342 1 236 2 238 1 83 2 172 1 144 1 213 1 159 1 177 1 61 2 147 1 87 1 100 2 246 1 289 1 90 1 
336 1 236 1 342 1 366 1 173 1 61 1 89 1 62 1 382 1 
208 1 342 1 172 1 
340 1 42 1 48 1 354 1 
79 1 340 1 328 1 187 1 42 1 354 1 227 1 
226 1 125 1 227 1 
79 1 185 1 3 1 340 1 96 1 187 3 42 1 354 1 227 3 258 1 328 1 140 2 
79 1 340 1 180 1 274 1 328 1 187 2 42 1 354 1 227 2 
79 1 0 1 2 1 129 1 340 1 96 1 187 1 227 1 243 1 245 1 328 1 
79 1 340 1 328 1 187 1 96 1 42 1 227 1 
79 1 328 1 187 1 96 1 42 2 354 1 227 1 
79 2 340 1 96 1 187 2 42 1 227 2 308 1 176 1 328 2 63 1 
28 1 0 1 285 1 79 1 340 2 180 2 377 1 328 1 187 3 96 1 42 1 354 1 227 3 
39 1 79 1 2 1 114 1 340 1 96 1 187 2 42 1 354 1 227 2 243 2 245 1 180 1 328 1 142 1 
0 1 285 1 79 2 340 2 180 2 274 1 328 2 187 4 96 1 42 1 354 1 291 1 227 4 
79 1 340 1 328 1 187 1 96 1 42 1 354 1 227 1 
78 1 185 1 79 1 0 1 3 1 340 3 187 4 42 2 354 2 227 4 285 1 180 2 328 1 140 1 
79 1 340 1 96 1 187 2 42 1 157 1 354 1 227 2 374 1 180 1 328 1 229 1 
185 1 79 1 3 2 340 1 51 1 96 1 187 3 42 1 354 1 227 3 328 1 140 2 
58 2 316 1 340 2 201 1 
79 1 328 1 249 1 187 1 96 1 227 1 
28 1 79 1 340 1 180 1 328 1 187 2 96 1 42 1 354 1 227 2 
137 1 
79 1 340 1 328 1 187 1 96 1 42 1 354 1 227 1 
79 1 340 1 96 1 187 3 42 1 354 1 227 3 28 1 180 1 328 1 140 1 
78 1 0 1 285 1 340 1 
340 1 42 1 

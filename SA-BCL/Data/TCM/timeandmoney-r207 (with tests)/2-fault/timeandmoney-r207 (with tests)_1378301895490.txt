#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
306 1 289 1 237 1 238 4 239 1 292 1 98 9 260 1 356 5 207 2 261 1 309 1 281 1 264 1 375 2 163 7 165 1 176 1 349 1 128 1 214 2 254 3 178 9 216 1 
306 1 289 1 237 1 238 4 239 1 292 1 98 9 260 1 356 5 207 2 261 1 309 1 281 1 264 1 375 2 163 7 165 1 176 1 349 1 128 1 214 2 254 3 178 9 216 1 
306 1 289 1 238 1 98 3 356 2 207 2 309 1 163 1 128 1 214 2 254 1 178 3 216 1 
306 1 238 4 239 1 98 9 260 1 183 1 207 2 309 2 261 1 281 1 264 2 242 1 163 6 127 1 214 2 128 1 349 2 216 1 289 1 292 2 356 5 131 1 195 1 375 2 92 1 176 1 254 3 178 9 
306 1 238 4 239 1 98 9 260 1 183 1 207 2 309 2 261 1 281 1 264 2 242 1 163 6 127 1 214 2 128 1 349 2 216 1 289 1 292 2 356 5 131 1 195 1 375 2 92 1 176 1 254 3 178 9 
306 1 238 5 239 1 98 10 260 1 183 1 207 2 309 2 261 1 281 1 264 2 242 1 163 7 127 1 214 2 128 1 349 2 216 1 289 1 292 2 356 6 131 1 195 1 375 2 92 1 176 1 254 4 178 10 
306 1 238 3 239 1 98 7 183 1 207 2 309 2 261 1 281 1 264 2 242 1 163 4 127 1 214 2 128 1 349 2 216 1 289 1 292 2 356 4 131 1 195 1 375 1 92 1 176 1 254 2 178 7 
306 1 289 1 238 2 98 4 292 1 260 1 356 3 207 1 281 1 264 1 375 2 163 3 176 1 349 1 128 1 214 1 254 1 178 4 
306 1 289 1 98 2 356 1 207 1 309 1 52 1 264 1 92 1 127 1 8 1 368 1 128 1 214 1 349 1 57 1 178 2 
30 1 155 1 122 1 133 1 90 1 61 1 298 1 211 1 190 1 192 1 245 1 35 1 95 1 235 1 
186 1 
155 2 298 1 40 1 337 1 185 1 186 1 192 2 203 1 
334 1 85 2 155 5 360 2 337 1 355 2 307 1 186 1 173 1 174 1 22 1 252 1 102 1 298 2 231 1 40 2 192 5 202 1 203 1 
337 1 15 1 186 1 
204 2 330 1 186 1 
305 1 90 2 30 2 95 2 35 2 245 1 133 2 235 2 
305 1 30 2 255 1 97 1 280 1 47 1 71 1 340 1 283 1 345 1 6 1 35 2 245 1 80 2 169 1 13 1 108 1 218 1 220 1 372 1 322 1 373 1 132 1 133 3 135 1 38 1 90 2 374 2 136 2 27 2 232 1 233 1 114 1 151 2 95 3 44 1 235 2 
90 1 30 1 61 1 190 1 95 1 35 1 245 1 133 1 122 1 235 1 
279 1 155 1 337 1 186 1 295 1 133 1 363 1 343 1 190 1 192 1 35 1 95 1 103 1 11 1 
30 1 155 2 337 1 186 1 295 1 133 1 363 1 90 1 190 1 192 2 35 1 95 1 103 1 11 1 235 1 
155 1 298 1 40 1 150 1 192 1 
155 2 298 1 40 1 337 1 186 1 192 2 10 1 203 1 
155 1 40 1 192 1 
305 2 117 1 30 1 133 2 110 1 90 1 35 2 95 2 235 1 
24 1 36 1 259 1 
305 1 218 1 255 1 13 1 194 1 322 1 71 1 340 1 373 1 132 1 133 1 374 1 136 1 27 1 232 1 95 1 
305 1 15 1 
13 1 255 1 218 1 322 1 373 1 340 1 71 1 132 1 240 1 133 2 90 1 374 1 24 1 136 1 27 1 232 1 177 1 35 1 95 2 235 1 
279 1 305 1 30 1 184 1 240 2 133 5 364 1 110 1 90 4 213 1 35 5 95 5 177 1 235 4 
268 1 90 2 61 1 190 1 95 2 35 2 133 2 235 2 
305 1 30 1 90 3 95 3 35 3 240 1 133 3 235 3 
90 1 61 1 190 1 95 1 35 1 133 1 235 1 
117 1 110 1 90 1 30 1 190 1 95 1 35 1 133 1 235 1 
305 1 30 2 255 1 206 1 155 1 97 1 280 1 47 1 340 1 71 1 240 1 363 1 345 1 190 1 192 1 35 3 245 1 80 1 103 1 11 1 13 1 218 1 220 1 372 1 322 1 373 1 132 1 295 1 133 4 135 1 110 1 38 1 90 3 374 1 136 1 27 1 232 1 114 1 151 2 28 1 95 4 177 1 44 1 235 3 
305 1 279 1 90 1 213 1 95 2 35 2 240 1 133 2 235 1 
30 1 155 1 186 1 295 1 240 2 133 3 363 1 110 1 90 3 190 1 192 1 28 1 177 1 35 3 95 3 103 1 43 1 11 1 235 3 
30 1 36 1 240 1 133 2 110 1 90 2 24 1 35 2 95 2 235 2 
305 1 218 1 255 1 13 1 71 1 340 1 373 1 322 1 132 1 133 1 374 1 136 1 27 1 232 1 95 1 
305 1 255 1 13 1 71 1 340 1 373 1 322 1 133 1 5 1 124 1 374 1 136 1 27 1 232 1 95 1 
47 1 259 2 76 1 345 1 53 1 212 1 56 1 243 1 80 4 248 1 220 2 36 2 372 1 323 1 38 1 229 1 24 2 276 1 114 1 233 2 151 2 44 1 
268 1 90 1 190 1 95 1 35 1 133 1 11 1 235 1 
314 1 171 1 311 1 
112 1 314 2 171 2 376 1 1 1 251 1 
314 1 171 1 
314 1 171 1 
1 1 251 1 
1 1 251 1 
1 1 251 1 
314 1 171 1 100 1 
314 1 171 1 100 1 
314 1 171 1 100 1 
314 1 171 1 377 1 
314 1 171 1 377 1 
314 1 171 1 377 1 
250 1 335 1 155 2 171 2 361 1 70 2 186 1 146 1 342 2 21 1 147 2 51 3 314 2 376 1 64 2 175 2 285 1 192 2 9 1 
305 1 46 1 45 1 153 1 58 1 155 1 171 1 70 1 133 2 342 1 311 1 21 1 147 1 51 1 90 2 314 1 175 1 42 1 192 1 234 1 95 2 35 2 66 1 235 2 
264 1 292 1 349 1 
52 1 264 1 349 1 
52 1 77 1 264 3 275 1 292 2 312 1 
160 1 52 1 77 1 264 2 275 1 292 1 
52 1 77 2 264 2 275 1 292 1 
204 3 29 1 155 5 360 1 119 1 337 1 307 1 339 1 186 2 72 1 121 2 187 1 313 1 53 1 317 2 164 1 192 5 248 1 288 2 85 1 58 1 355 1 323 1 252 3 298 4 40 1 276 1 330 1 42 1 234 1 202 2 203 1 
334 1 204 9 29 2 155 9 360 2 337 1 338 1 339 1 307 1 186 5 72 3 121 6 187 2 53 3 317 6 192 9 248 3 85 2 58 4 221 5 109 1 355 2 323 3 325 1 230 1 252 8 298 7 40 6 150 5 276 3 330 3 331 1 202 6 379 1 203 1 
334 1 204 4 29 1 155 3 360 1 119 1 337 1 186 3 72 1 121 2 187 1 313 1 53 1 317 2 192 3 248 1 288 1 85 1 58 1 355 1 323 1 252 3 298 2 276 1 330 2 202 2 
204 7 334 1 29 1 155 4 360 1 119 1 337 1 186 4 72 2 121 4 187 1 313 1 53 2 317 4 192 4 248 2 288 2 85 1 58 2 109 1 355 1 323 2 252 5 298 3 276 2 330 3 331 1 202 4 379 1 
126 1 
297 1 15 1 322 1 
107 1 322 1 
13 1 322 1 373 1 
18 1 322 1 
13 1 322 1 
297 2 13 1 322 3 373 1 303 1 20 1 
106 1 359 1 290 2 220 3 308 1 323 1 224 1 74 1 296 1 241 3 196 1 189 1 276 1 233 4 200 1 80 7 302 1 333 2 
179 1 359 1 308 1 72 3 73 4 74 2 344 1 345 1 241 8 53 3 167 1 168 1 80 31 248 3 82 3 106 5 249 1 84 1 290 3 220 15 320 1 372 1 224 2 323 4 296 2 38 1 196 2 276 4 114 1 233 16 151 2 200 1 302 1 333 3 
359 1 308 1 74 1 210 1 345 2 241 4 167 1 80 9 106 1 290 2 220 4 372 2 323 1 224 1 87 1 296 1 38 2 196 1 276 1 114 2 233 5 151 4 200 1 333 3 
106 1 359 1 290 2 220 3 308 1 323 1 224 1 74 1 296 1 241 3 196 1 276 1 233 4 200 1 80 7 302 1 333 2 
106 1 359 1 290 2 220 3 308 1 323 1 224 1 74 1 296 1 241 3 196 1 276 1 233 4 200 1 80 7 302 1 333 2 
255 1 98 1 207 1 309 2 71 1 263 2 316 1 315 1 214 1 13 1 17 2 145 2 322 1 37 1 273 1 374 1 27 1 136 1 232 1 329 1 94 1 139 1 178 1 
255 1 258 1 98 1 207 1 50 1 157 1 309 1 341 1 312 1 263 1 52 1 264 2 366 1 349 1 214 1 128 1 292 1 145 1 17 1 374 1 27 1 136 1 138 1 299 1 232 1 178 1 
306 1 255 1 258 1 98 2 207 1 50 1 157 1 309 1 312 1 263 1 52 1 264 2 163 1 366 1 166 1 349 1 214 1 128 1 289 1 292 1 356 1 145 1 17 1 374 1 27 1 136 1 138 1 299 1 232 1 178 2 
306 1 255 1 258 1 98 3 207 1 157 1 309 1 341 1 312 1 263 1 52 1 264 2 163 2 366 1 349 1 214 1 289 1 292 1 356 1 145 1 17 1 374 1 27 1 136 1 138 1 299 1 232 1 329 1 178 3 278 1 
306 1 255 1 258 1 98 2 309 1 341 1 312 1 263 1 52 1 264 2 163 2 366 1 349 1 289 1 292 1 356 1 145 1 17 1 374 1 27 1 136 1 138 1 232 1 178 2 278 1 
365 1 
236 1 279 1 182 1 337 1 186 1 343 1 190 1 191 3 192 4 103 1 11 1 286 2 351 1 355 1 295 1 357 1 252 1 113 1 301 3 202 1 203 2 155 4 360 1 307 1 208 2 363 1 123 2 75 1 35 1 367 2 85 1 130 3 371 1 172 1 133 1 227 5 89 1 274 1 40 5 327 1 330 2 95 1 
279 1 236 1 155 4 360 1 337 1 182 1 307 1 186 1 208 2 363 1 123 2 343 1 75 1 190 1 192 4 191 3 367 2 35 1 103 1 286 2 11 1 351 1 85 1 130 3 355 1 371 1 172 1 295 1 133 1 357 1 227 5 252 1 89 1 274 1 113 1 40 5 327 1 330 2 95 1 301 3 202 1 203 2 
279 1 336 2 182 1 337 1 140 2 186 1 343 1 190 1 192 4 191 2 103 1 11 1 286 2 351 1 355 1 295 1 357 1 252 1 301 2 202 1 304 1 203 2 204 2 155 4 360 1 307 1 363 1 123 2 75 1 35 1 85 1 130 2 219 1 172 1 133 1 227 4 89 1 40 4 95 1 
279 1 337 1 182 1 186 2 343 1 190 1 191 2 192 5 103 1 286 2 11 1 287 1 351 1 13 1 355 1 295 1 357 1 252 2 113 1 27 2 301 2 202 2 115 1 203 3 204 2 29 1 155 5 255 1 360 1 307 1 208 2 71 2 363 1 123 2 75 1 315 1 318 1 367 2 35 1 85 1 219 1 130 2 322 1 172 1 133 1 227 4 89 1 374 2 39 1 40 6 136 2 232 1 330 2 139 1 95 1 
279 1 155 3 182 1 185 1 363 1 343 1 75 1 190 1 192 3 191 1 35 1 103 1 11 1 351 1 172 1 295 1 133 1 227 2 89 1 40 2 95 1 203 1 
279 1 155 3 182 1 337 1 185 1 186 1 363 1 343 1 75 1 190 1 192 3 35 1 103 1 11 1 351 1 130 1 172 1 295 1 133 1 227 3 89 1 40 1 95 1 203 1 
279 1 155 3 182 1 337 1 185 1 186 1 363 1 343 1 75 1 190 1 192 3 191 1 35 1 103 1 11 1 351 1 130 1 172 1 295 1 133 1 227 3 89 1 40 2 95 1 301 1 203 1 
236 1 279 1 155 5 154 1 360 1 337 5 182 1 307 1 185 1 208 2 186 5 363 1 123 2 343 1 75 1 190 1 192 5 191 4 367 2 35 1 103 1 286 2 11 1 351 1 85 1 130 4 355 1 371 1 172 1 295 1 133 1 357 1 227 6 252 1 89 1 274 1 113 1 40 7 327 1 330 2 95 1 301 4 202 1 203 3 
279 1 182 1 337 1 186 2 343 1 190 1 192 4 191 2 103 1 11 1 286 2 351 1 355 1 295 1 357 1 252 1 113 1 301 2 202 1 203 2 204 2 155 4 360 1 307 1 208 2 363 1 123 2 75 1 35 1 367 2 85 1 130 2 219 1 172 1 133 1 227 4 89 1 40 4 330 2 95 1 
279 1 155 4 360 1 337 1 182 1 307 1 186 1 208 2 363 1 123 2 343 1 75 1 190 1 191 2 192 4 367 2 35 1 103 1 286 2 11 1 351 1 85 1 130 2 355 1 371 1 172 1 295 1 133 1 357 1 227 4 252 1 89 1 274 1 113 1 40 4 327 1 330 2 301 2 95 1 202 1 203 2 
279 1 155 4 360 1 337 1 182 1 307 1 186 1 208 2 363 1 123 2 343 1 75 1 190 1 191 2 192 4 367 2 35 1 103 1 286 2 11 1 351 1 85 1 130 2 355 1 371 1 172 1 295 1 133 1 357 1 227 4 252 1 89 1 274 1 113 1 40 4 327 1 330 2 301 2 95 1 202 1 203 2 
279 1 204 2 336 2 155 4 360 1 337 1 182 1 307 1 186 1 140 2 363 1 123 2 343 1 75 1 162 1 190 1 191 2 192 4 35 1 103 1 286 2 11 1 351 1 85 1 130 2 355 1 172 1 295 1 133 1 357 1 227 4 252 1 89 1 40 4 327 1 93 1 301 2 95 1 202 1 203 2 304 1 
255 2 97 1 181 1 47 2 71 2 240 1 341 1 345 2 315 1 79 1 166 1 35 1 80 2 217 1 169 1 108 2 13 2 220 1 322 3 372 2 133 1 226 1 229 1 38 2 90 1 374 7 27 8 136 8 328 1 232 2 114 2 198 1 233 1 151 4 378 1 95 1 139 1 235 1 44 2 
30 1 47 1 259 1 72 1 345 1 53 1 35 1 80 3 246 1 248 1 86 1 220 2 36 1 372 1 323 1 133 1 110 1 38 1 90 1 24 1 276 1 114 1 233 1 151 2 95 1 235 1 44 1 
305 2 359 1 47 1 259 1 308 1 345 1 241 2 80 6 290 1 220 3 15 1 36 1 372 1 224 1 323 1 38 1 229 1 24 1 196 1 276 1 114 1 233 3 151 2 200 1 333 2 44 1 
305 1 97 1 47 1 259 11 72 2 73 3 345 2 241 1 53 2 267 1 168 1 193 1 80 14 246 1 248 1 106 1 82 3 169 1 249 1 129 1 220 6 369 1 36 4 372 2 323 1 38 2 24 11 276 2 114 2 233 8 151 4 44 2 
106 1 47 1 36 1 259 1 372 1 229 1 38 1 76 1 345 1 241 1 24 1 53 1 276 1 114 1 233 2 151 2 80 2 44 1 
220 2 47 1 36 1 259 1 372 1 323 1 229 1 38 1 345 1 24 1 212 1 114 1 151 2 80 2 44 1 248 1 
47 1 259 2 72 1 345 1 53 1 80 4 248 1 220 2 36 2 372 1 323 1 38 1 229 1 24 2 276 1 233 2 114 1 151 2 44 1 
106 1 47 1 36 1 259 1 372 1 38 1 76 1 345 1 241 1 24 1 53 1 276 1 114 1 233 2 378 1 151 2 80 2 44 1 
220 2 47 1 36 1 259 1 372 1 323 1 38 1 345 1 24 1 212 1 114 1 378 1 151 2 80 2 44 1 248 1 
47 1 259 2 72 1 345 1 241 1 53 1 80 4 248 1 106 1 220 2 36 2 372 1 323 1 38 1 24 2 276 1 233 2 114 1 151 2 378 1 44 1 
220 2 47 1 36 2 259 2 372 1 72 1 323 1 38 1 345 1 24 2 53 1 276 1 114 1 233 2 151 2 80 4 248 1 44 1 
305 1 255 1 97 1 47 1 340 1 71 1 345 1 80 2 169 1 13 1 218 1 220 1 373 1 322 1 372 1 132 1 133 1 135 1 38 1 374 1 27 1 136 1 232 1 233 1 114 1 151 2 95 1 44 1 
305 1 255 1 97 1 156 1 47 1 340 1 71 1 5 1 124 1 345 1 80 2 169 1 13 1 220 1 373 1 322 1 372 1 133 1 38 1 374 1 27 1 136 1 232 1 233 1 114 1 151 2 95 1 44 1 
47 1 259 2 72 1 345 1 53 1 80 4 246 1 248 1 220 2 36 2 372 1 323 1 38 1 24 2 276 1 233 2 114 1 151 2 44 1 
255 1 47 1 259 2 340 1 72 1 345 1 53 1 78 1 166 1 80 4 248 1 218 1 13 1 220 2 36 2 373 1 322 1 372 1 323 1 132 1 133 1 135 1 38 1 374 1 24 2 27 1 136 1 276 1 232 1 233 2 114 1 151 2 95 1 44 1 
30 1 47 1 259 1 72 1 33 1 345 1 241 1 53 1 35 1 80 3 246 1 248 1 106 1 220 1 36 1 372 1 323 1 133 1 110 1 38 1 90 1 24 1 276 1 114 1 233 2 151 2 95 1 235 1 44 1 
305 1 255 1 97 1 47 1 99 1 340 1 71 1 240 1 345 1 55 1 35 1 80 2 246 1 169 1 13 1 218 1 220 1 14 1 194 1 36 1 322 1 373 1 372 1 132 1 133 2 38 1 374 1 90 1 27 1 136 1 232 1 114 1 233 1 151 2 95 2 177 1 44 1 235 1 
255 1 97 1 48 1 47 2 259 3 72 1 340 1 71 1 240 1 345 2 241 1 53 1 78 1 142 1 35 1 80 7 246 1 248 1 13 1 218 1 220 4 36 3 322 1 373 1 372 2 323 1 132 1 133 2 135 1 38 2 90 1 374 1 24 3 136 1 27 1 276 1 232 1 233 3 300 1 114 2 151 4 95 2 177 1 333 1 67 1 44 2 235 1 
0 1 118 1 256 1 72 2 73 2 210 1 345 2 241 1 53 2 244 1 168 1 80 13 248 2 82 1 106 1 269 1 249 1 353 1 220 7 294 1 372 2 323 2 38 2 276 2 114 2 233 6 151 4 96 1 
118 1 256 1 257 1 72 3 310 1 73 2 210 1 345 3 241 3 53 3 244 4 167 2 80 26 168 2 248 2 12 1 106 2 82 2 83 1 353 1 220 12 16 1 294 2 19 1 372 3 223 1 323 2 38 3 276 3 114 3 233 14 151 6 333 1 96 2 
0 1 345 3 241 6 53 4 244 4 248 4 106 4 12 1 249 1 290 1 353 1 16 1 294 2 19 1 196 1 114 3 151 6 200 1 118 1 359 1 257 1 256 1 308 1 72 4 73 4 310 1 210 1 167 1 80 41 168 3 82 3 83 1 170 1 220 21 372 3 223 1 323 5 224 1 38 3 276 5 233 20 96 1 333 2 
0 1 345 4 241 5 53 4 244 4 248 3 106 3 12 1 249 1 290 1 353 1 16 1 294 2 19 1 196 1 114 4 151 8 200 1 118 1 359 1 257 1 256 1 308 1 72 4 73 4 310 1 210 1 167 2 80 38 168 3 82 3 83 1 170 1 220 18 372 4 223 1 323 4 224 1 38 4 276 5 233 20 96 1 333 2 
359 1 118 1 256 1 257 1 308 1 72 4 310 1 73 3 210 1 345 2 241 4 53 4 244 4 167 1 168 2 80 37 248 4 12 1 106 2 82 2 83 1 249 1 290 1 353 1 220 19 16 1 294 1 19 1 372 2 223 1 224 1 323 5 38 2 196 1 276 5 114 2 233 18 151 4 200 1 333 2 96 1 
147 1 250 1 314 1 171 1 376 1 175 1 70 1 146 1 326 1 342 1 
66 1 311 1 
147 1 314 1 63 1 171 1 272 1 175 1 70 1 7 1 342 1 
250 1 335 1 155 1 171 1 70 1 186 1 146 1 342 1 21 1 147 1 51 2 314 1 376 1 64 1 175 1 285 1 192 1 9 1 
250 1 335 1 155 1 171 1 70 1 186 1 146 1 342 1 21 1 147 1 51 2 314 1 376 1 64 1 175 1 285 1 192 1 9 1 
250 1 335 1 155 1 171 1 70 1 186 1 146 1 342 1 21 1 147 1 51 2 314 1 376 1 64 1 175 1 285 1 192 1 9 1 
112 1 100 1 144 1 
112 1 100 1 144 1 
377 1 346 1 
112 1 377 1 346 1 
46 1 153 1 
305 1 45 1 46 1 153 1 155 1 70 1 342 1 311 1 51 1 314 1 192 1 35 2 9 1 58 1 171 1 133 2 88 1 147 1 90 2 298 1 64 1 175 1 42 1 95 2 234 1 66 1 235 2 
100 1 144 1 
112 1 377 1 346 1 
255 1 97 1 47 1 345 1 35 2 80 2 246 1 350 1 169 1 13 1 319 1 108 2 354 1 291 1 220 1 322 1 372 1 133 2 226 1 38 1 374 2 91 1 27 2 136 2 232 1 114 1 198 1 233 1 151 2 95 2 44 1 
255 1 13 1 145 1 322 1 71 1 4 1 273 1 374 1 315 1 136 1 27 1 232 1 284 1 139 1 
205 1 255 1 258 1 292 1 157 1 145 1 262 1 4 1 341 1 312 1 52 1 374 1 264 2 136 1 27 1 138 1 232 1 349 1 
205 1 255 1 258 1 292 1 157 1 145 1 262 1 4 1 341 1 312 1 52 1 374 2 264 2 136 2 27 2 138 1 232 1 166 1 349 1 
255 1 258 1 292 1 157 1 145 1 262 1 341 1 312 1 52 1 374 1 264 2 136 1 27 1 138 1 232 1 201 1 349 1 
23 1 
305 1 30 2 255 1 97 1 280 1 47 1 71 1 340 1 345 1 35 2 245 1 80 1 218 1 13 1 220 1 372 1 373 1 322 1 132 1 133 3 135 1 38 1 374 1 90 2 27 1 136 1 232 1 114 1 151 2 95 3 235 2 44 1 
204 4 85 1 290 1 29 1 360 1 355 1 337 2 307 1 186 4 121 2 252 1 317 2 330 2 202 2 287 1 
85 1 360 1 355 1 337 1 307 1 186 1 173 1 22 1 252 1 202 1 
204 4 186 2 72 1 121 2 323 1 252 2 53 1 317 2 276 1 330 2 202 2 248 1 
155 1 40 1 337 1 186 1 192 1 203 1 
334 1 29 2 255 1 155 3 360 2 69 1 307 1 71 2 159 1 315 1 318 1 192 3 287 2 85 2 13 1 355 2 59 2 322 1 252 2 374 4 253 1 40 4 27 4 136 4 232 1 139 1 202 2 115 1 203 2 
22 1 252 1 337 1 15 1 186 1 202 1 173 1 
204 1 155 1 360 1 337 1 307 1 208 1 186 2 192 1 367 1 85 1 355 1 252 1 113 1 40 1 330 1 202 1 203 1 
2 1 186 3 53 1 192 2 248 1 107 2 13 1 355 2 295 1 20 1 252 4 297 1 27 1 26 1 300 1 202 3 203 1 204 6 29 1 255 2 155 2 360 2 32 1 307 2 71 1 209 1 72 1 121 3 317 3 34 1 81 1 85 2 321 1 322 4 373 1 323 1 228 1 374 1 40 2 136 1 232 1 276 1 330 3 
116 1 204 6 29 1 155 1 257 1 360 2 337 2 307 2 186 5 72 2 310 1 121 5 73 1 53 2 317 5 192 1 168 1 287 1 81 2 248 2 82 1 83 1 85 2 355 2 16 1 223 1 323 2 252 8 40 1 137 1 276 2 330 3 332 1 202 5 203 1 
30 1 155 1 360 1 307 1 122 1 161 1 211 1 190 1 192 1 245 1 35 1 81 2 85 1 355 1 371 1 224 1 323 1 133 1 252 2 90 1 61 1 196 1 137 1 276 2 95 1 200 1 202 2 235 1 
46 1 250 1 175 1 70 1 104 1 
175 1 70 1 65 1 
175 1 70 1 65 1 
175 1 70 1 65 1 
54 1 175 1 70 1 
54 1 175 1 70 1 
54 1 175 1 70 1 
175 1 70 1 
314 1 171 1 
106 2 220 5 372 1 224 2 323 2 210 1 38 1 345 1 161 1 196 2 241 5 276 2 114 1 233 5 151 2 80 10 200 1 333 3 
106 1 372 1 210 1 38 1 345 1 241 1 53 1 276 1 114 1 233 2 151 2 80 2 
220 2 372 1 72 1 323 1 210 1 38 1 345 1 53 1 276 1 114 1 233 2 151 2 80 4 248 1 
106 1 0 1 220 2 362 1 372 3 224 1 210 1 38 3 345 3 196 1 241 2 114 3 233 1 167 1 151 6 80 3 333 1 
179 1 359 1 0 1 362 1 308 1 72 3 73 4 344 1 210 1 345 5 241 9 53 3 167 2 168 1 80 34 248 3 82 3 106 5 249 1 290 1 220 18 320 1 372 5 224 3 225 1 323 5 38 5 196 3 276 5 114 5 233 16 151 10 200 2 333 4 
359 1 308 1 73 1 210 1 345 1 241 2 80 8 168 1 82 1 290 1 220 4 223 1 372 1 323 1 224 1 38 1 196 1 276 1 114 1 233 4 151 2 200 1 333 2 
359 1 308 1 72 1 73 2 210 1 345 2 241 3 53 1 80 11 168 1 82 1 106 1 249 1 290 1 220 5 223 1 372 2 323 1 224 1 225 1 38 2 196 1 276 2 114 2 233 6 151 4 200 1 333 2 
359 1 257 1 308 1 72 2 310 1 73 1 210 1 345 3 241 4 53 2 167 1 80 19 168 1 248 2 106 1 82 1 83 1 290 1 220 10 16 1 223 1 372 3 224 1 225 1 323 3 38 3 196 1 276 3 114 3 233 9 151 6 200 1 333 3 
257 1 72 2 310 1 73 1 210 1 345 4 241 2 53 2 167 2 80 12 168 1 248 1 106 1 82 1 83 1 220 5 16 1 223 1 372 4 225 1 323 1 38 4 276 2 114 4 233 7 151 8 333 1 
359 1 308 1 73 1 210 1 345 1 241 2 80 8 168 1 82 1 290 1 220 4 223 1 372 1 323 1 224 1 38 1 196 1 276 1 114 1 233 4 151 2 200 1 333 2 
257 1 72 2 310 1 73 1 210 1 345 2 241 2 53 2 167 1 80 13 168 1 248 2 106 1 82 1 83 1 220 7 16 1 223 1 372 2 323 2 38 2 276 2 114 2 233 6 151 4 333 1 
359 1 257 1 308 1 72 2 310 1 73 1 210 1 345 4 241 5 53 2 167 2 80 18 168 1 248 1 106 2 82 1 83 1 290 1 220 8 16 1 223 1 372 4 224 1 225 1 323 2 38 4 196 1 276 3 114 4 233 10 151 8 200 1 333 3 
0 1 257 1 72 3 310 1 73 1 210 1 345 4 241 4 53 3 167 2 80 16 168 1 248 2 106 3 82 1 83 1 220 7 16 1 223 1 372 4 323 2 38 4 276 3 114 4 233 9 151 8 333 1 
106 3 359 1 220 4 308 2 323 1 224 3 196 3 241 6 276 1 233 3 80 7 200 1 333 3 
359 1 0 1 257 1 308 1 72 2 310 1 73 1 210 1 345 4 241 4 53 2 167 2 80 18 168 1 248 1 106 1 82 1 83 1 290 1 220 8 16 1 223 1 372 4 224 1 323 2 38 4 196 1 276 3 114 4 233 10 151 8 200 1 333 3 
106 1 359 1 290 1 220 4 308 1 372 2 323 1 224 1 38 2 345 2 241 3 196 1 276 1 233 4 114 2 151 4 167 1 200 1 80 8 333 2 
359 1 290 1 241 2 196 1 220 3 15 1 276 1 233 3 308 1 323 1 80 6 200 1 224 1 333 2 
106 1 220 2 372 1 72 1 323 1 225 1 38 1 345 1 241 1 53 1 276 1 114 1 233 2 151 2 80 4 248 1 
82 1 106 1 249 1 220 4 72 1 323 1 73 2 241 1 53 1 276 1 233 3 168 1 80 7 248 1 
359 1 308 1 72 2 73 2 161 1 345 1 241 8 53 2 167 1 80 25 193 1 248 2 82 2 106 4 249 1 290 1 220 12 369 1 372 1 224 2 323 5 38 1 196 2 276 5 233 13 114 1 151 2 200 2 333 4 
220 1 80 1 73 1 
82 1 233 1 80 1 
106 1 220 3 72 1 323 1 241 2 53 1 276 1 300 1 233 3 80 6 333 1 248 1 
257 1 72 2 310 1 73 1 210 1 345 2 241 2 53 2 167 1 80 13 168 1 248 2 106 1 82 1 83 1 220 7 16 1 223 1 372 2 323 2 38 2 276 2 114 2 233 6 151 4 333 1 
106 1 220 3 323 1 224 1 196 1 241 2 276 1 233 3 200 1 80 6 333 1 
106 1 359 1 220 2 362 1 308 1 372 1 224 1 38 1 345 1 241 2 196 1 233 1 114 1 167 1 151 2 80 3 333 1 
305 1 279 1 213 1 95 1 35 1 133 1 348 1 
305 1 279 1 271 1 370 1 133 1 188 1 213 1 347 1 35 1 95 1 348 1 215 1 
255 1 13 1 293 1 71 1 322 1 374 4 315 1 136 4 27 4 277 1 232 1 166 1 139 1 
352 1 13 1 255 2 180 1 59 1 373 1 322 1 324 1 374 2 148 1 25 1 136 2 27 2 232 1 
52 1 374 1 264 1 255 1 258 1 27 1 136 1 232 1 71 1 349 1 
13 1 255 1 291 1 322 1 341 1 226 1 374 2 136 2 27 2 232 1 166 1 
217 1 13 2 255 2 181 1 293 1 59 1 71 1 322 3 226 1 374 4 315 1 136 5 27 5 232 2 166 1 139 1 
217 1 13 2 255 2 293 1 59 1 101 1 71 1 322 3 226 1 374 4 315 1 136 5 27 5 232 2 166 1 139 1 
374 1 255 1 13 1 315 1 15 1 27 1 136 1 232 1 322 1 139 1 71 1 
305 1 13 1 255 1 322 1 373 1 340 1 71 1 240 1 132 1 133 2 90 1 374 1 136 1 27 1 232 1 35 1 95 2 235 1 
305 1 13 2 255 1 18 1 59 1 322 3 373 2 340 1 240 1 132 1 133 2 90 2 374 1 136 1 27 1 190 1 232 1 199 1 35 2 95 2 103 1 11 1 235 1 
305 1 255 1 340 1 240 1 124 1 190 1 35 2 103 1 11 1 13 2 59 1 18 1 373 2 322 3 133 2 374 2 90 2 27 2 136 2 277 1 232 1 199 1 95 2 235 1 
31 1 155 2 255 1 337 1 186 1 71 1 192 2 107 1 270 1 13 1 59 1 18 1 322 4 373 1 295 1 297 1 374 3 40 1 27 3 136 3 277 1 232 1 199 1 
107 1 13 1 255 1 155 2 337 1 186 1 18 1 59 1 71 1 373 1 322 4 295 1 374 3 297 1 40 1 136 3 27 3 26 1 277 1 232 1 199 1 192 2 
374 1 255 1 27 1 136 1 79 1 232 1 
217 1 108 1 13 2 255 3 180 1 181 1 71 2 373 1 322 3 324 1 341 1 141 1 226 1 20 1 374 6 79 1 136 7 27 7 328 1 232 2 166 1 
305 2 359 1 255 1 47 2 48 1 259 1 308 1 340 1 240 1 345 2 241 2 78 1 166 1 35 1 80 6 246 1 290 1 13 1 218 1 220 3 36 1 322 1 373 1 372 2 323 1 224 1 132 1 133 2 135 1 38 2 90 1 374 1 24 1 196 1 91 1 136 1 27 1 276 1 232 1 233 3 114 2 151 4 95 2 200 1 333 2 44 2 235 1 
155 3 360 2 69 1 337 1 307 2 186 1 71 1 34 1 192 3 85 2 107 1 355 2 321 1 322 2 295 1 173 1 22 1 228 1 252 1 374 1 297 1 298 1 40 2 136 1 27 1 26 1 202 1 203 1 
13 1 255 2 32 1 373 1 322 2 20 1 297 1 374 2 79 1 136 2 27 2 232 1 166 1 
305 1 13 1 255 1 322 1 373 1 340 1 71 1 240 1 133 2 124 1 90 1 374 1 136 1 27 1 232 1 35 1 95 2 235 1 
13 1 255 2 180 1 59 1 373 1 322 1 324 1 141 1 20 1 374 1 136 1 27 1 232 1 
305 1 68 1 3 1 247 1 105 1 
305 1 68 2 155 2 337 1 49 1 186 1 3 1 295 1 363 1 158 1 60 1 298 1 190 1 192 2 28 1 103 1 11 1 105 2 247 2 
68 1 319 1 354 1 3 1 133 1 35 1 95 1 105 1 350 1 
158 1 60 1 3 1 
306 1 289 1 239 1 98 3 356 1 207 1 163 1 127 1 128 1 214 1 178 3 
238 1 356 1 254 1 57 1 
289 1 356 1 
306 1 289 1 98 1 356 1 207 1 214 1 128 1 178 1 
306 2 289 2 238 1 98 4 356 3 222 1 207 1 41 1 163 2 127 1 214 1 254 1 57 1 178 4 
306 1 289 1 237 1 98 2 356 1 207 1 282 1 163 1 197 1 128 1 214 1 178 2 
306 1 289 1 98 3 356 1 207 1 222 2 41 1 143 1 127 2 128 1 214 1 178 3 
111 1 266 2 149 1 356 2 
120 1 98 1 207 1 214 1 128 1 178 1 
306 1 289 1 239 1 163 1 98 2 356 1 207 1 214 1 128 1 178 2 
358 1 
306 1 289 1 98 1 356 1 207 1 214 1 128 1 178 1 
306 1 289 1 15 1 356 1 
306 1 289 1 98 1 356 1 207 1 214 1 178 1 
263 1 309 1 178 1 
306 1 289 1 98 3 356 1 207 1 222 1 41 1 125 1 127 2 128 1 214 1 178 3 
306 1 289 1 375 1 163 1 98 2 356 1 207 1 214 1 178 2 
238 1 98 1 292 1 356 1 207 1 281 1 264 1 128 1 214 1 349 1 178 1 
289 1 98 1 356 1 207 1 214 1 128 1 178 1 
306 1 289 2 98 1 207 1 214 1 128 1 178 1 
289 1 152 1 98 2 356 1 207 2 134 1 265 1 128 1 214 2 178 2 
306 1 289 1 238 1 239 1 98 3 356 2 207 1 261 1 163 2 128 1 214 1 254 1 178 3 
306 1 289 1 98 2 292 1 356 1 207 1 312 1 52 1 264 2 62 1 163 1 128 1 214 1 349 1 178 2 
306 1 289 1 238 1 98 4 260 1 356 2 207 2 375 1 163 2 128 1 214 2 254 1 178 4 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 1 86 4 56 2 57 2 59 2 253 1 255 1 272 1 227 5 162 2 62 1 292 1 262 1 366 1 185 2 186 1 39 1 276 9 231 1 93 2 41 9 279 1 331 1 20 6 141 3 192 2 193 1 25 1 
358 1 86 4 56 2 57 2 253 1 59 2 255 1 272 1 227 5 162 2 62 1 292 1 262 1 366 1 185 2 186 1 39 1 276 9 231 1 93 2 41 9 279 1 331 1 20 6 141 3 192 2 193 1 25 1 
358 1 86 5 56 2 57 2 253 1 59 2 255 1 272 1 227 6 162 2 62 1 292 1 262 1 366 1 185 2 186 1 39 1 276 10 231 1 93 2 41 10 279 1 331 1 20 7 141 4 192 2 193 1 25 1 
358 1 86 3 56 2 57 2 253 1 59 1 255 1 272 1 227 4 162 2 62 1 292 1 262 1 366 1 185 2 186 1 39 1 276 7 231 1 93 2 41 7 279 1 20 4 141 2 192 2 193 1 25 1 
39 1 276 4 231 1 93 1 86 2 41 4 331 1 56 1 59 2 20 3 141 1 272 1 192 1 227 3 162 1 62 1 366 1 185 1 
276 2 93 1 167 1 41 2 56 1 57 1 272 1 227 1 192 1 174 1 62 1 292 1 262 1 366 1 185 1 29 1 
276 3 86 1 41 3 279 1 56 2 57 1 20 1 141 1 272 1 227 2 62 1 366 1 185 2 
86 4 106 1 56 2 57 1 253 1 59 2 272 1 227 5 162 1 62 1 366 1 185 2 39 1 276 9 231 1 93 1 41 9 279 1 331 1 20 7 141 3 193 1 192 1 121 1 
86 4 106 1 56 2 57 1 253 1 59 2 272 1 227 5 162 1 62 1 366 1 185 2 39 1 276 9 231 1 93 1 41 9 279 1 331 1 20 7 141 3 193 1 192 1 121 1 
110 1 0 1 179 1 
178 1 0 1 189 2 
309 2 156 2 129 2 363 1 180 2 173 1 222 2 107 2 
309 2 220 1 342 1 246 1 150 1 180 3 248 1 222 2 128 1 107 2 156 2 182 1 158 2 129 3 363 1 323 1 37 2 15 1 16 1 68 2 187 1 70 1 298 1 329 1 373 2 234 2 76 1 305 1 334 1 306 1 46 1 173 1 218 1 337 1 98 1 145 1 198 1 
309 1 156 1 129 1 363 1 180 1 222 1 228 1 4 1 249 1 107 1 
113 1 52 1 351 1 0 1 179 1 180 1 250 1 74 1 107 1 333 1 129 1 335 1 228 1 13 1 
309 1 113 1 52 2 0 1 179 1 180 1 222 1 250 2 74 1 107 1 156 1 333 1 129 1 228 1 13 1 
52 1 232 1 23 1 250 1 203 1 
52 2 0 1 179 1 23 1 345 1 72 1 250 2 203 1 
52 1 250 1 203 1 
309 1 52 1 180 1 222 1 4 1 249 1 250 1 107 1 156 1 23 1 363 1 129 1 228 1 131 1 
0 1 
52 2 0 1 179 1 23 1 311 1 345 1 250 2 203 1 
341 1 52 5 166 2 0 1 179 1 345 1 116 1 250 5 203 2 108 1 267 1 206 2 23 2 321 1 268 1 80 1 211 1 378 1 48 2 
110 1 173 1 
309 1 53 1 32 1 180 2 222 1 107 2 156 1 129 2 173 2 
205 1 376 1 312 1 
68 1 342 1 180 1 128 1 372 1 373 1 76 1 334 1 182 1 158 1 129 1 46 1 173 1 218 1 98 1 145 1 
309 3 156 3 135 1 129 3 180 3 173 1 222 1 107 3 
309 1 156 1 129 1 180 1 228 1 4 1 107 1 
309 1 156 1 53 1 129 1 32 1 180 1 222 1 228 1 107 1 
309 3 342 1 52 1 246 1 53 1 150 1 286 1 180 4 151 1 248 1 222 2 128 1 250 1 107 3 156 3 182 1 158 1 362 1 129 4 363 1 228 1 13 1 37 2 15 1 113 1 187 1 68 1 135 1 70 1 329 1 74 1 373 1 234 1 76 1 305 1 334 1 333 1 306 1 46 1 173 1 218 1 98 1 145 1 198 1 
309 1 156 1 135 1 129 2 180 2 173 1 335 1 136 1 107 2 
309 3 113 1 52 1 53 1 135 2 0 1 151 1 180 3 286 1 222 1 250 1 74 1 107 3 75 1 156 3 333 1 129 3 228 1 13 1 
309 2 135 1 53 1 180 2 312 1 222 1 107 2 156 2 129 2 376 1 
68 1 342 1 180 1 128 1 373 1 76 1 334 1 182 1 158 1 129 1 46 1 173 1 218 1 98 1 145 1 
68 1 180 1 128 1 373 1 281 1 76 1 334 1 182 1 158 1 129 1 46 1 173 1 61 1 98 1 145 1 
220 2 245 1 246 1 123 1 248 1 312 2 205 2 9 1 289 1 260 1 37 2 365 1 295 1 15 1 348 1 70 2 234 4 238 1 305 1 306 1 376 2 120 1 144 1 198 1 
309 1 156 1 109 1 333 1 129 1 180 1 228 1 107 1 
309 1 68 1 342 1 135 1 151 1 180 2 128 1 373 1 107 1 156 1 76 1 182 1 334 1 158 1 129 2 376 1 46 1 218 1 98 1 145 1 
309 4 135 2 53 1 296 1 18 1 180 5 151 1 136 1 222 1 107 5 156 4 129 5 335 1 173 1 
309 2 109 1 156 2 129 2 180 2 228 1 4 1 107 2 
130 1 183 1 
130 1 183 1 
175 1 82 1 
175 1 82 1 
175 1 82 1 
130 1 219 1 183 1 
130 1 219 1 183 1 
240 1 130 1 183 1 
264 1 130 2 196 1 175 1 183 2 82 1 
130 1 219 1 183 1 
284 1 130 1 183 1 
284 1 130 1 183 1 
284 1 130 1 183 1 
52 2 0 1 201 1 138 1 278 2 7 1 250 2 8 1 300 2 170 1 251 3 90 2 302 1 191 2 130 2 142 1 196 1 183 2 275 2 
309 2 52 1 180 2 1 1 250 1 251 1 107 2 90 1 156 2 129 2 130 1 183 1 132 1 275 1 353 1 42 1 300 1 190 1 302 1 301 1 191 1 21 1 173 1 240 1 
93 1 192 1 162 1 
93 1 192 1 174 1 
252 1 172 1 60 1 192 3 162 2 174 1 
252 1 60 1 192 2 162 1 119 1 174 1 
252 2 60 1 192 2 162 1 174 1 
52 5 178 1 359 2 179 1 0 2 1 1 54 1 345 1 250 5 104 2 203 1 206 1 318 1 320 1 321 2 260 1 211 1 365 1 295 1 38 1 166 1 368 2 189 3 116 3 299 1 190 1 301 1 23 4 336 1 120 1 308 1 48 1 
52 8 0 5 153 1 345 1 4 1 249 1 250 8 203 5 104 6 107 1 108 1 156 1 206 2 160 4 260 3 211 1 295 3 17 1 166 2 116 8 299 2 23 6 120 3 308 1 309 1 178 3 179 1 180 1 222 1 313 1 318 2 363 1 129 1 321 6 131 1 228 1 365 3 232 4 368 6 189 9 94 1 190 4 95 1 336 3 243 1 48 2 
52 3 178 2 359 1 179 1 0 3 250 3 104 2 108 1 206 1 318 1 320 1 321 2 260 1 365 1 38 1 295 1 166 1 368 2 189 4 116 3 299 1 190 1 23 2 336 1 120 1 48 1 
52 3 0 4 4 1 249 1 250 3 104 4 107 1 108 1 156 1 206 1 260 2 295 2 17 1 166 1 116 5 299 1 23 2 120 2 309 1 359 1 178 3 179 1 180 1 222 1 318 1 320 1 129 1 363 1 321 4 228 1 131 1 365 2 38 1 368 4 189 7 190 2 336 2 95 1 243 1 48 1 
230 1 110 1 46 1 
171 1 46 1 
283 1 
182 1 46 1 
230 2 357 1 182 1 46 3 216 1 98 1 
182 1 46 1 98 1 
46 1 259 1 
84 1 165 1 220 4 343 1 123 2 70 3 169 1 234 7 9 3 304 1 111 1 45 1 77 1 260 1 338 2 64 1 295 1 
84 1 165 1 220 4 343 1 123 2 70 3 169 1 234 7 9 3 304 1 111 1 45 1 77 1 260 1 338 2 64 1 295 1 
84 1 165 1 220 4 343 1 123 2 70 3 127 1 169 1 234 7 9 3 304 1 45 1 111 1 77 1 260 1 338 2 64 1 295 1 
84 1 83 4 220 16 343 2 246 1 123 5 248 1 6 1 9 10 111 1 37 2 260 4 64 1 365 3 184 1 212 3 295 4 15 1 133 1 349 1 165 5 70 15 40 1 263 1 169 2 234 31 304 2 45 1 77 2 336 3 78 1 120 3 338 3 198 1 
84 1 220 5 343 1 246 2 123 3 148 1 248 2 5 1 9 4 260 1 37 4 64 1 295 1 15 2 165 1 70 4 263 1 169 1 234 9 304 1 45 1 77 1 338 2 198 2 
221 1 128 1 89 1 56 1 57 1 207 1 158 1 208 1 272 1 227 1 162 1 274 1 62 1 294 1 366 1 164 1 185 1 68 1 276 2 93 1 328 1 41 2 373 1 20 1 172 1 192 2 24 1 174 1 355 1 145 1 
221 1 128 1 89 1 56 1 57 1 207 1 158 1 208 1 226 1 272 1 227 1 162 1 294 1 366 1 164 1 185 1 213 1 68 1 276 3 93 1 41 3 373 1 20 2 172 1 192 2 24 1 174 1 355 1 145 1 199 1 
221 1 128 1 89 1 57 1 158 1 208 1 226 1 272 1 227 1 162 1 294 1 366 1 164 1 213 1 68 1 276 2 93 1 41 2 373 1 20 2 172 1 192 2 24 1 174 1 145 1 
276 1 68 1 125 1 128 1 3 1 41 1 223 1 89 2 373 1 56 1 57 2 76 1 182 1 10 1 158 1 288 1 46 1 24 2 364 1 145 1 164 2 199 1 185 1 
221 1 128 1 89 1 56 1 57 1 207 1 158 1 208 1 226 1 162 1 62 1 294 1 164 1 185 1 68 1 276 1 93 1 328 1 41 1 373 1 172 1 192 2 24 1 174 1 355 1 145 1 
202 1 
52 5 51 1 0 2 152 1 345 3 154 1 250 5 203 6 103 1 107 1 287 1 206 1 10 1 158 2 258 2 63 1 13 1 291 2 211 1 112 1 113 1 166 1 68 2 351 1 115 1 19 1 116 2 299 1 74 1 266 2 76 2 26 2 122 1 178 2 177 1 179 1 180 1 87 2 361 4 128 1 223 1 182 1 129 1 321 2 273 1 228 1 189 2 277 2 373 2 333 1 46 1 335 1 145 1 340 2 48 1 
113 1 52 3 51 1 122 1 351 1 115 1 311 1 152 1 180 1 345 1 361 2 277 1 250 3 203 2 103 1 74 1 107 1 333 1 129 1 335 1 228 1 13 1 
51 1 52 3 122 1 179 1 0 1 180 1 152 1 311 1 345 1 361 3 250 3 203 1 103 1 107 1 129 1 228 1 13 1 291 1 113 1 351 1 115 1 74 1 333 1 335 1 
51 1 52 3 122 1 179 1 0 1 311 1 180 1 152 1 345 1 361 3 250 3 103 1 203 2 107 1 129 1 228 1 13 1 291 1 113 1 351 1 115 1 277 1 74 1 333 1 335 1 26 1 
52 5 51 1 0 5 152 1 345 3 247 1 250 5 203 7 103 1 107 1 287 1 206 1 11 1 258 2 63 1 13 1 291 4 211 1 113 1 166 1 351 1 115 1 116 1 74 1 266 2 26 4 122 1 178 2 126 1 179 5 180 1 311 1 87 2 361 6 129 1 321 1 228 1 277 4 371 1 333 1 335 1 379 1 48 1 340 2 
51 1 52 4 122 1 178 2 179 1 0 2 180 1 152 1 345 2 87 2 361 4 154 1 250 4 203 4 103 1 107 1 287 1 206 1 129 1 321 1 258 2 228 1 63 1 13 1 291 2 211 1 113 1 166 1 351 1 115 1 189 2 116 1 277 2 74 1 266 2 333 1 335 1 26 2 340 2 48 1 
51 1 52 4 122 1 178 2 0 1 179 1 180 1 152 1 345 2 87 2 247 1 361 4 250 4 203 4 103 1 107 1 287 1 206 1 129 1 321 1 258 2 63 1 228 1 13 1 291 2 211 1 113 1 166 1 351 1 115 1 116 1 277 2 371 1 74 1 266 2 333 1 335 1 26 2 340 2 48 1 379 1 
51 1 52 4 122 1 178 2 0 1 179 1 180 1 152 1 345 2 87 2 247 1 361 4 250 4 203 4 103 1 107 1 287 1 206 1 129 1 321 1 258 2 63 1 228 1 13 1 291 2 211 1 113 1 166 1 351 1 115 1 116 1 277 2 371 1 74 1 266 2 333 1 335 1 26 2 340 2 48 1 379 1 
200 1 51 1 52 4 122 1 0 1 179 1 180 1 152 1 345 2 361 4 88 1 250 4 203 4 103 1 107 1 287 1 206 1 129 1 321 1 258 2 228 1 13 1 291 2 211 1 113 1 166 1 351 1 69 2 115 1 189 2 116 1 277 2 371 1 354 1 74 1 333 1 375 2 335 1 26 2 340 2 48 1 
51 1 52 4 122 1 178 2 0 1 179 1 180 1 152 1 345 2 87 2 247 1 361 5 250 4 103 1 203 5 107 1 287 1 206 1 129 1 321 1 11 1 258 2 63 1 228 1 13 1 291 3 211 1 113 1 166 1 351 1 115 1 116 1 277 3 371 1 74 1 266 2 333 1 335 1 26 3 340 2 48 1 379 1 
51 1 52 4 122 1 178 2 0 1 179 1 180 1 152 1 345 2 87 2 247 1 361 5 250 4 103 1 203 5 107 1 287 1 206 1 129 1 321 1 11 1 258 2 63 1 228 1 13 1 291 3 211 1 113 1 166 1 351 1 115 1 116 1 277 3 371 1 74 1 266 2 333 1 335 1 26 3 340 2 48 1 379 1 
200 1 51 1 52 4 122 1 0 1 179 1 180 1 152 1 345 2 361 4 154 1 250 4 203 4 103 1 107 1 287 1 206 1 129 1 321 1 258 2 228 1 13 1 291 2 211 1 113 1 166 1 351 1 69 2 115 1 189 2 116 1 277 2 74 1 333 1 375 2 335 1 26 2 340 2 48 1 
84 1 220 3 343 1 246 1 123 2 312 1 248 1 205 1 110 1 9 2 289 1 37 2 260 1 64 1 15 1 295 1 70 3 234 6 305 1 306 1 376 1 45 1 77 1 173 2 338 1 198 1 
176 1 83 3 220 8 123 1 246 2 150 1 101 1 248 2 312 4 155 1 205 11 9 2 323 1 37 4 260 1 261 1 365 2 15 2 212 3 295 2 349 1 165 1 133 1 70 6 168 1 234 14 305 1 306 2 376 11 173 1 336 2 120 1 198 2 
309 1 220 1 342 1 246 1 180 2 151 1 150 1 149 1 312 1 248 1 128 1 107 1 156 1 182 1 158 1 129 2 323 1 37 2 15 1 68 1 135 1 70 1 168 1 372 1 373 1 44 1 234 2 76 1 334 1 305 1 306 1 46 1 173 1 218 1 98 1 81 1 145 1 198 1 
343 1 342 2 246 3 150 1 151 1 248 3 2 2 107 1 205 7 156 1 9 8 158 3 161 1 260 3 64 1 293 1 15 3 295 3 165 4 68 3 70 10 168 1 76 1 305 3 306 3 173 2 77 1 218 2 120 2 84 1 309 1 220 10 123 4 124 2 180 3 312 7 128 2 182 2 226 1 129 3 322 1 323 1 37 6 365 2 187 2 135 1 373 3 234 20 334 2 45 1 46 2 376 7 336 2 338 1 98 2 99 2 145 2 197 2 198 3 
309 1 220 1 246 2 31 1 180 1 150 1 248 2 128 2 223 1 204 1 107 1 156 1 35 1 182 2 158 8 10 1 226 1 129 1 289 1 209 1 274 1 323 1 37 4 15 2 68 8 135 1 70 1 298 2 373 7 234 2 76 2 305 2 140 1 306 2 46 3 194 1 241 1 145 2 198 2 
309 1 220 1 123 1 246 1 53 1 180 1 312 1 248 1 222 1 107 1 205 1 156 1 9 1 129 1 37 2 260 1 365 1 15 1 295 1 188 1 70 2 168 1 234 3 305 1 306 1 376 1 336 1 120 1 198 1 
165 1 220 2 246 1 312 1 248 1 205 1 234 2 9 1 305 1 306 1 376 1 289 1 37 2 144 1 365 1 198 1 15 1 295 1 
123 1 246 1 245 1 70 2 312 1 248 1 205 1 234 2 9 1 305 1 306 1 376 1 289 1 120 1 37 2 260 1 198 1 15 1 
165 1 220 2 123 1 246 1 70 2 312 2 248 1 205 2 234 4 9 2 305 1 306 1 376 2 289 1 336 1 120 1 260 1 37 2 365 1 198 1 15 1 295 1 
165 1 220 2 246 1 312 1 248 1 205 1 234 2 9 1 35 1 305 1 306 1 376 1 37 2 144 1 365 1 198 1 15 1 295 1 
123 1 246 1 245 1 70 2 312 1 248 1 205 1 234 2 9 1 35 1 305 1 306 1 376 1 120 1 37 2 260 1 198 1 15 1 
165 1 220 2 123 1 246 1 70 2 312 2 248 1 205 2 234 4 9 2 35 1 305 1 306 1 376 2 336 1 120 1 260 1 37 2 365 1 198 1 15 1 295 1 
165 1 220 2 123 1 246 1 70 2 312 2 248 1 205 2 234 4 9 2 305 1 306 1 376 2 336 1 120 1 260 1 37 2 365 1 198 1 15 1 295 1 
220 1 342 1 246 1 180 1 150 1 248 1 128 1 182 1 158 1 129 1 323 1 37 2 15 1 187 1 68 1 70 1 373 1 234 2 76 1 334 1 305 1 306 1 46 1 173 1 218 1 98 1 145 1 198 1 
220 1 246 1 180 1 150 1 248 1 128 1 182 1 158 1 129 1 323 1 61 1 37 2 15 1 68 1 70 1 373 1 281 1 234 2 76 1 334 1 305 1 306 1 46 1 173 1 195 1 98 1 145 1 198 1 
165 1 220 2 123 1 246 1 70 2 312 2 248 1 168 1 205 2 234 4 9 2 305 1 306 1 376 2 336 1 120 1 260 1 37 2 365 1 198 1 15 1 295 1 
220 2 342 1 123 1 246 1 180 1 312 2 248 1 128 1 205 2 9 2 182 1 158 1 129 1 274 1 260 1 37 2 365 1 295 1 15 1 165 1 187 1 68 1 70 2 373 1 234 4 334 1 305 1 306 1 376 2 46 1 218 1 336 1 120 1 98 1 99 1 145 1 198 1 
309 1 220 2 246 1 53 1 180 1 248 1 312 1 222 1 107 1 205 1 156 1 9 1 36 1 129 1 260 1 37 2 365 1 15 1 295 1 165 1 70 1 168 1 234 3 305 1 306 1 376 1 336 1 120 1 198 1 
83 2 220 9 123 3 246 2 248 2 314 2 5 1 9 6 319 1 163 1 14 1 37 4 260 3 365 3 15 2 212 1 295 3 349 1 133 1 165 3 134 1 70 10 73 1 280 1 374 2 234 19 336 3 120 3 28 1 198 2 
83 2 220 14 123 2 246 3 248 3 314 1 5 1 58 1 9 4 271 1 163 1 14 2 324 1 260 2 37 6 365 3 15 3 212 2 295 3 165 2 349 2 134 2 70 12 263 2 73 1 43 1 374 4 234 26 336 3 120 2 47 1 28 1 198 3 380 1 
343 1 246 3 248 3 5 1 58 1 9 8 163 1 14 1 260 5 64 1 295 5 212 3 15 3 165 4 349 3 70 21 263 1 73 1 77 1 120 4 28 1 83 4 84 1 220 20 123 4 314 1 271 1 319 1 37 6 324 1 365 4 133 1 134 2 332 1 43 1 234 41 374 4 45 1 336 4 338 1 47 1 198 3 380 1 
84 1 83 4 220 20 343 1 123 4 246 4 248 4 314 1 5 1 58 1 9 7 271 1 319 1 163 1 14 1 324 1 37 8 260 4 64 1 365 4 15 4 212 3 295 5 349 3 133 1 165 3 134 2 70 18 263 2 73 1 332 1 43 1 374 4 234 38 45 1 77 1 336 4 120 3 338 1 47 1 28 1 198 4 380 1 
84 1 83 4 220 27 343 1 123 7 246 2 248 2 155 2 314 1 5 1 58 1 9 14 271 1 163 1 14 1 324 1 37 4 260 8 64 1 365 7 15 2 212 4 295 8 349 2 133 2 165 7 134 1 70 25 263 1 73 1 43 1 374 4 234 52 45 1 77 1 336 7 120 7 338 1 47 1 28 1 198 2 380 1 
90 1 191 1 130 1 196 1 7 1 183 1 8 1 65 1 275 1 300 1 
240 1 353 1 
90 1 235 1 191 1 33 1 130 1 96 1 183 1 275 1 300 1 
52 1 0 1 201 1 138 1 278 1 7 1 250 1 8 1 300 1 170 1 251 2 302 1 90 1 191 1 130 1 196 1 183 1 275 1 
52 1 0 1 201 1 138 1 278 1 7 1 250 1 8 1 300 1 170 1 251 2 302 1 90 1 191 1 130 1 196 1 183 1 275 1 
52 1 0 1 201 1 138 1 278 1 7 1 250 1 8 1 300 1 170 1 251 2 302 1 90 1 191 1 130 1 196 1 183 1 275 1 
237 1 264 1 219 1 
237 1 264 1 219 1 
284 1 97 1 
284 1 264 1 97 1 
21 1 132 1 
309 2 52 1 180 2 201 1 1 1 250 1 251 1 107 2 90 1 156 2 129 2 130 1 183 1 132 1 275 1 327 1 278 1 353 1 42 1 300 1 190 1 301 1 191 1 21 1 23 1 173 1 240 1 
237 1 219 1 
284 1 264 1 97 1 
310 1 50 1 220 1 246 1 180 2 150 1 248 1 128 1 105 1 107 2 34 1 182 1 158 2 129 2 209 1 323 1 37 2 15 1 68 2 70 1 298 2 168 1 373 2 234 2 305 1 140 1 306 1 46 1 269 1 145 1 198 1 
68 2 93 1 221 1 128 1 373 2 265 1 236 1 207 1 172 1 158 2 208 1 226 1 192 2 162 1 174 1 274 1 347 1 145 1 164 1 
68 1 93 1 221 1 128 1 373 1 265 1 207 1 172 1 158 1 208 1 226 1 192 2 162 1 174 1 145 1 164 1 229 1 
68 1 76 1 182 1 10 1 158 1 288 1 159 1 46 1 128 1 223 1 347 1 145 1 164 1 373 1 
68 1 93 1 221 1 128 1 373 1 265 1 236 1 207 1 172 1 158 1 208 1 226 1 192 2 162 1 174 1 347 1 145 1 164 1 
344 1 
341 1 110 1 0 1 179 1 321 1 116 1 80 1 
52 1 178 1 0 2 179 1 87 1 345 1 250 1 203 1 206 1 321 1 63 1 211 1 166 1 189 1 116 1 266 1 48 1 
341 1 52 5 0 8 345 3 250 5 203 5 104 6 206 4 158 3 13 2 290 1 210 1 260 2 211 4 295 2 166 4 68 3 217 2 116 9 299 2 171 3 76 1 307 1 120 2 80 1 357 1 177 1 178 6 179 2 30 1 85 2 128 1 315 2 225 1 182 1 321 8 274 1 325 2 365 2 230 2 368 6 189 12 330 2 373 3 282 2 46 6 336 2 377 2 98 1 145 2 197 2 48 4 
83 1 52 1 177 1 178 3 0 5 179 2 345 1 250 1 203 1 104 5 58 1 206 2 271 1 321 5 324 1 260 2 325 2 211 2 365 2 212 1 295 2 349 1 166 2 368 5 189 6 116 8 299 1 330 1 336 2 120 2 47 1 244 1 339 1 48 2 380 1 
84 1 309 1 343 1 52 1 180 1 222 1 4 1 249 1 250 1 107 1 156 1 206 1 129 1 363 1 321 2 228 1 131 1 260 1 325 2 211 1 295 2 166 1 116 2 330 1 303 1 77 1 48 1 379 1 
341 1 166 1 179 1 0 1 116 1 206 1 321 1 80 1 211 1 48 1 
368 5 178 5 0 5 189 10 116 5 330 1 104 5 336 2 321 5 120 2 260 2 325 2 197 1 365 2 295 2 
52 1 0 1 179 1 345 1 250 1 203 1 
52 3 68 4 166 2 92 1 177 2 19 1 345 2 116 2 128 1 223 1 299 2 250 3 203 4 373 4 225 1 108 1 76 2 206 2 182 1 10 1 158 4 46 1 321 2 273 1 242 1 290 2 211 1 145 1 48 2 
309 2 342 1 246 1 150 1 180 3 248 1 222 2 128 1 107 2 156 2 182 1 158 1 129 3 363 1 37 2 15 1 68 1 187 1 70 1 329 1 373 1 234 1 76 1 334 1 305 1 306 1 46 1 173 1 218 1 98 1 145 1 198 1 
166 1 178 2 368 2 177 1 179 2 0 4 189 4 116 1 299 1 104 2 206 1 321 2 338 1 211 1 48 1 
90 1 369 1 275 1 
90 1 369 1 275 1 
90 1 21 1 137 1 8 1 275 1 
90 1 369 1 275 1 
90 1 350 1 275 1 
90 1 350 1 275 1 
90 1 350 1 275 1 
90 1 275 1 
130 1 183 1 
84 1 220 4 165 1 343 1 123 2 246 2 70 4 248 2 263 1 234 8 9 3 45 1 77 1 338 1 260 1 37 4 64 1 198 2 295 1 15 2 
84 1 220 3 343 1 123 2 70 3 110 1 234 6 9 2 45 1 77 1 338 1 260 1 64 1 295 1 
220 2 165 1 123 1 246 1 70 2 248 1 316 1 234 4 9 2 336 1 120 1 260 1 37 2 365 1 198 1 15 1 295 1 
83 2 349 1 220 3 133 1 165 1 123 1 70 4 234 7 9 2 336 1 120 1 260 1 365 1 212 1 295 1 
84 1 83 2 220 11 343 2 123 5 246 2 101 1 248 2 155 1 9 9 260 3 37 4 64 1 365 2 295 3 212 2 15 2 165 4 133 1 70 12 263 2 297 1 234 23 45 1 77 2 336 2 120 2 338 1 198 2 
83 1 234 1 70 1 
234 1 220 1 212 1 
220 3 165 1 246 1 123 2 70 3 248 1 316 1 234 6 9 3 336 1 120 1 37 2 260 1 197 1 365 1 198 1 15 1 295 1 
83 1 220 6 246 1 123 1 248 1 5 1 58 1 9 2 271 1 37 2 260 2 324 1 365 2 212 1 15 1 295 2 165 1 349 1 70 6 234 12 336 2 120 2 47 1 198 1 380 1 
84 1 220 3 165 1 343 1 123 1 70 3 234 6 9 2 77 1 260 1 295 1 
220 1 165 1 343 1 123 1 246 1 70 2 297 1 263 1 248 1 234 3 9 2 45 1 77 1 37 2 64 1 198 1 15 1 
84 1 165 2 220 5 343 2 246 1 123 3 70 5 248 1 5 1 303 1 234 10 9 5 77 2 37 2 260 2 198 1 15 1 295 2 
220 2 165 1 246 1 248 1 5 1 234 2 9 1 37 2 365 1 198 1 15 1 295 1 
220 2 165 1 123 1 246 1 70 2 248 1 5 1 234 4 9 2 336 1 120 1 260 1 37 2 365 1 198 1 15 1 295 1 
165 1 220 1 343 1 246 3 123 1 70 2 263 1 297 1 248 3 5 1 234 3 9 2 319 1 77 1 37 6 198 3 15 3 
84 2 83 4 220 16 343 3 246 5 123 7 248 5 6 1 5 1 316 1 9 12 319 1 37 10 260 5 64 1 184 1 365 3 15 5 212 3 295 5 349 1 133 1 165 5 70 18 297 1 263 2 40 1 234 34 45 1 77 3 336 3 120 3 338 1 198 5 
83 1 84 1 220 4 343 1 246 1 123 2 248 1 5 1 9 2 260 1 37 2 64 1 295 1 212 1 15 1 349 1 70 4 234 8 45 1 77 1 338 1 47 1 198 1 
84 1 83 2 220 6 343 1 123 2 246 2 248 2 5 1 316 1 9 3 260 1 37 4 64 1 365 1 15 2 212 1 295 2 349 1 133 1 165 1 70 5 234 11 45 1 77 1 336 1 338 1 47 1 198 2 
84 1 83 1 220 9 343 1 246 3 123 3 248 3 5 1 316 1 58 1 9 4 271 1 37 6 260 3 324 1 64 1 365 2 212 1 15 3 295 3 165 1 349 1 70 10 263 1 234 19 45 1 77 1 336 2 120 2 338 1 47 1 198 3 380 1 
84 1 83 1 220 10 343 1 246 3 123 3 248 3 5 1 316 1 58 1 9 5 271 1 37 6 260 2 324 1 64 1 365 2 212 1 15 3 295 3 165 2 349 1 70 7 263 1 234 17 45 1 77 1 336 2 120 1 338 1 47 1 198 3 380 1 
83 1 84 1 220 4 343 1 246 1 123 2 248 1 5 1 9 2 260 1 37 2 64 1 295 1 212 1 15 1 349 1 70 4 234 8 45 1 77 1 338 1 47 1 198 1 
83 1 220 6 246 1 123 1 248 1 5 1 58 1 9 2 271 1 37 2 260 2 324 1 365 2 212 1 15 1 295 2 165 1 349 1 70 6 234 12 336 2 120 2 47 1 198 1 380 1 
84 1 83 1 220 10 343 1 246 4 123 3 248 4 5 1 316 1 58 1 9 5 271 1 324 1 37 8 260 2 64 1 365 2 15 4 212 1 295 3 165 2 349 1 70 8 263 2 234 18 45 1 77 1 336 2 120 1 338 1 47 1 198 4 380 1 
83 1 220 9 246 4 123 3 248 4 5 1 58 1 9 6 271 1 319 1 324 1 37 8 260 2 365 3 15 4 212 1 295 3 165 3 349 1 70 7 263 2 234 16 336 3 120 2 47 1 198 4 380 1 
84 1 165 3 220 3 343 3 123 3 70 4 234 7 9 6 45 2 77 3 260 1 64 1 295 1 
84 1 83 1 220 10 343 1 246 4 123 3 248 4 5 1 58 1 9 4 271 1 319 1 324 1 37 8 260 2 64 1 365 2 15 4 212 1 295 3 165 1 349 1 70 8 263 2 234 18 45 1 77 1 336 2 120 1 338 1 47 1 198 4 380 1 
129 1 180 1 239 1 173 1 335 1 136 1 107 1 
270 1 352 1 71 1 180 1 136 1 118 1 107 1 254 1 129 1 239 1 173 1 335 1 
110 1 68 1 76 1 182 1 10 1 158 1 46 1 128 1 223 1 145 1 373 1 
309 1 68 1 135 1 180 2 128 1 373 1 107 1 156 1 76 1 182 1 334 1 158 1 129 2 46 1 173 1 218 1 98 1 145 1 
309 1 180 2 128 1 107 2 156 2 182 2 158 1 129 2 257 1 228 1 259 1 290 1 113 1 68 1 135 1 373 1 334 1 333 1 46 3 173 1 218 1 98 2 145 1 
113 1 309 1 68 2 135 1 180 2 214 1 128 1 373 2 107 2 156 2 333 1 182 2 334 1 158 2 129 2 257 1 46 3 173 1 61 1 259 1 228 1 98 2 290 1 145 1 
309 1 52 1 179 1 0 1 180 1 222 1 4 1 249 1 250 1 107 1 156 1 158 1 363 1 129 1 228 1 131 1 290 1 114 1 68 1 373 1 171 1 46 1 
309 1 52 1 179 1 0 1 180 1 222 1 4 1 315 1 249 1 250 1 107 1 156 1 158 1 363 1 129 1 228 1 131 1 290 1 68 1 373 1 171 1 46 1 
68 1 158 1 128 1 145 1 373 1 204 1 
357 1 91 1 68 7 147 1 31 1 298 1 128 2 373 6 204 1 55 1 76 2 182 2 140 1 158 7 226 1 46 3 194 1 274 1 241 1 98 1 145 3 
342 1 343 1 246 2 248 2 107 1 205 1 156 1 9 2 158 1 260 1 64 1 15 2 295 1 68 1 70 3 168 1 305 2 306 2 218 1 77 1 173 2 309 1 84 1 220 3 123 2 124 1 180 2 312 1 128 1 34 1 182 1 129 2 274 1 37 4 187 1 135 1 373 1 234 6 334 1 46 1 45 1 376 1 98 1 338 1 99 1 145 1 198 2 
341 1 52 3 0 1 179 1 345 1 315 1 250 3 203 2 225 1 206 2 158 1 321 1 13 1 211 2 230 1 166 2 68 1 116 1 217 1 373 1 76 1 282 1 171 1 23 1 46 2 80 1 377 1 48 2 
230 1 357 1 68 2 30 1 128 1 373 2 204 1 182 1 158 2 46 2 274 1 98 1 145 2 
68 4 214 1 128 1 223 1 373 4 76 1 182 1 158 4 10 1 46 1 274 1 143 1 145 1 
91 1 68 2 128 1 373 2 55 1 182 1 158 2 46 1 161 1 290 1 98 1 356 1 145 2 49 1 
68 1 76 1 93 1 158 1 221 1 192 1 174 1 128 1 145 1 373 1 
68 2 128 1 373 2 105 1 182 1 158 2 140 1 226 1 46 1 274 1 145 1 
68 5 31 1 128 2 223 1 373 4 76 1 182 2 10 1 158 5 140 1 46 3 274 1 241 1 143 1 290 1 145 2 
68 5 128 2 223 1 373 4 224 1 76 1 182 2 10 1 158 5 140 1 46 3 274 1 241 1 143 1 290 1 145 2 
309 1 68 1 135 1 180 2 128 1 373 1 107 1 156 1 76 1 182 1 334 1 158 1 129 2 46 1 173 1 61 1 98 1 145 1 
357 1 91 1 68 1 147 1 128 1 373 1 55 1 182 1 158 1 46 1 290 1 98 1 145 2 
310 1 50 1 129 1 180 1 370 1 27 1 269 1 107 1 117 1 
367 1 256 1 117 1 
173 1 370 1 27 1 79 1 117 1 
113 1 146 1 52 2 367 1 0 1 179 1 286 1 370 2 250 2 74 1 117 1 333 1 256 1 23 1 173 1 228 1 27 2 13 1 79 2 
110 1 272 1 227 1 366 1 
276 1 272 1 227 1 41 1 366 1 185 1 56 1 
57 1 276 1 24 1 
276 3 41 3 56 1 139 1 22 1 272 1 227 1 62 1 262 2 185 1 366 1 67 1 
20 1 59 1 276 2 272 1 227 1 41 2 366 1 185 1 56 1 
39 1 276 1 93 1 86 1 41 1 56 1 227 1 192 1 162 1 62 1 185 1 
276 1 227 1 62 1 41 1 366 1 185 1 56 1 
276 1 272 1 62 1 41 1 366 2 185 1 56 1 
276 2 285 1 100 1 41 2 233 1 56 2 227 1 62 1 366 1 185 2 
276 3 86 1 41 3 56 1 253 1 20 2 141 1 272 1 193 1 227 2 62 1 366 1 185 1 
276 2 93 1 41 2 56 1 20 1 172 1 272 1 227 1 192 2 174 1 162 1 62 1 366 1 185 1 66 1 
276 4 86 1 41 4 331 1 56 2 59 1 20 2 141 1 272 1 227 2 62 1 366 1 185 2 
276 1 272 1 227 1 62 1 41 1 366 1 185 1 56 1 
276 4 86 1 41 4 56 1 20 2 22 1 141 1 272 2 227 3 12 1 262 1 366 2 185 1 67 1 
276 2 215 1 41 2 56 1 317 1 20 1 272 1 227 1 62 1 121 1 366 1 185 1 
276 3 41 3 56 1 22 2 272 1 227 1 62 1 346 1 262 2 185 1 366 1 67 1 
326 1 227 2 102 2 181 1 
276 1 360 1 62 1 41 1 185 1 56 1 
20 1 276 2 272 1 227 1 193 1 62 1 41 2 366 1 185 1 56 1 
157 1 
276 1 272 1 227 1 62 1 41 1 366 1 185 1 56 1 
276 3 41 3 56 1 20 1 272 1 227 1 193 1 62 1 262 1 185 1 366 1 
141 1 86 1 227 1 12 1 
227 1 366 1 

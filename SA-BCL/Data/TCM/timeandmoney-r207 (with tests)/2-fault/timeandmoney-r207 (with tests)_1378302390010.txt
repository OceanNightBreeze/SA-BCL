#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 132 1 62 4 262 9 233 1 1 1 265 1 214 2 238 2 22 1 117 7 367 1 298 5 345 9 371 3 370 1 102 1 373 1 142 1 124 1 376 1 126 1 325 2 350 1 
0 1 132 1 62 4 233 1 262 9 370 1 371 3 1 1 265 1 102 1 214 2 373 1 142 1 124 1 376 1 126 1 238 2 22 1 350 1 325 2 117 7 367 1 298 5 345 9 
0 1 62 4 233 1 262 9 1 2 265 1 214 2 238 2 22 2 314 1 117 6 317 1 367 1 298 5 345 9 299 1 198 1 370 1 371 3 300 1 373 2 142 1 124 1 376 1 126 1 350 2 325 2 151 1 
0 1 62 4 233 1 262 9 1 2 265 1 214 2 238 2 22 2 314 1 117 6 317 1 367 1 298 5 345 9 299 1 198 1 370 1 371 3 300 1 373 2 142 1 124 1 376 1 126 1 350 2 325 2 151 1 
0 1 62 5 233 1 262 10 1 2 265 1 214 2 238 2 22 2 314 1 117 7 317 1 367 1 298 6 345 10 299 1 198 1 370 1 371 4 300 1 373 2 142 1 124 1 376 1 126 1 350 2 325 2 151 1 
0 1 62 3 262 7 1 2 265 1 214 2 238 2 22 2 314 1 117 4 317 1 367 1 298 4 345 7 299 1 198 1 370 1 371 2 300 1 373 2 142 1 124 1 376 1 126 1 350 2 325 1 151 1 
62 2 233 1 262 4 371 1 370 1 265 1 214 1 373 1 124 1 376 1 126 1 238 1 22 1 325 2 350 1 117 3 298 3 345 4 
198 1 262 2 1 1 214 1 373 1 124 1 376 1 126 1 238 1 22 1 8 1 296 1 259 1 151 1 298 1 345 2 
0 1 62 1 262 3 371 1 1 1 214 2 124 1 376 1 126 1 238 2 117 1 298 2 345 3 
30 1 48 1 221 1 
177 1 81 2 221 1 
294 2 320 2 295 1 4 2 276 2 277 2 223 1 278 2 
263 1 186 1 112 2 2 1 213 2 266 1 4 2 113 1 337 2 94 1 294 2 158 1 295 1 95 1 25 1 161 1 162 1 276 2 118 1 50 1 277 3 223 1 278 2 195 1 320 3 301 1 122 1 225 1 77 1 33 1 324 1 375 2 13 1 57 1 305 2 283 1 149 1 
294 1 339 1 273 1 320 1 4 1 66 1 276 1 277 1 223 1 278 1 
247 1 320 1 93 1 44 1 66 1 323 1 257 1 48 1 16 1 128 1 353 1 221 1 276 1 277 1 
320 1 93 2 44 1 4 1 66 1 323 1 294 1 257 2 48 1 128 1 353 1 221 1 276 1 277 1 278 1 
257 1 137 1 93 1 83 1 352 1 
257 2 48 1 93 2 83 1 352 1 45 1 221 1 153 1 
257 1 93 1 83 1 
320 1 93 1 4 1 66 1 294 1 257 1 339 1 273 1 58 1 352 1 276 1 223 1 277 1 278 1 
221 1 
257 2 48 1 23 1 93 2 83 1 352 1 221 1 153 1 
308 2 11 1 185 1 91 1 252 1 93 5 309 1 334 1 68 1 200 1 257 5 157 2 48 1 282 2 83 2 352 2 221 1 205 1 153 1 
30 1 295 1 
232 1 320 2 4 1 294 1 127 1 295 2 276 2 277 2 278 1 
190 1 109 1 254 1 
320 1 372 1 301 1 213 1 266 1 113 1 375 1 324 1 57 1 158 1 305 1 295 1 149 1 162 1 50 1 277 1 
320 2 301 1 213 1 266 1 113 1 4 1 324 1 375 1 176 1 57 1 294 1 158 1 305 1 149 1 109 1 162 1 276 1 50 1 277 2 194 1 
294 3 320 3 295 1 4 3 276 3 277 3 278 1 176 1 
294 1 339 1 320 1 4 1 66 1 276 1 277 1 
294 1 232 1 320 1 127 1 4 1 66 1 276 1 277 1 278 1 
232 1 263 1 186 1 112 2 2 1 42 1 93 1 213 1 266 1 44 1 113 1 4 3 337 1 66 1 94 1 294 3 158 1 295 1 25 1 161 1 162 1 276 3 118 1 50 1 245 1 277 4 223 1 278 2 194 1 195 1 320 4 301 1 122 1 323 1 324 1 375 1 176 1 57 1 257 1 305 1 283 1 149 1 128 1 353 1 
294 1 320 2 295 1 16 1 4 1 276 2 130 1 277 2 176 1 
232 1 320 3 93 1 44 1 4 3 66 1 323 1 176 2 294 3 257 1 217 1 128 1 353 1 221 1 276 3 245 1 277 3 278 1 194 1 
232 1 320 2 4 2 254 1 176 1 294 2 109 1 276 2 277 2 278 1 
320 1 301 1 213 1 266 1 113 1 375 1 324 1 57 1 305 1 158 1 295 1 149 1 162 1 50 1 277 1 
320 1 213 1 113 1 375 1 324 1 57 1 237 1 305 1 158 1 295 1 82 1 149 1 162 1 50 1 277 1 
263 1 112 2 186 2 337 4 94 1 189 1 7 1 190 2 25 1 195 1 122 1 225 2 143 1 175 1 254 2 12 1 144 1 378 1 283 1 146 1 326 1 37 1 109 2 356 1 
294 1 320 1 44 1 342 1 4 1 66 1 276 1 277 1 
232 1 167 1 320 5 4 4 176 2 294 4 295 1 16 1 17 1 276 5 130 1 277 5 278 1 194 1 
294 2 339 1 320 2 342 1 4 2 66 1 276 2 277 2 
307 1 270 1 
307 1 270 1 
362 1 315 1 
362 1 315 1 
362 1 315 1 
307 1 70 1 270 1 
307 1 70 1 270 1 
360 1 307 1 270 1 
362 1 315 1 287 1 307 2 269 1 270 2 
307 1 70 1 270 1 
64 1 307 1 270 1 
64 1 307 1 270 1 
64 1 307 1 270 1 
224 1 93 2 187 1 303 2 188 1 270 2 80 1 257 2 364 2 365 1 138 2 24 3 148 1 219 2 180 2 19 1 221 1 287 1 307 2 
360 1 93 1 4 2 235 1 270 1 294 2 363 1 295 1 365 1 24 1 138 1 219 1 276 2 193 1 277 2 319 1 320 2 303 1 257 1 180 1 379 1 38 1 307 1 207 1 
22 1 350 1 373 1 
22 1 296 1 373 1 
22 3 350 2 240 1 296 1 26 1 135 1 
22 2 350 1 302 1 240 1 296 1 26 1 
22 2 350 1 240 2 296 1 26 1 
308 1 91 3 133 1 93 5 235 1 68 1 312 1 157 1 363 1 7 1 159 2 48 1 242 1 221 2 319 1 121 1 252 2 143 1 78 1 177 1 81 3 378 1 257 5 349 1 282 1 326 1 83 1 352 4 260 2 85 1 60 2 153 1 
91 3 92 1 93 6 133 1 4 1 335 1 294 1 7 1 137 3 339 1 48 1 242 1 100 3 252 2 143 1 257 6 349 1 58 1 352 5 60 2 153 1 308 1 66 1 68 1 157 1 363 2 273 1 159 2 276 1 221 3 223 1 277 1 278 1 164 1 320 1 78 1 378 1 81 3 177 1 282 1 326 1 83 4 
308 1 91 3 93 3 133 1 309 1 312 1 157 1 363 1 7 1 159 2 48 1 242 1 221 3 121 1 252 2 78 1 143 1 177 2 378 1 81 4 257 3 282 1 326 1 352 2 260 1 60 2 
308 1 91 5 93 4 133 2 309 1 310 1 312 1 157 1 363 2 47 1 7 2 159 4 48 1 275 1 242 1 221 4 121 1 252 4 78 1 143 2 177 3 81 7 378 2 257 4 282 1 326 2 352 3 260 2 60 4 
158 1 30 1 216 1 
158 1 210 1 
125 1 
158 1 324 1 
158 3 291 1 149 1 324 1 304 1 216 2 
158 1 149 1 324 1 
158 1 156 1 
169 1 186 3 31 1 43 1 134 1 104 1 225 4 143 1 337 7 136 1 144 2 326 1 341 1 241 1 220 2 86 1 356 3 
169 1 186 3 31 1 43 1 134 1 104 1 225 4 143 1 337 7 136 1 144 2 326 1 341 1 241 1 220 2 86 1 356 3 
169 1 186 3 31 1 43 1 134 1 104 1 225 4 143 1 337 7 136 1 144 2 326 1 341 1 241 1 220 2 86 1 356 3 39 1 
184 1 263 1 112 2 186 15 43 2 133 3 134 1 337 31 136 2 94 1 7 3 341 1 241 1 74 1 220 3 222 1 195 1 347 1 169 2 31 2 199 3 104 1 122 1 225 16 143 4 377 1 201 1 378 3 144 5 326 4 84 1 306 4 86 5 356 10 
184 1 263 2 112 4 186 4 43 1 337 9 136 1 94 2 341 1 241 1 220 2 119 1 195 2 53 1 169 1 31 1 122 2 104 1 225 5 143 1 144 3 326 1 86 1 356 4 
209 1 262 2 1 1 213 1 212 1 113 1 214 1 135 1 238 1 22 2 239 1 117 1 296 1 162 1 298 1 345 2 97 1 373 1 124 1 375 1 376 1 126 1 305 1 350 1 351 1 284 1 18 1 129 1 327 1 183 1 
209 1 262 3 1 1 213 1 212 1 113 1 135 1 214 1 238 1 22 2 117 2 274 1 296 1 162 1 298 1 345 3 97 1 373 1 124 1 375 1 376 1 305 1 350 1 284 1 229 1 18 1 129 1 327 1 183 1 231 1 
209 1 262 2 1 1 213 1 212 1 113 1 135 1 22 2 117 2 274 1 296 1 162 1 298 1 345 2 97 1 373 1 124 1 375 1 376 1 305 1 350 1 284 1 229 1 18 1 183 1 
262 1 1 2 213 1 113 1 214 1 238 1 158 1 162 1 345 1 97 2 98 1 99 1 375 1 324 1 281 1 57 1 305 1 15 1 354 1 18 2 183 2 231 1 110 1 
209 1 262 1 1 1 212 1 213 1 113 1 135 1 214 1 373 1 375 1 126 1 238 1 22 2 305 1 239 1 350 1 284 1 296 1 229 1 162 1 327 1 129 1 18 1 183 1 345 1 97 1 
204 1 
331 1 90 5 91 1 292 1 41 3 93 4 44 1 48 1 297 1 244 1 247 1 140 2 54 1 101 2 252 1 55 1 348 2 257 4 16 1 353 1 153 2 308 1 20 1 66 1 68 1 21 3 157 1 73 1 221 1 276 1 277 1 168 1 320 1 280 2 323 1 226 1 177 2 282 1 83 5 179 3 128 1 330 1 
308 1 331 1 292 1 91 1 90 5 41 3 93 4 44 1 66 1 20 1 68 1 21 3 157 1 48 1 73 1 297 1 221 1 276 1 244 1 277 1 247 1 140 2 320 1 168 1 54 1 101 2 280 2 252 1 55 1 348 2 226 1 323 1 177 2 257 4 282 1 83 5 16 1 128 1 179 3 353 1 330 1 153 2 
90 4 91 1 332 2 41 2 93 4 44 1 48 1 297 1 244 1 246 1 247 1 140 2 54 1 101 2 252 1 106 2 257 4 16 1 353 1 153 2 308 1 20 1 66 1 68 1 21 2 157 1 276 1 221 1 277 1 320 1 168 1 323 1 226 1 227 1 81 2 282 1 83 4 128 1 179 2 
91 2 90 4 41 2 93 5 44 1 236 1 48 1 297 1 244 1 246 1 247 1 140 2 98 1 54 1 101 2 252 2 348 2 57 2 257 5 305 2 16 1 354 1 353 1 153 3 308 1 213 2 113 1 66 1 20 1 68 1 21 2 157 1 158 1 366 1 162 1 221 2 276 1 277 1 168 1 320 1 280 2 78 1 226 1 323 1 324 1 375 2 81 2 177 2 282 1 83 6 179 2 128 1 330 1 289 1 290 1 
90 2 93 3 44 1 66 1 20 1 21 1 23 1 276 1 244 1 277 1 247 1 320 1 168 1 54 1 226 1 323 1 257 3 83 2 16 1 128 1 353 1 153 1 
90 3 41 1 93 3 44 1 66 1 20 1 48 1 23 1 276 1 221 1 244 1 277 1 247 1 320 1 168 1 54 1 226 1 323 1 257 3 83 1 16 1 128 1 353 1 153 1 
90 3 41 1 93 3 44 1 66 1 20 1 21 1 48 1 23 1 276 1 221 1 244 1 277 1 247 1 320 1 168 1 54 1 226 1 323 1 257 3 83 2 16 1 128 1 179 1 353 1 153 1 
331 1 90 6 91 1 292 1 41 4 93 5 44 1 48 5 297 1 244 1 247 1 140 2 54 1 101 2 252 1 55 1 348 2 257 5 16 1 353 1 153 3 308 1 20 1 66 1 68 1 21 4 157 1 23 1 73 1 276 1 221 5 277 1 120 1 320 1 168 1 280 2 323 1 226 1 177 2 282 1 83 7 179 4 128 1 330 1 
90 4 91 1 41 2 93 4 44 1 48 1 297 1 244 1 246 1 247 1 140 2 54 1 101 2 252 1 348 2 257 4 16 1 353 1 153 2 308 1 20 1 66 1 68 1 21 2 157 1 276 1 221 2 277 1 320 1 168 1 280 2 323 1 226 1 177 2 81 2 282 1 83 4 128 1 179 2 330 1 
308 1 331 1 292 1 91 1 90 4 41 2 93 4 44 1 66 1 20 1 68 1 21 2 157 1 48 1 73 1 297 1 221 1 276 1 244 1 277 1 247 1 140 2 320 1 168 1 54 1 101 2 280 2 252 1 348 2 226 1 323 1 177 2 257 4 282 1 83 4 179 2 16 1 128 1 353 1 330 1 153 2 
308 1 331 1 292 1 91 1 90 4 41 2 93 4 44 1 66 1 20 1 68 1 21 2 157 1 48 1 73 1 297 1 221 1 276 1 244 1 277 1 247 1 140 2 320 1 168 1 54 1 101 2 280 2 252 1 348 2 226 1 323 1 177 2 257 4 282 1 83 4 179 2 16 1 128 1 353 1 330 1 153 2 
308 1 358 1 292 1 91 1 90 4 41 2 332 2 93 4 44 1 66 1 20 1 68 1 21 2 157 1 48 1 297 1 221 1 276 1 244 1 277 1 247 1 140 2 320 1 168 1 54 1 101 2 252 1 106 2 226 1 323 1 227 1 81 2 257 4 282 1 83 4 179 2 16 1 128 1 353 1 329 1 153 2 
263 1 112 2 186 3 337 6 94 1 295 2 190 1 341 1 25 1 241 1 220 1 195 1 30 1 169 1 31 1 104 1 122 1 225 3 143 1 254 1 144 2 283 1 146 1 326 1 109 1 356 2 
263 2 264 1 186 6 112 4 133 2 337 14 94 2 71 1 7 1 295 1 190 11 192 1 25 2 74 1 118 1 195 2 165 1 199 3 122 2 77 1 225 8 174 1 143 2 254 4 144 1 378 2 283 1 326 1 84 1 109 11 306 3 86 1 356 2 
263 1 112 2 186 1 213 1 266 1 113 1 4 1 337 2 94 1 294 1 6 1 158 1 295 1 25 1 162 1 276 1 50 1 118 1 277 2 194 1 195 1 165 1 320 2 301 1 372 1 122 1 77 1 225 1 324 1 375 1 254 1 57 1 176 1 256 1 305 1 283 1 145 1 149 1 
165 1 263 1 320 1 112 2 213 1 4 1 122 1 375 1 57 1 94 1 176 1 294 1 305 1 283 1 25 1 150 1 276 1 277 1 194 1 195 1 
63 1 263 2 112 4 186 1 213 8 4 1 113 2 337 2 94 2 294 1 114 1 158 3 25 2 162 2 344 1 276 1 118 1 277 1 195 2 29 1 320 1 98 1 122 2 77 1 225 1 79 1 375 8 324 2 13 2 176 1 57 2 305 7 351 1 146 1 283 2 229 1 354 1 355 1 328 1 
232 1 263 1 112 2 186 2 133 1 4 1 337 3 94 1 294 1 7 1 190 1 25 1 276 1 277 1 278 1 195 1 165 1 320 1 122 1 225 1 143 1 254 1 144 1 378 1 283 1 107 1 326 1 109 1 356 1 
263 1 112 2 122 1 225 2 337 2 143 1 254 1 12 1 94 1 378 1 190 1 146 1 283 1 25 1 109 1 86 1 356 1 195 1 
263 1 112 2 186 2 122 1 337 2 175 1 254 1 94 1 144 1 7 1 190 1 146 1 283 1 326 1 25 1 109 1 356 1 195 1 
263 1 112 2 186 2 133 1 337 4 94 1 7 1 190 2 25 1 195 1 122 1 225 2 143 1 254 2 378 1 144 1 283 1 146 1 326 1 109 2 86 1 356 2 
263 1 112 2 122 1 225 2 337 2 143 1 254 1 12 1 94 1 378 1 190 1 283 1 25 1 109 1 328 1 86 1 356 1 195 1 
263 1 112 2 186 2 122 1 337 2 175 1 254 1 94 1 144 1 7 1 190 1 283 1 326 1 25 1 109 1 328 1 356 1 195 1 
263 1 112 2 186 2 133 1 337 4 94 1 7 1 190 2 25 1 195 1 122 1 225 2 143 1 254 2 378 1 144 1 283 1 326 1 109 2 328 1 86 1 356 2 
263 1 112 2 186 2 133 1 337 4 94 1 7 1 190 2 25 1 195 1 122 1 225 2 143 1 254 2 378 1 144 1 283 1 326 1 109 2 86 1 356 2 
263 1 112 2 186 1 2 1 213 1 266 1 113 1 337 2 94 1 158 1 295 1 25 1 162 1 50 1 118 1 277 1 195 1 320 1 301 1 122 1 225 1 77 1 324 1 375 1 57 1 305 1 283 1 149 1 
263 1 112 2 186 1 213 1 113 1 337 2 237 1 5 1 94 1 158 1 295 1 25 1 162 1 50 1 118 1 277 1 195 1 320 1 122 1 225 1 77 1 324 1 375 1 57 1 305 1 283 1 82 1 149 1 
263 1 112 2 186 2 133 1 337 4 94 1 7 1 190 2 25 1 195 1 165 1 122 1 225 2 143 1 254 2 378 1 144 1 283 1 326 1 109 2 86 1 356 2 
263 1 186 2 112 2 2 1 213 1 133 1 266 1 113 1 337 4 94 1 158 1 7 1 190 2 25 1 162 1 50 1 277 1 195 1 320 1 301 1 122 1 225 2 143 1 254 2 375 1 324 1 144 1 378 1 305 1 351 1 283 1 326 1 149 1 108 1 109 2 86 1 356 2 
232 1 263 1 186 1 112 2 133 1 4 1 337 3 94 1 294 1 7 1 190 1 25 1 276 1 277 1 278 1 195 1 165 1 197 1 320 1 122 1 225 2 143 1 254 1 378 1 283 1 326 1 109 1 86 1 356 1 
184 1 359 1 263 3 112 6 186 21 133 4 337 41 338 1 46 1 67 1 94 3 72 1 7 4 340 1 341 1 241 1 220 1 74 1 75 1 195 3 248 1 139 1 53 1 169 1 171 4 31 1 199 3 104 1 122 3 32 1 225 20 143 5 144 4 35 2 378 4 258 1 326 5 84 3 306 4 181 1 86 4 288 1 356 8 
184 2 359 1 263 4 112 8 186 18 133 4 337 38 338 1 46 1 67 1 94 4 72 1 7 3 340 1 341 1 241 1 220 1 74 1 75 1 195 4 248 1 139 1 53 1 169 1 171 4 31 1 199 3 104 1 122 4 32 1 225 20 143 5 144 4 35 2 378 4 258 1 326 4 84 3 306 4 181 1 86 3 288 1 356 7 
184 1 359 1 263 2 264 2 112 4 186 25 133 7 337 52 338 1 46 1 67 1 94 2 72 1 7 7 341 1 241 1 220 1 74 2 75 1 195 2 248 1 53 1 169 1 171 4 31 1 199 4 104 1 122 2 32 1 225 27 143 8 144 7 35 1 378 7 258 1 326 8 84 2 306 4 181 1 86 7 288 1 356 14 
263 2 112 4 186 10 133 3 337 19 46 1 338 2 94 2 7 3 74 1 195 2 248 1 139 1 53 1 10 1 171 2 199 1 122 2 225 9 143 3 144 3 35 1 378 3 258 1 326 3 84 1 306 2 181 1 86 3 356 6 
184 2 359 1 263 3 186 12 112 6 133 3 337 26 338 1 46 1 67 1 94 3 72 1 7 2 75 1 195 3 248 1 53 1 171 4 199 2 122 3 32 1 225 14 143 3 144 2 35 2 378 3 258 1 326 2 84 2 181 2 306 2 86 2 288 1 356 4 
224 1 138 1 219 1 65 1 180 1 303 1 287 1 188 1 307 1 270 1 
360 1 193 1 
369 1 234 1 138 1 219 1 180 1 303 1 123 1 307 1 270 1 
224 1 93 1 303 1 188 1 270 1 80 1 257 1 364 1 365 1 138 1 24 2 148 1 219 1 180 1 19 1 221 1 287 1 307 1 
224 1 93 1 303 1 188 1 270 1 80 1 257 1 364 1 365 1 138 1 24 2 148 1 219 1 180 1 19 1 221 1 287 1 307 1 
224 1 93 1 303 1 188 1 270 1 80 1 257 1 364 1 365 1 138 1 24 2 148 1 219 1 180 1 19 1 221 1 287 1 307 1 
269 1 70 1 28 1 
269 1 70 1 28 1 
64 1 111 1 
64 1 269 1 111 1 
38 1 207 1 
154 1 360 1 93 1 4 2 235 1 270 1 294 2 363 1 364 1 295 1 138 1 24 1 219 1 193 1 276 2 277 2 319 1 320 2 303 1 80 1 257 1 352 1 180 1 379 1 38 1 307 1 207 1 
70 1 28 1 
64 1 269 1 111 1 
61 1 131 1 263 1 112 2 186 1 213 2 333 1 113 1 337 2 94 1 158 1 114 1 25 1 162 1 276 2 118 1 277 2 195 1 29 1 165 1 251 1 320 2 122 1 322 1 77 1 225 1 324 1 375 2 13 2 305 2 283 1 
209 1 213 2 212 1 113 1 135 1 373 1 361 1 375 2 255 1 22 2 305 2 350 1 351 1 296 1 229 1 162 1 327 1 51 1 97 1 
209 1 213 1 212 1 113 1 135 1 373 1 375 1 22 2 305 1 350 1 36 1 296 1 229 1 162 1 327 1 51 1 97 1 
98 1 213 1 113 1 361 1 324 1 375 1 281 1 57 1 158 1 305 1 230 1 162 1 354 1 97 1 
209 1 213 1 212 1 113 1 135 1 373 1 361 1 375 1 255 1 22 2 305 1 350 1 296 1 229 1 162 1 327 1 51 1 97 1 
374 1 
263 1 186 1 112 2 2 1 213 1 266 1 4 2 113 1 337 1 94 1 294 2 158 1 295 1 161 1 25 1 162 1 276 2 118 1 50 1 277 3 223 1 278 2 195 1 320 3 301 1 122 1 375 1 324 1 57 1 305 1 283 1 149 1 
308 1 91 1 252 2 78 1 68 1 177 2 81 4 157 1 159 2 282 1 48 2 366 1 220 1 221 4 60 2 
30 1 48 1 11 1 91 1 252 1 221 1 205 1 
308 1 91 1 93 1 68 1 157 1 48 1 221 2 252 1 280 1 348 1 177 1 81 1 257 1 282 1 83 1 330 1 153 1 
40 2 91 9 93 5 133 2 7 2 48 2 196 1 250 2 11 1 141 1 252 8 253 2 143 2 304 1 57 1 305 3 257 5 351 1 149 3 152 2 205 1 60 6 206 2 153 3 308 4 210 3 211 1 213 3 113 3 156 2 311 1 68 4 215 2 216 2 158 10 157 4 159 6 366 1 162 4 368 1 221 8 321 2 172 2 78 2 323 2 324 3 375 3 34 2 81 12 177 6 378 2 282 4 326 2 83 5 
359 1 308 2 91 8 93 1 133 2 68 2 67 1 215 1 271 1 157 2 72 1 159 5 7 2 48 2 366 1 221 5 321 2 252 5 199 1 32 1 78 1 105 1 143 2 81 6 177 3 378 2 257 1 282 2 326 2 83 1 84 1 306 1 60 5 153 1 288 1 
308 1 91 2 93 1 4 1 66 1 68 1 215 1 294 1 157 1 339 1 273 1 73 1 241 1 276 1 277 1 223 1 278 1 320 1 169 1 321 2 31 1 252 2 143 2 56 1 257 1 282 1 58 1 326 1 
308 1 11 1 91 1 252 1 68 1 157 1 282 1 48 1 205 1 221 1 
250 1 91 5 321 2 133 2 252 5 143 2 215 1 378 2 81 10 177 5 159 5 7 2 326 2 221 5 60 5 
257 1 48 1 93 1 83 1 221 1 153 1 
308 2 91 2 213 4 93 3 309 1 113 1 293 1 68 1 158 1 157 2 366 2 162 1 368 1 98 1 141 2 252 2 78 2 324 1 375 4 57 2 305 4 257 3 282 2 83 4 354 1 289 1 153 2 357 1 290 1 
191 1 138 1 180 1 
191 1 138 1 180 1 
116 1 138 1 180 1 188 1 207 1 
191 1 138 1 180 1 
76 1 138 1 180 1 
76 1 138 1 180 1 
76 1 138 1 180 1 
138 1 180 1 
307 1 270 1 
359 1 263 1 186 4 112 2 337 8 94 1 341 1 241 1 220 1 195 1 53 1 169 1 31 1 199 1 122 1 104 1 225 4 143 1 144 2 326 1 84 1 306 1 356 2 
359 1 261 1 263 2 186 5 112 4 133 1 337 11 94 2 341 1 241 1 220 1 74 1 195 2 53 1 169 1 31 1 199 1 104 1 122 2 225 6 143 2 144 2 378 1 326 1 84 1 306 2 86 1 356 3 
359 1 184 1 261 1 263 3 186 10 112 6 133 2 337 19 67 1 94 3 72 1 7 2 341 1 241 1 220 1 195 3 53 1 169 1 31 1 199 1 104 1 122 3 225 9 32 1 143 3 378 2 144 3 326 3 84 1 306 1 86 1 288 1 356 4 
184 1 359 1 261 1 263 3 186 7 112 6 133 2 337 17 67 1 94 3 7 1 72 1 341 1 241 1 220 1 195 3 53 1 169 1 31 1 199 1 104 1 122 3 225 10 32 1 143 3 378 2 144 3 326 2 84 1 306 1 86 2 288 1 356 5 
359 1 263 1 186 4 112 2 337 8 94 1 341 1 241 1 220 1 195 1 53 1 169 1 31 1 199 1 122 1 104 1 225 4 143 1 144 2 326 1 84 1 306 1 356 2 
359 1 263 1 186 6 112 2 133 2 337 12 67 1 94 1 7 2 72 1 195 1 53 1 199 1 122 1 225 6 32 1 143 2 378 2 144 1 326 2 84 1 306 1 86 1 288 1 356 2 
359 1 184 2 261 1 263 4 186 8 112 8 133 2 337 18 67 1 94 4 72 1 7 1 341 1 241 1 220 1 195 4 53 1 169 1 31 1 199 1 104 1 122 4 32 1 225 10 143 3 378 2 144 3 326 2 84 1 306 1 86 2 288 1 356 5 
359 1 184 2 263 4 186 7 112 8 133 3 337 16 67 1 94 4 72 1 7 2 195 4 53 1 139 1 199 1 122 4 32 1 225 9 143 3 378 3 144 3 326 2 84 1 306 1 86 3 288 1 356 6 
169 3 186 4 31 3 104 1 225 3 337 7 143 1 144 3 326 1 341 2 241 1 86 3 356 6 
359 1 184 2 263 4 186 8 112 8 133 2 337 18 67 1 94 4 72 1 7 1 341 1 241 1 220 1 195 4 53 1 139 1 169 1 31 1 199 1 104 1 122 4 32 1 225 10 143 3 378 2 144 3 326 2 84 1 306 1 86 1 288 1 356 4 
184 1 263 2 169 1 186 4 112 4 31 1 122 2 104 1 225 4 143 1 337 8 94 2 144 2 326 1 341 1 241 1 220 1 86 1 356 3 195 2 
144 2 30 1 169 1 186 3 326 1 31 1 341 1 241 1 104 1 220 1 225 3 337 6 143 1 356 2 
261 1 263 1 186 2 112 2 133 1 122 1 225 2 143 1 337 4 94 1 144 1 378 1 7 1 326 1 86 1 356 2 195 1 
186 4 133 1 199 1 225 3 337 7 143 1 144 1 378 1 7 1 326 1 84 1 74 1 306 2 86 1 356 2 
184 2 263 2 186 12 264 1 112 4 133 2 337 23 94 2 7 2 341 1 192 1 241 1 220 1 74 1 195 2 169 2 31 2 199 2 104 1 122 2 225 11 143 3 378 2 144 5 326 3 59 1 306 2 86 4 356 9 
186 1 306 1 337 1 
199 1 225 1 337 1 
261 1 263 1 250 1 112 2 186 3 133 1 122 1 225 3 337 6 143 1 94 1 378 1 144 2 7 1 326 1 86 1 195 1 356 3 
359 1 263 1 186 6 112 2 133 2 337 12 67 1 94 1 7 2 72 1 195 1 53 1 199 1 122 1 225 6 32 1 143 2 378 2 144 1 326 2 84 1 306 1 86 1 288 1 356 2 
169 1 186 3 31 1 225 3 143 1 337 6 144 1 326 1 241 1 86 1 356 2 
184 1 263 1 169 1 186 2 112 2 31 1 122 1 104 1 225 1 337 3 94 1 144 1 59 1 341 1 86 1 356 2 195 1 
263 1 53 1 169 2 112 2 186 5 31 2 122 1 225 5 337 10 143 2 56 1 94 1 144 3 326 2 241 1 86 2 195 1 356 5 
53 1 263 1 112 2 122 1 225 2 143 1 337 2 94 1 378 1 86 1 195 1 356 1 
53 1 263 1 186 2 112 2 133 1 122 1 225 2 143 1 337 4 94 1 144 1 378 1 7 1 326 1 86 1 356 2 195 1 
184 1 139 1 53 1 263 3 169 1 186 2 112 6 31 1 122 3 225 1 337 3 94 3 144 1 59 1 86 1 195 3 356 2 
184 2 261 1 263 5 186 18 112 10 133 3 337 34 94 5 7 3 341 1 241 2 220 1 74 1 222 1 195 5 139 1 53 1 169 3 31 3 199 3 104 1 122 5 225 16 143 5 201 1 377 1 378 3 144 7 59 1 326 5 84 1 306 4 86 5 356 12 
320 1 295 1 16 1 336 1 276 1 130 1 277 1 
320 1 336 1 295 1 49 1 16 1 286 1 343 1 318 1 276 1 87 1 130 1 277 1 
158 1 305 1 30 1 98 1 213 1 113 1 162 1 354 1 324 1 375 1 57 1 
320 2 301 1 213 1 4 1 113 1 324 1 375 1 176 1 57 1 294 1 158 1 305 1 295 1 149 1 162 1 276 1 50 1 277 2 
320 2 301 1 172 1 141 1 213 1 44 1 4 2 113 1 156 1 66 1 324 2 375 1 176 1 294 1 158 3 305 1 295 1 149 2 128 1 162 1 276 2 50 1 277 2 
320 2 155 1 172 1 141 1 213 2 44 1 4 2 113 1 156 1 66 1 324 2 375 2 176 1 237 1 294 1 158 3 305 2 295 1 149 2 128 1 162 1 276 2 50 1 277 2 
166 1 210 1 155 1 172 1 93 2 141 1 213 3 113 1 156 1 173 1 323 1 324 1 375 3 57 1 216 1 257 2 305 3 158 4 48 1 149 1 83 1 162 1 221 1 
210 1 40 1 155 1 172 1 93 2 141 1 213 3 113 1 156 1 323 1 324 1 375 3 57 1 216 1 257 2 305 3 158 4 48 1 149 1 83 1 162 1 221 1 
305 1 213 1 113 1 162 1 355 1 375 1 
63 1 213 7 113 2 79 1 375 7 324 2 13 1 304 1 57 2 114 1 305 6 158 3 313 1 351 1 229 1 149 1 162 3 344 1 355 1 88 1 346 1 
186 3 2 1 4 1 337 6 94 2 294 1 295 2 190 1 341 1 241 1 96 1 50 1 195 2 301 1 104 1 143 1 254 1 144 2 305 1 351 1 149 1 108 1 109 1 356 2 263 2 112 4 213 1 266 1 113 1 158 1 25 2 162 1 220 1 276 1 277 2 165 1 320 2 169 1 31 1 122 2 322 1 225 3 375 1 324 1 176 1 283 2 326 1 
308 2 210 1 40 1 91 1 93 3 213 1 68 2 216 1 157 2 158 2 48 1 221 1 368 1 11 1 252 1 253 1 323 1 375 1 57 1 34 1 305 1 257 3 282 2 83 2 352 1 152 1 205 1 153 1 
196 1 213 2 113 1 375 2 324 1 304 1 216 1 305 2 158 2 351 1 149 1 162 2 355 1 
98 1 170 1 155 1 213 4 113 1 375 4 324 1 57 1 305 4 158 1 351 1 162 1 354 1 
249 1 141 1 213 2 113 1 375 2 268 1 324 1 272 1 305 2 158 1 313 1 149 1 162 2 88 1 
22 1 209 1 305 1 213 1 296 1 113 1 162 1 373 1 375 1 57 1 
61 1 158 1 114 1 305 2 351 1 213 2 229 1 113 1 162 1 324 1 375 2 
63 1 98 1 170 1 141 1 213 5 113 2 79 1 375 5 324 2 57 1 305 4 114 1 158 3 351 1 354 1 162 2 
279 1 63 1 98 1 170 1 141 1 213 5 113 2 375 5 324 2 57 1 305 4 114 1 158 3 351 1 354 1 162 2 
320 2 213 1 4 1 113 1 324 1 375 1 176 1 57 1 237 1 294 1 158 1 305 1 295 1 149 1 162 1 276 1 50 1 277 2 
141 1 213 1 113 1 375 1 324 1 304 1 305 1 158 1 313 1 149 1 162 2 88 1 346 1 
131 1 251 1 320 1 333 1 69 1 163 1 27 1 276 1 277 1 
3 1 218 1 69 1 
295 1 163 1 9 1 27 1 69 1 
93 2 3 1 44 1 66 1 323 1 69 1 257 2 48 1 295 1 218 1 128 1 352 1 163 2 353 1 9 2 221 1 27 2 245 1 208 1 
238 1 126 1 198 1 262 3 117 1 214 1 367 1 298 1 124 1 345 3 376 1 
202 1 62 1 371 1 298 1 
298 1 376 1 
30 1 298 1 124 1 376 1 
238 1 262 1 214 1 298 1 124 1 345 1 376 1 
262 1 1 1 183 1 
262 3 198 2 103 1 214 1 124 1 376 1 126 1 238 1 316 1 285 1 298 1 345 3 
238 1 262 2 325 1 117 1 214 1 298 1 124 1 345 2 376 1 
62 1 262 1 370 1 214 1 373 1 126 1 238 1 22 1 350 1 298 1 345 1 
238 1 126 1 262 1 214 1 298 1 345 1 376 1 
238 1 126 1 262 1 214 1 124 1 345 1 376 2 
262 2 214 2 376 1 228 1 126 1 238 2 182 1 298 1 345 2 52 1 
62 1 262 3 371 1 214 1 142 1 124 1 376 1 126 1 238 1 117 2 367 1 298 2 345 3 
262 2 214 1 135 1 373 1 124 1 376 1 126 1 238 1 22 2 14 1 350 1 117 1 296 1 298 1 345 2 
62 1 262 4 233 1 371 1 214 2 124 1 376 1 126 1 238 2 325 1 117 2 298 2 345 4 
238 1 126 1 262 1 214 1 298 1 124 1 345 1 376 1 
62 1 198 1 262 4 371 1 103 1 214 1 124 2 376 2 238 1 202 1 117 2 285 1 298 3 345 4 
89 1 132 1 262 2 214 1 124 1 376 1 126 1 238 1 115 1 117 1 298 1 345 2 
262 3 198 2 103 1 214 1 124 1 376 1 126 1 238 1 160 1 285 2 298 1 345 3 
203 1 147 1 243 2 298 2 
238 1 126 1 178 1 262 1 214 1 345 1 
238 1 126 1 262 2 117 1 214 1 367 1 298 1 124 1 345 2 376 1 
267 1 
238 1 126 1 262 1 214 1 298 1 124 1 345 1 376 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 1 241 1 72 1 110 2 27 1 28 2 4 2 369 4 193 5 370 6 194 1 225 2 373 9 198 1 375 2 230 1 200 1 351 2 202 2 172 1 271 9 121 1 149 1 20 3 46 1 379 1 330 1 51 1 
25 1 241 1 72 1 110 2 27 1 28 2 4 2 369 4 193 5 370 6 194 1 225 2 373 9 198 1 375 2 230 1 200 1 202 2 351 2 172 1 271 9 121 1 149 1 20 3 46 1 379 1 330 1 51 1 
25 1 241 1 72 1 110 2 27 1 28 2 4 2 369 5 193 6 370 7 194 1 225 2 373 10 198 1 375 2 230 1 200 1 202 2 351 2 172 1 271 10 121 1 149 1 20 4 46 1 379 1 330 1 51 1 
25 1 241 1 72 1 110 2 27 1 28 2 4 2 369 3 193 4 370 4 194 1 225 2 373 7 198 1 375 2 230 1 200 1 202 2 351 1 172 1 271 7 121 1 149 1 20 2 46 1 379 1 51 1 
373 4 241 1 72 1 375 1 230 1 28 1 202 1 351 2 172 1 271 4 4 1 149 1 20 1 369 2 193 3 370 3 225 1 330 1 
373 2 110 1 269 1 375 1 230 1 28 1 202 1 172 1 271 2 149 1 325 1 46 1 193 1 225 1 117 1 51 1 
373 3 110 1 230 1 200 1 202 2 172 1 271 3 149 1 20 1 369 1 193 2 370 1 225 2 
209 1 25 1 241 1 72 1 110 1 28 1 4 1 369 4 193 5 370 7 225 2 373 9 375 1 230 1 200 1 202 2 351 2 172 1 271 9 149 1 20 3 379 1 153 1 330 1 
209 1 25 1 241 1 72 1 110 1 28 1 4 1 369 4 193 5 370 7 225 2 373 9 375 1 230 1 200 1 202 2 351 2 172 1 271 9 149 1 20 3 379 1 153 1 330 1 
378 1 132 1 208 1 
147 2 132 1 109 1 
298 1 95 2 276 2 30 2 239 2 216 2 187 1 287 2 
308 2 129 1 333 1 87 1 335 1 30 2 216 3 187 1 3 1 93 1 287 2 264 1 56 1 73 2 95 2 192 1 314 1 316 1 163 2 141 1 63 1 40 1 347 1 15 1 350 1 168 1 319 1 353 1 355 1 66 2 298 1 234 1 255 1 276 2 236 2 328 1 239 3 
356 1 95 1 274 1 276 1 30 1 239 1 216 1 187 1 128 1 287 1 
345 1 289 1 95 1 178 1 108 1 132 1 208 1 239 1 216 1 128 1 49 1 94 1 5 1 307 1 
132 1 30 1 216 1 94 2 287 1 5 2 95 1 289 1 178 1 276 1 108 1 208 1 239 1 49 1 128 1 
21 1 238 1 218 1 94 1 5 1 
228 1 212 1 21 1 132 1 208 1 238 1 94 2 5 2 
21 1 94 1 5 1 
30 1 187 1 216 1 5 1 94 1 287 1 356 1 17 1 95 1 274 1 276 1 238 1 239 1 128 1 
132 1 
258 1 212 1 21 1 132 1 208 1 238 1 94 2 5 2 
374 1 86 2 164 1 26 1 229 1 88 1 212 1 132 1 118 2 5 5 94 5 144 2 148 1 21 2 208 1 238 2 62 1 329 1 180 1 
298 1 378 1 
293 1 349 1 30 1 216 2 287 1 298 2 95 2 276 1 239 2 
150 1 53 1 306 1 
308 1 129 1 333 1 87 1 335 1 350 1 319 1 216 1 353 1 73 1 298 1 18 1 255 1 314 1 239 1 163 1 
129 1 308 1 333 1 87 1 53 1 335 1 350 1 319 1 30 1 353 1 216 2 2 1 73 1 95 1 255 1 276 1 314 1 239 2 163 1 372 1 
298 1 95 3 276 3 30 3 239 3 216 3 2 1 287 1 
356 1 95 1 276 1 30 1 239 1 216 1 128 1 
95 1 293 1 276 1 349 1 30 1 239 1 216 1 128 1 287 1 
129 1 308 1 333 1 87 1 335 1 30 3 112 1 216 4 187 1 3 1 2 1 287 2 5 1 94 1 264 1 73 1 95 3 289 1 192 1 314 1 163 1 372 1 141 1 63 1 227 1 40 1 347 1 15 1 349 1 350 1 168 1 319 1 353 1 66 1 298 1 178 1 255 1 276 3 108 1 236 2 328 1 239 4 49 1 128 1 
298 1 95 2 276 1 30 1 354 1 239 2 216 2 2 1 307 1 
349 1 132 1 30 3 216 3 112 1 2 2 337 1 287 1 94 1 5 1 289 1 95 3 178 1 276 3 108 1 239 3 128 1 49 1 372 1 
95 2 150 1 53 1 276 2 349 1 30 2 239 2 216 2 2 1 287 1 
308 1 129 1 333 1 87 1 335 1 350 1 319 1 216 1 353 1 73 1 298 1 255 1 314 1 239 1 163 1 
308 1 129 1 333 1 348 1 335 1 319 1 216 1 353 1 73 1 298 1 255 1 290 1 314 1 239 1 163 1 
52 1 281 1 332 1 53 2 3 1 137 1 188 1 367 1 141 1 63 2 40 1 15 1 101 1 168 1 252 1 66 4 106 1 234 2 150 2 275 1 236 2 70 1 328 1 306 2 
280 1 95 1 108 1 276 1 30 1 239 1 216 1 128 1 
77 1 349 1 30 4 354 1 216 5 175 1 2 2 287 1 298 1 95 5 276 4 239 5 307 1 372 1 
356 1 280 1 95 2 276 2 30 2 239 2 216 2 128 1 
304 1 176 1 
304 1 176 1 
146 1 361 1 
146 1 361 1 
146 1 361 1 
1 1 304 1 176 1 
1 1 304 1 176 1 
165 1 304 1 176 1 
338 1 146 1 361 1 304 2 32 1 176 2 
1 1 304 1 176 1 
226 1 304 1 176 1 
226 1 304 1 176 1 
226 1 304 1 176 1 
131 2 243 1 41 2 132 1 176 2 5 2 94 2 253 3 338 1 324 1 273 2 340 1 68 2 341 1 152 1 342 2 304 2 75 1 127 1 
360 1 131 1 30 2 216 2 94 1 5 1 95 2 368 1 342 1 223 1 61 1 165 1 41 1 78 1 253 1 176 1 298 1 273 1 276 2 304 1 358 1 239 2 127 1 48 1 
375 1 28 1 4 1 
375 1 269 1 28 1 
7 1 375 3 269 1 59 1 364 1 4 2 
375 2 269 1 59 1 364 1 244 1 4 1 
375 2 269 1 364 1 59 2 4 1 
52 1 86 1 212 1 88 3 132 2 285 1 137 1 159 1 94 5 5 5 96 2 190 1 247 1 160 1 223 1 62 2 229 1 166 2 118 1 144 1 145 1 147 3 106 1 254 1 275 1 21 1 277 2 358 1 109 1 238 4 208 1 48 1 
132 1 30 1 187 1 216 1 218 1 336 1 94 2 5 2 287 1 95 1 268 1 356 1 17 1 274 1 179 1 21 1 276 1 238 2 208 1 239 1 128 1 
52 1 86 1 88 3 132 3 285 1 137 1 94 3 5 3 96 1 190 1 247 1 223 1 62 2 166 2 118 1 144 1 145 1 147 4 106 1 254 1 275 1 277 2 208 1 109 2 238 2 329 1 
52 2 86 1 88 5 132 4 285 1 134 1 137 2 94 4 5 4 96 2 190 1 248 1 247 1 223 2 343 1 62 4 166 4 118 1 144 1 145 2 147 7 106 2 254 1 275 2 277 4 208 1 109 3 238 3 329 1 
378 1 102 1 314 1 
284 1 314 1 
158 1 
335 1 314 1 
233 1 335 1 14 1 102 2 314 3 319 1 
335 1 314 1 319 1 
363 1 314 1 
359 1 181 1 279 1 63 3 377 1 55 1 66 7 188 2 123 2 106 1 34 1 367 3 234 4 58 1 275 1 205 1 138 1 
359 1 181 1 279 1 63 3 377 1 55 1 66 7 188 2 123 2 106 1 34 1 367 3 234 4 58 1 275 1 205 1 138 1 
359 1 181 1 279 1 63 3 155 1 377 1 55 1 66 7 188 2 123 2 106 1 34 1 367 3 234 4 58 1 275 1 205 1 138 1 
66 1 123 1 181 1 234 1 215 1 55 2 
359 1 181 1 55 1 92 1 188 3 34 1 367 4 58 1 138 1 141 2 63 4 15 2 201 1 168 2 377 1 66 9 123 2 106 1 177 1 234 5 275 1 205 1 236 4 328 2 
308 1 110 1 334 1 28 1 54 1 4 1 33 1 73 1 7 1 193 1 370 1 225 1 292 1 163 1 371 1 373 2 269 1 375 2 230 1 202 1 172 1 173 1 353 1 143 1 271 2 79 1 149 1 255 1 69 1 302 1 
308 1 110 1 111 1 334 1 28 1 54 1 4 1 73 1 339 1 7 1 97 1 193 1 370 2 225 1 292 1 163 1 373 3 269 1 375 2 230 1 202 1 173 1 353 1 143 1 271 3 79 1 149 1 255 1 69 1 302 1 
308 1 110 1 111 1 54 1 28 1 4 1 73 1 339 1 7 1 193 1 370 2 163 1 373 2 269 1 375 2 230 1 173 1 353 1 143 1 271 2 79 1 149 1 255 1 69 1 302 1 
373 1 308 1 110 2 333 1 335 1 295 1 167 1 260 1 202 1 353 1 115 1 271 1 79 2 220 1 73 1 255 1 97 1 69 2 302 2 314 1 315 1 225 1 163 1 
308 1 110 1 111 1 334 1 28 1 54 1 4 1 73 1 7 1 225 1 292 1 163 1 371 1 373 1 269 1 375 2 202 1 172 1 173 1 353 1 143 1 271 1 79 1 255 1 69 1 302 1 
99 1 
86 1 333 2 282 1 184 2 88 2 0 2 335 1 132 2 90 1 286 1 5 5 94 5 95 1 289 1 190 1 139 2 98 2 9 1 62 2 345 1 295 1 353 1 144 1 147 2 255 1 299 1 21 6 207 1 108 1 301 1 208 1 109 2 307 1 308 2 213 2 212 3 260 1 216 1 73 2 222 1 224 1 314 1 163 2 39 1 229 1 376 2 118 1 44 1 272 4 122 1 178 1 235 2 239 1 49 1 128 1 
258 1 345 1 39 1 212 1 0 1 216 1 286 1 272 2 5 3 94 3 289 1 95 1 178 1 299 1 222 1 21 2 108 1 301 1 239 1 128 1 49 1 307 1 
258 1 212 1 132 1 216 1 286 1 94 3 5 3 95 1 289 1 222 1 345 1 39 1 376 1 272 3 178 1 299 1 21 1 108 1 301 1 208 1 239 1 49 1 128 1 307 1 
258 1 212 1 213 1 0 1 132 1 216 1 286 1 94 3 5 3 95 1 289 1 222 1 345 1 39 1 376 1 272 3 178 1 299 1 108 1 21 2 301 1 208 1 239 1 49 1 128 1 307 1 
86 1 88 1 184 2 0 4 132 5 286 1 5 5 94 5 289 1 95 1 139 2 98 2 62 1 345 1 12 1 296 1 144 1 299 1 108 1 21 7 301 1 208 5 109 2 24 1 307 1 258 1 213 4 259 1 212 3 29 1 216 1 222 1 224 1 39 1 229 1 376 4 118 1 44 1 272 6 178 1 235 2 239 1 128 1 49 1 
86 1 88 1 184 2 282 1 0 2 132 2 286 1 5 4 94 4 289 1 95 1 139 2 98 2 62 1 345 1 144 1 147 2 299 1 108 1 21 4 301 1 109 2 208 1 307 1 212 2 213 2 216 1 222 1 224 1 39 1 229 1 118 1 376 2 44 1 272 4 178 1 235 2 239 1 128 1 49 1 
86 1 213 2 212 2 184 2 88 1 0 2 132 1 216 1 286 1 94 4 5 4 95 1 289 1 222 1 139 2 98 2 224 1 62 1 345 1 39 1 229 1 12 1 376 2 118 1 44 1 296 1 272 4 144 1 178 1 299 1 21 4 108 1 235 2 301 1 208 1 109 2 239 1 49 1 128 1 24 1 307 1 
86 1 213 2 212 2 184 2 88 1 0 2 132 1 216 1 286 1 94 4 5 4 95 1 289 1 222 1 139 2 98 2 224 1 62 1 345 1 39 1 229 1 12 1 376 2 118 1 44 1 296 1 272 4 144 1 178 1 299 1 21 4 108 1 235 2 301 1 208 1 109 2 239 1 49 1 128 1 24 1 307 1 
86 1 156 1 183 1 213 2 212 2 184 2 88 1 0 2 132 1 216 1 286 1 94 4 5 4 95 1 289 1 222 1 139 2 10 1 62 1 345 1 39 1 229 1 376 2 118 1 44 1 296 1 103 2 272 4 144 1 147 2 178 1 299 1 21 4 108 1 301 1 208 1 239 1 85 2 49 1 128 1 307 1 
86 1 212 2 184 2 88 1 213 3 29 1 0 3 132 1 216 1 286 1 94 4 5 4 95 1 289 1 222 1 139 2 98 2 224 1 62 1 345 1 39 1 229 1 12 1 118 1 376 3 44 1 296 1 272 5 144 1 178 1 299 1 108 1 21 5 235 2 301 1 208 1 109 2 239 1 49 1 128 1 24 1 307 1 
86 1 212 2 184 2 88 1 213 3 29 1 0 3 132 1 216 1 286 1 94 4 5 4 95 1 289 1 222 1 139 2 98 2 224 1 62 1 345 1 39 1 229 1 12 1 118 1 376 3 44 1 296 1 272 5 144 1 178 1 299 1 108 1 21 5 235 2 301 1 208 1 109 2 239 1 49 1 128 1 24 1 307 1 
86 1 183 1 282 1 213 2 212 2 184 2 88 1 0 2 132 1 216 1 286 1 94 4 5 4 95 1 289 1 222 1 139 2 62 1 345 1 39 1 229 1 376 2 118 1 44 1 103 2 272 4 144 1 147 2 178 1 299 1 21 4 108 1 301 1 208 1 239 1 85 2 49 1 128 1 307 1 
359 1 53 1 3 1 188 2 367 2 58 1 138 1 141 1 63 3 40 1 15 1 101 1 168 1 377 1 66 6 123 1 378 1 106 1 298 2 234 3 150 1 205 1 275 1 236 2 328 1 306 1 
257 1 52 1 53 11 133 1 3 2 137 2 93 1 264 1 188 1 34 1 367 2 57 1 74 3 141 2 63 6 317 1 40 1 15 2 168 2 120 3 66 14 145 2 298 1 67 1 106 2 234 8 150 4 206 1 275 1 236 4 328 2 306 11 71 1 
129 1 308 1 333 1 87 1 335 1 214 1 133 1 89 1 30 1 216 2 3 1 2 1 93 1 264 1 73 1 95 1 314 1 163 1 372 1 141 1 63 1 40 1 15 1 350 1 168 1 170 1 319 1 353 1 66 2 298 1 18 1 234 1 150 1 255 1 276 1 236 2 328 1 239 2 
129 2 52 2 333 1 87 2 335 2 53 7 133 1 2 1 3 3 137 2 93 1 288 2 188 4 95 1 58 1 138 1 192 2 60 2 141 3 63 10 199 1 15 3 350 2 353 2 104 2 66 20 145 2 298 2 106 3 150 7 205 1 255 2 306 7 359 1 308 3 111 1 30 1 216 3 264 1 73 3 34 4 367 8 311 1 314 2 162 2 163 3 372 1 40 3 168 3 319 2 377 1 123 1 234 10 275 3 276 1 236 6 239 3 328 3 380 1 
308 8 111 1 333 2 335 2 260 1 30 1 91 1 216 1 2 1 3 2 93 1 219 1 33 1 264 1 73 8 56 2 366 1 95 1 314 3 163 7 141 2 63 1 40 2 294 1 101 1 15 2 318 1 295 1 168 2 353 2 66 2 234 1 80 1 357 1 255 2 276 1 236 4 239 1 328 2 
52 1 53 1 133 1 30 1 216 1 3 1 137 1 287 1 188 1 367 1 95 1 141 1 63 2 40 1 349 1 15 1 168 1 321 1 145 1 66 3 106 1 234 1 150 1 275 1 276 1 236 2 306 1 328 1 239 1 
141 1 40 1 53 1 101 1 15 1 168 1 252 1 3 1 137 1 66 2 34 1 106 1 367 1 234 2 150 1 236 2 306 1 328 1 
141 1 52 1 63 2 281 1 40 1 53 1 101 1 15 1 168 1 3 1 66 2 188 1 367 1 150 1 275 1 236 2 306 1 328 1 
52 1 53 2 137 1 3 1 188 1 34 1 367 2 141 1 63 2 40 1 15 1 101 1 168 1 145 1 66 4 106 1 234 2 150 2 275 1 236 2 328 1 306 2 
141 1 40 1 53 1 15 1 168 1 252 1 3 1 137 1 66 2 34 1 106 1 367 1 234 2 150 1 80 1 236 2 306 1 328 1 
141 1 52 1 63 2 281 1 40 1 53 1 15 1 168 1 3 1 66 2 188 1 367 1 150 1 80 1 275 1 236 2 306 1 328 1 
52 1 53 2 137 1 3 1 188 1 34 1 367 2 141 1 63 2 40 1 15 1 168 1 145 1 66 4 106 1 234 2 150 2 80 1 275 1 236 2 328 1 306 2 
52 1 141 1 63 2 40 1 53 2 15 1 168 1 3 1 137 1 145 1 66 4 188 1 34 1 106 1 367 2 234 2 150 2 275 1 236 2 306 2 328 1 
129 1 308 1 333 1 87 1 335 1 216 1 3 1 93 1 264 1 73 1 192 1 314 1 163 1 141 1 63 1 40 1 15 1 350 1 168 1 319 1 353 1 66 2 298 1 234 1 255 1 236 2 239 1 328 1 
129 1 308 1 333 1 335 1 216 1 3 1 93 1 264 1 73 1 221 1 290 1 314 1 163 1 141 1 63 1 40 1 348 1 15 1 168 1 319 1 353 1 66 2 298 1 234 1 255 1 236 2 239 1 328 1 
52 1 53 2 133 1 137 1 3 1 188 1 34 1 367 2 141 1 63 2 40 1 15 1 168 1 145 1 66 4 106 1 234 2 150 2 275 1 236 2 328 1 306 2 
52 1 129 1 308 1 87 1 53 2 335 1 216 1 137 1 3 1 33 1 188 1 73 1 34 1 367 2 192 1 314 1 162 1 163 1 141 1 63 2 40 1 15 1 350 1 168 1 319 1 353 1 66 4 145 1 106 1 234 2 150 2 275 1 255 1 236 2 306 2 239 1 328 1 
52 1 53 1 133 1 30 1 216 1 3 1 137 1 287 1 34 1 367 1 95 1 141 1 63 1 40 1 349 1 15 1 168 1 142 1 145 1 66 3 106 1 234 2 150 1 275 1 276 1 236 2 328 1 239 1 306 1 
359 1 52 4 331 1 157 4 185 1 113 1 137 4 92 1 262 1 188 4 34 4 367 8 58 1 138 1 74 4 196 1 141 3 63 21 346 1 15 3 201 1 43 1 270 1 168 3 65 2 120 3 377 1 204 1 66 41 145 4 123 1 67 1 106 5 234 20 19 1 205 1 206 3 275 5 22 1 237 1 278 1 236 6 328 3 
359 1 52 3 331 1 157 4 185 1 113 1 137 4 92 2 262 1 188 4 34 3 367 7 58 1 138 1 74 4 196 1 141 4 63 18 346 1 15 4 201 1 43 1 270 1 168 4 65 2 120 3 377 1 204 1 66 38 145 4 123 1 67 1 106 5 234 20 19 1 205 1 206 3 275 4 22 1 237 1 278 1 236 8 328 4 
359 1 257 2 52 7 331 1 157 4 185 1 113 1 137 7 92 1 262 1 188 7 34 7 367 14 58 1 138 1 74 4 196 1 141 2 63 25 346 1 15 2 201 1 270 1 168 2 65 1 120 4 377 1 204 1 66 52 145 7 123 1 67 2 106 8 234 27 205 1 206 2 275 8 22 1 237 1 278 1 236 4 328 2 
52 3 157 2 185 1 113 1 137 3 188 3 34 3 35 1 367 6 74 2 196 1 141 2 63 10 15 2 201 1 168 2 65 1 120 1 204 2 66 19 145 3 67 1 106 3 234 9 19 1 206 1 275 3 278 1 236 4 328 2 
52 2 331 1 157 4 185 1 113 1 137 3 92 2 262 1 188 2 34 2 367 4 74 2 196 1 141 3 63 12 346 1 15 3 201 1 168 3 270 1 65 2 120 2 204 1 66 26 145 3 106 3 234 14 275 2 206 2 22 1 237 1 278 2 236 6 328 3 
338 1 197 1 273 1 131 1 243 1 41 1 341 1 342 1 304 1 176 1 
165 1 78 1 
273 1 131 1 41 1 38 1 342 1 31 1 304 1 136 1 176 1 
131 1 243 1 41 1 132 1 5 1 94 1 176 1 253 2 338 1 324 1 273 1 340 1 68 1 341 1 342 1 304 1 75 1 127 1 
131 1 243 1 41 1 132 1 5 1 94 1 176 1 253 2 338 1 324 1 273 1 340 1 68 1 341 1 342 1 304 1 75 1 127 1 
131 1 243 1 41 1 132 1 5 1 94 1 176 1 253 2 338 1 324 1 273 1 340 1 68 1 341 1 342 1 304 1 75 1 127 1 
1 1 83 1 32 1 
1 1 83 1 32 1 
226 1 251 1 
226 1 251 1 32 1 
360 1 368 1 
360 1 131 1 30 2 216 2 94 1 5 1 95 2 368 1 342 1 223 1 75 1 61 1 165 1 41 1 78 1 176 1 253 1 298 1 273 1 68 1 276 2 125 1 238 1 304 1 358 1 239 2 48 1 
1 1 83 1 
226 1 251 1 32 1 
308 2 210 1 335 1 133 1 186 1 91 1 261 1 216 2 3 1 93 1 264 1 73 2 245 1 56 2 366 1 95 2 314 1 163 2 141 1 63 1 40 1 15 1 169 1 168 1 353 1 66 2 234 1 255 1 236 2 328 1 239 2 
308 2 130 1 111 1 375 2 269 1 28 1 54 1 353 1 173 1 4 1 33 1 73 2 7 1 255 1 302 1 47 1 250 1 292 1 163 2 
308 1 111 1 375 2 269 1 28 1 54 1 173 1 353 1 4 1 73 1 7 1 255 1 302 1 47 1 292 1 163 1 240 1 
308 1 333 1 335 1 167 1 295 1 260 1 353 1 73 1 255 1 302 1 161 1 314 1 250 1 163 1 
308 1 130 1 111 1 375 2 269 1 28 1 54 1 173 1 353 1 4 1 73 1 7 1 255 1 302 1 47 1 250 1 292 1 163 1 
36 1 
374 1 378 1 26 1 88 1 132 1 208 1 62 1 
86 1 229 1 212 1 88 1 132 2 118 1 94 1 5 1 144 1 147 1 21 1 235 1 98 1 224 1 208 1 109 1 62 1 
52 2 86 4 182 2 333 1 88 9 335 3 284 3 132 8 137 2 5 5 94 5 289 2 191 2 190 2 9 1 62 8 14 1 16 1 102 2 353 3 203 2 352 2 104 2 144 4 145 2 147 12 106 2 107 2 255 4 21 5 208 2 109 6 256 1 308 3 362 2 363 2 26 1 212 3 114 2 33 1 73 3 37 1 266 1 314 10 163 3 374 1 229 4 166 6 118 4 119 2 319 3 320 1 275 2 277 6 
52 2 331 1 86 2 182 1 212 1 88 8 132 5 114 2 137 2 94 1 5 1 262 1 190 1 9 1 100 1 74 1 195 1 62 5 346 1 229 2 166 5 118 2 270 1 120 1 144 2 145 2 147 6 106 2 206 1 275 2 21 1 22 1 277 5 109 3 208 2 
359 1 86 1 182 1 211 1 88 2 30 1 216 1 114 2 187 1 94 1 5 1 287 1 95 1 138 1 62 2 229 1 12 1 118 1 377 1 144 1 356 1 17 1 106 2 274 1 275 1 276 1 239 1 128 1 
374 1 86 1 26 1 229 1 88 1 132 1 118 1 208 1 62 1 144 1 
52 2 182 1 166 5 88 5 132 5 114 2 137 2 104 1 145 2 147 10 106 2 275 2 277 5 109 5 62 5 
212 1 21 1 132 1 208 1 94 1 5 1 
308 4 154 1 86 2 333 2 88 2 212 2 335 1 260 1 90 1 5 3 94 3 73 4 190 2 9 2 314 1 163 4 62 2 229 1 118 2 295 1 353 1 320 1 144 2 255 1 207 1 21 4 305 1 256 2 329 1 
308 1 129 1 333 1 87 1 335 1 30 2 216 3 187 1 3 1 287 2 264 1 73 1 95 2 192 1 314 1 163 1 141 1 63 1 40 1 347 1 15 1 350 1 168 1 319 1 353 1 66 1 298 1 255 1 276 2 236 2 239 3 328 1 
86 1 229 1 166 2 88 1 118 1 132 4 144 1 123 1 147 4 190 1 277 2 9 1 109 2 208 2 62 2 
76 1 273 1 342 1 
76 1 273 1 342 1 
360 1 273 1 243 1 300 1 342 1 
76 1 273 1 342 1 
273 1 342 1 231 1 
273 1 342 1 231 1 
273 1 342 1 231 1 
273 1 342 1 
304 1 176 1 
359 1 188 2 367 2 58 1 138 1 74 1 141 1 63 4 15 1 201 1 168 1 120 1 377 1 66 8 123 1 106 1 234 4 275 1 206 1 205 1 22 1 236 2 328 1 
359 1 137 1 188 2 34 1 367 3 58 1 138 1 74 2 141 2 63 5 15 2 201 1 168 2 171 1 120 1 377 1 66 11 145 1 123 1 67 1 106 2 234 6 275 1 205 1 206 1 22 1 236 4 328 2 
359 1 52 2 331 1 137 2 262 1 92 1 188 3 34 1 367 4 58 1 138 1 74 1 141 3 63 10 346 1 15 3 201 1 168 3 270 1 171 1 120 1 377 1 66 19 145 2 123 1 106 3 234 9 205 1 206 1 275 3 22 1 236 6 328 3 
359 1 52 1 331 1 137 2 92 1 262 1 188 3 34 2 367 5 58 1 138 1 74 1 141 3 63 7 346 1 15 3 201 1 168 3 270 1 171 1 120 1 377 1 66 17 145 2 123 1 106 3 234 10 205 1 206 1 275 2 22 1 236 6 328 3 
359 1 188 2 367 2 58 1 138 1 74 1 141 1 63 4 15 1 201 1 168 1 120 1 377 1 66 8 123 1 106 1 234 4 275 1 206 1 205 1 22 1 236 2 328 1 
52 2 331 1 137 2 262 1 188 1 34 1 367 2 74 1 141 1 63 6 346 1 15 1 201 1 168 1 270 1 120 1 66 12 145 2 106 2 234 6 206 1 275 2 22 1 236 2 328 1 
359 1 52 1 331 1 137 2 262 1 92 2 188 3 34 2 367 5 58 1 138 1 74 1 141 4 63 8 346 1 15 4 201 1 168 4 270 1 171 1 120 1 377 1 66 18 145 2 123 1 106 3 234 10 205 1 206 1 275 2 22 1 236 8 328 4 
52 2 331 1 137 3 262 1 92 2 188 3 34 3 367 6 74 1 141 4 63 7 346 1 15 4 201 1 168 4 270 1 120 1 66 16 145 3 106 3 234 9 19 1 206 1 275 2 22 1 236 8 328 4 
359 1 63 4 377 3 66 7 188 3 34 3 106 1 367 6 234 3 58 2 275 1 205 1 138 3 
359 1 52 1 331 1 137 2 262 1 92 2 188 3 34 1 367 4 58 1 138 1 74 1 141 4 63 8 346 1 15 4 201 1 168 4 270 1 120 1 377 1 66 18 145 2 123 1 106 3 234 10 19 1 205 1 206 1 275 2 22 1 236 8 328 4 
359 1 141 2 63 4 15 2 168 2 377 1 92 1 66 8 123 1 188 2 106 1 34 1 234 4 367 3 58 1 275 1 205 1 138 1 236 4 328 2 
359 1 63 3 377 1 66 6 123 1 188 2 378 1 106 1 367 2 234 3 58 1 205 1 275 1 138 1 
52 1 141 1 63 2 15 1 168 1 171 1 137 1 145 1 66 4 188 1 106 1 34 1 367 2 234 2 275 1 236 2 328 1 
52 1 63 4 120 1 137 1 66 7 145 1 188 1 67 1 106 1 34 1 234 3 367 2 275 1 206 1 74 2 
359 1 52 2 257 1 137 2 92 2 188 5 34 4 367 9 57 1 58 1 138 2 74 2 141 2 63 12 15 2 168 2 120 2 377 2 145 2 66 23 123 1 106 3 67 1 234 11 205 1 275 3 327 1 236 4 328 2 
66 1 63 1 74 1 
66 1 234 1 120 1 
141 1 52 1 63 3 15 1 168 1 171 1 137 1 104 1 66 6 145 1 188 2 106 1 34 1 234 3 367 3 275 1 236 2 328 1 
52 2 331 1 137 2 262 1 188 1 34 1 367 2 74 1 141 1 63 6 346 1 15 1 201 1 168 1 270 1 120 1 66 12 145 2 106 2 234 6 206 1 275 2 22 1 236 2 328 1 
359 1 63 3 377 1 66 6 188 1 106 1 34 1 234 3 367 2 275 1 138 1 
141 1 63 2 15 1 168 1 377 1 92 1 66 3 188 1 34 1 234 1 367 2 58 1 205 1 138 1 327 1 236 2 328 1 
141 1 359 1 63 5 211 1 15 1 201 1 168 1 377 2 66 10 188 3 34 2 106 2 367 5 234 5 275 2 138 2 236 2 328 1 
141 1 15 1 201 1 168 1 137 1 66 2 106 1 34 1 234 2 367 1 236 2 328 1 
52 1 141 1 63 2 15 1 201 1 168 1 137 1 145 1 66 4 188 1 106 1 34 1 367 2 234 2 275 1 236 2 328 1 
141 3 63 2 15 3 201 1 168 3 377 1 92 1 66 3 188 1 34 1 367 2 234 1 19 1 138 1 327 1 236 6 328 3 
359 2 52 3 217 1 137 3 92 2 188 7 34 5 367 12 58 1 138 3 74 4 141 5 63 18 267 1 15 5 201 1 168 5 171 1 120 3 377 3 66 34 145 3 123 1 67 1 106 5 234 16 19 1 205 1 206 1 275 5 327 1 303 1 236 10 328 5 
298 1 95 1 239 1 216 1 354 1 84 1 307 1 
13 1 354 1 216 1 6 1 263 1 246 1 298 1 323 1 95 1 84 1 239 1 307 1 
308 1 73 1 378 1 333 1 255 1 335 1 295 1 260 1 314 1 353 1 163 1 
129 1 308 1 333 1 335 1 350 1 319 1 30 1 216 2 353 1 2 1 73 1 298 1 95 1 255 1 276 1 314 1 239 2 163 1 
129 1 308 1 363 1 335 2 350 1 319 2 30 1 203 1 216 2 353 1 2 1 73 1 298 1 95 2 255 1 108 1 276 2 314 3 239 2 256 1 128 1 49 1 163 1 
129 1 308 2 363 1 335 2 64 1 319 2 30 1 203 1 216 2 353 1 2 1 73 2 298 1 95 2 255 1 108 1 276 2 290 1 314 3 239 2 256 1 128 1 49 1 163 2 
308 3 363 1 333 1 335 1 284 1 132 1 309 1 94 2 5 2 73 3 289 1 314 4 163 3 344 1 64 1 102 1 319 1 353 1 203 1 255 1 21 1 208 1 256 1 
308 3 363 1 333 1 335 1 132 1 284 1 64 1 119 1 102 1 319 1 203 1 353 1 5 2 94 2 73 3 289 1 255 1 21 1 208 1 314 4 256 1 163 3 
308 1 73 1 255 1 294 1 353 1 163 1 
308 7 111 1 333 2 294 1 14 1 335 2 318 1 135 1 319 1 91 1 353 2 219 1 33 1 56 1 73 7 357 1 255 3 82 1 314 3 291 1 163 6 
359 1 129 1 210 1 308 1 87 1 53 1 335 1 133 1 30 1 216 2 3 2 2 1 33 1 188 2 73 1 367 2 95 1 58 1 138 1 192 1 314 1 60 1 162 1 163 1 141 2 63 3 40 2 15 2 350 1 168 2 319 1 377 1 353 1 66 6 123 1 298 2 106 1 234 3 150 1 275 1 205 1 255 1 276 1 236 4 306 1 328 2 239 2 
308 1 86 2 362 1 26 1 333 1 88 1 212 1 132 1 284 1 94 3 5 3 73 1 289 1 191 1 314 2 62 1 163 1 374 1 229 2 118 2 119 1 102 1 320 1 144 2 107 1 21 2 208 1 238 1 
308 2 294 1 14 1 335 1 102 1 319 1 353 1 33 1 73 2 255 2 266 1 314 2 163 2 
308 4 333 1 335 1 295 1 64 1 260 1 353 1 33 1 73 4 255 1 314 1 11 1 163 4 
308 2 335 1 135 1 319 1 353 1 174 1 73 2 255 2 313 1 314 1 256 1 291 1 380 1 163 2 
308 1 73 1 333 1 375 1 269 1 255 1 28 1 54 1 353 1 163 1 
308 2 111 1 335 1 169 1 91 1 353 1 33 1 73 2 255 1 314 1 163 2 
308 5 333 1 335 2 295 1 318 1 260 1 91 1 353 2 33 1 219 1 73 5 255 2 314 3 256 1 11 1 163 4 
308 5 333 1 335 2 295 1 318 1 260 1 91 1 353 2 33 1 73 5 255 2 314 3 256 1 11 1 163 4 50 1 
129 1 308 1 333 1 335 1 319 1 30 1 216 2 353 1 2 1 73 1 298 1 95 1 255 1 276 1 290 1 314 1 239 2 163 1 
308 1 14 1 335 1 135 1 319 1 353 1 73 1 255 2 82 1 314 1 256 1 291 1 163 1 
186 1 261 1 216 1 297 1 245 1 95 1 326 1 124 1 239 1 
326 1 126 1 322 1 
298 1 326 1 124 1 140 1 297 1 
132 1 112 1 297 2 5 2 94 2 322 1 298 1 45 1 289 1 178 1 326 1 124 2 108 1 140 2 208 1 238 1 126 1 128 1 49 1 
378 1 149 1 230 1 193 1 
373 1 149 1 230 1 193 1 202 1 225 1 271 1 
373 1 110 1 69 1 
373 3 242 1 230 1 202 1 172 1 271 3 149 1 151 1 193 1 23 1 225 1 51 2 
373 2 149 1 230 1 193 1 370 1 351 1 202 1 225 1 271 2 
373 1 72 1 375 1 28 1 193 1 369 1 202 1 225 1 172 1 4 1 271 1 
373 1 230 1 193 1 202 1 225 1 172 1 271 1 
373 1 149 1 230 2 202 1 225 1 172 1 271 1 
373 2 230 1 283 1 202 2 172 1 271 2 265 1 310 1 193 1 225 2 
25 1 373 3 149 1 20 1 230 1 193 2 369 1 379 1 370 2 202 1 225 1 172 1 271 3 
373 2 269 1 375 2 230 1 28 1 202 1 172 1 271 2 4 1 149 1 81 1 7 1 193 1 370 1 225 1 
373 4 149 1 20 1 230 1 193 2 369 1 370 2 351 1 202 2 225 2 172 1 330 1 271 4 
373 1 149 1 230 1 193 1 202 1 225 1 172 1 271 1 
373 4 242 1 230 2 202 1 271 4 149 2 151 1 249 1 20 1 369 1 193 3 370 2 225 1 51 1 
373 2 105 1 149 1 230 1 193 1 370 1 202 1 225 1 172 1 153 1 271 2 365 1 
373 3 149 1 151 2 242 1 230 1 42 1 193 1 202 1 225 1 172 1 271 3 51 2 
232 1 116 2 193 2 312 1 
373 1 8 1 202 1 225 1 172 1 271 1 
25 1 373 2 149 1 230 1 193 1 370 1 202 1 225 1 172 1 271 2 
189 1 
373 1 149 1 230 1 193 1 202 1 225 1 172 1 271 1 
373 3 25 1 230 1 202 1 172 1 271 3 149 1 193 1 370 1 225 1 51 1 
249 1 20 1 193 1 369 1 
230 1 193 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
340 4 227 1 78 3 277 2 293 1 105 1 82 1 13 9 300 2 41 1 304 6 92 1 148 2 216 1 93 2 371 1 333 5 220 1 24 1 285 1 286 1 353 9 223 1 200 1 28 2 338 2 131 1 381 2 
340 4 227 1 78 3 277 2 293 1 105 1 82 1 13 9 300 2 41 1 304 6 92 1 148 2 216 1 93 2 371 1 333 5 220 1 24 1 285 1 286 1 353 9 223 1 200 1 28 2 131 1 338 2 381 2 
340 5 227 1 78 4 277 2 293 1 105 1 82 1 13 10 300 2 41 1 304 7 92 1 148 2 216 1 93 2 371 1 333 6 220 1 24 1 285 1 286 1 353 10 223 1 200 1 28 2 131 1 338 2 381 2 
340 3 227 1 78 2 277 2 105 1 82 1 13 7 300 2 41 1 304 4 92 1 148 2 216 1 93 2 371 1 333 4 220 1 24 1 285 1 286 1 353 7 223 1 200 1 28 2 131 1 338 1 381 2 
340 2 78 1 304 3 277 1 293 1 92 1 105 1 148 1 93 1 333 3 220 1 353 4 13 4 223 1 300 1 200 1 338 2 381 1 
41 1 182 1 277 1 92 1 105 1 174 1 93 1 333 1 24 1 353 2 13 2 223 1 300 1 73 1 28 1 381 1 
340 1 78 1 304 1 92 1 105 1 93 2 333 2 353 3 13 3 223 1 300 2 28 1 131 1 
340 4 78 3 277 1 293 1 105 1 360 1 82 1 13 9 300 2 304 7 92 1 148 1 93 2 371 1 333 5 220 1 47 1 353 9 223 1 200 1 28 1 131 1 338 2 381 1 
340 4 78 3 277 1 293 1 105 1 360 1 82 1 13 9 300 2 304 7 92 1 148 1 93 2 371 1 333 5 220 1 47 1 353 9 223 1 200 1 28 1 131 1 338 2 381 1 
58 1 256 1 165 1 
58 1 66 1 328 2 
329 2 253 1 44 2 67 1 167 2 40 2 75 2 132 2 
52 1 253 1 341 1 81 1 83 1 294 1 264 1 163 1 139 1 85 1 60 2 61 1 117 1 167 2 40 2 168 1 268 2 194 2 329 3 239 1 44 2 171 1 20 1 67 1 149 1 218 1 306 1 350 1 373 1 351 2 25 1 374 1 198 1 311 1 75 2 291 2 132 3 
329 1 253 1 44 1 368 1 64 1 327 1 167 1 40 1 75 1 132 1 
329 1 135 1 256 1 368 1 155 1 5 1 296 1 208 1 58 1 375 1 140 1 167 1 132 1 316 1 
329 1 135 2 44 1 256 1 368 1 155 2 5 1 296 1 208 1 58 1 140 1 40 1 167 1 75 1 132 1 
135 1 164 1 308 1 155 1 46 1 
58 1 135 2 256 1 164 1 32 1 155 2 124 1 46 1 
135 1 155 1 46 1 
329 1 253 1 44 1 362 1 135 1 164 1 368 1 155 1 64 1 327 1 167 1 40 1 75 1 132 1 
58 1 
58 1 135 2 256 1 27 1 164 1 155 2 124 1 46 1 
43 1 135 5 292 2 256 1 195 1 155 5 104 1 54 1 124 1 23 2 46 2 56 1 288 1 58 1 164 2 289 1 14 1 89 1 201 2 
329 2 171 1 44 1 20 1 146 1 229 1 81 1 218 1 234 1 25 1 163 1 139 1 60 1 117 1 167 1 168 1 75 1 132 2 268 1 194 1 
67 1 165 1 
329 2 44 1 67 2 72 1 116 1 167 2 40 1 75 1 132 2 
30 1 146 1 232 1 
329 1 171 1 20 1 81 1 67 1 218 1 25 1 163 1 139 1 113 1 60 1 117 1 168 1 132 1 268 1 194 1 
329 5 44 4 229 2 67 1 234 1 376 1 116 1 266 1 237 1 167 5 40 1 75 4 132 5 316 1 
329 2 44 2 368 1 327 1 378 1 167 2 75 2 132 2 
329 3 44 3 229 1 67 1 40 1 167 3 75 3 132 3 
329 1 44 1 368 1 327 1 167 1 75 1 132 1 
329 1 44 1 368 1 72 1 116 1 167 1 40 1 75 1 132 1 
52 1 253 1 341 1 135 1 183 1 229 1 81 1 155 1 5 1 6 1 83 1 296 1 208 1 234 1 163 1 139 1 85 1 140 1 60 1 116 1 117 1 40 2 167 3 168 1 268 1 194 1 329 4 171 1 44 3 20 1 368 1 67 1 149 1 218 1 306 1 350 1 351 1 25 1 374 1 198 1 311 1 75 3 291 2 132 4 
329 2 44 1 229 1 67 1 237 1 167 2 75 1 132 2 316 1 
329 3 135 1 44 3 368 1 183 1 229 2 155 1 5 1 175 1 296 1 208 1 234 1 58 1 140 1 116 1 40 1 167 3 75 3 132 3 
329 2 30 1 44 2 229 1 146 1 116 1 40 1 167 2 75 2 132 2 
329 1 171 1 20 1 81 1 67 1 218 1 25 1 163 1 139 1 60 1 117 1 168 1 132 1 268 1 194 1 
329 1 171 1 67 1 218 1 25 1 163 1 37 1 139 1 60 1 117 1 168 1 132 1 267 1 268 1 194 1 
341 1 30 2 136 1 259 1 230 1 2 1 359 1 156 1 344 1 232 2 55 1 111 1 280 1 173 1 146 2 149 1 306 2 350 1 373 2 351 4 374 1 198 1 311 1 291 2 
329 1 44 1 368 1 378 1 167 1 208 1 75 1 132 1 
377 1 29 1 
377 1 29 1 
233 1 181 1 
233 1 181 1 
233 1 181 1 
63 1 377 1 29 1 
63 1 377 1 29 1 
241 1 377 1 29 1 
178 1 261 1 377 2 233 1 29 2 181 1 
63 1 377 1 29 1 
377 1 295 1 29 1 
377 1 295 1 29 1 
377 1 295 1 29 1 
329 2 135 1 44 2 172 1 45 1 241 1 276 1 370 1 184 1 155 1 67 1 243 1 270 1 307 1 262 1 324 1 39 1 377 1 88 1 313 1 167 2 29 1 75 2 132 2 
135 2 319 1 276 3 155 2 261 1 158 1 345 1 307 1 271 1 361 1 262 2 58 1 324 2 199 1 39 2 377 2 88 2 130 2 29 2 
277 1 148 1 381 1 
277 1 73 1 381 1 
65 1 99 1 148 2 299 1 73 1 381 3 
154 1 99 1 148 1 299 1 73 1 381 2 
148 1 99 2 299 1 73 1 381 2 
292 1 135 5 1 1 256 1 204 1 259 1 230 1 359 1 155 5 35 1 36 1 210 1 58 2 323 2 111 1 164 4 59 2 89 1 328 3 122 1 43 3 66 1 240 2 195 2 370 1 243 1 124 1 270 1 23 1 46 1 354 1 201 1 
135 9 292 2 1 3 256 1 204 2 259 3 230 3 260 1 359 3 155 9 54 1 36 2 109 1 9 1 210 1 58 5 11 1 323 6 111 3 164 7 326 1 191 1 89 1 328 9 43 8 66 3 240 6 195 6 370 4 124 1 23 2 46 6 308 5 249 5 201 2 
292 1 135 3 256 1 1 1 204 1 259 1 230 1 155 3 359 1 54 1 36 1 58 3 111 1 323 2 164 2 59 1 328 4 122 1 43 3 66 2 195 2 240 2 370 1 23 1 354 1 201 1 
292 1 135 4 256 1 1 2 204 1 259 2 230 2 260 1 155 4 359 2 54 1 36 1 109 1 58 4 11 1 323 4 111 2 59 2 164 3 328 7 122 1 43 5 66 3 240 4 195 4 370 2 23 1 354 1 201 1 
165 1 117 1 107 1 
305 1 117 1 
189 1 
163 1 117 1 168 1 
357 1 117 1 
117 1 168 1 
163 1 281 1 278 1 117 3 107 2 168 1 
257 1 136 3 275 1 259 1 217 1 306 3 55 2 209 1 161 1 373 4 351 7 111 1 247 1 49 2 142 1 367 1 339 1 
257 1 136 3 275 1 259 1 217 1 306 3 55 2 209 1 161 1 373 4 351 7 111 1 247 1 49 2 142 1 367 1 339 1 
257 1 136 3 275 1 259 1 157 1 217 1 306 3 55 2 209 1 161 1 373 4 351 7 111 1 247 1 49 2 142 1 367 1 339 1 
0 4 257 1 1 3 136 10 275 2 230 3 259 4 359 3 159 1 55 5 161 2 209 5 111 4 325 1 190 1 142 2 367 1 330 1 217 1 149 1 306 15 372 3 351 31 373 16 352 1 374 1 198 1 247 2 49 3 311 1 74 1 179 1 339 1 291 2 
136 4 257 1 275 1 259 1 55 3 209 1 161 1 111 1 142 1 367 1 166 1 121 1 149 2 306 4 351 9 373 5 352 1 374 2 198 2 49 2 247 1 311 2 291 4 339 1 
356 1 255 1 277 1 105 1 10 1 13 2 363 1 60 1 300 1 119 1 194 1 268 1 304 1 171 1 65 1 242 1 92 1 148 1 93 1 218 1 333 1 244 1 353 2 128 1 98 1 223 1 129 1 73 1 28 1 381 2 
356 1 255 1 277 1 105 1 10 1 162 1 186 1 13 3 363 1 60 1 300 1 194 1 268 1 65 1 304 2 171 1 242 1 148 1 93 1 218 1 333 1 244 1 353 3 128 1 309 1 223 1 129 1 73 1 28 1 381 2 
356 1 277 1 105 1 10 1 186 1 13 2 60 1 194 1 268 1 304 2 171 1 65 1 242 1 148 1 218 1 333 1 244 1 353 2 128 1 309 1 223 1 129 1 73 1 28 1 381 2 
171 1 273 1 242 2 93 1 218 1 8 1 108 1 162 1 353 1 139 1 187 1 244 2 13 1 60 1 177 1 129 2 300 1 355 1 117 1 28 2 168 1 268 1 194 1 
356 1 255 1 277 1 10 1 13 1 363 1 60 1 300 1 119 1 194 1 268 1 171 1 65 1 242 1 92 1 148 1 93 1 218 1 244 1 353 1 128 1 309 1 129 1 73 1 28 1 381 2 
19 1 
292 1 102 2 204 1 202 1 103 1 155 5 5 1 7 1 296 1 208 1 58 1 211 1 60 2 117 1 15 1 167 1 168 1 301 1 268 2 171 1 66 2 68 2 219 2 218 1 124 3 23 1 71 2 222 1 177 1 312 1 132 1 316 1 317 1 273 1 135 5 231 2 38 4 139 2 188 1 140 1 87 1 89 1 144 2 328 2 194 2 90 2 329 1 43 2 91 1 368 1 195 2 46 6 375 1 201 1 
135 3 202 1 102 1 155 3 5 1 296 1 208 1 211 1 38 2 188 1 140 1 167 1 329 1 91 1 368 1 124 1 46 2 27 1 375 1 312 1 132 1 316 1 
135 3 256 1 202 1 155 3 5 1 296 1 208 1 211 1 58 1 38 3 188 1 140 1 167 1 329 1 91 1 368 1 219 1 124 1 46 1 375 1 27 1 312 1 132 1 316 1 
329 1 135 2 91 1 102 1 368 1 202 1 155 2 5 1 296 1 208 1 46 1 211 1 71 1 38 2 188 1 375 1 140 1 312 1 167 1 132 1 316 1 
253 1 292 1 256 1 102 4 202 1 155 5 5 1 296 1 208 1 58 1 211 1 64 1 167 2 301 1 302 1 66 2 68 2 219 2 124 3 23 1 71 4 27 1 222 1 312 1 75 1 76 1 132 2 316 1 134 1 135 5 231 2 362 1 38 4 188 1 140 1 327 1 89 1 144 2 40 1 329 2 90 2 43 1 44 1 91 1 368 2 195 1 46 7 375 1 245 1 197 1 201 1 
253 1 292 1 256 1 202 1 102 1 155 3 5 1 7 1 296 1 208 1 211 1 58 3 64 1 167 2 301 1 66 2 68 2 219 1 124 1 23 1 71 1 222 1 312 1 75 1 132 2 316 1 135 3 231 2 362 1 38 3 188 1 140 1 327 1 89 1 144 2 40 1 328 2 329 2 90 1 43 1 44 1 91 1 368 2 195 1 46 2 375 1 201 1 
253 1 292 1 256 1 202 1 102 2 155 4 5 1 296 1 208 1 211 1 58 1 64 1 167 2 301 1 66 2 68 2 219 2 124 2 23 1 71 2 222 1 312 1 75 1 132 2 316 1 134 1 135 4 231 2 362 1 38 4 188 1 140 1 327 1 89 1 144 2 40 1 329 2 90 2 43 1 44 1 91 1 368 2 195 1 46 4 375 1 245 1 197 1 201 1 
253 1 292 1 256 1 202 1 102 2 155 4 5 1 296 1 208 1 211 1 58 1 64 1 167 2 301 1 66 2 68 2 219 2 124 2 23 1 71 2 222 1 312 1 75 1 132 2 316 1 134 1 135 4 231 2 362 1 38 4 188 1 140 1 327 1 89 1 144 2 40 1 329 2 90 2 43 1 44 1 91 1 368 2 195 1 46 4 375 1 245 1 197 1 201 1 
253 1 292 1 256 1 202 1 102 2 155 4 5 1 296 1 208 1 211 1 58 1 64 1 115 2 167 2 123 1 219 2 124 2 23 1 71 2 222 1 312 1 75 1 132 2 316 1 135 4 231 2 322 1 362 1 38 4 188 1 140 1 327 1 89 1 144 2 40 1 328 2 329 2 43 1 44 1 91 1 368 2 195 1 46 4 151 1 375 1 245 1 337 2 201 1 
253 1 292 1 256 1 102 3 202 1 155 4 5 1 296 1 208 1 211 1 58 1 64 1 167 2 301 1 302 1 66 2 68 2 219 2 124 2 23 1 71 3 222 1 312 1 75 1 132 2 316 1 134 1 135 4 231 2 362 1 38 4 188 1 140 1 327 1 89 1 144 2 40 1 329 2 90 2 43 1 44 1 91 1 368 2 195 1 46 5 375 1 245 1 197 1 201 1 
253 1 292 1 256 1 102 3 202 1 155 4 5 1 296 1 208 1 211 1 58 1 64 1 167 2 301 1 302 1 66 2 68 2 219 2 124 2 23 1 71 3 222 1 312 1 75 1 132 2 316 1 134 1 135 4 231 2 362 1 38 4 188 1 140 1 327 1 89 1 144 2 40 1 329 2 90 2 43 1 44 1 91 1 368 2 195 1 46 5 375 1 245 1 197 1 201 1 
253 1 292 1 256 1 202 1 102 2 155 4 5 1 7 1 296 1 208 1 211 1 58 1 64 1 115 2 167 2 123 1 219 1 124 2 23 1 71 2 222 1 312 1 75 1 132 2 316 1 135 4 231 2 362 1 38 3 188 1 140 1 327 1 89 1 144 2 40 1 328 2 329 2 43 1 44 1 91 1 368 2 195 1 46 4 375 1 337 2 201 1 
341 1 30 1 136 2 257 1 259 1 344 1 232 1 55 2 161 1 111 1 367 1 165 1 146 1 67 2 149 1 306 3 350 1 373 3 351 6 374 1 198 1 247 1 49 1 311 1 339 1 291 2 
52 1 0 3 341 2 30 4 136 2 1 2 230 1 259 1 342 1 359 2 279 1 232 11 159 1 55 1 209 1 264 1 110 1 111 2 325 1 192 1 146 11 67 1 149 2 306 6 372 3 350 1 351 14 373 8 374 2 198 2 311 2 291 4 252 1 
52 1 341 1 30 1 203 1 229 1 81 1 234 1 264 1 163 1 139 1 60 1 113 1 117 1 167 1 168 1 194 1 268 1 329 2 171 1 44 1 20 1 349 1 67 1 218 1 149 1 306 1 350 1 25 1 351 2 373 1 374 1 198 1 311 1 75 1 290 1 252 1 132 2 291 2 
52 1 341 3 257 1 1 2 259 3 55 4 161 1 209 4 264 1 163 2 111 3 12 1 60 3 118 2 117 2 167 1 168 2 268 3 171 2 20 2 67 2 218 2 306 10 350 3 351 20 25 2 309 1 311 3 75 1 132 3 30 7 136 8 229 1 230 2 81 2 33 2 359 2 232 7 137 1 234 1 84 1 139 1 85 2 367 1 194 3 329 3 44 1 146 7 149 3 373 10 374 3 198 3 153 2 49 1 247 1 379 2 339 1 291 6 252 1 
52 1 341 2 273 1 229 1 344 1 185 1 264 1 139 2 60 8 117 3 193 1 167 1 168 2 194 8 268 7 329 1 44 1 171 2 239 2 218 2 149 2 306 1 350 2 373 1 351 2 374 2 95 1 198 2 309 1 98 1 177 1 250 1 311 2 226 1 380 1 315 1 75 1 132 1 291 4 
77 1 341 1 30 1 136 1 1 1 230 1 259 1 359 1 232 1 55 1 111 1 116 1 40 1 167 1 329 1 44 1 146 1 149 1 306 2 350 1 373 1 351 3 374 1 198 1 311 1 75 1 291 2 252 1 132 1 
341 1 280 1 30 1 136 1 146 1 359 1 344 1 149 1 232 1 209 1 350 1 351 2 373 2 111 1 374 1 198 1 311 1 291 2 
341 1 30 1 136 1 173 1 146 1 230 1 259 1 344 1 149 1 232 1 306 2 55 1 350 1 351 2 374 1 198 1 311 1 291 2 
341 1 30 2 1 1 136 2 230 1 259 1 359 1 344 1 232 2 55 1 209 1 111 1 146 2 149 1 306 2 350 1 373 2 351 4 374 1 198 1 311 1 291 2 
341 1 280 1 30 1 136 1 146 1 359 1 149 1 232 1 209 1 350 1 351 2 373 2 111 1 95 1 374 1 198 1 311 1 291 2 
341 1 30 1 136 1 173 1 146 1 230 1 259 1 149 1 232 1 306 2 55 1 350 1 351 2 95 1 374 1 198 1 311 1 291 2 
341 1 30 2 1 1 136 2 230 1 259 1 359 1 232 2 55 1 209 1 111 1 146 2 149 1 306 2 350 1 373 2 351 4 374 1 95 1 198 1 311 1 291 2 
341 1 30 2 1 1 136 2 230 1 259 1 359 1 232 2 55 1 209 1 111 1 146 2 149 1 306 2 350 1 351 4 373 2 374 1 198 1 311 1 291 2 
52 1 341 1 81 1 264 1 163 1 139 1 85 1 60 1 117 1 168 1 194 1 268 1 329 1 171 1 20 1 67 1 218 1 149 1 306 1 350 1 373 1 351 2 25 1 374 1 198 1 311 1 132 1 291 2 
52 1 341 1 264 1 163 1 37 1 139 1 60 1 117 1 168 1 267 1 194 1 268 1 329 1 171 1 67 1 218 1 149 1 306 1 350 1 373 1 351 2 25 1 127 1 374 1 198 1 311 1 132 1 291 2 
341 1 30 2 1 1 136 2 230 1 259 1 359 1 232 2 55 1 209 1 111 1 146 2 149 1 306 2 350 1 373 2 351 4 374 1 198 1 311 1 291 2 252 1 
341 1 30 2 136 2 1 1 259 1 230 1 359 1 81 1 232 2 55 1 209 1 163 1 111 1 85 1 60 1 118 1 117 1 168 1 194 1 268 1 329 1 171 1 20 1 146 2 218 1 149 1 306 2 350 1 351 4 373 2 25 1 374 1 198 1 98 1 311 1 132 1 291 2 
341 1 30 1 136 1 1 1 259 1 230 1 359 1 232 1 209 1 346 1 111 1 116 1 40 1 167 1 329 1 44 1 146 1 149 1 306 1 350 1 373 2 351 3 374 1 198 1 311 1 75 1 291 2 252 1 132 1 
0 2 228 1 101 1 1 3 136 6 230 3 259 3 359 3 106 2 55 3 159 1 209 3 111 3 325 1 236 1 86 2 166 1 169 1 42 1 282 1 149 2 306 10 372 1 351 19 373 9 287 1 374 2 198 2 311 2 291 4 
0 2 228 2 101 2 136 4 1 3 259 2 230 2 359 3 205 1 106 1 55 2 159 2 209 2 297 1 111 3 347 1 366 1 86 4 166 1 169 1 282 1 149 3 306 12 372 2 351 26 373 14 287 1 352 2 374 3 198 3 248 1 311 3 251 1 291 6 
0 4 79 1 228 2 101 1 257 1 1 4 136 8 230 4 259 5 359 4 205 1 106 1 55 4 159 3 161 1 297 1 209 4 111 5 347 1 325 1 236 1 366 1 86 4 367 1 166 1 169 1 282 1 149 3 306 21 372 3 351 41 373 20 287 1 352 1 374 3 198 3 49 1 247 1 248 1 311 3 251 1 339 1 291 6 
0 4 79 1 228 2 101 1 257 1 1 4 136 7 230 3 259 4 359 4 205 1 106 1 55 4 159 3 161 1 297 1 209 3 111 5 347 1 325 1 236 1 366 1 86 4 367 1 166 1 169 1 282 1 149 4 306 18 372 3 351 38 373 20 287 1 352 2 374 4 198 4 49 1 247 1 248 1 311 4 251 1 339 1 291 8 
0 4 228 1 101 1 257 1 1 7 136 14 230 7 259 8 359 7 205 1 106 1 55 7 159 2 161 1 297 1 209 7 111 8 347 1 325 2 366 1 86 4 367 1 192 2 166 1 169 1 282 1 149 2 306 25 372 4 351 52 373 27 287 1 352 1 374 2 198 2 49 1 247 1 248 1 311 2 251 1 339 1 291 4 
324 1 319 1 261 1 88 1 377 1 39 1 29 1 361 1 262 1 70 1 
45 1 241 1 
57 1 324 1 88 1 377 1 39 1 221 1 29 1 120 1 262 1 
63 1 284 1 
235 1 178 1 295 1 
135 1 319 1 276 2 155 1 261 1 158 1 345 1 307 1 271 1 361 1 262 1 58 1 324 1 39 1 377 1 88 1 130 1 29 1 
135 1 319 1 276 2 155 1 261 1 158 1 345 1 307 1 271 1 361 1 262 1 58 1 324 1 39 1 377 1 88 1 130 1 29 1 
135 1 319 1 276 2 155 1 261 1 158 1 345 1 307 1 271 1 361 1 262 1 58 1 324 1 39 1 377 1 88 1 130 1 29 1 
178 1 63 1 284 1 
178 1 63 1 284 1 
235 1 295 1 
235 1 178 1 295 1 
172 1 313 1 
135 1 276 1 155 1 184 1 262 1 164 1 324 1 88 1 39 1 167 2 329 2 44 2 172 1 45 1 241 1 370 1 67 1 243 1 271 1 270 1 377 1 130 1 313 1 29 1 50 1 75 2 132 2 
254 1 52 1 341 1 80 1 4 1 264 1 60 2 117 1 193 1 167 2 168 1 238 1 194 2 268 2 329 2 171 1 239 2 218 1 149 1 22 1 306 1 350 1 373 1 351 2 374 1 198 1 311 1 226 1 252 1 132 2 291 2 
51 1 356 1 65 1 171 1 255 1 277 1 148 1 218 1 160 1 128 1 309 1 60 2 48 1 98 1 129 1 73 1 381 2 268 2 194 2 
356 1 65 1 171 1 255 1 277 1 148 1 218 1 128 1 309 1 60 1 48 1 129 1 73 1 17 1 381 2 268 1 194 1 
51 1 171 1 273 1 21 1 218 1 8 1 139 1 60 1 177 1 129 1 117 1 168 1 268 1 194 1 
51 1 356 1 65 1 171 1 255 1 277 1 148 1 218 1 160 1 128 1 309 1 60 1 48 1 129 1 73 1 381 2 268 1 194 1 
320 1 
56 1 43 1 58 1 256 1 289 1 195 1 165 1 
292 1 135 1 256 1 155 1 58 2 89 1 301 1 328 1 90 1 43 1 66 1 195 1 68 1 124 1 23 1 46 1 201 1 
292 4 256 2 1 2 204 2 259 2 155 5 5 2 207 1 107 2 56 1 163 3 58 8 111 2 60 3 213 2 117 10 214 1 16 1 168 3 268 3 269 2 303 2 171 3 66 6 305 3 218 4 124 3 23 4 224 1 180 2 357 2 358 2 135 5 230 2 278 1 359 2 138 1 323 6 139 1 364 2 87 1 89 4 194 3 328 12 43 9 240 6 195 8 332 2 46 5 336 2 289 1 153 2 98 1 201 4 
0 1 135 1 358 2 292 2 1 2 256 2 204 1 230 2 259 2 155 1 359 2 159 1 297 1 58 5 323 5 111 2 347 1 366 1 87 1 89 2 328 6 43 8 170 1 66 3 240 5 195 5 124 1 125 1 372 1 23 2 46 1 336 1 248 1 201 2 251 1 
253 1 134 1 358 2 292 1 135 1 257 1 259 1 155 1 161 1 111 2 362 1 114 1 64 1 327 1 89 1 40 1 167 1 329 1 43 2 44 1 368 1 195 2 23 1 336 1 247 1 201 1 75 1 132 1 
43 1 292 1 256 1 195 1 23 1 56 1 58 1 289 1 89 1 201 1 
43 5 358 2 1 2 66 5 195 5 240 5 230 2 259 2 359 2 58 5 336 1 111 2 323 5 153 1 328 10 
58 1 135 1 256 1 155 1 124 1 46 1 
317 1 292 2 135 3 273 1 204 2 155 3 54 1 207 1 139 2 60 4 87 2 89 1 117 1 214 2 15 1 168 1 194 4 268 4 43 2 171 1 195 2 147 1 283 1 218 1 124 2 23 2 46 4 177 1 201 2 
52 1 253 1 341 1 81 1 83 1 163 1 139 1 85 1 60 1 117 1 167 2 40 2 168 1 194 1 268 1 329 3 44 2 171 1 20 1 67 1 218 1 149 1 306 1 350 1 351 1 25 1 374 1 198 1 311 1 75 2 291 2 132 3 
43 1 292 1 256 2 66 2 204 1 240 2 195 2 23 1 58 4 323 2 49 1 87 1 89 1 201 1 328 4 
324 1 97 1 88 1 
324 1 97 1 88 1 
172 1 324 1 88 1 145 1 361 1 
324 1 97 1 88 1 
324 1 298 1 88 1 
324 1 298 1 88 1 
324 1 298 1 88 1 
324 1 88 1 
377 1 29 1 
257 1 136 3 259 1 149 2 306 4 55 2 209 1 161 1 351 8 373 4 352 1 111 1 374 2 198 2 49 1 247 1 311 2 367 1 291 4 339 1 
136 2 257 1 259 1 306 3 55 2 161 1 373 3 351 6 111 1 49 1 247 1 165 1 367 1 339 1 
136 2 1 1 259 1 230 1 359 1 149 1 306 2 55 1 263 1 209 1 373 2 351 4 111 1 374 1 198 1 311 1 291 2 
0 2 1 1 136 2 259 1 230 1 359 1 306 4 55 1 159 1 372 1 209 1 351 7 373 3 111 1 325 1 
0 2 257 1 136 9 1 2 230 2 259 3 359 2 342 1 55 5 161 2 209 4 111 3 325 1 367 1 192 1 149 2 306 12 372 2 373 11 351 23 352 2 374 2 198 2 176 1 49 1 247 2 311 2 339 1 291 4 
0 1 306 1 351 1 
372 1 351 1 373 1 
1 1 136 3 230 1 259 1 359 1 149 1 306 3 55 2 263 1 209 1 351 6 373 3 111 1 374 1 198 1 153 1 311 1 291 2 
0 1 1 2 136 2 230 2 259 2 359 2 159 1 55 1 209 1 297 1 111 2 347 1 366 1 166 1 149 1 306 6 372 1 351 12 373 6 374 1 198 1 248 1 311 1 251 1 291 2 
257 1 136 2 259 1 306 3 55 1 161 1 209 1 373 3 351 6 111 1 247 1 
136 2 149 1 306 2 55 1 209 1 161 1 373 1 351 3 352 1 374 1 176 1 198 1 247 1 311 1 367 1 339 1 291 2 
136 5 257 1 259 2 149 1 306 5 55 3 161 2 209 2 373 5 351 10 111 2 374 1 198 1 114 1 247 2 311 1 166 1 291 2 
136 1 359 1 149 1 209 1 373 2 351 2 111 1 374 1 198 1 311 1 166 1 291 2 
136 2 1 1 259 1 230 1 359 1 149 1 306 2 55 1 209 1 373 2 351 4 111 1 374 1 198 1 311 1 166 1 291 2 
136 2 149 3 306 2 55 1 161 1 209 1 351 3 373 1 352 1 374 3 176 1 198 3 236 1 247 1 311 3 166 1 291 6 
0 4 257 2 1 3 136 12 230 3 259 5 359 3 159 1 55 7 161 3 263 1 209 5 111 5 325 1 190 1 236 1 367 1 166 1 330 1 149 5 306 18 372 3 351 34 373 16 352 2 374 5 176 1 198 5 49 1 247 3 74 1 311 5 339 1 291 10 
0 1 136 2 257 1 259 1 159 1 55 2 161 1 111 1 367 1 166 1 149 1 306 4 372 1 351 8 373 4 374 1 198 1 49 1 247 1 311 1 251 1 291 2 339 1 
0 2 257 1 1 1 136 3 259 1 359 1 55 2 159 1 161 1 263 1 209 1 111 2 325 1 367 1 166 1 149 2 306 5 372 1 351 11 373 6 374 2 198 2 49 1 247 1 311 2 251 1 339 1 291 4 
0 1 257 1 1 2 136 4 230 2 259 3 359 2 159 1 55 3 161 1 263 1 209 1 297 1 111 3 347 1 366 1 367 1 166 1 149 3 306 10 372 1 351 19 373 9 352 1 374 3 198 3 49 1 247 1 248 1 311 3 251 1 339 1 291 6 
0 1 257 1 1 2 136 5 230 1 259 2 359 2 159 1 55 3 161 1 263 1 209 2 297 1 111 3 347 1 366 1 367 1 166 1 149 3 306 7 372 1 351 17 373 10 352 1 374 3 198 3 49 1 247 1 248 1 311 3 251 1 339 1 291 6 
0 1 136 2 257 1 259 1 159 1 55 2 161 1 111 1 367 1 166 1 149 1 306 4 372 1 351 8 373 4 374 1 198 1 49 1 247 1 311 1 251 1 291 2 339 1 
0 1 1 2 136 2 230 2 259 2 359 2 159 1 55 1 209 1 297 1 111 2 347 1 366 1 166 1 149 1 306 6 372 1 351 12 373 6 374 1 198 1 248 1 311 1 251 1 291 2 
0 1 257 1 1 2 136 5 230 1 259 2 359 2 159 1 55 3 161 1 209 2 263 1 297 1 111 3 347 1 366 1 367 1 166 1 149 4 306 8 372 1 351 18 373 10 352 2 374 4 198 4 49 1 247 1 248 1 311 4 251 1 339 1 291 8 
0 1 1 3 136 6 230 2 259 2 359 3 159 1 55 3 209 3 297 1 111 3 347 1 236 1 366 1 166 1 149 4 306 7 372 1 351 16 373 9 352 2 374 4 198 4 248 1 311 4 251 1 291 8 
136 6 257 1 259 1 306 4 55 3 161 3 209 3 351 7 373 3 111 1 247 3 367 1 339 2 
0 1 257 1 1 2 136 4 230 1 259 2 359 2 159 1 55 3 161 1 209 1 297 1 111 3 347 1 236 1 366 1 367 1 166 1 149 4 306 8 372 1 351 18 373 10 352 2 374 4 198 4 49 1 247 1 248 1 311 4 251 1 339 1 291 8 
329 1 331 1 67 1 237 1 167 1 132 1 316 1 
329 1 331 1 31 1 67 1 343 1 69 1 335 1 365 1 237 1 167 1 132 1 316 1 
171 1 273 1 139 1 60 1 177 1 165 1 218 1 117 1 168 1 194 1 268 1 
329 2 44 1 171 1 229 1 81 1 67 1 218 1 25 1 163 1 139 1 60 1 117 1 167 1 168 1 75 1 132 2 268 1 194 1 
329 2 357 1 44 1 171 1 368 1 229 1 81 1 67 1 218 1 296 1 208 1 25 1 163 2 364 1 60 1 117 3 167 2 214 1 168 2 75 2 132 2 268 1 194 1 
357 1 229 1 296 1 208 1 163 2 37 1 364 1 60 2 117 3 214 1 167 2 168 2 194 2 268 2 329 2 171 1 44 1 368 1 67 1 218 1 334 1 25 1 75 2 132 2 
357 1 135 2 256 1 155 2 5 1 107 1 163 1 58 1 139 1 364 1 60 3 117 4 214 1 168 1 194 3 268 3 171 1 305 1 218 1 334 1 94 1 46 1 96 1 
269 1 357 1 135 2 171 1 256 1 155 2 5 1 305 1 218 1 107 1 334 1 46 1 163 1 58 1 139 1 364 1 60 3 117 4 214 1 168 1 268 3 194 3 
171 1 60 1 218 1 185 1 194 1 268 1 
239 1 171 2 278 1 218 3 185 1 26 1 163 1 196 1 246 1 139 2 309 1 60 7 98 1 250 1 226 1 117 3 380 1 315 1 168 2 268 6 194 7 
254 1 341 2 257 1 259 1 55 2 161 1 163 1 111 1 60 1 118 1 117 1 167 1 168 1 268 1 171 1 20 1 67 2 218 1 306 3 350 2 25 1 351 6 311 2 75 1 132 2 30 1 136 2 229 1 81 1 232 1 85 1 367 1 194 1 329 2 44 1 146 1 149 2 373 3 374 2 198 2 98 1 247 1 49 1 379 1 291 4 252 1 339 1 
269 1 43 1 135 3 292 2 256 1 195 1 332 1 155 3 5 1 305 1 124 1 107 1 207 1 23 2 46 2 56 1 58 1 164 1 139 1 289 1 60 1 213 1 89 2 117 2 201 2 180 1 194 1 268 1 
171 1 278 1 218 2 107 1 185 1 138 1 163 1 60 2 98 1 117 2 168 1 268 2 194 2 
273 1 171 1 218 1 334 1 139 1 60 4 98 1 177 1 225 1 117 1 168 1 268 4 194 4 
171 1 274 1 34 1 218 2 137 1 163 1 196 1 246 1 60 2 117 1 214 1 168 1 268 2 194 2 
356 1 171 1 139 1 277 1 60 1 73 1 218 1 381 1 194 1 268 1 
171 1 80 1 309 1 60 2 98 1 218 1 117 1 226 1 168 1 194 2 268 2 
273 1 171 2 218 2 139 1 60 5 177 1 98 1 225 1 226 1 117 3 214 1 315 1 168 2 380 1 268 4 194 5 
273 1 171 2 206 1 218 2 139 1 60 5 177 1 98 1 225 1 226 1 117 3 214 1 168 2 380 1 268 4 194 5 
329 2 44 1 171 1 229 1 67 1 218 1 25 1 163 1 37 1 139 1 60 1 117 1 167 1 168 1 75 1 132 2 268 1 194 1 
171 1 278 1 218 2 26 1 163 1 196 1 246 1 60 1 117 1 214 1 168 1 268 1 194 1 
67 1 143 1 150 1 321 1 348 1 
135 2 256 1 368 1 318 1 183 1 155 2 67 1 5 1 296 1 208 1 126 1 150 2 321 2 58 1 164 1 140 1 143 2 310 1 348 1 
329 1 4 1 167 1 22 1 238 1 132 1 150 1 348 1 321 1 
310 1 126 1 348 1 
223 1 105 1 165 1 333 1 
353 1 13 1 223 1 105 1 300 1 93 1 333 1 
353 1 242 1 28 1 
41 2 53 1 353 3 112 1 13 3 92 1 223 1 105 1 300 1 93 1 333 1 272 1 
304 1 353 2 13 2 223 1 105 1 300 1 93 1 333 1 338 1 
340 1 277 1 92 1 148 1 93 1 333 1 353 1 13 1 300 1 200 1 381 1 
353 1 13 1 92 1 223 1 300 1 93 1 333 1 
353 1 13 1 92 1 223 2 105 1 300 1 93 1 
353 2 215 1 13 2 212 1 92 1 223 1 300 2 93 2 333 1 100 1 
340 1 304 2 78 1 92 1 105 1 93 1 82 1 371 1 333 2 353 3 13 3 223 1 300 1 
65 1 304 1 277 1 92 1 3 1 105 1 148 1 93 1 333 1 353 2 13 2 223 1 300 1 73 1 381 2 
340 1 304 2 78 1 92 1 293 1 105 1 93 2 333 2 353 4 13 4 223 1 300 2 338 1 
353 1 13 1 92 1 223 1 105 1 300 1 93 1 333 1 
41 1 53 1 340 1 304 2 78 1 105 2 93 1 333 3 265 1 353 4 112 1 13 4 223 2 300 1 
304 1 92 1 105 1 93 1 360 1 333 1 353 2 152 1 13 2 223 1 300 1 18 1 
53 2 41 2 258 1 92 1 105 1 93 1 333 1 353 3 112 1 13 3 223 1 300 1 
141 1 369 2 333 2 314 1 
353 1 13 1 92 1 300 1 93 1 133 1 
304 1 353 2 13 2 92 1 223 1 105 1 300 1 93 1 371 1 333 1 
62 1 
353 1 13 1 92 1 223 1 105 1 300 1 93 1 333 1 
41 1 304 1 92 1 105 1 93 1 371 1 333 1 353 3 13 3 223 1 300 1 
340 1 78 1 265 1 333 1 
223 1 333 1 

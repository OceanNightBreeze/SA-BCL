#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 2 355 1 237 1 213 2 117 1 0 2 97 1 264 4 47 1 242 1 1 1 217 1 17 1 21 1 200 2 326 5 345 1 126 1 25 2 225 2 130 1 330 2 135 6 376 9 303 3 331 1 283 1 12 9 
114 2 355 1 237 1 213 2 117 1 0 2 97 1 264 4 47 1 242 1 1 1 217 1 17 1 200 2 21 1 326 5 345 1 126 1 25 2 225 2 130 1 330 2 135 6 376 9 303 3 331 1 283 1 12 9 
114 2 355 1 237 1 213 2 117 1 0 2 97 1 264 5 47 1 242 1 1 1 217 1 17 1 200 2 21 1 326 6 345 1 126 1 25 2 225 2 130 1 330 2 135 7 376 10 303 4 331 1 283 1 12 10 
114 2 355 1 237 1 213 2 117 1 0 2 97 1 264 3 47 1 242 1 1 1 217 1 200 2 21 1 326 4 345 1 126 1 25 1 225 2 130 1 330 2 135 4 376 7 303 2 331 1 283 1 12 7 
114 1 345 1 25 2 225 1 117 1 130 1 0 1 264 2 330 1 47 1 135 3 303 1 376 4 17 1 21 1 12 4 200 1 326 3 
114 1 345 1 87 1 355 1 225 1 213 1 130 1 0 1 253 1 330 1 242 1 376 2 218 1 21 1 12 2 326 1 
114 2 345 1 225 2 213 1 130 1 97 1 264 1 135 1 376 3 303 1 21 1 12 3 326 2 
114 2 40 1 237 1 213 1 117 1 0 1 264 4 97 1 47 1 217 1 17 1 21 1 200 1 326 5 345 1 25 2 225 2 130 1 275 1 330 1 135 7 303 3 376 9 12 9 
114 2 40 1 237 1 213 1 117 1 0 1 264 4 97 1 47 1 217 1 17 1 21 1 200 1 326 5 345 1 25 2 225 2 130 1 275 1 330 1 135 7 303 3 376 9 12 9 
292 1 257 1 91 1 
292 1 236 1 152 2 
367 1 263 2 10 2 82 2 258 2 154 2 192 1 144 2 
334 2 37 1 187 1 263 2 163 1 192 1 265 1 144 3 214 1 362 1 147 1 80 1 245 1 51 2 82 2 221 2 325 1 248 1 367 1 366 1 223 1 103 2 368 1 154 2 6 1 348 1 106 1 349 1 351 1 155 1 94 1 10 2 182 1 379 2 258 3 72 1 232 1 
284 1 263 1 10 1 82 1 258 1 154 1 192 1 206 1 299 1 144 1 
292 1 261 1 273 1 263 1 286 1 347 1 373 1 206 1 91 1 79 1 144 1 49 1 268 1 258 1 
292 1 273 1 263 1 286 1 347 2 154 1 373 1 206 1 91 1 144 1 49 1 10 1 268 2 82 1 258 1 
309 1 268 1 347 1 89 1 207 1 
292 1 150 1 268 2 347 2 89 1 91 1 207 1 215 1 
268 1 347 1 207 1 
284 1 263 1 89 1 347 1 192 1 154 1 206 1 299 1 318 1 144 1 10 1 268 1 82 1 258 1 
292 1 
292 1 150 1 268 2 347 2 89 1 91 1 207 1 235 1 
292 1 125 2 150 1 104 1 88 1 89 2 347 5 132 1 91 1 46 2 207 2 121 1 323 2 243 1 290 1 268 5 160 1 199 1 382 1 
367 1 257 1 
367 1 263 2 191 1 154 1 206 1 144 2 10 1 33 1 82 1 258 2 169 1 
18 1 177 1 281 1 
367 1 187 1 366 1 37 1 103 1 6 1 351 1 144 1 94 1 147 1 229 1 182 1 51 1 258 1 221 1 248 1 
37 1 366 1 187 1 103 1 263 1 60 1 6 1 351 1 144 2 94 1 10 1 147 1 182 1 18 1 51 1 82 1 258 2 221 1 248 1 4 1 
367 1 344 1 263 5 359 1 60 2 154 1 79 1 144 5 10 4 82 4 148 1 258 5 169 1 4 1 
115 1 263 2 10 2 82 2 258 2 206 1 299 1 144 2 
367 1 263 3 10 3 82 3 154 1 60 1 258 3 144 3 
263 1 10 1 82 1 258 1 206 1 299 1 144 1 
263 1 191 1 154 1 206 1 144 1 10 1 82 1 169 1 258 1 
334 1 37 1 187 1 163 1 286 1 263 3 44 1 192 1 265 1 144 4 49 1 362 1 147 1 80 1 268 1 51 1 82 3 169 1 221 1 325 1 248 1 4 1 367 1 366 1 223 1 103 1 368 1 273 1 154 2 60 1 347 1 6 1 373 1 348 1 206 1 351 1 94 1 10 3 182 1 379 2 258 4 72 1 232 1 139 1 
367 1 344 1 263 2 10 1 82 1 258 2 60 1 79 1 144 2 
292 1 273 1 263 3 286 1 154 1 347 1 60 2 44 1 373 1 206 1 144 3 49 1 10 3 268 1 82 3 169 1 258 3 307 1 4 1 
263 2 60 1 154 1 177 1 144 2 10 2 18 1 82 2 169 1 258 2 
367 1 187 1 366 1 37 1 103 1 6 1 351 1 144 1 94 1 147 1 182 1 51 1 258 1 221 1 248 1 
367 1 103 1 337 1 206 1 94 1 33 1 51 1 221 1 
334 4 262 1 240 1 145 1 362 2 80 1 324 1 18 2 325 1 222 1 271 1 223 1 368 1 151 1 177 2 348 1 106 2 109 1 31 1 256 1 379 2 232 1 281 2 354 1 
273 1 115 1 263 1 10 1 82 1 258 1 206 1 144 1 
312 1 92 1 
312 1 92 1 
239 1 233 1 
239 1 233 1 
239 1 233 1 
312 1 69 1 92 1 
312 1 69 1 92 1 
64 1 312 1 92 1 
312 2 239 1 306 1 364 1 233 1 92 2 
312 1 69 1 92 1 
312 1 209 1 92 1 
312 1 209 1 92 1 
312 1 209 1 92 1 
312 1 75 1 314 1 263 2 357 1 143 1 144 2 120 1 287 1 268 1 82 2 52 1 291 1 270 1 367 1 55 1 347 1 92 1 107 1 64 1 63 1 10 2 378 1 258 2 
292 1 312 2 75 2 314 2 175 1 347 2 241 1 143 2 28 1 92 2 107 1 287 3 246 1 268 2 306 1 183 1 291 2 149 1 282 2 
0 1 200 1 330 1 
218 1 0 1 330 1 
56 1 216 1 218 1 247 1 0 3 200 2 
216 1 218 1 247 1 297 1 0 2 200 1 
216 1 218 1 247 2 0 2 200 1 
262 1 236 1 162 1 43 1 118 1 46 1 145 1 100 1 120 1 323 1 324 1 268 5 102 1 124 2 125 1 292 2 55 1 150 1 152 3 88 1 371 1 347 5 89 4 132 3 91 1 207 1 67 2 378 1 210 1 160 2 354 1 259 2 
309 5 262 3 236 3 43 1 142 5 118 2 46 2 145 3 100 2 323 2 324 3 268 9 83 1 102 3 124 6 55 4 292 5 125 2 150 1 152 9 88 1 153 1 347 9 89 7 132 8 91 1 207 6 9 1 228 1 67 6 158 1 160 6 382 1 13 1 354 3 
262 1 236 2 162 1 118 1 46 1 145 1 100 1 323 1 324 1 268 3 102 1 292 3 125 1 55 1 124 2 152 4 89 2 347 3 132 3 91 1 67 2 210 1 160 2 382 1 259 1 354 1 
262 2 236 3 162 1 118 1 46 1 145 2 100 1 323 1 324 2 268 4 83 1 102 2 292 4 124 4 125 1 55 2 152 7 153 1 347 4 89 3 132 5 91 1 9 1 67 4 210 1 160 4 382 1 259 2 354 2 
377 1 257 1 6 1 
6 1 133 1 
164 1 
37 1 6 1 351 1 
156 1 6 1 
37 1 6 1 
37 1 188 1 377 2 6 3 351 1 123 1 
334 7 151 2 316 2 106 4 251 1 227 1 145 1 31 3 278 1 362 3 289 1 70 1 219 1 280 1 3 1 341 1 354 1 
334 7 151 2 316 2 106 4 251 1 227 1 145 1 31 3 278 1 362 3 289 1 70 1 219 1 280 1 3 1 341 1 354 1 
334 7 151 2 5 1 316 2 106 4 251 1 227 1 145 1 31 3 278 1 362 3 289 1 70 1 219 1 280 1 3 1 341 1 354 1 
334 31 140 1 311 1 262 3 238 4 358 1 316 3 145 4 362 15 289 2 324 3 219 2 325 1 3 2 53 3 102 3 341 5 293 1 368 1 151 5 224 1 348 1 106 16 251 1 227 1 278 2 31 10 181 1 70 1 379 2 280 1 308 1 232 1 354 4 
334 9 15 1 316 2 194 1 145 1 289 1 362 4 219 1 325 2 3 1 341 1 368 2 151 3 224 1 348 2 106 5 251 1 227 1 278 1 31 4 379 4 280 1 232 2 354 1 
114 1 187 1 313 1 41 1 213 1 0 2 288 1 218 1 51 1 221 1 84 1 200 1 21 1 326 1 172 1 366 1 345 1 57 1 56 1 103 1 22 1 294 1 225 1 130 1 330 1 29 1 135 1 376 2 185 1 12 2 
114 1 187 1 41 1 212 1 213 1 0 2 339 1 146 1 288 1 218 1 51 1 221 1 84 1 200 1 326 1 172 1 366 1 345 1 56 1 57 1 103 1 294 1 225 1 130 1 330 1 29 1 135 2 376 3 185 1 12 3 
187 1 41 1 213 1 0 2 339 1 146 1 288 1 218 1 51 1 221 1 200 1 326 1 172 1 366 1 345 1 57 1 56 1 103 1 294 1 130 1 29 1 330 1 135 2 376 2 12 2 
114 1 37 1 187 1 41 2 212 1 213 2 319 1 195 1 288 2 51 1 221 1 366 1 57 2 103 1 272 1 225 1 6 1 27 1 179 1 94 1 376 1 137 1 12 1 
114 1 187 1 313 1 41 1 213 1 0 2 146 1 288 1 218 1 51 1 221 1 84 1 200 1 21 1 172 1 366 1 57 1 56 1 103 1 294 1 225 1 330 1 29 1 376 1 185 1 12 1 
317 1 
37 1 187 1 285 1 236 2 286 1 193 2 46 1 144 1 100 1 49 1 51 2 292 2 343 1 103 2 150 3 58 1 152 2 296 1 203 1 347 5 6 1 7 2 206 1 207 6 254 2 304 1 71 4 258 1 211 1 160 2 112 2 261 1 263 1 356 1 315 1 78 2 79 1 267 2 323 1 268 5 221 2 125 1 366 1 273 1 88 1 370 1 373 1 132 2 91 1 179 1 134 1 94 2 32 1 137 1 138 2 
261 1 286 1 263 1 78 1 144 1 79 1 49 1 268 3 343 1 58 1 150 1 273 1 296 1 347 3 373 1 206 1 207 2 304 1 71 2 258 1 211 1 235 1 
261 1 286 1 263 1 144 1 79 1 49 1 268 3 343 1 292 1 58 1 150 1 273 1 296 1 347 3 373 1 206 1 91 1 207 1 304 1 71 3 258 1 211 1 138 1 235 1 
261 1 286 1 263 1 78 1 144 1 79 1 49 1 268 3 343 1 292 1 150 1 58 1 273 1 296 1 347 3 373 1 206 1 91 1 207 2 254 1 304 1 71 3 258 1 211 1 138 1 235 1 
236 2 261 1 42 1 263 1 286 1 356 1 315 1 78 4 45 1 193 2 46 1 79 1 144 1 49 1 267 2 323 1 268 5 125 1 292 5 343 1 86 1 150 3 58 1 273 1 88 1 296 1 250 1 347 5 373 1 132 1 7 2 206 1 91 5 207 7 254 4 68 1 304 1 71 6 258 1 138 4 211 1 160 1 112 2 235 1 
236 2 286 1 46 1 193 2 144 1 49 1 343 1 292 2 58 1 150 2 152 2 296 1 347 4 206 1 7 2 207 4 254 2 304 1 71 4 258 1 211 1 160 1 112 2 261 1 263 1 315 1 356 1 78 2 79 1 267 2 323 1 268 4 125 1 273 1 88 1 373 1 132 1 91 1 32 1 138 2 
236 2 261 1 42 1 286 1 263 1 356 1 315 1 78 2 45 1 193 2 46 1 144 1 79 1 49 1 267 2 323 1 268 4 292 1 343 1 125 1 150 2 58 1 273 1 88 1 296 1 347 4 373 1 132 1 7 2 206 1 91 1 207 4 254 2 304 1 68 1 71 4 258 1 138 2 211 1 160 1 112 2 
236 2 261 1 42 1 286 1 263 1 356 1 315 1 78 2 45 1 193 2 46 1 144 1 79 1 49 1 267 2 323 1 268 4 292 1 343 1 125 1 150 2 58 1 273 1 88 1 296 1 347 4 373 1 132 1 7 2 206 1 91 1 207 4 254 2 304 1 68 1 71 4 258 1 138 2 211 1 160 1 112 2 
261 1 42 1 286 1 263 1 356 1 78 2 46 1 144 1 79 1 99 1 49 1 267 2 323 1 268 4 170 2 198 1 292 1 343 1 125 1 150 2 58 1 273 1 152 2 88 1 296 1 347 4 373 1 132 1 7 2 206 1 91 1 207 4 157 1 254 2 304 1 71 4 231 2 258 1 138 2 211 1 160 1 
236 2 261 1 42 1 286 1 263 1 356 1 315 1 78 3 45 1 193 2 46 1 144 1 79 1 49 1 267 2 323 1 268 4 292 1 125 1 343 1 86 1 150 2 58 1 273 1 88 1 296 1 347 4 373 1 132 1 7 2 206 1 91 1 207 5 254 3 68 1 304 1 71 5 258 1 211 1 138 3 160 1 112 2 
236 2 261 1 42 1 286 1 263 1 356 1 315 1 78 3 45 1 193 2 46 1 144 1 79 1 49 1 267 2 323 1 268 4 292 1 125 1 343 1 86 1 150 2 58 1 273 1 88 1 296 1 347 4 373 1 132 1 7 2 206 1 91 1 207 5 254 3 68 1 304 1 71 5 258 1 211 1 138 3 160 1 112 2 
261 1 263 1 286 1 356 1 78 2 46 1 79 1 144 1 99 1 49 1 267 2 323 1 268 4 170 2 292 1 343 1 125 1 150 2 58 1 273 1 152 2 88 1 296 1 347 4 373 1 132 1 7 2 206 1 91 1 207 4 32 1 254 2 304 1 71 4 231 2 258 1 138 2 211 1 160 1 
367 2 334 6 223 1 151 2 368 1 316 1 177 1 348 1 106 3 251 1 227 1 145 1 31 2 109 1 362 3 80 1 257 1 18 1 379 2 219 1 280 1 325 1 3 1 281 1 232 1 354 1 
334 14 140 1 262 1 238 3 265 1 119 1 145 1 48 1 362 6 80 1 324 2 18 11 325 2 53 3 102 2 341 1 367 1 293 1 223 2 151 1 368 2 177 4 348 2 106 8 155 1 329 1 276 1 277 1 31 2 379 4 232 2 281 11 354 2 
37 1 187 1 334 2 335 1 263 1 265 1 144 2 147 1 362 1 80 1 51 1 82 1 221 1 325 1 248 1 4 1 367 1 366 1 223 1 103 1 368 1 60 1 6 1 177 1 348 1 106 1 351 1 276 1 8 1 155 1 94 1 10 1 182 1 229 1 230 1 379 2 258 2 232 1 
334 20 187 2 37 2 144 3 145 3 146 1 147 2 51 3 3 1 4 1 248 2 102 2 341 4 103 3 151 4 295 1 60 1 6 2 348 3 106 10 251 1 351 2 155 1 208 2 10 1 258 3 354 3 310 1 262 2 263 1 163 2 316 1 265 1 362 10 80 3 324 2 18 7 82 1 81 2 219 1 221 3 19 2 325 3 85 2 367 2 366 2 223 3 368 3 372 1 177 7 276 1 227 1 94 1 31 8 182 2 379 6 280 1 232 3 281 7 
260 1 187 2 334 2 37 2 263 1 265 1 144 1 168 1 146 1 362 1 80 2 51 7 82 1 221 8 325 2 366 2 223 2 103 8 22 1 274 1 368 2 60 1 6 3 176 1 348 2 106 1 349 2 155 1 179 1 94 2 110 1 109 1 136 1 352 1 10 1 379 4 258 1 137 1 232 2 
334 3 262 1 263 1 144 1 145 1 362 2 80 1 324 1 18 1 82 1 169 1 325 1 20 1 102 1 223 1 151 1 368 1 154 1 177 1 348 1 106 1 276 1 31 1 10 1 379 2 258 1 281 1 232 1 354 1 
334 2 223 1 368 1 177 1 348 1 240 1 106 2 31 1 109 1 80 1 324 1 18 1 379 2 325 1 281 1 232 1 341 1 354 1 
334 2 222 1 223 1 262 1 151 1 368 1 177 1 348 1 145 1 31 1 109 1 362 2 80 1 18 1 379 2 325 1 281 1 232 1 
334 4 262 1 145 1 362 2 324 1 80 1 18 2 325 1 102 1 341 1 223 1 368 1 151 1 177 2 348 1 106 2 109 1 31 2 379 2 232 1 281 2 354 1 
334 2 223 1 368 1 177 1 348 1 240 1 106 2 168 1 31 1 80 1 324 1 18 1 379 2 325 1 281 1 232 1 341 1 354 1 
334 2 222 1 223 1 262 1 151 1 368 1 177 1 348 1 145 1 168 1 31 1 362 2 80 1 18 1 379 2 325 1 281 1 232 1 
334 4 262 1 145 1 168 1 362 2 324 1 80 1 18 2 325 1 102 1 341 1 223 1 368 1 151 1 177 2 348 1 106 2 31 2 379 2 232 1 281 2 354 1 
334 4 223 1 262 1 151 1 368 1 177 2 348 1 106 2 145 1 31 2 362 2 80 1 324 1 18 2 379 2 325 1 281 2 232 1 102 1 341 1 354 1 
334 2 37 1 187 1 163 1 265 1 144 1 147 1 362 1 80 1 51 1 221 1 325 1 248 1 367 1 366 1 223 1 103 1 368 1 6 1 348 1 106 1 351 1 155 1 94 1 182 1 379 2 258 1 232 1 
367 1 334 1 249 1 223 1 103 1 368 1 337 1 265 1 348 1 206 1 94 1 362 1 33 1 80 1 51 1 379 2 221 1 325 1 232 1 
334 4 262 1 145 1 362 2 324 1 80 1 18 2 325 1 102 1 341 1 223 1 368 1 151 1 177 2 348 1 106 2 276 1 31 2 379 2 232 1 281 2 354 1 
334 4 187 1 37 1 262 1 163 1 144 1 145 1 362 2 147 1 324 1 80 1 18 2 51 1 221 1 325 1 248 1 102 1 341 1 85 1 366 1 223 1 103 1 22 1 151 1 368 1 177 2 6 1 348 1 106 2 351 1 31 2 182 1 379 2 258 1 281 2 232 1 354 1 
334 3 262 1 263 1 144 1 145 1 362 1 80 1 324 1 18 1 82 1 169 1 325 1 269 1 102 1 341 1 223 1 368 1 154 1 177 1 348 1 106 2 276 1 31 1 10 1 379 2 258 1 232 1 281 1 354 1 
334 19 140 1 39 2 336 1 262 3 238 2 165 1 194 1 145 3 362 10 324 3 365 2 325 2 53 1 102 3 341 3 293 1 202 1 151 3 368 2 298 1 348 2 106 9 62 1 31 6 379 4 380 1 35 1 232 2 354 3 
334 26 39 4 336 2 262 2 238 2 116 1 165 2 194 1 145 2 363 1 362 12 324 3 365 1 325 3 53 2 102 3 341 2 293 2 59 1 202 1 151 2 368 3 369 1 224 2 348 3 106 14 62 1 31 4 11 1 379 6 332 1 380 1 232 3 354 3 
334 41 140 1 336 2 39 4 238 4 194 1 145 5 53 3 3 1 102 4 341 4 293 3 59 1 151 4 202 1 348 3 106 20 251 1 62 1 301 1 11 1 354 5 262 4 316 1 116 1 165 1 362 21 363 1 324 4 219 1 365 1 325 3 368 3 369 1 224 1 227 1 31 8 379 6 332 1 380 1 280 1 232 3 35 1 
334 38 140 1 39 4 336 2 262 3 238 4 316 1 116 1 165 1 194 1 145 4 363 1 362 18 324 4 365 1 219 1 325 4 3 1 53 3 102 4 341 3 293 3 59 1 202 1 369 1 151 4 368 4 224 2 348 4 106 20 251 1 227 1 62 1 301 1 31 7 11 1 332 1 379 8 380 1 280 1 35 1 232 4 354 5 
334 52 140 2 39 4 336 1 262 7 238 4 316 1 116 1 165 1 194 1 145 8 48 2 363 1 362 25 324 7 365 1 219 1 325 2 3 1 53 4 102 7 341 7 293 2 59 1 202 1 369 1 151 7 368 2 224 1 348 2 106 27 251 1 227 1 62 1 31 14 11 1 332 1 379 4 380 1 280 1 232 2 354 8 
312 1 75 1 314 1 306 1 241 1 143 1 291 1 54 1 28 1 92 1 
64 1 357 1 
320 1 74 1 312 1 75 1 314 1 143 1 291 1 328 1 92 1 
69 1 98 1 
209 1 364 1 171 1 
292 1 312 1 75 1 314 1 175 1 347 1 241 1 143 1 28 1 107 1 92 1 287 2 268 1 306 1 183 1 291 1 149 1 282 1 
292 1 312 1 75 1 314 1 175 1 347 1 241 1 143 1 28 1 107 1 92 1 287 2 268 1 306 1 183 1 291 1 149 1 282 1 
292 1 312 1 75 1 314 1 175 1 347 1 241 1 143 1 28 1 107 1 92 1 287 2 268 1 306 1 183 1 291 1 149 1 282 1 
69 1 364 1 98 1 
69 1 364 1 98 1 
209 1 171 1 
209 1 364 1 171 1 
63 1 52 1 
312 1 75 1 314 1 263 2 357 1 360 1 143 1 144 2 120 1 287 1 268 1 52 1 82 2 291 1 270 1 367 1 55 1 175 1 347 1 89 1 92 1 64 1 63 1 10 2 378 1 258 2 282 1 
187 1 37 1 334 2 263 2 77 1 265 1 144 2 362 1 80 1 51 2 221 2 325 1 366 1 223 1 103 2 274 1 368 1 204 1 6 1 226 1 176 1 348 1 106 1 349 2 90 1 276 1 155 1 111 1 379 2 258 2 232 1 
366 1 187 1 172 1 56 1 103 2 22 1 294 1 346 1 0 2 330 1 340 1 146 1 288 1 218 1 51 2 221 2 84 1 184 1 200 1 
172 1 187 1 366 1 56 1 103 1 294 1 0 2 330 1 340 1 146 1 288 1 218 1 244 1 51 1 221 1 84 1 200 1 
366 1 187 1 37 1 103 1 6 1 166 1 27 1 179 1 94 1 288 1 51 1 221 1 184 1 137 1 
366 1 172 1 187 1 56 1 103 1 294 1 346 1 0 2 330 1 340 1 146 1 288 1 218 1 51 1 221 1 84 1 184 1 200 1 
34 1 
292 1 104 1 290 1 257 1 132 1 160 1 91 1 
236 1 315 1 193 1 46 1 323 1 268 1 125 1 292 2 150 1 88 1 152 1 347 1 132 1 91 1 207 1 160 1 112 1 
187 3 37 3 188 1 236 6 338 1 46 4 145 2 100 2 290 1 51 3 197 1 102 2 292 8 103 3 150 3 104 1 152 12 347 5 6 10 351 3 207 5 252 2 156 2 67 6 353 2 160 8 354 2 113 2 262 2 361 2 167 1 323 4 324 2 268 5 221 3 220 2 19 2 366 4 125 4 124 6 173 2 22 1 174 1 88 4 129 2 370 1 373 2 178 2 132 9 91 2 133 3 26 1 94 1 377 2 
236 3 262 2 238 1 361 2 46 2 145 2 100 1 363 1 323 2 324 2 268 1 53 1 102 2 124 5 125 2 292 5 293 1 150 1 59 1 369 1 327 1 152 6 88 2 370 1 347 1 132 8 91 2 207 1 375 1 67 5 11 1 332 1 160 5 113 1 354 2 
284 1 263 1 192 1 361 2 46 1 318 1 144 1 145 1 323 1 268 1 82 1 219 1 3 1 125 1 88 1 347 1 154 1 132 2 206 1 299 1 10 1 68 1 258 1 280 1 381 1 160 2 113 1 354 2 
292 1 125 1 104 1 323 1 88 1 290 1 132 1 160 1 91 1 46 1 
124 5 292 5 236 5 262 2 152 10 132 5 361 2 145 2 67 5 324 2 19 1 102 2 160 5 113 1 354 2 
292 1 150 1 268 1 347 1 91 1 207 1 
187 1 37 1 285 1 46 2 100 2 323 2 51 4 268 3 197 1 221 4 366 1 125 2 103 4 150 2 23 1 174 2 88 1 370 2 203 1 347 3 6 1 132 2 207 4 179 1 93 1 94 2 137 1 160 2 382 1 
334 1 187 1 37 1 263 2 163 1 192 1 265 1 144 3 362 1 147 1 80 1 51 1 82 2 221 1 325 1 248 1 367 1 366 1 223 1 103 1 368 1 154 2 6 1 348 1 351 1 94 1 10 2 182 1 379 2 258 3 72 1 232 1 
124 2 125 1 292 4 236 2 152 4 88 1 370 1 316 1 132 1 91 2 46 1 100 1 67 2 323 1 160 2 
75 1 50 1 143 1 
75 1 50 1 143 1 
321 1 75 1 52 1 241 1 143 1 
75 1 50 1 143 1 
75 1 143 1 186 1 
75 1 143 1 186 1 
75 1 143 1 186 1 
75 1 143 1 
312 1 92 1 
334 8 151 2 368 2 224 1 316 1 348 2 106 4 251 1 227 1 145 1 31 3 362 4 379 4 219 1 280 1 325 2 3 1 232 2 341 1 354 1 
145 1 334 6 31 2 151 2 362 3 257 1 316 1 219 1 280 1 3 1 106 3 251 1 354 1 227 1 
334 4 262 1 151 1 368 1 348 1 106 2 145 1 31 2 362 2 324 1 379 2 325 1 232 1 102 1 341 1 342 1 354 1 
334 7 293 1 140 1 262 1 151 1 238 2 106 3 145 1 31 2 362 4 324 1 53 1 102 1 341 1 354 1 
334 23 140 1 262 2 238 2 316 1 145 3 48 1 362 12 324 2 219 2 325 2 3 2 53 2 102 2 341 4 151 5 368 2 224 2 348 2 106 11 251 1 227 1 277 1 31 9 379 4 280 1 232 2 159 1 354 3 
334 1 362 1 238 1 
334 1 53 1 106 1 
334 6 262 1 368 1 151 2 348 1 106 3 145 1 31 3 362 3 324 1 379 2 19 1 325 1 232 1 102 1 341 1 342 1 354 1 
334 12 262 2 238 1 194 1 145 2 362 6 363 1 324 2 325 1 53 1 102 2 341 1 293 1 59 1 368 1 369 1 151 1 348 1 106 6 31 2 11 1 332 1 379 2 232 1 354 2 
334 6 151 1 106 3 145 1 31 2 362 3 219 1 280 1 3 1 341 1 354 1 
334 3 151 1 368 1 224 1 348 1 106 1 251 1 227 1 31 2 362 2 379 2 219 1 325 1 3 1 159 1 232 1 341 1 
334 10 368 1 151 3 348 1 106 5 194 1 145 2 31 5 362 5 379 2 219 2 325 1 280 1 381 1 3 2 232 1 341 2 354 2 
334 2 368 1 348 1 106 2 194 1 31 1 324 1 379 2 325 1 232 1 341 1 354 1 
334 4 262 1 151 1 368 1 348 1 106 2 194 1 145 1 31 2 362 2 324 1 379 2 325 1 232 1 102 1 341 1 354 1 
334 3 368 3 151 1 224 1 348 3 106 1 194 1 31 2 362 2 379 6 219 1 325 3 3 1 159 1 35 1 232 3 341 1 
334 34 311 1 140 1 262 3 238 4 316 1 194 1 145 5 362 18 324 3 219 3 325 5 3 3 53 3 102 3 341 5 342 1 293 1 368 5 151 7 224 2 348 5 106 16 251 1 227 1 31 12 181 1 379 10 280 2 308 1 159 1 35 1 232 5 354 5 
334 8 238 1 316 1 194 1 145 1 362 4 219 1 325 1 53 1 3 1 293 1 368 1 151 2 348 1 106 4 251 1 227 1 31 2 332 1 379 2 280 1 232 1 354 1 
334 11 140 1 238 2 316 1 194 1 145 1 362 5 324 1 219 1 325 2 3 1 53 1 102 1 341 1 342 1 293 1 151 2 368 2 348 2 106 6 251 1 227 1 31 3 332 1 379 4 280 1 232 2 354 2 
334 19 262 2 238 1 316 1 194 1 145 3 363 1 362 10 324 2 219 1 325 3 3 1 53 1 102 2 341 1 342 1 293 1 59 1 368 3 369 1 151 3 224 1 348 3 106 9 251 1 227 1 31 4 11 1 332 1 379 6 280 1 232 3 354 3 
334 17 262 1 238 1 316 1 194 1 145 2 362 7 363 1 324 2 219 1 325 3 3 1 53 1 102 2 341 2 342 1 293 1 59 1 368 3 369 1 151 3 224 1 348 3 106 10 251 1 227 1 31 5 11 1 332 1 379 6 280 1 232 3 354 3 
334 8 238 1 316 1 194 1 145 1 362 4 219 1 325 1 53 1 3 1 293 1 368 1 151 2 348 1 106 4 251 1 227 1 31 2 332 1 379 2 280 1 232 1 354 1 
334 12 262 2 238 1 194 1 145 2 362 6 363 1 324 2 325 1 53 1 102 2 341 1 293 1 59 1 368 1 369 1 151 1 348 1 106 6 31 2 11 1 332 1 379 2 232 1 354 2 
334 18 262 1 238 1 316 1 194 1 145 2 363 1 362 8 324 2 219 1 325 4 3 1 53 1 102 2 341 2 342 1 293 1 59 1 368 4 369 1 151 3 224 2 348 4 106 10 251 1 227 1 31 5 11 1 332 1 379 8 280 1 232 4 354 3 
334 16 262 2 238 1 194 1 145 2 363 1 362 7 324 3 325 4 53 1 102 3 341 3 293 1 59 1 368 4 369 1 151 3 224 2 348 4 106 9 31 6 11 1 332 1 379 8 232 4 35 1 354 3 
334 7 151 3 106 3 251 2 227 1 145 1 31 6 362 4 219 3 280 1 3 3 341 3 354 1 
334 18 262 1 238 1 316 1 194 1 145 2 363 1 362 8 324 2 219 1 325 4 3 1 53 1 102 2 341 1 293 1 59 1 368 4 369 1 151 3 224 2 348 4 106 10 251 1 227 1 31 4 11 1 332 1 379 8 280 1 232 4 35 1 354 3 
367 1 201 1 344 1 263 1 258 1 144 1 79 1 
367 1 201 1 344 1 263 1 79 1 144 1 302 1 101 1 305 1 258 1 234 1 122 1 
366 1 187 1 37 1 94 1 103 1 257 1 51 1 221 1 6 1 137 1 179 1 
367 1 37 1 366 1 187 1 103 1 263 1 60 1 6 1 351 1 144 2 94 1 10 1 182 1 51 1 82 1 258 2 221 1 248 1 
187 1 37 2 263 2 144 2 49 1 51 1 82 2 221 1 220 1 248 1 367 1 366 1 103 1 273 1 174 1 60 1 6 3 206 1 351 2 156 1 10 1 182 1 258 2 
187 1 37 2 38 1 263 2 144 2 49 1 51 2 82 2 221 2 220 1 248 1 367 1 366 1 103 2 273 1 128 1 174 1 60 1 6 3 206 1 351 2 156 1 10 1 258 2 
187 1 37 1 51 3 268 2 221 3 220 1 366 1 292 1 103 3 128 1 174 1 347 2 6 4 373 1 61 1 351 1 91 1 207 1 133 1 156 1 94 1 377 1 333 1 
292 1 37 1 366 1 187 1 103 3 128 1 174 1 347 2 373 1 6 4 91 1 351 1 133 1 207 1 156 1 94 1 377 1 268 2 51 3 353 1 220 1 221 3 
366 1 187 1 260 1 103 1 51 1 221 1 
260 1 37 2 187 2 366 3 188 1 103 7 22 1 96 1 274 1 127 1 6 3 349 1 351 1 108 1 94 2 110 1 136 1 146 1 352 1 51 6 221 7 
187 1 37 1 334 6 144 2 145 1 147 1 51 1 3 1 248 1 103 1 151 2 60 1 6 1 348 2 106 3 351 1 251 1 208 1 111 1 10 1 258 2 354 1 163 1 263 1 316 1 362 3 80 2 18 1 82 1 221 1 219 1 325 2 85 1 366 1 367 2 223 2 22 1 368 2 177 1 276 1 227 1 31 2 182 1 379 4 280 1 232 2 281 1 
46 2 323 2 290 1 51 1 268 3 221 1 197 1 292 1 125 2 173 1 103 1 150 1 104 1 88 2 347 3 89 1 6 2 373 1 132 1 178 1 91 1 133 1 207 2 252 1 94 1 377 1 353 1 160 1 
366 2 187 1 37 1 260 1 188 1 103 2 22 1 377 1 51 2 221 2 6 2 351 1 26 1 
366 1 37 1 187 1 103 4 22 1 128 1 6 1 179 1 94 1 16 1 51 4 221 4 137 1 
37 1 187 1 366 2 103 2 96 1 141 1 174 1 295 1 6 1 350 1 351 1 108 1 51 2 221 2 
366 1 187 1 172 1 94 1 103 1 218 1 51 1 221 1 0 1 330 1 
37 1 187 1 366 1 103 2 22 1 274 1 204 1 6 1 146 1 51 2 221 2 
37 2 187 2 366 2 103 5 22 1 274 1 174 1 6 3 179 1 94 1 110 1 16 1 136 1 51 4 221 5 137 1 
37 2 187 2 366 2 103 5 22 1 274 1 174 1 6 3 179 1 94 1 110 1 16 1 279 1 51 4 221 5 137 1 
367 1 37 1 366 1 187 1 103 1 38 1 263 1 60 1 6 1 351 1 144 2 94 1 10 1 51 1 82 1 258 2 221 1 248 1 
37 1 187 1 366 2 188 1 103 1 96 1 127 1 174 1 6 1 351 1 108 1 51 1 221 1 
367 1 14 1 300 1 66 1 205 1 
367 1 292 1 14 2 161 1 273 1 105 1 286 1 89 1 347 2 44 1 373 1 205 2 206 1 91 1 300 2 49 1 66 1 65 1 268 2 
14 1 263 1 77 1 226 1 90 1 144 1 300 1 66 1 258 1 
65 1 66 1 105 1 
345 1 257 1 130 1 326 1 
114 1 345 1 376 1 225 1 130 1 12 1 326 1 
57 1 376 1 213 1 
114 1 73 1 345 1 355 2 24 1 225 1 130 1 131 1 376 3 21 1 12 3 326 1 
114 1 345 1 135 1 376 2 25 1 225 1 130 1 12 2 326 1 
114 1 225 1 0 1 264 1 47 1 330 1 376 1 21 1 12 1 200 1 326 1 
114 1 345 1 376 1 225 1 12 1 21 1 326 1 
114 1 345 2 376 1 225 1 130 1 12 1 21 1 
114 2 345 1 76 1 225 2 374 1 266 1 376 2 21 1 12 2 326 1 
114 1 345 1 237 1 225 1 130 1 264 1 135 2 376 3 303 1 217 1 21 1 12 3 326 2 
114 1 345 1 56 1 225 1 130 1 0 2 330 1 135 1 376 2 218 1 36 1 21 1 12 2 200 1 326 1 
114 2 345 1 25 1 225 2 130 1 264 1 135 2 376 4 303 1 17 1 21 1 12 4 326 2 
114 1 345 1 376 1 225 1 130 1 12 1 21 1 326 1 
114 1 345 2 355 1 24 1 225 1 130 2 131 1 264 1 322 1 135 2 376 4 303 1 12 4 326 3 
114 1 345 1 225 1 130 1 275 1 135 1 376 2 255 1 2 1 21 1 12 2 326 1 
114 1 345 1 355 2 24 2 190 1 225 1 130 1 131 1 376 3 21 1 12 3 326 1 
180 1 95 2 30 1 326 2 
114 1 376 1 196 1 225 1 12 1 21 1 
114 1 345 1 135 1 376 2 217 1 225 1 130 1 12 2 21 1 326 1 
189 1 
114 1 345 1 376 1 225 1 130 1 12 1 21 1 326 1 
114 1 345 1 355 1 225 1 130 1 135 1 376 3 217 1 21 1 12 3 326 1 
322 1 303 1 264 1 326 1 
345 1 326 1 

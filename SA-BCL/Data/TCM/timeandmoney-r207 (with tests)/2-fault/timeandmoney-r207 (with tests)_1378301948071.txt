#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 90 48 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
337 2 288 6 170 1 172 1 200 4 247 9 248 2 300 2 210 2 346 1 273 2 20 1 95 1 45 5 304 9 372 3 180 1 100 2 133 1 308 1 309 1 311 1 72 1 355 1 239 2 137 1 317 1 378 1 
337 2 288 6 170 1 172 1 200 4 247 9 248 2 300 2 210 2 346 1 273 2 20 1 95 1 45 5 304 9 372 3 180 1 100 2 133 1 308 1 309 1 311 1 72 1 355 1 239 2 137 1 317 1 378 1 
337 2 288 7 170 1 172 1 200 5 247 10 248 2 300 2 210 2 346 1 273 2 20 1 95 1 45 6 304 10 372 4 180 1 100 2 133 1 308 1 309 1 311 1 72 1 355 1 239 2 137 1 317 1 378 1 
337 2 288 4 170 1 172 1 200 3 247 7 248 2 300 2 210 2 346 1 273 2 20 1 95 1 45 4 304 7 372 2 180 1 100 2 133 1 308 1 309 1 311 1 72 1 239 1 137 1 317 1 378 1 
45 3 288 3 304 4 372 1 180 1 100 1 133 1 200 2 309 1 248 1 247 4 311 1 355 1 300 1 239 2 210 1 273 1 20 1 
45 1 337 1 304 2 266 1 180 1 100 1 133 1 72 1 247 2 248 1 374 1 11 1 300 1 273 1 20 1 137 1 
337 1 45 2 288 1 304 3 372 1 180 1 100 2 133 1 200 1 247 3 273 2 20 1 317 1 
45 5 337 1 288 7 254 1 304 9 372 3 180 1 100 2 133 1 200 4 309 1 248 1 311 1 247 9 355 1 300 1 210 1 239 2 346 1 273 2 17 1 20 1 378 1 317 1 
45 5 337 1 288 7 254 1 304 9 372 3 180 1 100 2 133 1 200 4 309 1 248 1 311 1 247 9 355 1 300 1 210 1 239 2 346 1 273 2 17 1 20 1 378 1 317 1 
209 1 116 1 142 1 
140 1 146 2 116 1 
354 2 233 2 358 2 364 1 241 2 166 1 283 2 102 2 
139 1 198 1 171 1 268 1 38 1 322 1 364 1 345 1 328 1 274 1 19 1 178 2 368 1 21 1 233 3 115 1 371 2 23 1 331 2 352 1 134 1 283 2 260 1 101 1 102 2 354 2 189 1 262 1 333 1 160 2 358 2 264 1 285 1 240 1 27 2 241 3 166 1 
123 1 354 1 159 1 233 1 358 1 256 1 241 1 166 1 283 1 102 1 
29 1 82 1 233 1 223 1 116 1 269 1 283 1 159 1 249 1 50 1 209 1 241 1 277 1 336 1 
82 2 233 1 223 1 116 1 269 1 283 1 102 1 354 1 159 1 249 1 50 2 358 1 209 1 241 1 277 1 
103 1 82 1 376 1 50 1 217 1 
103 1 82 2 50 2 209 1 116 1 76 1 217 1 77 1 
103 1 82 1 50 1 
123 1 243 1 82 1 233 1 256 1 217 1 283 1 102 1 354 1 159 1 50 1 358 1 166 1 241 1 
116 1 
103 1 348 1 82 2 50 2 209 1 116 1 76 1 217 1 
82 5 319 1 107 1 33 1 116 1 141 1 291 1 37 2 292 1 217 2 271 2 103 2 120 1 272 1 50 5 209 1 94 1 76 1 220 2 
364 1 142 1 
233 2 290 1 283 2 102 1 354 1 75 1 358 1 364 2 241 2 
2 1 208 1 329 1 
233 1 84 1 115 1 371 1 23 1 101 1 322 1 352 1 189 1 160 1 364 1 264 1 240 1 27 1 274 1 241 1 
212 1 233 5 290 1 283 5 102 4 354 4 358 1 364 1 93 1 275 1 211 2 18 1 241 5 336 1 
278 1 123 1 354 2 159 1 233 2 241 2 283 2 102 2 
212 1 233 2 2 1 115 1 371 1 23 1 352 1 322 1 283 1 101 1 102 1 354 1 189 1 160 1 264 1 240 1 27 1 274 1 211 1 241 2 
354 3 233 3 358 1 364 1 211 1 241 3 283 3 102 3 
123 1 354 1 159 1 233 1 241 1 283 1 102 1 
354 1 159 1 233 1 75 1 290 1 358 1 241 1 283 1 102 1 
82 1 290 1 223 1 169 1 198 1 171 1 268 1 269 1 322 1 9 1 249 1 364 1 345 1 274 1 19 1 211 1 277 1 178 2 368 1 212 1 21 1 233 4 115 1 371 1 23 1 331 1 352 1 101 1 283 3 102 3 354 3 189 1 159 1 262 1 333 1 160 1 358 2 50 1 264 1 285 1 240 1 27 1 241 4 166 1 
354 1 233 2 364 1 93 1 211 1 241 2 283 2 336 1 102 1 
212 1 82 1 233 3 330 1 290 1 223 1 116 1 269 1 283 3 102 3 354 3 159 1 9 1 249 1 358 1 50 1 211 2 241 3 277 1 
354 2 233 2 2 1 290 1 358 1 208 1 211 1 241 2 283 2 102 2 
233 1 115 1 371 1 23 1 101 1 322 1 352 1 189 1 160 1 364 1 264 1 27 1 240 1 274 1 241 1 
233 1 115 1 371 1 23 1 234 1 322 1 352 1 189 1 49 1 160 1 364 1 27 1 240 1 274 1 241 1 
338 1 2 2 245 1 198 1 171 1 38 2 6 1 59 1 13 1 345 1 208 2 329 2 149 1 178 2 368 1 21 2 214 1 257 1 331 4 259 1 235 1 157 1 262 1 285 1 
354 1 278 1 159 1 233 1 277 1 241 1 283 1 102 1 
85 1 347 1 
85 1 347 1 
57 1 344 1 
57 1 344 1 
57 1 344 1 
85 1 126 1 347 1 
85 1 126 1 347 1 
85 1 238 1 347 1 
57 1 74 1 344 1 85 2 193 1 347 2 
85 1 126 1 347 1 
85 1 347 1 202 1 
85 1 347 1 202 1 
85 1 347 1 202 1 
82 1 83 1 85 1 224 1 321 1 89 1 364 1 16 1 176 1 347 1 233 2 66 1 305 1 67 1 280 1 154 1 283 2 102 2 354 2 50 1 313 1 238 1 53 1 241 2 
339 1 82 2 244 2 66 2 306 1 67 2 305 3 197 1 85 2 116 1 224 1 321 2 226 1 332 1 42 1 50 2 193 1 16 2 347 2 
300 1 210 1 248 1 
374 1 300 1 248 1 
158 1 374 1 8 1 12 1 300 3 210 2 
158 1 374 1 8 1 370 1 300 2 210 1 
158 2 374 1 8 1 300 2 210 1 
82 5 140 1 30 1 86 1 141 2 37 1 270 2 271 1 6 1 343 1 206 2 272 1 125 2 146 3 59 1 209 1 176 1 94 3 96 1 214 1 280 1 116 2 217 4 353 1 235 1 103 1 50 5 314 1 313 1 164 1 220 1 76 1 
82 9 319 1 140 3 30 2 141 6 37 2 87 1 270 6 323 5 271 2 6 3 272 1 125 6 146 9 59 3 209 1 44 1 94 8 64 1 96 1 253 1 349 1 214 3 153 1 116 5 217 7 353 3 235 3 103 6 376 5 313 4 50 9 314 2 76 1 220 2 
82 3 140 2 319 1 30 1 86 1 141 2 37 1 270 2 271 1 6 1 206 1 125 2 146 4 209 1 59 1 94 3 214 1 116 3 217 2 353 1 235 1 50 3 314 1 313 1 164 1 220 1 
82 4 140 3 319 1 30 1 86 1 141 4 37 1 87 1 270 4 271 1 6 2 206 2 125 4 146 7 209 1 59 2 44 1 94 5 253 1 214 2 116 4 217 3 353 2 235 2 50 4 314 1 313 2 220 1 164 1 
92 1 240 1 142 1 
240 1 216 1 
215 1 
240 1 352 1 322 1 
147 1 240 1 
240 1 352 1 
1 1 312 1 92 2 240 3 352 1 322 1 
21 4 245 3 4 2 331 9 293 1 38 5 90 1 6 1 204 1 375 1 7 1 207 1 59 1 149 2 230 1 28 1 231 1 
21 4 245 3 4 2 331 9 293 1 38 5 90 1 6 1 204 1 375 1 7 1 207 1 59 1 149 2 230 1 28 1 231 1 
21 4 245 3 4 2 331 9 293 1 38 5 90 1 6 1 204 1 375 1 7 1 207 1 59 1 149 2 230 1 315 1 28 1 231 1 
289 1 245 13 267 1 198 1 171 1 4 1 38 17 293 7 90 3 204 2 6 5 7 2 207 1 326 3 345 1 59 5 149 6 230 1 231 3 178 2 21 17 152 1 214 3 331 34 187 4 353 3 235 3 48 1 375 1 73 1 334 1 285 1 194 1 360 1 28 1 
245 4 198 2 171 2 4 2 38 6 293 1 90 1 109 1 6 1 204 1 7 1 59 1 345 2 149 3 230 1 178 4 231 1 367 1 21 5 152 1 331 11 375 1 285 2 28 1 
337 1 106 1 288 1 248 1 247 2 295 1 108 1 227 1 205 1 12 1 300 2 210 1 273 1 276 1 20 1 45 1 46 1 304 2 68 1 371 1 23 1 180 1 100 1 350 1 133 1 189 1 374 1 191 1 160 1 27 1 
167 1 337 1 106 1 288 2 248 1 247 3 294 1 108 1 227 1 205 1 12 1 300 2 210 1 273 1 20 1 45 1 46 1 304 3 68 1 371 1 23 1 180 1 100 1 350 1 189 1 374 1 191 1 160 1 237 1 27 1 
337 1 167 1 106 1 288 2 247 2 248 1 108 1 227 1 205 1 12 1 300 2 210 1 20 1 45 1 304 2 371 1 23 1 180 1 350 1 189 1 374 1 191 1 160 1 237 1 27 1 
138 1 337 2 106 2 3 1 247 1 294 1 205 2 10 1 110 1 273 1 128 1 115 1 304 1 371 1 23 1 100 1 350 2 352 1 189 1 263 1 160 1 27 1 240 1 
167 1 337 1 106 1 248 1 247 1 295 1 108 1 227 1 205 1 12 1 300 2 210 1 273 1 46 1 304 1 68 1 371 1 23 1 100 1 350 1 133 1 189 1 374 1 191 1 160 1 27 1 
203 1 
82 2 30 1 168 1 141 1 37 1 322 1 271 1 296 1 272 1 145 1 110 1 94 1 213 1 115 2 371 2 23 3 307 1 119 1 352 2 103 2 188 1 189 2 263 1 160 2 50 2 240 2 27 2 220 1 76 1 
29 1 82 3 223 1 34 1 269 1 341 1 249 1 148 1 277 1 62 2 348 1 233 1 114 1 71 1 156 1 283 1 103 2 159 1 50 3 76 1 241 1 336 1 
29 1 82 3 223 1 34 1 269 1 341 1 249 1 209 1 148 1 277 1 62 3 348 1 130 1 233 1 116 1 71 1 156 1 283 1 103 1 159 1 50 3 76 1 241 1 336 1 
29 1 82 3 223 1 34 1 246 1 269 1 341 1 249 1 209 1 148 1 277 1 62 3 348 1 130 1 233 1 114 1 116 1 71 1 156 1 283 1 103 2 159 1 50 3 76 1 241 1 336 1 
140 2 246 4 141 1 341 1 56 1 249 1 298 1 209 5 148 1 301 1 250 1 62 6 348 1 303 2 114 4 116 5 155 1 156 1 71 1 356 2 159 1 76 3 220 1 29 1 82 5 81 1 223 1 34 1 35 1 269 1 37 1 271 1 39 2 272 1 94 1 277 1 130 4 233 1 283 1 284 2 103 7 50 5 241 1 336 1 
140 2 141 1 246 2 341 1 298 1 249 1 146 2 209 1 148 1 301 1 62 4 303 2 114 2 116 2 118 1 156 1 71 1 356 2 159 1 220 1 76 2 29 1 82 4 223 1 34 1 269 1 37 1 271 1 39 2 272 1 94 1 277 1 130 2 233 1 283 1 284 2 103 4 50 4 241 1 336 1 
29 1 82 4 81 1 140 2 223 1 34 1 246 2 141 1 35 1 269 1 37 1 271 1 39 2 341 1 272 1 298 1 249 1 209 1 148 1 301 1 94 1 277 1 62 4 130 2 303 2 114 2 233 1 116 1 155 1 71 1 156 1 284 2 283 1 103 4 356 2 159 1 50 4 76 2 220 1 241 1 336 1 
29 1 82 4 81 1 140 2 223 1 34 1 246 2 141 1 35 1 269 1 37 1 271 1 39 2 341 1 272 1 298 1 249 1 209 1 148 1 301 1 94 1 277 1 62 4 130 2 303 2 114 2 233 1 116 1 155 1 71 1 156 1 284 2 283 1 103 4 356 2 159 1 50 4 76 2 220 1 241 1 336 1 
29 1 82 4 223 1 34 1 246 2 55 2 141 1 269 1 37 1 5 1 271 1 341 1 143 1 272 1 249 1 146 2 209 1 148 1 301 1 94 1 277 1 62 4 130 2 303 2 114 2 151 2 233 1 116 1 155 1 186 1 71 1 156 1 283 1 103 4 356 2 159 1 50 4 76 2 220 1 241 1 336 1 
29 1 82 4 81 1 140 2 223 1 34 1 141 1 35 1 246 3 37 1 269 1 271 1 39 2 341 1 56 1 272 1 298 1 249 1 209 1 148 1 301 1 94 1 277 1 62 5 303 2 130 3 233 1 114 3 116 1 155 1 71 1 156 1 284 2 283 1 103 5 356 2 159 1 50 4 76 2 220 1 241 1 336 1 
29 1 82 4 81 1 140 2 223 1 34 1 141 1 35 1 246 3 37 1 269 1 271 1 39 2 341 1 56 1 272 1 298 1 249 1 209 1 148 1 301 1 94 1 277 1 62 5 303 2 130 3 233 1 114 3 116 1 155 1 71 1 156 1 284 2 283 1 103 5 356 2 159 1 50 4 76 2 220 1 241 1 336 1 
141 1 55 2 246 2 341 1 249 1 146 2 209 1 148 1 301 1 62 4 303 2 151 2 114 2 116 1 118 1 156 1 71 1 356 2 159 1 220 1 76 2 29 1 82 4 223 1 34 1 269 1 37 1 271 1 272 1 94 1 277 1 130 2 233 1 186 1 283 1 103 4 50 4 241 1 336 1 
2 1 245 2 198 1 171 1 4 1 142 1 38 4 90 1 6 1 208 1 345 1 364 3 59 1 149 2 329 1 230 1 178 2 231 1 368 1 21 4 257 1 331 8 375 1 262 1 285 1 28 1 
139 1 2 11 245 2 289 1 198 2 171 2 36 1 293 1 38 8 6 1 326 3 364 1 345 2 59 2 208 4 149 1 329 11 178 4 368 1 21 6 214 2 70 1 331 14 187 3 353 2 235 1 261 1 262 2 333 1 161 1 285 2 165 1 194 1 
139 1 84 1 198 1 171 1 322 1 38 1 364 1 208 1 345 1 274 1 211 1 178 2 366 1 368 1 212 1 21 1 233 2 115 1 371 1 23 1 70 1 331 2 352 1 101 1 283 1 102 1 354 1 189 1 262 1 160 1 333 1 236 1 264 1 240 1 27 1 285 1 221 1 241 2 
139 1 2 7 245 8 198 3 4 1 293 4 6 3 297 2 345 3 208 7 59 3 149 4 211 1 19 2 212 1 21 11 115 1 214 2 70 1 23 2 352 2 353 2 354 1 262 3 160 3 264 2 27 3 28 1 167 1 171 3 322 2 38 11 90 1 324 2 364 3 329 7 274 2 230 1 231 1 178 6 368 3 279 1 233 3 371 3 99 2 331 22 283 1 101 2 102 1 235 2 375 1 189 2 190 2 333 1 285 3 240 2 335 1 241 3 136 1 
167 1 195 1 139 1 320 1 198 2 171 2 88 1 38 1 110 1 345 2 43 1 276 1 211 1 178 4 368 2 21 1 233 1 22 1 115 2 371 8 373 1 23 2 257 1 331 2 283 1 134 2 352 2 102 1 354 1 189 2 262 2 263 1 160 7 333 1 240 3 27 8 285 2 163 1 241 1 
2 1 245 1 290 1 198 1 171 1 225 1 38 1 6 1 208 1 345 1 59 1 149 1 329 1 178 2 368 1 21 2 233 1 214 1 70 1 331 3 283 1 102 1 353 1 354 1 235 1 262 1 358 1 285 1 241 1 
368 1 2 1 214 1 245 1 198 1 171 1 257 1 331 2 293 1 38 2 157 1 262 1 208 1 345 1 59 1 329 1 285 1 178 2 
368 1 338 1 21 2 2 1 245 1 198 1 171 1 257 1 331 2 235 1 6 1 262 1 208 1 345 1 149 1 329 1 285 1 178 2 
2 2 245 2 198 1 171 1 38 2 293 1 6 1 59 1 345 1 208 2 329 2 149 1 178 2 368 1 21 2 214 1 257 1 331 4 353 1 235 1 262 1 285 1 
368 1 2 1 214 1 245 1 198 1 171 1 331 2 293 1 38 2 157 1 262 1 208 1 43 1 345 1 59 1 329 1 285 1 178 2 
368 1 338 1 21 2 2 1 245 1 198 1 171 1 331 2 235 1 6 1 262 1 208 1 43 1 345 1 149 1 329 1 285 1 178 2 
2 2 245 2 198 1 171 1 38 2 293 1 6 1 59 1 345 1 43 1 208 2 329 2 149 1 178 2 368 1 21 2 214 1 331 4 353 1 235 1 262 1 285 1 
2 2 245 2 198 1 171 1 38 2 293 1 6 1 59 1 345 1 208 2 329 2 149 1 178 2 368 1 21 2 214 1 331 4 353 1 235 1 262 1 285 1 
139 1 198 1 171 1 38 1 322 1 364 1 345 1 274 1 19 1 178 2 368 1 21 1 233 1 115 1 371 1 23 1 331 2 352 1 101 1 189 1 262 1 160 1 333 1 264 1 27 1 240 1 285 1 241 1 
222 1 139 1 198 1 171 1 38 1 322 1 364 1 345 1 274 1 178 2 368 1 21 1 233 1 115 1 371 1 23 1 331 2 234 1 352 1 189 1 49 1 262 1 160 1 333 1 27 1 240 1 285 1 241 1 
2 2 245 2 198 1 171 1 38 2 293 1 6 1 59 1 345 1 208 2 329 2 149 1 178 2 368 1 21 2 214 1 70 1 331 4 353 1 235 1 262 1 285 1 
2 2 245 2 198 1 171 1 293 1 38 2 322 1 6 1 208 2 59 1 345 1 149 1 329 2 274 1 19 1 276 1 178 2 368 1 21 2 233 1 214 1 371 1 23 1 99 1 331 4 101 1 352 1 353 1 235 1 189 1 262 1 160 1 264 1 27 1 240 1 285 1 241 1 
2 1 245 1 290 1 198 1 171 1 293 1 38 2 6 1 228 1 345 1 59 1 208 1 329 1 178 2 368 1 21 1 233 1 214 1 70 1 331 3 283 1 102 1 353 1 235 1 354 1 262 1 358 1 285 1 241 1 
289 1 245 8 198 3 171 3 340 1 38 17 293 4 90 1 109 1 6 4 342 1 144 1 40 2 299 1 326 3 345 3 59 4 14 1 15 1 149 4 230 1 61 1 231 1 113 4 178 6 63 1 21 19 152 1 369 1 214 4 185 1 331 36 351 1 187 4 353 4 235 4 375 1 51 1 285 3 194 3 78 1 
289 1 245 7 198 4 171 4 4 1 340 1 38 21 293 3 90 1 109 1 6 4 342 1 144 1 40 2 299 1 326 3 345 4 59 5 14 1 15 1 149 4 230 1 61 1 231 1 113 4 178 8 63 1 21 19 152 2 369 1 214 4 185 1 331 40 351 1 187 4 353 4 235 3 375 1 51 1 285 4 194 3 28 1 78 1 
289 2 245 14 198 2 171 2 4 1 340 1 38 28 293 7 90 1 109 1 6 8 40 1 299 1 326 4 345 2 59 8 14 1 15 1 149 7 230 1 61 1 231 1 113 4 178 4 63 1 21 26 152 1 369 1 214 7 185 1 331 54 351 1 187 4 353 7 235 7 375 1 261 2 51 1 285 2 194 2 28 1 78 1 
289 1 245 6 198 2 171 2 340 1 38 9 293 3 109 1 6 3 144 1 40 1 299 2 326 1 345 2 59 3 15 1 149 3 113 2 178 4 21 10 369 1 214 3 69 1 185 1 331 19 187 2 353 3 235 3 285 2 194 1 
245 4 198 3 171 3 340 1 293 2 38 14 109 1 6 2 40 2 299 1 326 2 345 3 59 3 14 1 15 2 149 2 61 1 113 4 178 6 63 1 21 12 152 2 369 1 214 3 185 1 331 26 351 1 187 2 353 3 235 2 51 1 285 3 194 2 78 1 
226 1 66 1 67 1 197 1 85 1 193 1 229 1 321 1 16 1 347 1 
238 1 53 1 
66 1 91 1 67 1 85 1 131 1 321 1 16 1 347 1 302 1 
126 1 112 1 
74 1 361 1 202 1 
82 1 244 1 66 1 306 1 67 1 305 2 197 1 85 1 116 1 224 1 321 1 226 1 332 1 42 1 50 1 193 1 16 1 347 1 
82 1 244 1 66 1 306 1 67 1 305 2 197 1 85 1 116 1 224 1 321 1 226 1 332 1 42 1 50 1 193 1 16 1 347 1 
82 1 244 1 66 1 306 1 67 1 305 2 197 1 85 1 116 1 224 1 321 1 226 1 332 1 42 1 50 1 193 1 16 1 347 1 
74 1 126 1 112 1 
74 1 126 1 112 1 
361 1 202 1 
74 1 361 1 202 1 
154 1 89 1 
82 1 244 1 83 1 85 1 321 1 89 1 364 1 16 1 176 1 347 1 233 2 66 1 67 1 305 1 280 1 154 1 217 1 283 2 102 2 354 2 135 1 332 1 50 1 313 1 238 1 53 1 241 2 
195 1 139 1 320 1 54 1 198 1 171 1 362 1 363 1 38 1 345 1 178 2 368 1 21 1 233 2 371 2 23 1 70 1 331 2 352 1 283 2 134 2 189 1 219 1 262 1 333 1 160 2 240 1 27 2 285 1 105 1 241 2 
167 1 68 1 371 2 23 1 183 1 350 1 201 1 248 1 374 1 189 1 227 1 41 1 191 1 160 2 12 1 300 2 210 1 27 2 276 1 
167 1 68 1 371 1 255 1 23 1 350 1 248 1 374 1 227 1 189 1 41 1 191 1 160 1 12 1 300 2 210 1 27 1 
97 1 115 1 371 1 23 1 350 1 352 1 201 1 189 1 263 1 160 1 110 1 240 1 27 1 128 1 
167 1 68 1 371 1 23 1 183 1 350 1 201 1 248 1 374 1 227 1 189 1 41 1 191 1 160 1 12 1 300 2 210 1 27 1 
196 1 
120 1 209 1 116 1 141 1 291 1 94 1 142 1 
82 1 140 1 141 1 37 1 271 1 39 1 272 1 298 1 146 1 209 1 94 1 116 2 284 1 103 1 50 1 220 1 76 1 
0 1 140 6 291 1 141 8 6 2 146 12 209 2 59 2 147 2 115 1 214 2 23 4 116 8 216 3 352 3 218 2 353 2 120 1 26 2 160 3 312 1 27 3 220 4 122 2 76 3 79 2 82 5 31 1 168 1 30 2 223 2 37 4 270 6 322 3 271 4 324 2 272 4 125 6 92 2 177 1 94 9 276 1 365 1 127 2 129 1 232 2 371 3 282 2 103 5 235 2 189 3 50 5 240 10 287 2 
82 1 168 1 30 1 140 3 141 5 37 2 270 5 271 2 6 2 272 2 125 5 146 6 326 1 59 2 209 2 14 1 111 1 94 8 61 1 63 1 232 1 214 2 116 5 187 1 353 2 103 1 235 2 26 2 357 1 50 1 51 1 76 1 220 2 194 1 78 1 
82 1 141 1 35 1 37 1 271 1 90 1 48 1 26 1 272 1 50 1 94 1 220 1 231 1 
116 1 291 1 141 1 37 1 271 1 120 1 272 1 209 1 220 1 94 1 
232 1 214 2 140 5 116 5 141 5 270 5 353 2 324 1 235 2 6 2 26 2 125 5 146 10 59 2 94 5 
103 1 82 1 50 1 209 1 116 1 76 1 
82 1 31 1 30 1 168 1 141 1 37 1 322 1 271 1 296 1 272 1 145 1 110 1 94 1 213 1 115 2 371 2 23 3 307 1 119 1 352 2 103 2 188 1 189 2 263 1 160 2 50 1 240 2 27 2 220 1 76 1 
198 1 171 1 268 1 322 1 364 1 345 1 274 1 19 1 178 2 368 1 21 1 233 3 115 1 371 1 23 1 331 1 283 2 101 1 352 1 102 2 354 2 189 1 262 1 333 1 160 1 358 2 264 1 285 1 27 1 240 1 241 3 166 1 
140 2 30 1 168 1 116 4 4 1 141 2 37 1 270 2 271 1 272 1 125 2 146 4 209 2 220 1 94 1 
377 1 321 1 16 1 
377 1 321 1 16 1 
226 1 32 1 321 1 154 1 16 1 
377 1 321 1 16 1 
321 1 16 1 286 1 
321 1 16 1 286 1 
321 1 16 1 286 1 
321 1 16 1 
85 1 347 1 
245 2 198 1 171 1 4 1 38 5 90 1 109 1 6 1 326 1 59 1 345 1 149 2 230 1 178 2 231 1 21 5 331 10 187 1 375 1 51 1 285 1 194 1 28 1 
289 1 245 3 198 2 171 2 4 1 38 7 293 1 90 1 109 1 6 1 326 1 345 2 59 2 149 2 230 1 231 1 178 4 21 6 214 1 184 1 331 13 187 2 353 1 375 1 51 1 285 2 194 1 28 1 
245 4 198 3 171 3 4 1 293 1 38 10 90 1 109 1 6 3 326 1 345 3 59 3 14 1 149 3 230 1 61 1 231 1 178 6 63 1 21 11 152 1 214 2 184 1 331 21 187 1 353 2 235 2 375 1 51 1 285 3 194 1 28 1 78 1 
245 5 198 3 171 3 4 1 293 2 38 11 90 1 109 1 6 2 326 1 345 3 59 3 14 1 149 3 230 1 61 1 231 1 178 6 63 1 21 8 152 1 214 2 184 1 331 19 187 1 353 2 235 1 375 1 51 1 285 3 194 1 28 1 78 1 
245 2 198 1 171 1 4 1 38 5 90 1 109 1 6 1 326 1 59 1 345 1 149 2 230 1 178 2 231 1 21 5 331 10 187 1 375 1 51 1 285 1 194 1 28 1 
245 2 198 1 171 1 293 1 38 6 109 1 6 2 326 1 345 1 59 2 14 1 149 1 61 1 178 2 63 1 21 6 214 2 331 12 187 1 353 2 235 2 51 1 285 1 194 1 78 1 
245 5 198 4 171 4 4 1 293 2 38 11 90 1 109 1 6 2 326 1 345 4 59 3 14 1 149 3 230 1 61 1 231 1 178 8 63 1 21 9 152 2 214 2 184 1 331 20 187 1 353 2 235 1 375 1 51 1 285 4 194 1 28 1 78 1 
245 6 198 4 171 4 293 3 38 9 109 1 6 2 144 1 326 1 345 4 59 3 14 1 149 3 61 1 178 8 63 1 21 7 152 2 214 3 331 16 187 1 353 3 235 2 51 1 285 4 194 1 78 1 
21 2 245 4 331 4 293 2 38 2 90 2 375 1 149 2 230 2 231 2 
245 4 198 4 171 4 4 1 293 1 38 11 90 1 109 1 6 2 144 1 326 1 345 4 59 3 14 1 149 3 230 1 61 1 231 1 178 8 63 1 21 9 152 2 214 2 331 20 187 1 353 2 235 1 375 1 51 1 285 4 194 1 28 1 78 1 
152 1 245 2 198 2 171 2 293 1 90 1 375 1 345 2 149 1 285 2 230 1 178 4 231 1 
21 4 245 2 4 1 142 1 331 8 38 4 90 1 6 1 375 1 59 1 149 2 230 1 231 1 28 1 
21 2 214 1 245 2 198 1 171 1 184 1 331 4 38 2 293 1 353 1 235 1 6 1 345 1 59 1 149 1 285 1 178 2 
21 4 214 1 289 1 245 2 331 7 187 2 38 3 293 1 353 1 235 1 6 1 326 1 59 1 149 1 194 1 
245 9 289 1 198 2 171 2 4 1 293 4 38 10 90 2 6 3 325 1 326 2 59 3 345 2 149 5 230 1 231 2 178 4 21 11 152 2 214 2 331 21 187 2 353 2 235 2 375 1 261 1 161 1 285 2 28 1 
21 1 331 1 187 1 
326 1 331 1 38 1 
21 3 214 1 245 3 198 1 171 1 184 1 331 6 38 3 293 1 353 1 324 1 235 1 6 1 345 1 59 1 285 1 149 2 178 2 
245 2 198 1 171 1 293 1 38 6 109 1 6 2 326 1 345 1 59 2 14 1 149 1 61 1 178 2 63 1 21 6 214 2 331 12 187 1 353 2 235 2 51 1 285 1 194 1 78 1 
21 3 245 2 331 6 38 3 293 1 90 1 6 1 59 1 149 1 28 1 231 1 
21 1 152 1 245 2 198 1 171 1 331 1 293 1 90 1 375 1 325 1 345 1 149 1 285 1 230 1 231 1 178 2 
21 5 245 4 198 1 171 1 331 10 293 2 38 5 90 1 109 1 48 1 6 2 345 1 59 2 285 1 149 2 178 2 231 1 28 1 
214 1 245 1 198 1 171 1 331 2 38 2 293 1 109 1 345 1 59 1 285 1 178 2 
21 2 214 1 245 2 198 1 171 1 331 4 38 2 293 1 353 1 235 1 109 1 6 1 345 1 59 1 149 1 285 1 178 2 
21 1 245 1 198 1 171 1 331 2 38 1 90 1 109 1 345 1 285 1 149 1 178 2 231 1 
289 1 245 11 267 1 198 5 171 5 38 12 293 5 90 3 109 1 6 4 144 1 325 1 326 3 345 5 59 4 149 6 230 1 231 3 178 10 21 14 152 2 214 3 184 1 331 26 187 4 353 3 235 3 375 1 73 1 334 1 285 5 194 1 28 1 
265 1 233 1 364 1 93 1 241 1 283 1 336 1 
265 1 80 1 233 1 199 1 24 1 283 1 47 1 192 1 364 1 93 1 241 1 336 1 
189 1 263 1 115 1 110 1 371 1 160 1 23 1 240 1 27 1 142 1 352 1 
233 2 115 1 371 1 23 1 352 1 322 1 283 1 102 1 354 1 189 1 160 1 364 1 264 1 240 1 27 1 274 1 211 1 241 2 
322 2 249 1 364 1 147 1 177 1 274 1 211 1 277 1 233 2 371 1 23 1 282 1 283 2 352 2 102 2 354 1 189 1 159 1 160 1 264 1 27 1 240 3 241 2 
233 2 371 2 23 1 98 1 282 1 352 2 322 2 283 2 102 2 354 1 189 1 159 1 49 1 249 1 160 2 364 1 147 1 240 3 27 2 274 1 177 1 211 1 277 1 241 2 
82 2 223 1 322 1 92 1 209 1 147 1 177 1 251 1 115 1 371 3 23 1 98 1 116 1 216 1 282 1 310 1 352 1 103 1 189 1 160 3 50 2 240 4 27 3 
82 2 115 1 223 1 371 3 23 1 98 1 116 1 216 1 282 1 352 1 322 1 218 1 103 1 189 1 160 3 50 2 92 1 209 1 147 1 27 3 240 4 177 1 
189 1 371 1 160 1 23 1 27 1 163 1 
167 1 195 1 22 1 115 2 371 7 373 1 23 3 173 1 119 1 134 1 88 1 322 1 352 2 189 2 296 1 160 6 312 1 27 7 240 3 163 1 276 1 
2 1 245 2 54 1 198 2 4 1 6 1 297 1 208 1 345 2 59 1 149 2 19 1 211 1 21 4 70 1 23 1 352 1 354 1 262 2 160 1 264 1 27 1 28 1 171 2 322 1 38 4 90 1 364 3 329 1 274 1 276 1 230 1 178 4 231 1 368 2 233 2 371 1 99 1 331 8 101 1 283 1 102 1 189 1 375 1 285 2 240 1 241 2 
79 1 82 3 31 1 223 1 141 1 291 1 37 2 271 2 272 2 92 1 209 1 94 1 115 1 371 1 116 1 216 1 217 1 218 1 103 2 120 1 160 1 50 3 27 1 240 2 220 2 122 1 76 1 287 1 
371 2 23 2 322 1 352 1 189 1 160 2 312 1 92 1 27 2 240 2 163 1 276 1 365 1 
189 1 263 1 115 1 110 1 371 4 160 4 23 1 98 1 240 1 27 4 276 1 174 1 352 1 
371 2 23 2 307 1 119 1 322 1 352 1 189 1 296 1 160 2 145 1 27 2 240 1 177 1 335 1 
374 1 189 1 227 1 115 1 371 1 160 1 23 1 300 1 27 1 248 1 
167 1 195 1 371 2 23 1 362 1 352 1 189 1 160 2 27 2 240 1 276 1 
195 1 22 1 115 1 371 5 373 1 23 2 174 1 352 2 189 2 263 1 110 1 160 4 27 5 240 3 177 1 276 1 
195 1 22 1 115 1 371 5 23 2 174 1 352 2 189 2 263 1 121 1 110 1 160 4 27 5 240 3 177 1 276 1 
233 2 115 1 371 1 23 1 352 1 322 1 283 1 102 1 354 1 189 1 49 1 160 1 364 1 240 1 27 1 274 1 211 1 241 2 
371 1 23 2 173 1 119 1 322 1 352 1 189 1 296 1 160 1 312 1 27 1 240 1 177 1 
364 1 181 1 150 1 359 1 316 1 
82 2 252 1 223 1 181 1 116 1 269 1 217 1 159 1 9 1 249 1 50 2 364 1 209 1 60 1 150 2 359 2 277 1 316 2 318 1 
233 1 181 1 363 1 283 1 219 1 150 1 105 1 359 1 241 1 
252 1 181 1 318 1 
45 1 180 1 142 1 20 1 
45 1 304 1 180 1 100 1 273 1 20 1 247 1 
337 1 106 1 304 1 
45 1 304 3 180 1 100 1 132 1 133 1 175 1 247 3 72 2 327 1 273 1 20 1 
45 1 288 1 304 2 180 1 239 1 100 1 273 1 20 1 247 2 
45 1 304 1 100 1 133 1 200 1 247 1 311 1 248 1 300 1 210 1 273 1 
45 1 304 1 100 1 273 1 133 1 20 1 247 1 
304 1 180 1 100 1 273 1 133 1 20 2 247 1 
45 1 65 1 179 1 304 2 124 1 100 2 133 1 247 2 273 2 20 1 
45 2 288 2 304 3 372 1 180 1 100 1 133 1 200 1 247 3 346 1 273 1 20 1 378 1 
45 1 288 1 304 2 180 1 100 1 133 1 247 2 248 1 374 1 12 1 300 2 210 1 273 1 242 1 20 1 
45 2 288 2 304 4 372 1 180 1 100 2 133 1 200 1 247 4 355 1 239 1 273 2 20 1 
45 1 304 1 180 1 100 1 273 1 133 1 20 1 247 1 
45 3 288 2 304 4 372 1 180 2 132 1 100 1 200 1 175 1 72 1 247 4 25 1 273 1 20 2 
45 1 288 1 304 2 182 1 180 1 100 1 133 1 247 2 162 1 273 1 17 1 20 1 
45 1 304 3 180 1 100 1 132 2 133 1 175 1 247 3 72 2 104 1 273 1 20 1 
45 2 281 1 52 1 117 2 
58 1 304 1 100 1 273 1 133 1 247 1 
45 1 288 1 304 2 180 1 346 1 100 1 273 1 133 1 20 1 247 2 
258 1 
45 1 304 1 180 1 100 1 273 1 133 1 20 1 247 1 
45 1 288 1 304 3 180 1 346 1 100 1 273 1 133 1 20 1 72 1 247 3 
25 1 45 1 372 1 200 1 
45 1 20 1 

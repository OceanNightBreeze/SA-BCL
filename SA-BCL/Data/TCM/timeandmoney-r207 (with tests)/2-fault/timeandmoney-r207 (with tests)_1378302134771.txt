#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
178 1 203 1 128 1 103 2 84 1 85 4 302 1 275 1 305 6 309 1 221 1 66 1 341 1 88 2 246 1 315 9 18 5 161 2 260 1 163 2 319 2 347 2 288 1 192 9 168 1 20 2 324 1 125 3 
178 1 203 1 103 2 128 1 84 1 85 4 302 1 275 1 305 6 309 1 221 1 66 1 341 1 88 2 246 1 315 9 18 5 161 2 260 1 163 2 319 2 347 2 288 1 192 9 168 1 20 2 324 1 125 3 
178 1 203 1 103 2 128 1 84 1 85 5 302 1 275 1 305 7 309 1 221 1 66 1 341 1 88 2 246 1 315 10 18 6 161 2 260 1 163 2 319 2 347 2 288 1 192 10 168 1 20 2 324 1 125 4 
178 1 203 1 103 2 128 1 84 1 85 3 302 1 275 1 305 4 309 1 221 1 66 1 88 1 246 1 315 7 18 4 161 2 260 1 163 2 319 2 347 2 288 1 192 7 168 1 20 2 324 1 125 2 
88 2 315 4 18 3 319 1 163 1 347 1 288 1 128 1 103 1 192 4 85 2 20 1 275 1 324 1 305 3 66 1 341 1 125 1 
259 1 315 2 18 1 161 1 163 1 319 1 347 1 167 1 288 1 128 1 192 2 84 1 168 1 20 1 66 1 123 1 
315 3 18 2 161 1 163 2 178 1 288 1 128 1 192 3 85 1 20 2 305 1 66 1 125 1 
8 1 178 1 128 1 103 1 85 4 302 1 275 1 305 7 66 1 341 1 88 2 315 9 18 5 161 1 71 1 260 1 163 2 319 1 347 1 288 1 192 9 20 2 324 1 125 3 
8 1 178 1 128 1 103 1 85 4 302 1 275 1 305 7 66 1 341 1 88 2 315 9 18 5 161 1 71 1 260 1 163 2 319 1 347 1 288 1 192 9 20 2 324 1 125 3 
75 1 121 1 179 1 
368 2 254 1 179 1 
301 2 86 2 17 2 80 1 220 2 149 2 369 1 39 2 
143 1 268 1 4 1 80 1 31 2 177 1 255 1 81 1 102 1 147 1 83 1 60 2 358 1 148 1 301 2 86 2 106 1 220 3 149 2 37 1 39 2 154 1 17 3 369 1 190 2 227 1 371 1 43 1 19 1 45 1 46 1 351 1 48 1 50 1 96 1 216 2 25 2 
301 1 86 1 17 1 80 1 220 1 149 1 39 1 250 1 232 1 110 1 
17 1 164 1 272 1 179 1 11 1 300 1 149 1 220 1 75 1 308 1 172 1 122 1 328 1 110 1 
17 1 164 2 272 2 179 1 11 1 301 1 86 1 149 1 220 1 75 1 308 1 39 1 122 1 328 1 110 1 
223 1 164 1 231 1 272 1 336 1 
293 1 75 1 164 2 231 1 272 2 335 1 179 1 336 1 
164 1 231 1 272 1 
17 1 80 1 164 1 272 1 250 1 336 1 301 1 86 1 149 1 220 1 39 1 174 1 232 1 110 1 
179 1 
293 1 75 1 142 1 164 2 231 1 272 2 179 1 336 1 
293 1 345 1 237 2 162 1 164 5 272 5 138 2 179 1 298 1 336 2 32 1 33 2 193 1 363 1 75 1 196 1 215 1 65 1 231 2 
121 1 369 1 
17 2 342 1 270 1 369 2 301 1 86 1 149 2 220 2 39 1 
34 1 30 1 93 1 
154 1 17 1 4 1 188 1 369 1 81 1 190 1 227 1 102 1 60 1 147 1 148 1 46 1 220 1 96 1 216 1 
154 1 17 2 4 1 81 1 190 1 227 1 102 1 147 1 348 1 60 1 93 1 148 1 264 1 301 1 46 1 149 1 220 2 96 1 216 1 39 1 
155 1 17 5 342 1 369 1 256 1 348 1 264 2 301 4 86 1 149 5 220 5 172 1 39 4 310 1 
301 2 375 1 17 2 220 2 149 2 39 2 250 1 110 1 
264 1 301 3 86 1 17 3 220 3 149 3 369 1 39 3 
301 1 17 1 220 1 149 1 39 1 250 1 110 1 
301 1 86 1 17 1 342 1 220 1 149 1 270 1 39 1 110 1 
143 1 4 1 80 1 31 1 177 1 81 1 102 1 272 1 147 1 83 1 60 1 358 1 11 1 148 1 301 3 86 2 220 4 149 3 37 1 308 1 39 3 110 1 154 1 17 4 342 1 369 1 320 1 164 1 227 1 190 1 371 1 43 1 19 1 348 1 264 1 251 1 46 1 351 1 48 1 96 1 216 1 122 1 25 2 328 1 
155 1 264 1 301 1 17 2 220 2 149 2 369 1 172 1 39 1 
17 3 342 1 164 1 272 1 179 1 348 1 11 1 264 2 301 3 86 1 251 1 149 3 220 3 308 1 39 3 290 1 122 1 110 1 328 1 
17 2 342 1 93 1 264 1 301 2 86 1 34 1 149 2 220 2 39 2 
154 1 17 1 4 1 369 1 81 1 190 1 227 1 102 1 60 1 147 1 148 1 46 1 220 1 96 1 216 1 
154 1 17 1 4 1 42 1 369 1 81 1 190 1 102 1 60 1 147 1 148 1 46 1 220 1 216 1 312 1 
143 1 253 1 30 2 177 1 31 4 273 1 358 1 240 1 106 2 34 2 242 1 362 1 37 1 87 1 281 1 224 1 245 1 112 1 371 1 93 2 48 1 351 2 354 1 25 2 
301 1 17 1 375 1 220 1 149 1 39 1 110 1 11 1 
236 1 346 1 
236 1 346 1 
156 1 159 1 
156 1 159 1 
156 1 159 1 
236 1 74 1 346 1 
236 1 74 1 346 1 
236 1 346 1 117 1 
156 1 159 1 236 2 346 2 77 1 200 1 
236 1 74 1 346 1 
236 1 346 1 325 1 
236 1 346 1 325 1 
236 1 346 1 325 1 
329 1 99 1 236 1 55 1 272 1 301 2 149 2 220 2 63 1 152 1 39 2 280 1 211 1 17 2 346 1 187 1 369 1 91 1 164 1 117 1 374 1 352 1 199 1 78 1 
329 2 317 1 236 2 346 2 261 1 187 3 91 2 164 2 116 1 73 1 272 2 179 1 23 1 152 1 352 2 278 1 327 2 78 2 200 1 
319 1 347 1 103 1 
319 1 347 1 167 1 
299 1 3 1 286 1 319 3 167 1 103 2 
299 1 3 1 331 1 319 2 167 1 103 1 
299 1 3 2 319 2 167 1 103 1 
0 2 293 1 2 2 98 1 237 1 254 1 272 5 273 1 336 4 179 2 240 1 33 1 363 2 63 1 307 1 89 1 112 1 368 3 164 5 166 1 92 1 138 1 374 1 139 1 193 3 196 1 75 1 377 2 289 1 354 1 231 1 199 1 
0 6 293 1 219 1 237 2 254 3 272 9 273 3 336 7 179 5 240 3 360 1 33 2 361 1 130 1 363 6 182 1 38 1 223 5 89 1 112 3 345 1 368 9 164 9 166 2 92 2 138 2 193 8 95 5 75 1 196 1 377 6 289 3 354 3 231 6 199 4 
0 2 2 1 98 1 237 1 254 2 272 3 273 1 179 3 336 2 33 1 240 1 363 2 112 1 345 1 368 4 164 3 166 1 92 1 138 1 139 1 193 3 75 1 289 1 377 2 354 1 199 1 
0 4 2 2 98 1 237 1 254 3 272 4 273 2 179 4 336 3 33 1 240 2 361 1 363 4 182 1 38 1 112 2 368 7 345 1 164 4 166 1 92 1 138 1 139 1 193 5 75 1 377 4 289 2 354 2 199 2 
121 1 127 1 102 1 
70 1 102 1 
53 1 
154 1 102 1 147 1 
102 1 173 1 
154 1 102 1 
154 1 185 1 376 1 127 2 102 3 147 1 
245 2 112 1 158 1 90 1 253 3 238 1 6 2 137 1 332 1 31 7 189 1 58 1 263 1 206 1 240 1 106 4 351 3 
245 2 112 1 158 1 90 1 253 3 238 1 6 2 137 1 332 1 31 7 189 1 58 1 263 1 206 1 240 1 106 4 351 3 
245 2 330 1 112 1 158 1 90 1 253 3 238 1 6 2 137 1 332 1 31 7 189 1 58 1 263 1 206 1 240 1 106 4 351 3 
143 1 294 3 253 10 238 1 6 3 10 4 177 1 31 31 332 2 58 1 273 3 206 2 358 1 240 4 106 16 131 1 151 1 67 1 245 5 158 2 112 4 90 1 189 1 137 5 191 1 263 2 349 1 21 1 351 15 48 1 289 3 354 3 25 2 217 1 
143 2 253 4 6 2 238 1 177 2 31 9 332 1 58 1 358 2 206 1 240 1 106 5 151 1 283 1 245 3 112 1 158 1 90 1 367 1 137 1 263 1 48 2 351 4 25 4 
54 1 295 1 4 1 271 1 103 1 128 1 60 1 274 1 148 1 241 1 12 1 305 1 66 1 315 2 136 1 18 1 161 1 163 1 319 2 286 1 347 1 190 1 214 1 167 1 288 1 192 2 94 1 20 1 216 1 353 1 
54 1 295 1 4 1 296 1 271 1 103 1 60 1 274 1 148 1 241 1 12 1 305 2 66 1 315 3 18 1 160 1 161 1 286 1 163 1 319 2 347 1 190 1 214 1 167 1 288 1 192 3 20 1 216 1 197 1 353 1 
54 1 4 1 271 1 103 1 60 1 274 1 148 1 241 1 12 1 305 2 66 1 315 2 18 1 160 1 161 1 319 2 286 1 190 1 347 1 214 1 167 1 288 1 192 2 216 1 197 1 
54 2 4 1 202 1 100 1 296 1 271 2 81 1 239 1 102 1 60 1 148 1 241 2 107 1 277 1 153 1 154 1 315 1 161 2 163 1 190 1 192 1 20 1 216 1 
54 1 295 1 4 1 271 1 103 1 128 1 60 1 274 1 148 1 241 1 12 1 315 1 136 1 161 1 163 1 319 2 286 1 347 1 190 1 214 1 167 1 192 1 20 1 216 1 197 1 353 1 
170 1 
233 2 145 2 4 1 237 1 7 1 239 1 272 5 102 1 60 2 11 1 61 1 148 1 338 1 339 2 13 2 149 1 277 1 110 1 154 1 111 2 284 2 17 1 115 1 164 5 165 2 75 1 216 2 172 1 122 1 24 4 126 1 292 1 293 3 254 2 81 2 179 2 33 1 300 1 363 2 220 1 308 1 368 2 190 2 92 1 138 1 373 1 229 1 323 1 193 2 47 1 196 1 265 1 231 6 381 1 328 1 
233 1 293 1 272 3 11 1 338 1 300 1 220 1 149 1 308 1 110 1 17 1 164 3 373 1 229 1 265 1 142 1 231 2 172 1 122 1 24 2 381 1 328 1 
293 1 272 3 179 1 11 1 338 1 300 1 220 1 149 1 308 1 110 1 111 1 17 1 164 3 373 1 229 1 265 1 75 1 142 1 231 1 172 1 122 1 24 3 381 1 328 1 
233 1 293 1 272 3 179 1 11 1 338 1 300 1 220 1 149 1 308 1 110 1 111 1 17 1 284 1 164 3 373 1 229 1 265 1 75 1 142 1 231 2 172 1 122 1 24 3 381 1 328 1 
233 2 293 1 356 1 80 1 272 3 179 1 11 1 338 1 301 1 300 1 86 1 149 2 220 2 308 1 39 1 110 2 210 1 17 2 284 2 164 3 250 1 373 1 229 1 75 1 265 1 142 1 231 3 172 1 122 1 24 2 174 1 232 1 381 1 328 1 
233 2 145 2 237 1 7 1 272 4 11 1 338 1 13 2 339 2 149 1 110 1 111 2 17 1 284 2 164 4 165 2 75 1 172 1 24 4 122 1 292 1 293 2 254 2 179 2 33 1 300 1 363 1 220 1 308 1 368 2 138 1 373 1 229 1 193 1 323 1 196 1 265 1 231 4 381 1 328 1 
233 2 292 1 293 2 145 2 28 1 237 1 7 1 254 2 272 4 179 1 11 1 338 1 33 1 300 1 62 1 339 2 13 2 363 1 220 1 149 1 308 1 110 1 111 2 284 2 17 1 285 1 164 4 165 2 138 1 373 1 229 1 193 1 75 1 265 1 196 1 231 4 172 1 122 1 24 4 381 1 328 1 
233 2 292 1 293 2 145 2 28 1 237 1 7 1 254 2 272 4 179 1 11 1 338 1 33 1 300 1 62 1 339 2 13 2 363 1 220 1 149 1 308 1 110 1 111 2 284 2 17 1 285 1 164 4 165 2 138 1 373 1 229 1 193 1 75 1 265 1 196 1 231 4 172 1 122 1 24 4 381 1 328 1 
233 2 293 2 237 1 7 1 272 4 179 1 11 1 338 1 33 1 300 1 13 2 363 1 220 1 149 1 308 1 110 1 111 2 157 2 284 2 17 1 316 1 368 2 285 1 164 4 213 2 165 2 228 1 321 1 138 1 373 1 229 1 193 1 75 1 265 1 196 1 231 4 172 1 122 1 24 4 381 1 328 1 
292 1 233 3 293 2 145 2 28 1 237 1 7 1 254 2 272 4 179 1 11 1 33 1 338 1 300 1 62 1 339 2 13 2 363 1 220 1 149 1 308 1 110 1 210 1 111 3 17 1 284 3 285 1 164 4 165 2 138 1 373 1 229 1 193 1 75 1 196 1 265 1 231 5 172 1 122 1 24 5 381 1 328 1 
292 1 233 3 293 2 145 2 28 1 237 1 7 1 254 2 272 4 179 1 11 1 33 1 338 1 300 1 62 1 339 2 13 2 363 1 220 1 149 1 308 1 110 1 210 1 111 3 17 1 284 3 285 1 164 4 165 2 138 1 373 1 229 1 193 1 75 1 196 1 265 1 231 5 172 1 122 1 24 5 381 1 328 1 
233 2 293 2 237 1 7 1 272 4 179 1 11 1 338 1 33 1 300 1 13 2 363 1 149 1 220 1 308 1 110 1 111 2 157 2 284 2 17 1 368 2 164 4 213 2 165 2 228 1 138 1 373 1 229 1 323 1 193 1 75 1 265 1 196 1 231 4 172 1 122 1 24 4 381 1 328 1 
143 1 253 2 238 1 6 1 30 1 177 1 31 6 58 1 206 1 358 1 240 1 34 1 106 3 37 1 281 1 245 2 112 1 90 1 369 2 371 1 263 1 93 1 48 1 351 3 121 1 25 2 
143 2 294 3 253 2 10 3 30 11 177 2 31 14 273 1 358 2 240 2 106 8 34 4 37 2 364 1 258 1 245 1 112 1 369 1 137 1 371 1 43 1 93 11 21 1 351 6 48 2 50 1 195 1 289 2 354 2 267 1 25 4 217 1 380 1 
143 1 4 1 297 1 177 1 31 2 81 1 102 1 147 1 60 1 358 1 148 1 301 1 180 1 34 1 106 1 220 2 149 1 37 1 39 1 258 1 279 1 154 1 17 2 188 1 369 1 227 1 190 1 371 1 43 1 348 1 264 1 46 1 48 1 351 1 96 1 50 1 216 1 25 2 
143 3 4 2 6 1 238 1 58 1 102 2 273 2 60 3 147 2 206 1 148 2 240 3 106 10 149 1 15 2 154 2 245 4 112 3 17 3 19 2 348 1 169 2 351 10 216 3 289 2 354 2 25 6 253 8 30 7 177 3 31 20 81 1 358 3 301 1 34 7 181 2 220 3 37 3 39 1 133 1 258 1 40 1 90 1 369 2 137 4 190 3 227 2 371 3 43 1 263 1 93 7 264 1 46 2 194 1 48 3 50 1 96 2 197 1 379 2 
143 2 4 2 357 1 177 2 31 2 81 2 255 2 239 1 102 3 257 1 60 8 358 2 148 2 301 1 106 1 220 1 149 1 37 2 277 1 39 1 281 1 154 2 314 1 17 1 343 1 190 7 371 2 43 1 322 1 94 1 264 1 120 1 48 2 351 1 50 1 216 8 230 1 197 1 25 4 
143 1 253 1 30 1 177 1 31 3 273 1 358 1 240 1 301 1 86 1 34 1 106 1 149 1 220 1 37 1 39 1 258 1 311 1 245 1 17 1 112 1 342 1 371 1 93 1 48 1 351 2 289 1 354 1 25 2 
143 1 253 1 30 1 137 1 31 2 177 1 371 1 93 1 358 1 240 1 34 1 106 2 48 1 37 1 354 1 25 2 87 1 281 1 
245 1 143 1 112 1 253 1 30 1 31 2 177 1 371 1 273 1 93 1 358 1 34 1 242 1 48 1 351 2 37 1 25 2 281 1 
245 1 143 1 112 1 253 2 30 2 137 1 31 4 177 1 371 1 273 1 93 2 358 1 240 1 34 2 106 2 351 2 48 1 37 1 289 1 354 1 25 2 281 1 
143 1 253 1 30 1 357 1 137 1 31 2 177 1 371 1 93 1 358 1 240 1 34 1 106 2 48 1 37 1 354 1 25 2 87 1 
245 1 143 1 112 1 253 1 30 1 357 1 31 2 177 1 371 1 273 1 93 1 358 1 34 1 242 1 48 1 351 2 37 1 25 2 
245 1 143 1 112 1 253 2 30 2 357 1 137 1 31 4 177 1 371 1 273 1 93 2 358 1 240 1 34 2 106 2 351 2 48 1 37 1 289 1 354 1 25 2 
245 1 143 1 112 1 253 2 30 2 137 1 177 1 31 4 371 1 273 1 93 2 358 1 240 1 34 2 106 2 351 2 48 1 37 1 289 1 354 1 25 2 
143 1 4 1 31 2 177 1 81 1 102 1 147 1 60 1 358 1 148 1 106 1 220 1 37 1 154 1 17 1 369 1 227 1 190 1 371 1 43 1 19 1 46 1 48 1 351 1 50 1 96 1 216 1 25 2 
143 1 4 1 31 2 177 1 81 1 102 1 147 1 60 1 358 1 148 1 106 1 220 1 37 1 312 1 154 1 17 1 42 1 113 1 369 1 190 1 371 1 43 1 46 1 48 1 351 1 50 1 216 1 25 2 
245 1 143 1 112 1 253 2 30 2 137 1 31 4 177 1 371 1 273 1 93 2 358 1 240 1 34 2 106 2 351 2 48 1 37 1 289 1 354 1 258 1 25 2 
143 1 4 1 253 2 30 2 31 4 177 1 102 1 273 1 147 1 60 1 358 1 240 1 148 1 34 2 106 2 220 1 37 1 154 1 245 1 112 1 17 1 137 1 227 1 190 1 371 1 19 1 93 2 94 1 46 1 351 2 48 1 96 1 216 1 289 1 354 1 379 1 25 2 
143 1 253 1 30 1 177 1 31 3 273 1 358 1 240 1 301 1 86 1 106 2 34 1 207 1 149 1 220 1 37 1 39 1 258 1 112 1 17 1 342 1 137 1 371 1 93 1 351 1 48 1 289 1 354 1 25 2 
1 2 143 2 294 1 253 6 10 2 177 2 31 19 56 1 334 1 273 3 358 2 240 3 303 1 106 9 150 1 68 2 222 1 135 1 245 3 283 1 112 3 114 1 137 3 21 1 48 2 351 10 289 3 354 3 25 4 217 1 
1 4 143 3 294 2 253 4 10 2 177 3 31 26 56 1 333 1 273 2 358 3 359 1 240 3 106 14 150 2 151 2 276 1 68 1 222 2 135 1 244 1 245 2 283 1 112 2 137 2 212 1 114 1 351 12 48 3 49 1 289 3 354 3 25 6 217 2 
1 4 143 3 294 3 253 8 6 1 238 1 10 4 177 3 31 41 56 1 334 1 58 1 333 1 273 4 206 1 358 3 359 1 240 5 106 20 150 2 151 1 276 1 134 1 68 1 244 1 222 1 135 1 245 4 283 1 112 5 90 1 212 1 114 1 137 4 263 1 21 1 48 3 351 21 49 1 289 4 354 4 25 6 217 3 
1 4 143 4 294 3 253 7 6 1 238 1 10 4 177 4 31 38 56 1 334 1 58 1 333 1 273 3 206 1 358 4 359 1 240 5 106 20 150 2 151 2 276 1 134 1 68 1 244 1 222 1 135 1 245 4 283 1 112 4 90 1 212 1 114 1 137 3 263 1 21 1 48 4 351 18 49 1 289 4 354 4 25 8 217 3 
1 4 143 2 294 4 253 14 6 1 238 1 10 4 177 2 31 52 56 1 58 1 333 1 273 7 206 1 358 2 359 1 240 8 106 27 150 1 151 1 276 1 364 2 68 1 244 1 222 1 135 1 245 7 283 1 112 8 90 1 212 1 114 1 137 7 263 1 21 2 48 2 351 25 49 1 289 7 354 7 25 4 217 2 
329 1 236 1 346 1 91 1 352 1 278 1 73 1 205 1 78 1 200 1 
211 1 117 1 
329 1 252 1 236 1 346 1 262 1 91 1 352 1 370 1 78 1 
74 1 372 1 
97 1 77 1 325 1 
329 1 236 1 346 1 261 1 187 2 164 1 91 1 116 1 73 1 272 1 179 1 23 1 152 1 352 1 278 1 327 1 78 1 200 1 
329 1 236 1 346 1 261 1 187 2 164 1 91 1 116 1 73 1 272 1 179 1 23 1 152 1 352 1 278 1 327 1 78 1 200 1 
329 1 236 1 346 1 261 1 187 2 164 1 91 1 116 1 73 1 272 1 179 1 23 1 152 1 352 1 278 1 327 1 78 1 200 1 
74 1 77 1 372 1 
74 1 77 1 372 1 
97 1 325 1 
97 1 77 1 325 1 
55 1 280 1 
329 1 99 1 236 1 55 1 272 1 336 1 301 2 220 2 63 1 149 2 64 1 39 2 280 1 211 1 17 2 261 1 346 1 187 1 369 1 164 1 91 1 117 1 374 1 352 1 327 1 199 1 78 1 
143 1 4 1 175 1 177 1 31 2 255 2 102 1 59 1 257 1 60 2 358 1 148 1 106 1 220 2 149 2 37 1 306 1 258 1 154 1 282 1 225 1 17 2 190 2 371 1 43 1 48 1 351 1 50 1 216 2 230 1 25 2 
54 1 295 1 4 1 5 1 286 1 319 2 347 1 190 2 214 1 167 1 103 1 60 2 148 1 94 1 12 1 119 1 216 2 76 1 197 1 
54 1 184 1 295 1 4 1 5 1 286 1 319 2 347 1 190 1 214 1 167 1 103 1 60 1 148 1 12 1 216 1 197 1 
154 1 54 1 4 1 100 1 81 1 190 1 239 1 102 1 60 1 148 1 304 1 216 1 76 1 277 1 
54 1 295 1 4 1 5 1 286 1 319 2 347 1 190 1 214 1 167 1 103 1 60 1 148 1 12 1 119 1 216 1 76 1 197 1 
35 1 
32 1 193 1 363 1 75 1 121 1 179 1 298 1 
292 1 293 1 145 1 237 1 254 1 272 1 179 2 33 1 339 1 363 1 368 1 164 1 138 1 193 1 196 1 75 1 231 1 
0 6 269 1 4 4 237 4 102 10 272 5 104 1 273 2 147 3 60 3 61 1 148 3 240 2 108 2 109 2 208 1 16 2 154 3 247 2 112 2 70 3 164 5 75 2 216 3 289 2 354 2 173 2 124 2 293 3 176 2 127 2 81 1 254 6 129 1 298 1 179 8 32 1 33 4 181 2 363 8 308 2 183 2 185 1 368 12 190 3 92 2 138 4 94 1 193 9 141 1 196 4 266 2 377 6 231 5 
0 5 293 1 294 1 237 2 10 1 254 3 333 1 272 1 273 2 179 5 61 1 359 1 33 2 240 2 363 5 243 1 276 1 244 1 16 2 112 2 368 6 212 1 164 1 92 1 287 1 138 2 193 8 266 1 196 2 75 2 377 5 289 2 231 1 354 2 217 1 
80 1 237 1 238 1 272 1 206 1 33 1 240 2 301 1 62 1 86 1 363 2 220 1 149 1 39 1 110 1 16 2 17 1 112 1 164 1 138 1 250 1 263 1 193 2 350 1 266 1 196 1 174 1 232 1 
237 1 138 1 298 1 179 1 33 1 32 1 193 1 363 1 196 1 75 1 
16 2 0 5 112 2 368 10 254 5 273 2 179 5 240 2 193 5 181 1 363 5 266 1 289 2 377 5 354 2 
293 1 75 1 164 1 231 1 272 1 179 1 
126 1 293 2 4 1 237 2 81 2 239 1 102 1 272 3 104 2 129 1 60 4 148 1 33 2 61 2 363 2 277 1 154 1 345 1 115 1 164 3 190 4 92 2 138 2 44 1 193 2 196 1 216 4 231 4 27 1 
143 1 4 1 80 1 31 1 177 1 81 1 102 1 60 1 83 1 147 1 358 1 148 1 301 2 86 2 220 3 149 2 37 1 39 2 154 1 17 3 369 1 190 1 227 1 371 1 43 1 19 1 46 1 351 1 48 1 96 1 216 1 25 2 
0 2 368 4 237 1 6 1 254 2 92 1 138 1 179 4 33 1 61 1 193 1 363 2 196 1 75 2 377 2 
329 1 91 1 52 1 
329 1 91 1 52 1 
329 1 22 1 91 1 278 1 280 1 
329 1 91 1 52 1 
329 1 201 1 91 1 
329 1 201 1 91 1 
329 1 201 1 91 1 
329 1 91 1 
236 1 346 1 
245 2 143 2 112 1 90 1 253 3 6 1 238 1 31 8 137 1 177 2 58 1 263 1 358 2 206 1 240 1 106 4 351 4 48 2 151 1 25 4 
245 2 112 1 90 1 253 2 6 1 238 1 31 6 58 1 263 1 206 1 240 1 106 3 351 3 121 1 
234 1 245 1 143 1 112 1 253 2 177 1 31 4 137 1 273 1 358 1 240 1 106 2 351 2 48 1 289 1 354 1 25 2 
245 1 294 1 112 1 253 2 10 2 31 7 137 1 273 1 240 1 106 3 21 1 351 4 289 1 354 1 217 1 
294 2 143 2 253 9 6 1 238 1 10 2 31 23 177 2 58 1 273 2 206 2 358 2 240 3 106 11 132 1 151 2 364 1 245 5 112 3 90 1 137 4 263 2 21 1 351 12 48 2 289 2 354 2 25 4 380 1 
351 1 10 1 31 1 
294 1 106 1 31 1 
234 1 245 2 143 1 112 1 253 3 177 1 31 6 137 1 273 1 358 1 240 1 106 3 181 1 48 1 351 3 289 1 354 1 25 2 
294 1 143 1 253 2 10 1 31 12 177 1 333 1 273 2 358 1 240 2 359 1 106 6 276 1 244 1 283 1 245 1 112 2 137 1 212 1 351 6 48 1 289 2 354 2 25 2 217 1 
245 1 112 1 253 2 238 1 31 6 137 1 263 1 206 1 240 1 106 3 351 3 
245 1 143 1 90 1 253 2 137 1 31 3 177 1 58 1 263 1 206 1 358 1 106 1 132 1 351 2 48 1 151 1 25 2 
283 1 245 3 143 1 112 2 253 5 238 1 177 1 137 2 31 10 263 2 358 1 206 2 240 2 106 5 48 1 350 1 351 5 25 2 
283 1 143 1 253 1 177 1 31 2 137 1 358 1 240 1 106 2 48 1 354 1 25 2 
245 1 283 1 143 1 112 1 253 2 177 1 31 4 137 1 273 1 358 1 240 1 106 2 351 2 48 1 289 1 354 1 25 2 
283 1 245 1 143 3 253 2 31 3 177 3 137 1 334 1 263 1 358 3 206 1 106 1 132 1 351 2 48 3 151 1 25 6 
234 1 143 5 294 3 253 12 6 1 238 2 10 4 177 5 31 34 58 1 334 1 273 3 206 3 358 5 240 5 106 16 131 1 132 1 151 2 67 1 283 1 245 7 112 5 90 1 137 5 191 1 263 3 21 1 351 18 48 5 289 3 354 3 25 10 217 1 
294 1 143 1 253 2 6 1 238 1 10 1 31 8 177 1 58 1 358 1 206 1 240 1 106 4 244 1 283 1 245 2 112 1 90 1 263 1 351 4 48 1 25 2 217 1 
234 1 143 2 294 1 253 3 6 1 238 1 10 2 31 11 177 2 58 1 206 1 358 2 240 2 106 6 244 1 245 2 283 1 112 1 90 1 137 1 263 1 21 1 351 5 48 2 289 1 354 1 25 4 217 1 
234 1 294 1 143 3 253 4 6 1 238 1 10 1 31 19 177 3 58 1 333 1 273 2 206 1 358 3 240 3 359 1 106 9 276 1 151 1 244 1 283 1 245 3 112 3 90 1 137 1 212 1 263 1 351 10 48 3 289 2 354 2 25 6 217 1 
234 1 294 1 143 3 253 5 6 1 238 1 10 1 31 17 177 3 58 1 333 1 273 1 206 1 358 3 240 3 359 1 106 10 151 1 276 1 244 1 283 1 245 3 112 2 90 1 137 2 212 1 263 1 351 7 48 3 289 2 354 2 25 6 217 1 
294 1 143 1 253 2 6 1 238 1 10 1 31 8 177 1 58 1 358 1 206 1 240 1 106 4 244 1 283 1 245 2 112 1 90 1 263 1 351 4 48 1 25 2 217 1 
294 1 143 1 253 2 10 1 31 12 177 1 333 1 273 2 358 1 240 2 359 1 106 6 276 1 244 1 283 1 245 1 112 2 137 1 212 1 351 6 48 1 289 2 354 2 25 2 217 1 
234 1 143 4 294 1 253 5 6 1 238 1 10 1 31 18 177 4 58 1 333 1 273 1 206 1 358 4 359 1 240 3 106 10 276 1 151 2 244 1 283 1 245 3 112 2 90 1 137 2 212 1 263 1 351 8 48 4 289 2 354 2 25 8 217 1 
143 4 294 1 253 6 10 1 31 16 177 4 334 1 333 1 273 2 358 4 359 1 240 3 106 9 276 1 151 2 244 1 283 1 245 3 112 2 137 3 212 1 351 7 48 4 289 3 354 3 25 8 217 1 
245 3 112 1 90 2 253 6 238 1 31 7 137 3 58 1 263 3 206 3 240 1 106 3 351 4 
143 4 294 1 253 4 6 1 238 1 10 1 31 18 177 4 58 1 334 1 333 1 273 1 206 1 358 4 359 1 240 3 106 10 276 1 151 2 244 1 283 1 245 3 112 2 90 1 137 1 212 1 263 1 351 8 48 4 289 2 354 2 25 8 217 1 
155 1 17 1 220 1 149 1 369 1 172 1 198 1 
155 1 69 1 218 1 17 1 369 1 72 1 149 1 220 1 198 1 172 1 51 1 26 1 
148 1 154 1 4 1 121 1 216 1 277 1 190 1 81 1 239 1 102 1 60 1 
154 1 17 2 4 1 369 1 81 1 190 1 102 1 147 1 60 1 264 1 148 1 301 1 46 1 149 1 220 2 96 1 216 1 39 1 
154 2 17 2 4 1 369 1 190 1 102 3 104 1 147 2 60 1 11 1 264 1 148 1 301 1 46 1 149 2 220 2 96 1 216 1 108 1 39 2 173 1 110 1 328 1 
4 1 102 3 104 1 60 2 147 2 11 1 148 1 301 1 220 2 149 2 108 1 39 2 312 1 110 1 154 2 17 2 369 1 190 2 249 1 264 1 46 1 216 2 173 1 328 1 
4 1 9 1 127 1 81 1 102 4 272 2 104 1 60 3 147 1 179 1 148 1 108 1 308 1 154 1 70 1 164 2 190 3 249 1 140 1 75 1 216 3 231 1 173 1 
154 1 4 1 70 1 164 2 127 1 81 1 190 3 272 2 102 4 249 1 104 1 179 1 147 1 60 3 148 1 75 1 216 3 108 1 308 1 109 1 231 1 173 1 
148 1 4 1 343 1 216 1 190 1 60 1 
154 2 314 1 185 1 4 3 343 1 318 1 255 1 81 2 190 6 102 3 257 1 60 7 147 1 322 1 94 1 148 2 120 1 216 7 197 1 171 1 378 1 
143 2 4 1 238 1 6 1 58 1 102 1 60 1 147 1 206 1 148 1 240 1 106 3 149 1 154 1 245 2 17 2 112 1 19 1 169 1 351 3 216 1 25 4 253 2 30 1 177 2 31 6 358 2 301 1 34 1 220 2 37 2 39 1 258 1 225 1 90 1 369 2 227 1 190 1 371 2 263 1 93 1 94 1 264 1 46 1 48 2 96 1 379 1 
293 1 237 2 176 1 127 1 81 1 272 3 102 2 179 1 298 1 129 1 336 1 60 1 32 1 33 2 363 1 109 1 308 1 183 1 70 1 164 3 190 1 138 2 193 1 75 1 196 2 216 1 231 2 124 1 
154 1 269 1 185 1 4 2 343 1 127 1 190 2 102 2 60 2 147 1 94 1 148 1 216 2 
41 1 154 1 4 1 81 1 190 4 239 1 102 1 249 1 60 4 94 1 148 1 216 4 277 1 
209 1 154 1 4 2 226 1 318 1 190 2 102 1 104 1 60 2 147 1 148 1 194 1 216 2 171 1 
148 1 12 1 4 1 216 1 319 1 347 1 190 1 81 1 167 1 60 1 
154 1 175 1 4 1 190 2 102 1 60 2 257 1 94 1 148 1 216 2 197 1 
41 1 154 2 4 2 81 1 190 4 239 1 102 3 104 1 60 5 257 1 322 1 94 1 148 2 120 1 216 5 277 1 
41 1 154 2 4 2 81 1 190 4 239 1 102 3 104 1 60 5 257 1 322 1 94 1 148 2 36 1 216 5 277 1 
154 1 17 2 4 1 369 1 81 1 190 1 102 1 147 1 60 1 264 1 148 1 301 1 46 1 149 1 220 2 216 1 39 1 312 1 
154 1 185 1 4 2 318 1 190 1 102 1 104 1 60 1 147 1 148 1 216 1 171 1 378 1 
118 1 144 1 14 1 369 1 82 1 
144 1 369 1 164 2 272 2 82 2 204 1 179 1 336 1 11 1 337 1 118 2 251 1 75 1 14 2 308 1 122 1 291 1 110 1 328 1 
282 1 17 1 144 1 220 1 149 1 14 1 306 1 82 1 59 1 
337 1 144 1 291 1 
18 1 121 1 66 1 288 1 
315 1 20 1 18 1 163 1 66 1 288 1 192 1 
241 1 161 1 192 1 
168 2 79 1 248 1 315 3 20 1 18 1 163 1 57 1 66 1 288 1 128 1 192 3 
88 1 315 2 20 1 18 1 305 1 163 1 66 1 288 1 192 2 
315 1 18 1 163 1 319 1 347 1 128 1 103 1 192 1 85 1 20 1 324 1 
315 1 20 1 18 1 163 1 288 1 128 1 192 1 
315 1 20 1 163 1 66 1 288 2 128 1 192 1 
315 2 18 1 29 1 163 2 288 1 128 1 192 2 20 2 365 1 326 1 
315 3 18 2 260 1 163 1 288 1 128 1 192 3 85 1 302 1 20 1 305 2 66 1 125 1 
315 2 18 1 319 2 163 1 286 1 347 1 167 1 288 1 128 1 103 1 192 2 20 1 305 1 355 1 66 1 
88 1 315 4 18 2 163 2 288 1 128 1 192 4 85 1 20 2 305 2 66 1 341 1 125 1 
315 1 20 1 18 1 163 1 66 1 288 1 128 1 192 1 
79 1 315 4 18 3 163 1 57 1 288 2 192 4 85 1 168 1 105 1 20 1 305 2 66 2 125 1 
313 1 315 2 18 1 71 1 163 1 288 1 128 1 192 2 20 1 305 1 366 1 66 1 
79 1 235 1 315 3 18 1 163 1 57 2 128 1 288 1 192 3 168 2 20 1 66 1 
146 1 18 2 344 2 340 1 
186 1 315 1 20 1 163 1 128 1 192 1 
302 1 315 2 20 1 18 1 305 1 163 1 66 1 288 1 128 1 192 2 
101 1 
315 1 20 1 18 1 163 1 66 1 288 1 128 1 192 1 
168 1 302 1 315 3 20 1 18 1 305 1 163 1 66 1 288 1 128 1 192 3 
85 1 105 1 18 1 125 1 
18 1 288 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 2 120 2 201 1 40 1 109 1 366 3 248 1 112 3 359 1 170 1 208 2 267 1 330 1 
244 1 180 2 198 5 120 2 201 1 200 2 71 1 248 4 251 1 328 1 124 1 359 6 170 1 208 2 144 1 330 1 76 1 38 1 40 3 109 1 366 9 312 1 175 1 112 9 263 1 197 2 267 2 67 2 
244 1 180 2 198 5 120 2 201 1 200 2 71 1 248 4 251 1 328 1 124 1 359 6 170 1 208 2 144 1 330 1 76 1 38 1 40 3 109 1 366 9 312 1 175 1 112 9 263 1 197 2 267 2 67 2 
244 1 180 2 198 6 120 2 201 1 200 2 71 1 248 5 251 1 328 1 124 1 359 7 170 1 208 2 144 1 330 1 76 1 38 1 40 4 109 1 366 10 312 1 175 1 112 10 263 1 197 2 267 2 67 2 
244 1 180 2 198 4 120 2 201 1 200 1 71 1 248 3 251 1 328 1 124 1 359 4 170 1 208 2 144 1 330 1 38 1 40 2 109 1 366 7 312 1 175 1 112 7 263 1 197 2 267 2 67 2 
180 1 198 3 120 1 200 2 40 1 109 1 366 4 175 1 248 2 112 4 251 1 359 3 170 1 208 1 197 1 67 1 330 1 76 1 
180 1 198 1 120 1 109 1 366 2 112 2 103 1 328 1 170 1 208 1 144 1 67 1 267 1 91 1 330 1 308 1 
180 1 198 5 201 1 120 2 200 2 160 1 248 4 251 1 359 7 170 1 208 2 330 1 76 1 38 1 40 3 109 1 366 9 175 1 112 9 263 1 66 1 197 1 267 1 67 1 
180 1 198 5 201 1 120 2 200 2 160 1 248 4 251 1 359 7 170 1 208 2 330 1 76 1 38 1 40 3 109 1 366 9 175 1 112 9 263 1 66 1 197 1 267 1 67 1 
352 1 132 1 78 1 37 1 223 1 5 1 162 1 140 1 343 1 155 1 57 1 210 1 242 1 372 1 
289 1 
10 1 132 2 343 1 252 1 145 1 254 1 242 2 289 1 
245 1 132 5 334 2 338 1 289 1 123 1 18 1 340 1 304 2 10 1 87 1 30 1 153 2 343 2 252 2 75 1 116 1 254 1 242 5 
106 1 10 1 289 1 
129 1 320 2 289 1 
140 2 78 2 37 1 223 2 57 2 238 1 372 2 162 2 
93 1 243 1 322 1 96 1 323 1 326 1 223 2 184 2 138 1 52 1 72 1 186 1 162 2 140 2 276 1 11 1 188 1 57 3 128 2 280 2 230 1 172 2 78 3 37 1 81 2 64 1 65 1 337 1 342 1 151 1 85 1 344 1 345 1 347 1 238 1 372 2 374 1 
140 1 352 1 78 1 37 1 223 1 57 1 210 1 5 1 372 1 162 1 
157 1 95 1 78 1 132 1 223 1 298 1 110 1 5 1 289 1 164 1 10 1 168 1 57 1 242 1 
95 1 132 2 78 1 223 1 298 1 5 1 289 1 162 1 140 1 164 1 10 1 168 1 57 1 372 1 242 2 
53 1 132 1 343 1 252 1 242 1 
10 1 132 2 343 1 252 1 254 1 242 2 289 1 250 1 
132 1 252 1 242 1 
78 2 223 2 162 1 140 1 206 1 154 1 57 2 238 2 372 1 
84 1 121 1 204 1 
93 1 322 1 96 1 323 1 78 1 24 1 184 1 81 1 138 1 64 1 276 1 345 1 11 1 57 1 128 1 238 1 
106 1 238 1 
93 1 322 1 323 1 96 1 78 2 223 1 184 1 81 1 64 1 224 1 138 1 204 1 162 1 140 1 276 1 11 1 345 1 57 2 128 1 331 1 
157 1 310 1 78 5 223 5 224 1 162 4 140 4 150 1 154 1 57 5 238 1 360 1 372 1 331 2 
140 2 9 1 78 2 223 2 57 2 210 1 5 1 162 2 
140 3 78 3 223 3 57 3 238 1 372 1 331 1 162 3 
140 1 78 1 223 1 57 1 210 1 5 1 162 1 
140 1 206 1 78 1 223 1 154 1 57 1 5 1 372 1 162 1 
93 1 243 1 322 1 95 1 323 1 96 1 326 1 223 3 298 1 98 1 184 1 224 1 5 1 138 1 52 1 186 1 162 3 164 1 140 3 168 1 276 1 11 1 188 1 57 4 128 1 280 2 230 1 172 1 331 1 78 4 132 1 37 1 192 1 81 1 64 1 337 1 151 1 85 1 344 1 154 1 345 1 238 1 372 2 242 1 
140 1 157 1 78 2 223 2 57 2 238 1 360 1 162 1 331 1 
95 1 132 1 78 3 223 3 298 1 192 1 5 1 224 1 289 1 162 3 140 3 164 1 168 1 154 1 74 1 57 3 372 1 242 1 331 2 
78 2 223 2 204 1 162 2 140 2 84 1 154 1 57 2 372 1 331 1 
93 1 322 1 96 1 323 1 78 1 184 1 81 1 138 1 64 1 276 1 345 1 11 1 57 1 128 1 238 1 
93 1 322 1 295 1 96 1 323 1 78 1 184 1 81 1 138 1 64 1 272 1 276 1 57 1 128 1 238 1 
243 1 326 2 202 1 121 2 301 1 52 1 204 2 186 1 188 1 280 2 172 4 107 1 283 1 61 1 285 1 80 1 133 1 135 1 368 1 337 1 342 2 84 2 344 1 176 1 
140 1 9 1 78 1 168 1 223 1 57 1 5 1 162 1 
104 1 279 1 214 1 
196 1 211 1 127 1 279 2 214 2 25 1 
279 1 214 1 
279 1 214 1 
196 1 211 1 
196 1 211 1 
196 1 211 1 
279 1 214 1 261 1 
279 1 214 1 261 1 
279 1 214 1 261 1 
355 1 279 1 214 1 
355 1 279 1 214 1 
355 1 279 1 214 1 
233 1 78 2 47 1 132 1 223 2 271 1 335 1 161 1 42 1 214 1 122 1 303 1 162 2 140 2 73 1 104 1 187 1 316 1 57 2 238 1 279 1 351 1 242 1 177 1 
118 1 132 2 47 1 179 1 17 1 271 2 214 2 100 1 205 1 122 2 289 1 303 2 305 1 127 1 316 2 279 2 242 2 177 3 232 2 
125 1 197 1 67 2 308 1 163 2 
180 1 197 1 67 1 
180 1 67 1 308 1 
125 1 197 2 231 1 67 3 308 1 163 1 
125 1 292 1 197 1 67 2 308 1 163 1 
245 1 301 1 73 1 304 1 10 1 187 1 252 1 229 2 129 1 254 1 363 1 107 1 61 1 132 5 259 1 191 1 148 2 212 1 334 1 289 2 338 3 340 2 235 1 153 1 290 2 343 4 218 1 237 1 176 1 351 1 242 5 320 3 
245 1 301 3 53 5 304 2 10 1 30 1 187 4 252 6 12 1 129 3 254 1 256 1 107 3 14 1 61 3 62 1 130 5 132 9 259 3 148 6 212 2 334 2 136 1 289 5 338 8 340 6 235 2 153 2 290 6 343 7 218 1 176 3 242 9 373 1 320 9 
301 1 304 1 10 1 30 1 187 1 229 1 129 2 363 1 107 1 61 1 132 3 259 1 191 1 148 2 212 1 334 1 289 3 338 3 235 1 340 2 153 1 290 2 343 2 176 1 242 3 320 4 
301 2 304 1 10 1 30 1 187 2 229 2 129 3 256 1 363 1 107 2 61 2 62 1 132 4 259 2 191 1 148 4 212 1 334 1 289 4 338 5 235 1 340 4 153 1 290 4 343 3 176 2 242 4 373 1 320 7 
226 1 
93 1 106 1 101 1 
93 1 291 1 
93 1 276 1 64 1 
93 1 63 1 
93 1 276 1 
93 3 36 1 276 1 346 1 64 1 101 2 
61 1 326 3 285 3 119 1 183 1 336 1 368 2 275 1 29 1 342 4 314 1 315 1 176 1 306 1 21 1 189 1 172 7 362 2 
314 1 342 1 29 1 189 2 172 1 362 1 269 1 
243 2 61 1 285 4 326 4 119 1 183 1 336 1 368 3 275 1 337 2 29 1 342 5 369 1 141 1 315 1 344 2 188 2 176 1 21 1 318 1 280 4 189 1 172 9 362 2 
61 1 326 3 285 3 119 1 183 1 336 1 368 2 275 1 29 1 342 4 314 1 315 1 176 1 21 1 189 1 172 7 362 2 
61 1 326 3 285 3 119 1 183 1 336 1 368 2 275 1 29 1 342 4 314 1 315 1 176 1 21 1 189 1 172 7 362 2 
93 1 323 1 96 1 184 1 120 1 138 1 276 1 208 1 32 1 128 1 77 2 258 2 364 2 134 1 81 1 366 1 262 1 112 1 45 1 217 1 317 1 267 2 241 1 
96 1 323 1 180 1 184 1 120 1 166 1 277 1 208 1 128 1 34 1 231 1 330 1 308 1 60 1 332 1 258 1 77 1 364 1 81 1 366 1 313 1 112 1 197 1 267 1 67 2 239 1 
96 1 323 1 180 1 198 1 184 1 120 1 6 1 166 1 359 1 277 1 170 1 208 1 128 1 34 1 231 1 330 1 308 1 60 1 332 1 258 1 77 1 364 1 109 1 81 1 366 2 313 1 112 2 197 1 267 1 67 2 
96 1 323 1 180 1 198 1 184 1 120 1 166 1 359 2 277 1 170 1 208 1 128 1 34 1 231 1 308 1 332 1 258 1 77 1 364 1 131 1 109 1 81 1 366 3 313 1 112 3 217 1 197 1 267 1 67 2 239 1 
96 1 323 1 180 1 198 1 184 1 359 2 277 1 170 1 128 1 231 1 308 1 332 1 258 1 77 1 364 1 131 1 109 1 81 1 366 2 313 1 112 2 197 1 267 1 67 2 239 1 
341 1 
93 1 321 2 46 1 95 1 96 1 323 1 324 1 223 1 182 1 184 2 138 2 5 1 10 1 55 1 142 2 276 1 57 1 146 2 286 1 149 2 334 1 110 1 289 2 339 2 338 2 340 2 114 1 153 1 293 1 350 1 242 5 69 4 157 1 245 1 297 2 298 1 164 1 304 1 169 1 168 1 252 6 128 2 129 2 254 3 132 5 78 1 212 1 260 1 81 2 262 1 89 2 266 1 317 1 320 2 268 1 
95 1 46 1 157 1 132 3 78 1 223 1 297 1 298 1 260 1 5 1 110 1 164 1 168 1 169 1 252 2 293 1 57 1 145 1 254 1 242 3 69 2 268 1 
95 1 46 1 157 1 132 3 78 1 223 1 298 1 260 1 5 1 110 1 289 1 339 1 164 1 10 1 168 1 169 1 252 1 293 1 57 1 145 1 254 1 242 3 69 3 268 1 
157 1 46 1 95 1 223 1 297 1 298 1 5 1 164 1 10 1 169 1 168 1 252 2 57 1 145 1 254 1 78 1 132 3 260 1 110 1 339 1 289 1 89 1 293 1 242 3 69 3 268 1 
95 1 46 1 321 2 223 1 5 1 10 5 142 2 57 1 145 1 146 2 286 1 334 1 149 2 110 1 195 1 339 4 289 5 338 1 340 1 153 1 293 1 242 5 69 6 157 1 245 1 297 4 298 1 164 1 304 1 168 1 169 1 252 7 254 3 129 2 257 1 78 1 132 5 260 1 83 1 216 1 89 4 220 1 266 1 268 1 
95 1 46 1 321 2 324 1 223 1 5 1 10 1 142 2 57 1 146 2 286 1 334 1 149 2 110 1 338 1 339 2 289 2 340 1 153 1 293 1 242 4 69 4 157 1 245 1 297 2 298 1 164 1 304 1 168 1 169 1 252 4 129 2 254 2 78 1 132 4 260 1 89 2 266 1 320 2 268 1 
321 2 157 1 46 1 95 1 245 1 223 1 297 2 298 1 5 1 164 1 304 1 10 1 142 2 169 1 168 1 252 4 57 1 254 2 129 2 146 2 78 1 132 4 286 1 149 2 260 1 334 1 110 1 195 1 289 1 339 2 338 1 340 1 153 1 216 1 89 2 266 1 220 1 293 1 242 4 69 4 268 1 
321 2 157 1 46 1 95 1 245 1 223 1 297 2 298 1 5 1 164 1 304 1 10 1 142 2 169 1 168 1 252 4 57 1 254 2 129 2 146 2 78 1 132 4 286 1 149 2 260 1 334 1 110 1 195 1 289 1 339 2 338 1 340 1 153 1 216 1 89 2 266 1 220 1 293 1 242 4 69 4 268 1 
157 1 46 1 95 1 245 1 223 1 297 2 298 1 199 1 5 1 139 1 164 1 304 1 10 1 142 2 169 1 168 1 252 4 57 1 254 2 35 2 146 2 255 1 78 1 132 4 260 1 334 1 311 2 110 1 289 1 339 2 338 1 340 1 153 1 89 2 266 1 220 1 293 1 242 4 320 2 69 4 268 1 
321 2 157 1 46 1 95 1 245 1 223 1 297 3 298 1 5 1 164 1 304 1 10 1 142 2 169 1 168 1 252 5 57 1 254 2 129 2 146 2 257 1 78 1 132 4 286 1 149 2 334 1 260 1 110 1 195 1 289 1 338 1 339 3 340 1 153 1 216 1 89 3 266 1 220 1 293 1 242 4 69 5 268 1 
321 2 157 1 46 1 95 1 245 1 223 1 297 3 298 1 5 1 164 1 304 1 10 1 142 2 169 1 168 1 252 5 57 1 254 2 129 2 146 2 257 1 78 1 132 4 286 1 149 2 334 1 260 1 110 1 195 1 289 1 338 1 339 3 340 1 153 1 216 1 89 3 266 1 220 1 293 1 242 4 69 5 268 1 
95 1 46 1 324 1 223 1 5 1 10 1 142 2 57 1 146 2 334 1 110 1 338 1 339 2 289 1 340 1 153 1 293 1 242 4 69 4 157 1 245 1 297 2 298 1 199 1 164 1 304 1 168 1 169 1 252 4 35 2 254 2 78 1 132 4 260 1 311 2 89 2 266 1 320 2 268 1 
93 3 243 2 323 2 96 2 223 1 326 1 184 8 202 1 203 1 138 2 52 2 6 1 28 1 249 1 162 1 186 2 140 1 207 1 276 2 57 1 128 8 188 2 280 4 230 1 172 2 331 1 78 1 193 1 287 1 81 7 337 2 262 1 342 1 344 2 347 1 317 1 239 1 270 1 374 2 
243 1 223 1 326 2 121 1 301 1 204 1 52 1 162 1 186 1 140 1 56 1 188 1 57 1 280 2 361 1 172 3 107 1 61 1 78 1 259 1 285 1 368 1 337 1 342 1 84 1 154 1 344 1 176 1 372 1 
243 1 326 3 119 1 183 1 202 1 121 1 204 1 52 1 275 1 186 1 188 1 280 2 172 6 362 1 106 1 61 1 285 2 336 1 368 2 337 1 342 3 84 1 315 1 344 1 176 1 238 2 
243 2 48 1 326 6 325 1 181 1 49 3 121 11 301 2 52 2 204 11 186 1 356 3 56 1 188 2 280 4 230 1 281 1 172 14 147 1 107 1 61 2 16 1 259 2 285 2 368 1 337 2 342 8 84 4 344 2 347 1 238 1 176 1 21 1 
93 1 322 1 243 1 323 1 96 1 223 1 326 1 184 1 24 1 138 1 224 1 185 1 52 1 186 1 162 1 140 1 56 1 276 1 11 1 128 1 188 1 57 2 280 2 230 1 172 2 307 1 331 1 78 2 81 1 64 1 337 1 342 1 84 1 344 1 345 1 347 1 238 1 92 1 
93 2 322 2 96 2 323 2 1 2 326 10 223 1 183 1 184 3 50 1 138 1 224 1 52 3 275 1 186 3 140 1 56 1 276 2 11 2 57 3 188 3 280 6 230 1 13 2 331 1 107 2 61 3 285 8 336 1 64 2 337 3 342 10 344 3 345 2 347 1 238 2 21 4 239 1 243 3 117 2 119 1 70 1 121 7 301 2 204 7 162 1 128 3 172 20 362 1 78 3 259 2 39 1 81 3 174 2 368 4 85 2 84 7 315 1 176 3 
243 1 61 1 285 1 133 1 202 1 121 1 301 1 204 1 52 1 186 1 337 1 342 2 84 1 344 1 188 1 21 1 280 2 172 2 
107 1 243 1 285 1 326 2 202 1 135 1 121 1 204 1 52 1 368 1 186 1 337 1 84 1 344 1 188 1 176 1 280 2 172 2 
107 1 243 1 61 1 259 1 326 2 285 2 202 1 121 2 301 1 204 2 52 1 368 1 186 1 337 1 342 2 84 2 344 1 188 1 176 1 21 1 280 2 172 4 
243 1 61 1 285 1 133 1 121 1 301 1 204 1 52 1 186 1 337 1 342 2 84 1 344 1 188 1 21 1 280 2 172 2 270 1 
107 1 243 1 285 1 326 2 135 1 121 1 204 1 52 1 368 1 186 1 337 1 84 1 344 1 188 1 176 1 280 2 172 2 270 1 
107 1 243 1 61 1 259 1 326 2 285 2 121 2 301 1 204 2 52 1 368 1 186 1 337 1 342 2 84 2 344 1 188 1 176 1 21 1 280 2 172 4 270 1 
107 1 243 1 61 1 259 1 326 2 285 2 121 2 301 1 204 2 52 1 368 1 186 1 337 1 342 2 84 2 344 1 188 1 176 1 21 1 280 2 172 4 
93 1 322 1 243 1 323 1 96 1 326 1 184 1 138 1 52 1 186 1 276 1 11 1 128 1 57 1 188 1 280 2 230 1 172 2 78 1 81 1 64 1 337 1 342 1 85 1 344 1 345 1 347 1 238 1 
93 1 322 1 243 1 323 1 96 1 295 1 326 1 184 1 138 1 272 1 52 1 186 1 276 1 128 1 57 1 188 1 280 2 230 1 172 2 78 1 81 1 64 1 194 1 337 1 342 1 344 1 347 1 238 1 
107 1 243 1 61 1 259 1 326 2 285 2 121 2 301 1 204 2 52 1 368 1 186 1 337 1 342 2 84 2 56 1 344 1 188 1 176 1 21 1 280 2 172 4 
93 1 322 1 243 1 323 1 96 1 326 2 184 1 121 2 301 1 204 2 52 1 6 1 186 1 276 1 11 1 128 1 57 1 188 1 280 2 172 4 13 1 107 1 61 1 78 1 259 1 285 2 81 1 64 1 368 1 337 1 342 2 84 2 85 1 344 1 345 1 176 1 21 1 
243 1 94 1 326 1 223 1 121 1 301 1 52 1 204 1 162 1 186 1 140 1 56 1 188 1 57 1 280 2 172 3 107 1 61 1 78 1 259 1 285 1 337 1 342 2 84 1 154 1 344 1 176 1 21 1 372 1 
243 2 326 10 325 1 49 2 51 1 301 3 273 1 7 1 356 1 188 2 209 2 280 4 172 19 59 1 107 3 61 3 16 1 259 3 285 6 368 3 337 2 342 9 236 1 344 2 348 1 219 2 176 3 318 1 21 3 68 1 
243 3 326 12 49 2 51 2 301 3 273 2 167 1 356 2 357 1 227 1 278 1 188 3 209 1 280 6 190 1 172 26 59 1 107 2 234 1 61 3 16 2 259 3 285 4 368 2 337 3 342 14 369 2 236 1 344 3 219 4 176 2 21 2 318 1 68 1 
243 3 326 21 325 1 119 1 183 1 49 4 51 1 301 4 273 2 7 1 275 1 167 1 357 1 356 3 227 1 278 1 188 3 209 1 280 6 190 1 172 41 362 1 59 1 107 4 234 1 61 5 16 3 259 4 285 8 336 1 368 4 337 3 19 1 342 20 369 1 315 1 236 1 344 3 219 4 176 5 318 1 21 4 68 1 
243 4 326 18 325 1 119 1 183 1 49 4 51 1 301 4 273 2 7 1 275 1 167 1 357 1 356 3 227 1 278 1 188 4 209 1 280 8 190 1 172 38 362 1 59 1 107 3 234 1 61 5 16 3 259 4 285 7 336 1 368 4 337 4 19 1 342 20 369 2 315 1 236 1 344 4 219 4 176 4 318 1 21 3 68 1 
243 2 326 25 325 2 119 1 183 1 49 4 51 1 301 7 273 1 275 1 167 1 357 1 356 4 227 1 278 1 188 2 209 1 280 4 190 1 281 2 172 52 362 1 59 1 107 7 234 1 61 8 16 2 259 7 285 14 336 1 368 7 337 2 342 27 369 1 315 1 236 1 344 2 219 4 176 8 318 1 21 7 68 1 
93 1 243 1 323 1 96 1 223 2 326 1 184 2 4 1 52 1 186 1 102 1 228 1 56 1 276 1 128 2 57 2 188 1 33 1 280 2 230 1 172 2 78 2 365 1 193 1 287 1 81 2 337 1 342 1 344 1 347 1 374 2 
93 1 173 1 294 1 323 1 96 1 258 1 184 1 81 1 138 1 262 1 276 1 128 1 317 1 241 1 
173 1 332 1 323 1 258 1 96 1 180 1 184 1 81 1 41 1 367 1 166 1 277 1 197 1 128 1 231 1 67 2 239 1 308 1 
173 1 332 1 323 1 96 1 258 1 180 1 184 2 81 2 41 1 367 1 6 1 166 1 277 1 197 1 128 2 231 1 67 2 239 1 308 1 
332 1 15 1 258 1 96 1 323 1 180 1 184 1 81 1 41 1 166 1 277 1 197 1 128 1 231 1 67 2 239 1 308 1 
296 1 
245 1 334 1 123 1 289 1 338 1 304 1 340 1 10 1 87 1 153 1 
107 2 117 1 61 2 259 2 148 5 301 2 327 1 27 2 289 5 338 5 340 5 290 5 176 2 129 5 320 10 
10 1 132 1 252 1 242 1 254 1 289 1 
93 1 323 1 96 1 245 1 158 1 184 4 138 2 8 1 304 2 55 1 30 1 126 2 276 1 252 4 128 4 254 2 132 3 108 1 212 2 334 2 81 4 338 2 262 1 340 2 153 2 114 2 350 1 317 1 242 3 
106 1 340 1 10 1 87 1 338 1 289 1 123 1 
321 1 132 1 245 1 286 1 334 1 149 1 289 2 338 1 304 1 340 1 10 1 153 1 252 1 242 1 254 1 129 1 320 1 
93 10 323 4 96 3 184 3 138 1 327 2 6 1 101 2 10 2 276 3 107 2 61 2 108 1 63 2 148 6 334 4 288 2 64 3 338 9 289 8 340 8 114 1 153 4 290 6 291 3 346 1 242 5 117 2 245 4 353 2 23 2 298 2 159 1 301 2 26 1 27 2 123 1 304 4 126 1 252 5 128 3 254 3 129 6 132 5 259 2 212 2 81 3 44 2 87 1 86 1 88 2 176 2 319 2 320 12 
245 2 49 1 301 2 327 1 247 1 274 1 27 2 167 1 304 2 356 1 357 1 227 1 10 2 252 1 278 1 254 1 129 3 107 2 234 1 61 2 132 1 16 1 259 2 148 5 212 1 334 2 338 8 289 5 340 5 114 1 153 2 290 5 176 2 242 1 320 6 
222 1 352 1 245 1 223 1 119 1 5 1 327 1 27 2 275 1 162 1 140 1 304 1 57 1 210 1 61 2 78 1 132 1 37 1 334 1 336 1 338 2 340 2 153 1 216 1 155 1 176 1 242 1 372 1 
93 1 243 1 322 1 96 1 323 1 326 1 223 2 184 1 138 1 52 1 162 2 186 1 140 2 276 1 11 1 188 1 128 1 57 3 280 2 230 1 172 1 78 3 37 1 81 1 64 1 337 1 151 1 85 1 344 1 345 1 238 1 372 2 
245 1 148 2 212 1 334 1 338 1 289 4 340 2 304 1 10 2 153 1 114 1 290 2 129 2 362 1 320 4 
179 1 316 1 271 1 335 1 156 1 
152 1 316 1 271 1 
152 1 316 1 271 1 
152 1 316 1 271 1 
316 1 271 1 309 1 
316 1 271 1 309 1 
316 1 271 1 309 1 
316 1 271 1 
279 1 214 1 
243 1 222 1 61 2 285 5 326 5 119 1 336 2 368 3 337 1 275 2 342 5 344 1 188 1 176 2 280 2 318 1 21 2 172 10 
243 1 61 1 285 1 301 1 337 1 342 2 344 1 188 1 318 1 280 2 21 1 172 2 
107 1 243 1 61 1 259 1 326 2 285 2 301 1 368 1 337 1 342 2 344 1 188 1 176 1 318 1 280 2 21 1 172 4 
243 3 326 2 285 2 225 1 336 1 368 1 7 1 337 3 275 1 342 1 369 1 344 3 188 3 318 1 280 6 21 1 172 3 
221 1 243 5 326 18 325 1 119 2 183 1 49 4 300 1 225 1 301 3 275 3 7 1 356 3 188 5 280 10 172 34 362 1 107 3 61 5 16 1 259 3 285 12 336 3 368 7 337 5 342 16 369 2 315 1 344 5 90 1 349 1 176 5 318 1 21 5 
243 2 61 1 326 4 285 3 119 1 183 1 336 1 368 2 337 2 275 1 342 4 369 1 344 2 315 1 188 2 176 1 21 1 280 4 172 8 362 1 
106 1 61 1 326 3 285 2 119 1 183 1 336 1 368 2 275 1 342 3 315 1 176 1 172 6 362 1 
107 1 243 1 61 1 259 1 326 2 285 2 300 1 301 1 368 1 337 1 342 2 344 1 188 1 176 1 280 2 21 1 172 4 
107 1 61 1 16 1 259 1 326 4 325 1 285 2 49 2 301 1 368 1 356 1 342 3 176 1 21 1 172 7 
243 2 325 1 326 12 181 1 119 1 183 1 49 2 225 1 301 2 275 2 356 2 188 2 280 4 281 1 172 23 362 1 107 2 61 3 259 2 285 9 336 2 368 5 337 2 342 11 369 2 315 1 344 2 176 3 21 4 
326 1 49 1 172 1 
342 1 356 1 172 1 
107 1 243 1 117 1 61 1 259 1 326 3 285 3 300 1 301 1 368 2 337 1 342 3 344 1 188 1 176 1 280 2 21 1 172 6 
243 1 326 6 49 1 301 2 356 1 357 1 167 1 227 1 188 1 278 1 280 2 172 12 107 2 234 1 61 2 16 1 259 2 285 2 368 1 337 1 342 6 344 1 176 2 21 1 318 1 
61 1 326 3 285 2 119 1 336 1 368 1 275 1 342 3 176 1 21 1 172 6 
243 1 285 2 326 2 183 1 336 1 225 1 368 1 275 1 337 1 342 1 369 1 315 1 344 1 188 1 21 1 280 2 172 3 
243 1 234 1 61 1 16 1 285 2 326 4 119 1 183 1 49 1 336 1 368 2 275 1 337 1 342 4 356 1 315 1 344 1 188 1 176 1 318 1 280 2 172 8 362 1 
243 2 326 5 325 1 119 1 183 1 49 2 300 1 301 1 275 1 356 1 188 2 280 4 172 11 362 1 234 1 61 2 16 1 259 1 285 3 336 1 368 2 337 2 342 6 315 1 344 2 176 1 318 1 21 1 
243 3 326 10 119 1 183 1 49 1 300 1 301 2 275 1 356 1 357 1 167 1 227 1 278 1 188 3 280 6 172 19 362 1 107 2 234 1 61 3 16 1 259 2 285 4 336 1 368 3 337 3 342 9 369 1 315 1 344 3 176 3 21 1 318 1 
243 3 326 7 119 1 183 1 49 1 300 1 301 2 275 1 356 1 357 1 167 1 227 1 188 3 278 1 280 6 172 17 362 1 107 1 234 1 61 3 16 1 259 2 285 5 336 1 368 3 337 3 342 10 369 1 315 1 344 3 176 2 21 2 318 1 
243 1 234 1 61 1 16 1 285 2 326 4 119 1 183 1 49 1 336 1 368 2 275 1 337 1 342 4 356 1 315 1 344 1 188 1 176 1 318 1 280 2 172 8 362 1 
243 1 326 6 49 1 301 2 356 1 357 1 167 1 227 1 188 1 278 1 280 2 172 12 107 2 234 1 61 2 16 1 259 2 285 2 368 1 337 1 342 6 344 1 176 2 21 1 318 1 
243 4 326 8 119 1 183 1 49 1 300 1 301 2 275 1 167 1 356 1 357 1 227 1 278 1 188 4 280 8 172 18 362 1 107 1 234 1 61 3 16 1 259 2 285 5 336 1 368 3 337 4 342 10 369 2 315 1 344 4 176 2 21 2 318 1 
243 4 326 7 49 1 301 3 7 1 167 1 356 1 357 1 227 1 278 1 188 4 280 8 172 16 107 2 234 1 61 3 16 1 259 3 285 6 368 3 337 4 342 9 369 2 344 4 176 2 21 3 318 1 
61 1 326 4 285 6 119 1 183 1 336 3 368 3 275 3 342 3 315 2 176 1 21 3 172 7 
243 4 326 8 119 1 183 1 49 1 301 2 275 1 7 1 167 1 356 1 357 1 227 1 278 1 188 4 280 8 172 18 362 1 107 1 234 1 61 3 16 1 259 2 285 4 336 1 368 3 337 4 342 10 369 2 315 1 344 4 176 2 21 1 318 1 
157 1 78 1 223 1 57 1 238 1 360 1 302 1 
157 1 78 1 358 1 223 1 57 1 97 1 238 1 360 1 3 1 302 1 215 1 58 1 
93 1 323 1 96 1 354 1 184 4 213 1 81 4 138 1 6 1 262 1 276 1 128 4 317 1 
93 1 96 1 323 2 284 1 39 1 184 2 333 1 81 2 64 1 126 1 143 1 276 1 128 2 105 1 
332 1 323 1 96 1 180 1 128 1 184 1 81 1 138 1 67 1 308 1 
93 1 323 1 96 1 276 1 193 1 128 2 184 2 4 1 81 2 239 1 6 1 
93 3 96 2 323 2 354 1 184 5 193 1 81 4 138 1 6 1 262 1 249 1 28 1 126 1 276 2 128 5 317 1 
93 3 96 2 323 2 354 1 184 5 193 1 81 4 138 1 6 1 262 1 28 1 126 1 276 2 128 5 317 1 22 1 
93 1 106 1 323 1 96 1 276 1 128 1 184 1 317 1 81 1 138 1 262 1 
93 1 322 1 323 1 96 1 78 2 223 1 184 1 81 1 64 1 138 1 162 1 140 1 276 1 11 1 57 2 128 1 238 1 331 1 
93 3 95 1 322 1 323 1 96 1 353 1 78 2 223 2 63 1 184 1 81 1 5 1 64 2 162 1 140 2 168 1 126 1 276 2 11 1 57 2 128 1 238 1 331 1 
93 3 95 1 322 1 323 1 295 1 96 1 353 1 78 2 223 2 63 1 184 2 213 1 81 2 5 1 64 2 162 1 140 2 168 1 126 1 276 2 57 2 128 2 238 1 331 1 
93 4 323 1 96 1 353 1 132 2 298 1 63 1 184 3 213 1 81 3 138 1 64 1 101 1 289 1 10 1 126 1 291 1 276 1 252 1 128 3 265 1 242 2 178 1 
93 4 323 1 96 1 353 1 132 2 298 1 63 1 184 3 213 1 81 3 138 1 64 1 101 1 289 1 10 1 126 1 291 1 276 1 88 1 252 1 128 3 242 2 
323 1 96 1 207 1 128 1 184 1 81 1 
93 3 96 2 323 3 284 1 193 1 184 7 81 6 203 1 138 2 64 1 6 1 28 1 249 1 207 1 276 2 128 7 346 1 239 1 105 1 374 1 282 1 
93 1 322 1 96 1 323 1 223 1 326 3 184 1 183 1 52 2 6 1 186 2 275 1 140 1 56 1 276 1 11 1 57 2 188 2 280 4 13 1 331 1 61 1 285 2 64 1 336 1 337 2 342 3 344 2 345 1 238 2 243 2 119 1 121 1 204 1 162 1 128 1 172 6 362 1 78 2 365 1 174 1 81 1 368 2 84 1 85 1 315 1 176 1 
93 2 245 2 298 1 184 1 138 1 101 1 123 1 304 2 10 1 252 2 128 1 254 1 132 3 108 1 334 2 81 1 288 1 338 1 289 1 44 1 340 1 87 1 153 2 343 1 291 1 88 1 319 1 242 3 
93 2 96 1 323 2 184 2 159 1 81 2 64 1 6 1 101 1 207 1 276 1 128 2 346 1 
93 1 322 1 323 1 295 1 96 1 78 2 223 1 184 1 81 1 64 1 138 1 162 1 140 1 276 1 57 2 128 1 238 1 331 1 
93 1 96 1 323 2 284 1 184 1 81 1 64 1 126 1 276 1 128 1 346 1 105 1 282 1 
102 1 78 1 113 1 228 1 223 1 2 1 57 1 33 1 246 1 
264 1 113 1 171 1 
113 1 20 1 2 1 238 1 246 1 
95 1 132 2 2 2 298 1 192 1 5 1 246 2 289 1 164 1 10 1 264 1 113 1 168 1 20 2 343 1 171 1 238 1 329 1 242 2 
112 1 198 1 170 1 208 1 120 1 109 1 366 1 330 1 
198 3 120 1 40 1 109 2 99 1 366 4 43 1 248 1 112 4 359 2 170 2 208 1 144 1 371 1 
198 1 120 1 109 1 366 2 111 1 112 2 253 1 359 1 208 1 170 1 66 1 330 1 
137 1 198 1 120 1 366 3 109 1 43 1 112 3 208 1 170 1 144 2 371 2 330 1 
54 1 0 1 198 2 82 2 
112 1 299 1 208 1 120 1 366 1 330 1 
263 1 112 2 359 1 198 1 170 1 208 1 120 1 109 1 366 2 330 1 
115 1 
112 1 198 1 170 1 208 1 120 1 109 1 366 1 330 1 
106 1 198 1 170 1 109 1 
112 1 198 1 170 1 208 1 120 1 109 1 366 1 
364 1 366 1 267 1 
198 1 120 1 366 3 109 1 43 1 165 1 112 3 208 1 170 1 144 2 371 1 330 1 
112 2 359 1 198 1 170 1 208 1 200 1 120 1 109 1 366 2 
112 1 180 1 198 1 208 1 197 1 120 1 366 1 67 1 175 1 248 1 330 1 
112 1 198 1 208 1 120 1 109 1 366 1 330 1 
112 1 170 1 208 1 120 1 109 2 366 1 330 1 
79 1 198 1 120 2 109 1 366 2 112 2 31 1 208 2 370 1 330 1 
38 1 198 2 120 1 40 1 109 1 366 3 248 1 112 3 263 1 359 2 170 1 208 1 330 1 
180 1 198 1 120 1 109 1 366 2 112 2 359 1 170 1 208 1 197 1 67 2 231 1 240 1 308 1 330 1 
198 2 120 2 200 1 40 1 109 1 366 4 248 1 112 4 359 2 170 1 208 2 330 1 76 1 
263 1 112 3 359 1 198 1 170 1 208 1 120 1 109 1 366 3 144 1 330 1 
198 1 40 1 99 1 248 1 
198 1 109 1 

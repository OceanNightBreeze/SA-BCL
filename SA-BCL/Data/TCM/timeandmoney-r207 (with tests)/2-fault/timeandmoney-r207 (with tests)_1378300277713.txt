#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
105 2 269 1 24 5 0 1 130 2 2 1 54 1 4 9 245 2 342 1 286 1 6 1 320 4 183 1 12 1 185 1 13 9 296 6 280 1 281 1 333 1 100 2 373 3 71 2 377 1 152 2 382 2 339 1 
105 2 269 1 24 5 0 1 130 2 2 1 54 1 4 9 245 2 342 1 286 1 6 1 320 4 183 1 12 1 185 1 13 9 296 6 280 1 281 1 333 1 100 2 373 3 71 2 377 1 152 2 382 2 339 1 
105 2 269 1 24 6 0 1 130 2 2 1 54 1 4 10 245 2 342 1 286 1 6 1 320 5 183 1 12 1 185 1 13 10 296 7 280 1 281 1 333 1 100 2 373 4 71 2 377 1 152 2 382 2 339 1 
105 2 269 1 24 4 0 1 130 2 2 1 54 1 4 7 245 2 342 1 286 1 6 1 320 3 183 1 12 1 185 1 13 7 296 4 280 1 333 1 100 2 373 2 71 1 377 1 152 2 382 2 339 1 
105 1 296 3 269 1 24 3 281 1 130 1 245 1 4 4 286 1 342 1 6 1 320 2 373 1 100 1 71 2 377 1 382 1 13 4 
105 1 24 1 269 1 280 1 130 1 4 2 245 1 6 1 16 1 100 1 17 1 377 1 152 1 94 1 339 1 13 2 
105 2 296 1 269 1 24 2 130 2 4 3 6 1 320 1 373 1 377 1 152 1 185 1 13 3 
105 2 269 1 24 5 130 2 2 1 4 9 245 1 286 1 342 1 6 1 320 4 185 1 13 9 296 7 281 1 333 1 373 3 47 1 100 1 71 2 377 1 152 1 382 1 338 1 
105 2 269 1 24 5 130 2 2 1 4 9 245 1 286 1 342 1 6 1 320 4 185 1 13 9 296 7 281 1 333 1 373 3 47 1 100 1 71 2 377 1 152 1 382 1 338 1 
180 1 330 1 314 1 
306 1 314 1 250 2 
115 2 366 1 231 2 42 1 159 2 218 2 360 2 247 2 
83 1 156 2 366 1 271 1 243 1 110 1 158 1 55 1 159 3 218 2 348 1 219 1 8 2 247 2 89 1 205 1 115 2 9 1 353 1 291 1 184 1 327 2 186 1 95 1 120 1 254 2 121 2 231 2 42 1 360 3 73 1 375 1 361 1 238 1 310 1 21 1 22 1 
198 1 285 1 115 1 231 1 42 1 266 1 159 1 218 1 360 1 247 1 
198 1 268 1 96 1 231 1 28 1 57 1 46 1 159 1 360 1 287 1 180 1 209 1 314 1 226 1 
198 1 96 1 231 1 28 2 57 1 46 1 218 1 159 1 360 1 287 1 247 1 180 1 115 1 209 2 314 1 
177 1 209 1 28 1 36 1 256 1 
177 1 66 1 180 1 139 1 209 2 28 2 256 1 314 1 
177 1 209 1 28 1 
198 1 42 1 231 1 28 1 256 1 218 1 159 1 360 1 247 1 285 1 115 1 209 1 11 1 266 1 
314 1 
177 1 66 1 180 1 199 1 209 2 28 2 256 1 314 1 
40 1 66 1 242 1 206 1 241 2 230 1 28 5 303 1 58 1 256 2 148 2 32 1 177 2 180 1 209 5 378 1 371 2 314 1 315 1 
366 1 330 1 
366 2 98 1 231 2 159 2 218 1 360 2 125 1 247 1 115 1 
84 1 116 1 170 1 
156 1 366 1 121 1 243 1 111 1 55 1 159 1 360 1 348 1 9 1 353 1 310 1 184 1 327 1 22 1 186 1 
115 1 366 1 231 3 81 1 159 3 218 3 360 3 247 3 
198 1 285 1 231 1 159 1 218 1 360 1 247 1 
198 1 115 1 98 1 231 1 159 1 218 1 360 1 247 1 125 1 
83 1 198 1 156 1 366 1 271 1 243 1 110 1 55 1 28 1 57 1 86 1 159 4 218 3 348 1 287 1 8 1 247 3 89 1 205 1 115 2 9 1 353 1 91 1 184 1 327 1 186 1 95 1 120 1 254 2 96 1 121 1 231 3 42 1 359 1 46 1 360 4 125 1 375 1 238 1 310 1 209 1 81 1 21 1 22 1 
366 1 231 2 217 1 159 2 218 1 81 1 360 2 226 1 247 1 
198 1 96 1 231 3 28 1 359 1 146 1 46 1 57 1 218 3 159 3 360 3 287 1 125 1 247 3 115 1 91 1 209 1 314 1 81 2 
84 1 231 2 218 2 159 2 360 2 125 1 247 2 115 1 116 1 81 1 
156 1 366 1 121 1 243 1 55 1 159 1 360 1 348 1 9 1 353 1 310 1 327 1 184 1 22 1 186 1 
198 1 156 1 366 1 121 1 243 1 159 1 360 1 348 1 192 1 288 1 118 1 9 1 353 1 310 1 327 1 184 1 22 1 
365 1 340 1 83 1 84 2 271 1 158 2 8 4 350 1 274 1 89 1 116 2 162 1 221 1 95 2 252 1 120 1 254 2 97 1 331 1 170 2 238 1 313 1 51 1 21 1 
198 1 33 1 231 1 159 1 218 1 287 1 360 1 247 1 
156 1 243 1 121 1 231 1 55 1 359 1 218 1 159 2 348 1 360 2 247 1 116 1 9 1 353 1 310 1 184 1 327 1 81 1 22 1 186 1 
366 1 231 5 359 1 217 1 218 4 159 5 258 1 360 5 247 4 125 1 115 1 117 1 81 2 226 1 
198 1 33 1 285 1 231 2 159 2 218 2 360 2 247 2 
119 1 87 1 
119 1 87 1 
174 1 263 1 
174 1 263 1 
174 1 263 1 
302 1 119 1 87 1 
302 1 119 1 87 1 
195 1 119 1 87 1 
174 1 263 1 264 1 119 2 87 2 227 1 
302 1 119 1 87 1 
193 1 119 1 87 1 
193 1 119 1 87 1 
193 1 119 1 87 1 
173 2 28 2 282 2 168 2 59 1 235 1 87 2 176 3 149 2 78 1 210 1 209 2 64 2 165 1 119 2 314 1 227 1 357 1 82 1 
366 1 173 1 85 1 28 1 30 1 319 1 218 2 159 2 87 1 247 2 176 1 64 1 182 1 119 1 357 1 231 2 168 1 360 2 236 1 149 1 103 1 209 1 262 1 195 1 
245 1 382 1 100 1 
245 1 100 1 94 1 
65 1 229 1 245 3 44 1 382 2 94 1 
65 1 229 1 41 1 245 2 382 1 94 1 
65 2 229 1 245 2 382 1 94 1 
107 1 241 1 242 3 85 1 28 5 58 2 220 1 177 1 180 1 162 1 182 1 35 1 371 1 250 3 252 1 40 1 66 1 97 1 255 2 45 1 256 4 148 1 126 2 236 1 306 1 307 1 171 1 209 5 313 1 312 2 50 1 314 2 
241 2 242 8 28 9 5 1 273 5 58 6 177 6 180 1 162 3 36 5 371 2 250 9 252 3 66 1 40 1 301 1 97 3 45 2 256 7 334 1 148 2 126 6 236 4 306 3 307 2 76 1 309 1 171 3 209 9 313 3 312 6 50 1 315 1 53 1 314 5 
241 1 242 3 28 3 58 2 220 1 180 1 162 1 35 1 371 1 250 4 252 1 97 1 255 1 45 1 256 2 148 1 126 2 236 1 306 2 307 1 209 3 171 1 313 1 312 2 314 3 315 1 
241 1 242 5 28 4 5 1 58 4 220 1 180 1 162 2 35 1 371 1 250 7 252 2 301 1 97 2 255 2 45 1 256 3 148 1 126 4 236 2 306 3 307 1 309 1 209 4 171 2 313 2 312 4 314 4 315 1 
244 1 330 1 184 1 
317 1 184 1 
31 1 
184 1 348 1 
298 1 244 2 353 1 184 3 348 1 349 1 
353 1 184 1 348 1 
184 1 112 1 
252 1 43 1 158 4 233 1 175 1 8 7 260 1 162 1 290 1 93 2 336 1 221 2 51 3 223 1 95 3 172 1 155 1 
252 1 43 1 158 4 233 1 175 1 8 7 260 1 162 1 290 1 93 2 336 1 221 2 51 3 223 1 95 3 172 1 155 1 
252 1 27 1 43 1 158 4 233 1 175 1 8 7 260 1 162 1 290 1 93 2 336 1 221 2 51 3 223 1 95 3 172 1 155 1 
25 3 271 1 108 1 158 16 367 1 216 1 114 1 175 2 61 1 8 31 89 1 162 4 290 1 93 3 181 1 221 5 223 1 95 15 252 4 297 1 120 1 254 2 97 3 43 5 233 2 260 2 75 4 171 3 238 1 336 1 51 10 313 3 155 1 172 2 
271 2 108 1 158 5 175 1 347 1 8 9 89 2 162 1 290 1 355 1 93 2 221 3 95 4 252 1 120 2 254 4 43 1 233 1 260 1 238 2 336 1 51 4 155 1 172 1 
105 1 156 1 24 1 269 1 130 1 1 1 243 1 4 2 245 2 6 1 160 1 178 1 161 1 277 1 9 1 10 1 327 1 94 1 13 2 296 1 67 1 166 1 121 1 44 1 100 1 335 1 377 1 379 1 152 1 382 1 
105 1 156 1 24 1 269 1 130 1 1 1 243 1 4 3 245 2 160 1 276 1 161 1 277 1 9 1 10 1 292 1 327 1 94 1 13 3 296 2 67 1 121 1 143 1 44 1 100 1 335 1 377 1 379 1 152 1 382 1 
156 1 24 1 269 1 243 1 4 2 245 2 160 1 276 1 161 1 277 1 9 1 292 1 327 1 94 1 13 2 296 2 67 1 121 1 44 1 100 1 335 1 377 1 152 1 379 1 382 1 
105 1 156 1 130 1 243 1 201 1 4 1 348 1 9 1 161 2 63 1 327 1 184 1 13 1 67 2 121 1 143 1 70 1 308 1 379 2 152 2 267 1 213 1 22 1 
105 1 156 1 130 1 1 1 243 1 4 1 245 2 6 1 160 1 178 1 276 1 161 1 277 1 9 1 10 1 327 1 94 1 13 1 67 1 121 1 44 1 100 1 335 1 379 1 152 1 382 1 
352 1 
156 2 198 1 157 1 242 2 241 1 243 1 56 1 57 1 113 2 58 2 159 1 348 1 287 1 9 1 63 1 249 1 293 2 295 2 250 2 66 3 358 2 121 2 257 1 360 1 127 1 306 2 307 1 18 1 209 5 363 2 267 1 314 2 22 2 268 1 132 1 28 5 134 1 177 6 180 1 371 1 327 2 184 1 225 1 226 1 40 1 96 1 188 2 231 1 145 1 46 1 234 1 148 1 150 1 237 4 52 2 
198 1 268 1 199 1 28 3 134 1 57 1 159 1 287 1 177 2 249 1 293 1 226 1 66 1 96 1 231 1 46 1 234 1 360 1 150 1 237 2 18 1 209 3 
66 1 198 1 268 1 199 1 96 1 231 1 28 3 46 1 57 1 134 1 234 1 159 1 287 1 360 1 177 1 150 1 180 1 237 3 18 1 249 1 209 3 295 1 314 1 226 1 
198 1 268 1 199 1 28 3 134 1 57 1 159 1 287 1 177 2 180 1 249 1 293 1 295 1 226 1 66 1 96 1 231 1 46 1 234 1 360 1 150 1 237 3 18 1 209 3 52 1 314 1 
198 1 268 1 157 1 242 1 241 1 199 1 28 5 134 1 57 1 113 2 58 1 159 1 287 1 177 7 180 5 249 1 371 1 293 4 295 4 226 1 39 1 251 1 40 1 66 3 358 2 96 1 188 2 231 1 46 1 234 1 257 1 148 1 360 1 306 2 150 1 237 6 49 1 79 1 18 1 311 1 209 5 363 2 314 5 52 4 
198 1 157 1 241 1 242 1 56 1 57 1 58 1 113 2 159 1 287 1 249 1 293 2 295 2 250 2 66 2 358 2 257 1 360 1 306 2 18 1 209 4 363 2 314 2 268 1 28 4 134 1 177 4 180 1 371 1 226 1 40 1 96 1 231 1 188 2 46 1 234 1 148 1 150 1 237 4 52 2 
198 1 268 1 157 1 242 1 241 1 28 4 134 1 57 1 113 2 58 1 159 1 287 1 177 4 180 1 249 1 293 2 371 1 295 2 226 1 66 2 40 1 358 2 96 1 188 2 231 1 46 1 234 1 257 1 360 1 148 1 306 2 150 1 237 4 49 1 18 1 79 1 209 4 311 1 363 2 314 1 52 2 
198 1 268 1 157 1 242 1 241 1 28 4 134 1 57 1 113 2 58 1 159 1 287 1 177 4 180 1 249 1 293 2 371 1 295 2 226 1 66 2 40 1 358 2 96 1 188 2 231 1 46 1 234 1 257 1 360 1 148 1 306 2 150 1 237 4 49 1 18 1 79 1 209 4 311 1 363 2 314 1 52 2 
198 1 106 2 268 1 242 1 241 1 28 4 134 1 57 1 58 1 159 1 287 1 177 4 180 1 249 1 293 2 371 1 295 2 250 2 328 1 226 1 66 2 40 1 96 1 188 2 231 1 46 1 234 1 257 1 360 1 148 1 150 1 237 4 49 1 18 1 194 1 20 2 209 4 196 1 363 2 314 1 52 2 
198 1 268 1 157 1 242 1 241 1 28 4 134 1 57 1 113 2 58 1 159 1 287 1 177 5 180 1 249 1 371 1 293 3 295 3 226 1 39 1 66 2 40 1 358 2 96 1 188 2 231 1 46 1 234 1 257 1 148 1 360 1 306 2 150 1 237 5 49 1 79 1 18 1 209 4 311 1 363 2 314 1 52 3 
198 1 268 1 157 1 242 1 241 1 28 4 134 1 57 1 113 2 58 1 159 1 287 1 177 5 180 1 249 1 371 1 293 3 295 3 226 1 39 1 66 2 40 1 358 2 96 1 188 2 231 1 46 1 234 1 257 1 148 1 360 1 306 2 150 1 237 5 49 1 79 1 18 1 209 4 311 1 363 2 314 1 52 3 
198 1 106 2 241 1 242 1 56 1 57 1 58 1 159 1 287 1 249 1 293 2 295 2 250 2 66 2 257 1 360 1 18 1 20 2 209 4 363 2 314 1 268 1 28 4 134 1 177 4 180 1 371 1 328 1 226 1 40 1 96 1 231 1 188 2 46 1 234 1 148 1 150 1 237 4 52 2 
252 1 83 1 84 1 120 1 366 2 271 1 254 2 331 1 330 1 158 3 175 1 8 6 89 1 116 1 162 1 290 1 170 1 93 1 238 1 336 1 221 2 51 2 21 1 95 3 155 1 172 1 
83 2 84 4 25 3 366 1 271 2 343 1 158 8 114 1 8 14 89 2 116 11 162 2 221 1 95 6 252 1 297 1 120 2 69 1 254 4 97 2 43 1 374 1 72 1 375 1 75 3 170 11 361 1 238 2 171 2 51 2 80 1 313 1 21 1 
156 1 83 1 316 1 84 1 366 1 271 1 243 1 111 1 55 1 158 1 159 2 218 1 348 1 247 1 8 2 89 1 9 1 353 1 164 1 184 1 327 1 186 1 95 1 120 1 121 1 254 2 231 1 359 1 360 2 375 1 19 1 361 1 310 1 238 1 80 1 81 1 22 1 21 1 
156 3 243 2 55 2 158 10 159 3 348 2 247 1 8 20 205 2 116 7 9 2 162 3 290 1 353 2 252 3 120 3 121 3 254 6 359 1 360 3 170 7 361 1 310 2 171 2 80 1 313 2 81 1 22 1 21 3 172 1 83 3 84 7 366 2 271 3 175 1 218 1 322 2 89 3 276 1 93 1 221 4 327 3 184 2 326 2 186 2 37 1 95 10 97 2 231 1 99 1 43 4 147 2 332 2 375 1 238 3 336 1 51 8 155 1 197 1 
156 8 83 2 271 2 243 2 158 1 203 1 60 1 159 1 218 1 219 2 348 2 247 1 8 2 89 2 275 1 276 1 9 2 63 1 184 3 327 8 95 1 141 1 120 2 166 1 142 1 121 7 254 4 122 1 331 1 231 1 360 1 375 1 361 1 238 2 265 1 267 1 81 1 22 2 21 2 
83 1 84 1 271 1 158 1 218 1 159 1 247 1 8 3 89 1 116 1 115 1 162 1 221 1 95 2 252 1 120 1 254 2 97 1 231 1 360 1 125 1 170 1 238 1 171 1 380 1 51 1 80 1 313 1 21 1 
83 1 84 1 120 1 271 1 254 2 97 1 331 1 43 1 158 2 8 2 350 1 89 1 116 1 162 1 170 1 238 1 51 1 21 1 
252 1 83 1 340 1 84 1 120 1 271 1 254 2 331 1 8 2 89 1 116 1 170 1 238 1 221 1 51 1 313 1 21 1 95 2 
83 1 84 2 271 1 158 2 8 4 89 1 116 2 162 1 221 1 95 2 252 1 120 1 97 1 254 2 331 1 43 1 170 2 171 1 238 1 51 2 313 1 21 1 
83 1 84 1 120 1 271 1 254 2 97 1 43 1 158 2 203 1 8 2 350 1 89 1 116 1 162 1 170 1 238 1 51 1 21 1 
252 1 83 1 340 1 84 1 120 1 271 1 254 2 203 1 8 2 89 1 116 1 170 1 238 1 221 1 51 1 313 1 21 1 95 2 
83 1 84 2 271 1 158 2 203 1 8 4 89 1 116 2 162 1 221 1 95 2 252 1 120 1 97 1 254 2 43 1 170 2 171 1 238 1 51 2 313 1 21 1 
252 1 83 1 84 2 120 1 271 1 254 2 97 1 43 1 158 2 8 4 89 1 116 2 162 1 170 2 238 1 171 1 221 1 313 1 51 2 21 1 95 2 
156 1 83 1 366 1 271 1 243 1 158 1 55 1 159 1 348 1 8 2 89 1 205 1 9 1 353 1 327 1 184 1 186 1 95 1 120 1 121 1 254 2 360 1 375 1 361 1 310 1 238 1 22 1 21 1 
198 1 156 1 83 1 366 1 271 1 243 1 159 1 348 1 8 1 89 1 288 1 9 1 118 1 353 1 327 1 184 1 95 1 120 1 121 1 254 2 360 1 192 1 375 1 310 1 238 1 153 1 22 1 21 1 
83 1 84 2 271 1 158 2 8 4 89 1 116 2 162 1 221 1 95 2 252 1 120 1 97 1 254 2 43 1 170 2 171 1 238 1 80 1 51 2 313 1 21 1 
156 1 83 1 84 2 271 1 243 1 158 2 55 1 159 1 348 1 8 4 89 1 205 1 116 2 162 1 9 1 353 1 221 1 327 1 184 1 186 1 95 2 252 1 120 1 166 1 97 1 121 1 254 2 43 1 147 1 360 1 170 2 310 1 238 1 171 1 313 1 51 2 21 1 
83 1 84 1 271 1 158 2 218 1 159 1 247 1 8 3 89 1 115 1 116 1 162 1 95 1 252 1 120 1 254 2 97 1 231 1 43 1 360 1 125 1 170 1 261 1 238 1 171 1 313 1 51 1 80 1 21 1 
25 3 108 1 271 3 341 1 202 1 158 20 114 3 175 1 8 41 89 3 62 1 162 5 290 1 163 2 93 1 355 1 221 4 356 1 140 1 224 1 95 21 252 5 228 4 297 1 253 1 120 3 68 1 254 6 97 4 43 4 123 1 283 1 169 1 75 4 238 3 171 4 336 1 240 1 212 1 51 8 313 4 172 1 155 1 
25 3 108 2 271 4 341 1 202 1 158 20 114 3 175 1 8 38 89 4 62 1 162 5 290 1 163 2 93 1 355 1 221 4 356 1 140 1 224 1 95 18 252 4 228 4 297 1 253 1 120 4 68 1 254 8 97 4 43 3 123 1 283 1 169 1 75 4 238 4 171 4 336 1 240 1 212 1 51 7 313 3 172 1 155 1 
25 4 108 1 271 2 341 1 202 1 158 27 114 2 175 1 8 52 89 2 62 1 162 8 290 1 163 1 93 1 355 1 221 7 140 1 95 25 252 8 228 4 297 2 253 1 120 2 68 1 69 2 254 4 97 7 43 7 123 1 283 1 169 1 75 4 238 2 171 7 336 1 240 1 212 1 51 14 313 7 172 1 155 1 
25 1 271 2 158 9 114 1 8 19 89 2 162 3 163 1 355 1 221 3 356 1 95 10 252 3 228 2 297 1 253 1 120 2 254 4 97 3 43 3 123 2 284 1 283 1 169 1 75 2 238 2 171 3 212 1 51 6 313 3 
25 2 108 2 271 3 341 1 202 1 158 14 114 2 8 26 89 3 62 1 162 3 163 2 355 1 221 2 140 1 95 12 252 2 228 4 253 1 120 3 68 1 254 6 97 3 43 2 123 1 283 1 169 1 75 2 238 3 171 3 240 1 212 2 51 4 313 2 
149 1 299 1 173 1 210 1 64 1 119 1 168 1 235 1 87 1 227 1 
195 1 262 1 
149 1 173 1 246 1 64 1 294 1 119 1 168 1 154 1 87 1 
173 1 28 1 282 1 168 1 59 1 235 1 87 1 176 2 149 1 78 1 210 1 209 1 64 1 119 1 314 1 227 1 357 1 82 1 
173 1 28 1 282 1 168 1 59 1 235 1 87 1 176 2 149 1 78 1 210 1 209 1 64 1 119 1 314 1 227 1 357 1 82 1 
173 1 28 1 282 1 168 1 59 1 235 1 87 1 176 2 149 1 78 1 210 1 209 1 64 1 119 1 314 1 227 1 357 1 82 1 
302 1 264 1 321 1 
302 1 264 1 321 1 
90 1 193 1 
90 1 193 1 264 1 
103 1 30 1 
366 1 173 1 85 1 28 1 30 1 319 1 159 2 218 2 87 1 176 1 247 2 92 1 64 1 182 1 119 1 231 2 282 1 168 1 256 1 360 2 236 1 149 1 103 1 209 1 262 1 195 1 82 1 
302 1 321 1 
90 1 193 1 264 1 
156 2 83 1 271 1 243 1 158 1 204 1 159 2 348 1 219 2 8 2 89 1 9 1 278 1 325 1 184 1 327 2 95 1 141 1 120 1 142 1 254 2 121 2 231 2 360 2 124 1 375 1 361 1 238 1 80 1 364 1 21 1 
156 2 214 1 166 1 243 1 121 2 109 1 245 2 44 1 100 1 160 1 276 1 9 1 161 1 277 1 10 1 382 1 327 2 222 1 94 1 
156 1 214 1 121 1 243 1 245 2 44 1 100 1 160 1 179 1 276 1 161 1 277 1 9 1 10 1 382 1 327 1 94 1 
156 1 243 1 121 1 201 1 348 1 9 1 161 1 63 1 184 1 327 1 222 1 211 1 267 1 22 1 
156 1 214 1 121 1 109 1 243 1 245 2 44 1 100 1 160 1 276 1 9 1 161 1 277 1 10 1 382 1 327 1 222 1 94 1 
151 1 
32 1 180 1 242 1 206 1 330 1 58 1 314 1 
157 1 242 1 241 1 28 1 113 1 58 1 177 1 180 1 371 1 250 1 40 1 66 1 358 1 148 1 306 1 209 1 314 2 
156 3 242 9 241 4 243 3 244 2 3 1 112 2 58 8 348 3 349 1 9 4 162 2 353 3 354 2 250 12 252 2 66 3 166 1 14 1 206 1 300 2 121 3 126 6 127 1 306 6 307 2 209 5 171 2 312 6 313 2 314 8 22 1 131 2 133 1 28 5 317 3 32 1 177 5 180 2 368 1 369 2 184 10 371 4 327 3 370 2 40 4 97 2 144 2 46 2 332 2 148 4 101 2 102 1 48 2 
25 1 242 8 241 2 341 1 131 1 202 1 28 1 114 1 58 5 346 1 177 1 62 1 180 2 162 2 369 2 371 2 250 6 252 2 66 1 40 2 68 1 97 2 190 1 148 2 126 5 127 1 306 3 307 1 75 1 209 1 171 2 240 1 312 5 313 2 314 5 
198 1 241 1 242 2 131 1 28 1 58 2 159 1 175 1 218 1 247 1 115 1 162 2 11 1 369 2 371 1 252 1 40 1 42 1 231 1 304 1 360 1 148 1 285 1 79 1 209 1 336 1 266 1 172 1 
40 1 241 1 206 1 242 1 58 1 148 1 32 1 180 1 371 1 314 1 
252 2 242 5 97 2 131 1 332 1 58 5 126 5 306 5 162 2 171 2 369 2 312 5 313 2 314 5 250 10 
177 1 66 1 180 1 209 1 28 1 314 1 
156 4 26 1 241 2 242 2 243 1 28 3 58 2 348 1 177 4 9 1 63 1 368 2 184 1 371 2 327 4 225 1 187 1 40 1 66 2 14 1 121 4 145 1 148 2 127 2 307 2 209 3 267 1 315 1 22 2 
156 1 83 1 366 1 271 1 243 1 110 1 55 1 159 3 218 2 348 1 8 1 247 2 89 1 205 1 115 2 9 1 353 1 327 1 184 1 186 1 95 1 120 1 254 2 121 1 231 2 42 1 360 3 375 1 310 1 238 1 22 1 21 1 
40 1 241 1 242 1 58 2 148 1 126 2 127 1 306 2 307 1 180 2 93 1 371 1 312 2 314 4 250 4 
149 1 323 1 64 1 
149 1 323 1 64 1 
149 1 103 1 210 1 167 1 64 1 
149 1 323 1 64 1 
38 1 149 1 64 1 
38 1 149 1 64 1 
38 1 149 1 64 1 
149 1 64 1 
119 1 87 1 
25 1 271 1 202 1 158 4 114 1 175 1 8 8 89 1 162 1 290 1 93 1 355 1 221 2 95 4 252 1 120 1 254 2 75 1 238 1 336 1 51 2 155 1 172 1 
25 1 271 2 202 1 158 6 114 1 175 1 8 11 89 2 138 1 162 2 290 1 93 1 355 1 221 2 95 5 252 1 297 1 120 2 254 4 97 1 43 1 75 2 238 2 171 1 336 1 51 3 172 1 155 1 
25 1 271 3 108 1 341 1 202 1 158 9 114 1 175 1 8 19 89 3 138 1 62 1 162 3 290 1 93 1 355 1 221 3 95 10 252 3 120 3 68 1 254 6 97 2 43 1 75 1 238 3 171 2 336 1 240 1 313 2 51 4 172 1 155 1 
25 1 108 1 271 3 341 1 202 1 158 10 114 1 175 1 8 17 89 3 138 1 62 1 162 3 290 1 93 1 355 1 221 3 95 7 252 2 120 3 68 1 254 6 97 2 43 2 75 1 238 3 171 2 336 1 240 1 313 1 51 5 172 1 155 1 
25 1 271 1 202 1 158 4 114 1 175 1 8 8 89 1 162 1 290 1 93 1 355 1 221 2 95 4 252 1 120 1 254 2 75 1 238 1 336 1 51 2 155 1 172 1 
25 1 271 1 341 1 202 1 158 6 114 1 8 12 89 1 62 1 162 2 355 1 221 1 95 6 252 2 120 1 68 1 254 2 97 2 43 1 75 1 238 1 171 2 240 1 313 2 51 2 
25 1 271 4 108 2 341 1 202 1 158 10 114 1 175 1 8 18 89 4 138 1 62 1 162 3 290 1 93 1 355 1 221 3 95 8 252 2 120 4 68 1 254 8 97 2 43 2 75 1 238 4 171 2 336 1 240 1 313 1 51 5 172 1 155 1 
25 1 271 4 108 2 341 1 202 1 158 9 114 1 8 16 89 4 62 1 162 3 355 1 221 3 356 1 95 7 252 2 120 4 68 1 254 8 97 3 43 3 75 1 238 4 171 3 240 1 313 2 51 6 
252 1 43 3 158 3 175 3 8 7 162 1 290 1 336 1 221 3 51 6 95 4 155 2 172 3 
25 1 271 4 108 2 341 1 202 1 158 10 114 1 175 1 8 18 89 4 62 1 162 3 290 1 93 1 355 1 221 3 356 1 95 8 252 2 120 4 68 1 254 8 97 2 43 1 75 1 238 4 171 2 336 1 240 1 313 1 51 4 172 1 155 1 
252 1 120 2 271 2 108 1 254 4 158 4 43 1 175 1 8 8 89 2 162 1 290 1 93 1 238 2 336 1 221 2 51 3 95 4 155 1 172 1 
252 1 330 1 158 3 175 1 8 6 162 1 290 1 93 1 336 1 221 2 51 2 95 3 155 1 172 1 
252 1 120 1 271 1 254 2 97 1 158 2 43 1 8 4 89 1 138 1 162 1 238 1 171 1 221 1 313 1 51 2 95 2 
252 1 297 1 25 1 97 1 158 3 43 1 114 1 8 7 75 2 162 1 171 1 221 1 313 1 51 2 95 4 
25 2 108 2 271 2 158 11 343 1 175 2 88 1 8 23 89 2 162 3 290 1 93 1 221 5 95 12 252 3 297 1 120 2 97 2 69 1 254 4 43 4 75 2 171 2 238 2 336 1 51 9 313 2 172 2 155 1 
75 1 8 1 95 1 
25 1 158 1 8 1 
252 1 120 1 271 1 254 2 97 1 158 3 43 1 332 1 8 6 89 1 138 1 162 1 238 1 171 1 221 2 51 3 313 1 95 3 
25 1 271 1 341 1 202 1 158 6 114 1 8 12 89 1 62 1 162 2 355 1 221 1 95 6 252 2 120 1 68 1 254 2 97 2 43 1 75 1 238 1 171 2 240 1 313 2 51 2 
252 1 158 3 43 1 175 1 8 6 162 1 336 1 221 1 51 2 95 3 172 1 
120 1 108 1 271 1 254 2 158 1 43 1 175 1 88 1 8 3 89 1 290 1 238 1 221 1 51 2 172 1 155 1 95 2 
252 2 120 1 271 1 254 2 43 2 158 5 304 1 175 2 8 10 89 1 162 2 238 1 355 1 336 1 221 3 51 5 172 2 95 5 
120 1 271 1 254 2 97 1 158 2 43 1 8 2 89 1 162 1 355 1 238 1 51 1 
252 1 120 1 271 1 254 2 97 1 158 2 43 1 8 4 89 1 162 1 355 1 238 1 171 1 221 1 313 1 51 2 95 2 
120 3 108 1 271 3 254 6 43 1 158 1 175 1 88 1 8 3 89 3 355 1 238 3 221 1 356 1 51 2 95 2 172 1 
25 3 108 2 271 5 367 1 158 16 216 1 114 1 175 3 88 1 8 34 89 5 138 1 162 5 290 1 93 1 181 1 355 1 221 7 356 1 95 18 252 5 297 1 120 5 254 10 97 3 43 5 75 4 238 5 171 3 336 2 51 12 313 3 172 3 155 1 
366 1 34 1 231 1 217 1 159 1 360 1 226 1 
366 1 231 1 232 1 318 1 217 1 207 1 159 1 360 1 305 1 34 1 324 1 226 1 
156 1 9 1 243 1 63 1 121 1 330 1 184 1 327 1 267 1 348 1 22 1 
156 1 366 1 121 1 243 1 231 1 55 1 218 1 159 2 348 1 360 2 247 1 9 1 353 1 310 1 184 1 327 1 81 1 22 1 
198 1 156 1 366 1 121 1 243 1 231 2 55 1 112 1 57 1 218 1 159 2 287 1 348 2 360 2 247 2 9 1 353 2 310 1 368 1 370 1 184 3 327 1 81 1 
156 1 198 2 366 1 243 1 57 1 112 1 159 2 218 1 348 2 287 1 247 2 288 1 9 1 353 2 368 1 327 1 184 3 370 1 121 1 231 2 360 2 192 1 310 1 81 1 
156 3 243 1 244 1 28 2 317 1 112 1 136 1 348 1 177 1 180 1 9 1 353 1 368 1 184 4 327 3 370 1 121 3 46 1 77 1 209 2 381 1 314 1 22 1 
156 3 300 1 121 3 243 1 244 1 28 2 317 1 46 1 112 1 136 1 348 1 177 1 180 1 9 1 353 1 209 2 368 1 370 1 327 3 184 4 314 1 22 1 
156 1 275 1 9 1 243 1 121 1 327 1 
156 7 166 1 142 1 121 6 243 2 215 1 122 1 189 1 60 1 219 1 348 2 349 1 275 1 276 1 376 1 9 3 353 1 265 1 327 7 184 3 22 2 
83 2 156 1 84 1 366 2 271 2 243 1 158 3 55 1 175 1 159 2 218 1 348 1 8 6 247 1 322 1 89 2 205 1 116 1 162 1 9 1 290 1 278 1 353 1 93 1 221 2 184 1 327 1 186 1 95 3 252 1 120 2 166 1 254 4 121 1 231 1 147 1 360 2 170 1 310 1 238 2 336 1 51 2 80 1 81 1 21 2 172 1 155 1 
156 1 242 1 241 2 244 1 28 3 317 1 58 1 32 1 177 2 180 1 354 1 327 1 371 2 184 2 40 2 66 1 206 1 14 1 300 1 121 1 144 1 46 1 256 1 148 2 101 1 209 3 314 1 22 1 
156 2 166 1 121 2 243 1 244 1 348 1 349 1 102 1 275 1 9 2 353 1 327 2 184 2 
156 4 200 1 166 1 121 4 243 1 136 1 348 1 9 1 63 1 327 4 184 1 267 1 22 1 
156 2 270 1 121 2 243 1 189 1 99 1 348 1 137 1 376 1 9 2 353 1 368 1 327 2 184 1 
160 1 156 1 9 1 243 1 121 1 245 1 327 1 100 1 94 1 22 1 
156 2 166 1 121 2 142 1 243 1 348 1 276 1 9 1 327 2 184 1 364 1 
156 5 200 1 166 1 121 4 142 1 243 2 122 1 348 2 9 2 63 1 368 1 327 5 184 3 265 1 267 1 22 1 
156 5 200 1 166 1 121 4 142 1 243 2 348 2 9 2 63 1 368 1 362 1 327 5 184 3 265 1 267 1 22 1 
156 1 198 1 366 1 243 1 159 2 218 1 348 1 247 1 9 1 288 1 353 1 327 1 184 1 121 1 231 1 360 2 192 1 310 1 81 1 22 1 
156 1 121 1 243 1 215 1 189 1 348 1 349 1 376 1 9 2 353 1 368 1 327 1 184 1 
23 1 231 1 325 1 29 1 204 1 159 1 360 1 124 1 279 1 
23 1 272 1 337 1 
23 1 366 1 29 1 15 1 279 1 
198 1 23 1 372 1 366 1 96 1 272 1 28 2 29 2 46 1 57 1 15 2 256 1 287 1 180 1 91 1 209 2 337 1 314 1 279 2 
24 1 269 1 377 1 330 1 
105 1 24 1 269 1 130 1 377 1 4 1 13 1 
152 1 379 1 13 1 
105 1 24 1 269 1 130 1 329 1 4 3 6 1 191 1 74 1 377 1 13 3 339 2 
296 1 71 1 105 1 24 1 269 1 130 1 377 1 4 2 13 2 
105 1 24 1 130 1 4 1 245 1 342 1 6 1 320 1 100 1 382 1 13 1 
105 1 24 1 269 1 130 1 4 1 6 1 13 1 
105 1 269 2 130 1 377 1 4 1 6 1 13 1 
105 2 24 1 269 1 130 2 4 2 6 1 7 1 351 1 248 1 13 2 
105 1 296 2 269 1 24 2 130 1 2 1 4 3 6 1 333 1 320 1 373 1 377 1 13 3 
105 1 296 1 24 1 269 1 130 1 245 2 4 2 44 1 6 1 100 1 377 1 239 1 382 1 94 1 13 2 
105 2 296 2 269 1 24 2 130 2 281 1 4 4 6 1 320 1 373 1 71 1 377 1 13 4 
105 1 24 1 269 1 130 1 377 1 4 1 6 1 13 1 
296 2 105 1 269 2 24 3 130 1 329 1 4 4 320 1 373 1 259 1 74 1 377 2 339 1 13 4 
105 1 296 1 24 1 269 1 130 1 4 2 6 1 289 1 104 1 377 1 338 1 13 2 
105 1 24 1 269 1 130 1 329 2 4 3 6 1 135 1 74 1 377 1 13 3 339 2 
129 1 24 2 128 2 208 1 
105 1 130 1 4 1 6 1 345 1 13 1 
296 1 105 1 24 1 269 1 130 1 377 1 4 2 6 1 333 1 13 2 
344 1 
105 1 24 1 269 1 130 1 377 1 4 1 6 1 13 1 
296 1 105 1 269 1 24 1 130 1 4 3 6 1 333 1 377 1 13 3 339 1 
259 1 24 1 320 1 373 1 
24 1 269 1 

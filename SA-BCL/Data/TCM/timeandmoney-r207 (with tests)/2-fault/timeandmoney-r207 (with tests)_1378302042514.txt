#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
360 1 145 1 1 1 250 2 343 1 184 1 97 1 8 2 305 4 351 1 31 9 233 3 327 1 128 2 189 6 356 2 191 1 85 1 192 5 328 1 19 1 20 1 218 2 106 1 62 2 224 1 267 2 43 9 
360 1 145 1 1 1 250 2 343 1 184 1 97 1 8 2 305 4 351 1 31 9 233 3 327 1 128 2 189 6 356 2 191 1 85 1 192 5 328 1 19 1 20 1 218 2 106 1 62 2 224 1 267 2 43 9 
360 1 145 1 1 1 250 2 343 1 184 1 97 1 8 2 305 5 351 1 31 10 233 4 327 1 128 2 189 7 356 2 191 1 85 1 192 6 328 1 19 1 20 1 218 2 106 1 62 2 224 1 267 2 43 10 
360 1 145 1 1 1 250 2 343 1 184 1 97 1 8 2 305 3 351 1 31 7 233 2 327 1 128 2 189 4 356 2 191 1 85 1 192 4 328 1 19 1 218 1 106 1 62 2 224 1 267 2 43 7 
233 1 31 4 145 1 327 1 189 3 128 1 250 1 356 1 192 3 328 1 20 1 218 2 184 1 62 1 305 2 267 1 43 4 351 1 
31 2 360 1 145 1 1 1 110 1 327 1 250 1 318 1 356 1 192 1 184 1 74 1 8 1 62 1 267 1 43 2 
233 1 31 3 145 1 184 1 327 1 189 1 8 1 250 2 305 1 224 1 267 2 43 3 192 2 
145 1 250 2 184 1 97 1 8 1 305 4 351 1 233 3 306 1 31 9 327 1 189 7 128 1 356 1 192 5 328 1 20 1 218 2 106 1 62 1 244 1 224 1 267 2 43 9 
145 1 250 2 184 1 97 1 8 1 305 4 351 1 233 3 306 1 31 9 327 1 189 7 128 1 356 1 192 5 328 1 20 1 218 2 106 1 62 1 244 1 224 1 267 2 43 9 
50 1 142 1 181 1 
16 2 326 1 142 1 
261 2 154 2 138 2 349 2 185 1 124 1 176 2 42 2 
65 1 272 1 361 1 3 1 176 3 177 1 70 1 116 2 275 2 342 1 48 2 154 2 347 2 349 3 185 1 124 1 99 1 126 1 127 1 79 1 32 1 308 1 239 1 56 1 290 1 86 2 241 1 261 2 312 1 138 2 242 1 89 1 296 1 358 1 380 1 333 1 42 2 
261 1 154 1 138 1 349 1 124 1 176 1 378 1 42 1 104 1 269 1 
159 1 200 1 176 1 69 1 115 1 104 1 152 1 346 1 50 1 349 1 263 1 12 1 42 1 142 1 
159 2 200 1 176 1 69 1 115 1 104 1 346 1 261 1 154 1 50 1 138 1 349 1 12 2 42 1 142 1 
159 1 153 1 304 1 12 1 268 1 
101 1 159 2 153 1 61 1 50 1 12 2 142 1 268 1 
159 1 12 1 268 1 
159 1 94 1 176 1 104 1 153 1 261 1 154 1 138 1 349 1 12 1 124 1 378 1 42 1 269 1 
142 1 
101 1 159 2 153 1 50 1 12 2 259 1 142 1 268 1 
101 1 159 5 161 1 82 1 114 2 150 2 288 1 4 1 46 1 27 1 240 2 260 1 153 2 50 1 186 1 12 5 142 1 268 2 92 1 
185 1 181 1 
176 2 237 1 134 1 261 1 154 1 138 1 349 2 185 2 42 2 
217 1 219 1 298 1 
65 1 32 1 176 1 177 1 116 1 239 1 275 1 290 1 241 1 347 1 349 1 185 1 89 1 358 1 126 1 232 1 
65 1 32 1 35 1 177 1 176 2 116 1 239 1 290 1 275 1 241 1 261 1 154 1 347 1 349 2 89 1 358 1 140 1 42 1 298 1 126 1 
261 3 154 3 138 1 349 3 185 1 35 1 176 3 42 3 
261 1 154 1 349 1 176 1 42 1 104 1 269 1 
261 1 154 1 138 1 349 1 176 1 237 1 42 1 104 1 134 1 
65 1 272 1 301 1 361 1 200 1 177 1 69 1 176 4 115 1 70 1 116 1 275 1 48 1 346 1 154 3 347 1 349 4 185 1 12 1 124 1 99 1 126 1 127 1 32 1 308 1 159 1 35 1 237 1 239 1 104 1 56 1 290 1 86 2 241 1 261 3 312 1 138 2 89 1 358 1 140 1 296 1 333 1 42 3 173 1 
261 1 154 1 349 2 263 1 185 1 35 1 176 2 230 1 42 2 
55 1 159 1 35 2 200 1 237 1 115 1 176 3 69 1 104 1 346 1 261 3 154 3 138 1 349 3 12 1 140 1 42 3 142 1 173 1 
35 1 237 1 176 2 261 2 154 2 138 1 219 1 349 2 42 2 298 1 
65 1 32 1 176 1 177 1 116 1 239 1 275 1 290 1 241 1 347 1 349 1 185 1 89 1 358 1 126 1 
32 1 176 1 177 1 116 1 239 1 275 1 290 1 202 1 241 1 347 1 349 1 185 1 89 1 358 1 299 1 
272 1 198 1 361 1 70 1 342 2 226 1 48 4 303 1 254 1 99 2 127 1 353 1 158 1 103 1 56 1 39 1 86 2 217 2 219 2 243 1 265 1 333 1 246 1 298 2 
261 1 40 1 154 1 349 1 200 1 176 1 42 1 104 1 
144 1 35 2 176 5 237 1 261 4 154 4 138 1 205 1 349 5 263 1 185 1 140 1 230 1 42 5 
40 1 261 2 154 2 349 2 176 2 42 2 104 1 269 1 
108 1 211 1 
108 1 211 1 
143 1 77 1 
143 1 77 1 
143 1 77 1 
66 1 108 1 211 1 
66 1 108 1 211 1 
108 1 64 1 211 1 
143 1 368 1 108 2 90 1 77 1 211 2 
66 1 108 1 211 1 
317 1 108 1 211 1 
317 1 108 1 211 1 
317 1 108 1 211 1 
159 2 111 1 249 1 102 2 36 1 175 1 190 2 37 1 274 1 204 2 12 2 75 3 108 2 90 1 142 1 314 1 172 2 13 2 211 2 
176 2 319 1 274 1 321 1 154 2 349 2 185 1 12 1 75 1 211 1 13 1 159 1 102 1 190 1 57 1 38 1 329 1 261 2 222 1 108 1 42 2 64 1 172 1 22 1 
128 1 62 1 356 1 
318 1 62 1 356 1 
146 1 128 2 318 1 117 1 356 3 30 1 
58 1 146 1 128 1 318 1 356 2 30 1 
146 2 128 1 318 1 356 2 30 1 
196 1 316 2 198 1 150 1 114 1 4 3 226 1 153 4 49 1 50 1 254 1 186 1 12 5 125 2 350 1 353 1 101 1 16 3 159 5 81 1 326 1 188 1 236 1 84 2 38 1 57 1 330 1 240 1 260 2 222 1 268 1 142 2 
316 6 198 3 114 2 150 2 4 8 95 1 26 1 226 3 47 1 27 1 277 1 153 7 49 2 50 1 304 5 254 3 12 9 186 1 350 3 353 3 101 1 16 9 159 9 326 3 188 1 236 2 354 1 84 6 166 1 57 4 240 2 260 6 266 5 268 6 142 5 
196 1 316 2 198 1 150 1 114 1 4 3 226 1 27 1 153 2 49 1 50 1 254 1 12 3 125 1 350 1 353 1 159 3 16 4 81 1 326 2 236 1 84 2 57 1 240 1 260 2 142 3 
196 1 316 4 198 2 150 1 114 1 4 5 26 1 226 2 27 1 153 3 49 1 50 1 254 2 12 4 125 2 350 2 353 2 16 7 159 4 81 1 326 3 236 1 354 1 84 4 166 1 57 2 240 1 260 4 142 4 
223 1 239 1 181 1 
239 1 168 1 
335 1 
241 1 239 1 
371 1 241 1 223 2 239 3 290 1 300 1 
241 1 239 1 290 1 
239 1 5 1 
286 1 234 2 198 1 287 1 342 4 170 1 48 7 303 3 221 1 243 2 155 1 122 1 254 1 171 1 52 1 99 3 23 1 
286 1 234 2 198 1 287 1 342 4 170 1 48 7 303 3 221 1 243 2 155 1 122 1 254 1 171 1 52 1 99 3 23 1 
286 1 234 2 198 1 287 1 170 1 342 4 48 7 303 3 221 1 243 2 155 1 122 1 254 1 171 1 52 1 99 3 23 1 156 1 
361 1 147 1 198 4 70 1 342 16 226 3 7 1 48 31 303 10 120 1 155 1 122 1 9 1 10 1 254 4 350 3 52 2 99 15 127 1 353 3 286 1 234 3 287 2 310 4 170 1 86 2 291 3 136 1 137 1 221 5 243 5 333 1 171 2 23 2 
198 1 361 2 25 1 70 2 342 5 203 1 48 9 303 4 120 1 155 1 254 1 52 1 99 4 127 2 234 2 286 1 287 1 170 1 86 4 243 3 221 1 333 2 171 1 23 1 
145 1 250 1 318 1 151 1 177 1 116 1 117 1 275 1 364 1 365 1 347 1 184 1 8 1 229 1 11 1 31 2 372 1 327 1 189 1 128 1 130 1 356 2 192 1 139 1 62 1 358 1 267 1 43 2 381 1 195 1 
145 1 250 1 318 1 151 1 177 1 117 1 116 1 275 1 364 1 365 1 347 1 184 1 8 1 229 1 11 1 31 3 282 1 128 1 189 2 130 1 214 1 356 2 192 1 139 1 295 1 62 1 358 1 267 1 43 3 195 1 
145 1 318 1 151 1 177 1 116 1 117 1 275 1 347 1 184 1 8 1 229 1 11 1 31 2 282 1 189 2 128 1 130 1 214 1 356 2 192 1 139 1 358 1 62 1 43 2 195 1 
31 1 187 1 374 1 24 1 250 1 130 2 177 1 151 2 116 1 239 1 275 1 241 1 347 1 8 2 295 1 89 1 229 2 358 1 379 1 267 1 43 1 93 1 270 1 
250 1 318 1 151 1 177 1 116 1 117 1 275 1 364 1 365 1 347 1 8 1 229 1 11 1 31 1 282 1 327 1 128 1 130 1 356 2 139 1 62 1 358 1 267 1 43 1 381 1 195 1 
307 1 
0 1 150 1 200 1 4 2 152 1 253 4 346 1 49 1 347 2 50 1 349 1 12 5 101 3 16 2 159 5 309 2 164 1 104 1 105 2 260 2 263 1 313 2 358 1 21 2 268 6 114 1 177 1 176 1 69 1 115 1 116 2 275 2 276 1 186 1 231 2 370 1 326 2 131 1 239 1 240 1 135 2 375 1 376 1 241 1 377 1 87 2 89 2 245 1 379 1 194 1 297 1 42 1 142 2 93 1 334 1 
200 1 69 1 176 1 115 1 152 1 253 2 276 1 346 1 349 1 12 3 101 1 159 3 259 1 104 1 376 1 377 1 263 1 313 1 194 1 42 1 297 1 268 2 
200 1 69 1 176 1 115 1 152 1 253 3 276 1 346 1 50 1 349 1 12 3 101 1 159 3 309 1 259 1 104 1 376 1 377 1 263 1 194 1 42 1 297 1 268 1 142 1 
200 1 69 1 176 1 115 1 152 1 253 3 276 1 346 1 50 1 349 1 12 3 101 1 159 3 309 1 259 1 104 1 105 1 376 1 377 1 263 1 313 1 194 1 42 1 297 1 268 2 142 1 
150 1 200 1 4 1 253 6 152 1 346 1 50 5 349 1 12 5 101 3 159 5 309 4 259 1 104 1 105 4 260 1 263 1 313 4 21 2 268 7 109 1 114 1 115 1 69 1 176 1 71 1 276 1 121 1 183 1 186 1 231 2 326 2 133 1 240 1 376 1 135 2 377 1 87 2 245 1 194 1 297 1 42 1 142 5 334 1 
150 1 114 1 200 1 176 1 69 1 115 1 4 1 152 1 253 4 276 1 346 1 50 1 349 1 186 1 12 4 231 2 101 2 16 2 159 4 326 2 309 2 164 1 104 1 105 2 240 1 135 2 376 1 260 1 377 1 87 2 263 1 313 2 245 1 21 2 194 1 297 1 42 1 142 2 268 4 334 1 
109 1 150 1 114 1 200 1 69 1 176 1 115 1 4 1 71 1 152 1 253 4 276 1 346 1 121 1 50 1 349 1 12 4 186 1 231 2 101 2 159 4 326 2 309 2 104 1 105 2 240 1 135 2 376 1 260 1 377 1 87 2 263 1 313 2 245 1 21 2 194 1 42 1 297 1 142 1 268 4 334 1 
109 1 150 1 114 1 200 1 69 1 176 1 115 1 4 1 71 1 152 1 253 4 276 1 346 1 121 1 50 1 349 1 12 4 186 1 231 2 101 2 159 4 326 2 309 2 104 1 105 2 240 1 135 2 376 1 260 1 377 1 87 2 263 1 313 2 245 1 21 2 194 1 42 1 297 1 142 1 268 4 334 1 
337 1 150 1 114 1 200 1 69 1 176 1 115 1 4 1 152 1 253 4 341 1 276 1 346 1 121 1 50 1 349 1 12 4 186 1 231 2 352 2 101 2 16 2 159 4 309 2 18 1 104 1 105 2 240 1 135 2 376 1 260 1 377 1 263 1 313 2 294 2 245 1 194 1 42 1 297 1 142 1 268 4 
109 1 150 1 114 1 200 1 69 1 176 1 115 1 4 1 71 1 152 1 253 5 276 1 346 1 121 1 50 1 349 1 186 1 12 4 231 2 101 2 159 4 326 2 309 3 104 1 133 1 105 3 240 1 135 2 376 1 260 1 377 1 87 2 263 1 313 3 245 1 21 2 194 1 42 1 297 1 142 1 268 5 334 1 
109 1 150 1 114 1 200 1 69 1 176 1 115 1 4 1 71 1 152 1 253 5 276 1 346 1 121 1 50 1 349 1 186 1 12 4 231 2 101 2 159 4 326 2 309 3 104 1 133 1 105 3 240 1 135 2 376 1 260 1 377 1 87 2 263 1 313 3 245 1 21 2 194 1 42 1 297 1 142 1 268 5 334 1 
150 1 114 1 200 1 176 1 69 1 115 1 4 1 152 1 253 4 276 1 346 1 50 1 349 1 186 1 12 4 231 2 352 2 101 2 16 2 159 4 309 2 18 1 164 1 104 1 105 2 240 1 135 2 376 1 260 1 377 1 263 1 313 2 294 2 245 1 194 1 297 1 42 1 142 1 268 4 
272 1 361 1 198 1 70 1 181 1 342 3 48 6 303 2 155 1 254 1 185 2 99 3 127 1 286 1 234 1 287 1 56 1 170 1 86 2 217 1 219 1 243 2 333 1 246 1 171 1 298 1 
272 2 147 1 361 2 198 2 252 1 70 2 342 8 226 2 48 14 303 2 348 1 9 1 185 1 254 1 350 2 99 6 127 2 353 1 15 1 308 1 310 3 165 1 56 1 86 4 59 1 217 11 291 3 221 1 243 1 219 4 380 1 333 2 298 11 
65 1 272 1 361 1 177 1 176 2 116 1 70 1 275 1 342 1 48 2 322 1 347 1 154 1 348 1 98 1 349 2 185 1 126 1 99 1 232 1 127 1 32 1 308 1 129 1 35 1 239 1 290 1 56 1 86 2 241 1 261 1 219 1 89 1 358 1 140 1 333 1 380 1 42 1 
338 1 198 2 148 1 342 7 344 1 48 14 303 3 347 1 154 1 348 1 155 1 349 3 254 2 350 1 99 7 353 1 308 1 162 1 56 3 170 1 261 1 217 4 312 2 219 4 358 2 171 1 65 2 272 3 361 3 67 2 176 3 177 2 116 1 70 3 275 1 226 1 185 2 126 2 127 3 324 2 32 2 234 1 286 1 287 1 35 1 239 2 290 2 86 6 241 2 243 3 89 1 140 1 380 1 333 3 42 1 298 4 
3 2 342 1 48 2 347 6 154 1 349 1 99 1 157 1 255 1 212 1 308 1 56 2 261 1 358 4 272 2 361 2 177 3 176 1 70 2 116 7 275 7 278 1 367 1 279 1 127 2 369 1 282 1 283 1 372 1 35 1 83 1 239 4 290 1 86 4 241 3 41 1 89 2 379 1 380 1 333 2 246 1 42 1 93 1 
272 1 361 1 198 1 176 1 70 1 226 1 342 1 48 3 303 1 154 1 348 1 349 1 254 1 350 1 99 2 127 1 353 1 258 1 237 1 56 1 86 2 217 1 261 1 138 1 243 1 219 1 333 1 42 1 298 1 
272 1 361 1 198 1 70 1 56 1 226 1 342 2 86 2 48 2 303 1 217 1 221 1 219 1 265 1 246 1 333 1 298 1 127 1 
353 1 272 1 361 1 70 1 56 1 86 2 39 1 48 2 303 1 217 1 243 1 219 1 254 1 246 1 333 1 298 1 99 2 127 1 
272 1 198 1 361 1 70 1 342 2 226 1 48 4 303 2 254 1 350 1 99 2 127 1 353 1 56 1 86 2 217 2 219 2 221 1 243 1 333 1 246 1 298 2 
272 1 361 1 198 1 70 1 56 1 226 1 342 2 86 2 48 2 303 1 217 1 221 1 219 1 41 1 265 1 333 1 298 1 127 1 
353 1 272 1 361 1 70 1 56 1 86 2 39 1 48 2 303 1 217 1 243 1 219 1 41 1 254 1 333 1 298 1 99 2 127 1 
272 1 198 1 361 1 70 1 342 2 226 1 48 4 303 2 254 1 350 1 99 2 127 1 353 1 56 1 86 2 217 2 219 2 221 1 243 1 41 1 333 1 298 2 
272 1 198 1 361 1 70 1 342 2 226 1 48 4 303 2 254 1 350 1 99 2 127 1 353 1 56 1 86 2 217 2 219 2 221 1 243 1 333 1 298 2 
65 1 272 1 361 1 177 1 176 1 116 1 70 1 275 1 342 1 48 2 347 1 349 1 185 1 126 1 99 1 127 1 32 1 308 1 239 1 290 1 56 1 86 2 241 1 312 1 89 1 358 1 380 1 333 1 
272 1 361 1 177 1 176 1 116 1 70 1 275 1 342 1 48 2 202 1 347 1 349 1 185 1 99 1 127 1 32 1 308 1 215 1 239 1 290 1 56 1 86 2 241 1 89 1 358 1 380 1 333 1 299 1 
272 1 198 1 361 1 70 1 342 2 226 1 48 4 303 2 348 1 254 1 350 1 99 2 127 1 353 1 56 1 86 2 217 2 219 2 221 1 243 1 333 1 298 2 
65 1 272 1 198 1 361 1 67 1 177 1 176 1 116 1 70 1 275 1 342 2 226 1 48 4 303 2 347 1 349 1 254 1 350 1 99 2 126 1 127 1 353 1 32 1 372 1 239 1 290 1 56 1 86 2 217 2 241 1 312 1 243 1 221 1 219 2 358 1 333 1 298 2 
272 1 361 1 198 1 176 1 70 1 119 1 226 1 342 2 48 3 303 1 154 1 348 1 349 1 254 1 350 1 99 1 127 1 353 1 237 1 56 1 86 2 261 1 217 1 138 1 221 1 219 1 333 1 42 1 298 1 
147 1 361 2 198 3 70 2 225 1 342 9 226 3 203 1 48 19 345 1 303 6 9 1 254 3 350 3 99 10 127 2 54 1 353 3 284 1 256 1 310 2 167 1 86 4 291 1 220 2 243 3 221 3 293 2 333 2 315 1 
361 3 147 2 198 3 70 3 225 1 342 14 226 3 203 1 48 26 120 2 303 4 345 2 51 1 254 2 350 3 99 12 127 3 54 1 353 2 284 2 160 1 235 1 310 2 86 6 60 1 291 2 221 2 243 2 220 4 293 1 107 1 332 1 333 3 315 1 
198 5 147 3 342 20 48 41 203 1 303 8 345 1 155 1 9 1 51 1 254 5 350 4 99 21 210 1 353 4 54 1 160 1 310 4 167 1 170 1 60 1 221 4 220 4 107 1 171 1 315 1 361 3 70 3 225 1 226 4 120 1 127 3 284 2 286 1 234 1 235 1 287 1 86 6 291 3 243 4 293 1 333 3 332 1 
147 3 361 4 198 5 70 4 225 1 342 20 226 4 203 1 48 38 120 2 345 1 303 7 155 1 51 1 9 1 254 4 350 4 210 1 99 18 127 4 54 1 353 3 284 2 160 1 234 1 286 1 235 1 287 1 310 4 167 1 170 1 86 8 60 1 291 3 220 4 243 4 221 3 293 1 107 1 332 1 333 4 171 1 315 1 
147 2 361 2 198 8 70 2 225 1 342 27 226 7 203 1 48 52 120 1 345 1 303 14 155 1 51 1 9 2 254 8 350 7 99 25 127 2 54 1 353 7 284 1 160 1 234 1 286 1 235 1 287 1 310 4 170 1 86 4 60 1 59 2 291 4 220 4 243 7 221 7 293 1 107 1 332 1 333 2 171 1 315 1 
249 1 331 1 102 1 175 1 190 1 108 1 90 1 172 1 211 1 13 1 
321 1 64 1 
325 1 102 1 178 1 45 1 190 1 108 1 172 1 211 1 13 1 
159 1 111 1 249 1 102 1 175 1 190 1 37 1 274 1 204 1 12 1 75 2 108 1 90 1 142 1 314 1 172 1 13 1 211 1 
159 1 111 1 249 1 102 1 175 1 190 1 37 1 274 1 204 1 12 1 75 2 108 1 90 1 142 1 314 1 172 1 13 1 211 1 
159 1 111 1 249 1 102 1 175 1 190 1 37 1 274 1 204 1 12 1 75 2 108 1 90 1 142 1 314 1 172 1 13 1 211 1 
66 1 368 1 340 1 
66 1 368 1 340 1 
317 1 88 1 
317 1 88 1 368 1 
329 1 319 1 
111 1 176 2 319 1 201 1 321 1 204 1 153 1 154 2 349 2 185 1 12 1 75 1 211 1 13 1 159 1 102 1 190 1 57 1 38 1 329 1 261 2 222 1 108 1 64 1 42 2 172 1 22 1 
66 1 340 1 
317 1 88 1 368 1 
272 1 361 1 177 1 68 1 176 2 3 2 116 2 70 1 275 2 342 1 48 2 278 1 347 2 348 1 349 2 99 1 127 1 255 1 14 1 308 1 163 1 289 1 239 1 56 1 86 2 241 1 358 1 333 1 380 1 42 2 141 1 
282 1 372 1 128 1 318 1 44 1 177 1 151 1 238 1 117 1 356 2 116 2 179 1 275 2 365 1 347 2 11 1 62 1 358 1 195 1 
282 1 128 1 318 1 151 1 238 1 177 1 117 1 356 2 116 1 275 1 365 1 347 1 11 1 62 1 358 1 91 1 195 1 
44 1 177 1 151 1 116 1 239 1 275 1 6 1 241 1 347 1 89 1 358 1 379 1 270 1 93 1 
282 1 128 1 318 1 44 1 151 1 238 1 177 1 117 1 356 2 116 1 179 1 275 1 365 1 347 1 11 1 62 1 358 1 195 1 
76 1 
260 1 50 1 161 1 82 1 4 1 142 1 181 1 
101 1 159 1 16 1 326 1 114 1 150 1 4 1 240 1 260 1 87 1 50 1 12 1 186 1 21 1 268 1 142 2 334 1 
198 2 150 4 251 2 4 9 5 2 49 2 347 3 50 2 12 5 254 2 350 2 101 3 353 2 159 5 16 12 161 1 162 2 216 1 168 3 260 8 262 1 358 4 63 1 223 2 268 5 316 6 114 4 362 2 273 2 177 3 115 2 116 3 275 3 226 2 72 1 228 2 366 2 123 2 186 4 29 1 370 1 371 1 372 1 80 2 326 6 82 1 239 10 84 6 290 3 240 4 241 3 292 2 89 1 142 8 
316 5 147 1 198 2 150 2 114 2 4 8 226 2 49 1 366 1 50 2 51 1 12 1 207 1 123 2 186 2 254 2 350 2 370 1 101 1 353 2 159 1 16 6 160 1 326 3 235 1 17 1 84 5 310 1 240 2 60 1 291 1 260 5 107 1 268 1 142 5 
198 2 199 1 150 1 114 1 176 1 94 1 71 1 4 2 366 1 154 1 349 1 123 2 186 1 12 1 254 1 124 1 159 1 286 1 287 1 104 1 240 1 260 2 261 1 138 1 378 1 171 1 42 1 269 1 
161 1 82 1 114 1 150 1 4 1 240 1 260 1 50 1 186 1 142 1 
353 2 16 10 316 5 326 5 198 2 162 1 4 5 84 5 226 2 260 5 366 1 123 2 254 2 350 2 142 5 
101 1 159 1 50 1 12 1 142 1 268 1 
0 1 150 2 114 2 177 1 116 4 4 2 363 1 275 4 72 2 27 1 347 4 49 2 186 1 12 3 370 2 101 2 159 3 239 1 240 2 375 1 241 1 260 2 262 1 89 2 358 1 379 1 268 4 271 1 93 1 
65 1 272 1 361 1 176 3 177 1 116 1 70 1 275 1 48 1 347 1 154 2 349 3 185 1 124 1 99 1 126 1 127 1 32 1 308 1 239 1 290 1 56 1 86 2 261 2 241 1 312 1 138 2 89 1 296 1 358 1 333 1 42 2 
370 1 16 4 234 1 326 2 316 2 114 1 150 1 4 1 84 2 240 1 260 2 49 1 50 2 186 1 142 4 
73 1 190 1 172 1 
73 1 190 1 172 1 
249 1 208 1 319 1 190 1 172 1 
73 1 190 1 172 1 
2 1 190 1 172 1 
2 1 190 1 172 1 
2 1 190 1 172 1 
190 1 172 1 
108 1 211 1 
234 1 286 1 198 1 361 2 287 1 70 2 342 4 170 1 86 4 48 8 303 3 120 1 221 1 243 2 155 1 254 1 333 2 171 1 99 4 127 2 
234 1 286 1 198 1 287 1 181 1 170 1 342 3 48 6 303 2 155 1 243 2 254 1 171 1 99 3 
353 1 361 1 198 1 213 1 70 1 226 1 342 2 86 2 48 4 303 2 243 1 221 1 254 1 350 1 333 1 99 2 127 1 
353 1 147 1 198 1 310 2 342 3 226 1 48 7 303 2 291 1 243 1 221 1 9 1 254 1 350 1 99 4 
198 3 361 2 70 2 226 2 342 11 48 23 303 9 120 2 155 1 9 1 206 1 254 3 350 2 99 12 127 2 353 2 234 1 286 1 287 2 310 2 165 1 170 1 86 4 291 2 59 1 221 4 243 5 333 2 171 2 
48 1 99 1 310 1 
48 1 291 1 342 1 
353 1 361 1 198 1 213 1 162 1 70 1 226 1 342 3 86 2 48 6 303 3 221 1 243 2 254 1 350 1 333 1 99 3 127 1 
147 1 361 1 198 2 70 1 342 6 226 2 48 12 203 1 303 2 51 1 254 2 350 2 99 6 127 1 353 2 160 1 235 1 310 1 86 2 291 1 60 1 221 1 243 1 107 1 333 1 
286 1 198 1 287 1 342 3 48 6 303 2 243 1 221 1 254 1 171 1 99 3 
361 1 287 1 70 1 342 1 170 1 86 2 48 3 303 2 120 1 221 1 243 1 155 1 206 1 333 1 171 1 99 2 127 1 
286 1 361 1 198 2 199 1 287 2 70 1 342 5 86 2 203 1 48 10 303 5 243 3 221 2 254 2 333 1 171 2 99 5 127 1 
361 1 198 1 70 1 226 1 342 2 86 2 203 1 48 2 303 1 221 1 333 1 127 1 
353 1 361 1 198 1 70 1 226 1 342 2 86 2 203 1 48 4 303 2 243 1 221 1 254 1 350 1 333 1 99 2 127 1 
361 3 287 1 70 3 167 1 342 1 86 6 48 3 203 1 120 1 303 2 243 1 221 1 206 1 333 3 171 1 99 2 127 3 
147 1 361 5 198 5 70 5 7 1 342 16 226 3 203 1 48 34 120 2 303 12 155 1 206 1 9 1 254 5 350 3 99 18 127 5 353 3 234 1 286 2 213 1 287 3 310 4 167 1 170 1 86 10 137 1 136 1 291 3 221 5 243 7 333 5 171 3 
198 1 147 1 361 1 70 1 342 4 48 8 203 1 303 2 155 1 254 1 99 4 127 1 160 1 234 1 286 1 287 1 310 1 170 1 86 2 291 1 243 2 333 1 171 1 
147 1 361 2 198 2 70 2 342 6 226 1 48 11 203 1 303 3 155 1 9 1 254 1 350 1 99 5 127 2 160 1 234 1 286 1 213 1 287 1 310 2 170 1 86 4 291 1 243 2 221 1 333 2 171 1 
147 1 361 3 198 3 70 3 342 9 226 2 48 19 203 1 303 4 120 1 155 1 51 1 254 3 350 2 99 10 127 3 353 2 160 1 234 1 286 1 235 1 213 1 287 1 310 1 170 1 86 6 291 1 60 1 221 1 243 3 107 1 333 3 171 1 
147 1 361 3 198 3 70 3 342 10 226 2 48 17 203 1 120 1 303 5 155 1 51 1 254 2 350 2 99 7 127 3 353 1 160 1 234 1 286 1 235 1 213 1 287 1 310 1 170 1 86 6 291 1 60 1 221 2 243 3 107 1 333 3 171 1 
198 1 147 1 361 1 70 1 342 4 48 8 203 1 303 2 155 1 254 1 99 4 127 1 160 1 234 1 286 1 287 1 310 1 170 1 86 2 291 1 243 2 333 1 171 1 
147 1 361 1 198 2 70 1 342 6 226 2 48 12 203 1 303 2 51 1 254 2 350 2 99 6 127 1 353 2 160 1 235 1 310 1 86 2 291 1 60 1 221 1 243 1 107 1 333 1 
147 1 361 4 198 3 70 4 342 10 226 2 48 18 203 1 303 5 120 2 155 1 51 1 254 2 350 2 99 8 127 4 353 1 160 1 234 1 286 1 235 1 213 1 287 1 310 1 170 1 86 8 60 1 291 1 221 2 243 3 107 1 333 4 171 1 
147 1 361 4 198 3 70 4 342 9 226 3 48 16 203 1 303 6 120 2 51 1 254 2 350 3 99 7 127 4 353 2 160 1 235 1 310 1 167 1 86 8 60 1 291 1 221 3 243 3 107 1 333 4 
286 1 198 1 287 3 170 2 342 3 48 7 303 6 155 1 243 3 221 3 254 1 171 3 99 4 
147 1 361 4 198 3 70 4 342 10 226 2 48 18 203 1 303 4 120 2 155 1 51 1 254 2 350 2 99 8 127 4 353 1 160 1 234 1 286 1 235 1 287 1 310 1 167 1 170 1 86 8 60 1 291 1 221 1 243 3 107 1 333 4 171 1 
96 1 349 1 263 1 185 1 176 1 230 1 42 1 
33 1 176 1 132 1 302 1 96 1 349 1 263 1 185 1 28 1 230 1 42 1 100 1 
241 1 347 1 89 1 358 1 177 1 379 1 116 1 239 1 93 1 181 1 275 1 
65 1 32 1 35 1 176 2 177 1 116 1 239 1 290 1 275 1 241 1 261 1 154 1 347 1 349 2 185 1 89 1 358 1 42 1 
65 1 200 1 177 1 176 2 116 1 275 1 5 1 72 1 346 1 347 1 154 1 349 2 185 1 32 1 80 1 35 1 239 3 104 1 290 2 261 2 241 2 358 1 42 2 
200 1 177 1 176 2 116 2 275 2 5 1 72 1 346 1 347 2 154 1 349 2 185 1 32 1 80 1 35 1 239 3 104 1 290 2 169 1 261 2 241 2 358 1 42 2 299 1 
177 1 115 1 116 3 275 3 5 1 72 1 227 1 347 3 50 1 12 2 159 2 80 1 355 1 239 4 168 1 290 1 169 1 241 1 89 1 358 1 223 1 268 1 142 1 
80 1 159 2 273 1 115 1 177 1 116 3 239 4 5 1 290 1 275 3 168 1 169 1 72 1 241 1 347 3 50 1 89 1 12 2 358 1 223 1 142 1 268 1 
347 1 323 1 358 1 177 1 116 1 275 1 
248 1 3 1 177 2 116 6 275 6 278 1 347 5 367 1 279 1 371 1 283 1 282 1 372 1 212 1 83 1 239 3 290 1 241 2 89 2 358 3 
198 1 342 3 48 6 303 2 347 1 154 1 348 1 349 2 155 1 254 1 99 3 163 1 56 2 170 1 261 1 217 1 312 1 219 1 358 1 171 1 65 1 272 2 361 2 67 1 176 2 177 1 116 1 70 2 275 1 185 2 126 1 324 1 127 2 372 1 32 1 286 1 234 1 35 1 287 1 239 1 290 1 86 4 241 1 243 2 333 2 42 1 298 1 
150 2 114 2 251 1 362 1 273 1 115 1 4 1 116 1 275 1 153 1 347 1 50 1 186 2 12 3 101 1 159 3 161 1 82 1 239 2 168 1 240 2 260 1 292 1 262 1 89 1 223 1 142 1 268 2 
371 1 372 1 177 1 116 2 216 1 239 2 275 2 290 1 241 1 347 2 323 1 358 2 223 1 
372 1 177 1 116 4 239 1 275 4 169 1 241 1 347 4 89 1 358 1 379 1 280 1 93 1 
283 1 113 1 177 1 116 2 239 1 275 2 290 1 72 1 241 1 347 2 358 2 367 1 157 1 369 1 
347 1 318 1 89 1 62 1 358 1 177 1 356 1 116 1 275 1 195 1 
282 1 372 1 68 1 177 1 116 2 239 1 275 2 278 1 241 1 347 2 358 1 
372 1 212 1 177 2 116 5 83 1 239 3 275 5 72 1 278 1 241 2 347 4 89 1 358 2 379 1 280 1 93 1 
372 1 257 1 177 2 116 5 83 1 239 3 275 5 72 1 278 1 241 2 347 4 89 1 358 2 379 1 280 1 93 1 
32 1 35 1 176 2 177 1 116 1 239 1 290 1 275 1 241 1 261 1 154 1 347 1 349 2 185 1 89 1 358 1 42 1 299 1 
371 1 283 1 248 1 177 1 116 1 239 1 275 1 290 1 72 1 241 1 347 1 358 2 367 1 
197 1 185 1 209 1 281 1 193 1 
159 2 373 1 197 1 200 1 115 1 69 1 118 1 104 1 320 1 193 2 346 1 153 1 50 1 185 1 12 2 142 1 209 2 173 1 281 2 
14 1 197 1 349 1 176 1 289 1 42 1 141 1 209 1 193 1 
373 1 197 1 320 1 
145 1 184 1 192 1 181 1 
31 1 145 1 184 1 250 1 267 1 43 1 192 1 
8 1 229 1 43 1 
247 1 31 3 145 1 1 2 327 1 250 1 192 1 182 1 184 1 267 1 43 3 174 1 
31 2 145 1 218 1 184 1 189 1 250 1 267 1 43 2 192 1 
31 1 327 1 128 1 250 1 62 1 305 1 356 1 267 1 351 1 43 1 192 1 
31 1 184 1 327 1 250 1 267 1 43 1 192 1 
31 1 145 1 184 2 327 1 250 1 267 1 43 1 
31 2 336 1 327 1 250 2 192 1 184 1 264 1 267 2 53 1 43 2 
31 3 233 1 145 1 327 1 189 2 250 1 192 2 184 1 97 1 106 1 305 1 267 1 43 3 
31 2 145 1 327 1 128 1 189 1 318 1 250 1 339 1 356 2 117 1 192 1 184 1 62 1 267 1 43 2 
31 4 233 1 145 1 327 1 189 2 250 2 192 2 20 1 218 1 184 1 305 1 267 2 43 4 
31 1 145 1 184 1 327 1 250 1 267 1 43 1 192 1 
31 4 233 1 145 2 1 1 285 1 189 2 250 1 192 3 182 1 184 2 305 1 267 1 43 4 174 1 
31 2 145 1 327 1 189 1 250 1 192 1 184 1 244 1 359 1 267 1 43 2 78 1 
31 3 145 1 1 2 327 1 250 1 192 1 357 1 182 2 184 1 267 1 43 3 174 1 
112 1 34 1 149 2 192 2 
31 1 327 1 250 1 267 1 180 1 43 1 
31 2 145 1 184 1 106 1 327 1 189 1 250 1 267 1 43 2 192 1 
311 1 
31 1 145 1 184 1 327 1 250 1 267 1 43 1 192 1 
31 3 145 1 184 1 1 1 106 1 327 1 189 1 250 1 267 1 43 3 192 1 
233 1 285 1 305 1 192 1 
184 1 192 1 

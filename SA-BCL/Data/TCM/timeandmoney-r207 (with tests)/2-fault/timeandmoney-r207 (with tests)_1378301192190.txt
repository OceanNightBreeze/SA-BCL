#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
244 1 126 1 360 3 196 9 340 2 271 2 294 2 202 1 361 1 344 1 326 1 82 9 83 1 258 1 20 2 135 1 305 1 260 2 261 1 262 1 164 2 214 4 165 1 27 2 264 1 357 1 94 5 266 6 
244 1 126 1 360 3 196 9 340 2 271 2 294 2 202 1 361 1 344 1 326 1 82 9 83 1 258 1 20 2 135 1 305 1 260 2 261 1 262 1 164 2 214 4 165 1 27 2 264 1 357 1 94 5 266 6 
244 1 126 1 360 4 196 10 340 2 271 2 294 2 202 1 361 1 344 1 326 1 82 10 83 1 258 1 20 2 135 1 305 1 260 2 261 1 262 1 164 2 214 5 165 1 27 2 264 1 357 1 94 6 266 7 
244 1 126 1 360 2 196 7 340 2 271 2 294 2 202 1 361 1 344 1 326 1 82 7 258 1 20 2 135 1 305 1 260 2 261 1 262 1 164 2 214 3 165 1 27 1 264 1 357 1 94 4 266 4 
244 1 82 4 83 1 258 1 20 1 126 1 360 1 260 1 196 4 214 2 340 1 271 1 294 1 27 2 202 1 94 3 326 1 266 3 
244 1 82 2 258 1 20 1 135 1 196 2 5 1 164 1 340 1 271 1 294 1 90 1 264 1 254 1 94 1 326 1 
244 1 82 3 258 1 360 1 196 3 164 1 214 1 340 2 294 2 357 1 94 2 326 1 266 1 
244 1 126 1 360 3 196 9 340 2 271 1 294 2 202 1 326 1 82 9 83 1 258 1 20 1 305 1 260 1 214 4 164 1 165 1 307 1 27 2 357 1 94 5 285 1 266 7 
244 1 126 1 360 3 196 9 340 2 271 1 294 2 202 1 326 1 82 9 83 1 258 1 20 1 305 1 260 1 214 4 164 1 165 1 307 1 27 2 357 1 94 5 285 1 266 7 
209 1 3 1 174 1 
209 1 2 1 362 2 
208 2 322 2 55 2 137 2 288 1 358 2 145 1 206 2 
72 1 4 2 288 1 74 1 317 1 151 1 339 1 8 1 180 1 54 1 10 1 322 3 55 2 13 1 255 2 230 2 81 1 16 1 365 1 206 3 17 2 207 2 208 3 137 3 22 2 372 1 163 1 140 1 167 1 42 1 65 1 354 1 121 1 242 2 283 1 374 1 68 1 96 2 358 2 335 1 145 1 
54 1 208 1 322 1 55 1 236 1 66 1 137 1 358 1 145 1 206 1 
314 1 209 1 189 1 136 1 137 1 163 1 179 1 225 1 153 1 54 1 322 1 174 1 374 1 206 1 
54 1 208 1 209 1 322 1 55 1 189 2 136 1 137 1 174 1 374 1 163 1 358 1 225 2 179 1 206 1 
170 1 189 1 273 1 198 1 225 1 
209 1 170 1 189 2 174 1 198 1 318 1 116 1 225 2 
170 1 189 1 225 1 
208 1 236 1 189 1 73 1 137 1 198 1 225 1 54 1 55 1 322 1 66 1 358 1 145 1 206 1 
209 1 
209 1 170 1 189 2 324 1 174 1 198 1 318 1 225 2 
300 2 209 1 133 2 237 1 189 5 245 1 113 1 349 1 246 1 198 2 318 1 225 5 168 1 170 2 93 1 174 1 345 1 123 2 218 1 
3 1 288 1 
208 1 137 2 288 2 352 1 322 2 55 1 56 1 358 1 206 2 
267 1 149 1 6 1 
17 2 208 1 207 2 72 1 137 1 22 1 4 1 288 1 372 1 163 1 54 1 322 1 354 1 121 1 13 1 283 1 242 2 374 1 96 1 375 1 365 1 206 1 
72 1 149 1 4 1 54 1 322 2 55 1 12 1 13 1 365 1 206 2 17 2 208 2 207 2 22 1 137 2 372 1 163 1 239 1 354 1 121 1 283 1 242 2 374 1 96 1 
19 1 314 1 208 4 137 5 288 1 239 2 55 4 322 5 12 1 272 1 229 1 56 1 358 1 206 5 
54 1 208 2 322 2 55 2 66 1 137 2 327 1 206 2 
239 1 208 3 322 3 55 3 137 3 288 1 358 1 206 3 
54 1 208 1 322 1 55 1 66 1 137 1 206 1 
54 1 352 1 208 1 322 1 55 1 137 1 56 1 358 1 206 1 
243 1 72 1 4 1 288 1 74 1 317 1 339 1 179 1 225 1 8 1 180 1 54 2 322 4 55 3 12 1 13 1 56 1 255 1 230 2 16 1 365 1 206 4 17 2 207 2 208 4 189 1 136 1 137 4 22 1 372 1 163 2 26 1 239 1 167 1 65 1 354 1 121 1 242 2 283 1 374 2 68 1 96 1 358 2 335 1 145 1 
239 1 314 1 208 1 322 2 55 1 272 1 137 2 288 1 206 2 
208 3 209 1 234 1 189 1 136 1 137 3 163 1 225 1 26 1 179 1 239 2 54 1 55 3 322 3 12 1 56 1 374 1 358 1 206 3 
239 1 267 1 208 2 322 2 55 2 149 1 137 2 56 1 358 1 206 2 
17 2 208 1 207 2 72 1 137 1 22 1 4 1 288 1 372 1 163 1 54 1 322 1 354 1 121 1 13 1 283 1 242 2 374 1 96 1 365 1 206 1 
233 1 17 2 208 1 207 2 72 1 137 1 22 1 4 1 288 1 163 1 54 1 34 1 322 1 354 1 121 1 13 1 242 2 374 1 96 1 365 1 206 1 
366 1 267 2 111 1 315 1 149 2 277 1 74 1 348 1 161 1 317 2 6 2 8 1 167 1 10 2 65 1 119 1 332 1 363 1 255 4 182 1 68 1 230 2 58 1 16 1 
54 1 208 1 322 1 55 1 137 1 374 1 327 1 206 1 
50 1 102 1 
50 1 102 1 
293 1 122 1 
293 1 122 1 
293 1 122 1 
50 1 138 1 102 1 
293 1 50 2 154 1 210 1 122 1 102 2 
50 1 95 1 102 1 
50 1 138 1 102 1 
50 1 138 1 102 1 
50 1 105 1 102 1 
50 1 105 1 102 1 
50 1 105 1 102 1 
50 1 208 2 269 1 189 1 211 1 137 2 287 1 288 1 63 1 289 1 102 1 224 1 225 1 35 1 322 2 55 2 172 1 92 1 355 1 95 1 124 1 48 1 144 1 206 2 
268 1 71 1 50 2 368 1 209 1 275 1 189 2 287 2 102 2 224 1 329 1 225 2 154 1 35 2 355 2 14 2 231 1 124 2 48 3 
20 1 271 1 260 1 
20 1 271 1 254 1 
271 3 254 1 260 2 157 1 183 1 194 1 
271 2 254 1 260 1 157 1 194 1 248 1 
271 2 254 1 260 1 157 2 194 1 
2 1 246 1 198 4 290 1 318 1 225 5 295 1 362 3 131 2 363 1 203 1 36 1 300 1 209 2 133 1 189 5 211 1 370 1 113 2 277 1 213 1 348 1 162 2 114 1 119 1 170 1 92 1 93 3 174 1 123 1 265 2 144 1 
2 3 30 1 198 7 246 1 290 2 291 1 225 9 318 1 295 3 362 9 131 6 363 3 345 1 273 5 367 5 300 2 209 5 133 2 189 9 113 6 277 3 213 2 348 3 162 6 114 1 166 1 353 1 119 3 170 6 28 1 92 4 93 8 174 1 69 1 123 2 
2 2 198 2 290 1 225 3 295 1 362 4 131 2 363 1 203 1 345 1 300 1 209 3 133 1 189 3 370 1 277 1 113 2 213 1 348 1 162 2 119 1 92 1 93 3 174 1 123 1 265 1 
2 3 290 1 198 3 291 1 225 4 295 2 362 7 131 4 363 2 203 1 345 1 300 1 209 4 133 1 189 4 370 1 277 2 113 4 213 1 348 2 162 4 353 1 119 2 28 1 92 2 93 5 174 1 123 1 265 2 
207 1 106 1 3 1 
37 1 207 1 
313 1 
17 1 207 1 242 1 
207 1 281 1 
17 1 207 1 
17 1 207 3 341 1 106 2 159 1 242 1 
147 1 221 1 112 1 371 2 278 1 348 1 317 3 161 3 10 4 11 1 332 2 356 1 311 1 363 1 255 7 274 1 299 1 
147 1 221 1 112 1 371 2 278 1 348 1 317 3 161 3 10 4 11 1 332 2 356 1 311 1 363 1 255 7 274 1 299 1 
147 1 221 1 112 1 371 2 278 1 348 1 317 3 161 3 9 1 10 4 11 1 332 2 356 1 311 1 363 1 255 7 274 1 299 1 
147 1 221 1 29 4 74 1 317 15 199 1 129 1 7 1 10 16 11 1 295 3 363 4 255 31 230 2 274 5 16 1 299 2 235 3 259 1 112 2 160 1 277 3 278 1 371 3 348 4 161 10 117 1 167 1 119 3 332 5 171 1 356 2 311 2 68 1 
147 1 1 1 221 1 160 1 112 1 371 2 74 2 348 1 161 4 317 4 167 2 10 5 11 1 155 1 332 3 356 1 311 1 363 1 255 9 68 2 230 4 274 1 16 2 299 1 
244 1 4 1 196 2 319 1 340 1 271 2 294 1 13 1 254 1 326 1 183 1 82 2 347 1 258 1 20 1 134 1 22 1 260 1 139 1 164 1 64 1 310 1 241 1 45 1 121 1 94 1 96 1 70 1 266 1 146 1 
4 1 196 3 32 1 319 1 340 1 271 2 294 1 13 1 254 1 326 1 183 1 82 3 347 1 258 1 20 1 188 1 134 1 22 1 260 1 139 1 164 1 64 1 216 1 310 1 241 1 121 1 94 1 96 1 146 1 266 2 
4 1 196 2 32 1 319 1 271 2 13 1 254 1 326 1 183 1 82 2 347 1 258 1 188 1 20 1 22 1 260 1 139 1 164 1 64 1 310 1 121 1 94 1 96 1 146 1 266 2 
4 1 196 1 178 1 319 2 340 1 104 1 294 1 13 1 17 1 82 1 207 1 84 1 22 1 139 2 164 2 350 1 216 1 309 1 354 1 121 1 96 1 193 1 146 2 
244 1 82 1 347 1 20 1 134 1 22 1 4 1 260 1 196 1 139 1 32 1 164 1 64 1 340 1 319 1 271 2 294 1 310 1 241 1 254 1 13 1 121 1 45 1 183 1 96 1 146 1 
256 1 
2 2 4 2 101 2 246 1 153 1 200 1 54 1 201 2 250 2 13 1 346 4 205 1 206 1 17 1 59 2 300 1 207 1 209 2 113 2 22 2 213 1 163 1 170 6 169 1 354 2 121 1 67 1 174 1 123 1 314 1 127 1 178 1 223 1 318 3 225 5 179 1 181 1 322 1 362 2 187 1 133 1 84 1 189 5 369 1 136 1 85 1 137 1 41 1 238 1 43 2 93 2 374 1 96 2 334 2 97 2 
314 1 179 1 225 3 318 1 153 1 200 1 54 1 201 1 322 1 324 1 346 2 206 1 189 3 136 1 137 1 85 1 41 1 163 1 169 1 170 2 67 1 374 1 
314 1 101 1 179 1 225 3 318 1 153 1 200 1 54 1 322 1 324 1 346 3 206 1 209 1 189 3 136 1 137 1 85 1 41 1 163 1 170 1 169 1 67 1 174 1 374 1 
314 1 101 1 318 1 179 1 225 3 153 1 200 1 54 1 201 1 322 1 324 1 346 3 206 1 209 1 189 3 136 1 137 1 85 1 41 1 163 1 169 1 170 2 67 1 174 1 374 1 334 1 
2 2 101 4 246 1 153 1 54 1 200 1 201 4 250 2 252 1 298 1 15 1 346 6 206 1 59 2 300 1 209 5 113 1 163 1 170 7 169 1 67 1 174 5 123 1 314 1 127 1 31 1 179 1 225 5 318 3 181 1 322 1 324 1 133 1 189 5 136 1 137 1 85 1 41 1 141 1 43 2 93 1 374 1 334 4 97 2 
2 2 101 2 246 1 153 1 54 1 200 1 250 2 201 2 346 4 206 1 59 2 300 1 209 2 113 1 163 1 169 1 170 4 67 1 174 1 123 1 314 1 127 1 223 1 179 1 225 4 318 2 181 1 322 1 362 2 133 1 189 4 136 1 137 1 85 1 41 1 43 2 93 1 374 1 97 2 334 2 
314 1 2 2 127 1 101 2 31 1 246 1 318 2 179 1 225 4 153 1 181 1 200 1 54 1 201 2 250 2 322 1 252 1 346 4 206 1 59 2 300 1 209 1 133 1 189 4 136 1 113 1 137 1 85 1 41 1 163 1 141 1 170 4 43 2 169 1 93 1 67 1 174 1 374 1 123 1 334 2 97 2 
314 1 2 2 127 1 101 2 31 1 246 1 318 2 179 1 225 4 153 1 181 1 200 1 54 1 201 2 250 2 322 1 252 1 346 4 206 1 59 2 300 1 209 1 133 1 189 4 136 1 113 1 137 1 85 1 41 1 163 1 141 1 170 4 43 2 169 1 93 1 67 1 174 1 374 1 123 1 334 2 97 2 
0 2 314 1 51 1 101 2 246 1 318 2 179 1 225 4 153 1 320 2 181 1 200 1 54 1 201 2 250 2 322 1 362 2 346 4 206 1 300 1 209 1 133 1 189 4 136 1 113 1 137 1 85 1 41 1 163 1 141 1 142 1 263 1 170 4 43 2 169 1 93 1 67 1 174 1 374 1 123 1 334 2 
314 1 2 2 127 1 101 3 31 1 246 1 318 2 179 1 225 4 153 1 181 1 200 1 54 1 250 2 201 3 322 1 252 1 298 1 346 5 206 1 59 2 300 1 209 1 133 1 189 4 136 1 113 1 137 1 85 1 41 1 163 1 141 1 43 2 169 1 170 5 93 1 67 1 174 1 374 1 123 1 97 2 334 3 
314 1 2 2 127 1 101 3 31 1 246 1 318 2 179 1 225 4 153 1 181 1 200 1 54 1 250 2 201 3 322 1 252 1 298 1 346 5 206 1 59 2 300 1 209 1 133 1 189 4 136 1 113 1 137 1 85 1 41 1 163 1 141 1 43 2 169 1 170 5 93 1 67 1 174 1 374 1 123 1 97 2 334 3 
0 2 101 2 246 1 153 1 54 1 200 1 250 2 201 2 346 4 206 1 300 1 209 1 113 1 163 1 169 1 170 4 67 1 174 1 123 1 314 1 223 1 179 1 225 4 318 2 320 2 181 1 322 1 362 2 133 1 189 4 136 1 137 1 85 1 41 1 142 1 43 2 93 1 374 1 334 2 
147 1 267 1 221 1 315 1 3 1 149 1 371 1 288 2 74 1 348 1 317 3 161 2 6 1 8 1 167 1 10 3 65 1 11 1 332 2 356 1 363 1 255 6 68 1 230 2 16 1 299 1 
267 4 29 3 149 11 177 1 288 1 74 2 317 6 6 11 7 1 8 2 10 8 295 2 363 1 255 14 230 4 81 1 274 1 16 2 235 3 301 1 61 1 277 2 348 2 161 2 117 1 167 2 118 1 280 1 65 1 119 1 332 1 68 2 335 1 
4 1 288 1 8 1 54 1 10 1 55 1 12 1 13 1 255 2 16 1 206 2 17 2 208 2 207 2 61 1 22 1 163 1 167 1 65 1 354 1 121 1 68 1 175 1 312 1 267 1 72 1 74 1 317 1 322 2 79 1 230 2 81 1 365 1 137 2 372 1 239 1 283 1 242 2 374 1 96 1 375 1 335 1 
147 1 149 7 4 3 288 2 339 2 6 7 292 1 8 3 54 2 10 10 11 1 295 2 55 1 12 1 13 2 156 2 255 20 16 3 299 1 206 3 17 4 208 3 207 4 61 1 22 3 348 3 161 8 163 2 167 3 308 2 119 2 65 3 354 1 121 2 356 1 68 3 267 7 221 1 125 2 72 2 74 3 32 1 317 10 76 1 322 3 363 3 230 6 81 1 274 4 365 2 137 3 277 2 371 1 279 2 372 2 190 1 239 1 332 4 283 2 242 4 374 2 96 3 335 1 
315 1 4 8 150 1 338 1 74 2 32 1 317 1 178 1 8 2 10 1 322 1 55 1 253 1 13 2 255 2 230 4 81 1 16 2 108 1 206 1 17 2 208 1 207 3 84 1 137 1 22 7 140 2 239 1 167 2 65 2 44 1 191 1 240 1 354 2 121 2 96 8 68 2 70 1 335 1 
267 1 149 1 74 1 317 2 6 1 8 1 10 1 295 1 55 1 322 1 56 1 363 1 255 3 230 2 16 1 206 1 208 1 61 1 137 1 277 1 348 1 161 1 167 1 65 1 119 1 332 1 47 1 68 1 358 1 
267 1 315 1 149 1 277 1 74 1 348 1 161 1 6 1 8 1 167 1 10 2 65 1 255 2 68 1 230 2 274 1 58 1 16 1 
267 1 111 1 315 1 149 1 74 1 161 1 317 2 6 1 8 1 167 1 65 1 119 1 332 1 363 1 255 2 68 1 230 2 16 1 
267 2 315 1 149 2 74 1 317 2 6 2 8 1 10 2 295 1 363 1 255 4 230 2 274 1 16 1 277 1 348 1 161 2 167 1 65 1 119 1 332 1 68 1 
267 1 149 1 277 1 150 1 74 1 348 1 161 1 6 1 8 1 167 1 10 2 65 1 255 2 68 1 230 2 274 1 58 1 16 1 
267 1 111 1 149 1 150 1 74 1 161 1 317 2 6 1 8 1 167 1 65 1 119 1 332 1 363 1 255 2 68 1 230 2 16 1 
267 2 149 2 150 1 74 1 317 2 6 2 8 1 10 2 295 1 363 1 255 4 230 2 274 1 16 1 277 1 348 1 161 2 167 1 65 1 119 1 332 1 68 1 
267 2 149 2 277 1 74 1 348 1 317 2 161 2 6 2 8 1 167 1 10 2 119 1 65 1 295 1 332 1 363 1 255 4 68 1 230 2 274 1 16 1 
72 1 4 1 288 1 74 1 317 1 339 1 8 1 54 1 10 1 322 1 13 1 255 2 230 2 81 1 16 1 365 1 206 1 17 2 207 2 208 1 22 1 137 1 372 1 163 1 167 1 65 1 354 1 121 1 242 2 283 1 374 1 96 1 68 1 335 1 
72 1 4 1 288 1 74 1 317 1 8 1 34 1 54 1 10 1 322 1 13 1 255 2 230 2 81 1 16 1 365 1 206 1 17 2 233 1 207 2 208 1 22 1 137 1 163 1 167 1 65 1 120 1 354 1 121 1 242 2 374 1 96 1 68 1 335 1 
267 2 149 2 74 1 317 2 6 2 8 1 10 2 295 1 363 1 255 4 230 2 274 1 16 1 61 1 277 1 348 1 161 2 167 1 65 1 119 1 332 1 68 1 
267 2 72 1 149 2 4 1 74 1 317 2 339 1 6 2 8 1 54 1 10 2 295 1 322 1 13 1 363 1 255 4 230 2 274 1 16 1 365 1 206 1 17 2 207 2 208 1 277 1 22 1 137 1 372 1 279 1 348 1 161 2 163 1 167 1 119 1 65 1 332 1 121 1 242 2 283 1 374 1 68 1 96 1 70 1 
267 1 149 1 74 1 317 1 6 1 8 1 10 2 295 1 55 1 322 1 363 1 56 1 255 3 230 2 274 1 16 1 206 1 208 1 61 1 137 1 277 1 348 1 161 1 330 1 167 1 119 1 65 1 68 1 358 1 
147 1 221 1 29 4 74 3 197 1 317 21 247 1 7 1 321 2 226 1 10 20 11 1 227 1 155 1 295 4 251 1 228 4 325 1 363 5 255 41 230 6 274 4 16 3 299 1 186 1 235 3 160 1 276 1 40 1 277 4 371 1 348 5 161 8 115 1 143 1 117 3 167 3 119 4 332 4 91 1 356 1 68 3 49 1 
147 1 221 1 29 4 74 4 197 1 317 18 247 1 7 1 321 2 226 1 10 20 11 1 227 1 155 1 295 4 251 1 228 4 325 1 363 4 255 38 230 8 274 3 16 4 299 1 186 1 235 3 160 2 276 1 40 1 277 4 371 1 348 5 161 7 115 1 143 1 117 3 167 4 119 3 332 4 91 1 356 1 68 4 49 1 
147 1 221 1 29 4 74 2 197 1 317 25 7 2 321 1 226 1 10 27 11 1 227 1 155 1 295 7 251 1 228 4 363 8 255 52 230 4 274 7 16 2 299 1 186 1 235 4 301 2 160 1 276 1 40 1 277 7 371 1 348 8 161 14 115 1 143 1 117 2 167 2 119 7 332 7 91 1 356 1 68 2 49 1 
29 2 74 2 197 2 317 10 7 1 321 1 226 1 10 9 227 1 155 1 295 3 228 2 325 1 363 3 255 19 230 4 274 3 16 2 235 1 277 3 348 3 161 6 115 1 117 1 351 1 167 2 119 3 332 3 91 1 68 2 
29 2 74 3 197 1 317 12 321 2 226 1 10 14 227 2 155 1 295 3 251 1 228 4 363 2 255 26 230 6 274 2 16 3 186 1 235 2 160 2 276 1 40 1 277 3 348 3 161 4 115 1 143 1 117 2 167 3 119 2 332 2 91 1 68 3 49 1 
4 2 338 1 74 1 317 1 8 1 33 1 10 1 322 2 296 1 343 1 13 1 78 1 255 2 230 2 81 1 16 1 206 2 17 1 207 1 61 1 137 2 22 2 62 1 140 2 167 1 65 1 191 1 121 1 96 2 68 1 335 1 
347 1 20 1 134 1 22 2 4 2 260 1 32 1 24 1 271 2 310 1 254 1 13 1 121 1 284 1 183 1 96 2 70 1 184 1 146 1 
110 1 347 1 20 1 134 1 22 1 4 1 260 1 32 1 271 2 310 1 254 1 121 1 13 1 284 1 183 1 96 1 146 1 
17 1 207 1 84 1 22 1 4 1 178 1 104 1 342 1 354 1 13 1 121 1 96 1 184 1 146 1 
347 1 20 1 134 1 22 1 4 1 260 1 32 1 24 1 271 2 310 1 254 1 13 1 121 1 284 1 183 1 96 1 184 1 146 1 
336 1 
209 1 237 1 3 1 113 1 93 1 174 1 349 1 
2 1 127 1 246 1 318 1 225 1 362 1 59 1 300 1 209 2 133 1 189 1 113 1 170 1 93 1 174 1 123 1 97 1 
2 6 286 1 4 3 337 2 246 4 53 2 152 1 341 1 249 2 106 2 295 2 13 4 205 1 17 3 207 10 300 4 209 8 60 2 303 2 22 3 113 8 213 2 23 1 348 2 349 1 162 6 170 5 119 2 354 1 121 3 174 2 123 4 70 1 125 2 222 2 225 5 318 3 362 12 130 1 131 6 363 2 365 2 37 3 38 1 133 4 237 1 189 5 136 2 328 2 277 2 281 2 93 9 242 3 96 3 
2 3 29 1 246 2 225 1 318 1 249 1 295 2 251 1 362 6 131 5 363 2 205 1 109 1 186 1 300 2 209 5 60 2 133 2 235 1 189 1 276 1 40 1 113 5 277 2 213 1 348 2 162 5 117 1 170 1 119 2 93 8 174 2 123 2 49 1 98 1 
221 1 73 1 31 1 246 1 225 1 249 1 54 1 55 1 322 1 363 1 206 1 299 1 300 1 208 1 60 2 133 1 236 1 189 1 137 1 113 2 348 2 306 1 66 1 356 1 93 2 123 1 358 1 145 1 
300 1 209 1 133 1 237 1 113 1 349 1 246 1 93 1 174 1 123 1 
125 1 209 5 60 2 2 5 277 2 113 5 348 2 162 5 249 1 295 2 119 2 362 10 131 5 93 5 363 2 
209 1 170 1 189 1 174 1 225 1 318 1 
286 2 4 4 52 1 246 1 178 1 152 1 318 2 225 3 13 1 345 1 364 1 205 2 17 1 207 1 300 2 187 1 133 2 84 1 189 3 22 4 113 2 213 2 238 1 170 4 354 2 121 1 93 2 123 2 96 4 
72 1 4 1 288 1 74 1 317 1 339 1 8 1 180 1 54 1 322 3 55 2 13 1 255 1 230 2 16 1 365 1 206 3 17 2 208 3 207 2 22 1 137 3 372 1 163 1 167 1 65 1 354 1 121 1 283 1 242 2 374 1 68 1 96 1 358 2 335 1 145 1 
300 1 209 4 133 1 2 2 113 2 371 1 213 1 162 2 246 1 362 4 131 2 93 1 174 2 123 1 205 1 
220 1 355 1 124 1 
275 1 172 1 355 1 124 1 215 1 
220 1 355 1 124 1 
220 1 355 1 124 1 
355 1 333 1 124 1 
355 1 333 1 124 1 
355 1 333 1 124 1 
355 1 124 1 
50 1 102 1 
147 1 221 1 29 1 74 1 317 4 10 4 155 1 11 1 363 1 255 8 230 2 16 1 299 1 235 1 40 1 371 1 348 1 161 2 117 1 167 1 332 2 356 1 68 1 
147 1 221 1 29 2 74 2 317 5 7 1 10 6 11 1 155 1 295 1 363 1 255 11 230 4 274 1 16 2 299 1 132 1 235 1 40 1 277 1 371 1 348 2 161 3 117 1 167 2 332 2 356 1 68 2 
147 1 221 1 29 1 74 3 317 10 10 9 11 1 155 1 295 2 251 1 363 3 255 19 230 6 274 1 16 3 299 1 132 1 186 1 235 1 276 1 160 1 40 1 277 2 371 1 348 3 161 4 117 1 167 3 119 2 332 3 356 1 68 3 49 1 
147 1 221 1 29 1 74 3 317 7 10 10 11 1 155 1 295 2 251 1 363 2 255 17 230 6 274 2 16 3 299 1 132 1 186 1 235 1 160 1 276 1 40 1 277 2 371 1 348 3 161 5 117 1 167 3 119 1 332 3 356 1 68 3 49 1 
147 1 221 1 29 1 74 1 317 4 10 4 155 1 11 1 363 1 255 8 230 2 16 1 299 1 235 1 40 1 371 1 348 1 161 2 117 1 167 1 332 2 356 1 68 1 
29 1 74 1 317 6 10 6 155 1 295 2 251 1 363 2 255 12 230 2 274 1 16 1 186 1 235 1 276 1 40 1 277 2 348 2 161 2 117 1 167 1 119 2 332 1 68 1 49 1 
147 1 221 1 29 1 74 4 317 8 10 10 11 1 155 1 295 2 251 1 363 2 255 18 230 8 274 2 16 4 299 1 132 1 186 1 235 1 276 1 160 2 40 1 277 2 371 1 348 3 161 5 117 1 167 4 119 1 332 3 356 1 68 4 49 1 
29 1 74 4 317 7 10 9 155 1 295 3 251 1 325 1 363 2 255 16 230 8 274 3 16 4 186 1 235 1 276 1 160 2 40 1 277 3 348 3 161 6 117 1 167 4 119 2 332 3 68 4 49 1 
147 2 221 1 348 1 317 4 161 6 10 3 11 1 332 3 356 3 363 1 255 7 274 3 299 3 
147 1 221 1 29 1 74 4 317 8 10 10 11 1 155 1 295 2 251 1 325 1 363 2 255 18 230 8 274 1 16 4 299 1 186 1 235 1 276 1 160 2 40 1 277 2 371 1 348 3 161 4 117 1 167 4 119 1 332 3 356 1 68 4 49 1 
147 1 221 1 160 1 371 1 74 2 348 1 317 4 161 3 167 2 10 4 11 1 332 2 356 1 363 1 255 8 68 2 230 4 274 1 16 2 299 1 
147 1 221 1 3 1 371 1 348 1 317 3 161 2 10 3 11 1 332 2 356 1 363 1 255 6 299 1 
277 1 74 1 348 1 317 2 161 2 167 1 10 2 119 1 295 1 332 1 363 1 255 4 68 1 230 2 274 1 16 1 132 1 
235 1 29 2 277 1 348 1 317 4 161 2 7 1 117 1 10 3 119 1 295 1 332 1 363 1 255 7 274 1 
147 1 221 1 29 2 74 2 317 12 7 1 10 11 11 1 295 2 363 3 255 23 230 4 274 4 16 2 299 2 235 2 301 1 160 2 277 2 371 1 348 3 161 9 167 2 118 1 119 2 332 5 217 1 356 2 68 2 
29 1 255 1 317 1 
10 1 235 1 255 1 
125 1 277 1 74 1 348 1 317 3 161 3 167 1 10 3 295 1 119 1 332 2 363 1 255 6 230 2 68 1 274 1 16 1 132 1 
29 1 74 1 317 6 10 6 155 1 295 2 251 1 363 2 255 12 230 2 274 1 16 1 186 1 235 1 276 1 40 1 277 2 348 2 161 2 117 1 167 1 119 2 332 1 68 1 49 1 
221 1 348 1 317 3 161 2 10 3 332 1 356 1 363 1 255 6 274 1 299 1 
147 1 160 1 74 1 161 2 317 2 167 1 10 1 11 1 332 1 217 1 356 1 255 3 68 1 230 2 274 1 16 1 299 1 
221 1 74 1 348 2 306 1 161 5 317 5 167 1 10 5 155 1 332 3 356 2 363 2 255 10 230 2 68 1 274 2 16 1 299 2 
277 1 74 1 348 1 161 1 167 1 10 2 155 1 255 2 68 1 230 2 274 1 16 1 
277 1 74 1 348 1 317 2 161 2 167 1 10 2 119 1 155 1 295 1 332 1 363 1 255 4 68 1 230 2 274 1 16 1 
160 1 74 3 317 2 161 2 167 3 10 1 155 1 332 1 325 1 217 1 356 1 255 3 68 3 230 6 274 1 16 3 299 1 
147 1 221 2 29 4 74 5 317 18 199 1 129 1 7 1 10 16 11 1 155 1 295 3 325 1 363 5 255 34 230 10 274 5 16 5 299 3 132 1 235 3 259 1 160 2 277 3 371 1 348 5 161 12 117 1 167 5 119 3 332 7 217 1 356 3 68 5 
158 1 314 1 322 1 137 1 272 1 288 1 206 1 
158 1 314 1 359 1 137 1 288 1 331 1 322 1 297 1 272 1 204 1 192 1 206 1 
17 1 207 1 84 1 3 1 354 1 13 1 121 1 4 1 22 1 178 1 96 1 
17 2 207 2 208 2 72 1 137 2 22 1 4 1 288 1 372 1 163 1 239 1 54 1 55 1 322 2 354 1 13 1 121 1 242 2 374 1 96 1 365 1 206 2 
72 1 286 1 4 1 288 1 128 1 54 1 322 1 55 1 13 1 206 2 17 1 208 1 207 1 22 1 137 2 372 1 239 1 121 1 242 1 96 1 
72 1 286 1 4 1 288 1 128 1 34 1 54 1 322 1 55 1 13 1 206 2 17 1 208 1 207 1 22 1 137 2 239 1 121 1 242 1 96 1 
17 1 37 1 207 4 209 1 176 1 189 2 286 1 136 1 22 3 4 3 225 2 106 1 77 1 170 1 354 1 281 1 13 1 121 1 174 1 242 1 96 3 232 1 365 1 
17 1 37 1 207 4 209 1 222 1 189 2 286 1 136 1 22 3 4 3 225 2 106 1 170 1 354 1 281 1 13 1 121 1 174 1 242 1 96 3 232 1 365 1 
253 1 13 1 121 1 4 1 22 1 96 1 
17 2 207 3 21 1 22 6 4 7 338 1 32 1 140 1 341 1 44 1 240 1 354 2 89 1 253 1 121 2 13 3 46 1 242 1 96 7 70 1 108 1 
147 1 149 1 4 1 288 2 339 1 6 1 8 2 54 1 10 3 11 1 55 1 13 1 156 1 255 6 16 2 206 2 299 1 17 2 208 2 207 2 61 1 22 1 348 1 161 2 163 1 167 2 65 2 121 1 356 1 68 2 70 1 267 1 221 1 72 1 74 2 317 3 322 2 78 1 363 1 230 4 365 1 137 2 371 1 372 1 279 1 239 1 332 2 283 1 242 2 374 1 96 1 
222 1 4 1 246 2 198 1 53 1 152 1 225 3 318 1 106 1 37 1 300 2 207 2 209 1 133 2 237 1 189 3 303 1 136 1 113 1 22 1 328 1 349 1 170 2 354 1 93 1 174 1 123 2 96 1 
17 1 207 2 22 2 4 2 23 1 341 1 106 1 253 1 121 1 13 2 242 1 96 2 70 1 
17 1 207 1 84 1 22 4 4 4 178 1 103 1 354 1 13 1 121 1 96 4 232 1 70 1 
17 1 207 1 21 1 286 1 304 1 22 2 4 2 292 1 121 1 13 2 46 1 242 1 96 2 219 1 
347 1 20 1 271 1 354 1 254 1 13 1 121 1 4 1 22 1 96 1 
17 1 207 1 22 2 4 2 338 1 32 1 296 1 121 1 13 1 96 2 70 1 
17 2 207 3 84 1 286 1 22 4 4 5 338 1 178 1 103 1 44 1 354 1 121 2 13 2 96 5 70 1 108 1 
17 2 207 3 84 1 286 1 22 4 4 5 338 1 178 1 103 1 354 1 121 2 13 2 96 5 70 1 80 1 108 1 
17 2 207 2 208 2 72 1 137 2 22 1 4 1 288 1 163 1 239 1 54 1 34 1 55 1 322 2 354 1 13 1 121 1 242 2 374 1 96 1 365 1 206 2 
17 1 207 1 21 1 286 1 22 1 4 1 341 1 89 1 121 1 13 2 46 1 242 1 96 1 
270 1 148 1 195 1 288 1 107 1 
99 1 209 1 189 2 195 2 148 2 136 1 288 1 198 1 163 1 225 2 25 1 26 1 179 1 270 1 373 1 54 1 174 1 374 1 107 2 
270 1 33 1 322 1 343 1 195 1 137 1 62 1 107 1 206 1 
99 1 270 1 25 1 
258 1 3 1 94 1 326 1 
340 1 82 1 258 1 294 1 94 1 196 1 326 1 
319 1 82 1 164 1 
244 1 82 3 258 1 39 1 135 2 196 3 86 1 340 1 294 1 282 1 94 1 326 1 
340 1 82 2 258 1 294 1 27 1 94 1 196 2 326 1 266 1 
244 1 82 1 20 1 260 1 196 1 214 1 340 1 271 1 294 1 202 1 94 1 
340 1 82 1 244 1 294 1 94 1 196 1 326 1 
340 1 82 1 244 1 258 1 294 1 196 1 326 2 
244 1 82 2 316 1 196 2 100 1 340 2 88 1 294 2 94 1 326 1 
244 1 82 3 258 1 305 1 360 1 196 3 214 1 165 1 340 1 294 1 94 2 326 1 266 2 
244 1 82 2 258 1 20 1 260 1 196 2 340 1 271 2 294 1 254 1 94 1 326 1 57 1 183 1 266 1 
244 1 82 4 83 1 258 1 360 1 196 4 214 1 340 2 294 2 27 1 94 2 326 1 266 2 
340 1 82 1 244 1 258 1 294 1 94 1 196 1 326 1 
82 4 258 2 39 1 135 1 360 1 86 1 196 4 214 1 340 1 294 1 173 1 94 3 326 2 266 2 
244 1 82 2 258 1 302 1 196 2 340 1 294 1 94 1 326 1 285 1 185 1 266 1 
244 1 82 3 258 1 39 2 135 2 86 1 196 3 87 1 340 1 294 1 94 1 326 1 
75 2 323 1 212 1 94 2 
340 1 82 1 244 1 294 1 196 1 257 1 
340 1 82 2 244 1 258 1 294 1 305 1 94 1 196 2 326 1 266 1 
18 1 
340 1 82 1 244 1 258 1 294 1 94 1 196 1 326 1 
340 1 82 3 244 1 258 1 294 1 135 1 305 1 94 1 196 3 326 1 266 1 
360 1 173 1 94 1 214 1 
94 1 326 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 331 (30,176,232) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
234 1 262 1 48 2 243 4 214 5 215 1 339 2 74 1 172 2 220 2 77 1 317 1 341 2 290 6 103 9 322 1 104 2 34 1 107 1 346 3 225 1 274 1 129 1 130 1 230 2 372 9 19 1 260 1 
234 1 262 1 48 2 243 4 214 5 215 1 339 2 74 1 172 2 220 2 77 1 317 1 341 2 290 6 103 9 104 2 322 1 34 1 107 1 346 3 225 1 274 1 129 1 130 1 230 2 372 9 19 1 260 1 
234 1 262 1 48 2 243 5 214 6 215 1 339 2 74 1 172 2 220 2 77 1 317 1 341 2 290 7 103 10 104 2 322 1 34 1 107 1 346 4 225 1 274 1 129 1 130 1 230 2 372 10 19 1 260 1 
234 1 48 2 243 3 214 4 215 1 339 2 74 1 172 2 220 2 77 1 317 1 341 2 290 4 103 7 104 2 322 1 34 1 107 1 346 2 225 1 274 1 129 1 130 1 230 1 372 7 19 1 260 1 
234 1 346 1 107 1 262 1 130 1 243 2 214 3 215 1 339 1 74 1 230 2 172 1 220 1 372 4 341 1 290 3 103 4 104 1 
234 1 107 1 140 1 23 1 48 1 130 1 214 1 339 1 172 1 220 1 372 2 77 1 341 1 103 2 373 1 34 1 
234 1 346 1 107 1 220 2 372 3 290 1 48 1 274 1 341 2 103 3 130 1 214 2 243 1 
234 1 107 1 346 3 225 1 262 1 129 1 274 1 48 1 130 1 214 5 243 4 215 1 339 1 230 2 74 1 3 1 172 1 220 2 372 9 6 1 341 2 290 7 103 9 104 1 
234 1 107 1 346 3 225 1 262 1 129 1 274 1 48 1 130 1 214 5 243 4 215 1 339 1 230 2 74 1 3 1 172 1 220 2 372 9 6 1 341 2 290 7 103 9 104 1 
330 1 329 1 324 1 
91 2 31 1 324 1 
218 1 202 2 200 2 350 1 63 2 308 2 164 2 315 2 
95 1 236 1 141 1 355 2 119 1 146 1 315 2 265 1 218 1 101 1 320 1 291 1 33 1 345 1 35 1 56 1 200 2 273 1 180 1 367 1 350 1 298 1 304 2 352 1 202 3 276 1 13 2 113 2 206 1 60 1 16 2 259 1 63 2 308 2 281 1 164 3 379 1 
202 1 134 1 200 1 160 1 350 1 63 1 308 1 106 1 164 1 315 1 
251 1 363 1 364 1 330 1 100 1 202 1 205 1 257 1 63 1 137 1 197 1 324 1 164 1 106 1 
200 1 251 1 364 1 330 1 315 1 202 1 205 1 257 1 137 2 63 1 308 1 197 2 324 1 164 1 106 1 
111 1 137 1 9 1 197 1 332 1 
111 1 168 1 330 1 137 2 9 1 344 1 197 2 324 1 
111 1 137 1 197 1 
200 1 350 1 9 1 315 1 202 1 134 1 160 1 137 1 280 1 63 1 308 1 197 1 106 1 164 1 
324 1 
111 1 316 1 330 1 137 2 9 1 344 1 197 2 324 1 
139 1 36 1 22 1 177 2 109 2 330 1 182 1 9 2 158 1 111 2 359 1 246 1 137 5 32 2 154 1 344 1 197 5 324 1 354 1 
218 1 329 1 
200 1 315 1 202 2 218 2 321 1 63 2 308 1 125 1 164 2 
263 1 76 1 94 1 
127 1 95 1 56 1 236 1 180 1 355 1 298 1 367 1 304 1 352 1 218 1 202 1 276 1 113 1 206 1 164 1 
95 1 56 1 200 1 236 1 180 1 167 1 367 1 298 1 355 1 170 1 304 1 352 1 276 1 202 2 76 1 206 1 113 1 63 1 308 1 164 2 
200 4 239 1 143 1 167 1 170 2 100 1 315 1 202 5 218 1 321 1 63 5 293 1 308 4 164 5 
202 2 134 1 200 2 37 1 63 2 308 2 106 1 164 2 
218 1 202 3 200 3 63 3 308 3 170 1 315 1 164 3 
202 1 134 1 200 1 63 1 308 1 106 1 164 1 
202 1 200 1 321 1 63 1 308 1 125 1 106 1 164 1 315 1 
95 1 236 1 141 1 167 1 355 1 119 1 170 1 146 1 315 2 265 1 218 1 101 1 321 1 221 1 33 1 197 1 106 1 35 1 55 1 56 1 200 3 251 1 273 1 180 1 364 1 367 1 298 1 350 1 304 1 352 1 276 1 202 4 13 1 206 1 205 1 113 1 60 1 257 1 16 2 259 1 63 3 137 1 308 3 164 4 
218 1 202 2 200 1 63 2 293 1 308 1 170 1 100 1 164 2 
251 1 200 3 167 1 364 1 170 2 315 1 202 3 205 1 305 1 257 1 321 1 221 1 137 1 63 3 308 3 197 1 324 1 106 1 164 3 
263 1 202 2 76 1 200 2 321 1 63 2 308 2 170 1 164 2 315 1 
95 1 56 1 236 1 180 1 355 1 298 1 367 1 304 1 352 1 218 1 202 1 276 1 113 1 206 1 164 1 
56 1 236 1 180 1 355 1 298 1 367 1 288 1 304 1 218 1 202 1 276 1 113 1 206 1 343 1 164 1 
119 2 192 1 146 1 265 1 263 2 76 2 101 1 51 1 267 1 345 2 268 1 348 1 273 1 87 1 368 1 371 1 13 4 279 1 60 1 16 2 333 1 259 1 377 1 94 2 
202 1 200 1 205 1 37 1 63 1 308 1 106 1 164 1 
232 1 157 1 
232 1 157 1 
30 1 331 1 
30 1 331 1 
30 1 331 1 
232 1 157 1 250 1 
232 1 157 1 250 1 
232 1 30 1 157 1 331 1 
176 1 232 1 157 1 
232 1 157 1 250 1 
45 1 232 1 157 1 
45 1 232 1 157 1 
45 1 232 1 157 1 
235 1 311 1 218 1 194 1 197 1 176 1 200 2 297 1 362 1 349 1 39 1 157 1 229 1 58 1 12 1 202 2 59 1 232 1 184 1 137 1 63 2 308 2 164 2 309 1 
21 1 235 2 347 1 297 2 49 1 50 1 157 2 357 1 229 2 194 2 12 1 78 1 232 2 62 1 137 2 197 2 324 1 224 2 309 3 
339 1 172 1 104 1 
339 1 172 1 23 1 
339 3 23 1 80 1 319 1 104 2 275 1 
339 2 23 1 319 1 104 1 266 1 275 1 
339 2 23 1 319 2 104 1 275 1 
330 1 98 1 9 3 338 1 111 1 148 1 135 1 161 1 137 4 197 4 344 1 324 1 
189 1 330 1 118 1 98 1 9 3 332 1 111 2 135 1 137 4 360 1 344 1 197 4 324 1 
22 1 338 1 148 1 102 2 51 1 124 2 31 2 32 1 154 3 267 1 197 3 324 3 269 1 177 1 348 1 109 1 330 1 182 2 9 2 353 1 135 1 279 1 184 1 161 1 91 4 137 3 
22 1 338 1 148 1 102 4 51 2 124 4 31 3 32 1 154 5 267 2 197 4 324 4 269 2 177 1 348 2 109 1 330 1 182 4 9 3 89 1 353 1 256 1 135 1 279 2 184 2 161 2 91 7 137 4 43 1 
56 1 240 1 329 1 
56 1 88 1 
258 1 
56 1 180 1 367 1 
56 1 169 1 
56 1 180 1 
44 1 56 3 204 1 240 2 180 1 367 1 
211 1 270 1 348 1 47 1 261 1 368 2 71 1 369 1 119 3 192 3 171 2 75 1 13 7 64 1 267 1 54 1 345 4 
211 1 270 1 348 1 47 1 261 1 368 2 71 1 369 1 119 3 192 3 171 2 75 1 13 7 64 1 267 1 54 1 345 4 
211 1 270 1 348 1 47 1 261 1 368 2 71 1 369 1 119 3 192 3 171 2 75 1 13 7 64 1 267 1 54 1 345 4 325 1 
211 1 47 5 261 1 69 3 71 2 24 1 119 15 314 1 171 3 192 10 146 1 75 1 265 1 101 1 81 1 51 3 222 1 83 4 267 4 54 2 345 16 199 1 269 3 270 1 348 4 273 1 181 1 369 2 368 5 133 1 13 31 279 3 16 2 64 2 
211 1 47 1 261 1 71 1 119 4 171 2 192 4 146 2 265 2 75 1 101 2 173 1 267 1 54 1 345 5 199 1 348 1 8 1 273 2 369 1 368 3 13 9 16 4 64 1 
234 1 237 1 142 1 23 1 48 1 355 1 214 1 339 2 172 1 220 1 340 1 80 1 290 1 341 1 103 2 104 1 249 1 105 1 107 1 130 1 298 1 40 1 302 1 304 1 113 1 372 2 206 1 17 1 207 1 186 1 
234 1 237 1 23 1 144 1 48 1 355 1 214 1 120 1 339 2 172 1 220 1 340 1 80 1 341 1 290 2 103 3 104 1 249 1 105 1 130 1 298 1 302 1 304 1 113 1 372 3 206 1 17 1 207 1 335 1 186 1 
234 1 23 1 48 1 355 1 214 1 120 1 339 2 172 1 80 1 290 2 103 2 104 1 249 1 105 1 130 1 298 1 302 1 304 1 113 1 372 2 206 1 17 1 207 1 335 1 186 1 
236 1 144 1 48 2 355 1 286 1 289 1 220 1 28 1 341 1 103 1 249 2 361 1 56 1 38 1 180 1 298 1 302 2 304 1 206 1 113 1 372 1 207 2 209 1 
237 1 23 1 48 1 355 1 339 2 172 1 220 1 340 1 80 1 341 1 103 1 104 1 249 1 105 1 107 1 298 1 40 1 302 1 304 1 113 1 372 1 206 1 17 1 207 1 335 1 186 1 
92 1 
139 1 188 1 236 2 242 1 191 2 100 1 289 1 4 1 247 1 154 2 344 3 197 5 53 1 106 1 296 1 56 1 251 1 109 1 298 1 304 2 253 1 111 6 255 1 353 1 202 1 113 2 206 1 205 1 257 1 208 2 63 1 210 4 164 1 115 2 66 1 355 2 72 2 26 2 217 2 31 2 32 1 324 2 177 1 363 1 180 1 38 1 364 1 330 1 182 2 136 2 91 2 376 1 137 5 187 1 138 1 
100 1 217 1 316 1 4 1 247 1 197 3 344 1 53 1 106 1 296 1 251 1 363 1 364 1 253 1 111 2 202 1 205 1 257 1 63 1 137 3 210 2 164 1 
191 1 100 1 316 1 4 1 247 1 197 3 344 1 53 1 106 1 324 1 296 1 251 1 363 1 364 1 330 1 253 1 111 1 202 1 205 1 257 1 63 1 137 3 210 3 164 1 
191 1 100 1 217 1 316 1 4 1 247 1 344 1 197 3 53 1 106 1 324 1 296 1 251 1 363 1 364 1 330 1 253 1 111 2 202 1 205 1 257 1 208 1 63 1 137 3 210 3 164 1 
139 1 242 1 191 4 100 1 244 1 4 1 247 1 154 1 197 5 344 3 53 1 106 1 296 1 251 1 109 1 10 1 253 1 111 7 202 1 255 1 205 1 257 1 208 4 63 1 210 6 164 1 115 2 72 2 26 2 217 4 316 1 79 1 32 1 31 2 324 5 363 1 177 1 364 1 330 5 182 1 370 1 136 2 41 1 137 5 
139 1 242 1 191 2 100 1 4 1 247 1 154 1 197 4 344 2 53 1 106 1 296 1 251 1 109 1 253 1 111 4 202 1 255 1 205 1 257 1 208 2 63 1 210 4 164 1 115 2 72 2 26 2 217 2 32 1 31 2 324 2 177 1 363 1 364 1 330 1 182 1 136 2 91 2 137 4 376 1 
139 1 72 2 242 1 191 2 100 1 26 2 217 2 4 1 79 1 247 1 31 2 32 1 154 1 344 2 197 4 53 1 324 1 106 1 296 1 251 1 363 1 177 1 364 1 109 1 330 1 182 1 370 1 10 1 253 1 111 4 255 1 202 1 136 2 205 1 257 1 208 2 63 1 137 4 210 4 164 1 115 2 
139 1 72 2 242 1 191 2 100 1 26 2 217 2 4 1 79 1 247 1 31 2 32 1 154 1 344 2 197 4 53 1 324 1 106 1 296 1 251 1 363 1 177 1 364 1 109 1 330 1 182 1 370 1 10 1 253 1 111 4 255 1 202 1 136 2 205 1 257 1 208 2 63 1 137 4 210 4 164 1 115 2 
283 1 139 1 0 2 72 2 191 2 25 1 100 1 26 2 217 2 4 1 247 1 32 1 154 1 344 2 197 4 53 1 324 1 106 1 296 1 251 1 363 1 177 1 128 2 364 1 109 1 330 1 182 1 370 1 253 1 111 4 255 1 202 1 205 1 257 1 231 1 208 2 91 2 63 1 137 4 210 4 164 1 
139 1 72 2 242 1 191 3 100 1 26 2 217 3 244 1 4 1 79 1 247 1 31 2 32 1 154 1 344 2 197 4 53 1 324 1 106 1 296 1 251 1 177 1 363 1 109 1 364 1 330 1 182 1 370 1 10 1 253 1 111 5 255 1 202 1 136 2 205 1 257 1 208 3 63 1 137 4 210 5 164 1 115 2 
139 1 72 2 242 1 191 3 100 1 26 2 217 3 244 1 4 1 79 1 247 1 31 2 32 1 154 1 344 2 197 4 53 1 324 1 106 1 296 1 251 1 177 1 363 1 109 1 364 1 330 1 182 1 370 1 10 1 253 1 111 5 255 1 202 1 136 2 205 1 257 1 208 3 63 1 137 4 210 5 164 1 115 2 
139 1 0 2 191 2 100 1 4 1 247 1 154 1 197 4 344 2 53 1 106 1 296 1 251 1 109 1 253 1 111 4 202 1 255 1 205 1 257 1 208 2 63 1 210 4 164 1 72 2 25 1 26 2 217 2 32 1 324 1 177 1 363 1 364 1 128 2 330 1 182 1 91 2 137 4 376 1 
211 1 261 1 71 1 119 3 192 2 171 1 146 1 263 1 75 1 265 1 218 2 76 1 101 1 267 1 54 1 345 3 348 1 273 1 329 1 87 1 368 2 13 6 60 1 16 2 259 1 94 1 
47 1 69 3 212 1 119 6 192 2 146 2 265 2 263 4 218 1 219 1 76 11 101 2 320 1 342 1 81 1 51 1 52 1 33 1 83 3 267 1 345 8 269 2 348 2 273 2 365 1 181 1 368 1 13 14 279 2 60 2 16 4 259 1 94 11 
95 1 236 1 167 1 355 1 170 1 119 1 146 1 263 1 265 1 218 1 101 1 320 1 174 1 52 1 33 1 345 1 127 1 56 1 200 1 180 1 273 1 252 1 367 1 298 1 304 1 352 1 276 1 202 2 13 2 90 1 206 1 113 1 60 1 16 2 259 1 63 1 308 1 164 2 
95 2 236 1 47 4 192 8 146 3 101 3 51 2 52 1 54 1 345 10 200 1 56 2 348 3 155 1 108 2 298 2 300 1 304 3 352 2 202 3 13 20 113 3 206 2 60 3 16 6 259 3 63 1 308 1 164 3 211 1 261 1 167 1 355 3 71 1 119 10 170 1 171 1 75 1 265 3 263 7 218 2 76 7 320 1 267 3 33 1 35 2 126 1 326 2 269 2 85 2 273 3 180 2 86 2 367 2 368 4 276 2 279 2 335 1 94 7 
238 1 236 2 142 1 96 1 355 7 170 1 119 1 216 1 147 1 146 2 289 1 265 2 101 2 320 1 82 1 33 1 345 1 200 1 56 3 273 2 38 1 180 2 298 2 87 1 304 8 202 1 203 1 13 2 14 1 206 2 113 8 60 2 16 4 259 2 335 1 63 1 308 1 164 1 379 2 
119 2 192 1 315 1 146 1 263 1 265 1 76 1 101 1 321 1 51 1 52 1 267 1 345 1 269 1 200 1 348 1 273 1 368 1 254 1 202 1 13 3 279 1 60 1 16 2 259 1 63 1 308 1 94 1 164 1 
47 1 348 1 273 1 87 1 192 1 146 1 263 1 265 1 76 1 13 2 101 1 279 1 60 1 16 2 333 1 259 1 94 1 345 2 
273 1 87 1 368 1 119 2 192 1 146 1 263 1 265 1 76 1 13 2 101 1 60 1 16 2 259 1 51 1 377 1 267 1 94 1 
269 1 47 1 348 1 273 1 87 1 368 1 119 2 192 2 146 1 263 2 265 1 76 2 13 4 101 1 279 1 60 1 16 2 51 1 259 1 267 1 94 2 345 2 
47 1 348 1 273 1 192 1 146 1 263 1 265 1 76 1 13 2 101 1 279 1 60 1 16 2 333 1 259 1 82 1 94 1 345 2 
273 1 368 1 119 2 192 1 146 1 263 1 265 1 76 1 13 2 101 1 60 1 16 2 259 1 51 1 82 1 377 1 267 1 94 1 
269 1 47 1 348 1 273 1 368 1 119 2 192 2 146 1 263 2 265 1 76 2 13 4 101 1 279 1 60 1 16 2 51 1 259 1 82 1 267 1 94 2 345 2 
269 1 47 1 348 1 273 1 368 1 119 2 192 2 146 1 263 2 265 1 76 2 13 4 101 1 279 1 60 1 16 2 51 1 259 1 267 1 94 2 345 2 
95 1 236 1 355 1 119 1 146 1 265 1 218 1 101 1 320 1 33 1 345 1 35 1 56 1 180 1 273 1 367 1 298 1 304 1 352 1 276 1 202 1 13 2 206 1 113 1 60 1 16 2 259 1 164 1 
236 1 355 1 288 1 119 1 146 1 265 1 218 1 101 1 320 1 343 1 33 1 345 1 56 1 327 1 180 1 273 1 367 1 298 1 304 1 276 1 202 1 13 2 206 1 113 1 60 1 16 2 259 1 164 1 
269 1 47 1 348 1 273 1 368 1 119 2 192 2 146 1 263 2 265 1 76 2 13 4 101 1 279 1 60 1 16 2 51 1 259 1 52 1 267 1 94 2 345 2 
95 1 47 1 142 1 355 1 119 2 192 2 146 1 263 2 265 1 76 2 101 1 51 1 267 1 345 2 35 1 269 1 56 1 348 1 180 1 273 1 86 1 367 1 298 1 368 1 304 1 352 1 276 1 202 1 13 4 279 1 206 1 113 1 60 1 16 2 259 1 94 2 164 1 
47 1 336 1 119 1 192 1 315 1 146 1 265 1 263 1 76 1 101 1 321 1 51 1 52 1 267 1 345 2 269 1 200 1 348 1 273 1 202 1 13 3 279 1 60 1 16 2 259 1 63 1 308 1 94 1 164 1 
211 1 65 1 47 4 261 1 69 3 71 1 313 1 99 1 119 21 171 1 192 8 146 3 75 1 265 3 150 1 101 3 5 1 29 1 152 1 173 1 81 1 51 4 83 4 267 5 54 1 199 1 295 1 345 20 175 1 269 4 7 2 271 1 348 5 273 3 181 3 301 1 368 4 110 1 13 41 279 4 16 6 93 4 163 1 
211 1 65 1 47 3 261 1 69 3 71 1 313 1 99 1 119 18 171 1 192 7 146 4 75 1 265 4 150 1 101 4 5 1 29 1 152 1 173 1 81 1 51 3 83 4 267 4 54 1 199 2 295 1 345 20 175 1 269 4 7 2 271 1 348 5 273 4 181 3 301 1 368 4 110 1 13 38 279 4 16 8 93 4 163 1 
211 1 65 1 47 7 261 1 69 4 71 1 313 1 212 2 119 25 171 1 192 14 146 2 75 1 265 2 150 1 101 2 29 1 152 1 173 1 81 2 51 7 83 4 267 8 54 1 199 1 295 1 345 27 175 1 269 7 7 1 271 1 348 8 273 2 181 2 301 1 368 7 110 1 13 52 279 7 16 4 93 4 163 1 
65 1 47 3 69 1 119 10 192 6 146 2 265 2 195 1 150 1 101 2 5 1 173 1 81 1 51 3 83 2 267 3 345 9 269 3 7 1 271 1 348 3 273 2 181 1 301 1 368 3 110 2 13 19 279 3 16 4 93 2 
65 1 47 2 69 2 313 1 119 12 192 4 146 3 265 3 150 2 101 3 29 1 152 1 173 1 51 2 267 2 83 2 199 2 345 14 295 1 175 1 269 3 7 2 271 1 348 3 273 3 181 2 301 1 368 2 110 1 13 26 279 3 16 6 93 4 163 1 
229 1 194 1 235 1 297 1 78 1 232 1 62 1 157 1 303 1 357 1 
58 1 176 1 
229 1 194 1 235 1 297 1 232 1 334 1 190 1 157 1 114 1 
68 1 250 1 
45 1 193 1 282 1 
21 1 235 1 297 1 49 1 50 1 157 1 357 1 229 1 12 1 194 1 78 1 232 1 62 1 137 1 197 1 324 1 224 1 309 2 
21 1 235 1 297 1 49 1 50 1 157 1 357 1 229 1 12 1 194 1 78 1 232 1 62 1 137 1 197 1 324 1 224 1 309 2 
21 1 235 1 297 1 49 1 50 1 157 1 357 1 229 1 12 1 194 1 78 1 232 1 62 1 137 1 197 1 324 1 224 1 309 2 
68 1 193 1 250 1 
68 1 193 1 250 1 
45 1 282 1 
45 1 193 1 282 1 
59 1 39 1 
235 1 311 1 50 1 218 1 194 1 123 1 197 1 224 1 176 1 297 1 200 2 362 1 349 1 39 1 157 1 9 1 229 1 58 1 202 2 59 1 232 1 184 1 137 1 63 2 308 2 164 2 309 1 
285 1 355 2 119 1 216 1 73 1 146 1 265 1 101 1 320 1 52 1 33 1 345 1 56 1 84 1 180 1 273 1 298 1 366 1 304 2 202 2 13 2 14 1 206 1 113 2 60 1 16 2 259 1 20 1 63 2 164 2 379 2 
166 1 23 1 142 1 298 1 355 2 299 1 302 1 304 2 339 2 172 1 340 1 206 1 113 2 80 1 17 1 104 1 335 1 248 1 105 1 
226 1 23 1 355 1 298 1 302 1 304 1 339 2 172 1 340 1 113 1 206 1 80 1 17 1 104 1 335 1 248 1 105 1 
56 1 236 1 166 1 180 1 38 1 298 1 355 1 302 1 304 1 289 1 149 1 206 1 113 1 209 1 
166 1 23 1 355 1 299 1 298 1 302 1 304 1 339 2 172 1 340 1 206 1 113 1 80 1 17 1 104 1 335 1 248 1 105 1 
323 1 
36 1 330 1 329 1 182 1 154 1 324 1 354 1 
139 1 242 1 31 1 32 1 154 1 344 1 197 1 324 2 177 1 109 1 330 1 182 1 111 1 136 1 91 1 137 1 115 1 
139 4 46 1 188 1 236 1 142 1 284 2 240 2 102 6 292 1 51 2 154 9 197 5 344 3 56 10 251 2 348 2 109 4 298 3 304 3 111 5 353 2 206 4 113 3 204 1 306 2 354 1 67 1 355 3 169 2 27 2 318 2 124 6 32 4 31 6 223 2 267 2 324 8 269 2 36 1 177 4 179 2 85 2 180 3 227 2 330 2 367 3 182 8 88 3 279 2 185 2 233 1 91 12 137 5 378 1 
139 2 188 1 69 1 313 1 2 1 152 1 102 5 51 2 124 5 223 1 32 2 31 3 154 8 197 1 344 1 83 1 267 2 324 5 295 1 175 1 269 2 177 2 348 2 57 1 109 2 181 1 330 2 182 5 111 1 353 1 279 2 306 2 91 6 137 1 163 1 
211 1 139 1 71 1 315 1 223 1 32 1 154 2 197 1 267 1 54 1 106 1 200 1 177 1 348 2 109 1 350 1 182 2 10 1 202 1 134 1 183 1 160 1 306 2 137 1 280 1 63 1 308 1 164 1 
139 1 36 1 177 1 109 1 330 1 182 1 32 1 154 1 324 1 354 1 
269 2 348 2 85 1 182 5 279 2 102 5 306 2 51 2 124 5 91 10 223 1 31 5 154 5 267 2 324 5 
111 1 330 1 137 1 197 1 344 1 324 1 
66 1 139 1 22 1 46 1 236 2 188 2 355 4 241 1 213 1 289 1 32 2 154 2 344 2 197 3 56 1 177 2 180 1 109 2 38 1 298 1 182 2 304 4 111 4 353 2 206 1 113 4 137 3 187 1 378 2 
95 1 236 1 141 1 355 1 119 1 146 1 315 2 265 1 218 1 101 1 33 1 35 1 200 2 56 1 273 1 180 1 350 1 298 1 367 1 304 1 352 1 202 3 276 1 13 1 113 1 206 1 60 1 16 2 259 1 63 2 308 2 164 3 
139 1 177 1 188 1 109 1 330 2 182 2 171 1 353 1 102 2 91 4 124 2 31 2 32 1 154 1 324 4 
201 1 229 1 297 1 
201 1 229 1 297 1 
229 1 59 1 297 1 78 1 312 1 
201 1 229 1 297 1 
229 1 297 1 328 1 
229 1 297 1 328 1 
229 1 297 1 328 1 
229 1 297 1 
232 1 157 1 
211 1 261 1 69 1 313 1 71 1 119 4 171 1 192 2 146 1 265 1 75 1 101 1 173 1 267 1 83 1 54 1 345 4 348 1 273 1 181 1 368 2 13 8 16 2 
211 1 47 1 261 1 69 1 71 1 313 1 119 5 171 1 192 3 146 2 121 1 75 1 265 2 101 2 173 1 81 1 267 1 83 2 54 1 345 6 269 1 348 2 273 2 181 1 368 2 13 11 279 1 16 4 
211 1 47 1 261 1 69 1 71 1 313 1 119 10 171 1 192 4 146 3 121 1 75 1 265 3 101 3 152 1 173 1 51 2 83 1 267 3 54 1 345 9 295 1 199 1 175 1 269 2 348 3 273 3 181 1 368 3 13 19 279 2 16 6 163 1 
211 1 47 2 261 1 69 1 71 1 313 1 119 7 171 1 192 5 146 3 121 1 75 1 265 3 101 3 152 1 173 1 51 1 83 1 267 2 54 1 199 1 345 10 295 1 175 1 269 2 348 3 273 3 181 1 368 3 13 17 279 2 16 6 163 1 
211 1 261 1 69 1 313 1 71 1 119 4 171 1 192 2 146 1 265 1 75 1 101 1 173 1 267 1 83 1 54 1 345 4 348 1 273 1 181 1 368 2 13 8 16 2 
47 1 69 1 313 1 119 6 192 2 146 1 265 1 101 1 152 1 173 1 51 2 83 1 267 2 345 6 295 1 175 1 269 2 348 2 273 1 181 1 368 1 13 12 279 2 16 2 163 1 
211 1 47 2 261 1 69 1 71 1 313 1 119 8 171 1 192 5 146 4 121 1 75 1 265 4 101 4 152 1 173 1 51 1 83 1 267 2 54 1 345 10 295 1 199 2 175 1 269 2 348 3 273 4 181 1 368 3 13 18 279 2 16 8 163 1 
47 3 69 1 313 1 119 7 192 6 146 4 265 4 101 4 5 1 152 1 173 1 51 2 83 1 267 2 345 9 295 1 199 2 175 1 269 3 348 3 273 4 181 1 368 3 13 16 279 3 16 8 163 1 
211 1 47 3 348 1 261 2 71 3 368 3 119 4 192 6 75 1 13 7 267 1 54 3 345 3 
211 1 47 1 261 1 69 1 71 1 313 1 119 8 171 1 192 4 146 4 75 1 265 4 101 4 5 1 152 1 173 1 51 1 83 1 267 2 54 1 345 10 295 1 199 2 175 1 269 2 348 3 273 4 181 1 368 3 13 18 279 2 16 8 163 1 
211 1 348 1 47 1 261 1 273 2 368 2 71 1 119 4 171 1 192 3 146 2 265 2 75 1 13 8 101 2 16 4 267 1 54 1 345 4 199 1 
211 1 348 1 261 1 329 1 71 1 368 2 119 3 171 1 192 2 75 1 13 6 267 1 54 1 345 3 
269 1 348 1 47 1 273 1 368 1 119 2 192 2 146 1 121 1 265 1 13 4 101 1 279 1 16 2 51 1 267 1 345 2 
269 1 348 1 47 1 69 1 181 1 368 1 119 4 192 2 13 7 279 1 81 1 51 1 267 1 83 2 345 3 
211 1 47 4 261 1 69 2 71 2 212 1 119 12 171 1 192 9 146 2 75 1 265 2 219 1 101 2 81 1 51 2 83 2 267 3 54 2 345 11 199 2 269 2 348 3 273 2 368 5 13 23 279 2 15 1 16 4 
13 1 119 1 83 1 
13 1 69 1 345 1 
269 1 348 1 47 1 85 1 273 1 368 2 119 3 192 3 146 1 121 1 265 1 13 6 101 1 279 1 16 2 51 1 267 1 345 3 
47 1 69 1 313 1 119 6 192 2 146 1 265 1 101 1 152 1 173 1 51 2 83 1 267 2 345 6 295 1 175 1 269 2 348 2 273 1 181 1 368 1 13 12 279 2 16 2 163 1 
211 1 348 1 47 1 71 1 368 1 119 3 192 2 13 6 267 1 54 1 345 3 
47 1 261 1 273 1 368 1 71 1 119 2 192 2 146 1 265 1 75 1 13 3 101 1 15 1 16 2 54 1 345 1 199 1 
211 1 47 2 348 2 273 1 71 2 368 3 119 5 192 5 146 1 265 1 183 1 13 10 101 1 16 2 173 1 267 2 54 2 345 5 
348 1 47 1 273 1 192 1 146 1 265 1 13 2 101 1 279 1 16 2 173 1 345 2 
269 1 348 1 47 1 273 1 368 1 119 2 192 2 146 1 265 1 13 4 101 1 279 1 16 2 173 1 51 1 267 1 345 2 
47 1 273 3 71 1 368 1 119 2 192 2 146 3 265 3 13 3 101 3 15 1 5 1 16 6 173 1 54 1 199 1 345 1 
211 2 47 5 261 1 69 3 71 3 24 1 119 18 171 1 192 12 146 5 121 1 75 1 265 5 101 5 5 1 173 1 81 1 51 3 222 1 83 4 267 5 54 3 199 2 345 16 269 3 348 5 273 5 181 1 368 7 133 1 13 34 279 3 15 1 16 10 
218 1 202 1 145 1 63 1 293 1 100 1 164 1 
70 1 145 1 100 1 218 1 202 1 277 1 151 1 307 1 153 1 63 1 293 1 164 1 
56 1 236 1 206 1 113 1 180 1 38 1 298 1 329 1 355 1 304 1 289 1 
95 1 56 1 200 1 236 1 180 1 367 1 355 1 298 1 170 1 304 1 218 1 276 1 202 2 206 1 113 1 63 1 308 1 164 2 
95 1 284 1 355 1 169 1 170 1 218 1 106 1 200 2 56 3 180 2 364 1 298 1 367 2 304 1 202 2 276 1 113 1 206 1 205 1 63 2 308 1 378 1 164 2 
284 1 355 2 169 1 170 1 218 1 343 1 198 1 106 1 200 2 56 3 180 2 364 1 298 1 367 2 304 2 202 2 276 1 113 2 206 1 205 1 63 2 308 1 378 1 164 2 
117 1 236 1 284 1 240 1 355 3 169 1 197 2 198 1 324 1 56 4 251 1 180 1 298 1 367 1 330 1 88 1 304 3 111 1 113 3 206 1 61 1 137 2 378 1 
251 1 56 4 236 1 284 1 180 1 240 1 330 1 367 1 355 3 298 1 169 1 88 1 304 3 111 1 27 1 206 1 113 3 137 2 197 2 198 1 378 1 324 1 
206 1 113 1 96 1 298 1 355 1 304 1 
56 3 165 1 238 1 236 2 142 1 180 2 96 1 355 6 367 1 298 2 304 7 147 1 11 1 203 1 14 1 113 7 204 1 206 3 122 1 335 1 379 1 
95 1 142 1 192 2 146 2 101 2 52 1 54 1 345 3 200 1 56 1 348 1 298 1 304 1 352 1 202 2 13 6 113 1 206 1 60 2 16 4 259 2 63 1 308 1 164 2 211 1 261 1 355 1 71 1 170 1 119 3 171 1 263 1 265 2 75 1 218 2 76 1 267 1 35 1 326 1 273 2 180 1 86 1 366 1 367 1 368 2 276 1 94 1 
139 2 236 1 46 1 240 1 355 1 27 1 318 1 32 2 154 1 197 3 344 1 324 1 56 2 251 1 36 1 177 2 179 1 109 2 330 1 182 1 9 1 88 1 304 1 111 2 113 1 185 1 137 3 354 1 
56 2 142 1 240 1 180 1 96 1 355 2 367 1 298 1 304 2 113 2 204 1 206 2 233 1 
56 1 236 1 142 1 38 1 180 1 131 1 355 4 298 1 304 4 289 1 206 1 113 4 198 1 
116 1 56 1 165 1 310 1 180 1 355 2 367 1 298 1 300 1 304 2 113 2 206 2 122 1 378 1 
339 1 172 1 236 1 23 1 206 1 113 1 17 1 298 1 355 1 304 1 
56 1 84 1 14 1 206 1 113 2 142 1 180 1 298 1 355 2 335 1 304 2 
56 3 236 1 142 1 38 1 180 2 131 1 355 4 298 2 304 5 289 1 147 1 203 1 14 1 113 5 206 2 378 1 
56 3 236 1 142 1 38 1 180 2 131 1 355 4 298 2 304 5 289 1 203 1 14 1 113 5 206 2 196 1 378 1 
56 1 200 1 236 1 180 1 367 1 355 1 298 1 170 1 304 1 218 1 276 1 202 2 206 1 113 1 63 1 343 1 308 1 164 2 
56 1 165 1 180 1 355 1 367 1 298 1 304 1 11 1 113 1 204 1 206 2 122 1 378 1 
202 1 178 1 285 1 20 1 374 1 63 1 164 1 73 1 294 1 
112 1 272 1 178 1 
218 1 178 1 156 1 374 1 294 1 
251 1 272 1 178 1 364 1 156 2 330 1 9 1 218 1 112 1 358 1 205 1 257 1 221 1 374 2 137 2 197 2 324 1 106 1 294 2 
234 1 130 1 329 1 214 1 
234 1 220 1 372 1 341 1 103 1 130 1 214 1 
372 1 48 1 249 1 
234 1 107 1 220 1 372 3 341 1 103 3 130 1 351 1 228 1 287 1 214 1 34 2 
230 1 234 1 220 1 372 2 290 1 341 1 103 2 130 1 214 1 
339 1 172 1 107 1 220 1 372 1 341 1 103 1 104 1 214 1 243 1 215 1 
107 1 220 1 372 1 341 1 103 1 130 1 214 1 
234 1 107 1 220 1 372 1 341 1 103 1 130 2 
107 1 130 1 214 1 159 1 220 2 278 1 372 2 341 2 103 2 18 1 
234 1 346 1 107 1 225 1 220 1 372 3 290 2 129 1 341 1 103 3 130 1 214 2 243 1 
339 2 234 1 172 1 107 1 220 1 372 2 23 1 80 1 1 1 290 1 341 1 103 2 130 1 104 1 214 1 
230 1 234 1 346 1 107 1 220 2 372 4 290 2 262 1 341 2 103 4 130 1 214 2 243 1 
234 1 107 1 220 1 372 1 341 1 103 1 130 1 214 1 
234 2 346 1 97 1 351 1 130 2 287 1 243 1 214 3 220 1 372 4 290 2 341 1 103 4 34 1 
3 1 234 1 107 1 220 1 372 2 245 1 290 1 341 1 103 2 130 1 375 1 214 1 
234 1 107 1 351 1 130 1 287 2 214 1 356 1 220 1 372 3 341 1 103 3 34 2 
162 1 214 2 337 1 132 2 
107 1 220 1 372 1 341 1 42 1 103 1 
234 1 107 1 225 1 220 1 372 2 290 1 341 1 103 2 130 1 214 1 
264 1 
234 1 107 1 220 1 372 1 341 1 103 1 130 1 214 1 
234 1 107 1 225 1 130 1 214 1 220 1 372 3 290 1 341 1 103 3 34 1 
346 1 97 1 214 1 243 1 
130 1 214 1 

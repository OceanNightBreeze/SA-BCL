#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (200,347) (200,347) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (200,347) (200,347) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (200,347) (200,347) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (200,347) (200,347) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 1 175 1 328 1 347 1 207 1 281 1 275 1 16 1 98 1 270 1 71 1 
200 1 175 1 328 1 347 1 207 1 281 1 275 1 16 1 98 1 270 1 71 1 
200 1 175 1 328 1 347 1 207 1 281 1 275 1 16 1 98 1 270 1 71 1 
200 1 175 1 328 1 347 1 207 1 281 1 275 1 16 1 98 1 270 1 71 1 
60 1 317 1 328 4 154 1 125 2 292 3 118 3 281 1 270 4 70 1 143 2 287 1 274 1 216 1 316 1 275 1 207 1 357 1 
60 1 317 1 328 2 175 1 292 1 154 1 194 1 281 1 270 2 287 1 303 1 325 1 237 1 275 1 207 1 98 1 
60 1 317 1 328 3 292 2 118 1 281 2 269 1 270 3 143 1 216 1 275 1 207 2 98 1 
317 1 292 5 125 2 154 1 269 1 270 9 300 1 274 1 207 2 275 1 60 1 328 9 118 7 281 2 70 1 142 1 143 4 287 1 216 3 316 1 238 1 149 1 98 1 357 1 
317 1 292 5 125 2 154 1 269 1 270 9 300 1 274 1 207 2 275 1 60 1 328 9 118 7 281 2 70 1 142 1 143 4 287 1 216 3 316 1 238 1 149 1 98 1 357 1 
179 1 228 1 306 1 
152 1 63 2 179 1 
365 2 133 2 4 1 202 2 165 2 329 1 260 2 129 2 
240 1 337 1 4 1 81 1 195 1 129 3 5 1 339 2 50 1 340 2 365 2 133 3 202 2 53 1 226 1 302 1 304 1 158 2 326 2 38 1 344 1 330 1 165 2 329 1 166 1 253 1 183 2 254 1 309 1 18 1 217 1 260 2 315 1 288 1 355 1 22 1 151 1 
372 1 329 1 165 1 129 1 365 1 133 1 202 1 20 1 377 1 260 1 
372 1 291 1 252 1 129 1 95 1 133 1 202 1 313 1 179 1 228 1 229 1 187 1 111 1 80 1 
372 1 291 2 165 1 252 2 129 1 95 1 365 1 133 1 202 1 313 1 179 1 228 1 260 1 111 1 80 1 
61 1 212 1 291 1 252 1 221 1 
1 1 360 1 61 1 291 2 252 2 179 1 228 1 221 1 
61 1 291 1 252 1 
372 1 291 1 329 1 165 1 252 1 221 1 182 1 129 1 365 1 133 1 20 1 202 1 377 1 260 1 
179 1 
360 1 61 1 291 2 252 2 179 1 228 1 221 1 174 1 
3 1 371 1 360 1 191 1 103 1 291 5 61 2 252 5 114 2 221 2 242 2 42 1 177 2 9 1 84 1 301 1 179 1 228 1 367 1 
4 1 306 1 
372 1 4 1 346 1 165 1 129 2 365 1 232 1 133 2 202 2 136 1 260 1 
257 1 349 1 262 1 
4 1 330 1 166 1 253 1 254 1 129 1 5 1 339 1 18 1 340 1 133 1 74 1 158 1 217 1 288 1 22 1 
330 1 166 1 253 1 254 1 214 1 129 2 5 1 339 1 18 1 340 1 365 1 133 2 202 1 85 1 158 1 217 1 260 1 288 1 22 1 262 1 
372 1 4 1 165 1 129 2 365 2 232 1 133 2 202 2 85 1 136 1 260 2 
365 2 201 1 133 2 372 1 20 1 202 2 260 2 129 2 
372 1 4 1 165 1 129 3 365 3 133 3 232 1 202 3 85 1 260 3 
365 1 133 1 372 1 20 1 202 1 260 1 129 1 
372 1 346 1 165 1 129 1 365 1 133 1 202 1 136 1 260 1 
337 1 4 1 291 1 195 1 5 1 129 4 339 1 50 1 340 1 365 3 133 4 202 3 53 1 226 1 302 1 85 1 304 1 136 1 158 1 35 1 326 2 111 1 372 1 330 1 279 1 165 2 329 1 252 1 166 1 253 1 183 1 254 1 309 1 214 1 95 1 18 1 313 1 217 1 260 3 288 1 355 1 22 1 80 1 151 1 
365 1 133 2 4 1 202 2 85 1 260 1 187 1 129 2 43 1 
372 1 165 1 291 1 252 1 214 1 129 3 95 1 365 3 133 3 202 3 85 2 313 1 136 1 179 1 260 3 35 1 205 1 111 1 80 1 
165 1 129 2 365 2 349 1 133 2 202 2 85 1 136 1 260 2 262 1 
4 1 330 1 166 1 253 1 254 1 129 1 5 1 339 1 340 1 18 1 133 1 158 1 217 1 288 1 22 1 
4 1 330 1 166 1 253 1 254 1 129 1 339 1 320 1 340 1 18 1 299 1 133 1 158 1 217 1 22 1 
359 1 337 1 48 1 195 1 50 2 53 1 226 1 109 1 326 2 38 2 164 1 210 1 331 1 183 4 96 1 282 1 311 1 257 2 349 2 285 1 355 1 188 1 262 2 151 1 
365 1 133 1 201 1 372 1 202 1 313 1 260 1 129 1 
26 1 227 1 
26 1 227 1 
318 1 380 1 
318 1 380 1 
318 1 380 1 
26 1 227 1 215 1 
26 1 227 1 215 1 
26 1 172 1 227 1 
26 2 227 2 29 1 318 1 380 1 224 1 
26 1 227 1 215 1 
26 1 121 1 227 1 
26 1 121 1 227 1 
26 1 121 1 227 1 
26 1 4 1 291 1 27 1 252 1 104 1 129 2 131 1 272 1 198 1 255 1 365 2 341 1 133 2 171 1 202 2 10 1 135 1 323 1 172 1 227 1 260 2 13 1 368 1 
26 2 291 2 27 3 252 2 222 1 348 1 105 1 224 1 131 2 198 1 231 1 135 2 323 2 77 1 227 2 179 1 173 1 368 2 276 2 
287 1 274 1 154 1 
287 1 154 1 237 1 
170 1 145 1 274 2 287 3 237 1 271 1 
145 1 274 1 287 2 185 1 237 1 271 1 
274 1 145 1 287 2 237 1 271 2 
152 1 359 1 3 3 360 1 241 1 48 1 103 1 291 5 101 1 242 1 221 4 104 1 197 1 272 1 32 2 177 1 54 1 228 1 179 2 109 1 247 2 13 1 92 2 371 2 61 1 63 3 114 1 252 5 41 1 286 1 233 1 188 1 
335 1 152 3 359 3 3 8 360 1 48 3 291 9 102 1 103 1 101 2 221 7 242 2 104 4 197 2 364 1 177 2 51 5 228 1 179 5 109 3 367 1 90 1 247 6 160 1 92 6 371 6 61 6 212 5 63 9 252 9 114 2 41 3 286 1 78 1 188 3 
152 2 359 1 3 3 241 1 48 1 291 3 101 1 221 2 242 1 104 1 197 1 32 1 177 1 228 1 179 3 109 1 367 1 247 2 92 2 371 2 114 1 252 3 63 4 41 1 233 1 188 1 
335 1 152 3 359 2 3 5 241 1 48 2 291 4 101 1 242 1 221 3 104 2 197 1 32 2 364 1 177 1 228 1 179 4 109 2 247 4 367 1 92 4 371 4 63 7 114 1 252 4 41 2 233 1 188 2 78 1 
18 1 21 1 306 1 
18 1 139 1 
332 1 
18 1 330 1 217 1 
18 1 168 1 
18 1 330 1 
18 3 330 1 217 1 89 1 21 2 155 1 
359 1 38 4 239 1 210 2 99 1 94 1 183 7 50 3 67 1 96 3 225 1 157 1 234 1 76 2 342 1 57 1 188 1 
359 1 38 4 239 1 210 2 99 1 94 1 183 7 50 3 67 1 96 3 225 1 157 1 234 1 76 2 342 1 57 1 188 1 
359 1 38 4 239 1 210 2 99 1 94 1 127 1 183 7 50 3 67 1 96 3 225 1 157 1 234 1 76 2 342 1 57 1 188 1 
239 1 359 4 99 1 337 1 190 4 48 3 50 15 268 1 132 1 225 1 157 5 342 2 226 1 109 3 57 2 326 2 162 1 248 1 59 1 38 16 210 5 94 1 183 31 141 1 41 3 67 2 96 10 76 3 234 2 261 3 236 1 355 1 188 4 151 1 
359 1 239 1 337 2 99 1 50 4 322 1 157 1 226 2 342 1 57 1 326 4 38 5 210 3 211 1 94 1 183 9 67 1 96 4 76 2 234 1 236 1 355 2 188 1 151 2 
317 1 292 1 154 1 220 1 363 1 243 1 339 1 270 2 83 1 340 1 274 1 158 1 12 1 305 1 207 1 275 1 60 1 278 1 328 2 253 1 118 1 254 1 119 1 281 1 15 1 170 1 287 2 237 1 98 1 150 1 
317 1 292 1 154 1 363 1 243 1 82 1 339 1 270 3 83 1 340 1 134 1 274 1 158 1 305 1 207 1 60 1 278 1 328 3 253 1 117 1 118 2 254 1 119 1 281 1 15 1 170 1 287 2 237 1 98 1 150 1 
317 1 292 1 154 1 363 1 243 1 82 1 339 1 270 2 83 1 340 1 134 1 274 1 158 1 305 1 60 1 278 1 328 2 253 1 118 2 254 1 170 1 287 2 237 1 98 1 150 1 
243 2 339 1 270 1 83 2 340 1 273 1 158 1 305 2 207 1 307 1 328 1 330 1 166 1 253 1 254 1 117 1 167 1 281 1 18 1 312 1 169 1 378 1 98 2 
154 1 220 1 363 1 243 1 82 1 339 1 270 1 83 1 340 1 274 1 158 1 305 1 207 1 275 1 278 1 328 1 253 1 254 1 119 1 281 1 15 1 170 1 287 2 237 1 98 1 150 1 
319 1 
152 2 336 2 3 2 100 2 101 1 291 5 103 1 294 2 242 1 339 2 107 1 340 2 202 1 158 2 204 2 111 1 307 1 61 6 63 2 252 5 114 1 166 2 253 1 167 1 254 1 18 1 313 1 352 1 353 1 79 2 356 1 80 1 25 1 360 3 129 1 130 1 177 1 133 1 86 1 228 1 179 2 87 1 229 1 371 2 372 1 140 4 93 2 330 1 180 1 39 2 95 1 375 1 47 1 187 1 148 1 
360 1 291 3 294 1 129 1 133 1 202 1 229 1 111 1 372 1 140 2 61 2 180 1 252 3 95 1 375 1 313 1 352 1 47 1 187 1 80 1 174 1 25 1 
360 1 100 1 291 3 129 1 133 1 202 1 228 1 179 1 229 1 111 1 372 1 140 3 61 1 180 1 252 3 95 1 375 1 313 1 352 1 47 1 187 1 80 1 174 1 25 1 
360 1 100 1 291 3 294 1 129 1 133 1 202 1 228 1 179 1 229 1 111 1 372 1 140 3 61 2 180 1 252 3 95 1 375 1 313 1 352 1 47 1 187 1 174 1 80 1 79 1 25 1 
152 2 3 1 336 2 100 4 291 5 103 1 294 4 242 1 296 1 107 1 202 1 204 2 111 1 61 7 252 5 114 1 17 1 313 1 352 1 79 4 80 1 174 1 25 1 358 1 360 3 129 1 223 1 177 1 133 1 228 5 179 5 87 1 88 1 229 1 371 1 140 6 372 1 93 2 180 1 39 2 95 1 375 1 47 1 187 1 
152 2 3 1 336 2 100 2 291 4 103 1 242 1 294 2 107 1 202 1 204 2 111 1 61 4 252 4 114 1 63 2 313 1 352 1 353 1 80 1 79 2 25 1 360 2 129 1 177 1 133 1 87 1 179 2 228 1 229 1 371 1 140 4 372 1 93 2 180 1 39 2 95 1 375 1 47 1 187 1 
152 2 358 1 336 2 3 1 360 2 100 2 291 4 103 1 294 2 242 1 129 1 296 1 107 1 177 1 133 1 202 1 179 1 228 1 87 1 204 2 88 1 229 1 111 1 371 1 372 1 140 4 61 4 93 2 114 1 180 1 252 4 39 2 95 1 375 1 313 1 352 1 47 1 187 1 79 2 80 1 25 1 
152 2 358 1 336 2 3 1 360 2 100 2 291 4 103 1 294 2 242 1 129 1 296 1 107 1 177 1 133 1 202 1 179 1 228 1 87 1 204 2 88 1 229 1 111 1 371 1 372 1 140 4 61 4 93 2 114 1 180 1 252 4 39 2 95 1 375 1 313 1 352 1 47 1 187 1 79 2 80 1 25 1 
3 1 360 2 100 2 291 4 103 1 28 1 294 2 242 1 129 1 177 1 133 1 202 1 179 1 228 1 87 1 88 1 229 1 111 1 277 2 113 1 371 1 372 1 140 4 61 4 93 2 63 2 114 1 180 1 252 4 39 2 95 1 69 2 375 1 313 1 352 1 47 1 218 1 187 1 79 2 80 1 25 1 
152 2 358 1 336 2 3 1 360 2 100 3 103 1 291 4 242 1 294 3 296 1 129 1 223 1 107 1 177 1 133 1 202 1 179 1 228 1 87 1 204 2 88 1 229 1 111 1 371 1 372 1 140 5 93 2 61 5 114 1 180 1 252 4 39 2 95 1 375 1 313 1 352 1 47 1 187 1 80 1 79 3 25 1 
152 2 358 1 336 2 3 1 360 2 100 3 103 1 291 4 242 1 294 3 296 1 129 1 223 1 107 1 177 1 133 1 202 1 179 1 228 1 87 1 204 2 88 1 229 1 111 1 371 1 372 1 140 5 93 2 61 5 114 1 180 1 252 4 39 2 95 1 375 1 313 1 352 1 47 1 187 1 80 1 79 3 25 1 
3 1 100 2 291 4 103 1 242 1 294 2 202 1 111 1 113 1 61 4 252 4 114 1 63 2 69 2 313 1 352 1 353 1 80 1 79 2 25 1 360 2 129 1 177 1 133 1 87 1 228 1 179 1 229 1 277 2 371 1 140 4 372 1 93 2 180 1 39 2 95 1 375 1 47 1 187 1 
38 3 359 1 239 1 210 2 99 1 337 1 4 2 94 1 195 1 331 1 183 6 50 3 96 2 257 1 349 1 76 1 53 1 342 1 226 1 57 1 326 2 355 1 188 1 262 1 151 1 306 1 
359 2 337 2 4 1 190 3 48 1 49 1 195 2 31 1 50 6 321 1 157 1 53 1 226 2 109 2 248 1 326 4 162 1 38 8 210 1 373 1 183 14 309 1 41 2 96 2 257 11 349 4 261 3 315 1 355 2 188 1 379 1 262 11 151 2 
337 1 4 1 195 1 5 1 129 2 339 1 50 1 340 1 365 1 8 1 133 2 202 1 53 1 226 1 85 1 158 1 326 2 38 1 330 1 280 1 166 1 253 1 254 1 183 2 214 1 309 1 66 1 18 1 349 1 74 1 217 1 260 1 288 1 315 1 22 1 355 1 379 1 151 1 
239 1 99 1 337 3 4 2 48 2 192 2 195 3 5 2 339 3 50 10 340 3 202 1 53 3 157 4 342 1 302 2 158 3 246 2 109 2 57 1 210 4 166 1 253 2 254 2 309 1 214 1 18 2 257 7 349 7 76 1 260 1 217 2 315 1 355 3 22 2 262 7 359 3 266 1 82 1 129 3 365 1 133 3 226 3 85 1 326 6 137 2 138 1 38 10 330 2 94 1 183 20 41 2 96 8 146 2 288 2 188 3 379 1 289 1 151 3 
153 1 337 2 195 2 82 1 129 1 339 7 50 1 340 8 365 1 52 1 133 1 202 1 53 2 226 2 85 1 56 1 158 8 12 1 36 1 326 4 249 1 307 1 38 1 344 2 330 2 308 1 166 2 331 1 253 2 254 2 183 2 167 1 309 1 18 3 260 1 259 1 315 1 355 2 151 2 
359 1 337 1 48 1 195 1 129 1 50 2 365 1 133 1 202 1 53 1 226 1 136 1 109 1 326 2 38 1 210 1 165 1 183 3 41 1 96 1 257 1 349 1 120 1 260 1 355 1 188 1 262 1 379 1 151 1 
359 1 38 2 337 1 195 1 331 1 183 2 96 1 257 1 349 1 285 1 157 1 53 1 226 1 109 1 326 2 355 1 262 1 151 1 
210 1 164 1 337 1 48 1 195 1 331 1 183 2 50 2 96 1 257 1 349 1 53 1 226 1 326 2 355 1 188 1 262 1 151 1 
359 1 337 1 48 1 195 1 50 2 53 1 157 1 226 1 109 1 326 2 38 2 210 1 331 1 183 4 41 1 96 2 257 2 349 2 355 1 188 1 262 2 151 1 
359 1 38 2 337 1 195 1 183 2 96 1 257 1 349 1 285 1 157 1 53 1 226 1 259 1 109 1 326 2 355 1 262 1 151 1 
210 1 164 1 337 1 48 1 195 1 183 2 50 2 96 1 257 1 349 1 53 1 226 1 259 1 326 2 355 1 188 1 262 1 151 1 
359 1 337 1 48 1 195 1 50 2 53 1 157 1 226 1 109 1 326 2 38 2 210 1 183 4 41 1 96 2 257 2 349 2 259 1 355 1 188 1 262 2 151 1 
359 1 337 1 48 1 195 1 50 2 53 1 157 1 226 1 109 1 326 2 38 2 210 1 183 4 41 1 96 2 257 2 349 2 355 1 188 1 262 2 151 1 
337 1 4 1 195 1 5 1 129 1 339 1 50 1 340 1 133 1 53 1 302 1 226 1 158 1 326 2 38 1 330 1 166 1 253 1 183 2 254 1 309 1 18 1 217 1 315 1 288 1 22 1 355 1 151 1 
337 1 4 1 195 1 129 1 339 1 320 1 50 1 340 1 299 1 133 1 53 1 226 1 158 1 326 2 38 1 330 1 166 1 253 1 183 2 254 1 309 1 18 1 351 1 217 1 315 1 22 1 355 1 151 1 
359 1 337 1 48 1 195 1 50 2 53 1 157 1 226 1 109 1 326 2 38 2 210 1 183 4 41 1 96 2 257 2 349 2 355 1 188 1 379 1 262 2 151 1 
359 1 337 1 48 1 195 1 5 1 129 1 339 1 50 2 340 1 133 1 157 1 53 1 302 1 226 1 158 1 109 1 12 1 326 2 38 2 210 1 330 1 253 1 183 4 254 1 41 1 96 2 18 1 257 2 349 2 146 1 217 1 288 1 22 1 355 1 188 1 262 2 151 1 
359 1 337 1 48 1 195 1 129 1 50 1 365 1 133 1 202 1 157 1 53 1 226 1 136 1 109 1 326 2 38 2 165 1 183 3 41 1 96 1 333 1 257 1 349 1 260 1 355 1 188 1 379 1 262 1 151 1 
0 1 359 3 124 1 337 2 190 2 48 3 106 1 50 10 157 3 226 2 109 3 248 1 326 4 162 1 91 1 112 1 38 9 210 3 211 1 345 2 183 19 41 3 96 6 258 1 261 1 355 2 188 3 334 1 219 2 151 2 
0 2 359 3 124 2 337 3 190 2 48 2 128 1 30 1 193 1 176 1 50 12 157 2 324 1 226 3 109 3 326 6 248 2 91 1 38 14 210 2 211 1 345 1 183 26 41 3 96 4 258 1 376 1 261 2 236 2 355 3 188 2 334 1 219 4 151 3 
0 1 239 1 337 3 99 1 190 4 48 4 193 1 50 21 106 1 157 4 342 1 109 4 57 1 162 1 248 3 110 1 210 4 211 1 345 1 258 1 76 1 261 3 355 3 219 4 359 5 124 2 30 1 128 1 176 1 324 1 226 3 326 6 91 1 38 20 94 1 183 41 41 4 96 8 376 1 236 1 188 5 334 1 151 3 
239 1 0 1 359 5 99 1 124 2 337 4 190 4 48 3 128 1 193 1 30 1 176 1 106 1 50 18 324 1 157 3 342 1 226 4 109 4 57 1 110 1 248 3 326 8 162 1 91 1 38 20 210 4 211 1 345 1 94 1 183 38 41 4 96 7 258 1 76 1 376 1 261 3 236 2 355 4 188 4 334 1 219 4 151 4 
239 1 0 1 359 8 99 1 124 1 337 2 190 4 48 7 128 1 193 1 30 1 176 1 50 25 321 2 324 1 157 7 342 1 226 2 109 7 57 1 248 2 326 4 162 2 91 1 38 27 210 7 211 1 345 1 94 1 183 52 41 7 96 14 258 1 76 1 376 1 261 4 236 1 355 2 188 8 334 1 219 4 151 2 
231 1 26 1 323 1 135 1 77 1 227 1 368 1 224 1 122 1 131 1 
341 1 172 1 
26 1 250 1 323 1 135 1 338 1 227 1 147 1 368 1 131 1 
203 1 215 1 
121 1 29 1 206 1 
26 1 291 1 27 2 252 1 222 1 348 1 105 1 224 1 131 1 198 1 231 1 135 1 323 1 77 1 227 1 179 1 368 1 276 1 
26 1 291 1 27 2 252 1 222 1 348 1 105 1 224 1 131 1 198 1 231 1 135 1 323 1 77 1 227 1 179 1 368 1 276 1 
26 1 291 1 27 2 252 1 222 1 348 1 105 1 224 1 131 1 198 1 231 1 135 1 323 1 77 1 227 1 179 1 368 1 276 1 
29 1 203 1 215 1 
29 1 203 1 215 1 
121 1 206 1 
121 1 29 1 206 1 
171 1 10 1 
26 1 4 1 291 1 27 1 221 1 104 1 129 2 222 1 131 1 272 1 365 2 133 2 341 1 202 2 323 1 135 1 10 1 227 1 13 1 276 1 368 1 62 1 252 1 255 1 171 1 172 1 260 2 
337 1 195 1 295 1 129 2 339 2 50 1 340 2 133 2 202 2 53 1 226 1 158 2 326 2 249 1 38 1 344 2 251 1 330 1 308 1 181 1 253 1 254 1 183 2 309 1 18 1 144 1 315 1 23 1 355 1 379 1 151 1 
154 1 293 1 363 1 253 1 243 1 254 1 82 1 339 2 15 1 340 2 256 1 170 1 274 1 287 2 75 1 158 2 12 1 237 1 150 1 
154 1 362 1 363 1 243 1 253 1 254 1 82 1 339 1 15 1 340 1 170 1 274 1 287 2 75 1 158 1 237 1 150 1 
330 1 166 1 253 1 243 1 254 1 167 1 339 1 18 1 340 1 256 1 273 1 158 1 46 1 307 1 
154 1 293 1 363 1 243 1 253 1 254 1 82 1 339 1 15 1 340 1 256 1 170 1 274 1 287 2 75 1 158 1 237 1 150 1 
65 1 
3 1 371 1 84 1 301 1 179 1 228 1 306 1 
152 1 336 1 3 1 360 1 371 1 291 1 61 1 103 1 252 1 63 1 114 1 242 1 107 1 177 1 228 1 179 2 204 1 
152 6 3 9 290 2 48 2 101 2 103 4 291 5 242 4 155 1 298 1 339 3 340 3 199 2 301 1 158 3 246 2 109 2 12 1 247 6 111 2 14 2 61 5 115 2 114 4 252 5 63 12 116 2 166 1 253 3 254 4 68 2 18 10 73 1 168 2 314 1 217 3 21 2 359 2 360 3 177 4 84 1 86 1 366 1 228 2 179 8 370 2 92 6 139 3 371 8 330 3 41 2 283 1 284 2 188 2 
152 3 359 2 3 8 360 1 190 1 48 2 101 1 291 1 103 2 128 1 242 2 30 1 193 1 177 2 156 1 324 1 86 1 179 5 228 2 109 2 247 5 248 1 92 5 371 5 61 1 252 1 115 2 63 6 114 2 213 1 41 2 68 1 376 1 261 1 188 2 
359 2 3 2 99 1 103 1 291 1 242 1 129 1 296 1 177 1 365 1 133 1 202 1 342 1 57 1 371 2 372 1 329 1 165 1 115 2 114 1 252 1 182 1 68 1 20 1 377 1 260 1 354 1 188 1 
3 1 371 1 103 1 114 1 242 1 177 1 84 1 301 1 228 1 179 1 
359 2 92 5 152 5 3 5 371 5 48 2 115 2 63 10 41 2 68 1 179 5 246 1 109 2 247 5 188 2 
360 1 291 1 61 1 252 1 179 1 228 1 
3 2 360 2 103 1 101 2 291 3 242 2 339 4 245 1 177 2 340 4 86 2 366 1 158 4 367 1 307 1 371 2 330 1 61 4 114 2 252 3 166 2 253 1 254 1 167 1 40 1 283 2 18 1 148 1 356 1 
337 1 4 1 195 1 129 3 5 1 339 1 50 1 340 1 365 2 133 3 202 2 53 1 302 1 226 1 304 1 158 1 326 2 165 2 329 1 330 1 166 1 253 1 183 1 254 1 309 1 18 1 260 2 217 1 288 1 355 1 22 1 151 1 
152 2 92 2 3 1 371 2 103 1 101 1 63 4 114 1 242 1 177 1 76 1 86 1 228 2 179 4 247 2 
123 1 323 1 135 1 
123 1 323 1 135 1 
231 1 10 1 323 1 135 1 163 1 
123 1 323 1 135 1 
323 1 135 1 159 1 
323 1 135 1 159 1 
323 1 135 1 159 1 
323 1 135 1 
26 1 227 1 
359 1 38 4 239 1 210 2 99 1 337 2 94 1 183 8 50 4 96 3 76 1 157 1 226 2 342 1 236 1 57 1 326 4 355 2 188 1 151 2 
38 3 359 1 239 1 210 2 99 1 76 1 342 1 94 1 183 6 57 1 188 1 50 3 96 2 306 1 
359 1 38 2 210 1 337 1 48 1 183 4 41 1 50 2 96 2 157 1 226 1 11 1 109 1 326 2 355 1 188 1 151 1 
38 3 359 1 210 1 190 2 48 1 183 7 41 1 50 4 96 2 157 1 261 1 109 1 248 1 162 1 188 1 
239 1 359 3 99 1 337 2 190 2 48 2 49 1 267 1 50 12 321 1 157 4 342 2 226 2 109 2 57 2 162 1 326 4 38 11 210 5 94 1 183 23 41 2 96 9 76 1 261 2 236 2 355 2 188 3 151 2 
190 1 183 1 50 1 
38 1 261 1 183 1 
359 1 38 3 210 2 337 1 48 1 183 6 41 1 50 3 96 3 157 1 226 1 11 1 246 1 109 1 355 1 326 2 188 1 151 1 
359 2 337 1 190 1 48 2 30 1 193 1 128 1 50 6 157 1 324 1 226 1 109 2 248 1 326 2 38 6 210 1 211 1 183 12 41 2 96 2 376 1 261 1 355 1 188 2 151 1 
359 1 38 3 210 1 99 1 183 6 50 3 96 2 157 1 342 1 57 1 188 1 
38 1 239 1 210 1 337 1 94 1 267 1 183 3 50 2 96 2 157 1 342 1 226 1 57 1 236 1 326 2 355 1 151 1 
38 5 359 2 210 3 337 1 211 1 99 1 183 10 50 5 96 5 157 2 226 1 342 2 57 2 355 1 326 2 354 1 188 2 151 1 
359 1 38 2 211 1 337 1 183 2 96 1 157 1 226 1 109 1 326 2 355 1 151 1 
359 1 38 2 210 1 211 1 337 1 48 1 183 4 41 1 50 2 96 2 157 1 226 1 109 1 326 2 355 1 188 1 151 1 
38 1 210 1 211 1 337 3 267 1 183 3 106 1 50 2 96 2 157 1 226 3 342 1 236 1 57 1 326 6 355 3 151 3 
239 1 359 5 99 2 337 5 190 4 48 3 267 1 50 18 268 1 106 1 132 1 157 5 342 3 226 5 11 1 109 3 57 3 248 1 326 10 162 1 59 1 38 16 210 7 211 1 94 1 183 34 41 3 96 12 76 1 261 3 236 2 355 5 188 5 151 5 
359 1 239 1 337 1 99 1 190 1 50 4 324 1 226 1 342 1 57 1 248 1 326 2 38 4 210 2 211 1 94 1 183 8 96 2 76 1 261 1 355 1 188 1 151 1 
239 1 359 2 99 1 337 2 190 2 50 5 324 1 157 1 342 1 226 2 11 1 109 1 57 1 248 1 326 4 162 1 38 6 210 2 211 1 94 1 183 11 41 1 96 3 76 1 261 1 355 2 188 1 151 2 
239 1 359 3 99 1 337 3 190 1 48 2 30 1 193 1 128 1 50 10 157 1 324 1 342 1 226 3 11 1 109 2 57 1 248 1 326 6 38 9 210 3 211 1 94 1 183 19 41 2 96 4 76 1 376 1 261 1 236 1 355 3 188 3 151 3 
239 1 359 3 99 1 337 3 190 1 48 1 30 1 193 1 128 1 50 7 157 2 324 1 342 1 226 3 11 1 109 2 57 1 248 1 326 6 38 10 210 3 211 1 94 1 183 17 41 2 96 5 76 1 376 1 261 1 236 1 355 3 188 2 151 3 
359 1 239 1 337 1 99 1 190 1 50 4 324 1 226 1 342 1 57 1 248 1 326 2 38 4 210 2 211 1 94 1 183 8 96 2 76 1 261 1 355 1 188 1 151 1 
359 2 337 1 190 1 48 2 30 1 193 1 128 1 50 6 157 1 324 1 226 1 109 2 248 1 326 2 38 6 210 1 211 1 183 12 41 2 96 2 376 1 261 1 355 1 188 2 151 1 
239 1 359 3 99 1 337 4 190 1 48 1 128 1 30 1 193 1 50 8 157 2 324 1 342 1 226 4 11 1 109 2 57 1 248 1 326 8 38 10 210 3 211 1 94 1 183 18 41 2 96 5 76 1 376 1 261 1 236 2 355 4 188 2 151 4 
359 3 337 4 190 1 48 2 128 1 30 1 193 1 50 7 106 1 157 3 324 1 226 4 109 3 248 1 326 8 38 9 210 3 211 1 183 16 41 3 96 6 376 1 261 1 236 2 355 4 188 2 151 4 
239 1 359 1 38 3 210 3 99 1 94 2 183 7 50 4 96 6 157 3 342 3 57 3 188 1 
239 1 359 3 99 1 337 4 190 1 48 1 128 1 30 1 193 1 50 8 106 1 157 1 324 1 342 1 226 4 109 2 57 1 248 1 326 8 38 10 210 3 211 1 94 1 183 18 41 2 96 4 76 1 376 1 261 1 236 2 355 4 188 2 151 4 
327 1 133 1 4 1 202 1 129 1 187 1 43 1 
209 1 327 1 2 1 189 1 4 1 129 1 43 1 72 1 133 1 202 1 161 1 187 1 
18 1 340 1 330 1 158 1 166 1 253 1 254 1 167 1 339 1 307 1 306 1 
4 1 330 1 166 1 253 1 254 1 129 2 339 1 18 1 340 1 365 1 133 2 202 1 85 1 158 1 217 1 260 1 288 1 22 1 
4 1 129 2 339 1 340 1 365 1 199 1 133 2 202 2 85 1 158 1 372 1 330 2 253 1 254 1 283 1 18 3 168 1 313 1 260 2 217 2 288 1 22 1 80 1 
4 1 129 2 339 2 320 1 340 2 365 1 199 1 133 2 202 2 85 1 158 2 37 1 372 1 330 2 253 1 254 1 283 1 18 3 168 1 313 1 260 2 217 2 22 1 80 1 
139 1 330 1 291 2 61 1 252 2 166 1 253 1 254 1 339 3 184 1 283 1 340 3 18 4 199 1 168 1 179 1 228 1 158 3 217 1 21 1 111 1 369 1 37 1 
139 1 330 1 291 2 61 1 252 2 166 1 253 1 254 1 339 3 283 1 340 3 18 4 199 1 168 1 284 1 179 1 228 1 158 3 217 1 21 1 111 1 37 1 
340 1 153 1 158 1 253 1 254 1 339 1 
344 1 230 1 153 1 330 2 308 1 166 2 253 2 155 1 254 3 82 1 339 6 340 7 19 1 18 3 52 1 56 1 158 7 217 1 12 1 36 1 343 1 
359 1 239 1 99 1 337 2 4 2 192 1 195 2 129 2 5 1 339 1 50 3 340 1 365 1 133 2 202 1 53 2 342 1 226 2 302 1 85 1 158 1 12 1 57 1 326 4 38 3 210 2 330 1 94 1 181 1 253 1 183 6 254 1 96 2 18 1 257 1 349 1 76 1 146 1 217 1 260 1 288 1 22 1 355 2 188 1 262 1 379 1 151 2 
3 1 360 1 103 2 291 3 242 2 221 1 339 1 177 2 340 1 84 1 301 1 179 1 228 1 158 1 366 1 111 1 14 1 370 1 371 1 139 1 61 2 114 2 252 3 116 1 166 1 18 2 284 1 21 1 
153 1 330 1 253 1 155 1 254 2 339 2 340 2 73 1 18 2 158 2 217 1 12 1 21 1 
263 1 330 1 166 1 253 1 254 1 167 1 339 4 340 4 18 1 158 4 12 1 37 1 307 1 
230 1 266 1 330 1 253 1 254 2 339 2 283 1 340 2 18 1 44 1 350 1 158 2 217 1 343 1 
340 1 287 1 154 1 158 1 363 1 166 1 253 1 254 1 237 1 339 1 
330 1 308 1 253 1 254 1 82 1 295 1 339 2 340 2 18 1 158 2 12 1 
263 1 330 2 308 1 166 1 253 2 167 1 254 2 339 4 283 1 340 5 18 3 52 1 158 5 56 1 12 1 307 1 
263 1 330 2 308 1 166 1 253 2 167 1 254 2 244 1 339 4 283 1 340 5 18 3 52 1 158 5 12 1 307 1 
4 1 330 1 166 1 253 1 254 1 129 2 339 1 320 1 18 1 340 1 365 1 133 2 202 1 85 1 158 1 217 1 260 1 22 1 
230 1 330 1 253 1 155 1 254 2 339 1 283 1 340 1 19 1 18 1 158 1 217 1 343 1 
4 1 34 1 235 1 55 1 58 1 
4 1 372 1 291 2 252 2 126 1 221 1 6 1 95 1 108 1 34 2 235 2 313 1 179 1 228 1 55 2 35 1 111 1 58 1 80 1 
133 1 202 1 251 1 144 1 235 1 55 1 129 1 23 1 58 1 
126 1 58 1 6 1 
60 1 317 1 292 1 306 1 
60 1 317 1 328 1 292 1 207 1 281 1 270 1 
83 1 328 1 98 1 
317 1 60 1 328 3 292 1 297 1 7 1 281 1 270 3 178 1 325 2 275 1 207 1 
60 1 317 1 328 2 292 1 125 1 118 1 207 1 281 1 270 2 
143 1 328 1 287 1 274 1 154 1 292 1 207 1 281 1 275 1 270 1 70 1 
60 1 328 1 292 1 207 1 281 1 275 1 270 1 
60 2 317 1 328 1 207 1 281 1 275 1 270 1 
60 1 328 2 361 1 292 1 281 2 270 2 24 1 275 1 207 2 208 1 
60 1 317 1 328 3 292 2 118 2 281 1 270 3 142 1 143 1 216 1 238 1 275 1 207 1 
60 1 317 1 328 2 292 1 154 1 118 1 281 1 270 2 170 1 287 2 274 1 186 1 237 1 275 1 207 1 
60 1 317 1 328 4 125 1 292 2 118 2 281 2 270 4 143 1 216 1 316 1 275 1 207 2 
60 1 317 1 328 1 292 1 207 1 281 1 275 1 270 1 
60 2 317 2 328 4 292 3 118 2 297 1 281 1 270 4 310 1 178 1 143 1 216 1 325 1 207 1 
60 1 317 1 264 1 328 2 292 1 118 1 281 1 270 2 45 1 275 1 207 1 149 1 
60 1 317 1 178 2 328 3 292 1 325 2 64 1 297 1 207 1 281 1 275 1 270 3 
292 2 196 1 33 1 97 2 
265 1 328 1 207 1 281 1 275 1 270 1 
60 1 317 1 328 2 292 1 118 1 238 1 207 1 281 1 275 1 270 2 
374 1 
60 1 317 1 328 1 292 1 207 1 281 1 275 1 270 1 
60 1 317 1 328 3 292 1 325 1 118 1 238 1 207 1 281 1 275 1 270 3 
310 1 143 1 292 1 216 1 
60 1 292 1 

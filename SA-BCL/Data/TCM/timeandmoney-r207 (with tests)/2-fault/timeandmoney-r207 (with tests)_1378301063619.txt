#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 9 179 1 344 1 109 1 60 1 326 1 327 9 328 2 204 2 300 1 275 6 347 2 137 1 276 1 350 1 257 1 71 1 280 3 354 1 97 2 217 1 41 5 285 2 314 4 125 2 227 1 318 1 321 2 
85 9 179 1 344 1 109 1 60 1 326 1 327 9 328 2 204 2 300 1 275 6 347 2 137 1 276 1 350 1 257 1 71 1 280 3 354 1 97 2 217 1 41 5 285 2 314 4 125 2 227 1 318 1 321 2 
85 10 179 1 344 1 109 1 60 1 326 1 327 10 328 2 204 2 300 1 275 7 347 2 137 1 276 1 350 1 257 1 71 1 280 4 354 1 97 2 217 1 41 6 285 2 314 5 125 2 227 1 318 1 321 2 
257 1 71 1 280 2 85 7 354 1 344 1 179 1 109 1 217 1 326 1 60 1 97 2 41 4 327 7 328 2 204 2 300 1 285 2 275 4 314 3 125 2 347 2 318 1 137 1 276 1 321 1 350 1 
71 1 280 1 85 4 109 1 60 1 97 1 327 4 41 3 328 1 204 1 285 1 275 3 314 2 347 1 227 1 318 1 276 1 321 2 
17 1 85 2 344 1 109 1 326 1 60 1 97 1 41 1 327 2 153 1 328 1 204 1 125 1 347 1 36 1 276 1 
85 3 280 1 109 1 60 1 97 2 327 3 41 2 300 1 275 1 314 1 125 1 347 2 276 1 
71 1 85 9 280 3 354 1 109 1 217 1 60 1 97 2 41 5 327 9 328 1 345 1 204 1 285 1 300 1 101 1 275 7 314 4 125 1 347 2 227 1 318 1 276 1 321 2 
71 1 85 9 280 3 354 1 109 1 217 1 60 1 97 2 41 5 327 9 328 1 345 1 204 1 285 1 300 1 101 1 275 7 314 4 125 1 347 2 227 1 318 1 276 1 321 2 
229 1 192 1 88 1 
192 1 75 2 221 1 
141 1 52 2 290 2 142 2 228 2 264 2 266 1 203 2 
25 1 197 1 3 1 324 1 228 2 203 2 364 1 157 2 34 1 66 1 305 1 138 1 15 1 371 1 141 1 161 2 351 1 164 2 142 3 45 1 335 1 100 2 337 1 51 1 52 2 226 1 288 2 169 1 126 1 170 1 290 3 150 1 264 2 195 1 242 1 266 1 295 1 
141 1 135 1 52 1 178 1 290 1 142 1 228 1 370 1 264 1 203 1 
189 1 142 1 228 1 329 1 88 1 43 1 167 1 192 1 146 1 290 1 92 1 293 1 370 1 173 1 
189 1 142 1 228 1 88 1 43 1 203 1 167 2 192 1 146 1 52 1 290 1 92 2 264 1 370 1 173 1 
309 1 243 1 167 1 92 1 201 1 
89 1 243 1 167 2 192 1 92 2 117 1 88 1 201 1 
167 1 92 1 201 1 
210 1 141 1 243 1 178 1 142 1 228 1 203 1 135 1 167 1 52 1 290 1 92 1 370 1 264 1 
192 1 
89 1 243 1 167 2 192 1 252 1 92 2 88 1 201 1 
297 1 243 2 279 1 270 1 283 2 88 1 99 1 201 2 46 2 47 1 89 1 167 5 380 1 192 1 339 2 360 1 92 5 93 1 186 1 
229 1 266 1 
142 2 228 2 203 1 52 1 290 2 264 1 341 1 266 2 67 1 
121 1 154 1 282 1 
351 1 197 1 164 1 142 1 100 1 337 1 51 1 157 1 226 1 34 1 290 1 138 1 140 1 242 1 266 1 295 1 
351 1 197 1 164 1 59 1 142 2 228 1 203 1 154 1 100 1 337 1 51 1 157 1 34 1 52 1 226 1 65 1 290 2 138 1 242 1 295 1 
59 2 142 5 228 5 329 1 190 1 203 4 120 1 52 4 65 1 290 5 209 1 264 1 341 1 266 1 
52 2 133 1 178 1 290 2 142 2 228 2 370 1 203 2 
52 3 59 1 290 3 142 3 228 3 264 1 266 1 203 3 
52 1 178 1 290 1 142 1 228 1 370 1 203 1 
52 1 290 1 142 1 228 1 370 1 264 1 341 1 203 1 67 1 
25 1 197 1 59 1 228 3 182 1 203 3 157 1 34 1 65 1 66 1 305 1 92 1 138 1 370 1 15 1 371 1 141 1 161 1 351 1 164 1 189 1 142 4 43 1 45 1 335 1 100 1 167 1 337 1 191 1 51 1 146 1 226 1 52 3 288 2 169 1 126 1 290 4 195 1 264 2 341 1 242 1 266 1 295 1 173 1 
52 1 290 2 142 2 59 1 228 2 329 1 190 1 266 1 203 1 
189 1 59 2 142 3 228 3 43 1 203 3 167 1 156 1 191 1 192 1 146 1 52 3 65 1 290 3 92 1 264 1 370 1 341 1 173 1 
59 1 142 2 228 2 203 2 121 1 154 1 52 2 290 2 264 1 341 1 
351 1 197 1 164 1 142 1 100 1 337 1 51 1 157 1 226 1 34 1 290 1 138 1 242 1 266 1 295 1 
351 1 197 1 164 1 142 1 219 1 100 1 337 1 51 1 157 1 290 1 138 1 242 1 266 1 383 1 295 1 
0 1 25 1 324 2 132 1 58 1 154 2 253 1 255 1 66 1 305 1 14 1 15 1 371 2 161 4 282 2 42 1 335 1 121 2 313 1 80 1 102 1 288 2 263 1 169 1 
52 1 133 1 290 1 142 1 228 1 370 1 43 1 203 1 
236 1 1 1 
236 1 1 1 
281 1 106 1 
281 1 106 1 
281 1 106 1 
311 1 236 1 1 1 
236 1 1 1 353 1 
236 2 1 2 122 1 281 1 78 1 106 1 
311 1 236 1 1 1 
311 1 236 1 1 1 
236 1 1 1 187 1 
236 1 1 1 187 1 
236 1 1 1 187 1 
54 1 175 1 1 1 55 1 176 1 228 2 203 2 155 1 368 1 92 1 13 1 94 1 38 1 236 1 68 1 353 1 73 1 96 1 142 2 167 1 147 1 52 2 290 2 266 1 
54 2 1 2 2 1 176 2 178 1 228 1 363 1 203 1 135 1 231 1 368 2 92 2 370 1 37 1 94 1 69 1 236 2 210 1 141 1 73 2 96 2 142 1 167 2 223 1 52 1 104 1 290 1 264 1 129 1 
285 1 328 1 204 1 
36 1 328 1 204 1 
285 2 269 1 36 1 30 1 24 1 204 3 
285 1 332 1 269 1 36 1 30 1 204 2 
285 1 269 1 36 1 30 2 204 2 
297 1 243 4 245 1 132 1 56 1 270 3 199 1 201 1 88 1 251 1 89 1 185 2 253 1 92 5 91 1 38 1 68 1 212 2 75 3 283 1 221 1 46 1 47 2 222 1 167 5 80 1 147 1 338 2 192 2 339 1 263 1 342 1 
297 1 243 7 132 3 56 1 270 8 201 6 88 1 251 3 89 1 253 3 92 9 91 2 38 4 211 1 212 6 75 9 143 5 283 2 221 3 46 2 310 1 309 5 47 6 222 2 167 9 240 1 80 3 49 1 315 1 338 6 192 5 339 2 263 3 360 1 320 1 
243 2 245 1 132 1 270 3 199 1 88 1 251 1 185 1 253 1 92 3 91 1 38 1 212 2 75 4 283 1 221 2 46 1 222 1 47 2 167 3 80 1 192 3 338 2 339 1 263 1 360 1 
243 3 245 1 132 2 270 5 199 1 88 1 251 2 185 2 253 2 92 4 91 1 38 2 212 4 75 7 283 1 221 3 46 1 310 1 222 1 47 4 167 4 240 1 80 2 192 4 338 4 339 1 263 2 360 1 320 1 
229 1 337 1 111 1 
337 1 216 1 
95 1 
337 1 242 1 295 1 
337 1 5 1 
337 1 295 1 
322 1 337 3 232 1 111 2 242 1 295 1 
161 7 72 1 268 1 132 1 324 4 58 3 152 2 8 1 166 1 119 1 31 1 366 1 102 2 158 1 253 1 371 3 384 1 
161 7 72 1 268 1 132 1 324 4 58 3 152 2 8 1 166 1 119 1 31 1 366 1 102 2 158 1 253 1 371 3 384 1 
161 7 72 1 268 1 132 1 324 4 58 3 152 2 8 1 166 1 119 1 31 1 366 1 102 2 158 1 159 1 253 1 371 3 384 1 
25 1 268 2 362 4 324 16 132 4 325 1 58 10 272 1 152 3 8 5 31 1 134 1 251 3 366 2 158 2 64 1 253 4 305 1 15 1 371 15 278 1 161 31 72 1 258 1 166 1 119 1 312 3 80 3 102 5 288 2 263 3 169 1 241 1 384 2 
25 2 268 1 132 1 324 5 325 1 58 4 152 2 8 1 29 1 31 1 366 1 158 1 253 1 305 2 15 2 371 4 161 9 166 1 119 1 287 1 102 3 288 4 169 2 384 1 
196 1 84 1 85 2 197 1 109 1 60 1 61 1 327 2 328 1 204 2 207 1 275 1 157 1 301 1 136 1 347 1 36 1 304 1 276 1 351 1 259 1 164 1 97 1 41 1 100 1 285 1 224 1 225 1 125 1 24 1 
84 1 85 3 197 1 109 1 61 1 327 3 198 1 328 1 249 1 204 2 207 1 275 2 157 1 136 1 347 1 36 1 304 1 276 1 351 1 259 1 164 1 97 1 41 1 220 1 100 1 285 1 224 1 225 1 125 1 24 1 
84 1 85 2 197 1 109 1 61 1 327 2 198 1 328 1 249 1 204 2 207 1 275 2 157 1 36 1 304 1 276 1 351 1 259 1 164 1 41 1 100 1 285 1 225 1 125 1 24 1 
197 1 85 1 327 1 61 2 157 1 347 1 304 2 351 1 259 2 164 1 165 1 97 1 375 1 308 1 220 1 284 1 100 1 356 1 337 1 51 1 125 2 172 1 295 1 
84 1 85 1 197 1 60 1 61 1 327 1 328 1 249 1 204 2 207 1 157 1 301 1 136 1 347 1 36 1 304 1 351 1 259 1 164 1 97 1 100 1 285 1 224 1 225 1 125 1 24 1 
372 1 
297 1 244 2 197 1 6 1 7 1 248 1 201 6 250 1 157 2 349 2 114 2 351 1 116 2 75 2 20 1 164 2 214 1 308 1 23 1 221 2 167 5 261 4 265 1 173 1 267 2 270 2 228 1 329 1 88 1 273 2 89 3 91 1 92 5 370 1 373 1 189 1 142 1 375 1 283 1 43 1 376 1 44 1 46 1 238 1 47 2 100 2 337 1 51 2 192 2 146 1 339 1 149 2 290 1 293 1 295 1 
373 1 214 1 189 1 7 1 142 1 228 1 248 1 329 1 201 2 43 1 273 1 238 1 89 1 167 3 252 1 261 2 146 1 290 1 92 3 370 1 293 1 173 1 
244 1 7 1 228 1 329 1 248 1 201 1 88 1 89 1 252 1 92 3 370 1 373 1 214 1 189 1 142 1 43 1 238 1 167 3 146 1 261 3 192 1 290 1 293 1 173 1 
244 1 7 1 228 1 329 1 248 1 201 2 88 1 273 1 89 1 252 1 92 3 370 1 114 1 373 1 214 1 189 1 142 1 43 1 238 1 167 3 146 1 261 3 192 1 290 1 293 1 173 1 
297 1 244 4 6 1 7 1 248 1 201 7 252 1 349 2 114 4 256 1 116 2 307 1 214 1 221 2 167 5 261 6 173 1 267 2 177 1 270 1 228 1 329 1 88 5 273 4 89 3 369 1 92 5 370 1 373 1 189 1 142 1 283 1 43 1 376 1 238 1 46 1 47 1 146 1 192 5 339 1 290 1 149 2 293 1 105 1 
297 1 244 2 6 1 7 1 248 1 201 4 250 1 349 2 114 2 116 2 214 1 75 2 221 2 167 4 261 4 173 1 267 2 270 1 228 1 329 1 88 1 273 2 89 2 92 4 370 1 373 1 189 1 142 1 283 1 376 1 43 1 46 1 238 1 47 1 146 1 192 2 339 1 290 1 149 2 293 1 
297 1 244 2 267 2 6 1 270 1 7 1 228 1 329 1 248 1 88 1 201 4 273 2 89 2 369 1 92 4 349 2 370 1 114 2 256 1 116 2 373 1 307 1 214 1 189 1 142 1 283 1 376 1 43 1 221 2 238 1 46 1 47 1 167 4 192 1 146 1 261 4 339 1 149 2 290 1 293 1 173 1 
297 1 244 2 267 2 6 1 270 1 7 1 228 1 329 1 248 1 88 1 201 4 273 2 89 2 369 1 92 4 349 2 370 1 114 2 256 1 116 2 373 1 307 1 214 1 189 1 142 1 283 1 376 1 43 1 221 2 238 1 46 1 47 1 167 4 192 1 146 1 261 4 339 1 149 2 290 1 293 1 173 1 
297 1 244 2 108 2 267 2 6 1 270 1 7 1 228 1 329 1 248 1 88 1 201 4 273 2 365 2 89 2 208 1 92 4 370 1 114 2 256 1 373 1 75 2 214 1 189 1 142 1 283 1 43 1 238 1 145 1 46 1 47 1 167 4 192 1 146 1 261 4 339 1 149 2 290 1 293 1 171 1 173 1 
297 1 244 3 267 2 6 1 270 1 7 1 228 1 329 1 248 1 88 1 201 5 273 3 89 2 369 1 92 4 349 2 370 1 114 3 256 1 116 2 373 1 307 1 214 1 189 1 142 1 283 1 376 1 43 1 221 2 46 1 238 1 47 1 167 4 192 1 146 1 261 5 339 1 149 2 290 1 293 1 105 1 173 1 
297 1 244 3 267 2 6 1 270 1 7 1 228 1 329 1 248 1 88 1 201 5 273 3 89 2 369 1 92 4 349 2 370 1 114 3 256 1 116 2 373 1 307 1 214 1 189 1 142 1 283 1 376 1 43 1 221 2 46 1 238 1 47 1 167 4 192 1 146 1 261 5 339 1 149 2 290 1 293 1 105 1 173 1 
297 1 244 2 108 2 267 2 6 1 270 1 7 1 228 1 248 1 329 1 88 1 201 4 250 1 273 2 365 2 89 2 92 4 208 1 370 1 114 2 373 1 75 2 214 1 189 1 142 1 283 1 43 1 238 1 46 1 47 1 167 4 192 1 146 1 261 4 339 1 149 2 290 1 293 1 173 1 
25 1 268 1 132 1 324 3 58 2 152 1 31 1 154 1 229 1 158 1 253 1 66 1 305 1 15 1 371 3 161 6 282 1 166 1 119 1 335 1 121 1 313 1 102 2 288 2 169 1 266 2 
25 2 362 3 324 8 132 2 58 2 272 1 87 1 8 1 154 11 251 2 346 1 253 1 66 1 305 2 15 2 371 6 277 1 161 14 258 1 282 11 45 1 335 2 312 3 121 4 48 1 80 1 102 1 288 4 289 1 263 2 169 2 150 1 266 1 
25 1 197 1 86 1 324 1 59 1 228 1 203 1 157 1 34 1 65 1 66 1 305 1 138 1 15 1 140 1 371 1 351 1 161 2 164 1 142 2 45 1 335 1 100 1 121 1 337 1 51 1 226 1 52 1 289 1 288 2 168 1 148 1 169 1 290 2 150 1 242 1 266 1 295 1 
197 2 58 8 59 1 152 1 8 4 249 1 203 1 206 2 154 7 251 2 157 3 158 1 253 3 65 1 66 3 348 2 305 3 15 3 161 20 351 2 115 2 164 3 166 1 119 1 121 7 80 2 357 1 226 2 263 2 169 3 266 2 130 1 25 3 268 1 132 3 324 10 228 1 31 1 34 2 138 2 371 10 142 3 282 7 334 1 45 1 335 3 100 3 337 2 51 1 102 4 52 1 288 6 289 1 290 3 150 1 195 2 340 2 242 2 295 2 
196 1 25 2 197 2 324 1 247 1 59 1 228 1 249 1 203 1 157 8 367 1 12 1 66 2 305 2 15 2 371 1 351 2 161 2 19 1 164 7 215 1 142 1 40 1 375 1 308 1 45 1 335 2 100 8 313 1 337 3 51 2 52 1 288 4 169 2 290 1 170 2 150 1 151 1 295 2 
25 1 132 1 324 1 58 1 228 1 203 1 154 1 251 1 253 1 66 1 305 1 15 1 371 2 161 3 39 1 142 1 282 1 335 1 121 1 80 1 102 1 52 1 288 2 289 1 263 1 169 1 290 1 264 1 341 1 
161 2 25 1 132 1 324 2 58 1 282 1 8 1 42 1 335 1 121 1 154 1 313 1 288 2 263 1 169 1 66 1 305 1 15 1 
161 2 25 1 58 1 282 1 335 1 121 1 154 1 313 1 80 1 102 1 288 2 253 1 169 1 255 1 66 1 305 1 15 1 371 2 
25 1 324 2 132 1 58 2 8 1 251 1 154 2 253 1 66 1 305 1 15 1 371 2 161 4 282 2 335 1 121 2 313 1 80 1 102 1 263 1 288 2 169 1 
161 2 25 1 132 1 324 2 58 1 40 1 282 1 8 1 42 1 335 1 121 1 154 1 288 2 263 1 169 1 66 1 305 1 15 1 
161 2 25 1 58 1 40 1 282 1 335 1 121 1 154 1 80 1 102 1 288 2 253 1 169 1 255 1 66 1 305 1 15 1 371 2 
25 1 324 2 132 1 58 2 8 1 251 1 154 2 253 1 66 1 305 1 15 1 371 2 161 4 40 1 282 2 335 1 121 2 80 1 102 1 263 1 288 2 169 1 
25 1 324 2 132 1 58 2 8 1 251 1 154 2 253 1 66 1 305 1 15 1 371 2 161 4 282 2 335 1 121 2 80 1 102 1 263 1 288 2 169 1 
25 1 197 1 324 1 157 1 34 1 66 1 305 1 138 1 15 1 371 1 161 2 351 1 164 1 142 1 45 1 335 1 100 1 337 1 51 1 226 1 288 2 169 1 290 1 150 1 195 1 242 1 266 1 295 1 
25 1 197 1 324 1 157 1 66 1 305 1 138 1 15 1 371 1 161 2 351 1 237 1 164 1 142 1 219 1 45 1 335 1 100 1 337 1 51 1 288 2 169 1 290 1 150 1 242 1 266 1 295 1 383 1 
25 1 324 2 132 1 58 2 8 1 251 1 154 2 253 1 66 1 305 1 15 1 371 2 161 4 282 2 335 1 121 2 80 1 102 1 263 1 288 2 289 1 169 1 
196 1 25 1 197 1 324 2 132 1 58 2 8 1 206 1 154 2 251 1 157 1 34 1 253 1 66 1 305 1 138 1 15 1 371 2 161 4 351 1 164 1 142 1 282 2 335 1 121 2 100 1 80 1 337 1 102 1 226 1 263 1 288 2 169 1 290 1 195 1 242 1 295 1 
25 1 132 1 324 2 58 1 228 1 8 1 203 1 251 1 154 1 253 1 66 1 305 1 15 1 371 1 234 1 161 3 142 1 282 1 335 1 121 1 80 1 52 1 288 2 289 1 263 1 169 1 290 1 264 1 341 1 
25 2 362 2 324 9 132 3 58 6 272 1 8 3 183 1 251 3 110 1 253 3 305 2 15 2 371 10 161 19 258 1 18 1 374 2 144 1 377 1 312 1 80 3 287 1 102 3 288 4 263 3 169 2 128 1 319 1 382 2 
25 3 362 2 325 2 324 14 132 3 58 4 272 2 8 2 183 2 184 1 251 3 110 1 253 2 305 3 15 3 371 12 235 1 161 26 162 1 18 1 374 1 144 1 312 2 378 1 80 2 287 1 102 2 288 6 263 3 381 1 169 3 319 2 382 4 107 1 
58 8 152 1 8 4 251 4 110 1 158 1 253 5 305 3 15 3 161 41 162 1 258 1 18 1 166 1 119 1 312 3 80 4 263 4 169 3 319 1 25 3 362 4 268 1 132 5 324 20 325 1 272 3 183 2 31 1 184 1 371 21 235 1 374 1 144 1 377 1 378 1 239 1 287 1 102 4 288 6 381 1 382 4 107 1 
25 4 268 1 362 4 325 2 324 20 132 5 58 7 152 1 272 3 8 3 31 1 183 2 184 1 251 4 110 1 158 1 253 4 305 4 15 4 371 18 235 1 161 38 162 1 258 1 18 1 374 1 166 1 119 1 144 1 377 1 239 1 378 1 312 3 80 3 287 1 102 4 288 8 263 4 381 1 169 4 319 1 382 4 107 1 
25 2 268 1 362 4 325 1 324 27 132 8 58 14 152 1 87 2 272 2 8 7 31 1 183 1 184 1 251 7 110 1 158 1 253 8 305 2 15 2 371 25 235 1 161 52 162 1 258 2 18 1 374 1 166 1 119 1 144 1 378 1 312 4 80 7 287 1 102 7 288 4 263 7 381 1 169 2 319 1 382 4 107 1 
54 1 236 1 1 1 122 1 73 1 176 1 103 1 368 1 77 1 62 1 
175 1 353 1 
54 1 236 1 1 1 26 1 73 1 176 1 368 1 139 1 205 1 
311 1 316 1 
78 1 291 1 187 1 
54 1 1 1 2 1 176 1 178 1 228 1 363 1 203 1 135 1 231 1 368 1 92 1 370 1 37 1 94 1 69 1 236 1 210 1 141 1 73 1 96 2 142 1 167 1 223 1 52 1 104 1 290 1 264 1 129 1 
54 1 1 1 2 1 176 1 178 1 228 1 363 1 203 1 135 1 231 1 368 1 92 1 370 1 37 1 94 1 69 1 236 1 210 1 141 1 73 1 96 2 142 1 167 1 223 1 52 1 104 1 290 1 264 1 129 1 
54 1 1 1 2 1 176 1 178 1 228 1 363 1 203 1 135 1 231 1 368 1 92 1 370 1 37 1 94 1 69 1 236 1 210 1 141 1 73 1 96 2 142 1 167 1 223 1 52 1 104 1 290 1 264 1 129 1 
311 1 316 1 78 1 
311 1 316 1 78 1 
291 1 187 1 
78 1 291 1 187 1 
55 1 13 1 
54 1 175 1 243 1 1 1 55 1 176 1 363 1 228 2 203 2 155 1 303 1 368 1 92 1 13 1 37 1 38 1 236 1 68 1 353 1 73 1 96 1 142 2 167 1 147 1 52 2 290 2 266 1 
25 1 197 1 324 1 247 1 27 1 228 2 180 1 157 2 66 1 305 1 15 1 371 1 160 1 351 1 161 2 164 2 215 1 142 2 45 1 335 1 100 2 337 1 289 1 288 2 359 1 169 1 290 2 170 2 150 1 82 1 295 1 
196 1 174 1 298 1 351 1 197 1 164 2 61 1 328 1 249 1 204 2 100 2 285 1 207 1 157 2 224 1 225 1 36 1 294 1 24 1 
174 1 351 1 197 1 164 1 61 1 328 1 249 1 204 2 100 1 285 1 230 1 207 1 157 1 224 1 225 1 36 1 24 1 
351 1 197 1 164 1 333 1 61 1 375 1 308 1 100 1 356 1 337 1 51 1 157 1 294 1 295 1 
174 1 298 1 351 1 197 1 164 1 61 1 328 1 249 1 204 2 100 1 285 1 207 1 157 1 224 1 225 1 36 1 294 1 24 1 
358 1 
47 1 229 1 279 1 192 1 270 1 88 1 99 1 
297 1 270 1 201 1 88 1 89 1 92 1 349 1 116 1 75 1 283 1 376 1 221 1 46 1 47 1 167 1 192 2 339 1 
196 1 297 4 197 4 5 2 201 5 251 2 157 3 302 1 11 1 253 2 111 2 16 2 351 3 352 2 115 2 212 6 164 3 21 2 75 12 260 2 216 3 23 1 221 6 167 5 80 2 124 1 262 2 263 2 127 1 173 2 83 2 132 2 270 9 88 2 89 3 274 2 232 1 91 2 92 5 279 1 283 4 99 1 46 4 100 3 47 8 337 10 51 1 338 6 192 8 339 4 292 2 242 3 53 1 295 3 
297 2 362 1 132 2 270 8 272 1 200 1 201 1 88 2 89 1 184 1 251 2 253 2 91 1 92 1 235 1 162 1 212 5 75 6 260 1 283 2 23 1 46 2 221 3 312 1 47 5 378 1 167 1 80 2 50 1 338 5 192 5 262 2 339 2 263 2 107 1 
297 1 268 1 132 1 178 1 270 1 228 1 31 1 203 1 135 1 158 1 369 1 92 1 370 1 210 1 141 1 142 1 283 1 46 1 47 1 167 1 262 1 339 1 52 1 317 1 290 1 264 1 
297 1 279 1 270 1 283 1 99 1 88 1 46 1 47 1 192 1 339 1 
115 1 212 5 132 2 75 10 260 1 270 5 221 5 251 2 47 5 80 2 338 5 192 5 262 2 263 2 253 2 
89 1 167 1 192 1 92 1 88 1 201 1 
297 1 197 1 270 2 201 4 89 2 90 1 157 4 11 2 91 2 92 3 351 1 163 1 20 1 164 4 375 1 283 2 308 1 23 2 46 2 100 4 47 2 167 3 337 1 124 1 51 2 339 2 360 1 265 1 295 1 
25 1 197 1 228 2 203 2 157 1 34 1 66 1 305 1 138 1 15 1 371 1 141 1 161 1 351 1 164 1 142 3 45 1 335 1 100 1 337 1 51 1 52 2 226 1 288 2 169 1 126 1 290 3 264 2 195 1 242 1 266 1 295 1 
297 1 212 2 75 4 270 1 152 1 283 1 88 2 23 1 221 2 46 1 47 2 338 2 192 4 339 1 91 1 
54 1 213 1 368 1 
54 1 55 1 103 1 368 1 28 1 
54 1 213 1 368 1 
54 1 213 1 368 1 
54 1 368 1 74 1 
54 1 368 1 74 1 
54 1 368 1 74 1 
54 1 368 1 
236 1 1 1 
161 8 25 2 268 1 132 1 324 4 325 1 58 3 152 1 8 1 166 1 119 1 31 1 102 2 158 1 253 1 288 4 169 2 305 2 15 2 371 4 
229 1 161 6 102 2 268 1 324 3 132 1 158 1 253 1 58 2 152 1 166 1 119 1 31 1 371 3 
161 4 25 1 132 1 324 2 58 2 8 1 251 1 80 1 123 1 102 1 253 1 288 2 263 1 169 1 305 1 15 1 371 2 
161 7 258 1 362 2 324 3 132 1 58 2 272 1 8 1 312 1 251 1 80 1 102 1 253 1 263 1 371 4 
25 2 268 2 362 2 132 3 324 11 325 2 58 9 152 1 87 1 8 4 31 1 251 2 158 2 253 3 305 2 15 2 371 12 277 1 161 23 258 1 166 1 119 1 118 1 312 2 80 2 102 5 263 2 288 4 169 2 
161 1 362 1 371 1 
312 1 161 1 324 1 
161 6 25 1 115 1 132 1 324 3 58 3 8 1 251 1 123 1 80 1 102 2 288 2 263 1 253 1 169 1 305 1 15 1 371 3 
25 1 362 1 324 6 132 2 58 2 272 1 8 1 184 1 251 2 253 2 305 1 15 1 371 6 235 1 161 12 162 1 312 1 378 1 80 2 287 1 102 1 288 2 263 2 169 1 107 1 
161 6 268 1 132 1 324 3 58 2 8 1 31 1 102 1 158 1 253 1 371 3 
161 3 25 1 268 1 324 1 325 1 58 2 8 1 166 1 119 1 118 1 102 1 158 1 288 2 169 1 305 1 15 1 371 2 
161 5 268 1 132 1 324 2 58 1 31 1 102 1 158 1 317 1 253 1 371 3 
161 2 25 1 132 1 324 2 58 1 8 1 287 1 288 2 263 1 169 1 305 1 15 1 
161 4 25 1 132 1 324 2 58 2 8 1 251 1 80 1 287 1 102 1 253 1 288 2 263 1 169 1 305 1 15 1 371 2 
161 3 25 3 268 1 325 1 324 1 58 2 8 1 118 1 377 1 287 1 102 1 158 1 288 6 169 3 305 3 15 3 371 2 
25 5 268 3 362 4 325 2 324 16 132 5 58 12 152 1 272 1 8 5 31 2 134 1 251 3 158 3 64 1 253 5 305 5 15 5 371 18 161 34 258 1 166 1 119 1 118 1 377 1 312 3 123 1 80 3 287 1 102 7 288 10 263 3 169 5 241 1 
25 1 362 1 268 1 132 1 324 4 58 2 152 1 272 1 31 1 184 1 158 1 253 1 305 1 15 1 371 4 161 8 166 1 119 1 312 1 287 1 102 2 288 2 169 1 
25 2 268 1 362 2 324 6 132 2 58 3 152 1 272 1 8 1 31 1 184 1 251 1 158 1 253 1 305 2 15 2 371 5 161 11 258 1 166 1 119 1 312 1 123 1 287 1 102 2 288 4 263 1 169 2 
25 3 268 1 362 1 324 9 132 3 325 1 58 4 152 1 272 1 8 1 31 1 184 1 251 2 158 1 253 3 305 3 15 3 371 10 235 1 161 19 162 1 166 1 119 1 312 1 378 1 123 1 80 2 287 1 102 3 288 6 263 2 169 3 107 1 
25 3 268 1 362 1 325 1 324 10 132 3 58 5 152 1 272 1 8 2 31 1 184 1 251 2 158 1 253 2 305 3 15 3 371 7 235 1 161 17 162 1 166 1 119 1 312 1 378 1 123 1 80 1 287 1 102 3 288 6 263 2 169 3 107 1 
25 1 362 1 268 1 132 1 324 4 58 2 152 1 272 1 31 1 184 1 158 1 253 1 305 1 15 1 371 4 161 8 166 1 119 1 312 1 287 1 102 2 288 2 169 1 
25 1 362 1 324 6 132 2 58 2 272 1 8 1 184 1 251 2 253 2 305 1 15 1 371 6 235 1 161 12 162 1 312 1 378 1 80 2 287 1 102 1 288 2 263 2 169 1 107 1 
25 4 268 1 362 1 324 10 132 3 325 2 58 5 152 1 272 1 8 2 31 1 184 1 251 2 158 1 253 2 305 4 15 4 371 8 235 1 161 18 162 1 166 1 119 1 312 1 378 1 123 1 80 1 287 1 102 3 288 8 263 2 169 4 107 1 
25 4 362 1 324 9 132 3 325 2 58 6 272 1 8 3 184 1 251 3 253 2 305 4 15 4 371 7 235 1 161 16 162 1 377 1 312 1 378 1 80 2 287 1 102 3 288 8 263 3 169 4 107 1 
161 7 268 3 132 1 324 3 58 6 166 1 8 3 119 2 31 1 102 3 158 3 253 1 371 4 
25 4 268 1 362 1 324 10 132 3 325 2 58 4 152 1 272 1 8 1 31 1 184 1 251 2 158 1 253 2 305 4 15 4 371 8 235 1 161 18 162 1 166 1 119 1 377 1 312 1 378 1 80 1 287 1 102 3 288 8 263 2 169 4 107 1 
4 1 290 1 142 1 228 1 329 1 190 1 266 1 
4 1 76 1 142 1 218 1 228 1 98 1 190 1 329 1 202 1 10 1 290 1 266 1 
229 1 100 1 351 1 337 1 197 1 157 1 51 1 164 1 375 1 308 1 295 1 
351 1 197 1 164 1 59 1 142 2 228 1 203 1 100 1 337 1 51 1 157 1 52 1 34 1 290 2 138 1 242 1 266 1 295 1 
351 1 197 1 5 1 21 1 164 1 189 1 59 1 142 2 228 2 43 1 203 1 100 1 337 3 157 1 52 2 11 1 34 1 290 2 370 1 138 1 242 2 266 1 295 2 
131 1 197 1 5 1 59 1 228 2 203 1 157 2 11 1 138 1 370 1 351 1 164 2 21 1 189 1 142 2 43 1 100 2 337 3 52 2 290 2 242 2 266 1 383 1 295 2 
131 1 197 1 5 1 201 1 88 1 157 3 11 1 111 1 92 2 112 1 351 1 188 1 164 3 21 1 216 1 100 3 167 2 337 4 51 1 192 1 242 1 295 1 173 1 
131 1 351 1 197 1 5 1 21 1 164 3 216 1 88 1 201 1 100 3 167 2 337 4 51 1 157 3 192 1 11 1 292 1 111 1 92 2 242 1 173 1 295 1 
100 1 351 1 197 1 157 1 367 1 164 1 
196 1 70 1 351 2 246 1 197 3 19 1 164 6 247 1 249 1 100 7 337 3 51 2 157 7 367 1 12 1 232 1 170 1 151 1 242 1 233 1 295 2 
196 1 197 1 58 2 59 1 152 1 203 1 206 1 154 1 157 1 158 1 253 1 348 1 66 2 305 2 15 2 351 1 161 6 164 1 166 1 119 1 121 1 226 1 169 2 82 1 266 2 25 2 268 1 132 1 324 3 228 1 31 1 34 1 138 1 371 3 142 2 282 1 335 2 100 1 337 1 102 2 52 1 288 4 289 1 290 2 195 1 242 1 295 1 
297 2 243 1 83 1 270 1 88 1 201 2 89 1 157 1 111 1 92 3 16 1 279 1 352 1 164 1 216 1 283 2 99 1 46 2 47 1 100 1 167 3 337 2 51 1 124 1 192 1 339 2 292 1 173 1 
196 1 100 2 351 1 337 2 197 2 157 2 367 1 164 2 232 1 111 1 242 1 53 1 295 1 
196 1 131 1 351 1 197 1 164 4 375 1 308 1 63 1 100 4 337 1 51 1 157 4 295 1 
70 1 130 1 351 1 197 2 355 1 164 2 100 2 337 1 157 2 11 1 254 1 242 1 233 1 295 1 
100 1 351 1 197 1 157 1 51 1 225 1 164 1 36 1 328 1 204 1 
196 1 100 2 351 1 337 1 197 1 157 2 164 2 247 1 359 1 249 1 295 1 
196 1 351 2 197 2 19 1 164 4 247 1 375 1 308 1 63 1 100 5 337 3 51 1 157 5 11 1 12 1 295 2 
196 1 351 2 197 2 19 1 164 4 247 1 375 1 308 1 63 1 100 5 337 3 51 1 157 5 11 1 81 1 295 2 
351 1 197 1 164 1 59 1 142 2 228 1 203 1 100 1 337 1 51 1 157 1 52 1 290 2 138 1 242 1 266 1 295 1 383 1 
70 1 351 1 246 1 197 2 164 1 100 1 337 1 157 1 11 1 232 1 242 1 233 1 295 1 
330 1 379 1 35 1 193 1 266 1 
243 1 323 1 189 1 88 1 43 1 9 1 330 2 167 2 379 2 336 1 191 1 192 1 146 1 35 2 193 1 92 2 370 1 266 1 173 1 
27 1 142 1 228 1 180 1 379 1 35 1 193 1 290 1 160 1 
336 1 193 1 9 1 
229 1 109 1 41 1 276 1 
85 1 109 1 347 1 97 1 41 1 327 1 276 1 
259 1 125 1 327 1 
85 3 109 1 60 1 97 1 326 2 41 1 327 3 286 1 347 1 113 1 276 1 296 1 
275 1 85 2 109 1 347 1 97 1 41 1 327 2 276 1 321 1 
285 1 71 1 314 1 85 1 347 1 97 1 60 1 41 1 327 1 328 1 204 1 
85 1 109 1 347 1 97 1 60 1 41 1 327 1 
85 1 109 2 347 1 97 1 60 1 327 1 276 1 
343 1 85 2 109 1 60 1 97 2 271 1 41 1 327 2 181 1 347 2 
85 3 280 1 354 1 109 1 60 1 97 1 217 1 327 3 41 2 275 2 314 1 347 1 276 1 
85 2 109 1 60 1 97 1 41 1 327 2 328 1 204 2 32 1 285 1 275 1 36 1 347 1 276 1 24 1 
85 4 280 1 109 1 60 1 97 2 327 4 41 2 275 2 314 1 347 2 227 1 276 1 321 1 
85 1 109 1 347 1 97 1 60 1 41 1 327 1 276 1 
85 4 280 1 109 2 326 1 97 1 327 4 41 3 275 2 286 1 314 1 347 1 194 1 276 2 296 1 
85 2 109 1 60 1 97 1 41 1 327 2 299 1 33 1 101 1 275 1 347 1 276 1 
85 3 109 1 60 1 97 1 326 2 41 1 327 3 79 1 286 2 347 1 276 1 296 1 
331 2 306 1 22 1 41 2 
85 1 347 1 97 1 60 1 327 1 361 1 
275 1 85 2 109 1 347 1 217 1 97 1 60 1 41 1 327 2 276 1 
57 1 
85 1 109 1 347 1 97 1 60 1 41 1 327 1 276 1 
275 1 85 3 109 1 347 1 217 1 326 1 97 1 60 1 41 1 327 3 276 1 
314 1 280 1 194 1 41 1 
109 1 41 1 

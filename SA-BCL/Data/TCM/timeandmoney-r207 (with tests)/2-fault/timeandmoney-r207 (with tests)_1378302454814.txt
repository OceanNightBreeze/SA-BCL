#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 3 317 6 0 9 108 2 285 2 24 1 164 1 290 4 138 5 187 1 43 1 243 2 139 2 70 1 277 1 72 1 222 1 27 2 377 1 11 1 50 9 253 1 255 2 228 1 203 1 381 1 259 1 154 2 
313 3 317 6 0 9 108 2 285 2 24 1 164 1 290 4 138 5 187 1 43 1 243 2 139 2 70 1 277 1 72 1 222 1 27 2 377 1 11 1 50 9 253 1 228 1 255 2 203 1 381 1 259 1 154 2 
313 4 317 7 0 10 108 2 285 2 24 1 164 1 290 5 138 6 187 1 43 1 243 2 139 2 70 1 277 1 72 1 222 1 27 2 377 1 11 1 50 10 253 1 228 1 255 2 203 1 381 1 259 1 154 2 
313 2 317 4 0 7 108 2 285 2 24 1 164 1 290 3 138 4 187 1 43 1 243 2 139 2 277 1 72 1 222 1 27 2 377 1 11 1 50 7 253 1 228 1 255 1 203 1 381 1 259 1 154 2 
313 1 277 1 317 3 377 1 27 1 0 4 11 1 50 4 108 1 255 2 203 1 290 2 138 3 43 1 243 1 139 1 70 1 154 1 
172 1 377 1 27 1 0 2 222 1 11 1 50 2 108 1 285 1 253 1 216 1 138 1 43 1 128 1 243 1 139 1 
313 1 317 1 377 1 27 2 0 3 11 1 50 3 108 2 285 1 24 1 290 1 138 2 43 1 
313 3 101 1 317 7 0 9 108 2 285 1 24 1 164 1 290 4 138 5 187 1 43 1 243 1 139 1 70 1 298 1 277 1 27 2 377 1 11 1 50 9 255 2 203 1 154 1 
313 3 101 1 317 7 0 9 108 2 285 1 24 1 164 1 290 4 138 5 187 1 43 1 243 1 139 1 70 1 298 1 277 1 27 2 377 1 11 1 50 9 255 2 203 1 154 1 
39 1 129 1 160 1 
39 1 242 2 209 1 
8 2 332 2 239 2 378 2 159 2 51 2 328 1 134 1 
237 1 102 1 264 1 104 1 239 3 159 3 134 1 4 1 188 2 273 1 69 1 327 2 328 1 330 1 299 1 250 1 8 2 332 2 26 1 48 1 376 1 49 1 378 2 51 2 74 2 75 1 252 2 199 2 307 1 227 1 174 1 34 1 360 1 382 1 362 1 179 1 364 1 
8 1 332 1 323 1 63 1 239 1 378 1 159 1 51 1 328 1 130 1 
39 1 332 1 103 1 368 1 301 1 239 1 159 1 109 1 323 1 126 1 129 1 153 1 37 1 283 1 
8 1 39 1 332 1 103 1 301 1 378 1 239 1 51 1 159 1 109 2 323 1 126 1 129 1 37 2 283 1 
123 1 182 1 37 1 109 1 57 1 
119 1 39 1 318 1 182 1 129 1 37 2 109 2 57 1 
182 1 37 1 109 1 
17 1 8 1 332 1 63 1 378 1 239 1 51 1 159 1 109 1 323 1 37 1 328 1 57 1 130 1 
39 1 
119 1 39 1 93 1 182 1 129 1 37 2 109 2 57 1 
119 1 39 1 143 2 212 1 182 2 109 5 357 1 333 1 33 1 122 1 335 1 291 2 361 1 129 1 98 1 113 2 37 5 57 2 118 1 
299 1 237 1 8 1 332 1 104 1 26 1 376 1 48 1 145 1 239 2 51 1 159 2 74 1 199 1 163 1 4 1 257 1 382 1 188 1 179 1 
160 1 134 1 
8 1 332 2 339 1 158 1 239 2 378 1 159 2 51 1 134 1 323 1 97 1 
230 1 257 1 137 1 
237 1 299 1 104 1 26 1 48 1 376 1 279 1 239 1 159 1 74 1 199 1 134 1 4 1 382 1 188 1 179 1 
163 1 8 3 332 3 378 1 239 3 159 3 51 3 134 1 
8 1 332 1 323 1 63 1 239 1 159 1 51 1 
8 1 332 1 339 1 378 1 239 1 51 1 159 1 323 1 97 1 
237 1 264 1 103 1 104 1 339 1 239 4 159 4 134 1 109 1 3 1 163 1 4 1 65 1 323 1 188 1 273 1 327 1 328 1 330 1 299 1 250 1 8 3 332 3 26 1 376 1 48 1 145 1 301 1 378 2 51 3 74 1 75 1 252 2 307 1 199 1 227 1 174 1 382 1 126 1 362 1 179 1 37 1 364 1 283 1 
163 1 8 1 332 2 368 1 239 2 159 2 51 1 31 1 134 1 
8 3 39 1 332 3 103 1 145 1 301 1 339 1 378 1 239 3 51 3 159 3 109 1 3 1 163 2 76 1 323 1 126 1 37 1 283 1 
8 2 332 2 339 1 378 1 239 2 51 2 159 2 163 1 230 1 257 1 
237 1 299 1 104 1 48 1 376 1 26 1 239 1 159 1 74 1 199 1 134 1 4 1 382 1 188 1 179 1 
237 1 299 1 104 1 142 1 376 1 26 1 370 1 239 1 159 1 74 1 199 1 134 1 382 1 188 1 179 1 
156 1 284 1 183 1 162 1 110 1 137 2 292 1 272 1 273 1 327 4 91 1 330 2 250 1 49 2 353 1 75 1 252 2 227 1 174 1 202 1 230 2 257 2 14 1 364 1 
8 1 332 1 323 1 301 1 239 1 159 1 51 1 56 1 
8 4 332 5 375 1 368 1 145 1 339 1 239 5 378 1 51 4 159 5 31 1 134 1 163 2 185 1 
8 2 332 2 323 1 63 1 239 2 159 2 51 2 56 1 
340 1 84 1 
340 1 84 1 
347 1 236 1 
347 1 236 1 
347 1 236 1 
316 1 340 1 84 1 
316 1 340 1 84 1 
256 1 340 1 84 1 
147 1 340 2 84 2 247 1 347 1 236 1 
316 1 340 1 84 1 
311 1 340 1 84 1 
311 1 340 1 84 1 
311 1 340 1 84 1 
349 2 350 1 39 1 215 1 340 2 84 2 196 2 95 1 268 3 109 2 64 2 270 1 25 1 260 1 165 1 261 2 326 2 247 1 37 2 
340 1 239 2 84 1 159 2 268 1 134 1 109 1 22 1 64 1 217 1 326 1 8 2 349 1 332 2 171 1 28 1 51 2 303 1 229 1 256 1 260 1 151 1 261 1 37 1 
243 1 139 1 154 1 
216 1 243 1 139 1 
359 1 216 1 139 3 154 2 241 1 100 1 
359 1 216 1 267 1 139 2 154 1 100 1 
359 1 216 1 139 2 154 1 100 2 
263 2 314 1 39 2 182 1 284 1 240 1 109 5 110 1 217 1 291 1 242 3 68 1 292 1 272 1 113 1 246 1 44 2 220 1 119 1 143 1 354 2 303 1 355 1 333 1 358 1 33 3 229 1 335 2 129 1 37 5 57 4 209 1 
16 1 314 2 39 5 182 6 284 3 2 1 109 9 110 3 291 2 242 9 292 3 272 3 113 2 44 6 346 1 220 3 119 1 143 2 354 6 303 4 355 1 198 1 357 1 309 1 200 5 333 1 358 2 123 5 33 8 335 6 129 1 37 9 57 7 208 1 209 3 
314 1 263 1 39 3 284 1 240 1 109 3 110 1 291 1 68 1 242 4 292 1 113 1 272 1 44 2 220 1 143 1 303 1 354 2 357 1 358 1 33 3 335 2 129 1 37 3 57 2 209 2 
314 1 263 2 39 4 284 2 240 1 2 1 109 4 110 2 291 1 242 7 68 1 292 2 113 1 272 2 44 4 220 2 143 1 354 4 303 2 198 1 357 1 309 1 358 1 33 5 335 4 129 1 37 4 57 3 209 3 
26 1 160 1 282 1 
155 1 26 1 
232 1 
26 1 179 1 
299 1 320 1 26 3 177 1 179 1 282 2 
299 1 26 1 179 1 
26 1 214 1 
330 3 192 1 61 1 156 2 49 4 251 1 319 1 284 1 148 2 202 3 334 1 13 1 325 1 272 1 190 1 327 7 169 1 
330 3 192 1 61 1 156 2 49 4 251 1 319 1 284 1 148 2 202 3 334 1 13 1 325 1 272 1 190 1 327 7 169 1 
330 3 192 1 61 1 156 2 157 1 49 4 251 1 319 1 284 1 148 2 202 3 334 1 13 1 325 1 272 1 190 1 327 7 169 1 
61 2 156 5 106 1 319 1 284 4 371 4 20 1 19 1 110 3 288 1 325 1 42 1 292 3 272 4 273 1 114 3 190 5 327 31 169 1 220 3 330 15 192 1 250 1 49 16 251 2 148 3 252 2 227 1 54 1 334 2 174 1 13 2 202 10 181 1 
330 4 192 1 250 2 61 1 156 3 47 1 49 5 251 1 284 1 148 2 252 4 227 2 334 1 202 4 13 1 174 2 325 1 42 1 272 1 273 2 190 1 327 9 169 1 15 1 
38 1 211 1 80 1 317 1 0 2 108 1 285 1 241 1 41 1 23 1 216 1 138 1 188 1 43 1 243 1 167 1 139 2 274 1 329 1 376 1 27 1 377 1 11 1 50 2 74 1 199 1 173 1 356 1 382 1 154 1 
80 1 317 2 0 3 108 1 241 1 285 1 41 1 23 1 216 1 138 1 188 1 43 1 243 1 167 1 139 2 274 1 329 1 331 1 376 1 27 1 11 1 50 3 74 1 199 1 173 1 356 1 382 1 336 1 312 1 154 1 
317 2 0 2 285 1 241 1 41 1 23 1 216 1 138 1 188 1 43 1 243 1 167 1 139 2 274 1 331 1 376 1 11 1 50 2 74 1 199 1 173 1 356 1 382 1 312 1 154 1 
238 1 18 1 104 1 376 1 26 1 27 1 0 1 50 1 83 1 74 1 108 1 285 2 199 1 41 2 356 2 254 1 23 2 321 1 88 1 382 1 188 1 179 1 336 1 
211 1 80 1 0 1 108 1 285 1 241 1 41 1 23 1 216 1 188 1 243 1 167 1 139 2 274 1 329 1 376 1 27 1 377 1 50 1 74 1 199 1 173 1 356 1 382 1 312 1 154 1 
94 1 
338 2 39 2 132 2 182 6 239 1 86 2 291 1 242 2 188 2 193 1 9 1 143 1 194 2 301 1 146 1 52 1 199 2 254 1 205 4 153 1 99 1 209 2 314 1 104 2 103 1 368 1 266 2 159 1 109 5 321 1 322 1 323 1 113 1 275 1 119 3 332 1 26 1 376 1 74 2 73 1 120 2 226 1 333 1 33 2 176 1 335 2 382 1 126 1 129 1 179 1 281 2 180 1 37 5 337 1 283 1 
103 1 368 1 132 1 182 2 239 1 159 1 109 3 323 1 119 1 9 1 332 1 301 1 146 1 93 1 52 1 73 1 226 1 126 1 205 2 153 1 37 3 283 1 
39 1 103 1 368 1 182 1 239 1 159 1 109 3 323 1 119 1 9 1 332 1 301 1 146 1 93 1 52 1 73 1 226 1 126 1 205 3 153 1 129 1 281 1 37 3 283 1 
338 1 39 1 103 1 368 1 132 1 182 2 239 1 159 1 109 3 323 1 119 1 9 1 332 1 301 1 93 1 146 1 52 1 73 1 226 1 126 1 205 3 153 1 129 1 281 1 37 3 283 1 
338 4 39 5 103 1 368 1 132 4 182 7 266 2 239 1 159 1 86 2 109 5 322 1 291 1 323 1 113 1 296 1 119 3 46 1 9 1 332 1 143 1 194 2 301 1 146 1 93 1 10 1 52 1 73 1 120 2 226 1 333 1 33 1 335 1 126 1 205 6 78 1 129 5 153 1 281 4 99 1 37 5 207 1 209 2 283 1 
338 2 39 2 132 2 182 4 239 1 86 2 291 1 242 2 9 1 143 1 301 1 194 2 146 1 52 1 205 4 153 1 99 1 209 2 103 1 368 1 266 2 159 1 109 4 322 1 323 1 113 1 275 1 119 2 332 1 73 1 120 2 226 1 333 1 33 1 335 1 126 1 129 1 281 2 37 4 283 1 
338 2 39 1 103 1 368 1 132 2 182 4 266 2 239 1 159 1 86 2 109 4 322 1 323 1 291 1 113 1 296 1 119 2 9 1 332 1 143 1 194 2 301 1 146 1 52 1 73 1 120 2 226 1 333 1 33 1 335 1 126 1 205 4 78 1 129 1 153 1 281 2 99 1 37 4 207 1 209 2 283 1 
338 2 39 1 103 1 368 1 132 2 182 4 266 2 239 1 159 1 86 2 109 4 322 1 323 1 291 1 113 1 296 1 119 2 9 1 332 1 143 1 194 2 301 1 146 1 52 1 73 1 120 2 226 1 333 1 33 1 335 1 126 1 205 4 78 1 129 1 153 1 281 2 99 1 37 4 207 1 209 2 283 1 
338 2 39 1 103 1 368 1 132 2 182 4 239 1 159 1 86 2 161 1 109 4 323 1 291 1 242 2 113 1 116 1 119 2 374 2 9 1 332 1 143 1 144 1 301 1 146 1 52 1 73 1 120 2 226 1 333 1 33 1 335 1 231 2 126 1 205 4 78 1 129 1 153 1 281 2 99 1 37 4 283 1 
338 3 39 1 103 1 368 1 132 3 182 5 266 2 239 1 159 1 86 2 109 4 322 1 291 1 323 1 113 1 296 1 119 2 9 1 332 1 143 1 194 2 301 1 146 1 10 1 52 1 73 1 120 2 226 1 333 1 33 1 335 1 126 1 205 5 78 1 129 1 153 1 281 3 99 1 37 4 207 1 209 2 283 1 
338 3 39 1 103 1 368 1 132 3 182 5 266 2 239 1 159 1 86 2 109 4 322 1 291 1 323 1 113 1 296 1 119 2 9 1 332 1 143 1 194 2 301 1 146 1 10 1 52 1 73 1 120 2 226 1 333 1 33 1 335 1 126 1 205 5 78 1 129 1 153 1 281 3 99 1 37 4 207 1 209 2 283 1 
338 2 39 1 132 2 182 4 239 1 86 2 291 1 242 2 9 1 143 1 144 1 301 1 146 1 52 1 205 4 153 1 99 1 103 1 368 1 159 1 109 4 323 1 113 1 275 1 119 2 374 2 332 1 73 1 120 2 226 1 333 1 33 1 335 1 126 1 231 2 129 1 281 2 37 4 283 1 
330 3 192 1 250 1 61 1 156 2 49 3 284 1 160 1 148 1 75 1 252 2 134 2 227 1 202 2 334 1 174 1 230 1 257 1 137 1 325 1 272 1 273 1 327 6 91 1 169 1 364 1 
365 1 102 1 156 1 369 1 284 1 371 3 20 1 134 1 372 1 110 1 137 11 292 2 272 2 273 2 114 3 190 1 327 14 220 2 330 6 250 2 351 1 49 8 75 2 252 4 227 2 202 2 174 2 230 4 257 11 362 1 127 1 181 1 364 1 
237 1 102 1 104 1 239 2 159 2 134 1 343 1 163 1 4 1 188 1 273 1 327 2 170 1 299 1 330 1 250 1 8 1 332 1 26 1 376 1 48 1 279 1 145 1 49 1 74 1 51 1 75 1 199 1 252 2 227 1 174 1 175 1 230 1 382 1 362 1 179 1 127 1 364 1 
237 2 239 3 133 2 284 3 85 1 286 1 134 2 4 2 137 7 188 3 292 2 190 4 299 2 192 1 8 1 250 3 48 2 145 1 49 10 51 1 148 1 199 3 252 6 307 2 202 8 257 7 362 1 312 1 364 3 102 1 366 2 61 1 156 4 104 1 105 1 265 2 159 3 163 1 110 2 325 1 272 3 273 3 327 20 169 1 220 2 330 10 332 1 376 2 26 2 74 3 223 2 75 3 227 3 334 1 174 3 230 7 382 2 127 1 179 2 
38 1 102 1 104 2 239 1 159 1 135 1 163 1 321 1 6 1 188 8 273 2 69 2 327 2 91 1 330 1 8 1 250 2 332 1 376 2 26 3 49 1 51 1 74 7 29 1 75 2 199 8 252 4 308 1 227 2 121 1 254 1 174 2 382 2 233 1 362 1 179 2 312 1 363 1 364 2 
315 1 156 1 339 1 239 1 159 1 284 1 110 1 137 1 292 1 272 1 273 1 327 3 220 1 330 2 8 1 250 1 332 1 49 1 378 1 51 1 75 1 252 2 227 1 202 1 174 1 230 1 257 1 127 1 364 1 
250 1 49 2 75 1 252 2 227 1 202 1 174 1 230 1 257 1 14 1 137 1 292 1 272 1 273 1 190 1 327 2 91 1 364 1 
330 2 250 1 156 1 353 1 284 1 75 1 252 2 227 1 110 1 202 1 174 1 230 1 257 1 137 1 273 1 327 2 91 1 364 1 
156 1 284 1 110 1 137 2 292 1 272 1 273 1 190 1 327 4 220 1 91 1 330 2 250 1 49 2 75 1 252 2 227 1 174 1 202 2 230 2 257 2 364 1 
250 1 49 2 75 1 252 2 121 1 227 1 202 1 174 1 230 1 257 1 14 1 137 1 292 1 272 1 273 1 190 1 327 2 364 1 
330 2 250 1 156 1 353 1 284 1 75 1 252 2 121 1 227 1 110 1 202 1 174 1 230 1 257 1 137 1 273 1 327 2 364 1 
156 1 284 1 110 1 137 2 292 1 272 1 273 1 190 1 327 4 220 1 330 2 250 1 49 2 75 1 252 2 227 1 121 1 174 1 202 2 230 2 257 2 364 1 
330 2 250 1 156 1 49 2 284 1 75 1 252 2 227 1 110 1 202 2 174 1 230 2 257 2 137 2 292 1 272 1 273 1 190 1 327 4 220 1 364 1 
237 1 102 1 104 1 239 1 159 1 134 1 4 1 188 1 273 1 327 2 299 1 330 1 250 1 376 1 48 1 26 1 49 1 74 1 75 1 307 1 199 1 252 2 227 1 174 1 382 1 362 1 179 1 364 1 
237 1 102 1 104 1 370 1 239 1 159 1 134 1 188 1 273 1 327 2 299 1 330 1 250 1 376 1 142 1 26 1 49 1 74 1 75 1 199 1 252 2 227 1 174 1 382 1 178 1 362 1 179 1 364 1 
156 1 284 1 110 1 137 2 292 1 272 1 273 1 190 1 327 4 220 1 330 2 250 1 49 2 75 1 252 2 227 1 174 1 202 2 230 2 257 2 127 1 364 1 
237 1 366 1 38 1 156 1 239 1 284 1 159 1 110 1 4 1 137 2 188 1 292 1 272 1 273 1 190 1 327 4 220 1 330 2 299 1 250 1 376 1 48 1 26 1 49 2 74 1 75 1 307 1 199 1 252 2 227 1 202 2 174 1 230 2 257 2 382 1 179 1 364 1 
339 1 239 1 284 1 159 1 341 1 110 1 137 1 292 1 272 1 273 1 190 1 327 3 220 1 330 1 8 1 250 1 332 1 49 2 378 1 51 1 75 1 252 2 227 1 202 1 174 1 230 1 257 1 127 1 364 1 
59 1 156 3 284 3 371 2 20 1 110 3 289 2 112 1 292 3 272 3 273 2 114 1 190 3 327 19 220 3 348 1 330 10 250 2 141 1 49 9 96 1 252 4 12 1 227 2 174 2 202 6 55 1 206 2 181 1 15 1 
156 2 82 1 284 2 371 2 110 2 289 4 112 1 42 2 292 3 272 3 273 3 114 2 190 2 168 1 327 26 191 1 220 3 348 1 330 12 250 3 141 1 49 14 304 1 252 6 12 2 227 3 202 4 174 3 55 2 204 1 206 1 152 1 181 2 15 1 
61 1 156 4 82 1 284 5 371 4 20 1 269 1 110 4 289 4 325 1 112 1 42 1 292 4 272 5 273 3 114 3 168 1 190 4 191 1 327 41 169 1 220 4 348 1 330 21 192 1 250 3 141 1 49 20 304 1 148 1 96 1 252 6 12 1 227 3 334 1 174 3 202 8 55 2 204 1 206 1 152 1 181 3 15 1 
61 1 156 4 82 1 284 4 371 4 20 1 269 1 110 3 289 4 325 1 112 1 42 2 292 4 272 5 273 4 114 3 168 1 190 3 191 1 327 38 169 1 220 4 348 1 330 18 192 1 250 4 141 1 49 20 304 1 148 1 96 1 252 8 12 1 227 4 334 1 174 4 202 7 55 2 204 1 206 1 152 1 181 3 15 1 
365 2 61 1 156 7 82 1 284 8 371 4 20 2 110 7 289 4 325 1 112 1 42 1 292 7 272 8 273 2 114 4 168 1 190 7 191 1 327 52 169 1 220 7 348 1 330 25 192 1 250 2 141 1 49 27 304 1 148 1 252 4 12 1 227 2 334 1 174 2 202 14 55 1 204 1 206 1 152 1 181 2 15 1 
349 1 165 1 340 1 84 1 90 1 326 1 261 1 95 1 247 1 64 1 
256 1 22 1 
349 1 71 1 271 1 221 1 340 1 84 1 326 1 261 1 64 1 
349 1 350 1 39 1 215 1 340 1 84 1 196 1 95 1 268 2 109 1 64 1 25 1 260 1 165 1 261 1 326 1 247 1 37 1 
349 1 350 1 39 1 215 1 340 1 84 1 196 1 95 1 268 2 109 1 64 1 25 1 260 1 165 1 261 1 326 1 247 1 37 1 
349 1 350 1 39 1 215 1 340 1 84 1 196 1 95 1 268 2 109 1 64 1 25 1 260 1 165 1 261 1 326 1 247 1 37 1 
316 1 147 1 107 1 
316 1 147 1 107 1 
311 1 213 1 
147 1 311 1 213 1 
171 1 28 1 
239 2 340 1 159 2 84 1 268 1 134 1 109 1 22 1 64 1 217 1 326 1 349 1 8 2 350 1 300 1 332 2 171 1 28 1 303 1 51 2 196 1 229 1 256 1 151 1 261 1 37 1 57 1 
316 1 107 1 
147 1 311 1 213 1 
102 1 62 1 239 2 159 2 342 1 135 1 188 2 189 1 273 1 69 2 327 2 249 1 330 1 250 1 332 2 376 1 26 1 49 1 74 2 75 1 199 2 252 2 227 1 174 1 382 1 77 1 362 1 179 1 127 1 363 1 364 1 
373 1 58 1 329 1 38 1 367 1 376 1 74 2 241 1 199 2 173 1 23 1 216 1 382 1 188 2 243 1 139 2 312 1 167 1 154 1 
329 1 367 1 376 1 74 1 241 1 199 1 173 1 23 1 216 1 382 1 188 1 67 1 243 1 139 2 312 1 167 1 154 1 
373 1 60 1 104 1 376 1 26 1 74 1 199 1 23 1 254 1 321 1 88 1 382 1 188 1 179 1 
373 1 58 1 329 1 367 1 376 1 74 1 241 1 199 1 173 1 23 1 216 1 382 1 188 1 243 1 139 2 312 1 167 1 154 1 
81 1 
33 1 122 1 39 1 335 1 212 1 129 1 160 1 
119 1 39 2 143 1 194 1 182 1 266 1 109 1 333 1 33 1 322 1 291 1 335 1 242 1 129 1 113 1 37 1 209 1 
38 1 39 8 182 5 284 2 40 2 136 1 291 4 188 3 242 12 292 2 44 6 299 3 143 4 306 2 354 6 199 3 53 1 310 2 209 6 314 2 155 3 104 1 212 1 265 2 214 2 109 5 21 2 110 2 320 1 66 2 113 4 272 2 220 2 276 2 119 3 376 3 26 10 74 3 32 1 333 4 122 1 33 9 335 8 382 4 125 1 126 2 36 1 129 2 179 3 235 2 79 2 37 5 337 1 282 2 
314 1 39 5 82 1 182 1 284 2 371 1 109 1 110 2 344 1 291 2 242 6 292 2 113 2 272 2 114 1 168 1 44 5 191 1 220 2 119 1 278 1 143 2 354 5 304 1 333 2 33 8 310 2 335 5 204 1 129 2 235 1 37 1 181 1 337 1 209 3 
17 1 61 1 63 1 239 1 159 1 284 1 109 1 186 1 323 1 291 1 113 1 272 2 328 1 192 1 8 1 332 1 143 1 378 1 51 1 333 1 334 1 33 2 310 2 335 2 235 1 37 1 207 1 130 1 
39 1 143 1 212 1 333 1 122 1 33 1 291 1 335 1 129 1 113 1 
39 5 265 1 354 5 284 2 110 2 33 5 310 2 335 5 242 10 292 2 235 1 272 2 44 5 220 2 209 5 
119 1 39 1 182 1 129 1 37 1 109 1 
314 2 104 2 182 4 109 3 321 1 345 1 136 2 291 2 188 4 113 2 219 1 119 2 193 1 376 1 26 1 143 2 74 4 199 4 357 1 333 1 254 1 33 2 176 1 335 2 382 1 179 1 36 1 37 3 337 2 
237 1 264 1 104 1 239 3 159 3 134 1 4 1 188 1 273 1 327 1 328 1 330 1 299 1 8 2 250 1 332 2 48 1 376 1 26 1 378 2 74 1 51 2 75 1 252 2 199 1 307 1 227 1 174 1 382 1 362 1 179 1 364 1 
314 1 39 4 143 1 354 2 148 1 333 1 33 1 335 2 291 1 242 4 129 2 113 1 44 2 337 1 209 2 
245 1 326 1 64 1 
245 1 326 1 64 1 
171 1 379 1 326 1 95 1 64 1 
245 1 326 1 64 1 
244 1 326 1 64 1 
244 1 326 1 64 1 
244 1 326 1 64 1 
326 1 64 1 
340 1 84 1 
330 4 192 1 250 2 61 1 156 2 49 4 284 1 148 1 252 4 227 2 202 3 174 2 334 1 325 1 42 1 272 1 273 2 190 1 327 8 169 1 
330 3 192 1 202 2 334 1 61 1 156 2 49 3 325 1 284 1 272 1 160 1 148 1 327 6 169 1 
330 2 250 1 156 1 49 2 284 1 252 2 227 1 110 1 202 2 174 1 292 1 272 1 273 1 190 1 327 4 220 1 45 1 
330 4 156 1 49 3 284 1 371 2 20 1 110 1 202 2 292 1 272 1 114 1 190 1 181 1 327 7 220 1 
365 1 61 2 156 5 284 3 371 2 20 1 110 2 325 1 42 2 292 2 272 3 114 2 273 2 190 4 327 23 169 1 220 2 140 1 330 12 192 1 250 2 351 1 49 11 148 1 252 4 227 2 334 2 202 9 174 2 
330 1 371 1 327 1 
49 1 114 1 327 1 
330 3 250 1 156 2 49 3 265 1 284 1 252 2 227 1 110 1 174 1 202 3 292 1 272 1 273 1 190 1 327 6 220 1 45 1 
156 1 82 1 284 2 371 1 110 2 292 2 272 2 114 1 273 1 190 1 168 1 327 12 191 1 220 2 330 6 250 1 49 6 304 1 252 2 227 1 174 1 202 2 204 1 181 1 15 1 
330 3 192 1 61 1 156 1 49 3 284 1 334 1 202 2 272 1 190 1 327 6 
330 2 250 1 61 1 156 1 49 1 252 2 227 1 202 2 334 1 174 1 325 1 42 1 273 1 190 1 327 3 169 1 140 1 
330 5 250 1 192 1 61 2 156 3 49 5 284 2 252 2 227 1 174 1 334 2 202 5 186 1 272 2 273 1 190 2 327 10 15 1 
250 1 49 2 252 2 227 1 174 1 202 1 292 1 272 1 273 1 190 1 327 2 15 1 
330 2 250 1 156 1 49 2 284 1 252 2 227 1 110 1 202 2 174 1 292 1 272 1 273 1 190 1 327 4 220 1 15 1 
330 2 250 3 61 1 156 1 49 1 96 1 252 6 227 3 174 3 334 1 202 2 42 1 273 3 190 1 327 3 140 1 15 1 
61 3 156 7 106 1 284 5 371 4 19 1 20 1 110 3 288 1 325 1 42 2 292 3 272 5 273 5 114 3 190 5 327 34 169 1 140 1 220 3 45 1 330 18 192 2 250 5 49 16 148 1 96 1 252 10 227 5 334 3 174 5 202 12 181 1 15 1 
61 1 156 2 284 1 371 1 325 1 272 1 114 1 273 1 327 8 191 1 169 1 330 4 250 1 192 1 49 4 148 1 252 2 227 1 174 1 334 1 202 2 181 1 15 1 
61 1 156 2 284 1 371 2 20 1 325 1 292 1 272 2 273 2 114 1 190 1 327 11 191 1 169 1 220 1 45 1 330 5 192 1 250 2 49 6 148 1 252 4 227 2 334 1 174 2 202 3 181 1 15 1 
61 1 156 3 82 1 284 3 371 1 110 2 325 1 42 1 292 2 272 3 114 1 273 3 190 1 168 1 327 19 191 1 169 1 220 2 45 1 330 10 192 1 250 3 49 9 304 1 148 1 252 6 227 3 334 1 174 3 202 4 204 1 181 1 15 1 
61 1 156 3 82 1 284 2 371 1 110 1 325 1 42 1 292 2 272 3 114 1 273 3 190 2 168 1 327 17 191 1 169 1 220 2 45 1 330 7 192 1 250 3 49 10 304 1 148 1 252 6 227 3 334 1 174 3 202 5 204 1 181 1 15 1 
61 1 156 2 284 1 371 1 325 1 272 1 114 1 273 1 327 8 191 1 169 1 330 4 250 1 192 1 49 4 148 1 252 2 227 1 174 1 334 1 202 2 181 1 15 1 
156 1 82 1 284 2 371 1 110 2 292 2 272 2 114 1 273 1 190 1 168 1 327 12 191 1 220 2 330 6 250 1 49 6 304 1 252 2 227 1 174 1 202 2 204 1 181 1 15 1 
61 1 156 3 82 1 284 2 371 1 110 1 325 1 42 2 292 2 272 3 273 4 114 1 190 2 168 1 327 18 191 1 169 1 220 2 45 1 330 8 192 1 250 4 49 10 304 1 148 1 252 8 227 4 334 1 174 4 202 5 204 1 181 1 15 1 
156 3 82 1 284 2 371 1 110 2 42 2 292 3 272 3 273 4 114 1 190 3 168 1 327 16 191 1 220 3 330 7 250 4 49 9 304 1 252 8 96 1 227 4 174 4 202 6 204 1 181 1 15 1 
330 4 192 1 61 3 156 3 49 3 284 1 334 3 202 6 325 1 272 1 190 3 327 7 169 2 
61 1 156 3 82 1 284 2 371 1 110 1 325 1 42 2 292 2 272 3 273 4 114 1 190 1 168 1 327 18 191 1 169 1 220 2 330 8 192 1 250 4 49 10 304 1 148 1 252 8 96 1 227 4 334 1 174 4 202 4 204 1 181 1 15 1 
332 1 368 1 302 1 239 1 159 1 31 1 134 1 
332 1 368 1 302 1 239 1 159 1 225 1 31 1 134 1 5 1 35 1 166 1 295 1 
254 1 321 1 104 1 376 1 26 1 382 1 188 1 179 1 74 1 160 1 199 1 
299 1 237 1 8 1 332 1 104 1 26 1 48 1 376 1 239 2 51 1 159 2 74 1 199 1 134 1 163 1 382 1 188 1 179 1 
299 2 237 1 8 1 103 1 332 2 26 3 48 1 376 1 301 1 214 1 239 2 51 2 159 2 74 1 199 1 134 1 163 1 323 1 136 1 382 1 188 1 179 2 79 1 
299 2 237 1 8 1 103 1 332 2 26 3 142 1 376 1 301 1 214 1 239 2 51 2 159 2 74 2 199 2 134 1 163 1 380 1 323 1 136 1 382 1 188 2 179 2 79 1 
299 1 155 1 39 1 104 1 26 4 376 1 182 1 214 1 74 3 30 1 199 3 149 1 109 2 380 1 136 1 126 1 382 1 188 3 129 1 179 1 79 1 37 2 282 1 
299 1 155 1 39 1 104 1 26 4 376 1 182 1 214 1 74 3 199 3 109 2 380 1 136 1 126 1 382 1 188 3 129 1 179 1 79 1 37 2 282 1 276 1 
376 1 382 1 188 1 233 1 74 1 199 1 
299 1 38 1 104 2 26 3 376 2 1 1 74 6 29 1 224 1 199 7 308 1 320 1 6 1 382 3 233 1 188 7 234 1 179 2 69 1 312 1 363 1 
237 1 38 1 366 1 61 1 156 2 239 2 133 1 284 1 159 2 134 2 163 1 4 1 137 1 325 1 188 1 272 1 273 2 327 6 169 1 249 1 330 3 299 1 192 1 250 2 8 1 332 1 26 1 376 1 48 1 49 3 51 1 74 1 148 1 75 2 252 4 199 1 307 1 227 2 202 2 334 1 174 2 230 1 257 1 382 1 179 1 127 1 364 2 
155 1 39 1 104 1 212 1 182 2 40 1 109 3 291 2 66 1 188 1 113 2 276 1 119 1 143 2 26 2 74 1 306 1 199 1 333 2 33 1 122 1 335 1 126 1 129 1 36 1 37 3 57 1 282 1 
299 1 38 1 26 2 376 1 74 2 199 2 53 1 320 1 382 2 233 1 188 2 179 1 282 1 
38 1 104 1 26 1 376 1 74 4 280 1 199 4 254 1 321 1 380 1 382 1 188 4 179 1 
299 1 26 1 376 1 1 1 74 2 85 1 224 1 199 2 150 1 136 1 382 2 188 2 179 1 115 1 
216 1 104 1 376 1 382 1 188 1 243 1 74 1 139 1 173 1 199 1 
38 1 62 1 26 1 376 1 74 2 199 2 382 1 188 2 179 1 312 1 363 1 
38 1 104 1 26 3 376 2 74 4 29 1 280 1 199 5 308 1 254 1 321 1 136 1 382 2 188 5 179 2 363 1 
38 1 104 1 26 3 376 2 74 4 280 1 199 5 308 1 254 1 321 1 136 1 382 2 188 5 179 2 293 1 363 1 
299 1 237 1 8 1 332 1 104 1 26 1 142 1 376 1 239 2 51 1 159 2 74 1 199 1 134 1 163 1 382 1 188 1 179 1 
299 1 26 1 376 1 1 1 74 1 224 1 199 1 320 1 136 1 382 2 188 1 234 1 179 1 
332 1 239 1 159 1 197 1 184 1 342 1 201 1 77 1 189 1 
7 1 184 1 87 1 
201 1 197 1 184 1 134 1 297 1 
39 1 103 1 301 1 197 2 184 1 134 1 109 2 87 1 3 1 201 2 89 1 323 1 126 1 7 1 129 1 37 2 57 1 297 2 283 1 
138 1 43 1 11 1 160 1 
138 1 0 1 27 1 43 1 11 1 50 1 108 1 
0 1 285 1 356 1 
377 1 27 1 0 3 195 1 50 3 11 1 108 1 253 2 124 1 138 1 43 1 117 1 
255 1 317 1 138 1 0 2 27 1 43 1 11 1 50 2 108 1 
277 1 290 1 138 1 0 1 27 1 377 1 243 1 50 1 139 1 108 1 154 1 
138 1 0 1 27 1 377 1 43 1 50 1 108 1 
0 1 27 1 377 1 43 2 11 1 50 1 108 1 
210 1 131 1 377 1 27 2 0 2 50 2 108 2 111 1 138 1 43 1 
313 1 317 2 377 1 27 1 0 3 11 1 50 3 108 1 164 1 290 1 187 1 138 2 43 1 
317 1 377 1 27 1 0 2 11 1 50 2 108 1 241 1 287 1 216 1 138 1 43 1 243 1 139 2 154 1 
313 1 317 2 377 1 27 2 0 4 11 1 50 4 108 2 255 1 290 1 138 2 43 1 70 1 
138 1 0 1 27 1 377 1 43 1 11 1 50 1 108 1 
313 1 317 2 195 1 0 4 27 1 11 2 50 4 108 1 253 1 290 1 138 3 43 2 294 1 117 1 
101 1 317 1 352 1 377 1 27 1 0 2 50 2 11 1 108 1 138 1 218 1 43 1 
195 1 377 1 27 1 0 3 50 3 11 1 108 1 253 2 138 1 324 1 43 1 117 2 
138 2 248 1 262 1 92 2 
0 1 27 1 377 1 50 1 305 1 108 1 
164 1 317 1 138 1 0 2 27 1 377 1 43 1 11 1 50 2 108 1 
258 1 
138 1 0 1 27 1 377 1 43 1 11 1 50 1 108 1 
164 1 317 1 138 1 0 3 27 1 377 1 43 1 11 1 50 3 108 1 253 1 
313 1 290 1 138 1 294 1 
138 1 43 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 66 302 353 73 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 66 302 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 66 302 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 166 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 66 302 353 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 66 302 353 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
299 1 118 2 2 1 276 1 365 3 366 1 367 1 147 1 370 2 127 2 208 2 304 1 181 5 51 2 307 1 15 1 239 2 186 9 54 1 163 9 265 1 294 4 38 1 268 1 39 1 116 1 141 6 195 2 
299 1 118 2 2 1 276 1 365 3 366 1 367 1 147 1 370 2 127 2 208 2 304 1 181 5 51 2 307 1 15 1 239 2 186 9 54 1 163 9 265 1 294 4 38 1 268 1 39 1 116 1 141 6 195 2 
299 1 118 2 2 1 276 1 365 4 366 1 367 1 147 1 370 2 127 2 208 2 304 1 181 6 51 2 307 1 15 1 239 2 186 10 54 1 163 10 265 1 294 5 38 1 268 1 39 1 116 1 141 7 195 2 
299 1 118 2 2 1 276 1 365 2 366 1 367 1 147 1 370 2 127 2 208 2 304 1 181 4 51 2 307 1 15 1 239 2 186 7 54 1 163 7 265 1 294 3 38 1 268 1 116 1 141 4 195 1 
299 1 118 1 239 1 186 4 365 1 366 1 163 4 294 2 268 1 370 1 39 1 127 1 208 1 304 1 181 3 141 3 307 1 195 2 
239 1 186 2 366 1 77 1 163 2 38 1 370 1 313 1 127 1 208 1 10 1 181 1 304 1 116 1 51 1 307 1 
239 2 186 3 365 1 366 1 163 3 265 1 294 1 208 2 304 1 181 2 51 1 141 1 307 1 
299 1 118 1 2 1 93 1 365 3 366 1 370 1 127 1 208 2 304 1 181 5 51 1 307 1 154 1 15 1 239 2 186 9 294 4 265 1 163 9 268 1 39 1 141 7 195 2 
299 1 118 1 2 1 93 1 365 3 366 1 370 1 127 1 208 2 304 1 181 5 51 1 307 1 154 1 15 1 239 2 186 9 294 4 265 1 163 9 268 1 39 1 141 7 195 2 
162 1 360 1 362 1 
162 1 98 1 105 2 
264 2 212 2 70 2 5 2 62 1 309 2 316 2 131 1 
59 2 197 1 196 1 5 2 62 1 144 1 63 1 47 1 96 1 173 1 227 1 229 2 175 1 70 2 131 1 209 1 210 1 349 2 212 2 237 2 157 1 309 3 216 1 244 1 264 3 330 1 266 1 361 1 359 1 22 1 218 1 380 1 167 1 117 1 315 2 297 1 316 2 
234 1 264 1 212 1 333 1 70 1 5 1 62 1 309 1 316 1 24 1 
60 1 234 1 14 1 183 1 309 1 322 1 310 1 162 1 264 1 102 1 247 1 362 1 316 1 85 1 
60 1 234 1 212 1 183 1 5 1 309 1 310 1 162 1 264 1 102 2 247 2 362 1 70 1 316 1 85 1 
1 1 273 1 231 1 102 1 247 1 
162 1 1 1 273 1 102 2 247 2 362 1 224 1 279 1 
273 1 102 1 247 1 
234 1 1 1 212 1 3 1 5 1 62 1 309 1 264 1 333 1 102 1 247 1 70 1 316 1 24 1 
162 1 
162 1 1 1 273 1 102 2 247 2 362 1 335 1 279 1 
1 2 298 2 273 2 199 1 352 1 364 1 20 1 279 1 162 1 146 1 311 1 102 5 247 5 334 2 362 1 180 1 193 1 317 1 272 2 
360 1 131 1 
212 1 5 1 309 2 95 1 264 2 267 1 70 1 316 2 131 2 
188 1 176 1 124 1 
59 1 237 1 309 1 63 1 96 1 244 1 264 1 227 1 229 1 361 1 359 1 114 1 218 1 167 1 297 1 131 1 
264 3 212 1 70 3 5 3 309 3 316 3 131 1 31 1 
234 1 264 1 70 1 5 1 309 1 316 1 24 1 
234 1 264 1 212 1 267 1 70 1 5 1 309 1 95 1 316 1 
60 1 59 1 197 1 196 1 5 3 62 1 63 1 95 1 47 1 96 1 227 1 229 1 102 1 175 1 70 3 71 1 306 1 129 1 131 1 209 1 31 1 234 1 210 1 349 1 212 2 183 1 237 1 157 1 309 4 310 1 216 1 244 1 264 4 359 1 361 1 22 1 218 1 247 1 167 1 117 1 315 2 297 1 316 3 85 1 
14 1 264 2 70 1 28 1 5 1 309 2 316 2 131 1 31 1 
234 1 60 1 212 1 33 1 183 1 5 3 309 3 95 1 310 1 162 1 264 3 102 1 247 1 70 3 71 1 85 1 316 3 129 1 31 2 
212 1 5 2 309 2 95 1 188 1 264 2 70 2 176 1 316 2 31 1 
59 1 237 1 309 1 63 1 96 1 244 1 264 1 227 1 229 1 361 1 359 1 218 1 167 1 297 1 131 1 
59 1 237 1 121 1 309 1 63 1 205 1 96 1 244 1 264 1 227 1 229 1 359 1 218 1 297 1 131 1 
0 1 197 2 274 1 27 1 47 1 124 2 343 1 175 1 176 2 152 1 209 1 349 4 157 1 329 1 216 1 217 1 188 2 266 2 22 1 248 1 58 1 139 1 315 2 253 1 
234 1 264 1 183 1 70 1 5 1 277 1 309 1 316 1 
59 1 237 1 5 1 63 1 309 2 96 1 244 1 227 1 264 2 229 1 359 1 361 1 218 1 176 1 70 1 167 1 297 1 316 1 129 1 31 1 
14 1 108 1 212 1 5 4 309 5 95 1 187 1 264 5 70 4 28 1 316 5 129 1 31 2 131 1 
234 1 264 2 70 2 5 2 277 1 309 2 316 2 24 1 
74 1 336 1 
74 1 336 1 
348 1 67 1 
348 1 67 1 
348 1 67 1 
13 1 74 1 336 1 
16 1 74 1 336 1 
348 1 301 1 74 2 11 1 336 2 67 1 
13 1 74 1 336 1 
13 1 74 1 336 1 
74 1 336 1 287 1 
74 1 336 1 287 1 
74 1 336 1 287 1 
86 1 376 1 375 2 301 1 53 1 74 2 226 2 263 1 79 1 162 1 100 3 69 2 102 2 369 1 247 2 283 2 336 2 42 1 233 2 
254 1 340 1 5 2 122 1 226 1 100 1 68 1 69 1 102 1 70 2 283 1 232 1 303 1 131 1 233 1 182 1 16 1 74 1 309 2 79 1 264 2 247 1 336 1 316 2 
118 1 370 1 127 1 
370 1 127 1 10 1 
43 1 118 2 127 3 10 1 158 1 26 1 
43 1 118 1 127 2 10 1 158 1 204 1 
43 2 118 1 127 2 10 1 158 1 
0 1 1 4 87 1 298 1 273 1 199 2 142 1 120 1 340 1 122 1 48 1 279 1 98 1 102 5 126 1 105 3 373 1 182 1 308 1 352 3 293 2 356 2 217 1 162 2 80 2 334 1 247 5 362 1 248 1 253 1 272 1 317 1 
0 3 1 7 87 2 273 6 298 2 199 6 202 5 142 1 120 2 340 4 48 3 279 1 98 3 231 5 102 9 105 9 128 1 132 1 110 1 352 8 214 1 241 1 20 1 293 6 217 3 162 5 80 6 247 9 334 2 362 1 248 3 253 3 194 1 317 1 272 2 
0 1 1 2 87 1 298 1 199 2 120 1 340 1 48 1 98 2 102 3 373 1 105 4 308 1 352 3 20 1 356 1 293 2 162 3 217 1 80 2 334 1 247 3 362 1 248 1 253 1 272 1 
0 2 87 1 1 3 298 1 199 4 120 1 340 2 48 2 98 3 102 4 105 7 373 1 308 1 110 1 352 5 214 1 241 1 20 1 293 4 356 2 162 4 217 2 80 4 334 1 247 4 362 1 248 2 253 2 272 1 
213 1 360 1 297 1 
339 1 297 1 
201 1 
218 1 297 1 
213 2 218 1 363 1 63 1 297 3 354 1 
218 1 63 1 297 1 
9 1 297 1 
107 1 197 3 319 1 235 1 349 7 170 1 171 1 160 1 159 1 217 1 266 4 149 2 192 1 49 1 58 2 152 3 253 1 
107 1 197 3 319 1 235 1 349 7 170 1 171 1 160 1 159 1 217 1 266 4 149 2 192 1 49 1 58 2 152 3 253 1 
107 1 197 3 319 1 235 1 349 7 170 1 171 1 159 1 160 1 217 1 266 4 149 2 192 1 49 1 58 2 152 3 253 1 318 1 
0 3 319 2 197 15 88 1 198 4 90 1 170 2 203 1 171 5 47 1 48 3 149 3 49 1 175 1 103 1 152 10 209 1 107 1 52 1 235 2 349 31 135 1 159 1 160 2 55 1 217 4 266 16 191 3 192 1 22 1 248 3 58 5 315 2 253 4 
319 1 197 4 235 1 349 9 90 1 170 1 171 1 159 1 160 1 113 1 47 2 217 1 266 5 192 1 149 2 49 1 22 2 175 2 165 1 58 3 152 4 315 4 253 1 209 2 
59 1 118 1 300 1 94 1 366 1 26 1 123 1 97 1 227 1 229 1 370 1 151 1 127 2 324 1 208 1 10 1 181 1 304 1 51 1 307 1 32 1 236 1 326 1 237 1 239 1 186 2 163 2 189 1 359 1 141 1 
59 1 118 1 300 1 26 1 123 1 97 1 227 1 229 1 370 1 151 1 127 2 324 1 208 1 10 1 285 1 181 1 304 1 51 1 307 1 236 1 326 1 237 1 239 1 186 3 163 3 189 1 359 1 270 1 115 1 141 2 
59 1 118 1 300 1 26 1 123 1 97 1 227 1 229 1 370 1 127 2 324 1 10 1 285 1 181 1 304 1 51 1 307 1 236 1 237 1 186 2 163 2 189 1 359 1 270 1 141 2 
59 1 64 1 96 1 123 2 227 1 229 1 372 1 324 2 208 1 51 2 153 1 236 2 237 1 239 1 186 1 163 1 379 1 359 1 269 1 218 1 115 1 83 1 297 1 
59 1 118 1 300 1 366 1 26 1 123 1 97 1 227 1 229 1 370 1 151 1 127 2 324 1 208 1 10 1 51 1 32 1 236 1 326 1 237 1 239 1 186 1 163 1 189 1 359 1 270 1 
355 1 
298 1 338 1 199 2 143 2 341 2 96 2 145 1 98 2 148 2 102 5 105 2 14 1 350 1 260 1 352 2 309 1 19 1 161 1 310 1 162 2 264 1 269 1 359 1 218 1 362 1 271 1 316 1 317 1 272 1 59 2 60 1 25 2 273 6 120 1 322 1 279 3 227 1 229 2 179 1 29 2 374 2 234 1 183 1 237 2 327 1 185 2 136 1 76 1 292 1 378 4 247 5 334 1 83 1 297 1 85 1 
234 1 60 1 14 1 273 2 183 1 338 1 327 1 309 1 76 1 292 1 341 1 322 1 310 1 279 1 378 2 264 1 102 3 247 3 179 1 335 1 85 1 316 1 
60 1 273 1 338 1 322 1 279 1 102 3 179 1 29 1 234 1 14 1 183 1 327 1 309 1 76 1 292 1 310 1 378 3 162 1 264 1 247 3 362 1 335 1 316 1 85 1 
60 1 25 1 338 1 273 2 322 1 341 1 279 1 102 3 179 1 29 1 234 1 14 1 183 1 327 1 309 1 76 1 292 1 310 1 378 3 162 1 264 1 247 3 362 1 335 1 316 1 85 1 
60 1 25 2 298 1 338 1 273 3 199 1 322 1 341 2 66 1 279 1 302 1 102 3 179 1 234 1 73 1 14 1 288 1 183 1 327 1 352 1 353 1 309 1 76 1 292 1 310 1 378 2 264 1 334 1 247 3 271 1 335 1 316 1 85 1 272 1 317 1 
60 1 25 2 273 4 338 1 298 1 199 1 143 2 341 2 322 1 279 2 98 2 148 2 102 4 179 1 29 2 105 2 374 2 234 1 14 1 183 1 327 1 185 2 260 1 352 1 309 1 76 1 292 1 161 1 310 1 162 2 378 4 264 1 334 1 247 4 362 1 271 1 316 1 85 1 272 1 317 1 
60 1 338 1 298 1 199 1 322 1 66 1 302 1 102 2 179 1 234 1 14 1 183 1 288 1 327 1 352 1 309 1 76 1 292 1 310 1 378 2 264 1 334 1 247 2 271 1 316 1 85 1 317 1 272 1 
60 1 338 1 298 1 199 1 322 1 66 1 302 1 102 2 179 1 234 1 14 1 183 1 288 1 327 1 352 1 309 1 76 1 292 1 310 1 378 2 264 1 334 1 247 2 271 1 316 1 85 1 317 1 272 1 
234 1 60 1 14 1 183 1 338 1 327 1 309 1 76 1 292 1 322 1 310 1 378 2 264 1 102 2 247 2 166 1 179 1 85 1 316 1 
60 1 25 1 298 1 338 1 273 1 199 1 322 1 341 1 66 1 302 1 102 2 179 1 29 1 234 1 14 1 288 1 183 1 327 1 352 1 309 1 353 1 76 1 292 1 310 1 378 3 264 1 334 1 247 2 271 1 316 1 85 1 272 1 317 1 
60 1 25 1 298 1 338 1 273 1 199 1 322 1 341 1 66 1 302 1 102 2 179 1 29 1 234 1 14 1 288 1 183 1 327 1 352 1 309 1 353 1 76 1 292 1 310 1 378 3 264 1 334 1 247 2 271 1 316 1 85 1 272 1 317 1 
60 1 25 2 273 4 338 1 298 1 199 1 341 2 322 1 279 2 148 2 102 4 179 1 29 2 105 2 374 2 325 2 234 1 14 1 183 1 327 1 351 2 260 1 352 1 309 1 76 1 292 1 291 1 161 1 310 1 162 1 378 4 264 1 334 1 247 4 362 1 316 1 85 1 272 1 317 1 
197 3 319 1 349 6 170 1 157 1 27 1 159 1 47 1 124 1 216 1 217 1 188 1 266 3 149 1 360 1 192 1 49 1 22 1 175 1 176 1 58 2 152 2 315 2 253 1 131 2 209 1 
0 2 197 6 255 1 198 3 203 1 171 1 144 1 47 2 124 11 48 2 368 1 175 2 176 11 344 1 152 2 131 1 209 2 210 1 349 14 135 1 157 2 216 1 217 2 188 4 266 8 191 3 164 1 22 2 58 1 248 1 315 4 253 1 140 1 
59 1 197 1 5 1 63 1 144 1 96 1 47 1 99 1 227 1 229 1 175 1 70 1 129 1 131 1 31 1 209 1 210 1 349 2 237 1 157 1 309 2 75 1 216 1 244 1 56 1 188 1 264 2 266 1 359 1 361 1 218 1 114 1 22 1 167 1 297 1 315 2 316 1 140 1 
0 2 197 10 196 2 44 2 5 1 144 1 96 1 47 3 48 2 7 2 149 1 49 1 152 8 209 3 210 1 349 20 211 2 157 3 309 3 159 1 216 3 217 3 264 3 266 10 361 2 359 2 270 1 22 3 218 2 167 2 58 4 221 1 315 6 316 1 59 3 319 1 223 1 170 1 171 4 63 2 124 7 227 2 229 3 175 3 70 1 176 7 129 1 131 2 31 1 237 3 137 1 244 2 188 7 192 1 248 2 297 2 253 3 140 1 41 2 
59 8 197 1 5 1 144 1 94 1 27 1 65 1 96 2 47 2 342 1 173 2 227 2 229 7 150 1 175 2 177 1 70 1 347 1 31 1 209 2 210 1 349 2 237 8 157 2 309 1 216 2 264 1 190 1 266 1 331 1 359 2 269 1 270 1 22 2 218 2 83 1 297 3 315 4 316 1 
0 1 197 2 5 1 95 1 47 1 124 1 48 1 228 1 175 1 176 1 70 1 152 1 209 1 212 1 349 3 157 1 309 1 216 1 217 1 188 1 264 1 266 1 22 1 58 1 248 1 315 2 316 1 253 1 140 1 
0 1 349 2 171 1 157 1 27 1 47 1 124 1 216 1 217 1 188 1 266 2 22 1 175 1 176 1 152 1 139 1 315 2 209 1 
197 2 349 2 157 1 27 1 47 1 124 1 216 1 188 1 343 1 22 1 175 1 176 1 58 1 248 1 152 1 315 2 253 1 209 1 
0 1 197 2 171 1 27 1 47 1 48 1 124 2 175 1 176 2 152 2 209 1 349 4 157 1 216 1 217 1 188 2 266 2 22 1 248 1 58 1 315 2 253 1 
0 1 349 2 171 1 157 1 47 1 124 1 216 1 217 1 188 1 266 2 150 1 22 1 175 1 176 1 152 1 139 1 315 2 209 1 
197 2 349 2 157 1 47 1 124 1 216 1 188 1 150 1 343 1 22 1 175 1 176 1 58 1 248 1 152 1 315 2 253 1 209 1 
0 1 197 2 171 1 47 1 48 1 124 2 150 1 175 1 176 2 152 2 209 1 349 4 157 1 216 1 217 1 188 2 266 2 22 1 248 1 58 1 315 2 253 1 
0 1 197 2 171 1 47 1 48 1 124 2 175 1 176 2 152 2 209 1 349 4 157 1 216 1 217 1 188 2 266 2 22 1 248 1 58 1 315 2 253 1 
59 1 196 1 197 1 144 1 63 1 96 1 47 1 227 1 229 1 175 1 131 1 209 1 210 1 349 2 237 1 157 1 309 1 216 1 244 1 264 1 266 1 359 1 361 1 218 1 22 1 167 1 297 1 315 2 
59 1 197 1 121 1 144 1 63 1 205 1 96 1 47 1 227 1 229 1 175 1 131 1 209 1 210 1 349 2 237 1 157 1 309 1 216 1 244 1 37 1 264 1 266 1 359 1 218 1 22 1 297 1 315 2 
0 1 197 2 171 1 47 1 48 1 124 2 175 1 176 2 152 2 209 1 349 4 157 1 216 1 217 1 188 2 266 2 22 1 248 1 58 1 315 2 253 1 140 1 
0 1 59 1 197 2 196 1 171 1 63 1 94 1 47 1 124 2 48 1 227 1 229 1 175 1 176 2 152 2 209 1 349 4 237 1 157 1 309 1 216 1 244 1 217 1 188 2 264 1 266 2 359 1 361 1 218 1 22 1 167 1 58 1 248 1 297 1 315 2 253 1 41 1 
0 1 197 1 171 1 5 1 95 1 47 1 48 1 124 1 230 1 175 1 70 1 176 1 152 1 209 1 212 1 349 3 157 1 309 1 216 1 217 1 264 1 188 1 266 2 22 1 248 1 315 2 253 1 316 1 140 1 
0 3 197 10 198 2 200 1 203 1 171 3 225 1 47 2 48 3 282 2 175 2 371 1 152 6 209 2 349 19 135 1 155 1 217 3 266 9 191 1 22 2 165 1 58 3 250 1 248 3 220 2 251 1 315 4 23 1 253 3 
0 3 197 12 198 2 90 2 203 2 171 2 225 2 47 3 48 3 282 1 175 3 284 1 152 4 209 3 130 1 349 26 155 1 328 1 215 1 217 3 266 14 191 2 245 1 22 3 312 1 165 1 58 2 250 1 248 2 220 4 251 1 315 6 253 2 23 2 
0 4 197 21 198 4 200 1 90 1 203 3 47 3 48 4 149 1 49 1 152 8 209 3 349 41 155 1 156 1 215 1 159 1 217 5 266 20 22 3 165 1 312 1 58 4 220 4 315 6 23 1 319 1 170 1 171 4 225 2 175 3 282 1 284 1 130 1 135 1 328 1 191 3 192 1 245 1 248 4 250 1 251 1 253 5 
0 4 319 1 197 18 198 4 200 1 90 2 170 1 203 3 171 3 225 2 47 4 48 4 149 1 282 1 49 1 175 4 284 1 152 7 130 1 209 4 349 38 135 1 155 1 156 1 328 1 159 1 215 1 217 5 266 20 191 3 192 1 245 1 22 4 312 1 165 1 58 4 250 1 248 3 220 4 251 1 315 8 23 1 253 4 
0 7 319 1 197 25 198 4 90 1 170 1 203 2 171 7 225 1 47 2 48 7 368 2 149 1 282 1 49 1 175 2 284 1 152 14 130 1 209 2 349 52 135 2 155 1 328 1 159 1 215 1 217 8 266 27 191 4 192 1 245 1 22 2 312 1 165 1 58 7 250 1 248 7 220 4 251 1 315 4 23 1 253 8 
301 1 69 1 283 1 74 1 336 1 168 1 226 1 263 1 42 1 233 1 
16 1 232 1 
133 1 332 1 69 1 283 1 74 1 336 1 252 1 226 1 233 1 
376 1 375 1 301 1 53 1 74 1 226 1 263 1 79 1 162 1 100 2 102 1 69 1 369 1 247 1 283 1 336 1 42 1 233 1 
376 1 375 1 301 1 53 1 74 1 226 1 263 1 79 1 162 1 100 2 102 1 69 1 369 1 247 1 283 1 336 1 42 1 233 1 
376 1 375 1 301 1 53 1 74 1 226 1 263 1 79 1 162 1 100 2 102 1 69 1 369 1 247 1 283 1 336 1 42 1 233 1 
13 1 35 1 11 1 
13 1 35 1 11 1 
169 1 287 1 
169 1 11 1 287 1 
68 1 303 1 
254 1 1 1 340 1 5 2 122 1 226 1 281 1 100 1 68 1 369 1 102 1 69 1 283 1 70 2 232 1 303 1 131 1 233 1 375 1 182 1 16 1 74 1 309 2 264 2 247 1 336 1 316 2 
13 1 35 1 
169 1 11 1 287 1 
59 2 197 1 144 1 47 1 342 1 173 2 227 1 229 2 175 1 209 1 210 1 184 1 349 2 237 2 157 1 309 2 216 1 243 1 264 2 190 1 266 1 359 1 218 1 246 1 22 1 295 1 297 1 84 1 315 2 316 2 140 1 
59 2 118 1 237 2 17 1 18 1 26 1 94 1 123 1 97 1 227 1 189 1 229 2 359 1 370 1 270 1 151 1 127 2 50 1 10 1 
59 1 118 1 237 1 17 1 278 1 26 1 123 1 97 1 189 1 227 1 229 1 359 1 370 1 270 1 151 1 127 2 10 1 
59 1 237 1 172 1 96 1 123 1 227 1 229 1 359 1 269 1 218 1 50 1 83 1 297 1 153 1 
59 1 118 1 237 1 17 1 18 1 26 1 123 1 97 1 189 1 227 1 229 1 359 1 370 1 270 1 151 1 127 2 50 1 10 1 
81 1 
162 1 146 1 199 1 360 1 352 1 362 1 193 1 
273 1 298 1 199 1 185 1 352 1 143 1 279 1 162 2 98 1 102 1 247 1 334 1 362 1 105 1 271 1 317 1 272 1 
0 2 298 4 339 3 89 1 199 8 94 1 96 1 48 2 206 1 146 1 7 2 98 6 8 2 101 2 102 5 259 2 9 2 105 12 106 2 213 2 352 9 162 8 217 2 359 4 218 3 362 2 363 1 317 4 272 4 59 3 273 5 120 2 63 3 279 3 227 3 229 3 286 2 72 2 237 3 34 1 238 1 136 1 377 2 293 6 80 6 334 4 247 5 248 2 296 1 193 1 297 10 337 2 85 2 253 2 
0 2 273 1 198 1 298 2 199 5 120 1 203 1 48 2 279 1 98 3 102 1 284 1 286 2 105 6 12 1 130 1 136 1 352 8 262 1 377 1 328 1 215 1 293 5 162 5 217 2 80 5 191 1 245 1 247 1 334 2 362 2 248 2 253 2 272 2 317 2 
319 1 298 1 199 2 170 1 3 1 5 1 62 1 102 1 49 1 70 1 286 2 234 1 288 1 212 1 289 1 352 2 377 1 309 1 217 2 264 1 333 1 334 1 247 1 253 1 316 1 24 1 272 1 317 1 
298 1 199 1 352 1 146 1 162 1 334 1 362 1 193 1 317 1 272 1 
0 2 199 5 352 5 377 1 48 2 293 5 7 1 217 2 98 5 162 5 80 5 248 2 286 2 105 10 253 2 
162 1 273 1 102 1 247 1 362 1 279 1 
59 4 298 2 273 4 199 2 120 2 96 2 145 1 279 2 227 1 229 4 102 3 346 1 237 4 34 2 350 1 238 1 136 2 352 2 20 1 359 1 269 1 218 1 334 2 247 3 219 1 83 1 297 1 272 2 317 1 
59 1 197 1 196 1 5 2 62 1 63 1 96 1 47 1 227 1 229 1 175 1 70 2 131 1 209 1 210 1 349 1 212 2 237 1 157 1 309 3 216 1 244 1 264 3 361 1 359 1 22 1 218 1 167 1 117 1 315 2 297 1 316 2 
298 1 199 2 136 1 120 1 352 1 293 2 98 2 162 4 80 2 149 1 334 1 362 2 105 4 317 1 272 1 
258 1 283 1 226 1 
68 1 283 1 222 1 226 1 42 1 
258 1 283 1 226 1 
258 1 283 1 226 1 
283 1 111 1 226 1 
283 1 111 1 226 1 
283 1 111 1 226 1 
283 1 226 1 
74 1 336 1 
197 4 319 1 349 8 90 1 170 1 171 1 159 1 47 2 217 1 266 4 149 1 192 1 49 1 22 2 175 2 58 2 152 3 315 4 253 1 209 2 
197 3 319 1 349 6 170 1 159 1 217 1 266 3 149 1 360 1 192 1 49 1 58 2 152 2 253 1 
0 1 197 2 349 4 171 1 47 1 48 1 217 1 266 2 22 1 175 1 58 1 248 1 152 2 314 1 315 2 253 1 209 1 
0 1 197 4 198 2 349 7 135 1 203 1 171 1 48 1 217 1 266 3 191 1 58 1 248 1 152 2 253 1 
0 2 319 2 197 12 198 2 61 1 90 2 170 2 171 4 47 2 48 2 368 1 149 1 49 1 175 2 152 9 209 2 349 23 135 1 159 1 217 3 266 11 191 2 192 1 164 1 22 2 248 2 58 5 315 4 253 3 
197 1 349 1 198 1 
349 1 266 1 191 1 
0 1 197 3 349 6 171 1 47 1 48 1 7 1 217 1 266 3 175 1 22 1 248 1 58 2 152 3 314 1 315 2 253 1 209 1 
0 2 197 6 198 1 203 1 171 1 47 1 48 2 175 1 284 1 152 2 209 1 130 1 349 12 328 1 215 1 217 2 266 6 191 1 245 1 22 1 165 1 248 2 58 1 315 2 253 2 
217 1 319 1 197 3 349 6 266 3 170 1 49 1 171 1 58 1 152 2 253 1 
319 1 197 2 349 3 61 1 90 1 170 1 171 1 159 1 47 1 266 1 192 1 22 1 175 1 58 1 152 2 315 2 209 1 
319 2 197 5 349 10 289 1 170 2 171 2 47 1 217 2 266 5 175 1 22 1 49 1 165 1 58 3 152 5 315 2 253 2 209 1 
0 1 349 2 171 1 47 1 217 1 266 2 22 1 175 1 165 1 152 1 315 2 209 1 
0 1 197 2 349 4 171 1 47 1 48 1 217 1 266 2 22 1 175 1 165 1 58 1 248 1 152 2 315 2 253 1 209 1 
197 2 319 1 349 3 200 1 61 1 90 1 170 1 171 1 47 3 266 1 22 3 175 3 165 1 58 1 152 2 315 6 209 3 
0 3 319 3 88 1 197 18 198 4 200 1 61 1 90 2 170 3 203 1 171 5 47 5 48 3 149 1 49 2 175 5 103 1 152 12 209 5 349 34 135 1 159 1 55 1 217 5 266 16 191 3 192 1 22 5 165 1 248 3 58 7 314 1 315 10 253 5 
197 4 319 1 198 1 203 1 170 1 47 1 149 1 175 1 49 1 152 2 209 1 349 8 159 1 217 1 266 4 191 1 192 1 245 1 22 1 165 1 58 2 315 2 253 1 
0 1 319 1 197 5 198 2 170 1 203 1 171 1 47 2 48 1 149 1 49 1 175 2 152 3 209 2 349 11 135 1 159 1 217 2 266 6 191 1 192 1 245 1 22 2 165 1 58 2 314 1 315 4 253 1 
0 2 319 1 197 10 198 1 90 1 170 1 203 1 171 1 47 3 48 2 149 1 49 1 175 3 284 1 152 4 209 3 130 1 349 19 328 1 159 1 215 1 217 3 266 9 191 1 192 1 245 1 22 3 165 1 248 2 58 3 314 1 315 6 253 3 
0 2 319 1 197 7 198 1 90 1 170 1 203 1 171 2 47 3 48 2 149 1 49 1 175 3 284 1 152 5 209 3 130 1 349 17 328 1 159 1 215 1 217 3 266 10 191 1 192 1 245 1 22 3 165 1 248 1 58 3 314 1 315 6 253 2 
197 4 319 1 198 1 203 1 170 1 47 1 149 1 175 1 49 1 152 2 209 1 349 8 159 1 217 1 266 4 191 1 192 1 245 1 22 1 165 1 58 2 315 2 253 1 
0 2 197 6 198 1 203 1 171 1 47 1 48 2 175 1 284 1 152 2 209 1 130 1 349 12 328 1 215 1 217 2 266 6 191 1 245 1 22 1 165 1 248 2 58 1 315 2 253 2 
0 2 319 1 197 8 198 1 90 2 170 1 203 1 171 2 47 4 48 2 149 1 49 1 175 4 284 1 152 5 209 4 130 1 349 18 328 1 159 1 215 1 217 3 266 10 191 1 192 1 245 1 22 4 165 1 248 1 58 3 314 1 315 8 253 2 
0 3 197 7 198 1 200 1 90 2 203 1 171 3 47 4 48 3 175 4 284 1 152 6 209 4 130 1 349 16 328 1 215 1 217 3 266 9 191 1 245 1 22 4 165 1 248 2 58 3 315 8 253 2 
197 4 319 3 349 7 170 3 171 3 159 2 217 1 266 3 192 1 49 1 58 3 152 6 253 1 
0 2 319 1 197 8 198 1 200 1 90 2 170 1 203 1 171 1 47 4 48 2 149 1 49 1 175 4 284 1 152 4 209 4 130 1 349 18 328 1 159 1 215 1 217 3 266 10 191 1 192 1 245 1 22 4 165 1 248 1 58 3 315 8 253 2 
264 1 14 1 28 1 309 1 316 1 131 1 280 1 
14 1 261 1 45 1 275 1 4 1 309 1 138 1 280 1 264 1 28 1 316 1 131 1 
59 1 227 1 229 1 237 1 359 1 269 1 360 1 218 1 83 1 297 1 96 1 
59 1 237 1 5 1 63 1 309 2 96 1 244 1 264 2 227 1 229 1 359 1 361 1 218 1 70 1 297 1 316 1 131 1 31 1 
59 1 60 1 5 2 63 2 227 1 229 1 9 1 70 1 131 1 31 1 72 1 234 1 183 1 237 1 34 1 309 2 244 1 264 2 361 1 359 1 218 2 297 3 316 2 
59 2 60 1 121 1 5 2 256 1 63 2 227 1 229 2 9 1 70 1 131 1 31 1 72 1 234 1 183 1 237 2 34 1 309 2 244 1 264 2 359 1 218 2 297 3 316 2 
59 3 273 1 237 3 339 1 34 1 320 1 213 1 92 1 256 1 63 1 96 1 162 1 227 1 229 3 359 1 102 2 9 1 218 1 247 2 362 1 297 4 85 1 72 1 
59 3 273 1 237 3 339 1 34 1 213 1 256 1 63 1 96 1 162 1 227 1 229 3 8 1 359 1 102 2 9 1 218 1 247 2 362 1 297 4 85 1 72 1 
59 1 227 1 229 1 237 1 359 1 65 1 
59 7 237 7 63 1 94 1 65 1 96 2 6 1 173 1 36 1 57 1 227 2 190 1 229 6 331 1 359 3 270 1 218 2 177 1 363 1 297 3 347 1 
196 1 197 3 5 1 94 1 47 2 149 1 49 1 152 2 209 2 211 1 349 6 157 2 309 2 159 1 216 2 217 1 264 2 266 3 361 1 359 1 22 2 218 1 167 1 58 2 315 4 316 1 59 1 319 1 170 1 63 1 124 1 227 1 229 1 175 2 70 1 176 1 31 1 131 2 237 1 244 1 188 1 192 1 84 1 297 1 253 1 41 1 140 1 
59 1 1 1 298 2 273 2 199 1 339 1 96 1 279 1 146 1 229 1 8 1 102 3 101 1 259 1 237 1 213 1 238 1 352 1 162 1 334 2 247 3 362 1 193 1 297 2 337 1 85 1 272 2 317 2 
59 2 237 2 89 1 213 1 63 1 94 1 65 1 227 1 229 2 359 2 218 1 363 1 297 2 
59 4 237 4 256 1 94 1 96 1 227 1 229 4 359 1 269 1 218 1 83 1 297 1 30 1 
59 2 237 2 34 1 109 1 63 1 36 1 57 1 227 1 229 2 359 2 218 1 207 1 221 1 297 1 
59 1 227 1 189 1 229 1 237 1 359 1 370 1 127 1 10 1 96 1 
59 2 237 2 94 1 243 1 227 1 229 2 190 1 359 1 270 1 218 1 297 1 
59 5 237 5 34 1 94 1 96 1 227 2 229 4 190 1 331 1 269 1 359 2 218 2 83 1 297 3 347 1 30 1 
59 5 237 5 34 1 94 1 96 1 227 2 229 4 358 1 190 1 269 1 359 2 218 2 83 1 297 3 347 1 30 1 
59 1 237 1 121 1 5 1 63 1 309 2 96 1 244 1 264 2 227 1 229 1 359 1 218 1 70 1 297 1 316 1 131 1 31 1 
59 1 237 1 34 1 63 1 6 1 36 1 57 1 227 1 229 1 359 2 218 1 363 1 297 1 
264 1 184 1 246 1 323 1 295 1 82 1 309 1 40 1 316 1 
178 1 40 1 78 1 
323 1 82 1 40 1 305 1 131 1 
234 1 60 1 1 1 183 1 78 1 310 1 162 1 102 2 247 2 362 1 323 2 249 1 178 1 82 2 40 1 71 1 85 1 305 2 131 1 
360 1 181 1 304 1 307 1 
163 1 239 1 186 1 208 1 181 1 304 1 307 1 
236 1 186 1 51 1 
91 1 239 1 186 3 366 1 163 3 257 1 38 2 208 1 104 1 181 1 304 1 307 1 
163 2 239 1 186 2 208 1 181 1 304 1 141 1 307 1 195 1 
294 1 163 1 118 1 299 1 370 1 239 1 127 1 186 1 208 1 181 1 366 1 
163 1 239 1 186 1 208 1 181 1 366 1 307 1 
163 1 239 1 186 1 208 1 304 1 366 1 307 2 
239 2 186 2 46 1 366 1 174 1 163 2 21 1 208 2 181 1 307 1 
15 1 2 1 239 1 186 3 365 1 366 1 163 3 294 1 208 1 304 1 181 2 141 2 307 1 
118 1 239 1 186 2 366 1 240 1 26 1 163 2 370 1 127 2 10 1 208 1 181 1 304 1 141 1 307 1 
239 2 186 4 365 1 366 1 163 4 294 1 39 1 208 2 304 1 181 2 141 2 307 1 195 1 
163 1 239 1 186 1 208 1 181 1 304 1 366 1 307 1 
239 1 186 4 365 1 242 1 163 4 294 1 38 1 257 1 104 1 208 1 304 2 181 3 141 2 307 2 
239 1 321 1 93 1 186 2 290 1 366 1 163 2 208 1 181 1 304 1 141 1 307 1 
119 1 239 1 186 3 366 1 163 3 257 1 38 2 208 1 104 2 181 1 304 1 307 1 
357 2 125 1 112 1 181 2 
163 1 239 1 186 1 208 1 366 1 345 1 
163 2 15 1 239 1 186 2 208 1 181 1 304 1 366 1 141 1 307 1 
134 1 
163 1 239 1 186 1 208 1 181 1 304 1 366 1 307 1 
163 3 15 1 38 1 239 1 186 3 208 1 181 1 304 1 366 1 141 1 307 1 
294 1 365 1 242 1 181 1 
181 1 307 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (103,349) 188 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (103,349) 188 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 210 185 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
14 1 92 3 301 2 232 1 207 1 306 2 59 5 278 1 349 1 65 1 214 9 186 2 256 1 263 9 75 1 5 6 146 1 78 2 31 1 103 1 105 1 52 1 292 2 293 2 83 1 12 1 322 2 173 4 
14 1 92 3 301 2 232 1 207 1 306 2 59 5 278 1 349 1 65 1 214 9 186 2 256 1 263 9 75 1 5 6 146 1 78 2 31 1 103 1 105 1 52 1 292 2 293 2 83 1 12 1 322 2 173 4 
14 1 92 4 301 2 232 1 207 1 306 2 59 6 278 1 349 1 65 1 214 10 186 2 256 1 263 10 75 1 5 7 146 1 78 2 31 1 103 1 105 1 52 1 292 2 293 2 83 1 12 1 322 2 173 5 
14 1 92 2 301 2 232 1 207 1 306 2 59 4 278 1 349 1 65 1 214 7 186 2 256 1 263 7 5 4 146 1 78 2 31 1 103 1 105 1 52 1 292 2 293 1 83 1 12 1 322 2 173 3 
92 1 301 1 232 1 31 1 306 1 105 1 59 3 292 1 293 2 65 1 214 4 186 1 256 1 173 2 322 1 263 4 75 1 5 3 
177 1 301 1 78 1 232 1 31 1 326 1 59 1 52 1 306 1 292 1 278 1 65 1 214 2 42 1 186 1 263 2 
92 1 301 2 78 1 232 1 31 1 59 2 292 2 349 1 65 1 214 3 173 1 263 3 5 1 
301 1 214 1 250 1 31 1 188 1 292 1 349 1 263 1 
301 1 214 1 250 1 31 1 188 1 292 1 349 1 263 1 
274 1 296 1 307 1 
274 1 151 1 194 2 
213 2 77 2 17 2 339 2 159 1 362 1 270 2 172 2 
58 1 114 1 1 2 93 1 17 2 159 1 116 1 180 1 94 1 18 2 120 1 213 3 281 2 257 1 258 1 332 1 313 1 76 1 77 2 102 1 79 2 148 1 81 1 150 1 172 2 9 1 268 1 89 1 340 1 339 2 245 1 362 1 270 3 108 2 91 1 229 1 300 1 
213 1 77 1 17 1 339 1 159 1 270 1 46 1 253 1 243 1 172 1 
176 1 324 1 274 1 243 1 85 1 234 1 199 1 213 1 296 1 339 1 361 1 297 1 270 1 272 1 
176 2 324 1 274 1 77 1 17 1 172 1 243 1 234 1 213 1 296 1 339 1 361 2 297 1 270 1 272 1 
176 1 308 1 30 1 361 1 106 1 
176 2 217 1 274 1 308 1 305 1 296 1 361 2 106 1 
176 1 308 1 361 1 
176 1 77 1 17 1 159 1 106 1 253 1 243 1 172 1 213 1 361 1 339 1 215 1 46 1 270 1 
274 1 
176 2 274 1 308 1 305 1 296 1 361 2 106 1 175 1 
176 5 274 1 275 1 305 1 317 1 239 1 106 2 62 2 358 1 184 1 308 2 201 2 69 1 296 1 361 5 45 1 284 1 110 2 57 1 
58 1 79 1 148 1 17 1 81 1 346 1 172 1 268 1 213 2 89 1 338 1 281 1 339 1 258 1 270 2 332 1 313 1 342 1 91 1 108 1 
362 1 307 1 
29 1 77 1 17 1 172 1 213 2 339 2 121 1 270 2 362 2 
334 1 342 1 252 1 
58 1 79 1 148 1 81 1 212 1 268 1 213 1 89 1 281 1 258 1 362 1 270 1 332 1 313 1 108 1 91 1 
213 3 77 1 338 1 17 3 339 3 362 1 270 3 172 3 
213 1 17 1 339 1 270 1 253 1 243 1 172 1 
29 1 213 1 77 1 17 1 339 1 121 1 270 1 243 1 172 1 
176 1 324 1 58 1 114 1 1 2 93 1 17 3 346 1 159 1 116 1 94 1 18 1 4 1 181 1 120 1 234 1 213 4 281 1 257 1 121 1 258 1 332 1 313 1 76 1 77 2 79 1 148 1 81 1 150 1 172 3 243 1 268 1 89 1 338 1 339 3 361 1 245 1 297 1 362 1 270 4 91 1 108 1 272 1 229 1 
85 1 126 1 213 2 17 1 338 1 339 2 362 1 270 2 172 1 
176 1 324 1 77 1 274 1 302 1 17 3 346 1 4 1 243 1 172 3 234 1 213 3 338 2 361 1 339 3 121 1 297 1 270 3 272 1 
77 1 17 2 252 1 172 2 213 2 338 1 339 2 121 1 270 2 342 1 
58 1 79 1 148 1 81 1 268 1 213 1 89 1 281 1 258 1 362 1 270 1 332 1 313 1 108 1 91 1 
58 1 79 1 81 1 268 1 213 1 89 1 281 1 23 1 35 1 258 1 362 1 270 1 313 1 108 1 91 1 
1 2 93 1 116 1 161 1 94 1 18 4 162 1 252 2 119 1 328 1 257 1 142 1 76 1 290 1 334 2 219 1 102 2 7 1 336 1 242 1 150 1 53 1 342 2 229 2 
324 1 213 1 17 1 339 1 311 1 270 1 243 1 172 1 
126 1 147 1 77 1 17 4 346 1 172 4 85 1 213 5 338 2 339 5 121 1 270 5 362 1 288 1 
213 2 17 2 311 1 339 2 270 2 253 1 243 1 172 2 
248 1 84 1 
248 1 84 1 
66 1 310 1 
66 1 310 1 
66 1 310 1 
248 1 244 1 84 1 
248 1 244 1 84 1 
248 1 295 1 84 1 
248 2 66 1 310 1 27 1 61 1 84 2 
248 1 244 1 84 1 
248 1 262 1 84 1 
248 1 262 1 84 1 
248 1 262 1 84 1 
248 2 176 2 0 2 274 1 38 1 192 2 241 2 294 1 208 1 84 2 64 1 200 2 20 2 254 1 361 2 331 1 27 1 56 1 124 3 
248 1 176 1 0 1 17 2 276 1 347 1 327 1 64 1 19 1 20 1 213 2 124 1 192 1 319 1 172 2 84 1 200 1 295 1 55 1 361 1 339 2 269 1 362 1 270 2 
186 1 322 1 306 1 
177 1 186 1 306 1 
177 1 22 1 186 3 322 2 318 1 73 1 
177 1 16 1 186 2 322 1 318 1 73 1 
177 1 186 2 322 1 318 2 73 1 
176 5 274 2 305 1 275 3 347 1 162 1 62 1 184 2 308 1 187 1 44 2 259 1 286 1 316 2 7 1 317 1 106 4 336 1 319 1 242 1 194 3 196 1 359 1 151 1 201 1 55 1 90 1 228 2 361 5 296 1 152 1 110 1 
176 9 274 5 305 1 275 8 162 3 95 1 137 1 62 2 184 6 308 6 282 5 44 6 284 1 286 2 127 1 237 1 30 5 316 6 7 3 317 1 106 7 131 1 224 1 336 3 319 4 242 3 194 9 196 1 151 3 201 2 90 3 361 9 296 1 152 2 110 2 
176 3 274 3 275 3 162 1 62 1 184 2 44 2 259 1 284 1 286 1 316 2 7 1 106 2 319 1 336 1 242 1 194 4 359 1 151 2 201 1 90 1 228 1 296 1 361 3 152 1 110 1 
176 4 274 4 275 5 162 2 137 1 62 1 184 4 44 4 284 1 259 1 286 1 316 4 7 2 106 3 131 1 224 1 319 2 336 2 242 2 194 7 359 1 151 3 201 1 90 2 228 2 296 1 361 4 152 1 110 1 
89 1 247 1 307 1 
88 1 89 1 
141 1 
268 1 89 1 
268 1 107 1 58 1 89 3 166 1 247 2 
268 1 58 1 89 1 
89 1 343 1 
191 1 249 2 264 1 102 4 80 1 240 1 2 1 18 7 8 1 162 1 242 1 119 3 63 1 40 1 328 2 163 1 229 3 
191 1 249 2 264 1 102 4 80 1 240 1 2 1 18 7 8 1 162 1 242 1 119 3 63 1 40 1 328 2 163 1 229 3 
191 1 249 2 264 1 102 4 80 1 240 1 2 1 8 1 18 7 162 1 242 1 119 3 63 1 40 1 86 1 328 2 163 1 229 3 
134 3 249 3 1 2 93 1 2 1 277 1 18 31 162 4 119 10 40 1 63 2 328 5 24 4 163 2 351 1 257 1 28 1 167 1 168 1 191 1 76 1 102 16 264 5 80 2 7 3 240 2 8 1 336 3 242 4 150 1 87 1 90 3 13 1 229 15 
191 1 76 2 249 2 264 1 102 5 93 2 1 4 80 1 129 1 240 1 8 1 18 9 162 1 242 1 150 2 119 4 40 1 63 1 328 3 163 1 257 2 25 1 229 4 168 1 
177 1 301 1 232 1 304 1 59 1 306 1 3 1 348 1 65 1 214 2 281 1 186 2 22 1 263 2 5 1 315 1 145 1 79 1 78 1 31 1 238 1 335 1 81 1 292 1 33 1 198 1 11 1 322 1 108 1 91 1 
177 1 301 1 303 1 232 1 304 1 59 1 306 1 348 1 233 1 65 1 214 3 22 1 281 1 186 2 47 1 263 3 315 1 5 2 145 1 79 1 78 1 238 1 335 1 81 1 292 1 198 1 11 1 322 1 108 1 91 1 
177 1 303 1 232 1 304 1 59 1 306 1 348 1 233 1 65 1 214 2 281 1 186 2 22 1 263 2 315 1 5 2 78 1 79 1 238 1 81 1 198 1 11 1 322 1 108 1 91 1 
301 1 348 2 182 1 214 1 281 1 280 1 258 1 47 1 263 1 315 2 79 1 78 2 128 1 81 1 292 1 268 1 11 2 89 1 360 1 298 1 299 1 91 1 108 1 
177 1 301 1 303 1 304 1 306 1 348 1 214 1 281 1 186 2 22 1 263 1 315 1 145 1 79 1 78 1 31 1 238 1 335 1 81 1 292 1 33 1 198 1 11 1 322 1 108 1 91 1 
251 1 
176 3 324 1 275 1 305 1 62 1 210 1 234 1 213 1 184 1 185 1 308 2 281 2 280 1 283 1 258 2 98 1 99 1 79 2 317 1 128 1 81 1 132 1 243 1 85 1 268 1 199 1 89 1 201 1 339 1 361 3 297 1 270 1 91 1 108 2 272 1 271 1 152 1 110 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 3 324 1 305 1 210 1 243 1 234 1 85 1 213 1 199 1 308 1 185 1 361 3 283 1 339 1 297 1 270 1 99 1 272 1 175 1 
176 2 324 1 317 1 62 1 210 1 243 1 234 1 85 1 213 1 199 1 185 1 201 1 339 1 361 2 283 1 297 1 270 1 99 1 272 1 110 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 2 324 1 210 1 243 1 234 1 85 1 199 1 213 1 185 1 361 2 283 1 339 1 297 1 99 1 270 1 272 1 
176 2 324 1 317 1 62 1 210 1 243 1 234 1 85 1 213 1 199 1 185 1 201 1 339 1 361 2 283 1 297 1 270 1 99 1 272 1 110 1 
249 1 1 2 93 1 116 1 94 1 18 6 252 1 162 1 307 1 119 2 40 1 328 2 257 1 163 1 76 1 290 1 191 1 334 1 102 3 80 1 8 1 242 1 150 1 362 2 342 1 229 3 
134 3 114 1 1 4 93 2 116 2 277 1 180 1 94 1 18 14 162 2 252 4 119 2 140 1 328 1 24 3 257 2 26 1 260 1 28 1 314 1 76 2 334 11 264 1 102 8 7 1 336 2 242 1 150 2 90 2 362 1 342 11 229 6 231 1 
58 1 93 1 1 2 114 1 17 1 346 1 116 1 94 1 180 1 18 2 252 1 212 1 213 2 140 1 96 1 281 1 257 1 258 1 332 1 236 1 313 1 76 1 79 1 102 1 148 1 81 1 150 1 172 1 268 1 89 1 338 1 339 1 362 1 270 2 91 1 108 1 273 1 229 1 
1 6 93 3 180 1 94 3 40 1 140 1 328 4 281 3 332 2 191 1 334 7 48 1 102 10 148 2 7 2 8 1 336 2 242 3 150 3 338 1 339 1 245 2 108 3 342 7 113 1 249 1 58 2 303 1 114 1 17 1 346 1 116 3 18 20 252 7 162 3 119 8 213 3 67 2 255 1 163 1 257 3 258 1 313 2 123 2 71 2 76 3 79 3 264 4 80 1 81 2 172 1 268 2 89 2 226 2 90 2 362 2 270 3 91 2 229 10 
178 1 303 1 1 4 93 2 114 1 17 1 116 2 3 1 94 2 180 1 18 2 211 1 213 1 281 7 280 1 257 2 258 2 122 1 125 1 290 1 76 2 79 8 102 1 128 1 81 2 266 1 267 1 150 2 172 1 268 2 89 3 338 1 339 1 340 2 203 1 270 1 91 2 108 8 229 1 
1 2 93 1 17 1 116 1 94 1 18 3 252 1 162 1 119 1 213 1 140 1 328 1 257 1 121 1 76 1 334 1 77 1 102 1 7 1 336 1 242 1 150 1 171 1 172 1 90 1 339 1 270 1 342 1 229 2 
290 1 76 1 334 1 264 1 93 1 1 2 102 2 116 1 94 1 18 2 252 1 336 1 162 1 150 1 119 1 53 1 257 1 342 1 
290 1 76 1 334 1 93 1 1 2 7 1 116 1 94 1 18 2 252 1 242 1 150 1 119 1 328 1 257 1 142 1 342 1 229 2 
1 2 93 1 116 1 94 1 18 4 162 1 252 2 119 2 328 1 257 1 76 1 290 1 334 2 102 2 264 1 7 1 336 1 242 1 150 1 90 1 342 2 229 2 
76 1 334 1 264 1 93 1 1 2 102 2 116 1 266 1 94 1 18 2 252 1 336 1 162 1 150 1 119 1 53 1 257 1 342 1 
76 1 334 1 93 1 1 2 7 1 116 1 266 1 94 1 18 2 252 1 242 1 150 1 119 1 328 1 257 1 142 1 342 1 229 2 
1 2 93 1 116 1 94 1 18 4 162 1 252 2 119 2 328 1 257 1 76 1 334 2 102 2 264 1 7 1 266 1 336 1 242 1 150 1 90 1 342 2 229 2 
76 1 334 2 264 1 93 1 1 2 102 2 7 1 116 1 94 1 18 4 252 2 336 1 162 1 242 1 150 1 119 2 328 1 90 1 257 1 342 2 229 2 
58 1 93 1 1 2 114 1 116 1 180 1 94 1 18 2 213 1 281 1 257 1 258 1 332 1 313 1 76 1 102 1 79 1 148 1 81 1 150 1 268 1 89 1 245 1 362 1 270 1 91 1 108 1 229 1 
58 1 93 1 1 2 114 1 116 1 180 1 94 1 18 2 213 1 281 1 23 1 257 1 258 1 313 1 76 1 102 1 79 1 81 1 150 1 268 1 89 1 35 1 362 1 323 1 270 1 91 1 108 1 229 1 
1 2 93 1 116 1 94 1 18 4 162 1 252 2 119 2 140 1 328 1 257 1 76 1 334 2 102 2 264 1 7 1 336 1 242 1 150 1 90 1 342 2 229 2 
58 1 93 1 1 2 116 1 3 1 94 1 18 4 252 2 162 1 119 2 213 1 67 1 328 1 281 1 257 1 332 1 313 1 76 1 334 2 264 1 102 2 79 1 148 1 7 1 81 1 336 1 242 1 150 1 268 1 89 1 90 1 245 1 270 1 342 2 91 1 108 1 229 2 
1 2 93 1 17 1 116 1 94 1 18 3 162 1 252 1 119 1 213 1 140 1 257 1 121 1 76 1 334 1 77 1 264 1 102 2 7 1 336 1 242 1 150 1 172 1 225 1 90 1 339 1 270 1 342 1 229 1 
134 3 93 3 1 6 179 4 277 3 183 1 40 1 328 4 43 1 235 1 97 1 101 1 191 1 291 1 102 20 7 4 8 1 336 4 242 5 150 3 246 2 112 1 155 1 249 1 160 1 18 41 162 5 119 8 24 4 68 1 257 3 163 1 25 1 261 1 28 1 168 1 76 3 264 4 80 1 130 1 82 1 90 4 229 21 
134 3 249 1 1 8 93 4 179 4 160 1 277 3 18 38 162 5 119 7 40 1 183 1 328 4 43 1 235 1 68 1 24 4 163 1 257 4 25 1 97 1 261 1 101 1 28 1 168 2 291 1 191 1 76 4 102 20 264 3 80 1 7 3 130 1 8 1 336 4 242 4 150 4 82 1 90 4 246 2 229 18 155 1 112 1 
134 4 249 1 1 4 93 2 179 4 160 1 277 2 18 52 162 8 119 14 40 1 183 1 328 7 43 1 235 1 68 1 24 4 163 1 257 2 25 1 97 1 260 2 101 1 28 2 168 1 191 1 76 2 102 27 264 7 80 1 7 7 130 1 8 1 336 7 242 8 150 2 82 1 90 7 246 1 229 25 155 1 112 1 
134 1 1 4 93 2 179 2 277 1 18 19 117 1 162 3 119 6 183 1 328 3 235 2 24 2 257 2 25 1 97 1 28 1 291 1 76 2 102 9 264 3 7 3 336 3 242 3 150 2 82 1 90 3 246 1 229 10 112 1 
134 2 1 6 93 3 179 4 160 1 277 2 18 26 162 3 119 4 183 2 328 2 43 1 235 1 24 2 68 1 257 3 25 1 97 1 101 1 168 2 76 3 264 2 102 14 7 2 130 1 336 3 242 2 150 3 82 1 90 3 246 2 229 12 155 1 112 1 
248 1 0 1 20 1 200 1 192 1 27 1 56 1 294 1 153 1 84 1 
295 1 276 1 
248 1 0 1 20 1 200 1 205 1 202 1 156 1 192 1 84 1 
176 1 248 1 0 1 274 1 38 1 192 1 241 1 294 1 208 1 84 1 64 1 200 1 20 1 254 1 361 1 27 1 56 1 124 2 
176 1 248 1 0 1 274 1 38 1 192 1 241 1 294 1 208 1 84 1 64 1 200 1 20 1 254 1 361 1 27 1 56 1 124 2 
176 1 248 1 0 1 274 1 38 1 192 1 241 1 294 1 208 1 84 1 64 1 200 1 20 1 254 1 361 1 27 1 56 1 124 2 
244 1 61 1 354 1 
244 1 61 1 354 1 
157 1 262 1 
157 1 61 1 262 1 
19 1 327 1 
176 1 248 1 0 1 17 2 276 1 347 1 208 1 327 1 19 1 213 2 20 1 124 1 144 1 192 1 241 1 106 1 319 1 84 1 172 2 200 1 295 1 55 1 361 1 339 2 269 1 362 1 270 2 
244 1 354 1 
157 1 61 1 262 1 
36 1 93 1 1 2 114 1 116 1 94 1 180 1 18 2 209 1 213 2 140 1 281 2 257 1 352 1 122 1 76 1 79 2 102 1 81 1 267 1 150 1 133 1 268 1 89 1 339 2 340 2 270 2 91 1 108 2 229 1 111 1 
177 1 37 1 303 1 79 2 304 1 306 1 81 1 3 1 348 1 198 1 22 1 186 2 281 2 322 1 321 1 287 1 91 1 108 2 145 1 
177 1 303 1 79 1 304 1 306 1 81 1 348 1 198 1 22 1 186 2 281 1 322 1 287 1 108 1 72 1 91 1 145 1 
37 1 79 1 51 1 128 1 81 1 348 1 268 1 89 1 281 1 280 1 258 1 299 1 91 1 108 1 
177 1 37 1 303 1 79 1 304 1 306 1 81 1 348 1 198 1 22 1 186 2 281 1 322 1 321 1 287 1 91 1 108 1 145 1 
170 1 
184 1 274 1 275 1 296 1 45 1 57 1 307 1 
176 1 274 2 275 1 305 1 135 1 62 1 184 1 308 1 285 1 317 1 222 1 194 1 151 1 201 1 361 1 296 1 110 1 
176 5 274 8 275 9 3 1 184 8 281 3 44 6 98 1 45 1 190 1 143 2 333 2 104 2 7 2 336 2 242 2 195 1 197 2 194 12 107 1 201 4 151 6 296 2 297 2 108 3 152 2 110 4 343 2 344 2 247 2 57 1 58 3 305 3 60 2 162 2 62 4 308 5 258 1 71 2 79 3 316 6 317 4 81 3 355 2 268 3 88 3 89 10 227 1 90 2 320 1 361 5 174 1 91 4 230 2 
176 1 134 1 204 1 274 5 305 1 275 8 60 1 160 1 277 1 162 2 62 2 184 5 308 1 43 1 24 1 68 1 44 5 98 1 50 1 316 5 317 2 7 2 130 1 336 2 242 2 194 6 201 2 151 3 90 2 361 1 296 2 152 1 110 2 344 2 155 1 
176 1 17 1 275 2 60 1 159 1 39 1 162 2 62 1 253 1 213 1 184 2 163 1 215 1 46 1 100 1 191 1 77 1 80 1 317 1 242 1 243 1 172 1 201 1 361 1 339 1 270 1 110 1 344 2 
274 1 275 1 317 1 62 1 184 1 201 1 296 1 45 1 110 1 57 1 
274 5 316 5 275 5 7 2 60 1 336 2 162 2 242 2 194 10 184 5 151 5 90 2 44 5 71 1 344 2 
176 1 274 1 308 1 305 1 296 1 361 1 
176 3 275 2 305 2 62 2 184 2 308 4 281 4 280 1 189 1 258 2 98 2 284 1 190 1 79 4 317 1 128 1 81 1 132 1 268 1 89 1 201 2 54 1 361 3 174 2 91 1 108 4 271 1 152 2 110 2 
58 1 114 1 1 2 93 1 17 2 159 1 116 1 94 1 18 1 120 1 213 3 281 1 257 1 258 1 332 1 313 1 76 1 77 2 79 1 148 1 81 1 150 1 172 2 268 1 89 1 339 2 245 1 362 1 270 3 108 1 91 1 229 1 
249 1 274 4 316 2 275 1 317 1 62 1 194 4 184 2 151 2 201 1 44 2 296 2 98 1 152 1 110 1 
0 1 20 1 289 1 
0 1 20 1 289 1 
19 1 0 1 20 1 294 1 74 1 
0 1 20 1 289 1 
216 1 0 1 20 1 
216 1 0 1 20 1 
216 1 0 1 20 1 
0 1 20 1 
248 1 84 1 
191 1 76 1 134 1 249 1 102 4 93 1 1 2 80 1 277 1 8 1 18 8 162 1 242 1 150 1 119 2 40 1 328 2 68 1 24 1 163 1 257 1 25 1 229 4 
134 1 249 1 1 4 93 2 277 1 18 11 136 1 162 2 119 3 40 1 328 2 24 2 68 1 163 1 257 2 25 1 28 1 191 1 76 2 102 6 264 1 80 1 8 1 336 1 242 1 150 2 90 1 229 5 
134 1 249 1 1 6 93 3 160 1 277 1 136 1 18 19 162 3 119 4 40 1 328 3 43 1 24 1 68 1 163 1 257 3 25 1 168 1 191 1 76 3 264 1 102 9 80 1 7 2 130 1 8 1 336 2 242 3 150 3 90 2 229 10 155 1 
134 1 249 1 1 6 93 3 160 1 277 1 136 1 18 17 162 3 119 5 40 1 328 3 43 1 24 1 68 1 163 1 257 3 25 1 168 1 191 1 76 3 264 2 102 10 80 1 7 1 130 1 8 1 336 2 242 2 150 3 90 2 229 7 155 1 
191 1 76 1 134 1 249 1 102 4 93 1 1 2 80 1 277 1 8 1 18 8 162 1 242 1 150 1 119 2 40 1 328 2 68 1 24 1 163 1 257 1 25 1 229 4 
134 1 1 2 93 1 160 1 277 1 18 12 162 2 119 2 328 1 43 1 24 1 68 1 257 1 25 1 76 1 264 1 102 6 7 2 130 1 336 2 242 2 150 1 90 2 229 6 155 1 
134 1 249 1 1 8 93 4 160 1 277 1 18 18 136 1 162 3 119 5 40 1 328 3 43 1 24 1 68 1 163 1 257 4 25 1 168 2 191 1 76 4 264 2 102 10 80 1 7 1 130 1 8 1 336 2 242 2 150 4 90 2 229 8 155 1 
134 1 1 8 93 4 160 1 277 1 18 16 162 3 119 6 328 3 43 1 24 1 68 1 257 4 25 1 168 2 76 4 291 1 264 3 102 9 7 2 130 1 336 3 242 2 150 4 90 3 229 7 155 1 
191 1 264 3 102 3 80 3 18 7 8 2 162 1 242 1 119 6 40 1 328 3 163 3 229 4 
134 1 249 1 1 8 93 4 160 1 277 1 18 18 162 3 119 4 40 1 328 3 43 1 24 1 68 1 163 1 257 4 25 1 168 2 191 1 76 4 291 1 264 1 102 10 80 1 7 1 130 1 8 1 336 2 242 2 150 4 90 2 229 8 155 1 
191 1 76 2 249 1 102 4 264 1 93 2 1 4 80 1 18 8 8 1 162 1 242 1 150 2 119 3 40 1 328 2 257 2 163 1 229 4 168 1 
191 1 249 1 102 3 80 1 8 1 18 6 162 1 242 1 307 1 119 2 40 1 328 2 163 1 229 3 
76 1 93 1 1 2 102 2 264 1 7 1 136 1 18 4 336 1 162 1 242 1 150 1 119 2 328 1 90 1 257 1 229 2 
134 1 102 3 264 1 7 1 277 1 18 7 336 1 162 1 242 1 119 2 328 1 90 1 24 2 28 1 229 4 
134 2 249 1 93 2 1 4 18 23 162 3 119 9 40 1 328 5 24 2 163 2 257 2 26 1 260 1 28 1 168 2 191 1 76 2 264 4 102 11 80 2 7 2 8 1 336 2 242 3 150 2 357 1 90 2 229 12 
24 1 18 1 229 1 
134 1 102 1 18 1 
76 1 1 2 93 1 102 3 264 1 7 1 136 1 18 6 336 1 162 1 242 1 150 1 119 3 328 2 90 1 257 1 71 1 229 3 
134 1 1 2 93 1 160 1 277 1 18 12 162 2 119 2 328 1 43 1 24 1 68 1 257 1 25 1 76 1 264 1 102 6 7 2 130 1 336 2 242 2 150 1 90 2 229 6 155 1 
191 1 102 3 264 1 80 1 18 6 162 1 242 1 119 2 328 1 163 1 229 3 
76 1 102 1 264 1 93 1 1 2 80 1 8 1 18 3 150 1 119 2 357 1 40 1 328 1 163 1 257 1 229 2 168 1 
76 1 191 1 1 2 93 1 264 2 102 5 80 2 18 10 162 2 242 2 150 1 119 5 328 3 257 1 163 2 25 1 100 1 229 5 
76 1 93 1 1 2 102 2 264 1 18 2 336 1 162 1 150 1 119 1 257 1 25 1 
76 1 93 1 1 2 102 2 264 1 7 1 18 4 336 1 162 1 242 1 150 1 119 2 328 1 90 1 257 1 25 1 229 2 
291 1 76 3 93 3 1 6 264 1 102 1 80 1 18 3 150 3 357 1 119 2 328 1 257 3 163 1 25 1 229 2 168 1 
134 3 249 1 1 10 93 5 277 1 136 1 18 34 162 5 119 12 40 1 328 7 24 4 163 3 257 5 25 1 28 1 167 1 168 2 191 2 291 1 76 5 102 16 264 5 80 3 7 3 8 1 336 3 242 5 150 5 357 1 87 1 13 1 90 3 229 18 
85 1 213 1 126 1 49 1 339 1 362 1 270 1 
126 1 49 1 34 1 138 1 85 1 213 1 339 1 165 1 362 1 270 1 109 1 353 1 
268 1 89 1 79 1 280 1 281 1 128 1 81 1 258 1 91 1 108 1 307 1 
58 1 79 1 17 1 148 1 81 1 172 1 268 1 213 2 89 1 338 1 281 1 339 1 258 1 362 1 270 2 313 1 91 1 108 1 
324 1 58 2 17 2 234 1 213 2 281 1 313 1 79 1 148 1 81 1 197 1 172 1 243 1 268 2 89 3 338 1 339 2 362 1 174 1 270 2 108 1 91 1 343 1 
324 1 58 2 17 2 234 1 350 1 213 2 281 2 313 1 79 2 81 1 197 1 172 1 243 1 268 2 89 3 338 1 35 1 339 2 362 1 174 1 270 2 108 2 91 1 343 1 
176 2 274 1 58 1 218 1 79 3 158 1 81 1 197 1 268 1 350 1 88 1 308 1 89 4 281 3 296 1 361 2 258 1 297 1 174 1 91 1 108 3 343 1 247 1 
176 2 274 1 58 1 79 3 81 1 355 1 197 1 268 1 350 1 88 1 308 1 89 4 281 3 296 1 361 2 258 1 297 1 174 1 91 1 108 3 343 1 247 1 
79 1 178 1 281 1 81 1 91 1 108 1 
58 1 178 1 303 1 79 7 206 1 81 2 3 1 211 1 107 1 268 2 89 3 281 6 340 1 70 1 203 1 258 2 122 1 108 7 91 3 125 1 154 1 
1 4 93 2 3 1 94 2 40 1 140 1 328 2 281 1 332 1 191 1 334 1 102 3 148 1 8 1 242 1 150 2 338 1 339 1 245 1 108 1 342 1 249 1 58 1 17 1 116 2 18 6 252 1 162 1 119 2 213 2 67 1 257 2 163 1 313 1 76 2 79 1 80 1 81 1 172 1 133 1 268 1 89 1 226 1 270 2 362 2 91 1 229 3 
176 3 274 1 275 1 305 1 62 2 184 1 308 2 281 1 258 1 45 1 190 1 143 1 333 1 79 1 317 2 106 1 355 1 88 1 201 2 89 2 296 1 361 3 297 1 108 1 110 2 230 1 247 1 57 1 
268 1 107 1 58 1 89 2 79 2 178 1 281 2 320 1 81 1 3 1 91 2 108 2 247 1 
79 4 128 1 81 1 3 1 268 1 350 1 89 1 281 4 280 1 258 1 91 1 108 4 6 1 
169 1 58 1 79 2 206 1 81 1 337 1 268 1 89 1 255 1 281 2 174 1 108 2 91 2 154 1 
177 1 79 1 186 1 281 1 306 1 81 1 258 1 91 1 108 1 198 1 
268 1 89 1 303 1 79 2 281 2 81 1 3 1 91 1 122 1 108 2 111 1 
79 5 128 1 81 2 3 1 268 2 89 3 280 1 281 4 258 1 203 1 174 1 108 5 122 1 91 2 125 1 6 1 
79 5 128 1 81 2 3 1 41 1 268 2 89 3 280 1 281 4 258 1 203 1 174 1 108 5 122 1 91 2 6 1 
58 1 79 1 17 1 81 1 172 1 268 1 213 2 89 1 338 1 281 1 35 1 339 1 258 1 362 1 270 2 313 1 91 1 108 1 
58 1 79 1 206 1 81 1 107 1 268 1 89 1 281 1 70 1 174 1 108 1 91 2 154 1 
36 1 213 1 339 1 221 1 115 1 270 1 352 1 223 1 209 1 
309 1 164 1 221 1 
220 1 115 1 221 1 362 1 223 1 
176 2 324 1 274 1 220 2 221 1 115 2 106 1 223 2 4 1 243 1 234 1 10 1 309 1 296 1 361 2 164 1 297 1 362 1 272 1 
65 1 232 1 59 1 307 1 
65 1 301 1 214 1 232 1 59 1 292 1 263 1 
78 1 263 1 315 1 
15 1 301 1 325 1 31 1 232 1 59 1 292 1 278 2 65 1 214 3 330 1 263 3 
65 1 301 1 214 2 232 1 59 1 292 1 293 1 263 2 5 1 
301 1 214 1 186 1 31 1 322 1 173 1 306 1 59 1 105 1 292 1 263 1 
301 1 214 1 232 1 31 1 59 1 292 1 263 1 
65 1 301 1 214 1 232 2 31 1 292 1 263 1 
301 2 345 1 232 1 31 1 59 1 292 2 356 1 214 2 279 1 263 2 
92 1 301 1 232 1 31 1 59 2 292 1 65 1 214 3 12 1 173 1 263 3 146 1 5 2 
177 1 301 1 232 1 31 1 59 1 149 1 306 1 292 1 65 1 214 2 186 2 22 1 322 1 263 2 5 1 
92 1 301 2 232 1 31 1 59 2 292 2 293 1 65 1 214 4 173 1 263 4 75 1 5 2 
65 1 301 1 214 1 232 1 31 1 59 1 292 1 263 1 
92 1 15 1 301 1 325 1 232 2 59 3 292 1 278 1 65 2 214 4 173 1 312 1 263 4 5 2 
301 1 31 1 250 1 232 1 292 1 139 1 65 1 214 1 312 1 341 1 263 1 
15 1 301 1 325 2 31 1 232 1 59 1 292 1 278 2 65 1 214 3 329 1 263 3 
265 1 59 2 32 1 118 2 
21 1 301 1 214 1 31 1 292 1 263 1 
65 1 301 1 12 1 214 2 232 1 31 1 59 1 292 1 263 2 5 1 
193 1 
65 1 301 1 214 1 232 1 31 1 59 1 292 1 263 1 
301 1 31 1 232 1 59 1 292 1 278 1 65 1 214 3 12 1 263 3 5 1 
92 1 173 1 312 1 59 1 
232 1 59 1 

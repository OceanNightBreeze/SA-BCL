#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 1 209 1 293 2 319 1 343 1 19 9 117 1 192 3 167 2 87 1 121 2 122 1 298 1 128 4 250 1 252 1 105 1 305 9 178 2 224 2 10 1 288 6 356 1 336 1 61 5 358 2 263 2 139 1 
339 1 209 1 293 2 319 1 343 1 19 9 117 1 192 3 167 2 87 1 121 2 122 1 298 1 128 4 250 1 252 1 105 1 305 9 178 2 224 2 10 1 288 6 356 1 336 1 61 5 358 2 263 2 139 1 
339 1 209 1 293 2 319 1 343 1 19 10 117 1 192 4 167 2 87 1 121 2 122 1 298 1 128 5 250 1 252 1 105 1 305 10 178 2 224 2 10 1 288 7 356 1 336 1 61 6 358 2 263 2 139 1 
339 1 209 1 293 2 319 1 343 1 19 7 117 1 192 2 167 2 87 1 121 1 122 1 298 1 128 3 250 1 105 1 305 7 178 2 224 2 10 1 288 4 356 1 336 1 61 4 358 2 263 2 139 1 
209 1 128 2 293 1 319 1 343 1 252 1 19 4 105 1 192 1 224 1 178 1 305 4 10 1 121 2 288 3 61 3 358 1 263 1 
209 1 299 1 343 1 19 2 105 1 178 1 305 2 224 1 167 1 227 1 181 1 87 1 61 1 358 1 263 1 139 1 
209 1 128 1 343 1 19 3 105 1 178 2 305 3 192 1 167 1 288 1 61 2 358 2 298 1 
209 1 293 1 238 1 319 1 343 1 19 9 192 3 167 1 121 2 122 1 298 1 128 4 222 1 250 1 252 1 105 1 305 9 178 2 224 1 10 1 288 7 61 5 358 2 263 1 
209 1 293 1 238 1 319 1 343 1 19 9 192 3 167 1 121 2 122 1 298 1 128 4 222 1 250 1 252 1 105 1 305 9 178 2 224 1 10 1 288 7 61 5 358 2 263 1 
326 1 79 1 372 1 
113 1 331 2 326 1 
346 1 106 2 211 2 334 1 27 2 357 2 174 2 201 2 
184 1 267 1 360 1 211 2 141 1 142 1 295 1 85 1 296 1 143 1 0 2 346 1 3 1 27 3 90 1 194 1 218 1 277 1 278 1 327 1 150 2 174 2 284 1 350 1 201 2 176 2 177 2 102 1 287 2 106 3 138 1 334 1 357 2 260 1 264 1 266 1 66 1 
106 1 211 1 334 1 27 1 357 1 53 1 174 1 300 1 201 1 347 1 
82 1 269 1 211 1 294 1 119 1 27 2 243 1 347 2 326 1 53 1 174 1 300 1 37 1 302 1 201 2 352 1 106 2 137 1 334 1 357 1 79 1 
82 1 269 1 211 2 53 1 174 2 300 1 302 1 37 2 201 2 352 2 119 1 106 2 137 1 334 1 357 2 27 2 326 1 347 2 79 1 
279 1 136 1 37 1 70 1 352 1 
279 1 136 1 135 1 92 1 37 2 326 1 79 1 352 2 
136 1 37 1 352 1 
82 1 106 1 279 1 211 1 334 1 27 1 357 1 53 1 174 1 300 1 37 1 201 1 347 1 352 1 
326 1 
279 1 136 1 92 1 37 2 326 1 79 1 96 1 352 2 
247 1 111 2 15 2 279 2 341 1 34 1 329 1 37 5 103 1 352 5 272 1 375 2 136 2 259 1 92 1 326 1 183 1 79 1 42 1 
346 1 372 1 
211 1 174 1 201 2 345 1 346 2 106 2 27 2 357 1 76 1 
25 1 275 1 93 1 
360 1 142 1 284 1 176 1 102 1 177 1 0 1 346 1 106 1 27 1 194 1 260 1 264 1 277 1 94 1 66 1 
360 1 292 1 282 1 174 1 142 1 284 1 201 1 176 1 102 1 177 1 0 1 25 1 106 2 357 1 27 2 260 1 194 1 264 1 277 1 66 1 
346 1 292 1 106 3 211 1 27 3 357 3 174 3 201 3 
106 1 27 1 357 1 174 1 300 1 201 1 347 1 
106 1 211 1 27 1 357 1 174 1 76 1 201 1 347 1 345 1 
292 1 141 1 142 1 296 1 85 1 0 1 346 1 2 1 3 1 4 1 194 1 347 2 150 2 302 1 55 1 201 3 350 1 102 1 352 1 106 4 357 3 260 1 264 1 266 1 66 1 360 1 267 1 269 1 211 2 119 1 27 4 218 1 277 1 278 1 282 1 174 3 37 1 284 1 176 1 177 1 287 1 137 1 334 1 138 1 76 1 
346 1 292 1 106 2 27 2 357 1 174 1 215 1 243 1 201 2 
292 2 269 1 211 1 282 1 174 3 37 1 302 1 201 3 166 1 352 1 2 1 119 1 106 3 137 1 357 3 27 3 76 1 326 1 347 1 
292 1 211 1 174 2 201 2 106 2 25 1 357 2 27 2 93 1 76 1 
360 1 142 1 284 1 176 1 102 1 177 1 0 1 346 1 106 1 27 1 194 1 260 1 264 1 277 1 66 1 
360 1 142 1 284 1 176 1 102 1 177 1 0 1 9 1 346 1 106 1 23 1 27 1 260 1 264 1 66 1 
340 1 43 1 267 1 141 1 17 1 295 2 85 1 297 1 275 2 25 2 3 2 93 2 218 1 219 1 195 1 278 1 150 2 350 1 303 1 287 4 254 1 161 1 62 1 314 1 
119 1 307 1 106 1 27 1 357 1 174 1 201 1 347 1 
292 2 211 1 174 4 282 1 155 1 201 5 346 1 106 5 357 4 27 5 204 1 215 1 76 1 243 1 
307 1 106 2 27 2 357 2 174 2 300 1 201 2 347 1 
171 1 330 1 
171 1 330 1 
44 1 312 1 
44 1 312 1 
44 1 312 1 
171 1 330 1 162 1 
171 1 330 1 162 1 
171 1 330 1 202 1 
44 1 171 2 330 2 310 1 312 1 289 1 
171 1 330 1 162 1 
354 1 171 1 330 1 
354 1 171 1 330 1 
354 1 171 1 330 1 
359 1 235 2 110 2 16 1 171 2 328 3 173 1 330 2 37 2 352 2 22 1 24 2 310 1 13 1 77 2 326 1 126 1 163 2 246 1 
359 1 235 1 346 1 24 1 27 2 193 1 148 1 95 1 328 1 171 1 330 1 370 1 174 2 37 1 54 1 201 2 352 1 202 1 106 2 355 1 357 2 232 1 77 1 163 1 
293 1 263 1 224 1 
227 1 263 1 224 1 
227 1 60 1 293 2 285 1 240 1 224 3 
227 1 83 1 293 1 285 1 240 1 224 2 
227 1 293 1 240 1 285 2 224 2 
43 1 15 1 111 1 361 1 113 1 297 1 193 1 363 2 92 1 326 2 220 1 197 1 195 1 95 1 5 1 279 4 34 3 331 3 37 5 157 1 352 5 375 1 355 1 136 1 377 1 258 2 161 1 259 2 63 2 183 1 79 1 80 1 
43 3 111 2 15 2 113 3 297 3 321 1 68 1 363 6 92 1 326 5 195 3 95 4 70 5 170 1 5 3 279 7 34 8 329 1 331 9 37 9 157 1 333 1 352 9 375 2 136 6 134 5 377 2 161 3 259 6 40 1 63 6 183 1 79 1 80 2 234 1 
43 1 15 1 111 1 361 1 113 2 297 1 363 2 326 3 220 1 195 1 95 1 279 2 5 1 34 3 329 1 331 4 37 3 352 3 375 1 377 1 258 1 161 1 259 2 63 2 79 1 80 1 
43 2 15 1 111 1 361 1 113 3 297 2 321 1 363 4 326 4 220 1 195 2 95 2 170 1 279 3 5 2 34 5 329 1 331 7 37 4 333 1 352 4 375 1 377 1 258 2 161 2 259 4 63 4 79 1 80 1 
376 1 66 1 372 1 
65 1 66 1 
196 1 
264 1 66 1 
376 2 369 1 142 1 264 1 225 1 66 3 
142 1 264 1 66 1 
20 1 66 1 
186 2 33 1 52 1 281 1 295 4 301 1 303 2 297 1 251 1 57 1 287 7 255 1 131 1 3 3 26 1 161 1 314 3 
186 2 33 1 52 1 281 1 295 4 301 1 303 2 297 1 251 1 57 1 287 7 255 1 131 1 3 3 26 1 161 1 314 3 
186 2 33 1 52 1 281 1 301 1 295 4 303 2 297 1 251 1 57 1 287 7 255 1 131 1 3 3 26 1 161 1 314 3 32 1 
43 3 186 3 140 1 141 1 295 16 85 1 239 1 297 4 271 4 165 1 3 15 26 1 216 1 218 1 195 3 278 1 5 3 33 2 150 2 52 2 281 1 301 1 303 5 251 1 104 3 57 2 287 31 131 2 353 1 255 5 230 1 161 4 314 10 81 1 
186 2 278 2 368 1 33 1 150 4 52 1 281 1 141 2 301 1 295 5 239 1 303 3 85 2 297 1 144 1 57 1 287 9 131 1 255 1 3 4 26 1 161 1 218 2 314 4 
209 1 360 1 268 1 293 1 343 1 18 1 19 2 0 1 167 1 1 1 29 1 348 1 153 1 176 1 177 1 105 1 58 1 305 2 178 1 224 2 227 1 39 1 60 1 288 1 61 1 75 1 260 1 358 1 263 1 290 1 
209 1 360 1 268 1 293 1 189 1 343 1 18 1 19 3 0 1 167 1 1 1 29 1 30 1 176 1 177 1 58 1 305 3 178 1 224 2 227 1 60 1 39 1 288 2 61 1 75 1 260 1 358 1 263 1 338 1 290 1 
209 1 360 1 268 1 293 1 189 1 343 1 19 2 0 1 167 1 29 1 176 1 177 1 58 1 305 2 224 2 227 1 39 1 60 1 288 2 61 1 75 1 260 1 263 1 338 1 290 1 
360 1 268 2 236 1 19 1 0 1 116 1 167 2 49 1 30 1 154 1 176 1 177 1 102 1 58 2 305 1 178 1 39 2 229 1 309 1 260 1 358 1 264 1 66 1 
348 1 360 1 268 1 293 1 176 1 18 1 19 1 177 1 105 1 0 1 224 2 178 1 305 1 58 1 1 1 167 1 227 1 60 1 39 1 29 1 260 1 75 1 358 1 263 1 338 1 290 1 
74 1 
294 1 0 2 92 3 243 1 347 1 97 2 98 1 152 2 7 1 349 2 302 1 201 1 304 2 102 2 352 5 106 1 160 2 309 1 259 2 260 1 264 1 66 1 111 1 15 1 360 1 269 1 113 2 318 1 116 1 214 1 119 1 362 1 27 1 326 4 124 1 168 1 280 1 34 2 71 4 35 1 331 2 37 5 176 2 177 2 226 1 374 2 375 1 136 6 377 1 137 1 233 2 78 1 183 1 79 3 291 1 
269 1 294 1 119 1 362 1 27 1 92 1 243 1 347 1 326 2 124 1 168 1 96 1 280 1 71 2 7 1 349 1 37 3 302 1 201 1 352 3 106 1 136 2 137 1 79 2 
280 1 269 1 71 3 7 1 302 1 37 2 294 1 201 1 352 2 119 1 106 1 362 1 137 1 160 1 27 1 243 1 326 2 347 1 124 1 168 1 79 2 
269 1 294 1 119 1 362 1 27 1 92 1 243 1 347 1 326 3 124 1 168 1 96 1 280 1 71 3 7 1 349 1 37 3 302 1 201 1 304 1 352 3 106 1 136 2 137 1 160 1 79 3 
82 1 294 1 146 1 92 3 243 1 347 2 96 1 97 2 98 1 152 2 53 1 7 1 300 1 349 4 302 1 201 2 304 4 352 5 106 2 357 1 160 3 259 1 262 1 111 1 15 1 269 1 211 1 113 2 214 1 119 1 362 1 27 2 326 4 124 1 168 1 367 1 280 1 71 5 34 1 174 1 37 5 286 1 375 1 374 2 136 7 137 1 378 1 334 1 233 2 183 1 79 4 
294 1 92 2 243 1 347 1 97 2 98 1 152 2 7 1 349 2 302 1 201 1 304 2 352 4 106 1 160 2 259 1 111 1 15 1 269 1 113 2 214 1 119 1 362 1 27 1 326 4 124 1 168 1 280 1 71 4 34 1 331 2 37 4 226 1 375 1 374 2 136 4 137 1 233 2 183 1 79 3 
15 1 111 1 269 1 113 2 294 1 214 1 119 1 146 1 362 1 27 1 92 2 243 1 347 1 326 3 124 1 168 1 97 2 98 1 280 1 152 2 34 1 71 4 7 1 349 2 37 4 302 1 201 1 304 2 352 4 374 2 375 1 106 1 136 4 137 1 378 1 160 2 259 1 262 1 233 2 183 1 79 3 
15 1 111 1 269 1 113 2 294 1 214 1 119 1 146 1 362 1 27 1 92 2 243 1 347 1 326 3 124 1 168 1 97 2 98 1 280 1 152 2 34 1 71 4 7 1 349 2 37 4 302 1 201 1 304 2 352 4 374 2 375 1 106 1 136 4 137 1 378 1 160 2 259 1 262 1 233 2 183 1 79 3 
15 1 111 1 112 2 269 1 45 1 294 1 214 1 119 1 362 1 322 2 27 1 92 2 243 1 123 1 347 1 326 3 124 1 168 1 97 2 280 1 34 1 71 4 7 1 349 2 331 2 37 4 302 1 201 1 304 2 352 4 374 2 375 1 106 1 136 4 137 1 160 2 231 1 259 1 262 1 183 1 79 3 
15 1 111 1 269 1 113 2 294 1 214 1 119 1 146 1 362 1 27 1 92 2 243 1 347 1 326 3 124 1 168 1 97 2 98 1 280 1 152 2 34 1 71 5 7 1 349 3 37 4 302 1 201 1 304 3 352 4 286 1 374 2 375 1 106 1 136 5 378 1 137 1 160 3 259 1 262 1 233 2 183 1 79 3 
15 1 111 1 269 1 113 2 294 1 214 1 119 1 146 1 362 1 27 1 92 2 243 1 347 1 326 3 124 1 168 1 97 2 98 1 280 1 152 2 34 1 71 5 7 1 349 3 37 4 302 1 201 1 304 3 352 4 286 1 374 2 375 1 106 1 136 5 378 1 137 1 160 3 259 1 262 1 233 2 183 1 79 3 
294 1 92 2 243 1 347 1 97 2 7 1 349 2 302 1 201 1 304 2 352 4 106 1 160 2 259 1 111 1 15 1 112 2 269 1 214 1 119 1 362 1 322 2 27 1 123 1 326 3 124 1 168 1 280 1 71 4 34 1 331 2 37 4 226 1 375 1 374 2 136 4 137 1 183 1 79 3 
267 1 186 1 141 1 295 3 85 1 297 1 346 2 25 1 275 1 3 3 26 1 93 1 218 1 219 1 278 1 33 1 150 2 281 1 301 1 350 1 303 2 372 1 287 6 131 1 161 1 314 2 
184 1 43 2 267 1 140 1 141 2 270 1 295 8 85 2 297 1 271 3 115 1 346 1 275 11 25 11 3 6 91 1 93 4 218 2 195 1 278 2 5 2 150 4 283 1 303 1 350 2 104 3 287 14 255 1 353 1 138 1 161 2 64 1 314 2 
208 1 184 1 360 1 267 1 292 1 141 1 142 1 270 1 295 1 85 1 0 1 346 1 3 1 27 2 194 1 93 1 218 1 277 1 94 1 278 1 150 2 151 1 174 1 282 1 284 1 176 1 350 1 201 1 177 1 102 1 223 1 287 2 106 2 138 1 357 1 260 1 264 1 66 1 
184 1 43 2 186 1 292 1 141 3 142 2 295 10 85 3 296 2 47 1 297 3 0 3 346 2 3 10 194 2 93 7 195 2 5 2 150 6 156 1 301 1 303 4 201 1 350 3 102 1 306 1 255 4 106 3 357 1 161 3 260 2 264 2 314 8 66 2 267 3 360 2 270 1 275 7 25 7 26 1 27 3 323 2 325 2 218 3 277 2 278 3 33 1 281 1 282 1 174 1 284 2 176 3 177 3 287 20 373 2 131 1 228 2 138 1 338 1 
184 1 292 1 360 2 267 2 185 1 141 2 295 1 85 2 0 7 116 1 3 1 27 1 89 1 90 2 218 2 219 1 278 2 150 4 172 1 153 1 174 1 201 1 176 8 350 2 177 8 102 2 287 2 133 1 106 1 107 1 138 1 357 1 309 1 260 2 206 1 264 2 338 1 381 1 66 3 
43 1 267 1 211 1 141 1 270 1 295 1 85 1 297 1 25 1 275 1 3 2 27 1 93 1 218 1 195 1 221 1 278 1 5 1 150 2 174 1 303 1 350 1 201 1 287 3 106 1 357 1 161 1 76 1 314 1 
43 1 267 1 278 1 150 2 141 1 17 1 295 2 350 1 85 1 287 2 255 1 25 1 275 1 161 1 93 1 218 1 219 1 314 1 
267 1 278 1 150 2 141 1 303 1 350 1 85 1 297 1 287 2 25 1 275 1 3 2 93 1 62 1 218 1 219 1 314 1 195 1 
43 1 267 1 278 1 5 1 150 2 141 1 295 2 303 1 350 1 85 1 297 1 287 4 255 1 25 2 275 2 3 2 161 1 93 2 218 1 219 1 314 2 195 1 
43 1 185 1 267 1 278 1 150 2 141 1 17 1 295 2 350 1 85 1 287 2 255 1 25 1 275 1 161 1 93 1 218 1 314 1 
185 1 267 1 278 1 150 2 141 1 303 1 350 1 85 1 297 1 287 2 25 1 275 1 3 2 93 1 62 1 218 1 314 1 195 1 
43 1 185 1 267 1 278 1 5 1 150 2 141 1 295 2 303 1 350 1 85 1 297 1 287 4 255 1 25 2 275 2 3 2 161 1 93 2 218 1 314 2 195 1 
43 1 267 1 278 1 5 1 150 2 141 1 295 2 303 1 350 1 85 1 297 1 287 4 255 1 25 2 275 2 3 2 161 1 93 2 218 1 314 2 195 1 
184 1 360 1 267 1 141 1 142 1 295 1 296 1 85 1 0 1 346 1 3 1 27 1 194 1 218 1 277 1 278 1 150 2 284 1 176 1 350 1 177 1 102 1 287 2 106 1 138 1 260 1 264 1 66 1 
184 1 360 1 267 1 342 1 141 1 142 1 295 1 85 1 0 1 346 1 23 1 3 1 27 1 218 1 278 1 150 2 284 1 176 1 350 1 177 1 102 1 9 1 287 2 106 1 138 1 260 1 264 1 66 1 
43 1 267 1 278 1 5 1 150 2 141 1 270 1 295 2 303 1 350 1 85 1 297 1 287 4 255 1 25 2 275 2 3 2 161 1 93 2 218 1 314 2 195 1 
43 1 360 1 267 1 141 1 142 1 295 2 296 1 85 1 297 1 0 1 25 2 275 2 3 2 27 1 93 2 194 1 218 1 277 1 195 1 278 1 5 1 150 2 153 1 284 1 303 1 176 1 350 1 177 1 287 4 373 1 255 1 106 1 161 1 260 1 264 1 314 2 66 1 
43 1 267 1 211 1 141 1 270 1 295 2 85 1 297 1 275 1 25 1 3 1 27 1 93 1 218 1 195 1 278 1 5 1 150 2 174 1 350 1 201 1 287 3 255 1 179 1 106 1 357 1 161 1 76 1 314 1 
43 3 317 2 210 1 140 1 141 2 295 9 46 2 85 2 297 3 271 2 191 1 144 1 3 10 218 2 195 3 248 1 278 2 5 3 150 4 303 3 332 1 104 1 158 1 159 1 287 19 353 1 255 3 308 1 161 3 314 6 
43 3 317 4 140 2 141 3 84 1 295 14 46 1 239 2 85 3 297 2 271 2 213 1 191 2 144 1 21 1 3 12 218 3 244 1 195 2 248 1 278 3 5 3 150 6 303 2 332 1 104 2 159 1 287 26 255 2 38 1 308 2 161 3 207 1 314 4 
43 4 186 1 317 4 210 1 140 3 141 3 84 1 295 20 46 1 239 1 85 3 297 5 213 1 271 4 191 2 144 1 21 1 3 21 26 1 218 3 244 1 195 4 248 1 278 3 5 4 33 1 150 6 281 1 301 1 303 4 332 1 104 3 159 1 287 41 131 1 353 1 255 4 38 1 308 1 108 1 161 5 207 1 314 8 
43 4 186 1 317 4 210 1 140 3 141 4 84 1 295 20 46 1 239 2 85 4 297 4 213 1 271 4 191 2 144 1 21 1 3 18 26 1 218 4 244 1 195 3 248 1 278 4 5 4 33 1 150 8 281 1 301 1 303 4 332 1 104 3 159 1 287 38 131 1 353 1 255 3 38 1 308 1 108 1 161 5 207 1 314 7 
43 7 186 1 317 4 140 2 141 2 84 1 295 27 46 1 239 1 85 2 297 8 213 1 271 4 191 1 144 1 21 1 3 25 26 1 91 2 218 2 244 1 195 7 248 1 278 2 5 7 33 1 150 4 281 1 301 1 303 7 332 1 104 4 159 1 287 52 131 1 353 2 255 7 38 1 308 1 161 8 207 1 314 14 
22 1 235 1 24 1 171 1 330 1 310 1 28 1 13 1 77 1 163 1 
54 1 202 1 
241 1 235 1 24 1 171 1 330 1 217 1 77 1 379 1 163 1 
359 1 235 1 110 1 171 1 328 2 173 1 330 1 37 1 352 1 22 1 24 1 310 1 13 1 77 1 326 1 126 1 163 1 246 1 
359 1 235 1 110 1 171 1 328 2 173 1 330 1 37 1 352 1 22 1 24 1 310 1 13 1 77 1 326 1 126 1 163 1 246 1 
359 1 235 1 110 1 171 1 328 2 173 1 330 1 37 1 352 1 22 1 24 1 310 1 13 1 77 1 326 1 126 1 163 1 246 1 
256 1 289 1 162 1 
256 1 289 1 162 1 
354 1 351 1 
354 1 289 1 351 1 
370 1 232 1 
110 1 235 1 346 1 24 1 27 2 193 1 148 1 95 1 279 1 171 1 328 1 173 1 6 1 330 1 370 1 174 2 37 1 54 1 201 2 352 1 202 1 106 2 355 1 357 2 232 1 77 1 163 1 
256 1 162 1 
354 1 289 1 351 1 
184 1 360 1 267 1 141 1 270 1 295 1 86 1 85 1 0 2 3 1 27 2 276 1 89 1 90 2 218 1 51 1 278 1 150 2 172 1 176 2 350 1 201 2 177 2 287 2 106 2 180 1 138 1 260 1 264 1 41 1 66 1 
360 1 293 1 153 1 176 2 320 1 177 2 0 2 224 2 145 1 1 1 227 1 60 1 39 1 29 1 260 1 205 1 263 1 338 1 290 1 
360 1 187 1 293 1 176 1 177 1 0 1 224 2 145 1 1 1 227 1 60 1 39 1 29 1 260 1 263 1 338 1 290 1 
360 1 236 1 176 1 320 1 102 1 177 1 0 1 116 1 39 1 309 1 260 1 261 1 264 1 66 1 
360 1 293 1 176 1 320 1 177 1 0 1 224 2 145 1 1 1 227 1 60 1 39 1 29 1 260 1 205 1 263 1 338 1 290 1 
198 1 
247 1 34 1 259 1 326 1 79 1 103 1 372 1 
15 1 111 1 113 1 92 1 326 2 98 1 152 1 34 1 331 1 37 1 352 1 375 1 136 1 259 1 233 1 183 1 79 1 
43 1 15 2 111 2 360 1 113 3 142 1 297 1 0 1 120 1 88 1 363 3 323 1 92 1 326 3 195 1 5 1 34 4 369 1 331 6 37 2 302 1 101 1 176 1 177 1 102 1 352 2 59 1 375 2 376 1 136 2 377 1 161 1 311 1 259 3 260 2 63 3 264 1 109 1 380 1 183 2 65 2 315 1 66 4 
43 2 316 1 15 2 111 2 140 1 113 3 84 1 297 2 271 1 213 1 21 1 120 2 147 1 363 5 92 1 326 5 244 1 195 2 5 2 34 8 199 1 331 6 37 1 104 1 352 1 375 2 136 1 377 1 161 2 259 5 63 5 78 1 207 1 183 2 79 2 
15 1 111 1 82 1 211 1 297 1 120 2 146 1 26 1 27 1 347 1 33 1 34 2 53 1 174 1 199 1 300 1 37 1 201 1 352 1 131 1 375 1 106 1 334 1 357 1 161 2 259 2 313 1 183 1 
247 1 111 1 15 1 34 1 103 1 375 1 259 1 326 1 183 1 79 1 
43 2 5 2 34 5 113 5 199 1 331 10 297 2 120 2 363 5 323 1 161 2 259 5 63 5 326 5 195 2 
136 1 92 1 37 1 326 1 79 1 352 1 
67 2 360 1 15 2 111 2 188 1 318 1 0 4 116 1 118 1 92 2 69 1 34 2 329 1 37 3 176 4 177 4 102 2 352 3 375 2 136 4 377 2 309 1 260 1 259 2 264 1 183 1 78 2 291 1 66 1 
360 1 267 1 211 2 141 1 142 1 85 1 296 1 0 1 346 1 3 1 27 3 194 1 218 1 277 1 278 1 150 2 174 2 284 1 176 1 201 2 350 1 177 1 102 1 287 1 106 3 138 1 334 1 357 2 260 1 264 1 266 1 66 1 
186 1 111 1 15 1 34 1 113 2 331 4 375 1 377 1 363 2 259 2 63 2 326 4 183 1 78 1 79 2 
72 1 77 1 163 1 
72 1 77 1 163 1 
22 1 232 1 77 1 125 1 163 1 
72 1 77 1 163 1 
273 1 77 1 163 1 
273 1 77 1 163 1 
273 1 77 1 163 1 
77 1 163 1 
171 1 330 1 
186 1 278 2 150 4 33 1 281 1 141 2 295 4 301 1 303 2 85 2 239 1 297 1 287 8 255 1 131 1 3 4 26 1 161 1 218 2 314 3 
186 1 33 1 281 1 301 1 295 3 303 2 297 1 372 1 287 6 131 1 3 3 26 1 161 1 314 2 
43 1 278 1 5 1 150 2 141 1 295 2 303 1 85 1 297 1 287 4 255 1 3 2 257 1 161 1 218 1 314 2 195 1 
43 1 5 1 140 1 295 3 303 1 297 1 271 2 104 1 287 7 353 1 255 1 3 4 161 1 314 2 195 1 
43 2 186 1 141 2 295 11 239 2 85 2 297 3 271 2 115 1 3 12 26 1 91 1 218 2 195 2 278 2 5 2 33 2 150 4 281 1 301 1 303 5 104 2 287 23 131 2 255 4 353 1 161 3 314 9 14 1 
3 1 271 1 287 1 
295 1 104 1 287 1 
43 1 278 1 5 1 150 2 141 1 295 3 85 1 303 2 297 1 287 6 255 1 257 1 3 3 323 1 161 1 218 1 314 3 195 1 
43 2 140 1 141 1 295 6 84 1 85 1 297 2 271 1 213 1 144 1 21 1 3 6 218 1 244 1 195 2 278 1 5 2 150 2 303 1 104 1 287 12 255 1 161 2 207 1 314 2 
33 1 295 3 303 1 297 1 287 6 131 1 255 1 3 3 26 1 161 1 314 2 
278 1 33 1 150 2 281 1 141 1 295 1 301 1 303 1 239 1 85 1 287 3 255 1 131 1 3 2 218 1 314 2 14 1 
278 1 150 2 33 2 141 1 295 5 85 1 303 3 297 2 144 1 287 10 131 2 255 2 3 5 26 1 161 2 218 1 313 1 314 5 
43 1 278 1 150 2 141 1 295 2 85 1 144 1 287 2 255 1 161 1 218 1 314 1 
43 1 278 1 5 1 150 2 141 1 295 2 303 1 85 1 297 1 144 1 287 4 255 1 3 2 161 1 218 1 314 2 195 1 
278 3 210 1 150 6 33 1 141 3 295 1 239 1 85 3 303 1 144 1 287 3 131 1 255 1 3 2 218 3 14 1 314 2 
43 3 186 1 210 1 140 1 141 5 295 16 239 2 85 5 297 5 271 4 144 1 3 18 26 2 216 1 218 5 195 3 278 5 5 3 33 3 150 10 281 1 301 1 303 7 104 3 287 34 131 3 353 1 255 5 257 1 230 1 161 5 14 1 314 12 81 1 
186 1 140 1 141 1 295 4 85 1 297 1 271 1 144 1 3 4 26 1 218 1 244 1 278 1 150 2 33 1 281 1 301 1 303 2 104 1 287 8 131 1 161 1 314 2 
43 1 186 1 140 1 141 2 295 6 85 2 297 1 271 2 144 1 3 5 26 1 218 2 244 1 278 2 5 1 33 1 150 4 281 1 301 1 303 2 104 1 287 11 131 1 353 1 255 1 257 1 161 2 314 3 
43 2 186 1 140 1 141 3 84 1 295 9 85 3 239 1 297 3 271 1 213 1 144 1 21 1 3 10 26 1 218 3 244 1 195 2 278 3 5 2 33 1 150 6 281 1 301 1 303 3 104 1 287 19 131 1 255 1 257 1 161 3 207 1 314 4 
43 2 186 1 140 1 141 3 295 10 84 1 239 1 85 3 297 2 271 1 213 1 144 1 21 1 3 7 26 1 218 3 244 1 195 1 278 3 5 2 33 1 150 6 281 1 301 1 303 3 104 1 287 17 131 1 255 2 257 1 161 3 207 1 314 5 
186 1 140 1 141 1 295 4 85 1 297 1 271 1 144 1 3 4 26 1 218 1 244 1 278 1 150 2 33 1 281 1 301 1 303 2 104 1 287 8 131 1 161 1 314 2 
43 2 140 1 141 1 295 6 84 1 85 1 297 2 271 1 213 1 144 1 21 1 3 6 218 1 244 1 195 2 278 1 5 2 150 2 303 1 104 1 287 12 255 1 161 2 207 1 314 2 
43 2 186 1 140 1 141 4 84 1 295 10 85 4 239 2 297 2 271 1 213 1 144 1 21 1 3 8 26 1 218 4 244 1 195 1 278 4 5 2 33 1 150 8 281 1 301 1 303 3 104 1 287 18 131 1 255 2 257 1 161 3 207 1 314 5 
43 3 210 1 140 1 141 4 84 1 295 9 85 4 239 2 297 2 271 1 213 1 144 1 21 1 3 7 218 4 244 1 195 2 278 4 5 3 150 8 303 3 104 1 287 16 255 3 161 3 207 1 314 6 
33 3 281 1 301 2 295 3 303 3 297 1 287 7 131 3 255 3 3 4 26 1 161 1 314 6 
43 2 186 1 210 1 140 1 141 4 84 1 295 10 85 4 239 2 297 2 271 1 213 1 144 1 21 1 3 8 26 1 218 4 244 1 195 1 278 4 5 2 33 1 150 8 281 1 301 1 303 3 104 1 287 18 131 1 255 1 161 3 207 1 314 4 
346 1 106 1 27 1 215 1 243 1 201 1 366 1 
175 1 201 1 190 1 346 1 106 1 335 1 27 1 215 1 243 1 366 1 149 1 169 1 
360 1 309 1 260 1 264 1 176 1 177 1 102 1 0 1 116 1 66 1 372 1 
292 1 360 1 174 1 142 1 284 1 201 1 176 1 102 1 177 1 0 1 346 1 106 2 357 1 27 2 260 1 194 1 264 1 66 1 
360 1 67 1 292 1 269 1 142 2 0 1 20 1 346 1 119 1 27 2 194 1 242 1 347 1 174 1 284 1 176 1 201 2 177 1 106 2 357 2 260 1 264 2 66 3 
360 1 67 1 292 1 269 1 142 2 0 2 20 1 346 1 119 1 23 1 27 2 242 1 347 1 174 1 284 1 176 2 201 2 253 1 177 2 106 2 357 2 260 1 264 2 66 3 
82 1 360 1 67 1 211 1 142 1 0 1 344 1 20 1 27 1 242 1 347 1 326 1 127 1 53 1 174 1 300 1 37 2 302 1 201 1 176 1 177 1 352 2 106 1 376 1 136 1 334 1 357 1 260 1 264 1 65 1 79 1 66 4 
82 1 360 1 67 1 211 1 142 1 0 1 20 1 27 1 242 1 347 1 326 1 53 1 174 1 300 1 37 2 302 1 201 1 176 1 177 1 352 2 106 1 376 1 136 1 334 1 357 1 311 1 260 1 264 1 65 1 79 1 66 4 
360 1 260 1 176 1 206 1 177 1 0 1 
360 2 172 1 153 1 369 1 130 1 142 1 176 7 102 2 177 7 0 6 133 1 182 1 107 1 90 1 324 1 260 3 206 1 264 2 338 1 381 1 66 3 
292 1 186 1 141 2 142 1 295 3 296 1 85 2 297 1 0 1 346 2 3 3 93 1 194 1 51 1 150 4 153 1 301 1 201 1 350 2 303 2 106 2 357 1 161 1 260 1 264 1 314 2 66 1 267 2 360 1 270 1 275 1 25 1 26 1 27 2 218 2 277 1 278 2 33 1 281 1 174 1 284 1 176 1 177 1 373 1 287 6 131 1 228 1 
82 1 297 2 0 1 88 1 92 1 347 1 247 1 53 1 199 1 300 1 302 1 201 1 102 1 103 1 352 3 59 1 106 1 357 1 311 1 161 2 259 5 313 1 65 1 315 1 66 2 111 2 15 2 211 1 120 2 26 1 27 1 69 1 326 2 279 1 33 1 34 4 174 1 37 3 176 1 177 1 131 1 375 2 376 1 136 2 334 1 183 2 79 2 
360 1 153 1 369 1 142 1 176 2 177 2 0 2 376 1 260 2 206 1 264 1 380 1 66 2 
360 1 153 1 114 1 176 4 253 1 102 1 177 4 0 4 116 1 309 1 260 1 264 1 66 1 
67 1 360 1 130 1 142 1 176 2 177 2 0 2 306 1 274 1 12 1 182 1 260 2 264 1 66 1 
227 1 360 1 260 1 263 1 176 1 177 1 102 1 0 1 224 1 290 1 
360 1 172 1 153 1 176 2 86 1 177 2 0 2 260 1 264 1 338 1 66 1 
67 1 360 2 172 1 153 1 114 1 176 5 102 1 177 5 0 4 116 1 133 1 309 1 260 2 264 2 66 3 381 1 
67 1 360 2 172 1 153 1 114 1 176 5 102 1 177 5 0 4 116 1 309 1 260 2 264 2 50 1 66 3 381 1 
292 1 360 1 174 1 142 1 284 1 201 1 176 1 102 1 177 1 0 1 346 1 106 2 23 1 357 1 27 2 260 1 264 1 66 1 
360 1 67 1 182 1 369 1 130 1 260 2 142 1 324 1 264 1 176 1 177 1 0 1 66 1 
346 1 365 1 245 1 56 1 73 1 
82 1 269 1 211 1 212 1 2 1 119 1 27 1 365 1 347 2 326 1 245 1 279 1 53 1 174 1 300 1 36 1 37 2 302 1 201 1 56 1 352 2 73 1 106 1 203 1 137 1 334 1 357 1 79 1 
201 1 56 1 73 1 180 1 106 1 27 1 276 1 365 1 41 1 
203 1 36 1 73 1 
209 1 61 1 343 1 372 1 
209 1 61 1 358 1 343 1 19 1 305 1 178 1 
167 1 19 1 58 1 
48 1 209 1 237 1 61 1 337 1 358 1 343 1 19 3 105 1 139 2 305 3 178 1 
209 1 288 1 121 1 61 1 358 1 343 1 19 2 305 2 178 1 
128 1 293 1 61 1 358 1 263 1 19 1 105 1 224 1 305 1 178 1 10 1 
209 1 61 1 358 1 19 1 105 1 305 1 178 1 
209 2 358 1 343 1 19 1 105 1 305 1 178 1 
209 1 132 1 61 1 358 2 265 1 200 1 19 2 105 1 305 2 178 2 
209 1 128 1 250 1 343 1 19 3 105 1 178 1 305 3 192 1 288 2 122 1 61 2 358 1 
209 1 293 1 343 1 19 2 371 1 105 1 224 2 178 1 305 2 227 1 60 1 288 1 61 1 358 1 263 1 
209 1 128 1 343 1 252 1 19 4 105 1 178 2 305 4 192 1 121 1 288 2 61 2 358 2 
209 1 61 1 358 1 343 1 19 1 105 1 305 1 178 1 
209 2 128 1 343 2 8 1 19 4 305 4 178 1 192 1 48 1 288 2 61 3 337 1 358 1 139 1 
209 1 288 1 129 1 61 1 238 1 164 1 358 1 343 1 19 2 105 1 305 2 178 1 
209 1 100 1 343 1 19 3 105 1 178 1 305 3 48 2 61 1 337 1 358 1 139 2 
249 1 61 2 364 2 99 1 
11 1 358 1 19 1 105 1 305 1 178 1 
209 1 288 1 122 1 61 1 358 1 343 1 19 2 105 1 305 2 178 1 
31 1 
209 1 61 1 358 1 343 1 19 1 105 1 305 1 178 1 
209 1 288 1 122 1 61 1 358 1 343 1 19 3 105 1 139 1 305 3 178 1 
128 1 61 1 8 1 192 1 
209 1 61 1 

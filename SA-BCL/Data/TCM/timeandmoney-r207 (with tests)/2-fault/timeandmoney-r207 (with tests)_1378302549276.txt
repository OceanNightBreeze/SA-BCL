#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (90,375) (107,322) (107,322) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (90,375) (107,322) (107,322) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (90,375) (107,322) (107,322) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (90,375) (107,322) (107,322) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (90,375) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (90,375) 116 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (90,375) 116 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 2 34 1 128 1 322 1 1 1 118 2 57 1 107 1 109 1 6 1 232 1 122 1 375 1 154 1 284 1 90 1 
64 2 34 1 322 1 128 1 1 1 118 2 57 1 107 1 109 1 6 1 232 1 122 1 375 1 154 1 284 1 90 1 
64 2 34 1 322 1 128 1 1 1 118 2 57 1 107 1 109 1 6 1 232 1 122 1 375 1 154 1 284 1 90 1 
64 2 34 1 322 1 128 1 1 1 118 2 57 1 107 1 109 1 6 1 232 1 122 1 375 1 154 1 284 1 90 1 
64 4 365 3 305 1 287 1 128 1 118 4 131 2 57 1 222 1 248 1 311 1 232 1 122 1 144 3 154 1 180 1 284 1 170 2 
320 1 64 2 305 1 34 1 118 2 185 1 57 1 109 1 266 1 6 1 232 1 144 1 122 1 154 1 180 1 284 1 
64 1 232 1 375 1 154 1 118 1 57 1 
365 1 64 2 232 1 116 1 375 1 154 1 118 2 57 1 108 1 
365 1 64 2 232 1 116 1 375 1 154 1 118 2 57 1 108 1 
361 1 193 1 239 1 
361 1 98 1 214 2 
233 2 117 1 226 2 246 2 300 1 149 2 260 2 82 2 
206 2 207 1 42 1 44 1 43 1 93 1 141 1 356 1 120 2 5 1 334 2 217 1 233 2 258 1 127 2 190 1 149 2 13 1 220 1 260 2 102 2 173 1 51 1 35 1 221 1 246 2 152 1 323 1 110 1 372 1 82 3 326 1 117 1 135 1 226 3 300 1 159 1 
233 1 117 1 245 1 226 1 246 1 379 1 12 1 149 1 260 1 82 1 
366 1 193 1 82 1 233 1 86 1 361 1 87 1 124 1 318 1 226 1 181 1 379 1 23 1 240 1 
366 1 246 1 193 1 82 1 233 1 86 1 361 1 87 2 124 1 318 2 226 1 181 1 379 1 149 1 260 1 
39 1 87 1 318 1 290 1 302 1 
361 1 87 2 146 1 318 2 2 1 193 1 290 1 302 1 
87 1 318 1 290 1 
66 1 245 1 246 1 82 1 233 1 87 1 117 1 318 1 226 1 379 1 12 1 149 1 260 1 302 1 
361 1 
361 1 87 2 49 1 318 2 2 1 193 1 290 1 302 1 
192 2 332 2 140 1 2 1 69 1 193 1 290 2 4 1 79 1 373 2 361 1 87 5 187 1 318 5 188 1 126 1 228 1 182 1 302 2 
300 1 239 1 
243 1 246 1 82 2 233 2 115 1 226 2 300 2 149 1 260 1 
251 1 262 1 244 1 
206 1 42 1 43 1 221 1 356 1 120 1 82 1 217 1 84 1 258 1 226 1 300 1 190 1 102 1 173 1 159 1 
251 1 206 1 42 1 43 1 221 1 246 1 356 1 120 1 82 2 217 1 233 1 258 1 20 1 226 2 190 1 159 1 173 1 14 1 260 1 102 1 
233 3 20 1 226 3 246 3 300 1 149 1 260 3 82 3 
233 1 245 1 226 1 246 1 379 1 260 1 82 1 
233 1 115 1 243 1 226 1 246 1 379 1 149 1 260 1 82 1 
206 1 207 1 42 1 44 1 43 1 141 1 356 1 5 1 120 1 215 1 334 2 217 1 233 3 258 1 124 1 318 1 127 1 190 1 149 2 173 1 260 3 14 1 102 1 52 1 35 1 366 1 221 1 246 3 152 1 323 1 110 1 372 1 82 4 115 1 86 1 87 1 117 1 135 1 181 1 226 4 20 1 300 1 379 1 159 1 
233 2 226 2 246 1 20 1 300 1 213 1 240 1 260 1 82 2 
366 1 246 3 215 1 82 3 115 1 233 3 86 1 361 1 87 1 124 1 318 1 20 2 226 3 181 1 379 1 149 1 229 1 14 1 260 3 
251 1 244 1 246 2 82 2 115 1 233 2 20 1 226 2 149 1 260 2 
206 1 42 1 43 1 221 1 356 1 120 1 82 1 217 1 258 1 226 1 300 1 190 1 102 1 173 1 159 1 
206 1 42 1 221 1 356 1 120 1 82 1 217 1 258 1 281 1 226 1 300 1 190 1 349 1 102 1 159 1 
251 2 207 1 44 1 141 1 70 1 142 1 334 2 145 1 97 1 127 4 172 1 220 2 262 2 321 1 35 1 244 2 152 2 195 1 19 1 372 1 178 1 85 1 135 1 199 1 
233 1 366 1 129 1 226 1 246 1 379 1 260 1 82 1 
288 1 246 4 213 1 82 5 233 5 115 1 20 2 226 5 300 1 200 1 149 1 240 1 260 4 14 1 
233 2 129 1 245 1 226 2 246 2 379 1 260 2 82 2 
298 1 105 1 
298 1 105 1 
296 1 73 1 
296 1 73 1 
296 1 73 1 
298 1 105 1 216 1 
298 1 105 1 216 1 
331 1 298 1 105 1 
186 1 296 1 73 1 298 2 105 2 56 1 
298 1 105 1 216 1 
7 1 298 1 105 1 
7 1 298 1 105 1 
7 1 298 1 105 1 
203 1 150 2 304 2 54 2 105 2 130 1 267 1 249 2 186 1 361 1 87 2 147 2 298 2 237 1 318 2 99 1 273 3 319 1 381 1 
304 1 352 1 331 1 276 1 163 1 233 2 147 1 318 1 27 1 319 1 260 2 54 1 246 2 105 1 291 1 294 1 82 2 249 1 87 1 298 1 226 2 155 1 300 1 273 1 
122 1 128 1 284 1 
122 1 185 1 284 1 
313 1 122 3 128 2 308 1 185 1 329 1 
122 2 128 1 308 1 185 1 136 1 329 1 
122 2 128 1 308 2 185 1 329 1 
352 1 65 2 162 2 276 1 332 1 2 1 3 1 69 3 214 3 97 1 361 2 98 1 187 2 318 5 27 1 11 1 188 1 101 1 339 1 172 1 29 1 32 1 192 1 104 1 290 1 193 1 19 1 373 1 269 1 178 1 87 5 328 2 302 4 
253 1 351 5 162 6 276 4 332 2 2 1 3 3 69 8 214 9 97 3 361 5 98 3 187 6 318 9 11 3 188 1 101 2 172 3 29 1 15 1 192 2 289 1 104 2 290 6 193 1 176 1 19 3 373 2 39 5 325 1 178 3 87 9 271 1 227 1 228 1 328 6 302 7 
65 1 276 1 162 2 332 1 3 1 69 3 214 4 361 3 97 1 98 2 318 3 187 2 11 1 101 1 172 1 32 1 192 1 104 1 193 1 176 1 19 1 373 1 269 1 178 1 87 3 228 1 328 2 302 2 
65 2 162 4 276 2 332 1 3 2 69 5 214 7 361 4 97 2 98 3 318 4 187 4 11 2 101 1 172 2 15 1 32 1 192 1 104 1 193 1 176 1 19 2 373 1 269 1 178 2 325 1 87 4 227 1 228 1 328 4 302 3 
209 1 221 1 239 1 
221 1 179 1 
231 1 
42 1 221 1 
112 1 258 1 196 1 42 1 209 2 221 3 
258 1 42 1 221 1 
275 1 221 1 
261 1 321 3 152 3 37 1 19 1 83 1 123 1 58 1 338 1 199 2 127 7 378 1 238 1 250 2 172 1 191 1 220 4 
261 1 321 3 152 3 37 1 19 1 83 1 123 1 58 1 338 1 199 2 127 7 378 1 238 1 250 2 172 1 191 1 220 4 
261 1 321 3 164 1 152 3 37 1 19 1 83 1 123 1 58 1 338 1 199 2 127 7 238 1 378 1 250 2 172 1 191 1 220 4 
353 1 44 1 3 3 94 1 358 1 334 2 312 1 257 1 97 3 123 5 338 2 127 31 238 1 191 2 172 4 220 16 340 4 261 2 321 10 35 1 152 15 37 1 19 4 132 1 83 1 372 1 178 3 270 1 58 2 135 1 199 5 378 1 62 3 250 3 
44 2 94 1 334 4 123 1 338 1 127 9 238 1 172 1 191 1 220 5 261 1 321 4 35 2 152 4 37 1 19 1 223 1 372 2 83 1 374 1 58 1 135 2 199 3 250 2 
206 1 64 2 305 1 118 2 185 1 230 1 120 1 256 1 6 1 232 1 313 1 144 1 122 2 48 1 74 1 190 1 284 1 102 1 77 1 365 1 128 1 342 1 57 1 38 1 154 1 180 1 60 1 377 1 156 1 159 1 
206 1 64 3 305 1 183 1 118 3 185 1 230 1 120 1 256 1 6 1 313 1 232 1 144 1 122 2 167 1 48 1 190 1 284 1 102 1 365 2 128 1 342 1 38 1 154 1 376 1 180 1 60 1 377 1 156 1 159 1 
206 1 64 2 305 1 118 2 185 1 230 1 120 1 256 1 6 1 313 1 144 1 122 2 167 1 48 1 190 1 284 1 102 1 365 2 128 1 342 1 38 1 376 1 180 1 156 1 159 1 
64 1 206 1 42 1 183 1 25 1 254 1 221 1 118 1 342 2 120 1 256 2 38 2 6 2 217 1 232 1 114 1 234 1 154 1 190 1 363 1 50 1 159 1 102 1 
64 1 206 1 128 1 185 1 118 1 57 1 342 1 230 1 120 1 38 1 256 1 6 1 313 1 232 1 122 2 167 1 48 1 154 1 74 1 60 1 190 1 156 1 377 1 284 1 159 1 102 1 
210 1 
91 2 42 1 332 1 2 3 45 1 46 2 233 1 98 2 235 2 187 2 188 1 190 1 100 1 282 2 101 1 102 2 240 1 192 1 193 1 290 6 301 1 159 1 23 1 160 1 206 2 25 1 68 1 119 1 69 2 212 2 120 2 214 2 217 2 166 1 361 2 124 1 317 4 318 5 75 1 363 1 78 2 366 1 36 2 221 1 80 1 373 1 82 1 133 1 86 1 134 1 87 5 225 1 226 1 181 1 379 1 
366 1 2 1 119 1 290 2 45 1 82 1 133 1 46 1 166 1 233 1 86 1 87 3 317 2 124 1 49 1 318 3 226 1 181 1 379 1 23 1 240 1 160 1 
2 1 119 1 45 1 233 1 166 1 361 1 124 1 317 3 318 3 49 1 240 1 366 1 36 1 290 1 193 1 82 1 133 1 86 1 87 3 181 1 226 1 379 1 23 1 160 1 
2 1 119 1 45 1 46 1 233 1 166 1 361 1 124 1 317 3 49 1 318 3 240 1 78 1 366 1 36 1 290 2 193 1 82 1 133 1 86 1 87 3 181 1 226 1 379 1 23 1 160 1 
91 2 332 1 2 3 45 1 46 4 233 1 148 1 235 2 98 2 49 1 187 1 188 1 189 1 100 1 282 2 240 1 192 1 290 7 193 5 201 1 23 1 160 1 119 1 69 1 212 2 359 1 166 1 361 5 317 6 124 1 318 5 78 4 366 1 36 4 175 1 80 1 82 1 373 1 133 1 86 1 87 5 181 1 226 1 379 1 
91 2 332 1 2 2 45 1 46 2 233 1 235 2 98 2 187 1 188 1 100 1 282 2 240 1 192 1 290 4 193 1 23 1 160 1 119 1 69 1 212 2 214 2 166 1 361 2 317 4 124 1 318 4 78 2 366 1 36 2 80 1 82 1 373 1 133 1 86 1 87 4 134 1 181 1 226 1 379 1 
91 2 332 1 2 2 119 1 69 1 212 2 45 1 46 2 359 1 233 1 166 1 361 1 124 1 317 4 98 2 235 2 187 1 318 4 188 1 189 1 100 1 282 2 240 1 78 2 366 1 192 1 36 2 175 1 193 1 290 4 80 1 373 1 82 1 133 1 86 1 87 4 181 1 226 1 379 1 23 1 160 1 
91 2 332 1 2 2 119 1 69 1 212 2 45 1 46 2 359 1 233 1 166 1 361 1 124 1 317 4 98 2 235 2 187 1 318 4 188 1 189 1 100 1 282 2 240 1 78 2 366 1 192 1 36 2 175 1 193 1 290 4 80 1 373 1 82 1 133 1 86 1 87 4 181 1 226 1 379 1 23 1 160 1 
91 2 332 1 2 2 119 1 69 1 45 1 214 2 46 2 47 1 335 2 233 1 166 1 361 1 124 1 317 4 235 2 187 1 318 4 188 1 100 1 240 1 242 1 78 2 366 1 192 1 367 1 36 2 175 1 193 1 290 4 343 2 373 1 82 1 133 1 86 1 87 4 181 1 226 1 379 1 23 1 160 1 
91 2 332 1 2 2 119 1 69 1 212 2 45 1 359 1 46 3 233 1 166 1 361 1 124 1 317 5 98 2 235 2 148 1 187 1 318 4 188 1 189 1 100 1 282 2 240 1 78 3 366 1 192 1 175 1 36 3 193 1 290 5 80 1 373 1 82 1 133 1 86 1 87 4 181 1 226 1 379 1 23 1 160 1 
91 2 332 1 2 2 119 1 69 1 212 2 45 1 359 1 46 3 233 1 166 1 361 1 124 1 317 5 98 2 235 2 148 1 187 1 318 4 188 1 189 1 100 1 282 2 240 1 78 3 366 1 192 1 175 1 36 3 193 1 290 5 80 1 373 1 82 1 133 1 86 1 87 4 181 1 226 1 379 1 23 1 160 1 
91 2 332 1 2 2 45 1 46 2 233 1 335 2 235 2 187 1 188 1 100 1 240 1 242 1 192 1 290 4 193 1 343 2 23 1 160 1 119 1 69 1 214 2 166 1 361 1 317 4 124 1 318 4 78 2 366 1 36 2 82 1 373 1 133 1 86 1 87 4 134 1 181 1 226 1 379 1 
251 1 207 1 44 1 141 1 334 2 338 1 127 6 238 1 239 1 172 1 220 3 261 1 321 2 262 1 35 1 244 1 152 3 37 1 19 1 372 1 83 1 85 1 135 1 199 2 300 2 250 1 
251 11 204 1 207 1 353 1 44 2 93 1 3 2 141 2 334 4 257 1 97 2 123 1 127 14 172 2 220 8 340 3 341 1 321 2 262 11 35 2 244 4 152 6 370 1 110 1 19 1 372 2 178 1 347 1 199 1 135 2 300 1 62 3 137 1 
206 1 207 1 42 1 43 1 44 1 93 1 356 1 141 1 120 1 334 2 217 1 233 1 258 1 125 1 127 2 190 1 283 1 173 1 102 1 260 1 14 1 220 1 35 1 244 1 221 1 246 1 152 1 370 1 110 1 372 1 82 2 84 1 272 1 226 2 20 1 135 1 300 1 159 1 
42 2 44 3 43 2 93 1 3 2 141 3 5 2 143 2 334 6 233 1 97 2 338 1 238 1 190 2 102 3 14 1 241 1 244 7 246 1 152 10 19 3 110 1 297 2 198 2 199 4 20 1 300 2 250 1 159 2 251 7 206 3 207 3 356 2 120 3 217 1 167 1 258 2 123 4 218 1 219 2 127 20 172 3 260 1 173 2 220 10 261 1 31 1 262 7 321 8 35 3 221 2 37 1 370 1 83 1 82 3 372 3 178 2 135 3 226 3 
206 8 303 1 207 2 42 2 44 2 25 1 93 1 333 1 309 1 141 2 120 7 334 4 217 2 233 1 167 1 127 2 190 2 363 1 260 1 102 8 220 1 77 1 35 2 368 1 246 1 221 3 152 1 110 1 265 1 82 1 372 2 268 1 85 1 326 2 226 1 20 1 135 2 380 1 159 2 
251 1 207 1 44 1 3 1 141 1 334 2 233 1 97 1 127 3 149 1 172 1 260 1 220 1 321 1 262 1 35 1 244 1 55 1 246 1 152 2 370 1 19 1 372 1 82 1 115 1 178 1 199 1 135 1 226 1 
251 1 321 1 262 1 207 1 35 1 44 1 244 1 141 1 70 1 372 1 334 2 85 1 97 1 123 1 135 1 127 2 172 1 220 2 
251 1 321 1 262 1 207 1 35 1 44 1 244 1 152 2 141 1 19 1 372 1 334 2 85 1 145 1 178 1 199 1 135 1 127 2 
251 2 207 1 44 1 3 1 141 1 334 2 97 1 123 1 127 4 172 1 220 2 262 2 321 2 35 1 244 2 152 2 19 1 372 1 85 1 178 1 135 1 199 1 
251 1 321 1 262 1 207 1 35 1 44 1 244 1 368 1 141 1 70 1 372 1 334 2 97 1 123 1 135 1 127 2 172 1 220 2 
251 1 321 1 262 1 207 1 35 1 44 1 244 1 368 1 152 2 141 1 19 1 372 1 334 2 145 1 178 1 199 1 135 1 127 2 
251 2 207 1 44 1 3 1 141 1 334 2 97 1 123 1 127 4 172 1 220 2 262 2 321 2 35 1 244 2 368 1 152 2 19 1 372 1 178 1 135 1 199 1 
251 2 207 1 44 1 3 1 141 1 334 2 97 1 123 1 127 4 172 1 220 2 262 2 321 2 35 1 244 2 152 2 19 1 372 1 178 1 135 1 199 1 
206 1 207 1 42 1 43 1 44 1 93 1 356 1 141 1 5 1 120 1 334 2 217 1 258 1 127 2 190 1 220 1 173 1 102 1 35 1 221 1 152 1 110 1 82 1 372 1 226 1 135 1 300 1 159 1 
206 1 207 1 42 1 44 1 93 1 67 1 356 1 141 1 120 1 334 2 217 1 258 1 281 1 127 2 190 1 220 1 102 1 35 1 221 1 152 1 110 1 82 1 372 1 226 1 135 1 300 1 349 1 159 1 
251 2 207 1 44 1 3 1 141 1 334 2 97 1 123 1 127 4 172 1 220 2 262 2 321 2 35 1 244 2 152 2 370 1 19 1 372 1 178 1 135 1 199 1 
251 2 206 1 207 1 42 1 43 1 44 1 3 1 356 1 141 1 5 1 120 1 334 2 258 1 97 1 123 1 127 4 190 1 172 1 220 2 173 1 102 1 77 1 321 2 262 2 35 1 244 2 221 1 152 2 19 1 82 1 372 1 178 1 297 1 199 1 226 1 135 1 159 1 
251 1 207 1 44 1 3 1 141 1 334 2 233 1 97 1 123 1 127 3 149 1 172 1 260 1 220 2 321 1 262 1 35 1 244 1 246 1 152 1 370 1 19 1 372 1 82 1 295 1 115 1 178 1 135 1 226 1 
306 1 353 1 277 1 44 2 3 3 26 1 310 1 334 4 257 1 97 3 123 3 9 1 127 19 171 2 172 3 220 9 340 2 321 6 35 2 263 1 152 10 19 3 372 2 374 1 178 3 40 2 199 3 135 2 62 1 24 1 
306 1 353 2 277 1 44 3 94 2 3 3 26 2 255 1 310 1 334 6 96 1 97 3 123 2 8 1 280 1 127 26 171 4 172 3 220 14 340 2 321 4 35 3 152 12 19 2 324 1 372 3 374 1 178 2 40 1 59 1 199 2 135 3 62 2 24 2 
44 3 277 1 3 4 94 1 334 6 96 1 97 4 8 1 280 1 338 1 9 1 238 1 340 4 152 21 19 5 199 4 59 1 62 3 250 1 24 1 306 1 353 3 26 2 255 1 121 1 310 1 257 1 123 4 127 41 172 5 171 4 220 20 261 1 321 8 35 3 37 1 324 1 372 3 83 1 178 4 374 1 40 1 135 3 
306 1 353 3 277 1 44 4 94 2 3 4 255 1 26 2 121 1 310 1 334 8 96 1 257 1 97 4 8 1 123 3 280 1 9 1 338 1 127 38 238 1 171 4 172 5 220 20 340 4 261 1 321 7 35 4 152 18 37 1 19 4 324 1 83 1 372 4 374 1 178 3 40 1 59 1 199 4 135 4 62 3 250 1 24 1 
306 1 353 2 277 1 44 2 94 1 3 7 255 1 26 1 310 1 334 4 96 1 257 2 97 7 8 1 123 7 280 1 338 1 127 52 238 1 171 4 172 8 220 27 340 4 261 1 321 14 35 2 152 25 37 1 19 8 324 1 83 1 372 2 374 1 178 7 40 1 347 2 59 1 199 7 135 2 62 4 250 1 24 1 
249 1 186 1 304 1 54 1 298 1 147 1 89 1 105 1 130 1 267 1 
331 1 294 1 
174 1 249 1 304 1 54 1 298 1 147 1 105 1 202 1 224 1 
203 1 150 1 304 1 54 1 105 1 130 1 267 1 249 1 186 1 361 1 87 1 147 1 298 1 318 1 99 1 273 2 319 1 381 1 
203 1 150 1 304 1 54 1 105 1 130 1 267 1 249 1 186 1 361 1 87 1 147 1 298 1 318 1 99 1 273 2 319 1 381 1 
203 1 150 1 304 1 54 1 105 1 130 1 267 1 249 1 186 1 361 1 87 1 147 1 298 1 318 1 99 1 273 2 319 1 381 1 
285 1 56 1 216 1 
285 1 56 1 216 1 
7 1 279 1 
7 1 56 1 279 1 
163 1 291 1 
252 1 304 1 352 1 331 1 276 1 163 1 233 2 147 1 318 1 27 1 99 1 260 2 150 1 54 1 105 1 246 2 291 1 294 1 82 2 249 1 87 1 298 1 226 2 155 1 300 1 273 1 302 1 
285 1 216 1 
7 1 56 1 279 1 
206 2 303 1 207 1 42 1 44 1 93 1 333 1 141 1 120 2 334 2 233 2 127 2 190 1 169 1 102 2 220 1 33 1 35 1 221 1 152 1 370 1 110 1 82 2 372 1 326 2 21 1 226 2 135 1 327 1 159 1 274 1 
77 1 206 2 286 1 53 1 128 1 185 1 184 1 120 2 256 1 313 1 122 2 167 1 48 1 60 1 190 1 156 1 284 1 159 1 102 2 
206 1 53 1 128 1 185 1 120 1 256 1 371 1 313 1 122 2 167 1 48 1 60 1 156 1 190 1 284 1 102 1 159 1 
206 1 42 1 25 1 17 1 221 1 184 1 120 1 256 1 217 1 234 1 190 1 363 1 159 1 102 1 
206 1 286 1 53 1 128 1 185 1 184 1 120 1 256 1 313 1 122 2 167 1 48 1 60 1 190 1 156 1 284 1 102 1 159 1 
72 1 
361 1 187 1 140 1 69 1 193 1 239 1 79 1 
332 1 2 1 69 1 212 1 214 1 361 2 98 1 187 1 318 1 188 1 282 1 192 1 290 1 193 1 80 1 373 1 87 1 
42 1 332 3 2 3 3 2 97 2 98 6 187 7 188 3 11 2 190 2 101 2 102 1 192 3 106 2 193 1 290 5 19 2 344 1 196 1 198 2 299 1 22 2 159 1 206 1 161 2 162 6 209 2 69 8 120 1 214 12 217 1 316 1 258 1 361 7 124 2 318 5 75 1 172 2 221 6 177 2 176 2 373 3 178 2 87 5 88 2 179 3 328 6 
353 1 162 5 332 2 2 1 3 2 69 8 357 1 255 1 214 6 96 1 361 5 97 2 8 1 98 3 280 1 318 1 187 5 75 1 11 2 188 2 101 1 259 1 172 2 340 1 192 2 290 1 193 2 176 1 19 2 373 2 178 2 87 1 59 1 62 1 328 5 
66 1 332 1 69 2 359 1 233 1 338 1 318 1 187 2 11 2 188 1 12 1 149 1 172 2 260 1 261 1 192 1 245 1 246 1 176 1 19 1 82 1 373 1 83 1 87 1 117 1 348 1 226 1 379 1 
192 1 332 1 140 1 193 1 69 1 79 1 373 1 361 1 187 1 188 1 
162 2 3 1 69 2 176 1 19 1 214 4 178 1 97 1 361 2 98 2 187 2 11 1 172 1 328 2 
361 1 87 1 318 1 2 1 193 1 290 1 
41 2 206 4 42 1 25 1 332 2 2 2 69 2 120 4 165 1 217 2 315 1 187 2 318 3 188 1 75 2 190 1 363 1 101 2 102 4 192 2 221 1 290 4 373 2 87 3 225 1 228 1 301 1 157 1 159 1 
206 1 207 1 42 1 44 1 43 1 356 1 141 1 120 1 5 1 334 2 217 1 233 2 258 1 127 1 190 1 149 2 102 1 260 2 173 1 35 1 246 2 221 1 152 1 323 1 110 1 372 1 82 3 117 1 135 1 226 3 300 1 159 1 
162 2 192 1 332 1 69 1 193 2 214 4 373 1 361 4 98 2 187 2 188 1 75 1 250 1 101 1 328 2 
304 1 54 1 138 1 
304 1 54 1 138 1 
304 1 54 1 130 1 291 1 81 1 
304 1 54 1 138 1 
304 1 54 1 362 1 
304 1 54 1 362 1 
304 1 54 1 362 1 
304 1 54 1 
298 1 105 1 
261 1 321 3 35 2 44 2 152 4 94 1 37 1 19 1 83 1 372 2 334 4 123 1 338 1 199 2 135 2 127 8 238 1 250 1 172 1 220 4 
261 1 321 2 152 3 37 1 19 1 83 1 338 1 199 2 127 6 238 1 239 1 250 1 172 1 220 3 
321 2 35 1 92 1 44 1 152 2 3 1 19 1 372 1 334 2 178 1 97 1 123 1 199 1 135 1 127 4 172 1 220 2 
321 2 353 1 152 4 3 1 19 1 257 1 178 1 97 1 123 1 199 1 127 7 62 1 172 1 220 3 340 2 
44 2 3 2 94 2 334 4 257 1 97 2 123 4 338 2 127 23 238 1 172 3 220 11 340 2 261 2 341 1 321 9 35 2 152 12 37 1 194 1 19 3 83 1 372 2 178 2 347 1 199 5 135 2 62 2 250 1 
127 1 152 1 340 1 
127 1 62 1 220 1 
321 3 35 1 44 1 92 1 152 3 3 1 19 1 334 2 372 1 178 1 97 1 123 1 198 1 135 1 199 2 127 6 172 1 220 3 
353 1 44 1 3 2 255 1 334 2 96 1 97 2 123 1 8 1 280 1 127 12 172 2 220 6 340 1 321 2 35 1 152 6 19 2 372 1 374 1 178 2 135 1 199 1 59 1 62 1 
261 1 321 2 152 3 19 1 83 1 123 1 338 1 199 1 127 6 172 1 220 3 
261 1 321 2 35 1 44 1 152 2 94 1 194 1 37 1 372 1 334 2 123 1 338 1 199 1 135 1 127 3 238 1 220 1 
261 2 321 5 35 1 44 1 152 5 19 2 334 2 372 1 83 1 374 1 123 2 348 1 338 2 135 1 199 3 127 10 172 2 220 5 
321 1 35 1 44 1 372 1 334 2 374 1 97 1 123 1 135 1 127 2 172 1 220 2 
321 2 35 1 44 1 152 2 3 1 19 1 372 1 334 2 178 1 374 1 97 1 123 1 199 1 135 1 127 4 172 1 220 2 
261 1 321 2 35 3 44 3 94 1 152 2 194 1 372 3 334 6 374 1 123 1 9 1 338 1 135 3 199 1 127 3 220 1 
353 1 92 1 44 5 94 2 3 3 334 10 312 1 257 1 97 3 123 5 338 3 9 1 127 34 238 1 172 5 220 16 340 4 261 3 321 12 35 5 152 18 37 1 194 1 132 1 19 5 83 2 372 5 374 1 178 3 270 1 135 5 199 7 62 3 250 1 
261 1 321 2 35 1 353 1 44 1 152 4 37 1 19 1 83 1 372 1 334 2 96 1 374 1 338 1 199 2 135 1 127 8 238 1 62 1 250 1 172 1 220 4 340 1 
353 1 44 2 92 1 3 1 334 4 96 1 257 1 97 1 123 1 338 1 127 11 238 1 172 2 220 6 340 2 261 1 321 3 35 2 152 5 37 1 19 1 83 1 372 2 374 1 199 2 135 2 62 1 250 1 
353 1 92 1 44 3 3 2 94 1 255 1 334 6 96 1 97 2 123 1 8 1 280 1 338 1 127 19 238 1 172 3 220 9 340 1 261 1 321 4 35 3 152 10 37 1 19 3 83 1 372 3 374 1 178 2 59 1 135 3 199 3 62 1 250 1 
353 1 92 1 44 3 94 1 3 2 255 1 334 6 96 1 97 2 123 2 8 1 280 1 338 1 127 17 238 1 172 3 220 10 340 1 261 1 321 5 35 3 152 7 37 1 19 2 83 1 372 3 374 1 178 1 135 3 199 3 59 1 62 1 250 1 
261 1 321 2 35 1 353 1 44 1 152 4 37 1 19 1 83 1 372 1 334 2 96 1 374 1 338 1 199 2 135 1 127 8 238 1 62 1 250 1 172 1 220 4 340 1 
353 1 44 1 3 2 255 1 334 2 96 1 97 2 123 1 8 1 280 1 127 12 172 2 220 6 340 1 321 2 35 1 152 6 19 2 372 1 374 1 178 2 135 1 199 1 59 1 62 1 
353 1 92 1 44 4 3 2 94 2 255 1 334 8 96 1 97 2 123 2 8 1 280 1 338 1 127 18 238 1 172 3 220 10 340 1 261 1 321 5 35 4 152 8 37 1 19 2 83 1 372 4 374 1 178 1 59 1 135 4 199 3 62 1 250 1 
353 1 44 4 3 3 94 2 255 1 334 8 96 1 97 3 123 3 8 1 280 1 9 1 127 16 172 3 220 9 340 1 321 6 35 4 152 7 19 2 372 4 374 1 178 2 59 1 135 4 199 3 62 1 
261 3 321 6 152 4 37 1 19 1 83 1 123 3 338 3 199 3 127 7 238 2 172 1 220 3 
353 1 44 4 3 2 94 2 255 1 334 8 96 1 97 2 123 1 8 1 280 1 338 1 9 1 127 18 238 1 172 3 220 10 340 1 261 1 321 4 35 4 152 8 37 1 19 2 83 1 372 4 374 1 178 1 59 1 135 4 199 3 62 1 250 1 
350 1 233 1 226 1 300 1 213 1 240 1 82 1 
350 1 151 1 355 1 213 1 293 1 82 1 346 1 233 1 336 1 226 1 300 1 240 1 
217 1 206 1 42 1 25 1 221 1 190 1 363 1 239 1 120 1 159 1 102 1 
206 1 42 1 221 1 246 1 356 1 120 1 82 2 217 1 233 1 258 1 20 1 226 2 300 1 190 1 260 1 102 1 173 1 159 1 
275 1 206 1 41 1 42 2 354 1 356 1 120 1 233 2 258 2 190 1 173 1 102 1 260 1 366 1 246 2 221 3 82 2 86 1 226 2 20 1 300 1 379 1 159 1 
275 1 206 2 41 1 42 2 354 1 356 1 120 2 233 2 258 2 281 1 190 1 102 2 260 1 366 1 246 2 221 3 264 1 82 2 86 1 226 2 20 1 300 1 379 1 159 1 
275 1 206 3 41 1 42 1 354 1 209 1 120 3 217 1 258 1 361 1 124 1 318 2 190 1 168 1 102 3 221 4 18 1 290 1 193 1 264 1 87 2 179 1 159 1 
275 1 41 1 206 3 42 1 354 1 209 1 221 4 106 1 193 1 290 1 264 1 120 3 217 1 258 1 361 1 87 2 124 1 318 2 179 1 190 1 102 3 159 1 
206 1 190 1 120 1 265 1 159 1 102 1 
77 1 206 7 42 2 333 1 309 1 221 3 120 6 265 1 111 1 217 2 268 1 113 1 167 1 196 1 258 1 326 1 236 1 190 3 380 1 102 7 159 2 
251 1 206 1 207 2 42 1 44 2 43 1 356 1 141 2 120 1 5 1 143 1 334 4 233 1 258 1 338 1 127 6 238 1 190 1 172 1 220 3 260 1 102 1 173 1 261 1 77 1 262 1 321 2 35 2 244 1 221 1 246 1 152 3 37 1 370 1 19 1 83 1 372 2 82 2 297 1 199 2 226 2 20 1 135 2 300 2 327 1 250 1 159 1 
206 1 332 2 209 1 140 1 2 1 69 1 120 1 217 1 361 1 124 1 187 1 318 3 188 2 102 1 192 2 221 2 106 1 193 1 290 2 177 1 79 1 373 2 87 3 88 1 179 1 22 1 157 1 302 1 
77 1 206 2 42 1 209 1 221 2 120 2 265 1 196 1 258 1 299 1 190 2 102 2 159 1 
77 1 206 4 103 1 42 1 25 1 221 1 264 1 120 4 217 1 190 1 363 1 102 4 159 1 
41 1 31 1 206 2 16 1 42 1 221 1 120 2 111 1 360 1 258 1 236 1 190 2 102 2 159 1 
217 1 206 1 122 1 48 1 185 1 190 1 120 1 284 1 159 1 102 1 
77 1 206 2 42 1 333 1 221 1 120 2 167 1 21 1 190 1 102 2 159 1 
77 1 41 1 206 5 103 1 42 2 25 1 333 1 221 3 120 4 217 1 268 1 190 2 363 1 102 5 159 2 380 1 
77 1 41 1 206 5 103 1 42 2 25 1 333 1 221 3 120 4 217 1 190 2 363 1 102 5 159 2 380 1 364 1 
206 1 42 1 221 1 246 1 356 1 120 1 82 2 217 1 233 1 258 1 281 1 20 1 226 2 300 1 190 1 260 1 102 1 159 1 
41 1 206 1 42 1 221 1 120 1 111 1 113 1 196 1 258 1 236 1 190 2 102 1 159 1 
314 1 307 1 208 1 10 1 300 1 
0 1 307 1 366 1 208 2 193 1 95 1 215 1 153 1 314 2 86 1 361 1 87 2 124 1 318 2 10 2 181 1 300 1 379 1 302 1 
307 1 33 1 208 1 82 1 233 1 10 1 226 1 169 1 274 1 
0 1 307 1 95 1 
144 1 305 1 180 1 239 1 
64 1 232 1 144 1 305 1 154 1 180 1 118 1 
6 1 118 1 342 1 
64 3 305 1 34 2 118 3 211 1 57 1 232 1 144 1 197 1 154 1 180 1 61 1 
365 1 64 2 232 1 144 1 305 1 154 1 180 1 118 2 170 1 
64 1 128 1 118 1 131 1 57 1 311 1 232 1 144 1 122 1 154 1 284 1 
64 1 232 1 144 1 154 1 180 1 118 1 57 1 
64 1 232 1 305 1 154 1 180 2 118 1 57 1 
64 2 118 2 278 1 57 1 232 2 144 1 154 2 180 1 30 1 158 1 
64 3 365 2 305 1 118 3 139 1 131 1 57 1 248 1 232 1 144 2 154 1 180 1 76 1 
64 2 365 1 305 1 128 1 185 1 118 2 57 1 232 1 313 1 144 1 122 2 154 1 337 1 180 1 284 1 
64 4 365 2 305 1 118 4 131 1 57 1 222 1 248 1 232 2 144 2 154 2 180 1 170 1 
64 1 232 1 144 1 305 1 154 1 180 1 118 1 57 1 
365 2 64 4 305 2 34 1 118 4 131 1 369 1 248 1 232 1 144 3 197 1 154 1 180 2 61 1 
63 1 64 2 365 1 305 1 118 2 57 1 108 1 232 1 71 1 144 1 154 1 180 1 
64 3 305 1 34 2 118 3 57 1 345 1 232 1 144 1 197 1 154 1 180 1 61 2 
330 1 144 2 28 1 292 2 
205 1 64 1 232 1 154 1 118 1 57 1 
365 1 64 2 232 1 144 1 305 1 154 1 180 1 139 1 118 2 57 1 
247 1 
64 1 232 1 144 1 305 1 154 1 180 1 118 1 57 1 
365 1 64 3 305 1 34 1 118 3 139 1 57 1 232 1 144 1 154 1 180 1 
248 1 144 1 131 1 369 1 
144 1 180 1 

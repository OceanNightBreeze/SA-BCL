#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 306 (1,38,119) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 306 142 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 306 142 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 306 (1,38,119) 171 111 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 306 142 230 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 306 142 230 240 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 228 292 (300,359) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 228 292 (44,205) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
302 1 336 3 116 3 181 1 71 2 338 1 185 1 269 1 108 1 237 2 147 1 271 1 356 2 
152 2 264 2 302 3 326 1 71 2 29 2 269 2 108 1 353 2 271 1 252 1 356 2 139 1 203 1 312 1 116 9 336 9 293 1 181 1 87 1 184 1 120 1 338 1 185 6 237 5 147 4 94 1 362 1 
152 2 264 2 302 3 326 1 71 2 29 2 269 2 108 1 353 2 271 1 252 1 356 2 139 1 203 1 312 1 116 9 336 9 293 1 181 1 87 1 184 1 120 1 338 1 185 6 237 5 147 4 94 1 362 1 
152 2 264 2 302 4 326 1 71 2 29 2 269 2 108 1 353 2 271 1 252 1 356 2 139 1 203 1 312 1 116 10 336 10 293 1 181 1 87 1 184 1 120 1 338 1 185 7 237 6 147 5 94 1 362 1 
152 2 264 2 302 2 326 1 71 2 29 1 269 2 108 1 353 2 271 1 252 1 356 2 139 1 203 1 312 1 116 7 336 7 293 1 181 1 87 1 120 1 338 1 185 4 237 4 147 3 94 1 362 1 
152 1 312 1 264 1 302 1 336 4 116 4 71 1 29 2 184 1 338 1 185 3 108 1 237 3 147 2 353 1 271 1 94 1 356 1 
152 1 103 1 336 2 116 2 293 1 71 1 338 1 269 1 108 1 237 1 353 1 92 1 271 1 356 1 139 1 101 1 
152 1 264 1 302 3 71 2 29 2 269 1 108 1 353 1 271 1 288 1 356 2 312 1 116 9 336 9 181 1 87 1 185 7 338 1 184 1 237 5 147 4 94 1 362 1 99 1 
152 1 264 1 302 3 71 2 29 2 269 1 108 1 353 1 271 1 288 1 356 2 312 1 116 9 336 9 181 1 87 1 185 7 338 1 184 1 237 5 147 4 94 1 362 1 99 1 
1 1 257 1 52 1 32 1 197 1 360 1 149 1 281 1 151 1 43 1 127 1 289 1 25 1 310 1 
304 1 
1 2 14 1 304 1 104 1 350 1 85 1 289 2 310 1 
68 1 1 5 14 2 304 1 265 1 350 1 74 1 85 1 86 1 351 1 285 2 64 1 280 2 273 2 254 1 289 5 188 1 319 1 310 2 
304 1 350 1 247 1 
304 1 261 1 167 2 
52 2 32 2 197 2 332 1 360 1 43 2 257 2 127 2 
220 1 300 1 347 1 132 1 324 1 70 1 49 1 246 1 158 2 52 3 250 1 32 2 224 2 10 1 197 2 332 1 138 1 201 1 81 1 82 2 114 1 179 1 292 1 314 1 276 1 17 2 257 3 168 1 317 1 93 1 360 1 43 2 128 1 127 2 346 2 100 1 299 1 
52 1 32 1 197 1 360 1 149 1 281 1 43 1 257 1 127 1 25 1 
38 1 306 1 
320 1 1 2 304 1 349 1 350 1 119 1 257 1 245 1 52 1 32 1 197 1 43 1 127 1 289 2 25 1 
1 1 14 1 176 1 289 1 310 1 
1 2 14 1 304 1 323 1 350 1 85 1 289 2 310 1 
1 1 14 1 289 1 
275 1 191 1 257 2 52 2 32 2 197 1 332 2 43 1 127 1 
143 1 137 1 358 1 
300 1 220 1 347 1 292 1 154 1 49 1 17 1 257 1 158 1 52 1 224 1 332 1 128 1 201 1 81 1 299 1 
52 3 26 1 32 3 197 3 332 1 43 3 257 3 127 1 
52 1 32 1 197 1 281 1 43 1 257 1 25 1 
52 1 275 1 32 1 197 1 191 1 43 1 257 1 127 1 25 1 
220 1 300 1 26 1 320 1 1 1 347 1 191 1 132 1 324 1 349 1 70 1 49 1 245 1 158 1 52 4 250 1 32 3 224 1 10 1 197 3 332 1 177 1 201 1 81 1 289 1 82 2 309 1 114 1 179 1 292 1 276 1 119 1 17 1 257 4 121 1 317 1 360 1 43 3 128 1 127 2 346 1 299 1 100 1 25 1 
52 1 26 1 32 1 197 1 142 1 43 1 306 1 257 1 
1 1 26 2 320 1 191 1 304 1 349 1 119 1 245 1 257 3 121 1 52 3 32 3 197 3 34 1 177 1 43 3 127 1 289 1 25 1 
52 2 26 1 32 2 197 2 191 1 43 2 143 1 257 2 127 1 358 1 
300 1 220 1 347 1 292 1 49 1 17 1 257 1 158 1 52 1 224 1 332 1 201 1 128 1 81 1 299 1 
220 1 321 1 347 1 292 1 49 1 17 1 257 1 158 1 52 1 224 1 332 1 201 1 128 1 81 1 44 1 
132 1 324 1 70 1 77 1 10 2 137 2 82 2 114 1 179 1 37 1 166 1 276 1 143 2 18 1 358 2 91 1 93 2 172 1 124 1 298 1 343 1 126 1 217 1 346 4 
52 1 32 1 357 1 197 1 349 1 43 1 257 1 25 1 
332 1 247 1 
220 1 300 1 26 1 347 1 292 1 49 1 17 1 143 1 257 2 158 1 121 1 52 2 32 1 224 1 197 1 43 1 128 1 201 1 81 1 299 1 
26 2 191 1 142 1 193 1 306 1 257 4 157 1 52 4 121 1 32 4 197 4 332 1 43 4 127 1 
52 2 357 1 32 2 197 2 281 1 43 2 257 2 25 1 
164 1 234 1 129 1 
260 1 341 1 315 1 234 2 206 1 129 2 
83 1 234 1 129 1 
36 1 234 1 129 1 
36 1 234 1 129 1 
36 1 234 1 129 1 
234 1 129 1 
234 1 129 1 
260 1 341 1 
260 1 341 1 
260 1 341 1 
83 1 234 1 129 1 
83 1 234 1 129 1 
1 2 303 1 304 1 266 3 242 2 234 2 206 1 186 1 159 2 89 2 226 2 239 2 296 1 148 1 150 1 255 1 289 2 311 1 129 2 
218 1 1 1 305 1 266 1 242 1 244 1 159 1 52 2 32 2 9 1 197 2 332 1 161 1 289 1 164 1 234 1 257 2 39 1 89 1 42 1 239 1 148 1 43 2 129 1 
264 1 212 2 353 2 183 1 101 1 
152 1 264 1 353 1 
152 1 353 1 101 1 
264 2 212 1 353 3 307 1 183 1 101 1 
264 1 212 1 69 1 353 2 183 1 101 1 
218 1 1 5 304 2 106 2 350 1 134 1 135 2 30 2 351 2 285 1 77 1 9 1 273 1 254 1 289 5 310 4 13 1 14 1 85 1 207 1 39 1 86 3 18 1 144 1 316 1 167 3 258 1 41 1 91 1 124 1 280 1 261 1 
1 9 2 1 322 1 304 5 133 5 350 1 73 1 135 6 30 6 351 6 285 2 77 3 9 4 227 1 176 5 273 2 254 1 289 9 310 7 13 3 14 6 85 1 207 2 86 8 294 1 18 3 144 1 209 1 167 9 41 2 91 3 124 3 280 2 261 3 319 1 
1 3 304 3 106 1 350 1 135 2 351 2 30 2 285 1 77 1 9 1 273 1 289 3 310 2 13 1 207 1 86 3 316 1 18 1 167 4 258 1 41 1 91 1 124 1 280 1 261 2 319 1 
1 4 2 1 304 4 106 2 350 1 135 4 30 4 351 4 285 1 77 2 9 2 227 1 273 1 289 4 310 3 13 2 207 1 86 5 294 1 316 1 18 2 167 7 258 1 41 1 91 2 124 2 280 1 261 3 319 1 
122 1 
220 1 128 1 
263 2 220 1 84 1 287 1 128 3 81 1 
263 1 128 1 247 1 
128 1 329 1 
220 1 128 1 81 1 
153 1 128 1 
113 1 131 1 37 2 19 1 7 1 145 2 248 1 352 1 10 3 238 1 91 1 169 1 78 1 93 4 124 1 217 3 58 1 346 7 
190 1 131 2 132 1 324 1 70 1 47 1 7 1 248 1 352 2 77 3 10 15 331 1 110 1 78 2 274 4 58 5 82 2 290 1 13 3 113 2 335 1 37 5 276 1 18 3 19 1 339 3 145 3 238 1 91 4 93 16 279 1 124 4 217 10 346 31 
102 1 113 1 131 1 132 2 37 3 324 2 276 2 70 2 76 1 19 1 7 1 145 2 352 1 238 1 110 1 10 4 91 1 78 1 93 5 124 1 217 4 58 1 346 9 82 4 
113 1 131 1 37 2 19 1 7 1 145 2 248 1 352 1 10 3 238 1 91 1 78 1 93 4 124 1 217 3 58 1 346 7 
113 1 131 1 37 2 19 1 7 1 145 2 248 1 352 1 10 3 238 1 91 1 78 1 93 4 124 1 217 3 58 1 346 7 
220 1 347 1 28 1 115 2 180 1 233 1 336 1 116 1 71 1 49 1 17 1 235 2 158 1 269 2 196 1 249 1 109 1 224 1 251 1 201 1 128 1 356 1 308 2 
152 1 264 1 347 1 71 1 222 1 223 1 156 1 158 1 269 1 136 1 224 1 353 2 307 1 201 1 356 1 308 1 115 1 232 1 116 1 336 1 17 1 338 1 235 1 170 1 24 1 101 1 
152 1 264 1 241 1 347 1 71 1 223 1 156 1 158 1 269 1 108 1 136 1 224 1 353 2 271 1 307 1 201 1 356 1 308 1 115 1 232 1 116 2 336 2 17 1 185 1 338 1 235 1 237 1 170 1 24 1 101 1 
152 1 264 1 347 1 71 1 222 1 328 1 156 1 158 1 269 1 108 1 196 1 136 1 224 1 353 2 271 1 307 1 201 1 356 1 308 1 115 1 232 1 116 3 336 3 17 1 185 2 235 1 237 1 170 1 24 1 101 1 
152 1 347 1 264 1 222 1 328 1 158 1 269 1 108 1 136 1 224 1 353 2 271 1 307 1 201 1 308 1 115 1 116 2 336 2 17 1 185 2 235 1 237 1 170 1 24 1 101 1 
340 1 
0 1 1 2 220 1 347 1 49 2 306 1 351 1 158 2 285 1 224 2 198 1 273 1 254 1 111 1 201 1 289 2 202 1 163 1 14 2 233 1 180 1 38 1 17 2 85 1 86 1 60 1 41 1 171 1 280 1 128 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 2 14 1 104 1 38 1 171 1 85 1 306 1 111 1 60 1 289 2 
0 1 1 1 38 1 306 1 60 1 285 1 171 1 280 1 273 1 254 1 111 1 289 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 1 38 1 171 1 306 1 111 1 60 1 289 1 
0 1 1 1 38 1 306 1 60 1 285 1 171 1 280 1 273 1 254 1 111 1 289 1 
26 1 220 2 241 1 347 2 132 2 324 2 325 1 49 2 70 2 72 1 222 1 246 2 50 1 158 8 52 1 32 1 224 7 250 1 197 1 10 1 12 1 201 2 82 4 114 2 313 1 179 2 233 1 180 1 314 1 337 1 276 2 17 8 257 1 93 1 172 1 123 1 43 1 128 3 346 2 
191 1 132 1 324 1 243 1 70 1 52 1 32 1 77 1 197 1 10 2 137 1 82 2 13 1 114 1 179 1 37 1 276 1 143 1 257 1 18 1 358 1 91 1 93 1 297 1 124 1 43 1 217 1 127 1 346 3 
114 1 179 1 132 1 324 1 276 1 70 1 143 1 18 1 358 1 91 1 93 2 172 1 298 1 137 1 217 1 58 1 346 2 82 2 
114 1 179 1 132 1 37 1 324 1 276 1 70 1 143 1 358 1 77 1 10 2 172 1 124 1 343 1 137 1 217 1 346 2 82 2 
132 1 324 1 70 1 77 1 10 2 137 2 58 1 82 2 13 1 114 1 179 1 37 1 276 1 143 2 18 1 358 2 91 1 93 2 172 1 124 1 217 2 346 4 
114 1 179 1 132 1 324 1 325 1 276 1 70 1 143 1 18 1 358 1 91 1 93 2 298 1 137 1 217 1 58 1 346 2 82 2 
114 1 179 1 132 1 37 1 324 1 325 1 276 1 70 1 143 1 358 1 77 1 10 2 124 1 343 1 137 1 217 1 346 2 82 2 
132 1 324 1 325 1 70 1 77 1 10 2 137 2 58 1 82 2 13 1 114 1 179 1 37 1 276 1 143 2 18 1 358 2 91 1 93 2 124 1 217 2 346 4 
132 1 324 1 70 1 77 1 10 2 137 2 58 1 82 2 13 1 114 1 179 1 37 1 276 1 143 2 18 1 358 2 91 1 93 2 124 1 217 2 346 4 
220 1 300 1 347 1 132 1 324 1 49 1 70 1 158 1 52 1 224 1 250 1 10 1 332 1 201 1 81 1 82 2 114 1 292 1 179 1 314 1 276 1 17 1 257 1 93 1 128 1 346 2 299 1 100 1 
220 1 347 1 321 1 132 1 324 1 49 1 70 1 158 1 52 1 224 1 250 1 10 1 332 1 201 1 81 1 82 2 291 1 114 1 292 1 179 1 314 1 276 1 17 1 257 1 93 1 128 1 346 2 44 1 
132 1 324 1 243 1 70 1 77 1 10 2 137 2 58 1 82 2 13 1 114 1 179 1 37 1 276 1 143 2 18 1 358 2 91 1 93 2 124 1 217 2 346 4 
300 1 220 1 347 1 241 1 132 1 324 1 70 1 158 1 52 1 77 1 224 1 10 2 35 1 137 2 201 1 58 1 81 1 82 2 13 1 114 1 292 1 179 1 37 1 276 1 17 1 143 2 257 1 18 1 358 2 91 1 93 2 124 1 217 2 128 1 346 4 299 1 100 1 
191 1 132 1 324 1 243 1 70 1 52 1 77 1 32 1 10 1 197 1 160 1 137 1 58 1 82 2 13 1 114 1 179 1 276 1 257 1 143 1 18 1 358 1 91 1 93 2 124 1 43 1 217 1 127 1 346 3 
131 1 132 1 324 1 70 1 247 1 7 1 10 3 332 2 78 1 137 1 82 2 114 1 179 1 37 2 276 1 143 1 19 1 358 1 145 1 238 1 91 1 93 3 172 1 124 1 217 2 346 6 
283 1 132 2 324 2 243 1 47 1 70 2 250 1 77 1 10 6 332 1 137 11 58 1 274 3 82 4 334 1 13 2 204 1 114 2 179 1 314 1 37 1 276 2 143 11 18 2 339 3 210 1 358 4 91 2 93 8 279 1 124 1 217 2 346 14 
220 1 300 1 26 1 347 1 132 1 348 1 324 1 243 1 49 1 154 1 70 1 158 1 330 1 52 2 224 1 32 1 250 1 197 1 10 1 332 1 201 1 81 1 82 2 114 1 292 1 179 1 314 1 276 1 17 1 257 2 358 1 121 1 236 1 93 1 43 1 128 1 346 2 299 1 
324 3 243 1 49 1 7 1 158 3 52 3 250 1 10 10 197 1 332 2 201 2 58 4 13 2 114 3 292 2 16 1 17 3 257 3 18 2 19 1 121 1 211 2 124 3 125 2 128 2 217 8 346 20 299 2 130 1 26 1 300 2 220 2 347 2 131 1 132 3 70 3 222 1 224 3 32 1 77 2 78 1 35 2 354 2 137 7 81 2 82 6 179 3 314 1 37 4 276 3 143 7 277 1 145 1 358 7 238 1 91 3 93 10 43 1 100 2 
46 1 132 2 324 2 3 1 327 1 47 1 70 2 5 2 76 1 77 3 286 1 10 10 333 1 274 2 58 3 82 4 13 3 231 2 37 3 276 2 18 3 339 1 91 3 93 9 279 1 124 3 217 6 23 1 346 19 189 1 
46 1 132 3 324 3 3 1 70 3 47 2 5 4 76 1 77 2 110 2 10 12 286 2 175 1 79 1 333 2 58 2 274 2 82 6 13 3 231 1 37 2 165 1 276 3 18 3 339 2 88 1 259 1 91 3 214 1 93 14 124 2 217 4 23 1 346 26 
46 1 324 3 3 1 47 3 5 4 7 1 10 21 286 2 110 1 333 1 58 4 13 4 165 1 18 4 339 3 19 1 259 1 214 1 124 5 217 8 23 1 346 41 131 1 132 3 70 3 76 1 77 4 33 1 175 1 78 1 79 1 274 4 82 6 231 1 37 4 276 3 88 1 145 1 238 1 91 5 93 20 279 1 189 1 
131 1 46 1 132 4 324 4 3 1 47 3 70 4 5 4 76 1 7 1 77 3 33 1 110 2 286 2 10 18 175 1 78 1 79 1 333 1 274 4 58 3 82 8 13 4 231 1 165 1 37 4 276 4 18 4 19 1 339 3 88 1 145 1 259 1 238 1 91 5 214 1 93 20 279 1 124 4 217 7 23 1 346 38 189 1 
131 1 46 1 132 2 324 2 3 1 47 2 70 2 5 4 76 1 7 1 77 7 110 1 286 1 10 25 175 1 78 1 79 1 333 1 274 4 58 7 82 4 334 2 13 7 231 1 165 1 37 7 276 2 18 7 19 1 339 4 88 1 145 1 259 1 238 1 91 8 214 1 93 27 279 2 124 8 217 14 23 1 346 52 
239 1 296 1 242 1 234 1 206 1 282 1 89 1 159 1 311 1 129 1 
164 1 244 1 
219 1 53 1 239 1 242 1 234 1 162 1 89 1 159 1 129 1 
1 1 304 1 266 2 242 1 234 1 206 1 186 1 159 1 89 1 226 1 239 1 296 1 148 1 150 1 255 1 289 1 311 1 129 1 
1 1 304 1 266 2 242 1 234 1 206 1 186 1 159 1 89 1 226 1 239 1 296 1 148 1 150 1 255 1 289 1 311 1 129 1 
1 1 304 1 266 2 242 1 234 1 206 1 186 1 159 1 89 1 226 1 239 1 296 1 148 1 150 1 255 1 289 1 311 1 129 1 
270 1 315 1 83 1 
270 1 315 1 83 1 
36 1 97 1 
36 1 315 1 97 1 
305 1 161 1 
218 1 1 1 305 1 266 1 242 1 244 1 159 1 52 2 9 1 32 2 226 1 197 2 332 1 161 1 255 1 289 1 310 1 164 1 234 1 257 2 39 1 89 1 42 1 239 1 43 2 96 1 129 1 
270 1 83 1 
36 1 315 1 97 1 
220 1 347 1 132 1 105 1 324 1 243 1 70 1 246 2 158 2 52 2 32 2 250 1 224 2 10 1 80 1 201 1 82 2 114 1 179 1 314 1 337 1 276 1 17 2 257 2 93 1 123 1 342 1 128 1 216 1 262 1 346 2 
220 1 347 1 233 1 180 1 49 1 194 1 17 1 235 1 158 1 249 1 224 1 187 1 201 1 128 1 
152 1 264 1 347 1 17 1 222 1 235 1 156 1 158 1 90 1 224 1 353 2 187 1 215 1 170 1 307 1 201 1 24 1 101 1 
152 1 264 1 347 1 241 1 17 2 222 1 235 1 156 1 158 2 90 1 224 2 353 2 187 1 215 1 170 1 307 1 201 1 24 1 101 1 
152 1 264 1 347 1 17 1 222 1 235 1 156 1 158 1 278 1 224 1 353 2 215 1 170 1 307 1 201 1 24 1 101 1 
173 1 
304 1 350 1 74 1 86 1 351 1 285 1 64 1 280 1 273 1 254 1 
13 2 27 1 304 5 135 5 86 5 18 2 351 5 30 5 167 10 77 2 91 2 354 1 124 2 55 2 261 5 
1 1 14 1 304 1 350 1 85 1 289 1 
220 1 1 3 347 1 49 2 351 2 158 4 285 2 224 4 198 1 11 1 273 2 254 1 201 1 289 3 202 2 163 1 14 4 233 1 180 1 17 4 85 2 86 2 40 1 213 2 41 2 280 2 22 1 128 1 319 1 
64 1 304 1 350 1 74 1 86 1 351 1 247 1 
1 1 14 1 304 2 350 1 85 1 86 1 351 1 155 1 167 1 285 1 199 1 280 1 273 1 254 1 261 1 289 1 140 1 
284 2 1 5 241 1 192 2 153 2 49 1 245 2 158 3 51 1 329 3 285 4 8 2 11 1 287 1 55 2 254 4 201 3 289 5 202 1 13 2 14 5 17 3 18 2 167 12 213 1 64 1 21 1 124 2 261 6 128 10 263 2 220 3 301 2 347 4 27 2 304 8 350 2 74 1 75 1 135 6 30 6 351 8 224 3 77 2 354 2 273 4 228 2 81 3 85 3 86 9 41 2 359 2 91 2 280 4 
1 1 27 1 304 5 350 2 47 1 135 5 30 5 351 5 285 2 77 2 175 1 79 1 55 2 273 2 254 2 289 1 274 1 202 1 13 2 14 1 165 1 85 1 86 8 18 2 167 6 339 1 88 1 41 1 91 2 214 1 280 2 124 2 261 3 345 1 98 1 
45 1 1 1 27 1 131 1 351 2 7 1 285 1 52 1 32 1 197 1 78 1 55 2 273 1 254 1 289 1 257 1 86 2 146 1 91 2 360 1 280 1 124 1 149 1 281 1 151 1 43 1 127 1 25 1 
300 1 220 1 347 1 132 1 324 1 70 1 49 1 158 1 52 3 250 1 224 1 32 2 10 1 197 2 332 1 201 1 81 1 82 2 114 1 292 1 179 1 276 1 17 1 257 3 317 1 360 1 43 2 127 2 128 1 346 1 100 1 299 1 
304 4 350 2 135 2 86 1 30 2 351 2 167 4 145 1 285 1 41 1 280 1 273 1 261 2 254 1 202 1 
117 1 305 1 239 1 242 1 311 1 
239 1 242 1 62 1 
239 1 66 1 242 1 
239 1 66 1 242 1 
239 1 66 1 242 1 
239 1 242 1 
234 1 129 1 
239 1 242 1 62 1 
239 1 242 1 62 1 
131 2 132 1 324 1 37 3 276 1 70 1 76 1 7 1 146 1 10 5 91 2 78 2 93 5 124 2 217 5 58 2 82 2 346 10 
132 1 324 1 276 1 70 1 76 1 18 1 91 1 93 2 217 1 58 1 82 2 346 2 
13 1 132 1 37 1 324 1 276 1 70 1 76 1 18 1 77 1 10 2 91 1 93 2 124 1 217 2 58 1 82 2 346 4 
131 1 132 3 324 3 37 1 276 3 268 1 70 3 76 1 110 1 10 2 78 1 93 1 217 2 58 1 346 3 82 6 189 1 
131 3 132 5 324 5 268 1 47 1 70 5 76 1 7 2 77 3 110 2 331 1 10 18 78 3 274 4 58 5 82 10 290 1 13 3 335 1 37 7 276 5 18 3 19 1 339 3 61 1 145 1 238 1 91 5 93 16 279 1 124 5 217 12 346 34 189 1 
131 1 132 2 37 2 324 2 276 2 70 2 19 1 7 1 145 1 10 4 110 1 238 1 91 1 93 4 78 1 124 1 217 3 58 1 346 8 82 4 
131 1 37 2 19 1 247 1 7 1 145 1 10 3 238 1 91 1 78 1 93 3 124 1 217 2 346 6 
13 1 132 1 37 1 324 1 276 1 70 1 18 1 61 1 77 1 10 2 91 1 93 2 124 1 217 2 58 1 82 2 346 4 
13 1 37 1 47 1 18 1 339 1 77 1 10 4 91 1 93 3 279 1 124 1 217 2 274 2 58 1 346 7 
131 2 132 2 324 2 70 2 268 1 7 1 77 2 10 12 110 2 78 2 58 4 274 2 82 4 13 2 334 1 204 1 37 5 276 2 18 2 19 1 339 2 145 1 238 1 91 3 93 11 279 1 124 3 217 9 346 23 
10 1 274 1 346 1 
93 1 339 1 346 1 
13 1 132 1 324 1 37 2 276 1 70 1 18 1 61 1 77 1 10 3 91 1 93 3 354 1 124 1 217 3 58 1 82 2 346 6 
132 1 324 1 47 1 70 1 76 1 77 2 10 6 175 1 79 1 58 1 274 1 82 2 13 2 165 1 37 1 276 1 18 2 339 1 88 1 91 2 214 1 93 6 124 2 217 2 346 12 
131 1 37 1 7 1 10 3 91 1 93 3 78 1 124 1 217 2 58 1 346 6 
131 1 132 1 37 1 324 1 276 1 268 1 70 1 19 1 238 1 10 2 110 1 93 1 78 1 217 2 58 1 346 3 82 2 
131 1 132 1 324 1 47 1 70 1 76 1 7 1 10 4 78 1 79 1 274 1 82 2 37 2 276 1 339 1 19 1 145 1 238 1 91 1 93 4 124 1 217 2 346 8 
131 1 132 2 324 2 47 1 70 2 76 1 7 1 10 5 78 1 79 1 274 2 58 1 82 4 13 1 37 2 276 2 18 1 19 1 339 1 61 1 145 1 238 1 91 2 93 6 279 1 124 1 217 3 346 11 
131 1 132 3 324 3 47 1 70 3 76 1 7 1 77 2 10 10 110 1 175 1 78 1 79 1 58 1 274 1 82 6 13 2 165 1 37 3 276 3 18 2 19 1 339 1 61 1 88 1 145 1 238 1 91 3 214 1 93 9 124 3 217 4 346 19 
131 1 132 3 324 3 47 1 70 3 76 1 7 1 77 1 110 1 10 7 175 1 78 1 79 1 58 2 274 1 82 6 13 2 165 1 37 3 276 3 18 2 19 1 339 1 61 1 88 1 145 1 238 1 91 3 214 1 93 10 124 2 217 5 346 17 
131 1 132 1 324 1 47 1 70 1 76 1 7 1 10 4 78 1 79 1 274 1 82 2 37 2 276 1 339 1 19 1 145 1 238 1 91 1 93 4 124 1 217 2 346 8 
132 1 324 1 47 1 70 1 76 1 77 2 10 6 175 1 79 1 58 1 274 1 82 2 13 2 165 1 37 1 276 1 18 2 339 1 88 1 91 2 214 1 93 6 124 2 217 2 346 12 
131 1 132 4 324 4 47 1 70 4 76 1 7 1 77 1 10 8 110 2 175 1 78 1 79 1 58 2 274 1 82 8 13 2 165 1 37 3 276 4 18 2 19 1 339 1 88 1 61 1 145 1 238 1 91 3 214 1 93 10 124 2 217 5 346 18 
132 4 324 4 47 1 70 4 76 1 77 2 10 7 110 2 175 1 79 1 58 3 274 1 82 8 13 3 165 1 37 3 276 4 18 3 339 1 88 1 91 3 214 1 93 9 124 2 217 6 346 16 189 1 
131 3 37 3 19 1 7 1 10 4 238 2 91 1 78 3 93 3 124 1 217 6 58 3 346 7 
131 1 132 4 324 4 47 1 70 4 76 1 7 1 77 1 10 8 110 2 175 1 78 1 79 1 58 1 274 1 82 8 13 2 165 1 37 3 276 4 18 2 19 1 339 1 88 1 145 1 238 1 91 3 214 1 93 10 124 2 217 4 346 18 189 1 
142 1 306 1 230 1 
141 1 142 1 65 1 240 1 48 1 306 1 95 1 230 1 
220 1 347 1 241 1 233 1 180 1 49 1 17 4 158 4 224 4 56 1 128 1 201 1 57 1 
130 1 220 1 347 2 256 1 182 1 17 2 221 1 158 2 31 1 224 2 213 1 128 1 201 1 81 1 
152 1 347 1 224 1 353 1 49 1 17 1 201 1 24 1 158 1 101 1 
220 1 241 1 347 1 337 1 17 2 222 1 158 2 224 2 216 1 128 1 201 1 
220 2 241 1 347 2 180 1 233 1 337 1 49 1 17 5 158 5 50 1 224 4 213 1 12 1 128 3 201 2 57 1 
220 2 241 1 347 2 180 1 233 1 337 1 49 1 17 5 158 5 195 1 224 4 213 1 12 1 128 3 201 2 57 1 
220 1 347 1 224 1 180 1 233 1 49 1 17 1 201 1 128 1 247 1 158 1 
220 1 26 1 300 1 347 1 292 1 49 1 17 1 257 2 158 1 52 2 32 1 224 1 197 1 332 1 43 1 128 1 201 1 81 1 
220 2 26 1 300 1 347 1 292 1 153 1 17 1 257 1 158 1 52 1 32 1 224 1 197 1 213 1 228 1 43 1 128 3 201 1 81 2 
220 2 26 1 347 1 292 1 153 1 17 1 257 1 158 1 52 1 32 1 224 1 197 1 213 1 228 1 43 1 128 3 201 1 81 2 44 1 
263 1 1 2 220 1 347 1 304 1 153 1 350 1 49 1 245 1 158 3 329 1 224 3 56 1 228 1 201 1 289 2 81 1 14 1 205 1 17 3 213 1 128 4 67 1 
263 1 220 1 1 2 347 1 14 1 304 1 350 1 153 1 49 1 17 3 245 1 158 3 329 1 224 3 213 1 359 1 56 1 228 1 128 4 201 1 81 1 289 2 
347 1 224 1 17 1 72 1 201 1 158 1 
220 2 241 1 347 3 313 1 256 1 337 1 49 2 72 1 182 1 17 7 222 1 6 1 246 1 50 1 158 7 224 6 12 1 287 1 128 3 201 2 81 1 
241 1 324 2 105 1 243 1 7 1 158 1 52 2 197 1 10 3 332 2 201 1 114 2 292 1 17 1 257 2 19 1 124 1 125 1 128 1 217 2 346 6 299 1 300 1 26 1 220 1 347 1 131 1 132 2 70 2 224 1 32 1 35 1 78 1 137 1 81 1 82 4 179 2 37 2 276 2 143 1 358 1 145 1 238 1 91 1 93 3 43 1 100 1 
263 1 1 3 301 1 304 1 192 1 350 1 49 1 74 1 245 1 351 1 158 1 285 2 8 1 329 1 224 1 11 1 273 2 254 2 289 3 310 1 14 2 17 1 85 1 86 1 64 1 359 1 280 2 128 2 
263 1 220 1 241 1 347 2 72 1 17 2 158 2 51 1 224 2 287 1 128 2 201 1 81 1 
220 1 26 1 347 1 292 1 49 1 17 1 257 2 158 1 52 2 32 1 224 1 197 1 332 1 43 1 128 1 201 1 81 1 44 1 
220 1 347 2 256 1 182 1 17 1 6 1 158 1 224 1 213 1 287 1 128 1 201 1 81 1 
267 1 107 1 208 1 257 1 52 1 32 1 80 1 342 1 262 1 
225 1 63 1 107 1 
332 1 267 1 200 1 107 1 208 1 
320 1 1 2 304 1 349 1 267 2 350 1 119 1 107 1 245 1 208 2 225 1 63 1 332 1 318 1 177 1 200 2 289 2 25 1 310 1 
108 1 237 1 116 1 336 1 271 1 71 1 338 1 356 1 
302 1 336 4 116 4 293 1 15 1 118 1 71 1 295 1 185 2 108 2 237 3 147 1 271 2 356 1 
336 2 116 2 4 1 71 1 338 1 185 1 108 1 237 1 271 1 356 1 178 1 99 1 
336 3 116 3 293 2 118 2 71 1 295 1 338 1 108 1 237 1 271 1 253 1 356 1 
237 2 59 1 229 2 174 1 
116 1 336 1 71 1 344 1 338 1 356 1 
108 1 237 1 116 2 336 2 271 1 71 1 87 1 185 1 338 1 356 1 
361 1 
108 1 237 1 116 1 336 1 271 1 71 1 338 1 356 1 
108 1 237 1 271 1 247 1 
108 1 237 1 116 1 336 1 271 1 71 1 356 1 
116 1 308 1 269 1 
108 1 237 1 116 3 336 3 293 2 118 1 271 1 71 1 355 1 295 1 338 1 356 1 
108 1 237 1 116 2 336 2 271 1 29 1 71 1 185 1 356 1 
152 1 264 1 237 1 147 1 116 1 336 1 353 1 94 1 71 1 338 1 356 1 
237 1 116 1 336 1 271 1 71 1 338 1 356 1 
108 1 116 1 336 1 271 2 71 1 338 1 356 1 
336 2 116 2 71 2 338 1 237 1 54 1 271 1 272 1 356 2 112 1 
302 1 336 3 116 3 71 1 87 1 338 1 185 2 108 1 237 2 147 1 271 1 362 1 356 1 
152 1 264 1 336 2 116 2 71 1 338 1 185 1 20 1 108 1 237 1 353 2 271 1 307 1 356 1 101 1 
108 1 237 2 302 1 147 1 116 4 336 4 271 1 29 1 71 2 185 2 184 1 338 1 356 2 
336 3 116 3 293 1 71 1 87 1 185 1 338 1 108 1 237 1 271 1 356 1 
237 1 302 1 147 1 15 1 
237 1 271 1 

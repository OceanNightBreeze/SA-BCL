#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
113 1 265 2 47 3 49 1 212 1 164 2 21 5 2 9 370 4 25 1 93 1 174 2 69 1 220 9 143 1 247 1 33 1 74 1 328 1 77 1 58 1 40 2 155 2 42 2 338 1 382 1 315 2 45 6 
113 1 265 2 47 3 49 1 212 1 164 2 21 5 2 9 370 4 25 1 93 1 174 2 69 1 220 9 143 1 247 1 33 1 74 1 328 1 77 1 58 1 40 2 155 2 42 2 338 1 382 1 315 2 45 6 
113 1 265 2 47 4 49 1 212 1 164 2 21 6 2 10 370 5 25 1 93 1 174 2 69 1 220 10 143 1 247 1 33 1 74 1 328 1 77 1 58 1 40 2 155 2 42 2 338 1 382 1 315 2 45 7 
113 1 265 2 47 2 212 1 164 2 21 4 2 7 370 3 25 1 93 1 174 2 69 1 220 7 143 1 247 1 33 1 74 1 328 1 77 1 58 1 40 2 155 2 42 1 338 1 382 1 315 2 45 4 
47 1 265 1 49 1 212 1 74 1 21 3 164 1 77 1 2 4 370 2 93 1 155 1 174 1 220 4 42 2 315 1 45 3 247 1 
265 1 113 1 101 1 21 1 328 1 269 1 77 1 2 2 93 1 155 1 40 1 174 1 221 1 220 2 120 1 315 1 247 1 
265 2 47 1 33 1 21 2 77 1 2 3 370 1 93 1 155 2 40 1 220 3 45 1 247 1 
47 3 265 2 347 1 212 1 49 1 21 5 164 1 2 9 370 4 93 1 174 1 220 9 326 1 143 1 247 1 33 1 74 1 77 1 40 1 155 2 42 2 338 1 315 1 45 7 
47 3 265 2 347 1 212 1 49 1 21 5 164 1 2 9 370 4 93 1 174 1 220 9 326 1 143 1 247 1 33 1 74 1 77 1 40 1 155 2 42 2 338 1 315 1 45 7 
134 1 275 1 343 1 
248 2 275 1 84 1 
80 2 365 2 263 1 367 2 245 1 44 2 342 2 46 2 
211 1 235 1 213 2 189 1 51 1 22 1 239 2 320 1 192 1 355 2 293 1 296 2 176 1 324 1 244 1 245 1 54 1 98 1 144 1 72 1 363 2 378 1 282 1 260 1 262 1 231 1 80 3 365 2 263 1 367 2 337 1 15 1 317 1 44 2 342 3 344 1 46 2 
80 1 365 1 179 1 284 1 367 1 245 1 240 1 44 1 342 1 46 1 
210 1 87 1 148 1 240 1 365 1 80 1 156 1 275 1 177 1 108 1 276 1 343 1 197 1 342 1 
210 1 87 2 148 1 240 1 365 1 80 1 156 1 275 1 367 1 177 1 108 2 44 1 343 1 342 1 46 1 
322 1 87 1 108 1 311 1 152 1 
87 2 275 1 108 2 316 1 311 1 277 1 343 1 152 1 
87 1 108 1 152 1 
179 1 87 1 310 1 311 1 240 1 365 1 80 1 284 1 367 1 108 1 245 1 44 1 342 1 46 1 
275 1 
87 2 275 1 108 2 350 1 316 1 311 1 343 1 152 1 
178 1 199 1 87 5 236 1 201 2 23 1 237 2 35 1 311 2 352 1 333 1 152 2 335 2 275 1 96 1 108 5 316 1 159 1 343 1 
134 1 263 1 
270 1 90 1 365 2 80 2 367 1 263 2 44 1 342 2 46 1 
358 1 14 1 312 1 
235 1 213 1 189 1 239 1 378 1 262 1 80 1 296 1 263 1 324 1 107 1 317 1 15 1 342 1 98 1 144 1 
235 1 213 1 189 1 239 1 378 1 312 1 10 1 262 1 365 1 80 2 296 1 324 1 367 1 15 1 30 1 317 1 44 1 98 1 342 2 144 1 
80 3 365 3 263 1 367 3 44 3 342 3 46 1 10 1 
80 1 365 1 179 1 367 1 240 1 44 1 342 1 
80 1 365 1 367 1 270 1 240 1 44 1 90 1 342 1 46 1 
210 1 211 1 235 1 213 1 189 1 87 1 51 1 239 1 320 1 90 1 240 1 241 1 192 1 355 1 293 1 296 1 176 1 324 1 177 1 244 1 54 1 245 1 30 1 98 1 144 1 72 1 363 2 148 1 378 1 282 1 10 1 262 1 80 4 365 3 156 1 263 1 367 3 108 1 15 1 63 1 317 1 44 3 342 4 46 2 
80 2 365 2 263 1 367 1 13 1 44 1 197 1 342 2 10 1 
210 1 87 1 148 1 90 1 240 1 10 2 365 3 80 3 156 1 275 1 367 3 177 1 108 1 30 1 63 1 44 3 342 3 303 1 46 1 
90 1 312 1 10 1 365 2 80 2 358 1 367 2 44 2 342 2 46 1 
235 1 213 1 189 1 239 1 378 1 262 1 80 1 296 1 263 1 324 1 317 1 15 1 342 1 98 1 144 1 
213 1 189 1 239 1 240 1 128 1 364 1 262 1 80 1 296 1 263 1 324 1 62 1 317 1 15 1 342 1 98 1 144 1 
211 1 267 1 64 1 51 2 321 1 320 1 293 1 355 4 358 2 244 1 305 1 5 1 72 1 363 2 127 1 312 2 183 1 282 1 207 1 14 2 111 1 16 1 344 2 318 1 
80 1 365 1 367 1 177 1 240 1 44 1 342 1 217 1 
288 1 90 1 10 2 365 5 80 5 61 1 367 4 263 1 13 1 30 1 44 4 197 1 342 5 46 1 
80 2 365 2 179 1 367 2 240 1 44 2 342 2 217 1 
153 1 243 1 
153 1 243 1 
136 1 19 1 
136 1 19 1 
136 1 19 1 
153 1 243 1 158 1 
153 1 243 1 158 1 
153 1 371 1 243 1 
153 2 139 1 136 1 19 1 243 2 203 1 
153 1 243 1 158 1 
153 1 243 1 121 1 
153 1 243 1 121 1 
153 1 243 1 121 1 
226 1 251 1 0 1 34 2 87 2 125 2 377 1 182 1 36 3 37 2 354 2 153 2 139 1 105 2 3 1 243 2 275 1 108 2 209 1 
114 1 215 1 87 1 170 1 354 1 371 1 219 1 243 1 97 1 34 1 327 1 125 1 36 1 182 1 379 1 153 1 365 2 80 2 105 1 263 1 367 2 108 1 44 2 342 2 
174 1 164 1 315 1 
174 1 120 1 315 1 
280 1 164 2 120 1 57 1 149 1 315 3 
274 1 280 1 164 1 120 1 57 1 315 2 
164 1 280 2 120 1 57 1 315 2 
18 1 267 1 268 1 87 5 23 2 237 1 88 1 294 2 297 1 219 1 275 2 97 1 196 2 5 1 248 3 279 2 146 1 198 1 201 1 35 1 311 4 379 1 152 1 335 1 131 1 108 5 316 1 111 1 84 1 159 3 343 1 318 1 
18 1 267 3 87 9 236 1 23 6 237 2 88 2 294 6 297 3 322 5 275 5 27 1 97 4 196 6 5 3 248 9 373 1 252 5 201 2 9 1 35 1 311 7 152 6 185 1 335 2 233 1 131 2 108 9 316 1 111 3 84 3 159 8 343 1 188 1 318 3 
267 1 268 1 87 3 236 1 23 2 237 1 88 1 294 2 297 1 275 3 97 1 196 2 5 1 248 4 279 1 146 1 201 1 311 2 335 1 131 1 108 3 111 1 84 2 159 3 343 1 318 1 
267 2 268 1 87 4 236 1 23 4 237 1 88 1 294 4 297 2 275 4 97 2 196 4 5 2 248 7 373 1 279 2 146 1 201 1 311 3 185 1 335 1 131 1 108 4 111 2 84 3 159 5 343 1 188 1 318 2 
134 1 100 1 98 1 
95 1 98 1 
234 1 
15 1 98 1 
100 2 324 1 15 1 98 3 369 1 278 1 
324 1 15 1 98 1 
242 1 98 1 
85 1 345 1 267 1 163 1 51 3 166 1 168 2 115 1 330 1 331 1 380 1 355 7 207 2 302 1 305 3 318 1 344 4 
85 1 345 1 267 1 163 1 51 3 166 1 168 2 115 1 330 1 331 1 380 1 355 7 207 2 302 1 305 3 318 1 344 4 
85 1 345 1 267 1 163 1 255 1 51 3 166 1 168 2 115 1 330 1 331 1 380 1 355 7 207 2 302 1 305 3 318 1 344 4 
85 2 211 1 345 1 267 4 163 1 166 2 51 15 238 3 168 3 115 2 320 1 290 1 355 31 295 1 297 3 302 1 305 10 5 3 72 1 124 4 363 2 330 1 331 2 151 1 380 5 282 1 129 1 132 1 207 5 106 1 81 1 111 3 344 16 318 4 
211 2 85 1 345 1 267 1 163 1 51 4 166 1 168 2 115 1 320 2 355 9 295 1 305 4 72 2 307 1 361 1 363 4 330 1 331 1 380 1 282 2 207 3 318 1 344 5 
265 1 213 1 21 1 164 1 66 1 239 1 2 2 169 1 296 1 93 1 174 1 220 2 120 1 225 1 247 1 144 1 250 1 73 1 329 1 77 1 149 1 262 1 186 1 366 1 155 1 40 1 232 1 339 1 315 2 45 1 
265 1 213 1 21 1 164 1 66 1 239 1 2 3 296 1 174 1 220 3 120 1 225 1 247 1 144 1 250 1 73 1 329 1 77 1 149 1 257 1 262 1 283 1 186 1 155 1 40 1 232 1 110 1 339 1 315 2 45 2 
213 1 21 1 164 1 66 1 239 1 2 2 296 1 174 1 220 2 120 1 225 1 247 1 144 1 250 1 73 1 77 1 149 1 257 1 262 1 283 1 40 1 232 1 339 1 315 2 45 2 
265 1 213 1 66 2 239 1 2 1 296 1 140 1 220 1 225 2 98 1 144 1 123 1 250 2 75 1 78 1 259 1 262 1 155 1 40 2 82 1 110 1 317 1 15 1 
265 1 213 1 164 1 66 1 239 1 2 1 169 1 296 1 93 1 174 1 220 1 120 1 225 1 144 1 250 1 73 1 329 1 149 1 257 1 262 1 186 1 155 1 40 1 232 1 339 1 315 2 
119 1 
48 1 87 5 137 2 138 2 237 1 239 2 88 1 89 1 240 1 296 2 94 2 299 4 141 2 53 2 98 1 197 1 144 1 248 2 6 1 360 1 201 1 148 1 150 1 152 6 262 1 365 1 156 1 108 5 15 1 316 3 317 2 159 2 210 1 17 1 213 2 214 1 20 1 23 2 167 1 275 2 177 1 122 1 276 1 32 1 75 1 126 2 35 1 39 1 335 1 80 1 130 2 82 1 84 2 343 1 342 1 
210 1 6 1 48 1 32 1 87 3 148 1 167 1 350 1 126 1 240 1 152 2 39 1 365 1 80 1 299 2 156 1 177 1 108 3 276 1 316 1 197 1 342 1 
210 1 48 1 87 3 167 1 350 1 240 1 94 1 299 3 275 1 177 1 276 1 197 1 6 1 32 1 148 1 152 1 39 1 80 1 365 1 156 1 108 3 316 1 342 1 343 1 
210 1 48 1 87 3 138 1 167 1 350 1 240 1 94 1 299 3 275 1 177 1 276 1 197 1 6 1 32 1 148 1 126 1 152 2 39 1 80 1 365 1 156 1 108 3 316 1 342 1 343 1 
48 1 87 5 137 2 138 4 237 1 350 1 240 1 94 4 299 6 53 2 141 2 197 1 6 1 201 1 148 1 150 1 152 7 365 1 156 1 12 1 108 5 109 1 316 3 159 1 210 1 20 1 23 1 167 1 26 1 275 5 177 1 276 1 223 1 32 1 126 4 35 1 39 1 335 1 80 1 130 2 381 1 84 2 342 1 343 5 
210 1 17 1 48 1 20 1 87 4 137 2 138 2 23 1 167 1 237 1 240 1 94 2 299 4 275 2 177 1 141 2 53 2 276 1 197 1 248 2 6 1 32 1 201 1 148 1 126 2 35 1 150 1 152 4 39 1 335 1 365 1 80 1 130 2 156 1 108 4 316 2 84 2 159 1 343 1 342 1 
210 1 48 1 20 1 87 4 137 2 138 2 23 1 237 1 167 1 240 1 94 2 26 1 299 4 275 1 177 1 141 2 53 2 276 1 197 1 6 1 32 1 201 1 148 1 126 2 150 1 35 1 152 4 39 1 335 1 80 1 365 1 130 2 156 1 381 1 12 1 108 4 316 2 84 2 159 1 343 1 342 1 
210 1 48 1 20 1 87 4 137 2 138 2 23 1 237 1 167 1 240 1 94 2 26 1 299 4 275 1 177 1 141 2 53 2 276 1 197 1 6 1 32 1 201 1 148 1 126 2 150 1 35 1 152 4 39 1 335 1 80 1 365 1 130 2 156 1 381 1 12 1 108 4 316 2 84 2 159 1 343 1 342 1 
210 1 48 1 20 1 87 4 138 2 23 1 237 1 167 1 240 1 353 2 218 1 194 1 94 2 26 1 299 4 275 1 177 1 325 1 141 2 53 2 276 1 197 1 248 2 6 1 32 1 201 1 148 1 126 2 35 1 152 4 334 2 39 1 335 1 80 1 365 1 156 1 108 4 316 2 159 1 343 1 342 1 
210 1 48 1 20 1 87 4 137 2 23 1 138 3 237 1 167 1 240 1 26 1 94 3 299 5 275 1 177 1 141 2 53 2 276 1 197 1 6 1 32 1 201 1 148 1 150 1 35 1 126 3 152 5 39 1 335 1 80 1 365 1 130 2 381 1 156 1 12 1 108 4 109 1 316 2 84 2 159 1 343 1 342 1 
210 1 48 1 20 1 87 4 137 2 23 1 138 3 237 1 167 1 240 1 26 1 94 3 299 5 275 1 177 1 141 2 53 2 276 1 197 1 6 1 32 1 201 1 148 1 150 1 35 1 126 3 152 5 39 1 335 1 80 1 365 1 130 2 381 1 156 1 12 1 108 4 109 1 316 2 84 2 159 1 343 1 342 1 
210 1 17 1 48 1 20 1 87 4 138 2 23 1 167 1 237 1 240 1 353 2 94 2 299 4 275 1 177 1 325 1 141 2 53 2 276 1 197 1 248 2 6 1 32 1 201 1 148 1 126 2 35 1 152 4 334 2 39 1 335 1 365 1 80 1 156 1 108 4 316 2 159 1 343 1 342 1 
134 1 211 1 85 1 345 1 267 1 163 1 166 1 51 3 168 1 320 1 293 1 355 6 358 1 244 1 305 2 72 1 363 2 330 1 312 1 127 1 282 1 207 2 263 2 14 1 318 1 344 3 
211 2 267 1 51 6 238 3 320 2 272 1 293 1 355 14 297 2 358 4 176 1 244 2 305 2 246 1 5 2 72 2 124 3 362 1 363 4 151 1 312 11 380 1 282 2 260 1 102 1 184 1 129 1 207 1 263 1 14 11 111 1 344 8 318 2 
211 1 235 1 213 1 189 1 51 1 239 1 320 1 67 1 293 1 355 2 296 1 358 1 324 1 176 1 244 1 30 1 98 1 144 1 72 1 363 2 378 1 256 1 10 1 282 1 262 1 102 1 260 1 80 2 365 1 263 1 367 1 107 1 15 1 317 1 44 1 286 1 342 2 344 1 
85 1 135 2 345 1 235 2 189 2 51 10 239 3 191 1 293 3 355 20 296 3 297 2 358 7 52 2 244 3 54 2 98 2 305 8 144 2 5 2 308 2 363 6 309 2 312 7 257 1 10 1 260 1 102 1 262 2 365 1 207 4 263 2 367 1 14 7 317 1 15 2 111 2 318 3 160 1 211 3 267 3 213 3 163 1 166 1 168 1 320 3 176 1 324 2 30 1 72 3 330 1 181 1 378 2 380 4 282 3 80 3 44 1 342 3 344 10 
211 2 346 1 213 8 51 1 239 7 320 2 293 2 355 2 296 8 300 1 176 1 244 2 98 3 144 2 72 2 75 1 363 4 202 1 127 1 38 1 257 1 10 1 282 2 262 2 260 1 336 1 231 2 80 1 365 1 154 1 366 1 367 1 82 1 317 2 15 2 44 1 285 1 342 1 344 1 
211 1 267 1 51 2 320 1 90 1 293 1 355 3 297 1 358 1 244 1 305 1 5 1 72 1 374 1 363 2 312 1 282 1 102 1 365 1 80 1 207 1 367 1 14 1 44 1 111 1 342 1 46 1 318 1 344 1 
72 1 211 1 64 1 363 2 320 1 312 1 127 1 380 1 282 1 355 2 293 1 358 1 14 1 244 1 305 1 5 1 318 1 344 2 
72 1 211 1 267 1 363 2 51 2 320 1 312 1 127 1 282 1 355 2 293 1 207 1 358 1 14 1 244 1 111 1 305 1 16 1 
211 1 267 1 51 2 320 1 293 1 355 4 297 1 358 2 244 1 305 2 5 1 72 1 363 2 127 1 312 2 380 1 282 1 207 1 14 2 111 1 344 2 318 1 
72 1 211 1 64 1 363 2 320 1 312 1 380 1 282 1 355 2 293 1 358 1 14 1 244 1 285 1 305 1 5 1 318 1 344 2 
72 1 211 1 267 1 363 2 51 2 320 1 312 1 282 1 355 2 293 1 207 1 358 1 14 1 244 1 285 1 111 1 305 1 16 1 
211 1 267 1 51 2 320 1 293 1 355 4 297 1 358 2 244 1 305 2 5 1 72 1 363 2 312 2 380 1 282 1 207 1 14 2 285 1 111 1 344 2 318 1 
211 1 267 1 51 2 320 1 355 4 293 1 297 1 358 2 244 1 305 2 5 1 72 1 363 2 312 2 380 1 282 1 207 1 14 2 111 1 344 2 318 1 
211 1 235 1 213 1 189 1 51 1 239 1 320 1 355 2 293 1 296 1 324 1 176 1 54 1 244 1 98 1 144 1 72 1 363 2 378 1 282 1 260 1 262 1 80 1 263 1 15 1 317 1 342 1 344 1 
211 1 213 1 189 1 51 1 239 1 320 1 240 1 355 1 293 1 296 1 324 1 176 1 244 1 98 1 144 1 72 1 363 2 228 1 128 1 364 1 282 1 262 1 80 1 263 1 62 1 15 1 317 1 342 1 
211 1 267 1 51 2 320 1 293 1 355 4 297 1 358 2 244 1 305 2 5 1 72 1 363 2 312 2 380 1 282 1 102 1 207 1 14 2 111 1 344 2 318 1 
211 1 235 1 267 1 213 1 189 1 51 2 239 1 320 1 355 4 293 1 296 1 297 1 358 2 324 1 54 1 244 1 305 2 98 1 5 1 144 1 72 1 308 1 363 2 378 1 312 2 380 1 282 1 262 1 80 1 366 1 207 1 14 2 15 1 111 1 342 1 344 2 318 1 
211 1 267 1 51 1 1 1 320 1 90 1 293 1 355 3 297 1 358 1 244 1 305 1 5 1 72 1 363 2 312 1 380 1 282 1 102 1 365 1 80 1 367 1 14 1 111 1 44 1 342 1 46 1 318 1 344 2 
287 2 211 2 267 3 51 10 238 1 351 1 320 2 291 1 172 1 355 19 297 3 305 6 5 3 72 2 307 1 124 2 363 4 376 1 151 1 380 3 282 2 79 2 129 1 313 1 207 3 41 1 341 1 111 3 344 9 318 3 
287 4 211 3 267 2 51 12 238 2 289 1 24 1 351 2 320 3 172 1 355 26 68 1 295 2 297 3 28 1 305 4 5 3 72 3 307 1 124 2 363 6 376 1 151 2 380 2 282 3 79 1 204 1 261 1 207 2 41 1 341 2 111 2 344 14 318 3 
287 4 85 1 211 3 345 1 267 5 163 1 166 1 51 21 168 1 238 3 289 1 24 1 351 1 320 3 172 1 68 1 355 41 295 1 297 4 71 1 28 1 305 8 5 4 72 3 307 1 124 4 363 6 376 1 330 1 151 3 380 4 282 3 79 1 204 1 261 1 129 1 313 1 207 4 41 1 341 2 111 4 344 20 318 5 
287 4 85 1 211 4 345 1 267 4 163 1 166 1 51 18 168 1 238 3 289 1 24 1 351 1 320 4 172 1 68 1 355 38 295 2 297 4 71 1 28 1 305 7 5 4 72 4 307 1 124 4 363 8 376 1 330 1 151 3 380 3 282 4 79 1 204 1 261 1 129 1 313 1 207 4 41 1 341 2 111 3 344 20 318 5 
287 4 85 1 211 2 345 1 267 8 163 1 166 1 51 25 168 1 238 4 289 1 24 1 351 1 320 2 272 2 172 1 68 1 355 52 295 1 297 7 28 1 305 14 5 7 72 2 307 1 124 4 363 4 376 1 330 1 151 2 380 7 282 2 79 1 204 1 261 1 129 2 207 7 41 1 341 1 111 7 344 27 318 8 
99 1 354 1 153 1 139 1 105 1 0 1 243 1 34 1 125 1 209 1 
371 1 215 1 
354 1 249 1 153 1 104 1 105 1 243 1 34 1 125 1 29 1 
251 1 0 1 87 1 34 1 125 1 377 1 182 1 36 2 37 1 354 1 153 1 139 1 105 1 3 1 243 1 275 1 108 1 209 1 
251 1 0 1 87 1 34 1 125 1 377 1 182 1 36 2 37 1 354 1 153 1 139 1 105 1 3 1 243 1 275 1 108 1 209 1 
251 1 0 1 87 1 34 1 125 1 377 1 182 1 36 2 37 1 354 1 153 1 139 1 105 1 3 1 243 1 275 1 108 1 209 1 
92 1 158 1 203 1 
92 1 158 1 203 1 
11 1 121 1 
11 1 121 1 203 1 
114 1 327 1 
114 1 215 1 87 1 165 1 170 1 354 1 371 1 219 1 243 1 97 1 251 1 34 1 327 1 125 1 311 1 36 1 37 1 379 1 153 1 80 2 365 2 105 1 263 1 367 2 108 1 44 2 342 2 
92 1 158 1 
11 1 121 1 203 1 
211 1 346 1 213 2 65 1 51 1 239 2 320 1 193 1 293 1 355 2 296 2 300 1 118 1 176 1 244 1 98 1 144 1 72 1 200 1 363 2 229 1 282 1 262 1 102 1 260 1 231 2 80 2 365 2 15 1 342 2 344 1 
250 1 73 1 213 2 164 1 239 2 149 1 271 1 257 1 262 1 186 1 296 2 366 1 232 1 174 1 175 1 120 1 315 2 142 1 144 1 
250 1 73 1 213 1 164 1 239 1 149 1 257 1 262 1 186 1 296 1 232 1 174 1 175 1 120 1 315 2 340 1 144 1 
319 1 250 1 213 1 75 1 239 1 262 1 296 1 82 1 15 1 317 1 142 1 98 1 144 1 123 1 
250 1 73 1 213 1 164 1 239 1 149 1 271 1 257 1 262 1 186 1 296 1 232 1 174 1 175 1 120 1 315 2 142 1 144 1 
112 1 
134 1 178 1 199 1 275 1 23 1 159 1 343 1 
87 1 137 1 23 1 237 1 275 2 248 1 201 1 150 1 35 1 152 1 335 1 130 1 108 1 316 1 84 1 159 1 343 1 
50 1 86 1 348 2 87 5 237 4 239 3 88 2 91 2 292 1 242 2 294 6 296 3 297 2 52 2 95 3 98 10 196 6 144 4 5 2 145 2 248 12 100 2 360 1 199 1 201 4 152 5 262 3 103 2 366 1 314 2 157 2 108 5 15 3 317 1 316 3 368 1 159 9 111 2 369 1 318 2 210 2 213 3 267 2 23 8 324 3 275 8 372 1 31 2 178 1 76 2 35 4 335 4 84 6 343 2 
267 2 87 1 23 5 237 2 238 1 88 1 289 1 24 1 68 1 294 5 297 2 275 5 28 1 196 5 5 2 248 6 360 1 124 1 201 2 35 2 151 1 152 1 261 1 335 2 206 1 157 1 314 2 264 1 108 1 316 1 159 8 84 3 111 2 343 2 318 2 
85 1 345 1 267 1 87 1 166 1 23 2 237 1 240 1 245 1 4 1 179 1 201 1 310 1 35 1 335 1 80 1 365 1 284 1 157 1 314 2 381 1 367 1 108 1 159 2 44 1 342 1 318 2 46 1 
178 1 199 1 201 1 23 1 237 1 35 1 335 1 275 1 159 1 343 1 
248 10 267 2 23 5 294 5 297 2 157 1 52 1 314 2 275 5 84 5 111 2 159 5 196 5 5 2 318 2 
87 1 275 1 108 1 316 1 343 1 152 1 
266 1 214 1 213 4 87 3 236 1 23 2 237 2 239 4 88 2 292 2 296 4 122 1 98 1 144 1 360 2 75 1 201 2 35 1 281 1 152 4 262 1 335 2 82 1 108 3 15 1 317 2 316 2 368 1 159 2 
211 1 235 1 213 1 189 1 51 1 239 1 320 1 192 1 355 1 293 1 296 1 176 1 324 1 245 1 54 1 244 1 98 1 144 1 72 1 363 2 378 1 282 1 262 1 80 3 365 2 263 1 367 2 317 1 15 1 44 2 342 3 46 2 
248 4 360 1 201 1 23 2 168 1 237 1 88 1 35 1 294 2 335 1 275 4 84 2 159 1 196 2 343 2 
354 1 105 1 195 1 
354 1 105 1 195 1 
354 1 114 1 105 1 0 1 8 1 
354 1 105 1 195 1 
354 1 105 1 301 1 
354 1 105 1 301 1 
354 1 105 1 301 1 
354 1 105 1 
153 1 243 1 
72 2 211 2 85 1 345 1 267 1 163 1 51 4 363 4 166 1 168 1 320 2 330 1 380 1 282 2 355 8 295 1 207 2 305 3 318 1 344 4 
134 1 85 1 345 1 267 1 163 1 51 3 166 1 168 1 330 1 355 6 207 2 305 2 318 1 344 3 
72 1 211 1 267 1 51 2 363 2 320 1 380 1 282 1 355 4 297 1 298 1 207 1 111 1 305 2 5 1 318 1 344 2 
267 1 124 2 51 4 238 1 151 1 380 1 355 7 129 1 297 1 207 1 111 1 305 2 344 3 5 1 318 1 
85 2 211 2 345 1 267 3 163 1 166 2 51 12 168 1 238 2 320 2 272 1 355 23 295 2 297 2 305 9 5 2 72 2 56 1 124 2 363 4 330 1 380 4 282 2 129 1 184 1 207 5 111 2 318 3 344 11 
355 1 124 1 51 1 
355 1 238 1 344 1 
211 1 72 1 267 1 363 2 51 3 320 1 380 1 282 1 355 6 297 1 298 1 207 2 52 1 111 1 305 3 5 1 318 1 344 3 
211 1 267 2 51 6 238 1 24 1 289 1 320 1 355 12 68 1 297 2 28 1 305 2 5 2 72 1 307 1 124 1 363 2 151 1 380 1 282 1 261 1 207 1 111 2 344 6 318 2 
85 1 345 1 267 1 51 3 166 1 380 1 355 6 207 1 305 2 318 1 344 3 
85 1 72 1 211 1 56 1 163 1 166 1 51 2 363 2 330 1 320 1 380 1 282 1 355 3 295 1 207 1 305 2 344 1 
211 1 72 1 85 2 307 1 345 1 267 2 363 2 166 2 51 5 320 1 380 2 282 1 355 10 207 3 305 5 4 1 344 5 318 2 
72 1 211 1 307 1 363 2 320 1 380 1 282 1 355 2 305 1 5 1 318 1 344 2 
72 1 211 1 307 1 267 1 51 2 363 2 320 1 380 1 282 1 355 4 297 1 207 1 111 1 305 2 5 1 318 1 344 2 
72 3 211 3 85 1 307 1 56 1 51 2 363 6 166 1 320 3 380 1 282 3 355 3 295 1 313 1 207 1 305 2 344 1 
85 3 211 5 345 2 267 5 163 1 166 3 51 18 168 1 238 3 320 5 290 1 355 34 295 2 297 3 298 1 305 12 5 3 72 5 307 1 56 1 124 4 363 10 330 1 151 1 380 5 282 5 129 1 313 1 207 7 106 1 81 1 111 3 344 16 318 5 
211 1 85 1 345 1 267 1 163 1 51 4 166 1 168 1 238 1 24 1 320 1 355 8 305 2 72 1 307 1 124 1 363 2 330 1 151 1 282 1 207 2 318 1 344 4 
85 1 211 2 345 1 267 1 163 1 166 1 51 5 168 1 238 1 24 1 320 2 355 11 297 1 298 1 305 3 5 1 72 2 307 1 124 2 363 4 330 1 151 1 380 1 282 2 129 1 207 2 344 6 318 2 
85 1 211 3 345 1 267 3 163 1 166 1 51 10 168 1 238 1 289 1 24 1 320 3 355 19 68 1 295 1 297 2 298 1 28 1 305 4 5 2 72 3 307 1 124 1 363 6 330 1 151 1 380 1 282 3 261 1 207 3 111 2 344 9 318 3 
85 1 211 3 345 1 267 2 163 1 166 1 51 7 168 1 238 1 24 1 289 1 320 3 355 17 68 1 295 1 297 2 298 1 28 1 305 5 5 2 72 3 307 1 124 1 363 6 330 1 151 1 380 2 282 3 261 1 207 3 111 1 344 10 318 3 
211 1 85 1 345 1 267 1 163 1 51 4 166 1 168 1 238 1 24 1 320 1 355 8 305 2 72 1 307 1 124 1 363 2 330 1 151 1 282 1 207 2 318 1 344 4 
211 1 267 2 51 6 238 1 24 1 289 1 320 1 355 12 68 1 297 2 28 1 305 2 5 2 72 1 307 1 124 1 363 2 151 1 380 1 282 1 261 1 207 1 111 2 344 6 318 2 
85 1 211 4 345 1 267 2 163 1 166 1 51 8 168 1 238 1 289 1 24 1 320 4 355 18 68 1 295 2 297 2 298 1 28 1 305 5 5 2 72 4 307 1 124 1 363 8 330 1 151 1 380 2 282 4 261 1 207 3 111 1 344 10 318 3 
211 4 267 2 51 7 238 1 289 1 24 1 320 4 355 16 68 1 295 2 297 3 28 1 305 6 5 3 72 4 307 1 124 1 363 8 151 1 380 3 282 4 261 1 313 1 207 3 111 2 344 9 318 3 
85 3 345 1 267 1 163 1 51 4 166 3 330 2 380 3 355 7 207 3 305 6 318 1 344 3 
85 1 211 4 345 1 267 2 163 1 166 1 51 8 168 1 238 1 289 1 24 1 320 4 355 18 68 1 295 2 297 2 28 1 305 4 5 2 72 4 307 1 124 1 363 8 330 1 151 1 380 1 282 4 261 1 313 1 207 3 111 1 344 10 318 3 
80 1 365 1 263 1 13 1 342 1 197 1 171 1 
254 1 180 1 349 1 171 1 117 1 365 1 80 1 263 1 13 1 224 1 197 1 342 1 
262 1 134 1 296 1 213 1 75 1 82 1 239 1 15 1 317 1 98 1 144 1 
235 1 213 1 189 1 239 1 10 1 262 1 365 1 80 2 296 1 263 1 324 1 367 1 15 1 317 1 44 1 98 1 342 2 144 1 
235 1 213 1 189 1 239 1 240 1 292 1 242 1 296 1 324 2 177 1 31 1 98 3 144 1 148 1 10 1 262 1 80 2 365 2 263 1 367 2 15 2 44 1 342 2 
213 1 189 1 239 1 240 2 292 1 242 1 296 1 324 2 177 1 31 1 98 3 144 1 148 1 128 1 10 1 262 1 80 2 365 2 263 1 367 2 62 1 15 2 44 1 342 2 
210 1 213 3 87 2 239 3 292 1 173 1 242 1 296 3 95 1 324 1 275 1 31 1 98 4 144 1 100 1 227 1 152 1 230 1 262 1 108 2 15 1 317 1 343 1 
210 1 100 1 213 3 87 2 76 1 239 3 152 1 230 1 292 1 262 1 242 1 296 3 275 1 324 1 95 1 108 2 317 1 15 1 31 1 343 1 98 4 144 1 
262 1 296 1 213 1 239 1 38 1 144 1 
213 7 239 6 202 1 38 1 257 1 258 1 273 1 262 2 231 1 336 1 154 1 366 1 296 7 300 1 359 1 324 1 317 2 15 2 369 1 98 3 144 3 
85 1 211 2 345 1 235 1 267 1 213 1 189 1 163 1 51 3 166 1 168 1 239 1 320 2 355 6 293 2 296 1 358 1 324 1 244 2 54 1 305 2 98 1 144 1 72 2 308 1 200 1 363 4 309 1 330 1 378 1 312 1 10 1 282 2 262 1 102 1 80 2 365 1 366 1 207 2 263 2 367 1 14 1 15 1 44 1 342 2 344 3 318 1 
210 1 213 1 87 3 348 1 23 1 239 1 237 2 296 1 275 1 95 1 98 2 145 1 100 1 178 1 199 1 76 1 201 2 35 2 311 1 152 2 335 2 103 1 108 3 317 1 316 1 159 1 368 1 343 1 
100 1 213 2 239 2 38 1 262 1 366 1 296 2 324 1 15 1 372 1 369 1 98 2 144 2 
213 4 75 1 239 4 230 1 262 1 296 4 366 1 82 1 83 1 317 1 15 1 98 1 144 1 
160 1 213 2 7 1 239 2 59 1 292 1 258 1 262 1 296 2 359 1 324 1 15 1 98 1 144 2 
262 1 73 1 296 1 213 1 174 1 120 1 239 1 315 1 317 1 144 1 
262 1 193 1 296 2 366 1 213 2 300 1 239 2 15 1 98 1 257 1 144 1 
213 5 75 1 239 4 202 1 292 1 262 2 296 5 366 1 154 1 300 1 82 1 83 1 317 1 15 2 98 3 144 2 
213 5 75 1 239 4 202 1 292 1 262 2 296 5 366 1 357 1 300 1 82 1 83 1 317 1 15 2 98 3 144 2 
213 1 189 1 239 1 240 1 296 1 324 1 98 1 144 1 128 1 10 1 262 1 80 2 365 1 367 1 263 1 62 1 317 1 15 1 44 1 342 2 
213 1 239 1 258 1 292 1 273 1 262 1 296 1 359 1 324 1 15 1 369 1 98 1 144 2 
65 1 229 1 332 1 365 1 80 1 118 1 208 1 342 1 306 1 
60 1 356 1 332 1 
263 1 208 1 133 1 332 1 306 1 
210 1 87 2 148 1 311 1 240 1 332 1 60 1 356 1 43 1 156 1 263 1 275 1 208 2 177 1 108 2 133 2 63 1 343 1 306 2 
134 1 21 1 77 1 247 1 
265 1 155 1 220 1 21 1 77 1 2 1 247 1 
40 1 2 1 225 1 
265 1 375 1 21 1 328 2 2 3 77 1 116 1 93 1 187 1 155 1 220 3 247 1 
265 1 155 1 42 1 220 2 21 1 77 1 2 2 45 1 247 1 
265 1 212 1 93 1 155 1 174 1 220 1 164 1 21 1 2 1 315 1 370 1 
265 1 93 1 155 1 220 1 21 1 77 1 2 1 
265 1 93 1 155 1 220 1 77 2 2 1 247 1 
265 2 161 1 253 1 147 1 21 1 77 1 2 2 93 1 155 2 220 2 
265 1 47 1 21 2 77 1 2 3 370 1 93 1 155 1 220 3 338 1 143 1 45 2 247 1 
265 1 21 1 164 1 77 1 2 2 149 1 93 1 323 1 155 1 174 1 220 2 120 1 315 2 45 1 247 1 
265 2 47 1 49 1 21 2 77 1 2 4 370 1 93 1 155 2 220 4 42 1 45 2 247 1 
265 1 93 1 155 1 220 1 21 1 77 1 2 1 247 1 
265 1 47 1 375 1 328 1 21 3 77 2 2 4 116 1 370 1 155 1 221 1 220 4 45 2 247 2 
55 1 265 1 347 1 21 1 77 1 2 2 216 1 93 1 155 1 220 2 45 1 247 1 
265 1 375 1 21 1 328 2 2 3 77 1 116 2 93 1 155 1 220 3 222 1 247 1 
205 1 70 1 21 2 304 2 
265 1 93 1 155 1 162 1 220 1 2 1 
265 1 93 1 155 1 220 2 21 1 77 1 2 2 143 1 45 1 247 1 
190 1 
265 1 93 1 155 1 220 1 21 1 77 1 2 1 247 1 
265 1 93 1 155 1 220 3 21 1 328 1 77 1 2 3 143 1 45 1 247 1 
47 1 221 1 21 1 370 1 
21 1 77 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 328 319 (235,341) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 328 319 (235,341) (59,355) (59,355) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 328 319 (235,341) (59,355) (59,355) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 328 319 (235,341) (59,355) (59,355) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 328 319 (235,341) (59,355) (59,355) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 328 (111,133,166,344) 312 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 328 319 (235,341) 240 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 328 319 (235,341) 240 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (15,281) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (15,281) 24 102 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (15,281) 24 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 328 (111,133,166,344) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 328 319 155 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 328 319 138 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 328 319 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
309 1 121 2 319 1 235 1 328 1 104 2 25 2 131 1 218 1 292 1 8 2 
309 1 121 3 31 1 319 1 341 1 342 1 25 2 355 1 199 1 218 1 59 1 235 1 328 1 104 3 131 1 292 2 264 1 8 2 352 1 67 1 
309 1 121 3 31 1 319 1 341 1 342 1 25 2 355 1 199 1 218 1 59 1 235 1 328 1 104 3 131 1 292 2 264 1 8 2 352 1 67 1 
309 1 121 3 31 1 319 1 341 1 342 1 25 2 355 1 199 1 218 1 59 1 235 1 328 1 104 3 131 1 292 2 264 1 8 2 352 1 67 1 
309 1 121 3 31 1 319 1 341 1 342 1 25 2 355 1 199 1 218 1 59 1 235 1 328 1 104 3 131 1 292 2 264 1 8 2 352 1 67 1 
309 1 121 2 312 1 124 1 222 1 328 1 104 2 25 1 111 1 131 1 218 1 8 1 
309 1 121 2 169 1 31 1 206 1 342 1 25 1 34 1 5 1 104 2 131 1 142 1 292 1 264 1 8 1 352 1 
309 1 121 3 240 1 124 1 319 1 25 2 218 1 235 1 104 3 328 1 131 1 166 1 292 1 8 2 
309 1 121 3 240 1 124 1 319 1 25 2 218 1 235 1 104 3 328 1 131 1 166 1 292 1 8 2 
275 1 71 1 140 1 
6 2 275 1 243 1 
170 2 13 2 236 2 51 1 132 2 358 2 58 2 175 1 
170 3 30 1 297 1 69 2 196 1 51 1 268 1 147 1 99 1 303 1 75 1 132 2 228 1 349 1 36 1 277 1 175 1 310 1 56 2 112 2 139 1 283 2 209 2 332 1 160 1 82 1 58 2 162 1 26 1 336 1 13 2 164 1 236 2 316 1 84 1 358 3 190 1 
170 1 64 1 13 1 23 1 236 1 51 1 132 1 76 1 358 1 58 1 
122 1 170 1 179 1 136 1 313 1 256 1 140 1 114 1 244 1 64 1 275 1 132 1 204 1 358 1 
122 1 170 1 179 2 136 1 256 2 58 1 140 1 114 1 244 1 13 1 64 1 275 1 236 1 132 1 358 1 
110 1 179 1 42 1 197 1 256 1 
29 1 110 1 179 2 247 1 275 1 197 1 256 2 140 1 
110 1 179 1 256 1 
170 1 179 1 23 1 197 1 51 1 198 1 256 1 58 1 64 1 13 1 236 1 76 1 132 1 358 1 
275 1 
110 1 179 2 247 1 275 1 197 1 343 1 256 2 140 1 
238 1 0 1 179 5 110 2 197 2 322 2 256 5 219 1 140 1 325 2 258 1 245 1 53 1 247 1 275 1 317 1 188 1 109 2 168 1 
170 2 48 1 58 1 246 1 13 1 236 1 132 2 358 2 175 2 
71 1 175 1 
170 2 192 1 56 1 321 1 69 1 209 1 268 1 99 1 162 1 303 1 13 1 164 1 75 1 236 1 316 1 132 1 349 1 84 1 358 2 251 1 
192 1 226 1 172 1 
170 5 48 1 321 1 313 1 125 1 40 1 58 1 13 4 117 1 236 4 132 5 358 5 251 2 175 1 
170 2 64 1 13 2 23 1 236 2 132 2 358 2 291 1 
170 1 56 1 69 1 209 1 268 1 99 1 162 1 116 1 303 1 75 1 164 1 316 1 349 1 84 1 358 1 175 1 
170 3 13 3 236 3 132 3 358 3 58 1 175 1 251 1 
170 1 64 1 13 1 23 1 236 1 132 1 358 1 
170 1 64 1 246 1 13 1 48 1 236 1 132 1 358 1 58 1 
122 1 170 4 30 1 297 1 48 1 196 1 321 1 69 1 51 1 268 1 99 1 244 1 303 1 348 1 75 1 132 3 228 1 349 1 36 1 175 1 251 1 78 1 310 1 56 1 179 1 136 1 112 2 139 1 283 1 209 1 332 1 160 1 256 1 58 2 162 1 114 1 26 1 13 3 64 1 164 1 236 3 316 1 84 1 358 4 
170 2 13 1 117 1 313 1 236 1 132 2 358 2 175 1 251 1 
122 1 170 3 179 1 136 1 48 1 321 1 256 1 58 1 12 1 114 1 244 1 64 1 13 3 348 1 275 1 236 3 132 3 358 3 251 2 
170 2 192 1 13 2 48 1 236 2 132 2 172 1 358 2 58 1 251 1 
170 1 56 1 69 1 209 1 268 1 99 1 162 1 303 1 75 1 164 1 349 1 316 1 84 1 358 1 175 1 
170 1 56 1 69 1 209 1 161 1 99 1 162 1 183 1 75 1 164 1 349 1 316 1 84 1 358 1 175 1 
297 1 192 2 194 1 299 1 52 1 93 1 172 2 173 1 226 2 174 1 36 1 37 1 310 1 207 1 331 1 112 2 139 1 283 4 332 1 160 1 26 2 293 1 190 2 167 1 
122 1 170 1 64 1 13 1 236 1 132 1 358 1 291 1 
15 1 54 1 
15 1 54 1 
15 1 54 1 
15 1 54 1 
273 1 281 1 
273 1 281 1 
273 1 281 1 
15 1 54 1 
15 1 54 1 
15 1 54 1 
15 1 54 1 
15 1 54 1 
15 1 54 1 
15 1 179 1 102 1 24 1 7 1 54 1 256 1 
15 1 24 1 7 1 54 1 
169 1 123 2 31 2 202 1 199 1 
31 1 199 1 264 1 
169 1 31 1 264 1 
169 1 347 1 123 1 31 3 202 1 199 2 
169 1 123 1 31 2 202 1 199 1 21 1 
339 2 32 1 89 2 299 1 197 4 93 1 322 1 243 1 151 1 325 1 245 2 247 1 6 3 225 1 275 2 105 2 134 1 109 1 229 1 110 1 179 5 207 1 137 1 255 1 331 1 354 1 11 1 256 5 140 1 258 1 260 1 188 3 
339 6 17 1 19 1 89 6 299 3 197 7 93 3 322 2 243 3 325 2 4 1 245 6 247 1 6 9 275 5 106 1 107 1 109 2 229 3 110 6 179 9 207 3 137 2 331 3 354 2 11 1 256 9 140 1 62 5 258 1 42 5 260 4 27 1 188 8 168 1 
339 2 89 2 299 1 197 2 93 1 322 1 243 2 325 1 245 2 225 1 6 4 275 3 105 1 134 1 109 1 229 1 179 3 207 1 137 1 331 1 354 1 256 3 140 1 260 1 188 3 168 1 
339 4 89 4 299 2 197 3 93 2 322 1 243 3 325 1 4 1 245 4 6 7 225 1 275 4 105 2 106 1 107 1 134 1 109 1 229 2 179 4 207 2 137 1 331 2 354 1 256 4 140 1 260 2 188 5 168 1 
43 1 316 1 71 1 
90 1 316 1 
289 1 
164 1 75 1 316 1 
50 1 316 1 
164 1 316 1 
305 1 43 2 164 1 75 1 338 1 316 3 
144 1 331 1 299 1 283 7 234 1 72 1 61 1 26 3 304 1 249 1 224 1 174 3 276 2 330 1 167 2 190 4 318 1 
144 1 331 1 299 1 283 7 234 1 72 1 61 1 26 3 304 1 249 1 224 1 174 3 276 2 330 1 167 2 190 4 318 1 
237 1 144 1 331 1 299 1 283 7 234 1 72 1 61 1 26 3 304 1 249 1 224 1 174 3 276 2 330 1 167 2 190 4 318 1 
144 2 297 1 88 1 299 4 93 3 95 1 72 1 146 1 100 1 150 1 35 1 304 2 249 2 224 1 174 10 276 3 330 1 229 3 310 1 207 3 331 4 112 2 57 3 139 1 283 31 234 2 332 1 286 4 210 1 61 5 26 15 318 1 190 16 167 5 
144 1 297 2 299 1 72 1 346 1 35 1 304 1 249 1 224 1 174 4 227 1 276 2 330 1 310 2 331 1 112 4 139 2 283 9 234 1 332 2 61 1 26 4 190 5 167 3 
121 1 143 1 169 1 191 1 31 2 87 1 195 1 69 1 49 1 199 1 127 1 347 1 104 1 203 1 131 1 8 1 56 1 25 1 209 1 41 1 162 1 184 1 84 1 292 1 264 1 189 1 
121 1 87 2 195 2 69 1 270 1 104 1 349 1 8 1 56 1 25 1 282 1 209 1 285 1 334 1 162 1 184 2 259 1 164 1 316 1 84 1 187 1 292 2 47 1 
121 2 143 1 169 1 191 1 31 2 124 1 87 1 195 1 69 1 49 1 70 1 199 1 127 1 34 1 347 1 104 2 203 1 131 1 8 1 309 1 56 1 206 1 25 1 209 1 162 1 184 1 84 1 292 1 264 1 189 1 
121 3 143 1 169 1 31 2 87 1 124 2 195 1 69 1 49 1 199 1 94 1 127 1 34 1 347 1 104 3 203 1 8 1 309 1 56 1 206 1 25 1 209 1 285 1 41 1 162 1 184 1 84 1 292 1 264 1 189 1 
121 2 169 1 31 2 87 1 124 2 195 1 69 1 49 1 94 1 199 1 34 1 347 1 104 2 203 1 309 1 56 1 206 1 209 1 41 1 162 1 184 1 84 1 292 1 189 1 264 1 
333 1 
122 1 170 1 215 1 216 2 69 2 126 2 322 1 269 1 3 1 270 1 325 1 6 2 275 2 132 1 177 2 179 5 136 1 137 1 140 1 182 1 84 1 188 2 91 2 300 1 243 2 149 1 301 1 244 1 245 2 247 3 349 2 204 1 109 1 56 2 311 1 157 1 110 6 208 1 313 1 209 2 256 5 162 1 114 1 63 4 258 1 356 2 64 1 259 1 315 1 262 2 164 1 316 1 358 1 28 2 359 1 
122 1 170 1 157 1 110 2 179 3 136 1 313 1 126 1 343 1 256 3 149 1 269 1 301 1 63 2 114 1 244 1 182 1 247 1 64 1 132 1 204 1 358 1 
122 1 170 1 91 1 343 1 269 1 149 1 301 1 244 1 247 1 275 1 132 1 204 1 157 1 110 1 179 3 136 1 313 1 256 3 140 1 114 1 63 3 182 1 64 1 358 1 
122 1 170 1 91 1 126 1 343 1 269 1 149 1 301 1 244 1 247 1 275 1 132 1 204 1 157 1 179 3 110 2 136 1 313 1 256 3 140 1 114 1 63 3 182 1 356 1 64 1 358 1 
122 1 170 1 216 2 126 4 322 1 1 1 269 1 3 1 325 1 275 5 132 1 177 2 230 1 179 5 231 1 136 1 140 5 182 1 188 1 91 4 343 1 149 1 243 2 301 1 152 1 244 1 245 1 247 3 204 1 250 1 109 1 157 1 110 7 208 1 313 1 256 5 63 6 114 1 258 1 356 4 64 1 262 2 358 1 28 2 
122 1 170 1 216 2 322 1 126 2 269 1 3 1 325 1 6 2 275 2 132 1 177 2 179 4 136 1 140 1 182 1 188 1 91 2 300 1 149 1 243 2 301 1 244 1 245 1 247 2 204 1 109 1 157 1 110 4 208 1 313 1 256 4 63 4 114 1 258 1 356 2 64 1 262 2 358 1 28 2 
122 1 170 1 216 2 91 2 126 2 322 1 1 1 243 2 269 1 149 1 3 1 301 1 325 1 152 1 244 1 245 1 247 2 275 1 132 1 204 1 109 1 177 2 157 1 230 1 110 4 179 4 208 1 136 1 313 1 256 4 140 1 114 1 63 4 182 1 258 1 356 2 64 1 262 2 358 1 188 1 28 2 
122 1 170 1 216 2 91 2 126 2 322 1 1 1 243 2 269 1 149 1 3 1 301 1 325 1 152 1 244 1 245 1 247 2 275 1 132 1 204 1 109 1 177 2 157 1 230 1 110 4 179 4 208 1 136 1 313 1 256 4 140 1 114 1 63 4 182 1 258 1 356 2 64 1 262 2 358 1 188 1 28 2 
122 1 170 1 91 2 126 2 322 1 242 1 269 1 149 1 2 1 301 1 325 1 152 1 244 1 245 1 247 2 274 2 6 2 275 1 132 1 204 1 109 1 308 2 177 2 157 1 110 4 179 4 208 1 136 1 313 1 256 4 140 1 114 1 63 4 288 1 182 1 258 1 356 2 64 1 358 1 188 1 28 2 
122 1 170 1 216 2 91 3 322 1 126 3 1 1 243 2 269 1 149 1 3 1 301 1 325 1 152 1 244 1 245 1 247 2 275 1 132 1 204 1 250 1 109 1 177 2 230 1 157 1 179 4 110 5 208 1 136 1 313 1 256 4 140 1 114 1 63 5 258 1 182 1 356 3 64 1 262 2 358 1 188 1 28 2 
122 1 170 1 216 2 91 3 322 1 126 3 1 1 243 2 269 1 149 1 3 1 301 1 325 1 152 1 244 1 245 1 247 2 275 1 132 1 204 1 250 1 109 1 177 2 230 1 157 1 179 4 110 5 208 1 136 1 313 1 256 4 140 1 114 1 63 5 258 1 182 1 356 3 64 1 262 2 358 1 188 1 28 2 
122 1 170 1 322 1 126 2 269 1 325 1 6 2 274 2 275 1 132 1 177 2 179 4 136 1 140 1 182 1 188 1 91 2 300 1 242 1 149 1 301 1 244 1 245 1 247 2 204 1 109 1 308 2 157 1 110 4 208 1 313 1 256 4 63 4 114 1 258 1 356 2 64 1 358 1 28 2 
170 1 192 1 297 1 48 1 299 1 93 1 172 1 174 1 226 1 132 1 36 1 229 1 310 1 207 1 79 1 233 1 331 1 112 2 139 1 283 3 332 1 160 1 58 1 26 2 13 1 236 1 358 1 167 1 190 1 
192 1 297 1 299 1 172 1 71 1 72 1 249 1 224 1 174 2 226 1 276 1 330 1 36 1 175 2 310 1 331 1 112 2 139 1 283 6 234 1 332 1 160 1 26 3 293 1 167 2 190 3 
30 1 297 2 192 11 340 1 88 1 299 2 93 1 172 4 147 1 97 1 174 2 226 11 20 1 36 2 175 1 229 2 310 2 207 2 79 1 331 1 112 4 139 2 57 3 283 14 332 2 160 1 286 3 210 1 61 1 26 6 85 1 167 1 190 8 
170 2 297 1 30 1 69 1 321 1 172 1 268 1 323 1 147 1 99 1 303 1 75 1 349 1 132 1 36 1 175 1 251 1 56 1 310 1 79 1 139 1 112 2 283 2 209 1 332 1 160 1 162 1 26 1 116 1 13 1 14 1 164 1 236 1 316 1 84 1 358 2 214 1 190 1 
170 3 30 1 69 3 321 1 172 7 268 2 72 1 224 1 226 7 174 8 75 2 132 1 276 1 330 1 36 3 175 2 229 2 39 2 79 1 331 3 139 3 283 20 234 1 332 3 41 1 13 1 236 1 84 2 190 10 296 1 297 3 192 7 196 2 299 3 93 2 96 2 147 1 99 2 303 2 249 1 349 1 205 2 251 1 56 3 310 3 207 2 112 6 209 3 160 3 61 4 162 2 26 10 115 1 261 2 164 2 316 2 358 3 120 1 167 4 
170 1 297 2 30 1 69 8 70 1 98 1 147 1 270 1 221 1 329 1 132 1 349 2 36 2 251 1 135 1 56 8 310 2 9 1 112 4 139 2 283 2 209 7 332 2 160 2 82 2 41 1 162 2 26 1 141 1 13 1 259 1 236 1 164 2 316 3 84 2 358 1 294 1 293 1 190 1 
192 1 297 1 310 1 207 1 139 1 112 2 299 1 283 2 172 1 160 1 332 1 61 1 173 1 174 1 226 1 36 1 293 1 190 2 
192 1 297 1 310 1 331 1 139 1 112 2 283 2 93 1 172 1 160 1 332 1 26 2 174 1 226 1 36 1 293 1 37 1 167 1 
297 1 192 2 299 1 93 1 172 2 226 2 174 2 36 1 229 1 310 1 207 1 331 1 112 2 139 1 283 4 332 1 160 1 61 1 26 2 293 1 190 2 167 1 
192 1 297 1 310 1 207 1 139 1 112 2 299 1 283 2 172 1 160 1 332 1 98 1 61 1 173 1 174 1 226 1 36 1 190 2 
192 1 297 1 310 1 331 1 139 1 112 2 283 2 93 1 172 1 160 1 332 1 98 1 26 2 174 1 226 1 36 1 37 1 167 1 
297 1 192 2 299 1 93 1 172 2 98 1 226 2 174 2 36 1 229 1 310 1 207 1 331 1 112 2 139 1 283 4 332 1 160 1 61 1 26 2 190 2 167 1 
297 1 192 2 299 1 93 1 172 2 226 2 174 2 36 1 229 1 310 1 207 1 331 1 112 2 139 1 283 4 332 1 160 1 61 1 26 2 190 2 167 1 
170 1 297 1 30 1 196 1 69 1 268 1 147 1 99 1 303 1 75 1 349 1 36 1 175 1 56 1 310 1 139 1 112 2 283 2 209 1 160 1 332 1 162 1 26 1 164 1 316 1 84 1 358 1 190 1 
170 1 297 1 30 1 69 1 147 1 345 1 99 1 75 1 349 1 36 1 175 1 56 1 310 1 139 1 112 2 283 2 209 1 160 1 332 1 161 1 162 1 26 1 183 1 164 1 316 1 84 1 358 1 190 1 
297 1 192 2 299 1 93 1 172 2 226 2 174 2 36 1 229 1 310 1 207 1 79 1 331 1 112 2 139 1 283 4 332 1 160 1 61 1 26 2 190 2 167 1 
170 1 192 2 297 1 299 1 196 1 69 1 70 1 93 1 172 2 268 1 99 1 303 1 174 2 226 2 75 1 36 1 229 1 56 1 310 1 207 1 331 1 139 1 112 2 283 4 209 1 160 1 332 1 61 1 162 1 26 2 261 1 164 1 316 1 84 1 358 1 167 1 190 2 
170 1 297 1 192 1 48 1 299 1 93 1 172 1 174 1 226 1 132 1 36 1 229 1 252 1 310 1 207 1 79 1 331 1 112 2 139 1 283 3 332 1 160 1 58 1 61 1 26 1 13 1 236 1 358 1 190 2 
320 1 68 1 72 1 35 1 128 1 326 4 224 1 174 8 227 1 276 1 330 1 278 1 279 1 229 4 331 5 139 3 283 41 234 1 332 3 286 4 190 20 297 3 298 1 88 1 299 5 92 1 93 4 249 1 22 1 108 1 156 2 310 3 158 1 207 4 57 3 112 6 61 4 210 3 26 21 163 1 213 1 357 1 167 4 
297 4 320 1 298 1 68 1 88 1 299 5 92 1 93 3 72 1 128 1 35 2 326 4 249 1 224 1 174 7 227 1 276 1 330 1 108 1 22 1 278 1 279 1 156 2 229 4 310 4 158 1 207 4 331 4 112 8 139 4 57 3 283 38 234 1 332 4 286 4 210 3 61 3 26 18 163 1 357 1 213 1 167 4 190 20 
297 2 68 1 88 2 299 8 92 1 93 7 72 1 97 2 128 1 35 1 326 4 249 1 224 1 174 14 227 1 276 1 330 1 108 1 22 1 278 1 279 1 156 1 229 7 310 2 158 1 207 7 331 8 112 4 139 2 57 4 283 52 234 1 332 2 286 4 210 2 61 7 26 25 163 1 357 1 213 1 167 7 190 27 
297 2 298 1 68 1 88 1 299 3 93 3 326 2 174 6 227 1 307 1 108 1 279 2 156 1 229 3 310 2 158 1 207 3 331 3 112 4 139 2 57 1 283 19 332 2 286 2 210 1 61 3 26 10 213 1 167 3 190 9 
297 3 68 2 299 3 92 1 93 2 128 1 35 2 326 4 174 4 227 1 108 1 278 1 22 1 279 1 156 2 229 3 310 3 158 1 207 3 331 2 112 6 139 3 57 2 283 26 332 3 286 2 61 2 210 2 26 12 163 1 357 1 213 1 167 2 190 14 
170 2 33 1 297 1 30 1 69 2 147 1 221 1 223 1 132 2 36 1 38 1 56 2 310 1 79 1 139 1 112 2 283 2 209 2 160 1 332 1 82 2 162 1 26 1 141 1 65 1 164 1 316 1 84 1 118 1 358 2 190 1 
169 1 31 2 56 1 87 1 145 1 69 1 49 1 199 1 209 1 127 1 41 1 162 1 347 1 263 1 84 1 264 1 45 1 189 1 
56 1 87 1 193 1 69 1 209 1 334 1 270 1 162 1 259 1 164 1 316 1 349 1 263 1 84 1 
169 1 31 2 56 2 87 1 145 1 69 2 49 1 70 1 199 1 209 2 127 1 41 1 162 1 347 1 263 1 84 1 264 1 45 1 189 1 
169 1 31 2 56 1 87 1 232 1 145 1 69 1 49 1 199 1 209 1 127 1 41 1 162 1 347 1 84 1 264 1 189 1 
295 1 
322 1 219 1 140 1 325 1 258 1 245 1 53 1 275 1 188 1 109 1 
245 1 53 1 275 1 71 1 188 1 219 1 140 1 
216 1 322 1 243 1 3 1 325 1 245 1 247 1 6 1 275 2 109 1 110 1 179 1 256 1 140 1 258 1 262 1 188 1 
69 3 70 1 217 1 322 4 219 1 325 4 130 1 6 12 74 2 75 3 275 8 176 1 229 2 179 5 137 2 331 2 140 2 287 1 290 2 338 1 186 2 43 2 84 4 188 9 46 2 339 6 239 1 86 2 89 6 90 3 50 2 299 2 93 2 96 2 243 6 244 2 245 8 53 1 247 3 154 2 349 1 109 4 351 2 56 3 110 5 207 2 209 3 256 5 162 3 258 4 315 1 211 2 164 3 316 10 
339 5 267 1 89 5 299 2 92 1 322 2 93 2 243 3 325 2 201 1 245 5 247 1 154 2 74 1 6 6 275 5 278 1 109 2 22 1 229 2 179 1 110 1 207 2 137 1 331 2 57 1 256 1 286 1 140 2 210 1 258 2 315 1 163 1 357 1 188 8 
170 1 299 2 51 1 322 1 198 1 72 1 302 1 325 1 245 2 249 1 154 2 74 1 76 1 132 1 109 1 230 1 179 1 23 1 331 1 234 1 256 1 58 1 258 1 64 1 13 1 236 1 358 1 188 2 
229 2 339 5 207 2 89 5 331 2 299 2 93 2 96 1 243 5 245 5 154 2 74 1 6 10 275 5 188 5 
170 3 30 1 297 1 69 1 196 1 51 1 268 1 99 1 303 1 75 1 349 1 132 2 228 1 36 1 175 1 310 1 56 1 112 2 139 1 283 1 209 1 332 1 160 1 58 2 162 1 26 1 13 2 236 2 164 1 316 1 84 1 358 3 
339 2 137 1 89 2 322 1 243 2 140 2 325 1 258 1 245 2 315 1 6 4 275 4 276 1 188 1 109 1 
179 1 110 1 247 1 275 1 256 1 140 1 
69 4 217 1 322 2 270 1 325 2 245 2 247 2 130 2 349 2 109 2 311 1 56 4 110 4 179 3 180 1 137 2 10 1 209 4 256 3 162 1 258 1 315 2 259 1 164 1 316 1 84 1 188 2 168 1 359 1 
314 1 101 1 185 1 159 1 60 1 
280 1 314 1 60 1 
280 1 314 1 60 1 
280 1 314 1 60 1 
73 1 314 1 60 1 
73 1 314 1 60 1 
73 1 314 1 60 1 
314 1 60 1 
15 1 54 1 
297 2 310 2 331 1 299 1 139 2 112 4 283 8 234 1 332 2 72 1 61 1 26 4 35 1 249 1 224 1 174 3 276 1 330 1 190 4 167 2 
331 1 299 1 283 6 234 1 71 1 72 1 26 3 249 1 224 1 174 2 276 1 330 1 167 2 190 3 
229 1 55 1 297 1 310 1 207 1 331 1 139 1 112 2 299 1 283 4 93 1 332 1 61 1 26 2 174 2 167 1 190 2 
229 1 207 1 88 1 331 1 57 1 299 1 283 7 93 1 286 2 210 1 61 1 26 4 174 2 167 1 190 3 
297 2 88 1 299 3 93 2 241 1 72 1 97 1 35 2 249 2 224 1 174 9 276 1 20 1 330 1 229 2 310 2 207 2 331 3 57 2 139 2 112 4 283 23 234 2 332 2 286 2 61 4 26 12 190 11 167 5 
26 1 283 1 286 1 
57 1 283 1 190 1 
229 1 310 1 297 1 55 1 207 1 331 1 112 2 139 1 299 1 283 6 93 1 332 1 96 1 61 1 26 3 174 3 190 3 167 2 
297 1 299 2 92 1 93 2 174 2 227 1 278 1 22 1 229 2 310 1 207 2 331 2 57 1 112 2 139 1 283 12 332 1 286 1 61 1 210 1 26 6 163 1 357 1 190 6 167 1 
331 1 299 1 283 6 234 1 72 1 61 1 26 3 249 1 174 2 190 3 167 1 
297 1 310 1 139 1 112 2 283 3 234 1 241 1 332 1 61 1 26 2 35 1 249 1 224 1 174 2 330 1 190 1 167 1 
297 1 299 1 72 1 249 1 224 1 174 2 227 1 276 1 330 1 278 1 310 1 331 1 57 1 112 2 139 1 283 8 234 1 332 1 286 1 210 1 26 4 190 4 167 2 
297 2 88 1 299 2 72 1 249 1 224 1 174 3 227 1 276 1 330 1 278 1 229 1 310 2 55 1 207 1 331 1 112 4 139 2 57 1 283 11 234 1 332 2 286 2 210 1 61 1 26 5 167 2 190 6 
297 3 299 3 92 1 93 2 72 1 35 1 249 1 224 1 174 4 227 1 276 1 330 1 278 1 22 1 229 2 55 1 310 3 207 2 331 3 57 1 112 6 139 3 283 19 234 1 332 3 286 1 61 1 210 1 26 10 163 1 357 1 190 9 167 3 
297 3 299 3 92 1 93 1 72 1 35 1 249 1 224 1 174 5 227 1 276 1 330 1 278 1 22 1 229 2 55 1 310 3 207 2 331 2 57 1 112 6 139 3 283 17 234 1 332 3 286 1 61 2 210 1 26 7 163 1 357 1 190 10 167 3 
297 1 299 1 72 1 249 1 224 1 174 2 227 1 276 1 330 1 278 1 310 1 331 1 57 1 112 2 139 1 283 8 234 1 332 1 286 1 210 1 26 4 190 4 167 2 
297 1 299 2 92 1 93 2 174 2 227 1 278 1 22 1 229 2 310 1 207 2 331 2 57 1 112 2 139 1 283 12 332 1 286 1 61 1 210 1 26 6 163 1 357 1 190 6 167 1 
297 4 299 3 92 1 93 1 72 1 35 2 249 1 224 1 174 5 227 1 276 1 330 1 278 1 22 1 229 2 55 1 310 4 207 2 331 2 112 8 139 4 57 1 283 18 234 1 332 4 286 1 61 2 210 1 26 8 163 1 357 1 190 10 167 3 
297 4 298 1 299 3 92 1 93 2 35 2 174 6 227 1 278 1 22 1 229 3 310 4 207 3 331 2 112 8 139 4 57 1 283 16 332 4 286 1 61 3 210 1 26 7 163 1 357 1 190 9 167 3 
331 1 299 1 283 7 234 3 72 1 61 3 26 4 249 3 224 2 174 6 330 1 167 3 190 3 
297 4 298 1 299 3 92 1 93 1 72 1 35 2 249 1 224 1 174 4 227 1 276 1 330 1 278 1 22 1 229 2 310 4 207 2 331 2 112 8 139 4 57 1 283 18 234 1 332 4 286 1 61 1 210 1 26 8 163 1 357 1 190 10 167 3 
310 1 297 1 331 2 112 2 139 1 299 2 283 10 234 2 332 1 72 1 302 1 61 2 26 5 249 2 174 5 227 1 167 3 190 5 
297 1 310 1 207 1 139 1 112 2 299 1 283 2 332 1 61 1 174 1 227 1 190 2 
229 1 297 1 310 1 207 1 331 1 139 1 112 2 299 1 283 4 93 1 332 1 61 1 26 2 174 2 227 1 167 1 190 2 
297 3 310 3 298 1 139 3 112 6 283 3 241 1 234 1 332 3 61 1 35 1 26 2 249 1 174 2 227 1 167 1 190 1 
297 5 298 1 88 1 299 5 241 1 93 3 95 1 72 2 146 1 150 1 35 2 249 3 224 1 174 12 227 1 276 1 330 1 229 3 55 1 310 5 207 3 331 5 112 10 139 5 57 3 283 34 234 3 332 5 286 4 210 1 61 5 26 18 190 16 167 7 
170 1 117 1 313 1 132 1 358 1 113 1 175 1 
170 1 254 1 313 1 284 1 113 1 271 1 248 1 117 1 132 1 358 1 265 1 175 1 
56 4 69 4 70 1 209 4 335 1 270 1 162 1 259 1 164 1 349 1 316 1 84 1 165 1 
56 5 9 1 69 5 70 1 209 4 335 1 270 1 162 2 141 1 259 1 130 1 164 2 349 1 316 3 84 2 294 1 
56 5 69 5 70 1 209 4 81 1 335 1 270 1 162 2 141 1 259 1 130 1 164 2 349 1 316 3 84 2 294 1 
162 1 56 1 259 1 69 1 164 1 316 1 349 1 84 1 71 1 209 1 270 1 
170 2 56 1 69 1 209 1 268 1 99 1 162 1 13 1 164 1 75 1 236 1 316 1 132 1 349 1 84 1 358 2 175 1 251 1 
122 1 170 2 86 1 69 1 50 1 268 1 99 1 130 1 75 2 132 2 175 1 251 1 56 1 209 1 162 1 114 1 13 2 64 1 236 1 164 2 316 3 84 1 358 2 
122 1 170 2 86 1 69 2 50 1 99 1 130 1 75 2 132 2 175 1 251 1 56 2 209 2 161 1 162 1 114 1 13 2 64 1 236 1 164 2 316 3 84 1 165 1 358 2 
56 3 86 1 179 2 110 1 50 1 69 3 90 1 209 3 256 2 140 1 324 1 162 1 257 1 244 1 130 1 275 1 164 1 75 1 43 1 349 1 316 4 84 1 165 1 
56 3 86 1 179 2 110 1 50 1 69 3 90 1 209 3 256 2 140 1 162 1 244 1 130 1 275 1 164 1 75 1 43 1 349 1 316 4 84 1 165 1 46 1 
162 1 56 1 69 1 329 1 84 1 209 1 
135 1 56 7 266 1 9 1 353 1 69 7 70 1 209 6 82 1 41 1 162 2 141 1 338 1 75 1 164 2 329 1 349 2 316 3 350 1 84 3 294 1 
170 2 192 1 297 2 299 1 69 1 196 1 70 1 172 1 268 1 72 1 99 1 303 1 249 1 224 1 226 1 174 2 75 1 132 1 276 1 330 1 36 2 205 1 175 2 251 1 310 2 56 1 79 1 331 1 139 2 112 4 283 6 234 1 209 1 332 2 160 2 162 1 26 3 13 1 164 1 236 1 261 1 316 1 84 1 118 1 358 2 190 3 167 2 
69 1 90 1 217 1 197 1 322 2 219 1 325 2 244 1 245 1 53 1 247 1 275 1 349 1 109 2 351 1 56 1 179 3 110 2 209 1 256 3 140 1 258 2 290 1 186 1 43 1 316 2 188 1 46 1 
56 2 69 2 70 1 209 2 162 1 43 1 338 1 75 1 164 1 329 1 316 2 84 2 176 1 
56 2 353 1 69 2 209 2 162 1 272 1 103 1 130 1 75 1 164 1 316 1 350 1 84 2 120 1 
169 1 162 1 31 1 56 1 49 1 69 1 349 1 84 1 209 1 264 1 
56 2 33 1 69 2 70 1 209 2 41 1 162 1 141 1 164 1 316 1 84 1 
170 2 56 1 69 1 209 1 99 1 161 1 162 1 13 1 164 1 75 1 236 1 316 1 132 1 349 1 84 1 358 2 175 1 251 1 
56 1 266 1 353 1 69 1 209 1 162 1 130 1 338 1 75 1 164 1 316 1 350 1 84 2 
83 1 80 1 66 1 44 1 175 1 
122 1 178 1 179 2 136 1 80 2 253 1 171 1 197 1 256 2 140 1 114 1 244 1 83 1 64 1 348 1 275 1 66 2 44 2 175 1 
38 1 170 1 83 1 65 1 223 1 66 1 132 1 44 1 358 1 
83 1 253 1 171 1 
306 1 
309 1 121 1 206 1 104 1 25 1 131 1 34 1 8 1 
309 1 121 1 206 1 104 1 25 1 131 1 34 1 8 1 
309 1 206 1 71 1 34 1 
309 1 121 1 206 1 104 1 25 1 34 1 8 1 
121 1 184 1 292 1 
309 1 121 3 206 1 25 1 342 2 34 1 200 1 104 3 77 1 131 1 8 1 119 1 
309 1 121 2 206 1 124 1 222 1 104 2 25 1 34 1 8 1 
309 1 121 1 328 1 104 1 25 1 111 1 131 1 218 1 8 1 
309 1 121 1 206 1 104 1 25 1 131 1 8 1 
121 1 206 2 104 1 25 1 131 1 34 1 8 1 
309 1 121 2 206 1 18 1 25 2 327 1 104 2 153 1 131 1 8 2 
309 1 121 2 124 1 319 1 328 1 181 1 104 2 25 1 131 1 218 1 155 1 8 1 
309 1 169 1 121 2 31 2 206 1 124 1 25 1 199 1 34 1 347 1 337 1 104 2 131 1 264 1 8 1 
309 1 121 2 124 1 222 1 319 1 328 1 104 2 25 1 138 1 131 1 218 1 8 1 
309 1 121 2 124 1 319 1 328 1 25 1 104 2 218 2 8 1 
309 1 121 2 206 1 124 1 25 1 344 1 34 1 104 2 131 1 133 1 166 1 8 1 
309 1 121 3 206 1 25 1 342 2 34 1 200 2 129 1 104 3 131 1 119 1 8 1 
309 2 220 2 16 1 148 1 
121 1 212 1 104 1 25 1 131 1 8 1 
309 1 121 2 206 1 124 1 181 1 104 2 25 1 131 1 34 1 8 1 
309 1 121 3 206 1 124 1 181 1 342 1 104 3 25 1 131 1 34 1 8 1 
121 1 309 1 124 1 319 1 104 1 328 1 
309 1 206 1 

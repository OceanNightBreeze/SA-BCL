#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 95 21 313 324 186 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 95 21 313 324 186 66 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 95 21 313 324 186 66 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 95 21 313 324 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 95 21 313 324 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 95 21 313 324 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
88 1 54 1 135 1 205 2 71 2 210 1 330 5 331 2 180 1 249 9 100 1 76 1 59 9 335 6 102 1 361 1 215 1 231 1 314 1 45 2 108 3 198 1 51 2 112 4 349 1 290 2 28 2 116 1 
88 1 54 1 135 1 205 2 71 2 210 1 330 5 331 2 180 1 249 9 100 1 76 1 59 9 335 6 102 1 361 1 215 1 231 1 314 1 45 2 108 3 198 1 51 2 112 4 349 1 290 2 28 2 116 1 
88 1 54 1 135 1 205 2 71 2 210 1 330 6 331 2 180 1 249 10 100 1 76 1 59 10 335 7 102 1 361 1 215 1 231 1 314 1 45 2 108 4 198 1 51 2 112 5 349 1 290 2 28 2 116 1 
88 1 54 1 135 1 205 2 71 1 210 1 330 4 331 2 180 1 249 7 100 1 76 1 59 7 335 4 102 1 361 1 231 1 314 1 45 2 108 2 198 1 51 2 112 3 349 1 290 2 28 2 116 1 
215 1 231 1 45 1 135 1 205 1 71 2 108 1 330 3 331 1 180 1 249 4 51 1 112 2 349 1 76 1 59 4 290 1 335 3 
231 1 45 1 135 1 330 1 331 1 249 2 224 1 51 1 319 1 76 1 100 1 59 2 290 1 219 1 116 1 28 1 
231 1 45 2 135 1 108 1 210 1 330 2 331 2 249 3 112 1 76 1 59 3 335 1 28 1 
135 1 205 1 71 2 210 1 330 5 331 2 180 1 140 1 305 1 249 9 76 1 59 9 335 7 215 1 231 1 314 1 45 2 108 3 198 1 51 1 112 4 349 1 290 1 28 1 
135 1 205 1 71 2 210 1 330 5 331 2 180 1 140 1 305 1 249 9 76 1 59 9 335 7 215 1 231 1 314 1 45 2 108 3 198 1 51 1 112 4 349 1 290 1 28 1 
3 1 56 1 267 1 
46 1 56 1 350 2 
363 2 55 2 73 2 311 1 207 1 281 2 7 2 132 2 
297 1 326 1 55 2 222 1 207 1 178 1 7 2 248 1 356 2 73 2 311 1 143 1 357 1 145 1 273 1 15 1 363 3 163 1 164 1 195 1 281 3 149 1 345 1 373 1 216 2 258 2 110 1 49 1 241 2 261 1 200 2 169 1 218 1 292 1 69 1 132 2 244 1 
363 1 270 1 55 1 153 1 73 1 311 1 281 1 7 1 323 1 132 1 
363 1 29 1 107 1 3 1 4 1 56 1 281 1 73 1 320 1 323 1 230 1 220 1 155 1 203 1 
55 2 3 1 4 1 56 1 7 2 185 1 270 1 73 2 311 1 230 2 363 2 107 1 281 2 153 1 320 2 323 2 220 1 132 2 155 1 
333 1 58 1 320 1 230 1 294 1 
333 1 58 1 3 1 320 2 56 1 262 1 192 1 230 2 
58 1 320 1 230 1 
363 1 55 1 7 1 281 1 185 1 333 1 270 1 153 1 73 1 320 1 311 1 323 1 230 1 132 1 
56 1 
333 1 58 1 3 1 320 2 56 1 262 1 113 1 230 2 
18 1 3 1 56 1 92 1 279 1 47 2 6 1 9 2 269 1 35 1 333 2 58 2 320 5 262 1 67 1 130 1 230 5 41 1 14 2 
207 1 267 1 
363 2 55 1 73 2 207 2 7 1 281 2 132 1 166 1 275 1 
80 1 22 1 272 1 
363 1 163 1 326 1 195 1 207 1 281 1 345 1 216 1 49 1 241 1 143 1 200 1 145 1 292 1 16 1 15 1 
80 1 363 2 326 1 81 1 55 1 163 1 195 1 345 1 7 1 281 2 216 1 49 1 73 1 143 1 241 1 200 1 145 1 292 1 79 1 15 1 
363 3 55 3 73 3 207 1 281 3 7 3 132 1 79 1 
363 1 55 1 153 1 73 1 281 1 7 1 323 1 
363 1 55 1 73 1 281 1 7 1 323 1 132 1 166 1 275 1 
326 1 55 3 4 1 222 1 5 1 207 1 178 1 7 3 211 1 356 2 73 3 143 1 311 1 357 1 145 1 273 1 230 1 79 1 15 1 275 1 363 4 81 1 163 1 107 1 164 1 195 1 345 1 281 4 373 1 216 1 258 1 49 1 110 1 320 1 241 1 200 1 218 1 292 1 323 1 69 1 220 1 132 2 155 1 244 1 
363 2 55 1 29 1 73 2 207 1 281 2 7 1 370 1 79 1 
363 3 81 1 55 3 107 1 4 1 56 1 177 1 5 1 7 3 281 3 73 3 320 1 230 1 323 1 132 1 220 1 79 2 155 1 275 1 
363 2 80 1 55 2 22 1 7 2 281 2 73 2 132 1 79 1 275 1 
363 1 163 1 326 1 195 1 207 1 281 1 345 1 216 1 49 1 241 1 143 1 200 1 145 1 292 1 15 1 
363 1 343 1 163 1 326 1 207 1 281 1 345 1 216 1 308 1 241 1 143 1 200 1 145 1 292 1 15 1 
296 1 297 2 222 1 223 1 95 1 139 1 10 1 271 1 356 2 358 1 272 2 273 1 124 1 80 2 106 1 164 2 235 1 22 2 373 1 85 1 258 4 218 1 69 1 244 1 
363 1 250 1 55 1 73 1 281 1 7 1 323 1 155 1 
363 5 55 4 81 1 29 1 20 1 207 1 7 4 281 5 370 1 237 1 73 5 132 1 79 2 275 1 
250 1 363 2 55 2 153 1 73 2 281 2 7 2 323 1 
117 1 125 1 
117 1 125 1 
285 1 233 1 
285 1 233 1 
285 1 233 1 
117 1 346 1 125 1 
117 1 346 1 125 1 
117 1 158 1 125 1 
117 2 89 1 285 1 233 1 75 1 125 2 
117 1 346 1 125 1 
117 1 268 1 125 1 
117 1 268 1 125 1 
117 1 268 1 125 1 
117 2 89 1 119 1 134 1 56 1 266 2 64 1 24 2 226 1 188 1 348 2 320 2 228 1 115 3 230 2 293 2 27 2 125 2 105 1 
117 1 363 2 232 1 55 2 90 1 61 1 197 1 207 1 281 2 7 2 158 1 266 1 24 1 11 1 73 2 348 1 320 1 26 1 114 1 115 1 230 1 27 1 105 1 125 1 
51 1 205 1 290 1 
51 1 319 1 290 1 
319 1 144 1 205 2 120 1 290 3 360 1 
319 1 98 1 205 1 120 1 290 2 360 1 
319 1 205 1 120 1 290 2 360 2 
3 1 90 1 56 2 223 1 95 1 8 2 9 1 35 1 271 1 333 4 58 1 310 1 39 2 77 1 230 5 14 1 43 1 46 1 21 1 279 2 47 1 127 1 85 1 151 2 152 1 320 5 260 1 26 1 114 1 262 1 350 3 130 3 
90 4 3 1 56 5 223 3 95 3 8 6 9 2 183 1 184 1 225 1 35 1 271 3 333 7 142 1 58 6 310 2 39 6 230 9 14 2 43 2 18 1 196 1 46 3 21 3 279 6 47 2 85 3 239 1 320 9 260 1 262 1 350 9 130 8 263 5 294 5 
3 1 90 1 56 3 223 1 95 1 8 2 9 1 271 1 333 2 310 1 39 2 230 3 14 1 43 1 18 1 46 2 21 1 279 2 47 1 127 1 85 1 151 1 152 1 320 3 130 3 350 4 
3 1 90 2 56 4 223 2 95 2 8 4 9 1 225 1 271 2 333 3 142 1 310 1 39 4 230 4 14 1 43 1 18 1 46 3 196 1 21 2 279 4 47 1 127 1 85 2 151 2 152 1 320 4 350 7 130 5 
189 1 145 1 267 1 
168 1 145 1 
295 1 
145 1 292 1 
87 1 326 1 189 2 278 1 145 3 292 1 
326 1 145 1 292 1 
167 1 145 1 
325 1 264 2 298 1 297 4 164 3 235 2 84 1 85 1 258 7 271 1 187 1 12 1 38 1 242 1 60 1 221 1 124 3 
325 1 264 2 298 1 297 4 164 3 235 2 84 1 85 1 258 7 271 1 187 1 12 1 38 1 242 1 60 1 221 1 124 3 
325 1 264 2 298 1 297 4 164 3 255 1 235 2 84 1 85 1 258 7 271 1 187 1 12 1 38 1 242 1 60 1 221 1 124 3 
325 2 173 1 264 3 298 1 297 16 91 1 222 1 95 3 223 3 354 1 97 1 271 4 187 2 356 2 12 2 38 2 273 1 60 1 336 1 338 1 124 10 342 1 276 3 164 15 21 3 235 5 84 1 258 31 85 4 242 1 199 4 218 1 221 5 244 1 
325 1 264 2 297 5 298 1 222 2 271 1 187 1 356 4 12 1 38 1 273 2 60 1 124 4 44 1 342 1 254 1 164 4 235 3 84 1 85 1 258 9 218 2 221 1 244 2 
135 1 205 1 157 1 330 1 209 1 331 1 249 2 33 1 57 1 214 1 143 1 76 1 144 1 59 2 335 1 339 1 15 1 231 1 253 1 45 1 315 1 216 1 51 1 25 1 319 1 241 1 200 1 86 1 290 2 28 1 
135 1 205 1 330 1 209 1 331 1 249 3 33 1 99 1 214 1 143 1 144 1 59 3 335 2 78 1 339 1 15 1 231 1 253 1 45 1 367 1 315 1 216 1 51 1 25 1 319 1 241 1 200 1 86 1 290 2 28 1 
135 1 205 1 330 1 209 1 249 2 33 1 214 1 143 1 144 1 59 2 335 2 78 1 15 1 231 1 253 1 367 1 315 1 216 1 51 1 319 1 241 1 200 1 86 1 290 2 28 1 
329 1 301 1 331 1 302 1 249 1 33 2 143 1 99 1 59 1 145 1 146 1 15 1 253 2 163 1 45 1 366 1 216 1 374 1 241 1 200 1 86 2 292 1 28 2 
205 1 209 1 331 1 249 1 33 1 57 1 214 1 143 1 76 1 144 1 59 1 339 1 15 1 253 1 45 1 367 1 315 1 216 1 51 1 25 1 319 1 241 1 200 1 86 1 290 2 28 1 
245 1 
329 1 2 1 3 1 4 1 56 2 176 2 93 1 9 1 58 6 143 1 145 1 230 5 14 1 15 1 107 1 279 2 109 1 281 1 150 4 65 2 286 2 287 1 241 2 288 2 200 2 350 2 292 1 155 1 203 1 29 1 247 1 206 1 302 1 35 1 73 1 159 1 40 2 42 1 43 1 363 1 364 1 163 2 46 2 368 2 82 2 256 1 47 1 165 1 216 2 320 5 262 3 130 2 131 1 323 1 220 1 
29 1 2 1 4 1 93 1 206 1 73 1 58 2 230 3 363 1 107 1 165 1 109 1 281 1 150 2 65 1 320 3 113 1 262 1 323 1 220 1 155 1 203 1 
29 1 2 1 3 1 4 1 93 1 176 1 56 1 206 1 58 1 73 1 230 3 363 1 107 1 165 1 109 1 281 1 150 3 320 3 113 1 262 1 323 1 220 1 155 1 203 1 
29 1 2 1 3 1 4 1 93 1 176 1 56 1 206 1 73 1 58 2 230 3 40 1 363 1 107 1 165 1 109 1 281 1 150 3 65 1 320 3 262 1 113 1 323 1 220 1 155 1 203 1 
2 1 3 5 4 1 93 1 176 4 56 5 9 1 58 7 13 1 230 5 14 1 107 1 279 1 109 1 281 1 150 6 65 4 286 2 288 2 113 1 155 1 203 1 29 1 246 1 206 1 306 1 35 1 73 1 36 1 159 1 40 4 161 1 363 1 368 2 46 2 256 1 82 2 165 1 47 1 320 5 262 3 130 1 323 1 220 1 
2 1 3 1 4 1 93 1 176 2 56 2 9 1 58 4 230 4 14 1 107 1 279 1 109 1 281 1 150 4 65 2 286 2 288 2 350 2 155 1 203 1 29 1 206 1 35 1 73 1 159 1 40 2 363 1 364 1 368 2 46 2 256 1 82 2 47 1 165 1 320 4 262 2 130 1 323 1 220 1 
29 1 2 1 3 1 4 1 56 1 176 2 93 1 206 1 9 1 306 1 35 1 58 4 73 1 36 1 13 1 159 1 230 4 40 2 14 1 363 1 107 1 46 2 368 2 82 2 256 1 279 1 47 1 165 1 109 1 281 1 150 4 65 2 286 2 320 4 288 2 262 2 130 1 323 1 220 1 155 1 203 1 
29 1 2 1 3 1 4 1 56 1 176 2 93 1 206 1 9 1 306 1 35 1 58 4 73 1 36 1 13 1 159 1 230 4 40 2 14 1 363 1 107 1 46 2 368 2 82 2 256 1 279 1 47 1 165 1 109 1 281 1 150 4 65 2 286 2 320 4 288 2 262 2 130 1 323 1 220 1 155 1 203 1 
29 1 2 1 3 1 4 1 56 1 176 2 93 1 206 1 179 1 9 1 35 1 212 1 58 4 73 1 36 1 159 1 230 4 40 2 14 1 363 1 107 1 368 2 279 1 47 1 165 1 109 1 281 1 150 4 65 2 50 2 286 2 320 4 378 2 377 1 262 2 350 2 130 1 323 1 220 1 155 1 203 1 
29 1 2 1 3 1 4 1 56 1 93 1 176 3 206 1 9 1 306 1 35 1 73 1 58 5 36 1 13 1 159 1 230 4 40 3 14 1 161 1 363 1 107 1 46 2 368 2 82 2 256 1 279 1 47 1 165 1 109 1 281 1 150 5 65 3 286 2 320 4 288 2 262 2 130 1 323 1 220 1 155 1 203 1 
29 1 2 1 3 1 4 1 56 1 93 1 176 3 206 1 9 1 306 1 35 1 73 1 58 5 36 1 13 1 159 1 230 4 40 3 14 1 161 1 363 1 107 1 46 2 368 2 82 2 256 1 279 1 47 1 165 1 109 1 281 1 150 5 65 3 286 2 320 4 288 2 262 2 130 1 323 1 220 1 155 1 203 1 
2 1 3 1 4 1 93 1 176 2 56 1 9 1 58 4 230 4 14 1 107 1 279 1 109 1 281 1 150 4 65 2 286 2 350 2 155 1 203 1 29 1 206 1 35 1 73 1 159 1 40 2 363 1 364 1 368 2 47 1 165 1 50 2 320 4 377 1 378 2 262 2 130 1 323 1 220 1 
264 1 298 1 297 3 222 1 207 2 267 1 271 1 187 1 356 2 38 1 272 1 273 1 60 1 124 2 80 1 106 1 164 3 235 2 22 1 84 1 373 1 85 1 258 6 218 1 69 1 244 1 
297 8 222 2 207 1 178 1 95 2 223 1 354 1 355 1 271 1 356 4 334 1 272 11 273 2 336 1 194 1 124 2 80 11 276 3 164 6 21 2 235 1 22 4 83 1 373 2 258 14 85 2 259 1 199 3 169 1 218 2 69 1 221 1 244 2 
171 1 326 1 55 1 297 1 222 1 207 1 178 1 7 1 356 2 73 1 143 1 145 1 273 1 79 1 15 1 16 1 363 2 163 1 81 1 164 1 195 1 22 1 48 1 345 1 281 2 216 1 373 1 258 2 49 1 259 1 241 1 200 1 218 1 169 1 292 1 69 1 202 1 244 1 
264 1 55 1 326 2 222 3 178 1 95 2 223 2 7 1 271 3 187 1 143 2 145 2 272 7 273 3 60 1 15 2 195 2 21 2 235 4 22 7 281 3 345 2 282 1 284 1 241 3 200 3 68 1 292 2 69 3 244 3 298 1 297 10 207 2 121 2 356 6 73 1 38 1 37 2 357 2 79 1 359 2 124 8 162 2 363 3 80 7 163 1 81 1 367 1 164 10 84 1 216 3 373 3 258 20 85 3 259 1 49 2 169 1 218 3 221 4 
353 1 55 1 328 1 297 1 329 1 157 1 222 2 178 1 7 1 302 1 141 1 356 4 73 1 143 2 145 3 251 1 273 2 79 1 17 1 15 2 363 1 163 2 367 1 106 1 164 1 281 1 216 8 373 2 258 2 238 1 241 7 200 8 261 2 218 2 169 1 292 2 69 2 244 2 133 1 
55 1 297 1 222 1 95 1 223 1 7 1 271 1 356 2 73 1 272 1 273 1 124 1 275 1 80 1 363 1 164 2 21 1 235 1 22 1 280 1 281 1 373 1 85 1 258 3 259 1 218 1 132 1 69 1 244 1 
80 1 296 1 297 2 106 1 222 1 22 1 95 1 373 1 258 2 85 1 356 2 218 1 272 1 273 1 69 1 221 1 124 1 244 1 
80 1 106 1 164 2 235 1 222 1 22 1 223 1 373 1 258 2 10 1 271 1 356 2 218 1 272 1 273 1 69 1 124 1 244 1 
80 2 297 2 106 1 164 2 21 1 235 1 222 1 223 1 22 2 95 1 373 1 258 4 85 1 271 1 356 2 218 1 272 2 273 1 69 1 221 1 124 2 244 1 
80 1 296 1 297 2 222 1 22 1 95 1 373 1 258 2 85 1 356 2 218 1 272 1 273 1 69 1 221 1 124 1 133 1 244 1 
80 1 164 2 235 1 222 1 22 1 223 1 373 1 258 2 10 1 271 1 356 2 218 1 272 1 273 1 69 1 124 1 133 1 244 1 
80 2 297 2 164 2 21 1 235 1 222 1 223 1 22 2 95 1 373 1 258 4 85 1 271 1 356 2 218 1 272 2 273 1 69 1 221 1 124 2 133 1 244 1 
80 2 297 2 164 2 21 1 235 1 222 1 223 1 22 2 95 1 373 1 85 1 258 4 271 1 356 2 218 1 272 2 273 1 69 1 221 1 124 2 244 1 
297 1 326 1 222 1 207 1 178 1 356 2 143 1 357 1 145 1 273 1 15 1 363 1 163 1 164 1 195 1 345 1 281 1 216 1 373 1 258 2 49 1 241 1 200 1 169 1 218 1 292 1 69 1 244 1 
297 1 326 1 222 1 207 1 178 1 332 1 308 1 356 2 143 1 145 1 273 1 15 1 363 1 343 1 163 1 164 1 345 1 281 1 216 1 373 1 258 2 241 1 200 1 169 1 218 1 292 1 69 1 244 1 
80 2 297 2 164 2 21 1 235 1 222 1 223 1 22 2 95 1 373 1 258 4 85 1 259 1 271 1 356 2 218 1 272 2 273 1 69 1 221 1 124 2 244 1 
297 2 326 1 157 1 222 1 223 1 95 1 271 1 356 2 143 1 357 1 145 1 272 2 273 1 359 1 124 2 15 1 80 2 363 1 164 2 195 1 21 1 235 1 22 2 345 1 281 1 216 1 373 1 258 4 85 1 49 1 241 1 200 1 218 1 292 1 69 1 221 1 244 1 
55 1 297 2 222 1 223 1 95 1 7 1 271 1 356 2 73 1 272 1 273 1 124 1 275 1 363 1 80 1 164 1 21 1 22 1 281 1 373 1 85 1 258 3 259 1 218 1 322 1 132 1 69 1 221 1 244 1 
297 9 137 1 222 2 95 3 223 3 354 1 186 1 271 3 72 2 356 4 273 2 336 1 124 6 44 1 276 1 19 2 234 1 164 10 21 3 235 3 283 1 63 1 258 19 85 3 66 1 321 1 199 2 218 2 221 3 244 2 
44 1 276 2 297 6 19 2 164 5 21 1 137 2 222 1 95 1 354 2 372 1 63 1 85 1 258 11 186 2 356 2 66 1 313 1 199 2 218 1 324 1 273 1 244 1 
297 12 137 2 222 2 95 3 223 2 354 3 186 1 271 2 72 1 356 4 313 1 104 1 273 2 336 1 124 3 44 1 276 3 19 3 234 1 164 12 21 3 235 1 372 1 63 1 258 24 85 3 66 1 321 1 199 4 218 2 324 1 221 2 244 2 
297 12 137 2 222 2 95 3 223 2 354 3 186 1 271 2 72 1 356 4 313 1 104 1 273 2 336 1 124 4 44 1 276 3 19 3 234 1 164 12 21 3 235 2 372 1 63 1 258 24 85 3 66 1 321 1 199 4 218 2 324 1 221 2 244 2 
264 1 298 1 297 27 137 1 222 2 95 7 223 7 354 2 186 1 355 2 271 8 72 1 187 1 356 4 38 1 313 1 193 1 273 2 60 1 336 2 124 14 342 1 44 1 276 4 19 4 164 25 21 7 235 7 236 1 371 1 84 1 372 1 63 1 258 52 85 8 66 1 321 1 199 4 218 2 324 1 221 7 244 2 
117 1 89 1 24 1 217 1 348 1 228 1 266 1 27 1 64 1 125 1 
11 1 158 1 
352 1 117 1 24 1 265 1 348 1 229 1 266 1 27 1 125 1 
117 1 89 1 119 1 56 1 266 1 64 1 24 1 226 1 188 1 348 1 320 1 228 1 115 2 230 1 293 1 27 1 105 1 125 1 
117 1 89 1 119 1 56 1 266 1 64 1 24 1 226 1 188 1 348 1 320 1 228 1 115 2 230 1 293 1 27 1 105 1 125 1 
117 1 89 1 119 1 56 1 266 1 64 1 24 1 226 1 188 1 348 1 320 1 228 1 115 2 230 1 293 1 27 1 105 1 125 1 
75 1 346 1 160 1 
75 1 346 1 160 1 
74 1 268 1 
75 1 74 1 268 1 
232 1 61 1 
117 1 119 1 55 2 90 1 207 1 7 2 158 1 266 1 333 1 11 1 73 2 230 1 125 1 363 2 232 1 61 1 197 1 281 2 24 1 348 1 320 1 243 1 26 1 114 1 115 1 293 1 27 1 
346 1 160 1 
75 1 74 1 268 1 
174 1 328 1 297 1 138 1 222 1 178 1 356 2 73 2 143 1 145 1 227 1 191 1 273 1 15 1 17 1 363 2 164 1 281 2 216 2 373 1 258 2 259 1 241 2 200 2 261 2 218 1 169 1 292 1 69 1 156 1 244 1 
367 1 204 1 205 1 157 1 209 1 62 1 216 2 51 1 319 1 143 1 241 2 240 1 214 1 144 1 200 2 86 1 290 2 339 1 15 1 
367 1 205 1 209 1 216 1 307 1 51 1 319 1 241 1 240 1 214 1 143 1 144 1 200 1 86 1 290 2 339 1 15 1 
163 1 329 1 62 1 257 1 216 1 302 1 374 1 143 1 241 1 200 1 145 1 86 1 292 1 15 1 
367 1 204 1 205 1 209 1 62 1 216 1 51 1 319 1 143 1 241 1 240 1 214 1 144 1 200 1 86 1 290 2 339 1 15 1 
341 1 
3 1 56 1 279 1 130 1 41 1 267 1 269 1 
3 1 56 2 9 1 35 1 58 1 230 1 14 1 46 1 82 1 256 1 279 1 47 1 320 1 288 1 262 1 130 1 350 1 
87 1 326 3 0 2 3 2 56 8 95 2 223 2 8 6 9 4 269 1 271 2 58 5 143 4 189 2 145 10 103 1 230 5 14 4 15 3 148 2 344 2 107 2 21 2 279 8 287 1 241 3 154 2 200 3 350 12 292 3 300 2 157 1 32 2 35 4 34 1 213 1 37 2 39 6 41 1 252 2 43 2 163 1 46 6 47 4 216 3 85 2 318 1 167 2 168 3 320 5 375 1 262 3 130 9 170 2 
56 2 95 2 223 2 8 5 354 1 9 1 35 1 271 2 39 5 313 1 14 1 276 1 46 2 21 2 279 4 236 1 47 1 371 1 372 1 85 2 199 1 350 4 130 6 324 1 
0 1 298 1 55 1 7 1 9 1 306 1 35 1 185 1 271 1 270 1 187 1 73 1 311 1 38 1 230 1 337 1 14 1 148 2 363 1 279 2 47 1 281 1 85 2 153 1 320 1 130 2 323 1 132 1 
3 1 56 1 279 1 47 1 9 1 35 1 269 1 130 1 41 1 14 1 
148 2 0 1 21 2 46 5 56 5 279 5 95 2 223 2 8 5 85 2 271 2 37 1 39 5 350 10 130 5 
58 1 3 1 320 1 56 1 262 1 230 1 
329 1 9 2 302 1 35 1 58 4 143 1 145 1 103 2 230 3 42 1 14 2 15 1 43 2 18 1 163 2 279 2 47 2 216 4 318 1 287 2 241 4 320 3 376 1 200 4 262 2 130 2 291 1 131 1 292 1 
55 2 326 1 222 1 207 1 178 1 7 2 356 2 73 2 311 1 143 1 357 1 145 1 273 1 15 1 363 3 163 1 164 1 195 1 281 3 345 1 216 1 373 1 258 1 110 1 49 1 241 1 200 1 218 1 292 1 132 2 69 1 244 1 
264 1 3 2 46 2 56 4 279 2 47 1 8 2 9 1 35 1 287 1 39 2 350 4 130 1 14 1 43 1 
24 1 70 1 266 1 
24 1 70 1 266 1 
24 1 61 1 274 1 266 1 64 1 
24 1 70 1 266 1 
24 1 369 1 266 1 
24 1 369 1 266 1 
24 1 369 1 266 1 
24 1 266 1 
117 1 125 1 
264 1 342 1 298 1 297 4 164 4 235 2 222 2 84 1 85 1 258 8 271 1 187 1 356 4 38 1 218 2 273 2 60 1 221 1 124 3 244 2 
264 1 298 1 297 3 164 3 235 2 84 1 267 1 85 1 258 6 271 1 187 1 38 1 60 1 124 2 
297 2 164 2 21 1 235 1 222 1 223 1 95 1 85 1 258 4 271 1 129 1 356 2 218 1 273 1 221 1 124 2 244 1 
276 1 297 3 164 4 21 1 235 1 223 1 95 1 354 1 258 7 85 1 271 1 199 2 336 1 221 1 124 2 
264 1 298 1 297 11 222 2 95 2 223 2 355 1 271 3 187 2 356 4 38 2 273 2 60 1 336 1 194 1 124 9 342 2 276 2 164 12 21 2 235 5 84 1 85 3 258 23 199 2 218 2 201 1 221 4 244 2 
164 1 199 1 258 1 
297 1 276 1 258 1 
297 3 164 3 21 1 235 2 222 1 95 1 223 1 258 6 85 1 271 1 356 2 129 1 37 1 218 1 273 1 221 1 244 1 124 3 
297 6 222 1 95 2 223 2 354 1 271 2 356 2 313 1 273 1 124 2 44 1 276 1 164 6 21 2 235 1 236 1 371 1 372 1 258 12 85 2 199 1 218 1 324 1 221 1 244 1 
298 1 297 3 164 3 235 1 85 1 258 6 271 1 187 1 38 1 221 1 124 2 
342 1 297 1 164 2 235 1 222 1 84 1 258 3 187 1 356 2 38 1 218 1 201 1 273 1 60 1 221 1 124 2 244 1 
44 1 297 5 298 1 164 5 235 3 222 1 258 10 85 2 271 2 187 2 356 2 38 2 218 1 273 1 337 1 221 2 244 1 124 5 
44 1 297 2 222 1 95 1 85 1 258 2 356 2 218 1 273 1 221 1 244 1 124 1 
44 1 297 2 164 2 21 1 235 1 222 1 223 1 95 1 85 1 258 4 271 1 356 2 218 1 273 1 221 1 124 2 244 1 
342 1 44 1 297 1 234 1 164 2 235 1 222 3 258 3 187 1 356 6 38 1 218 3 201 1 273 3 221 1 244 3 124 2 
264 1 173 1 298 2 297 16 222 5 95 3 223 3 354 1 97 1 271 5 187 3 356 10 38 3 273 5 60 1 336 1 338 1 124 12 342 2 44 1 276 3 164 18 234 1 21 3 235 7 84 1 258 34 85 5 129 1 199 4 218 5 201 1 221 5 244 5 
264 1 297 4 298 1 222 1 354 1 271 1 187 1 356 2 38 1 273 1 60 1 124 2 44 1 276 1 164 4 235 2 84 1 85 1 258 8 199 1 218 1 324 1 244 1 
264 1 298 1 297 6 222 2 95 1 354 1 271 1 187 1 356 4 38 1 273 2 60 1 336 1 124 3 44 1 276 1 164 5 21 1 235 2 84 1 258 11 85 2 129 1 199 2 218 2 324 1 221 1 244 2 
44 1 297 3 276 1 164 2 21 1 222 1 95 1 354 1 372 1 85 1 258 5 356 2 313 1 199 1 218 1 273 1 324 1 244 1 
264 1 298 1 297 10 222 3 95 2 223 1 354 1 271 2 187 1 356 6 38 1 313 1 273 3 60 1 124 5 342 1 44 1 276 1 164 7 21 2 235 3 236 1 371 1 84 1 372 1 258 17 85 3 129 1 199 1 218 3 324 1 221 2 244 3 
264 1 297 4 298 1 222 1 354 1 271 1 187 1 356 2 38 1 273 1 60 1 124 2 44 1 276 1 164 4 235 2 84 1 85 1 258 8 199 1 218 1 324 1 244 1 
297 6 222 1 95 2 223 2 354 1 271 2 356 2 313 1 273 1 124 2 44 1 276 1 164 6 21 2 235 1 236 1 371 1 372 1 258 12 85 2 199 1 218 1 324 1 221 1 244 1 
44 1 297 3 276 1 164 2 21 1 222 2 95 1 354 1 372 1 85 1 258 5 356 4 129 1 313 1 199 1 218 2 273 2 324 1 244 2 
297 9 222 4 95 3 223 2 354 1 271 2 356 8 313 1 273 4 124 6 44 1 342 2 276 1 164 7 234 1 21 3 235 3 236 1 371 1 372 1 258 16 85 3 199 1 218 4 324 1 221 3 244 4 
298 1 297 3 164 4 235 3 84 2 258 7 85 1 271 1 187 3 38 3 60 1 221 3 124 6 
44 1 297 3 276 1 234 1 164 2 21 1 222 2 95 1 354 1 372 1 85 1 258 5 356 4 313 1 199 1 218 2 273 2 324 1 244 2 
363 1 73 1 29 1 207 1 281 1 370 1 23 1 
172 1 363 1 29 1 207 1 281 1 370 1 23 1 111 1 52 1 73 1 147 1 362 1 
163 1 329 1 143 1 241 1 200 1 145 1 292 1 302 1 216 1 267 1 15 1 
363 2 326 1 55 1 163 1 207 1 345 1 7 1 281 2 216 1 49 1 73 1 143 1 241 1 200 1 145 1 292 1 79 1 15 1 
363 2 326 2 55 1 4 1 207 1 345 1 7 2 281 2 32 1 216 1 49 1 167 1 73 2 143 1 241 1 200 1 145 3 323 1 292 2 103 1 155 1 79 1 15 1 
55 1 326 2 4 1 207 1 7 2 32 1 308 1 73 2 143 1 190 1 145 3 103 1 79 1 15 1 363 2 281 2 345 1 216 2 167 1 241 2 200 2 292 2 323 1 155 1 
326 1 3 1 56 1 208 1 32 1 58 1 143 1 189 1 190 1 145 4 103 1 230 2 15 1 163 1 107 1 126 1 216 3 167 1 168 1 241 3 320 2 200 3 292 1 
163 1 326 1 107 1 3 1 56 1 32 1 216 3 167 1 58 1 143 1 320 2 241 3 168 1 189 1 190 1 200 3 145 4 292 1 230 2 103 1 252 1 15 1 
353 1 143 1 241 1 200 1 216 1 15 1 
87 1 353 1 163 2 326 1 367 1 277 1 157 1 30 1 216 7 303 1 141 1 238 1 241 6 143 3 261 1 200 7 145 3 251 1 292 2 17 1 15 2 
264 1 174 1 297 3 298 1 326 1 55 1 222 2 157 1 207 2 7 1 121 1 271 1 187 1 356 4 73 1 143 1 38 1 357 1 145 1 272 1 273 2 60 1 79 1 359 1 124 2 15 1 80 1 363 2 164 3 195 1 235 2 22 1 345 1 281 2 84 1 373 2 216 1 258 6 85 1 259 1 49 1 241 1 200 1 218 2 292 1 69 2 244 2 
3 1 300 1 56 1 9 2 269 1 35 2 333 1 58 2 189 1 145 2 230 3 41 1 14 2 252 1 163 1 344 1 107 1 279 1 47 2 216 1 318 1 241 1 320 3 154 1 168 1 200 1 262 1 130 1 
87 1 353 1 326 1 157 1 216 2 213 1 241 2 143 2 189 1 200 2 145 2 292 1 15 1 
163 1 329 1 157 1 216 4 302 1 143 1 241 4 312 1 190 1 200 4 145 1 292 1 15 1 
326 1 277 1 30 1 216 2 182 1 128 1 241 2 143 2 200 2 145 1 103 1 68 1 292 1 15 1 
51 1 319 1 163 1 143 1 214 1 241 1 200 1 290 1 216 1 15 1 
367 1 143 1 241 2 138 1 200 2 145 1 157 1 292 1 216 2 15 1 17 1 
163 1 329 1 157 1 302 1 216 5 141 1 241 4 143 2 312 1 200 5 145 3 103 1 251 1 292 2 17 1 15 2 
163 1 329 1 157 1 302 1 216 5 141 1 122 1 241 4 143 2 312 1 200 5 145 3 103 1 292 2 17 1 15 2 
363 2 326 1 55 1 163 1 207 1 345 1 7 1 281 2 216 1 308 1 73 1 143 1 241 1 200 1 145 1 292 1 79 1 15 1 
87 1 326 1 277 1 30 1 216 1 303 1 241 1 143 2 200 1 145 1 103 1 292 1 15 1 
363 1 1 1 281 1 73 1 191 1 227 1 101 1 379 1 156 1 
327 1 1 1 304 1 
1 1 94 1 207 1 101 1 379 1 
55 1 327 1 1 1 3 1 4 1 56 1 5 1 94 2 207 1 7 1 304 1 96 1 185 1 270 1 333 1 73 1 311 1 101 2 230 2 363 1 107 1 281 1 153 1 320 2 323 2 132 1 220 1 379 2 155 1 
231 1 135 1 330 1 267 1 
231 1 45 1 135 1 59 1 330 1 331 1 249 1 
253 1 249 1 28 1 
231 1 45 1 135 1 330 1 331 1 249 3 317 1 76 1 59 3 116 2 351 1 340 1 
231 1 45 1 135 1 71 1 59 2 330 1 335 1 331 1 249 2 
45 1 205 1 330 1 331 1 249 1 51 1 112 1 349 1 76 1 59 1 290 1 
45 1 135 1 76 1 59 1 330 1 331 1 249 1 
231 1 45 1 135 2 76 1 59 1 331 1 249 1 
45 2 299 1 135 1 330 1 331 2 31 1 249 2 76 1 59 2 53 1 
231 1 314 1 45 1 135 1 108 1 330 2 331 1 249 3 198 1 112 1 76 1 59 3 335 2 
118 1 231 1 45 1 135 1 205 1 330 1 331 1 249 2 51 1 319 1 76 1 144 1 59 2 290 2 335 1 
215 1 231 1 45 2 135 1 71 1 108 1 330 2 331 2 249 4 112 1 76 1 59 4 335 2 
231 1 45 1 135 1 76 1 59 1 330 1 331 1 249 1 
231 2 45 1 365 1 135 2 108 1 330 3 331 1 249 4 112 1 59 4 335 2 116 1 340 1 351 1 
231 1 45 1 135 1 175 1 330 1 331 1 249 2 140 1 309 1 76 1 59 2 335 1 
231 1 45 1 135 1 330 1 331 1 249 3 123 1 76 1 59 3 116 2 351 1 340 2 
347 1 136 1 330 2 316 2 
45 1 76 1 289 1 59 1 331 1 249 1 
231 1 314 1 45 1 135 1 76 1 59 2 330 1 335 1 331 1 249 2 
181 1 
231 1 45 1 135 1 76 1 59 1 330 1 331 1 249 1 
231 1 314 1 45 1 135 1 330 1 331 1 249 3 76 1 59 3 335 1 116 1 
365 1 112 1 108 1 330 1 
135 1 330 1 

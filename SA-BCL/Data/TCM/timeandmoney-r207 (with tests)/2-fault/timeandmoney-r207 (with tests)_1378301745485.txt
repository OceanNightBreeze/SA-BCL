#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
216 2 154 1 156 1 272 2 33 3 289 1 16 1 158 1 307 1 264 2 238 1 8 3 317 1 
146 2 289 1 33 9 307 1 264 5 238 1 149 1 8 9 317 3 363 1 153 1 42 1 216 2 154 4 191 1 15 1 156 7 272 2 158 1 16 1 378 1 250 1 230 1 23 1 
146 2 289 1 33 9 307 1 264 5 238 1 149 1 8 9 317 3 363 1 153 1 42 1 216 2 154 4 191 1 15 1 156 7 272 2 158 1 16 1 378 1 250 1 230 1 23 1 
305 1 28 1 146 2 33 9 289 1 307 1 264 5 36 1 238 1 149 2 8 9 295 1 317 3 297 1 153 1 42 1 216 2 154 4 191 2 15 1 156 6 272 2 158 2 16 1 378 1 230 2 93 1 23 1 
305 1 28 1 146 2 33 9 289 1 307 1 264 5 36 1 238 1 149 2 8 9 295 1 317 3 297 1 153 1 42 1 216 2 154 4 191 2 15 1 156 6 272 2 158 2 16 1 378 1 230 2 93 1 23 1 
305 1 28 1 146 2 33 10 289 1 307 1 264 6 36 1 238 1 149 2 8 10 295 1 317 4 297 1 153 1 42 1 216 2 154 5 191 2 15 1 156 7 272 2 158 2 16 1 378 1 230 2 93 1 23 1 
305 1 28 1 146 1 33 7 289 1 307 1 264 4 36 1 238 1 149 2 8 7 295 1 317 2 297 1 153 1 42 1 216 2 154 3 191 2 15 1 156 4 272 2 158 2 16 1 230 2 93 1 23 1 
216 1 154 2 191 1 146 2 156 3 272 1 33 4 16 1 307 1 264 3 238 1 378 1 149 1 8 4 317 1 230 1 23 1 42 1 
216 1 26 1 14 1 191 1 28 1 272 1 33 2 16 1 158 1 307 1 264 1 238 1 8 2 93 1 230 1 354 1 
257 1 27 1 232 1 233 1 4 1 377 1 224 1 5 1 265 1 82 1 51 1 10 1 141 1 65 1 
357 1 
144 1 224 2 265 1 357 1 112 1 51 2 189 1 24 1 
144 1 357 1 332 1 87 2 0 1 112 1 235 1 56 1 376 2 37 2 224 5 265 2 293 1 276 1 50 1 51 5 189 2 338 1 12 1 
357 1 246 1 112 1 
225 1 357 1 249 2 
4 2 257 1 27 2 5 2 233 2 10 2 221 1 65 2 
257 1 27 2 356 1 77 1 233 3 3 2 309 1 4 3 5 2 312 1 151 1 7 1 337 2 188 1 10 2 106 1 83 1 170 2 65 2 217 1 67 1 43 1 341 1 275 2 135 1 221 1 17 1 374 1 18 2 248 1 174 1 327 1 139 1 90 1 178 1 251 1 95 1 
4 1 257 1 377 1 27 1 5 1 82 1 233 1 10 1 141 1 65 1 
27 1 110 1 357 1 112 1 233 1 46 1 222 1 4 1 377 1 224 1 92 1 199 1 60 1 51 1 
27 1 110 1 357 1 112 1 233 1 46 1 4 1 224 2 5 1 377 1 92 1 199 1 51 2 10 1 65 1 
224 1 59 1 265 1 51 1 189 1 
144 1 224 2 265 1 357 1 112 1 51 2 189 1 203 1 
224 1 51 1 189 1 
27 2 111 1 233 2 221 2 4 2 5 1 10 1 75 1 65 1 
49 1 201 1 167 1 
43 1 275 1 233 1 221 1 17 1 374 1 3 1 327 1 309 1 4 1 90 1 251 1 337 1 188 1 52 1 95 1 
27 5 134 2 111 1 300 1 288 1 233 5 221 1 4 5 5 1 60 1 10 4 121 1 162 1 65 4 
4 2 377 1 27 2 233 2 10 2 81 1 141 1 65 2 
27 1 43 1 134 1 275 1 233 2 374 1 17 1 3 1 327 1 309 1 49 1 4 2 90 1 251 1 337 1 188 1 121 1 10 1 95 1 65 1 
246 1 221 1 
4 3 5 1 27 3 134 1 233 3 10 3 221 1 65 3 
4 1 377 1 27 1 233 1 10 1 141 1 65 1 
4 1 377 1 27 1 5 1 111 1 233 1 10 1 75 1 65 1 
257 1 27 3 77 1 233 4 3 1 309 1 292 1 4 4 5 2 312 1 210 1 7 1 337 1 188 1 10 3 83 1 170 1 65 3 217 1 67 1 43 1 110 1 111 1 134 1 275 1 135 1 221 1 374 1 46 1 17 1 18 2 248 1 327 1 377 1 224 1 139 1 90 1 178 1 92 1 199 1 251 1 51 1 121 1 95 1 
4 2 27 2 134 1 60 1 233 2 10 1 221 1 162 1 65 1 
25 1 27 3 111 1 134 2 110 1 357 1 233 3 46 1 4 3 5 1 224 1 377 1 210 1 199 1 92 1 51 1 121 1 10 3 65 3 
27 2 134 1 111 1 233 2 4 2 49 1 5 1 201 1 10 2 65 2 
43 1 275 1 233 1 221 1 17 1 374 1 3 1 309 1 327 1 4 1 90 1 251 1 337 1 188 1 95 1 
275 1 233 1 221 1 17 1 374 1 3 1 128 1 327 1 4 1 90 1 169 1 251 1 337 1 188 1 95 1 
163 1 331 1 77 1 359 1 167 2 312 1 7 1 242 1 106 2 190 1 107 1 170 4 217 1 67 1 219 1 45 1 135 2 18 2 248 1 49 2 119 1 229 1 201 2 253 1 
4 1 377 1 27 1 233 1 10 1 46 1 81 1 65 1 
271 1 164 1 130 1 
271 2 164 2 97 1 372 1 360 1 350 1 
271 1 164 1 
271 1 164 1 
97 1 360 1 
97 1 360 1 
97 1 360 1 
271 1 164 1 319 1 
271 1 164 1 319 1 
271 1 164 1 319 1 
271 1 164 1 161 1 
271 1 164 1 161 1 
271 1 164 1 161 1 
4 1 27 1 233 1 195 1 10 1 65 1 
164 1 257 1 27 1 232 1 233 1 34 1 4 1 103 1 5 1 311 1 315 1 82 1 10 1 11 1 65 1 271 1 366 1 88 1 195 1 344 1 223 1 377 1 224 1 227 1 51 1 141 1 96 1 
26 1 145 2 149 1 104 1 230 2 
191 1 149 1 230 1 
26 1 191 1 230 1 
26 1 145 1 104 1 149 2 230 3 290 1 
54 1 26 1 145 1 104 1 149 1 230 2 
331 1 144 1 287 1 332 2 357 2 333 2 30 1 182 2 99 1 80 1 291 2 37 1 310 1 265 4 242 1 61 1 189 1 338 3 12 1 87 1 45 1 112 1 249 3 376 1 225 1 224 5 347 1 21 1 51 5 281 1 253 1 353 1 
331 3 144 1 332 6 357 5 0 1 333 6 30 3 263 1 99 2 80 4 102 1 291 6 37 2 168 1 59 5 265 7 242 3 189 6 338 8 12 1 155 1 69 1 87 2 45 3 112 1 19 1 249 9 115 5 376 2 225 3 224 9 21 2 51 9 253 3 353 1 
331 1 357 3 332 2 0 1 333 2 30 1 182 1 99 1 80 1 37 1 291 2 310 1 265 2 242 1 338 3 87 1 112 1 45 1 249 4 376 1 225 2 347 1 224 3 21 1 51 3 253 1 
331 2 357 4 332 4 333 4 0 1 30 2 182 2 99 1 80 2 291 4 37 1 168 1 310 1 265 3 242 2 338 5 69 1 87 1 112 1 45 2 19 1 249 7 376 1 225 3 224 4 347 1 21 1 51 4 253 2 
330 1 
327 1 251 1 188 1 
327 1 91 1 
327 1 268 1 246 1 
327 1 364 1 
327 1 251 1 
327 3 268 2 370 1 251 1 188 1 298 1 
163 3 180 2 219 2 181 1 135 3 45 1 361 1 147 1 373 1 20 1 226 1 240 1 239 1 313 1 187 1 253 1 106 4 170 7 
163 10 331 3 180 3 181 2 29 4 30 3 361 1 262 1 147 2 312 1 266 1 239 1 240 2 313 2 7 1 187 1 186 1 242 3 106 16 84 1 170 31 67 1 171 1 218 1 219 5 135 15 45 4 18 2 248 1 177 1 20 1 226 5 53 3 253 4 
163 4 180 2 181 1 361 1 147 1 312 2 240 1 239 1 7 2 313 1 106 5 84 1 170 9 67 2 219 3 45 1 343 1 135 4 172 1 18 4 248 2 20 1 226 1 253 1 
163 3 180 2 219 2 181 1 135 3 45 1 361 1 147 1 20 1 226 1 240 1 239 1 313 1 187 1 253 1 106 4 170 7 
163 3 180 2 219 2 181 1 135 3 45 1 361 1 147 1 20 1 226 1 240 1 239 1 313 1 187 1 253 1 106 4 170 7 
33 1 234 2 100 1 3 1 8 1 337 1 216 1 272 1 275 1 325 2 17 1 158 2 374 1 176 1 346 2 327 1 196 1 251 1 95 1 302 1 255 1 282 1 352 1 
216 1 26 1 191 1 76 1 273 1 272 1 261 1 33 1 275 1 325 1 234 1 374 1 158 1 16 1 290 1 236 1 47 1 3 1 346 1 149 1 8 1 230 2 337 1 349 1 95 1 243 1 
26 1 33 2 261 1 234 1 307 1 264 1 3 1 236 1 290 1 238 1 149 1 8 2 337 1 243 1 216 1 191 1 156 1 272 1 273 1 275 1 325 1 16 1 158 1 374 1 47 1 71 1 346 1 230 2 349 1 95 1 
26 1 76 1 33 3 261 1 234 1 307 1 264 1 290 1 3 1 236 1 238 1 149 1 8 3 337 1 243 1 216 1 191 1 156 2 272 1 275 1 325 1 158 1 374 1 47 1 346 1 230 2 349 1 302 1 303 1 95 1 
26 1 76 1 33 2 261 1 234 1 307 1 264 1 3 1 236 1 290 1 238 1 149 1 8 2 337 1 191 1 156 2 275 1 325 1 158 1 374 1 346 1 230 2 349 1 303 1 95 1 
301 1 
144 2 332 1 233 1 58 3 4 1 148 1 105 5 60 1 189 5 63 1 338 1 12 1 339 1 13 1 192 3 110 1 112 1 345 1 197 1 199 1 348 1 254 1 27 1 357 1 260 2 78 2 358 1 166 2 37 1 211 1 269 1 87 1 46 1 222 1 376 1 377 1 224 4 225 2 92 1 278 3 51 4 382 2 
144 2 27 1 357 1 78 2 260 2 332 1 358 1 166 2 233 1 58 3 37 1 4 1 148 1 211 1 105 5 60 1 269 1 189 5 338 1 63 1 12 1 339 1 13 1 110 1 192 3 87 1 112 1 46 1 345 1 222 1 376 1 225 2 197 1 224 4 377 1 92 1 199 1 278 3 382 2 51 4 348 1 254 1 
144 2 332 1 233 1 58 2 4 1 105 4 60 1 189 4 63 1 338 1 12 1 13 1 110 1 192 2 112 1 249 2 197 1 199 1 254 1 27 1 260 2 357 1 358 1 166 2 37 1 211 1 215 2 322 2 87 1 46 1 222 1 376 1 377 1 224 4 92 1 278 2 381 1 51 4 280 1 
142 1 144 3 332 2 1 1 233 1 99 1 3 2 58 2 4 1 148 1 105 4 337 2 60 1 189 6 338 2 63 1 12 1 13 1 192 2 110 1 112 1 17 2 249 2 197 1 199 1 251 1 254 1 27 1 357 2 78 2 260 2 358 1 166 2 37 1 211 1 85 1 87 1 323 1 275 2 374 1 46 1 176 1 222 1 327 1 376 1 225 2 224 5 377 1 92 1 278 2 280 1 382 2 51 5 282 1 95 1 
27 1 144 1 358 1 233 1 4 1 211 1 105 2 60 1 189 2 63 1 110 1 192 1 46 1 222 1 197 1 224 3 377 1 92 1 199 1 51 3 254 1 24 1 
27 1 144 1 357 1 358 1 233 1 58 1 4 1 211 1 105 3 60 1 189 1 63 1 110 1 112 1 46 1 222 1 197 1 224 3 377 1 92 1 199 1 51 3 254 1 24 1 
144 1 27 1 357 1 358 1 233 1 58 1 4 1 211 1 105 3 60 1 189 2 63 1 110 1 192 1 112 1 46 1 222 1 197 1 224 3 377 1 92 1 199 1 278 1 51 3 254 1 24 1 
144 3 332 1 233 1 58 4 4 1 148 1 105 6 60 1 189 7 63 1 338 1 12 1 339 1 13 1 299 1 192 4 110 1 112 5 345 1 197 1 199 1 348 1 254 1 24 1 27 1 357 5 260 2 78 2 358 1 166 2 37 1 211 1 269 1 87 1 46 1 222 1 376 1 377 1 224 5 225 2 92 1 278 4 51 5 382 2 
144 2 332 1 233 1 58 2 4 1 148 1 105 4 60 1 189 4 63 1 338 1 12 1 13 1 110 1 192 2 112 1 249 2 197 1 199 1 254 1 27 1 260 2 78 2 357 2 358 1 166 2 37 1 211 1 87 1 46 1 222 1 376 1 377 1 224 4 225 2 92 1 278 2 51 4 382 2 280 1 
144 2 27 1 357 1 78 2 260 2 332 1 358 1 166 2 233 1 58 2 4 1 37 1 148 1 211 1 105 4 60 1 269 1 189 4 338 1 63 1 12 1 13 1 192 2 110 1 87 1 112 1 46 1 345 1 222 1 376 1 225 2 197 1 224 4 377 1 92 1 199 1 278 2 382 2 51 4 348 1 254 1 
144 2 27 1 357 1 78 2 260 2 332 1 358 1 166 2 233 1 58 2 4 1 37 1 148 1 211 1 105 4 60 1 269 1 189 4 338 1 63 1 12 1 13 1 192 2 110 1 87 1 112 1 46 1 345 1 222 1 376 1 225 2 197 1 224 4 377 1 92 1 199 1 278 2 382 2 51 4 348 1 254 1 
144 2 27 1 357 1 260 2 332 1 358 1 166 2 233 1 58 2 4 1 37 1 40 1 211 1 105 4 184 1 60 1 189 4 215 2 338 1 63 1 12 1 13 1 322 2 192 2 110 1 87 1 112 1 46 1 345 1 249 2 222 1 376 1 197 1 224 4 377 1 92 1 199 1 278 2 381 1 51 4 254 1 
27 1 356 1 76 1 77 2 233 1 183 1 3 8 4 1 312 2 150 1 7 2 152 1 337 7 10 1 106 1 244 1 65 1 170 2 217 2 67 2 134 1 275 8 135 1 374 2 17 2 18 4 248 2 159 1 174 2 71 1 176 1 327 3 178 1 251 2 229 1 73 1 123 1 95 2 282 1 
163 1 27 1 331 1 77 1 30 1 233 1 167 1 4 1 5 1 312 1 7 1 242 1 10 1 106 1 65 1 170 3 217 1 67 1 111 1 219 1 45 1 135 2 18 2 248 1 48 1 49 1 201 1 204 1 253 1 
163 2 180 1 77 1 181 1 361 1 167 1 312 1 239 1 7 1 313 1 106 3 170 6 217 1 67 1 219 2 246 1 45 1 135 3 221 2 18 2 248 1 49 1 20 1 229 1 201 1 253 1 
163 2 331 1 356 1 77 2 29 3 30 2 262 1 167 11 312 2 7 2 242 2 106 8 170 14 217 1 67 2 219 1 135 6 45 1 221 1 18 4 248 2 48 1 326 1 177 1 49 11 226 1 117 1 228 1 178 1 122 1 201 4 53 3 253 2 
205 1 27 1 356 1 77 1 233 2 3 1 309 1 209 1 4 2 312 1 7 1 337 1 188 1 10 1 106 1 65 1 170 2 108 1 217 1 67 1 43 1 134 1 275 1 135 1 221 1 374 1 17 1 248 1 18 2 48 1 327 1 90 1 178 1 251 1 201 1 121 1 52 1 95 1 
331 2 180 1 181 1 233 3 3 3 4 3 239 1 336 1 7 3 337 3 242 2 10 1 188 2 106 10 65 1 67 3 17 1 18 6 248 3 70 2 20 1 251 2 121 1 201 7 253 3 351 2 163 8 27 1 356 1 76 1 77 3 30 2 361 1 167 7 309 2 312 3 313 1 316 2 83 2 170 20 217 3 321 1 367 2 43 2 134 1 219 4 275 3 45 3 135 10 221 2 374 2 48 1 327 2 49 7 226 4 90 2 178 1 379 1 95 2 
163 1 217 1 67 1 77 1 167 1 248 1 18 2 49 1 226 1 312 1 7 1 229 1 242 1 201 1 190 1 253 1 106 2 170 2 
163 1 217 1 67 1 331 1 219 1 77 1 359 1 45 1 135 2 167 1 248 1 18 2 49 1 312 1 7 1 229 1 201 1 170 2 
163 2 217 1 67 1 331 1 219 1 77 1 30 1 135 2 45 1 167 2 248 1 18 2 49 2 226 1 312 1 7 1 229 1 242 1 201 2 253 1 106 2 170 4 
163 1 217 1 67 1 77 1 167 1 248 1 18 2 49 1 226 1 312 1 7 1 73 1 242 1 201 1 190 1 253 1 106 2 170 2 
163 1 217 1 67 1 331 1 219 1 77 1 359 1 45 1 135 2 167 1 248 1 18 2 49 1 312 1 7 1 73 1 201 1 170 2 
163 2 217 1 67 1 331 1 219 1 77 1 30 1 135 2 45 1 167 2 248 1 18 2 49 2 226 1 312 1 7 1 73 1 242 1 201 2 253 1 106 2 170 4 
163 2 217 1 67 1 331 1 219 1 77 1 30 1 135 2 45 1 167 2 248 1 18 2 49 2 226 1 312 1 7 1 242 1 201 2 253 1 106 2 170 4 
356 1 77 1 233 1 3 1 309 1 4 1 312 1 7 1 337 1 188 1 106 1 83 1 170 2 217 1 67 1 43 1 275 1 135 1 221 1 374 1 17 1 248 1 18 2 327 1 90 1 178 1 251 1 95 1 
356 1 77 1 233 1 3 1 128 1 4 1 6 1 169 1 312 1 7 1 337 1 188 1 106 1 170 2 217 1 67 1 275 1 135 1 221 1 374 1 17 1 248 1 18 2 327 1 90 1 178 1 251 1 95 1 
163 2 217 1 67 1 331 1 219 1 77 1 30 1 135 2 45 1 167 2 248 1 18 2 48 1 49 2 226 1 312 1 7 1 242 1 201 2 253 1 106 2 170 4 
163 2 331 1 77 1 30 1 233 1 167 2 3 1 309 1 4 1 312 1 7 1 242 1 337 1 188 1 106 2 83 1 170 4 217 1 67 1 43 1 219 1 275 1 135 2 45 1 374 1 248 1 18 2 71 1 327 1 49 2 226 1 90 1 251 1 201 2 253 1 95 1 351 1 
163 1 331 1 27 1 77 1 30 1 233 1 167 1 4 1 5 1 312 1 7 1 242 1 10 1 106 2 65 1 170 3 217 1 67 1 111 1 135 1 45 1 18 2 248 1 48 1 49 1 226 1 279 1 201 1 253 1 
163 6 331 3 165 1 29 2 30 3 262 1 208 1 312 2 7 2 242 3 41 2 106 9 170 19 67 2 68 1 219 3 193 2 324 1 343 1 135 10 45 3 18 4 248 2 177 1 226 3 329 1 53 1 253 3 74 1 231 1 
163 4 331 2 165 1 29 2 30 3 262 2 208 2 312 3 7 3 185 1 213 1 242 3 41 1 106 14 84 2 170 26 245 1 67 3 66 1 368 1 219 2 193 4 45 2 135 12 343 1 375 1 18 6 248 3 226 2 329 1 53 2 253 3 74 1 231 2 
331 4 180 1 181 1 239 1 7 3 185 1 242 4 106 20 245 1 67 3 66 1 193 4 343 1 248 3 18 6 20 1 118 1 253 5 74 1 163 8 165 1 29 4 30 4 262 3 361 1 208 2 312 3 313 1 213 1 41 1 84 1 170 41 368 1 219 4 45 5 135 21 324 1 375 1 177 1 226 4 329 1 53 3 231 1 
163 7 331 3 165 1 180 1 181 1 29 4 30 4 361 1 262 3 208 2 312 4 239 1 313 1 7 4 185 1 213 1 242 4 41 1 106 20 84 2 170 38 245 1 66 1 67 4 368 1 219 4 193 4 324 1 343 1 135 18 45 4 375 1 18 8 248 4 177 1 20 1 226 3 118 1 329 1 53 3 253 5 74 1 231 1 
163 14 331 7 165 1 180 1 181 1 29 4 30 7 361 1 262 2 208 1 312 2 239 1 313 1 7 2 185 1 213 1 242 7 41 1 106 27 84 1 170 52 245 1 66 1 67 2 368 1 219 7 193 4 343 1 135 25 45 8 375 1 18 4 248 2 177 2 20 1 226 7 117 2 329 1 53 4 253 8 74 1 231 1 
271 1 164 1 103 1 227 1 109 1 315 1 372 1 32 1 9 1 96 1 
130 1 175 1 
271 1 38 1 164 1 103 1 227 1 132 1 315 1 94 1 96 1 
277 1 319 1 
161 1 350 1 173 1 
257 1 27 1 232 1 34 1 233 1 4 1 5 1 311 1 82 1 10 1 11 1 65 1 366 1 88 1 195 1 344 1 223 1 377 1 141 1 
257 1 27 1 232 1 34 1 233 1 4 1 5 1 311 1 82 1 10 1 11 1 65 1 366 1 88 1 195 1 344 1 223 1 377 1 141 1 
257 1 27 1 232 1 34 1 233 1 4 1 5 1 311 1 82 1 10 1 11 1 65 1 366 1 88 1 195 1 344 1 223 1 377 1 141 1 
277 1 319 1 350 1 
277 1 319 1 350 1 
161 1 173 1 
161 1 350 1 173 1 
286 1 267 1 
164 1 304 1 27 2 286 1 287 1 233 2 34 1 80 1 4 2 103 1 265 1 267 1 315 1 10 2 130 1 65 2 271 1 366 1 221 1 344 1 175 1 224 1 227 1 116 1 51 1 281 1 96 1 
283 1 27 2 356 1 77 1 233 2 3 2 129 1 4 2 312 1 150 1 7 1 241 1 337 2 106 1 170 2 217 1 67 1 275 2 135 1 374 1 248 1 18 2 48 1 159 1 174 2 327 1 114 1 178 1 72 1 251 1 95 1 
179 1 275 1 234 1 374 1 17 1 100 1 3 1 176 1 327 1 39 1 251 1 337 1 95 1 282 1 
26 1 191 1 76 1 259 1 275 1 261 1 234 1 374 1 137 1 290 1 3 1 236 1 39 1 149 1 230 2 337 1 95 1 243 1 
26 1 191 1 76 1 259 1 275 2 261 1 234 1 374 1 137 1 290 1 3 2 236 1 71 1 39 1 149 1 230 2 337 2 95 1 243 1 
26 1 191 1 76 1 275 1 261 1 234 1 374 1 137 1 290 1 3 1 138 1 236 1 149 1 230 2 337 1 95 1 243 1 
212 1 
87 1 332 1 357 1 112 1 235 1 376 1 37 1 50 1 338 1 12 1 
331 2 332 5 357 5 333 5 30 2 45 2 249 10 89 2 291 5 225 5 316 1 296 1 242 2 253 2 338 5 
224 1 144 1 357 1 112 1 51 1 189 1 
143 1 144 2 332 2 0 1 1 1 99 2 3 4 37 2 314 2 337 4 189 4 338 2 12 1 85 2 87 2 371 1 323 1 275 4 374 1 17 2 176 1 327 1 376 2 224 3 251 1 51 3 95 1 282 1 124 1 
257 1 27 2 77 1 233 3 3 1 309 1 4 3 5 2 312 1 7 1 337 1 10 2 188 1 83 1 170 1 65 2 217 1 67 1 43 1 275 1 135 1 221 1 17 1 374 1 18 2 248 1 327 1 139 1 90 1 178 1 251 1 95 1 
85 1 180 1 332 2 87 1 357 4 333 2 112 2 99 1 249 4 291 2 376 1 37 1 225 2 338 1 12 1 
357 1 332 1 246 1 112 1 50 1 338 1 235 1 
144 1 78 1 332 1 357 2 37 1 148 1 189 1 338 1 12 1 87 1 112 1 249 1 376 1 225 1 224 1 382 1 51 1 
144 3 331 2 332 8 333 6 334 2 99 2 235 1 3 2 291 6 335 2 337 2 242 2 296 2 188 1 189 5 338 9 12 4 112 2 113 2 17 1 71 1 249 12 199 2 251 1 200 1 253 2 355 2 357 8 31 1 30 2 308 1 37 4 268 2 316 2 364 3 85 1 370 1 371 1 86 2 87 4 275 2 45 2 374 1 327 6 89 2 376 4 224 5 225 6 50 1 51 5 95 2 
144 1 331 2 357 5 332 5 333 5 29 1 30 2 262 1 99 1 291 5 37 2 185 1 296 1 213 1 242 2 189 1 338 8 64 1 12 2 245 1 66 1 368 1 85 1 87 2 342 1 45 2 112 2 249 6 89 2 376 2 224 1 225 3 51 1 53 1 253 2 
257 1 27 1 332 2 181 1 232 1 233 1 4 1 37 1 5 1 313 1 82 1 296 1 214 1 269 1 10 1 338 2 12 1 65 1 87 1 45 1 89 2 376 1 20 1 377 1 224 1 51 1 253 2 141 1 
237 1 227 1 286 1 9 1 96 1 
227 1 140 1 96 1 
227 1 140 1 96 1 
227 1 140 1 96 1 
227 1 306 1 96 1 
227 1 306 1 96 1 
227 1 306 1 96 1 
227 1 96 1 
271 1 164 1 
163 5 67 1 219 3 181 2 343 1 135 5 45 2 18 2 248 1 20 1 226 2 312 1 7 1 313 2 214 1 106 5 253 2 170 10 
163 1 67 1 343 1 248 1 18 2 226 1 312 1 7 1 242 1 253 1 106 2 170 2 
163 2 67 1 331 1 219 1 30 1 135 2 45 1 343 1 248 1 18 2 226 1 312 1 7 1 242 1 253 1 106 2 170 4 
163 2 67 3 219 1 181 1 2 1 324 1 135 2 343 1 248 3 18 6 226 1 312 3 7 3 313 1 106 1 84 1 170 3 
163 12 331 3 180 1 181 3 29 4 2 1 30 3 361 1 262 1 266 1 312 5 239 1 313 3 7 5 186 1 242 3 106 16 84 2 170 34 67 5 171 1 219 7 247 1 135 18 324 1 343 1 45 5 18 10 248 5 177 1 20 2 226 5 53 3 253 5 
163 2 180 1 29 1 181 1 262 1 361 1 312 1 239 1 7 1 313 1 106 4 170 8 66 1 67 1 219 2 45 1 135 4 343 1 18 2 248 1 20 1 253 1 53 1 
163 3 180 1 181 1 29 2 30 1 361 1 262 1 312 2 239 1 313 1 7 2 242 1 106 6 170 11 66 1 67 2 219 2 247 1 45 1 135 5 343 1 18 4 248 2 177 1 20 1 226 1 53 1 253 2 
163 4 331 2 180 1 181 1 29 1 30 2 361 1 262 1 312 3 239 1 313 1 7 3 185 1 213 1 242 2 106 9 84 1 170 19 245 1 66 1 67 3 368 1 219 3 247 1 135 10 343 1 45 3 18 6 248 3 20 1 226 1 53 1 253 3 
163 5 331 1 180 1 181 1 29 1 30 2 361 1 262 1 312 3 239 1 313 1 7 3 185 1 213 1 242 2 106 10 84 1 170 17 245 1 66 1 67 3 368 1 219 3 247 1 135 7 343 1 45 2 18 6 248 3 20 1 226 2 53 1 253 3 
163 2 180 1 29 1 181 1 262 1 361 1 312 1 239 1 7 1 313 1 106 4 170 8 66 1 67 1 219 2 45 1 135 4 343 1 18 2 248 1 20 1 253 1 53 1 
163 2 331 2 29 1 30 2 262 1 312 1 7 1 185 1 213 1 242 2 106 6 170 12 245 1 66 1 67 1 368 1 219 1 135 6 343 1 45 2 18 2 248 1 226 1 53 1 253 2 
163 5 331 1 180 1 181 1 29 1 30 2 361 1 262 1 312 4 239 1 313 1 7 4 185 1 213 1 242 2 106 10 84 2 170 18 245 1 66 1 67 4 368 1 219 3 247 1 135 8 343 1 45 2 18 8 248 4 20 1 226 2 53 1 253 3 
163 6 331 2 29 1 30 3 262 1 312 4 7 4 185 1 213 1 242 3 106 9 84 2 170 16 245 1 66 1 67 4 368 1 219 3 135 7 343 1 324 1 45 2 18 8 248 4 226 3 53 1 253 3 
163 6 219 3 181 3 135 4 45 1 361 2 20 1 226 3 239 1 313 3 253 1 106 3 170 7 
163 4 331 1 180 1 181 1 29 1 30 2 361 1 262 1 312 4 239 1 313 1 7 4 185 1 213 1 242 2 106 10 84 2 170 18 245 1 66 1 67 4 368 1 219 3 135 8 343 1 324 1 45 2 18 8 248 4 20 1 226 1 53 1 253 3 
163 3 67 2 180 1 219 2 181 1 45 1 135 4 361 1 248 2 18 4 20 1 226 1 312 2 239 1 7 2 313 1 253 1 106 4 84 1 170 8 
163 2 180 1 219 2 181 1 246 1 135 3 361 1 45 1 20 1 239 1 313 1 253 1 106 3 170 6 
163 2 67 1 331 1 219 1 247 1 30 1 135 2 45 1 248 1 18 2 226 1 312 1 7 1 242 1 253 1 106 2 170 4 
163 2 331 1 219 1 29 2 30 1 45 1 262 1 135 4 177 1 226 1 242 1 53 1 106 3 253 1 170 7 
163 9 331 2 180 1 181 2 29 2 30 2 2 1 361 1 312 2 239 1 313 2 7 2 242 2 106 11 84 2 170 23 67 2 219 5 135 12 45 3 248 2 18 4 177 1 20 1 226 4 228 1 117 1 253 3 53 2 
29 1 135 1 170 1 
106 1 53 1 170 1 
163 3 67 1 331 1 219 2 247 1 30 1 135 3 45 1 18 2 248 1 226 1 312 1 7 1 316 1 242 1 253 1 106 3 170 6 
163 2 331 2 29 1 30 2 262 1 312 1 7 1 185 1 213 1 242 2 106 6 170 12 245 1 66 1 67 1 368 1 219 1 135 6 343 1 45 2 18 2 248 1 226 1 53 1 253 2 
163 2 219 1 181 1 45 1 135 3 20 1 226 1 313 1 253 1 106 3 170 6 
163 2 67 1 219 1 181 1 2 1 361 1 135 2 248 1 18 2 226 1 312 1 239 1 313 1 7 1 106 1 84 1 170 3 
4 1 27 1 284 1 233 1 60 1 221 1 162 1 
365 1 27 1 284 1 133 1 79 1 126 1 233 1 221 1 55 1 4 1 60 1 162 1 
369 1 275 4 17 1 374 1 3 4 71 1 176 1 327 1 251 1 318 1 337 4 95 1 282 1 
321 1 275 2 125 1 194 1 374 1 127 1 3 2 327 1 362 1 314 1 251 1 337 2 188 1 95 2 
26 1 191 1 275 1 230 1 337 1 374 1 17 1 95 1 236 1 3 1 
76 1 275 2 374 1 3 2 71 1 327 1 150 1 251 1 337 2 241 1 95 1 
275 5 17 1 374 2 3 5 183 1 176 1 71 1 327 3 150 1 314 1 251 2 318 1 152 1 337 4 282 1 95 2 
275 5 17 1 374 2 3 5 176 1 71 1 327 3 150 1 314 1 251 2 318 1 152 1 337 4 202 1 282 1 95 2 
27 1 134 1 275 1 233 2 221 1 17 1 374 1 3 1 327 1 128 1 4 2 90 1 251 1 337 1 188 1 10 1 95 1 65 1 
370 1 275 1 194 1 374 1 3 1 327 1 362 1 314 1 22 1 251 1 337 1 188 1 95 2 
327 1 251 1 246 1 275 1 337 1 374 1 17 1 95 1 282 1 3 1 176 1 
27 1 43 1 134 1 275 1 233 2 221 1 17 1 374 1 3 1 327 1 4 2 90 1 251 1 337 1 188 1 10 1 95 1 65 1 
27 2 233 2 3 1 4 2 314 1 337 1 10 1 188 2 65 2 43 1 134 1 275 1 136 1 221 1 374 1 46 1 327 3 377 1 90 1 91 1 92 1 251 2 95 1 
27 2 233 2 3 2 128 1 4 2 314 1 337 2 10 1 188 2 65 2 369 1 134 1 275 2 136 1 221 1 374 1 46 1 327 3 377 1 90 1 91 1 92 1 251 2 95 1 
258 1 369 1 357 1 98 1 275 3 112 1 136 1 17 1 374 1 3 3 327 4 224 2 91 1 199 1 268 1 314 1 251 1 51 2 337 3 188 1 189 1 95 1 364 1 
355 1 369 1 357 1 275 3 112 1 136 1 17 1 374 1 3 3 327 4 224 2 91 1 199 1 268 1 314 1 251 1 51 2 337 3 188 1 189 1 95 1 364 1 
275 1 337 1 374 1 95 1 3 1 244 1 
76 1 370 1 275 7 194 1 17 2 374 2 174 1 183 1 3 7 71 1 327 3 150 1 362 1 22 1 251 2 152 1 337 6 188 1 123 1 95 3 244 1 
163 2 27 1 180 1 77 2 181 1 361 1 233 2 167 1 3 1 309 1 4 2 312 2 239 1 313 1 7 2 337 1 188 1 10 1 106 3 83 1 170 6 65 1 217 2 67 2 367 1 43 1 134 1 219 2 275 1 135 3 45 1 221 2 374 1 248 2 18 4 48 1 71 1 327 1 114 1 49 1 20 1 90 1 251 1 201 1 253 1 95 1 351 1 
355 1 144 1 357 1 332 1 235 1 3 1 37 2 265 1 335 1 268 1 337 1 189 2 338 1 364 1 12 2 87 2 371 1 86 1 275 1 112 1 113 1 17 1 327 2 376 2 224 3 199 1 50 1 51 3 
370 1 275 1 374 1 3 1 327 2 268 1 251 1 200 1 337 1 330 1 188 1 95 2 244 1 
320 1 283 1 27 1 233 1 57 1 129 1 4 1 198 1 72 1 
256 1 198 1 252 1 
320 1 198 1 221 1 131 1 57 1 
256 1 320 2 207 1 110 1 357 1 112 1 221 1 46 1 57 2 377 1 224 2 198 1 265 1 210 1 199 1 92 1 252 1 51 2 131 2 
216 1 238 1 8 1 272 1 33 1 16 1 307 1 264 1 
270 1 216 1 154 1 44 1 156 2 272 1 33 4 307 2 264 3 238 2 160 1 8 4 317 1 93 1 
216 1 206 1 238 1 328 1 156 1 250 1 8 2 272 1 33 2 16 1 307 1 264 1 
270 2 216 1 238 1 44 1 8 3 272 1 33 3 93 2 157 1 16 1 307 1 264 1 
294 1 274 1 380 2 264 2 
216 1 285 1 8 1 272 1 33 1 16 1 
216 1 238 1 156 1 8 2 272 1 33 2 16 1 307 1 264 1 153 1 
35 1 
216 1 238 1 8 1 272 1 33 1 16 1 307 1 264 1 
216 1 238 1 156 1 8 3 272 1 33 3 93 1 16 1 307 1 153 1 264 1 
154 1 160 1 317 1 264 1 
307 1 264 1 
238 1 246 1 307 1 264 1 
216 1 238 1 8 1 272 1 33 1 307 1 264 1 
33 1 325 1 158 1 
216 1 270 1 44 1 272 1 33 3 16 1 307 1 264 1 238 1 8 3 93 2 62 1 
216 1 238 1 156 1 146 1 8 2 272 1 33 2 307 1 264 1 
216 1 154 1 191 1 272 1 33 1 16 1 264 1 149 1 8 1 230 1 42 1 
216 1 8 1 272 1 33 1 16 1 307 1 264 1 
216 1 238 1 8 1 272 1 33 1 16 1 307 2 
216 2 340 1 272 2 33 2 220 1 16 1 307 1 264 1 8 2 120 1 
216 1 154 1 15 1 156 2 272 1 33 3 16 1 307 1 264 2 238 1 8 3 317 1 153 1 
216 1 26 1 191 1 156 1 272 1 33 2 16 1 307 1 101 1 264 1 290 1 238 1 149 1 8 2 230 2 
216 2 154 1 146 1 156 2 272 2 33 4 16 1 307 1 264 2 238 1 378 1 8 4 317 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 249 (69,185) (69,185) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 249 (69,185) (69,185) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 249 (69,185) (69,185) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 249 (69,185) (69,185) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 37 221 113 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
275 1 11 1 309 1 249 1 69 1 185 1 266 1 245 1 232 1 358 1 339 1 
275 1 11 1 309 1 249 1 69 1 185 1 266 1 245 1 232 1 358 1 339 1 
275 1 11 1 309 1 249 1 69 1 185 1 266 1 245 1 232 1 358 1 339 1 
275 1 11 1 309 1 249 1 69 1 185 1 266 1 245 1 232 1 358 1 339 1 
11 4 10 1 109 1 357 1 58 1 204 1 346 1 3 2 232 1 119 1 358 1 46 3 162 1 134 2 38 3 266 1 339 4 116 1 
11 2 109 1 204 1 346 1 232 1 358 1 274 1 309 1 38 1 4 1 162 1 266 1 301 1 211 1 245 1 339 2 
11 3 109 1 357 1 346 1 232 2 358 1 19 1 46 1 309 1 134 1 38 2 266 2 339 3 
357 3 58 1 3 2 119 1 358 1 309 1 38 5 266 2 7 1 172 1 153 1 339 9 11 9 10 1 109 1 204 1 346 1 372 1 232 2 19 1 46 7 134 4 162 1 116 1 
357 3 58 1 3 2 119 1 358 1 309 1 38 5 266 2 7 1 172 1 153 1 339 9 11 9 10 1 109 1 204 1 346 1 372 1 232 2 19 1 46 7 134 4 162 1 116 1 
50 1 93 1 29 1 
50 1 117 1 378 2 
298 1 43 2 202 2 229 2 145 1 371 2 296 2 315 2 
0 2 82 2 238 1 144 1 145 1 146 1 169 2 87 1 363 1 312 1 315 2 41 1 342 1 43 2 202 2 318 1 203 1 248 1 229 2 176 2 273 1 371 3 74 1 296 3 159 1 180 1 20 1 298 1 163 1 114 1 300 1 210 1 276 1 258 1 115 2 353 1 188 1 
43 1 202 1 229 1 145 1 371 1 26 1 296 1 315 1 219 1 47 1 
229 1 118 1 371 1 120 1 296 1 179 1 62 1 47 1 123 1 50 1 151 1 160 1 93 1 257 1 
202 1 43 1 229 1 118 1 371 1 296 1 179 1 47 1 123 1 50 1 160 2 151 1 93 1 257 2 315 1 
160 1 239 1 190 1 195 1 257 1 
50 1 160 2 343 1 239 1 195 1 93 1 257 2 200 1 
160 1 239 1 257 1 
202 1 43 1 229 1 145 1 371 1 45 1 296 1 219 1 47 1 160 1 195 1 26 1 257 1 315 1 
50 1 
50 1 160 2 343 1 239 1 195 1 93 1 193 1 257 2 
343 1 270 1 94 1 239 2 329 1 23 1 50 1 233 2 160 5 195 2 171 1 313 1 93 1 350 1 257 5 366 2 215 1 89 1 40 2 
298 1 29 1 
202 1 43 1 229 2 371 2 296 2 298 2 77 1 186 1 315 1 
231 1 90 1 288 1 
238 1 82 1 248 1 144 1 273 1 371 1 296 1 169 1 180 1 35 1 298 1 163 1 114 1 210 1 363 1 115 1 
13 1 43 1 248 1 238 1 82 1 229 1 144 1 321 1 273 1 371 2 90 1 296 2 180 1 169 1 163 1 114 1 210 1 363 1 315 1 115 1 
298 1 202 1 13 1 43 3 229 3 371 3 296 3 315 3 
43 1 229 1 371 1 26 1 296 1 315 1 47 1 
43 1 202 1 229 1 77 1 371 1 186 1 296 1 315 1 47 1 
0 2 238 1 82 1 144 1 145 1 118 1 169 1 123 1 151 1 87 1 363 1 312 1 315 3 289 1 342 1 202 2 43 3 13 1 318 1 203 1 248 1 229 3 176 1 273 1 321 1 371 4 74 1 296 4 159 1 180 1 179 1 20 1 47 1 298 1 160 1 163 1 114 1 210 1 276 1 77 1 257 1 326 1 258 1 115 1 
298 1 43 1 13 1 229 2 165 1 371 2 296 2 315 1 62 1 
202 1 13 2 43 3 229 3 118 1 321 1 371 3 296 3 263 1 179 1 47 1 123 1 50 1 160 1 151 1 77 1 257 1 326 1 315 3 
13 1 202 1 43 2 229 2 371 2 296 2 90 1 77 1 315 2 288 1 
238 1 82 1 248 1 144 1 273 1 371 1 296 1 169 1 180 1 298 1 163 1 114 1 210 1 363 1 115 1 
56 1 238 1 82 1 248 1 144 1 371 1 296 1 169 1 374 1 180 1 298 1 114 1 210 1 363 1 115 1 
139 1 0 2 60 1 285 1 226 1 87 1 312 1 126 1 247 1 288 2 154 1 342 1 318 1 203 1 176 4 231 2 90 2 159 1 184 1 376 1 300 2 78 1 277 1 258 2 
43 1 229 1 371 1 352 1 296 1 179 1 315 1 47 1 
13 2 43 4 202 1 229 5 321 1 217 1 371 5 373 1 296 5 62 1 298 1 77 1 165 1 315 4 
43 2 229 2 371 2 352 1 26 1 296 2 315 2 47 1 
368 1 261 1 
368 1 261 1 
355 1 53 1 
355 1 53 1 
355 1 53 1 
348 1 368 1 261 1 
348 1 368 1 261 1 
283 1 368 1 261 1 
355 1 368 2 261 2 338 1 53 1 375 1 
348 1 368 1 261 1 
368 1 230 1 261 1 
368 1 230 1 261 1 
368 1 230 1 261 1 
354 1 12 2 368 2 129 1 261 2 345 1 262 2 83 1 252 1 50 1 182 2 160 2 225 1 337 1 152 2 338 1 213 3 54 2 257 2 
168 1 261 1 281 1 283 1 100 1 68 1 152 1 198 1 315 2 12 1 43 2 368 1 129 1 229 2 251 1 371 2 296 2 298 1 182 1 160 1 76 1 213 1 54 1 257 1 
162 1 204 1 119 1 
162 1 4 1 204 1 
322 1 183 1 162 3 4 1 209 1 119 2 
322 1 162 2 4 1 209 1 119 1 347 1 
322 2 162 2 4 1 209 1 119 1 
189 2 239 1 117 1 149 1 282 1 285 1 194 2 68 1 195 4 286 1 226 1 85 1 198 1 313 3 366 1 247 1 89 2 40 1 343 1 317 1 251 1 295 1 23 1 233 1 50 2 160 5 136 2 376 1 349 1 93 1 257 5 378 3 
55 5 239 6 190 5 95 1 117 3 285 3 194 6 68 4 224 1 195 7 286 2 226 3 313 8 366 2 247 3 89 6 40 2 270 1 317 1 343 1 14 1 157 1 295 3 23 1 50 5 233 2 160 9 136 6 376 3 349 2 254 1 93 1 257 9 138 1 378 9 
189 1 117 2 149 1 282 1 285 1 194 2 68 1 195 2 286 1 226 1 313 3 366 1 247 1 40 1 89 2 270 1 295 1 50 3 233 1 160 3 136 2 376 1 349 1 93 1 257 3 378 4 
189 2 95 1 117 3 149 1 282 1 285 2 194 4 68 2 224 1 195 3 286 1 226 2 313 5 366 1 247 2 40 1 89 4 270 1 295 2 50 4 233 1 160 4 136 4 376 2 349 1 254 1 93 1 257 4 378 7 
291 1 144 1 29 1 
144 1 121 1 
242 1 
248 1 144 1 
291 2 248 1 144 3 210 1 227 1 98 1 
248 1 144 1 210 1 
222 1 144 1 
71 1 80 1 176 7 17 1 60 2 64 1 285 1 124 1 300 4 197 1 78 3 302 1 365 1 173 2 377 1 258 3 247 1 
71 1 80 1 176 7 17 1 60 2 64 1 285 1 124 1 300 4 197 1 78 3 302 1 365 1 173 2 377 1 258 3 247 1 
30 1 71 1 80 1 176 7 17 1 60 2 64 1 285 1 124 1 300 4 197 1 78 3 302 1 365 1 173 2 377 1 258 3 247 1 
0 2 166 1 80 1 331 1 60 5 335 1 64 1 84 1 285 4 124 2 197 1 226 3 87 1 173 3 365 2 247 4 71 2 175 1 342 1 318 1 176 31 295 3 17 5 16 1 159 1 376 3 300 16 214 1 78 10 302 2 351 3 377 1 258 15 379 4 
0 4 60 3 84 1 64 1 285 1 124 1 196 1 197 1 87 2 173 2 365 1 247 1 342 2 71 1 318 2 176 9 17 1 75 1 159 2 300 5 78 4 302 1 377 1 258 4 
216 1 79 1 82 1 332 1 119 1 169 1 358 1 65 1 309 1 38 1 4 1 266 1 86 1 363 1 339 2 341 1 102 1 11 2 109 1 204 1 346 1 110 1 232 1 180 1 46 1 22 1 207 1 162 2 183 1 115 1 
216 1 82 1 332 1 119 1 169 1 65 1 309 1 38 1 4 1 266 1 86 1 363 1 339 3 9 1 102 1 11 3 201 1 109 1 204 1 271 1 346 1 110 1 232 1 180 1 46 2 22 1 207 1 183 1 162 2 115 1 
216 1 82 1 332 1 119 1 169 1 309 1 38 1 4 1 86 1 363 1 339 2 9 1 102 1 11 2 109 1 271 1 204 1 346 1 110 1 180 1 46 2 207 1 162 2 183 1 115 1 
82 1 238 1 144 1 332 2 333 1 169 1 170 1 359 1 336 1 309 2 266 1 363 1 339 1 11 1 201 1 316 1 248 1 110 2 232 1 180 1 207 2 212 1 115 1 
216 1 82 1 332 1 119 1 169 1 358 1 65 1 309 1 4 1 266 1 86 1 363 1 339 1 341 1 102 1 11 1 204 1 271 1 110 1 232 1 180 1 22 1 207 1 162 2 183 1 115 1 
140 1 
1 2 141 4 238 2 237 1 239 6 144 1 148 2 62 1 151 1 244 1 286 1 343 3 248 1 73 2 158 1 296 1 21 2 23 1 160 5 208 1 255 1 257 5 115 2 82 2 117 2 118 1 33 1 120 1 169 2 359 1 170 1 123 1 223 2 362 1 361 1 125 1 363 1 313 2 366 1 89 2 40 1 229 1 272 1 371 1 180 1 133 1 179 1 47 1 48 2 50 2 233 1 51 2 93 1 324 1 378 2 
141 2 343 1 239 2 229 1 272 1 118 1 371 1 193 1 120 1 296 1 179 1 133 1 47 1 62 1 123 1 151 1 160 3 223 1 208 1 255 1 257 3 324 1 
141 3 239 1 118 1 193 1 120 1 62 1 123 1 151 1 343 1 229 1 272 1 73 1 371 1 296 1 133 1 179 1 47 1 50 1 160 3 208 1 255 1 93 1 324 1 257 3 
141 3 239 2 118 1 193 1 120 1 62 1 123 1 151 1 223 1 343 1 229 1 272 1 73 1 371 1 296 1 133 1 179 1 47 1 48 1 50 1 160 3 208 1 255 1 93 1 324 1 257 3 
1 2 141 6 239 7 147 1 148 2 193 1 62 1 151 1 199 1 343 3 73 4 296 1 21 2 23 1 160 5 208 1 255 1 257 5 117 2 118 1 33 1 120 1 123 1 223 4 125 1 313 1 366 1 40 1 89 1 228 1 229 1 272 1 320 1 371 1 131 1 179 1 133 1 47 1 48 4 50 5 233 1 51 2 93 5 324 1 
1 2 141 4 239 4 148 2 62 1 151 1 343 2 73 2 296 1 21 2 23 1 160 4 208 1 255 1 257 4 117 2 118 1 33 1 120 1 123 1 223 2 362 1 125 1 313 1 366 1 40 1 89 1 229 1 272 1 371 1 179 1 133 1 47 1 48 2 233 1 50 2 51 2 93 1 324 1 378 2 
1 2 141 4 239 4 117 2 148 2 118 1 33 1 120 1 62 1 123 1 151 1 223 2 125 1 313 1 199 1 366 1 89 1 40 1 228 1 343 2 229 1 272 1 73 2 131 1 371 1 296 1 133 1 179 1 21 2 47 1 48 2 23 1 50 1 233 1 160 4 208 1 51 2 255 1 93 1 324 1 257 4 
1 2 141 4 239 4 117 2 148 2 118 1 33 1 120 1 62 1 123 1 151 1 223 2 125 1 313 1 199 1 366 1 89 1 40 1 228 1 343 2 229 1 272 1 73 2 131 1 371 1 296 1 133 1 179 1 21 2 47 1 48 2 23 1 50 1 233 1 160 4 208 1 51 2 255 1 93 1 324 1 257 4 
1 2 141 4 239 4 96 1 118 1 120 1 62 1 123 1 151 1 223 2 125 1 313 1 314 1 366 1 103 2 89 1 40 1 343 2 229 1 272 1 73 2 131 1 371 1 296 1 133 1 179 1 47 1 48 2 49 1 23 1 50 1 233 1 160 4 208 1 299 2 51 2 255 1 93 1 324 1 257 4 378 2 
1 2 141 5 239 5 117 2 147 1 148 2 118 1 33 1 120 1 62 1 123 1 151 1 223 3 125 1 313 1 199 1 366 1 89 1 40 1 228 1 343 2 229 1 272 1 73 3 131 1 371 1 296 1 133 1 179 1 21 2 47 1 48 3 23 1 50 1 233 1 160 4 208 1 51 2 255 1 93 1 324 1 257 4 
1 2 141 5 239 5 117 2 147 1 148 2 118 1 33 1 120 1 62 1 123 1 151 1 223 3 125 1 313 1 199 1 366 1 89 1 40 1 228 1 343 2 229 1 272 1 73 3 131 1 371 1 296 1 133 1 179 1 21 2 47 1 48 3 23 1 50 1 233 1 160 4 208 1 51 2 255 1 93 1 324 1 257 4 
1 2 141 4 239 4 62 1 151 1 103 2 343 2 73 2 296 1 23 1 160 4 208 1 299 2 255 1 257 4 118 1 120 1 123 1 223 2 362 1 125 1 313 1 366 1 40 1 89 1 229 1 272 1 371 1 179 1 133 1 47 1 49 1 48 2 233 1 50 1 51 2 93 1 324 1 378 2 
154 1 0 2 342 1 203 1 318 1 176 6 60 2 231 1 90 1 159 1 298 2 64 1 285 1 124 1 300 3 197 1 78 2 87 1 302 1 312 1 173 1 377 1 258 3 247 1 29 1 288 1 
280 1 0 4 97 1 60 1 34 1 335 1 285 1 226 1 87 2 312 2 247 2 288 4 342 2 318 2 203 1 176 14 17 1 295 2 231 11 90 11 159 2 20 1 298 1 376 2 300 8 214 1 78 2 28 1 27 1 351 3 258 6 379 3 353 1 
0 2 82 1 238 1 144 1 306 1 169 1 35 1 34 1 363 1 87 1 312 1 267 1 315 1 288 1 342 1 43 1 13 1 248 1 72 1 203 1 318 1 229 1 176 2 273 1 321 1 371 2 296 2 180 1 159 1 20 1 298 1 163 1 114 1 210 1 300 1 258 1 115 1 353 1 
0 6 238 1 144 2 60 4 64 1 285 3 197 1 70 1 247 3 288 7 342 3 13 1 203 3 248 2 344 2 295 2 17 4 296 3 159 3 18 2 20 1 298 2 163 2 114 2 210 2 300 10 78 8 302 1 258 10 115 3 353 1 356 1 259 2 82 3 169 3 34 1 124 1 226 2 87 3 363 2 39 1 312 3 173 1 315 1 43 1 318 3 229 1 271 1 176 20 321 1 273 2 371 3 231 7 90 7 180 2 91 2 376 2 276 2 377 1 
0 4 79 1 167 1 82 8 238 2 260 1 144 3 169 8 150 1 170 1 359 1 363 2 87 2 312 2 315 1 41 2 154 1 342 2 43 1 13 1 318 2 203 2 248 2 229 1 271 1 176 2 371 1 296 1 180 2 159 2 20 1 206 1 300 1 187 1 325 1 258 1 115 7 235 1 353 1 
0 2 305 1 60 1 34 1 285 1 226 1 87 1 312 1 315 1 247 1 288 1 342 1 43 1 202 1 318 1 203 1 229 1 176 3 371 1 295 1 231 1 90 1 296 1 159 1 376 1 300 1 77 1 78 1 258 2 
154 1 0 2 342 1 203 1 318 1 176 2 17 1 231 1 90 1 159 1 376 1 300 2 78 1 87 1 312 1 126 1 247 1 288 1 
154 1 0 2 342 1 203 1 318 1 176 2 60 1 231 1 90 1 159 1 285 1 184 1 226 1 78 1 87 1 312 1 258 2 288 1 
0 2 60 1 285 1 226 1 87 1 312 1 247 1 288 2 154 1 342 1 318 1 203 1 176 4 295 1 17 1 231 2 90 2 159 1 376 1 300 2 78 2 258 2 
0 2 342 1 203 1 318 1 176 2 17 1 231 1 90 1 159 1 206 1 376 1 300 2 78 1 87 1 312 1 126 1 247 1 288 1 
0 2 342 1 203 1 318 1 176 2 60 1 231 1 90 1 159 1 206 1 285 1 184 1 226 1 78 1 87 1 312 1 258 2 288 1 
0 2 60 1 285 1 226 1 87 1 312 1 247 1 288 2 342 1 318 1 203 1 176 4 295 1 17 1 231 2 90 2 159 1 206 1 376 1 300 2 78 2 258 2 
0 2 342 1 203 1 318 1 176 4 60 1 17 1 295 1 231 2 90 2 159 1 285 1 376 1 226 1 300 2 78 2 87 1 312 1 258 2 247 1 288 2 
0 2 82 1 238 1 144 1 169 1 363 1 87 1 312 1 342 1 248 1 203 1 318 1 176 2 273 1 371 1 296 1 180 1 159 1 20 1 298 1 163 1 114 1 300 1 210 1 276 1 258 1 115 1 353 1 
56 1 0 2 81 1 82 1 238 1 144 1 169 1 363 1 87 1 312 1 342 1 248 1 203 1 318 1 176 2 371 1 296 1 180 1 374 1 159 1 20 1 298 1 114 1 300 1 210 1 258 1 115 1 353 1 
0 2 60 1 34 1 285 1 226 1 87 1 312 1 247 1 288 2 342 1 318 1 203 1 176 4 295 1 17 1 231 2 90 2 159 1 376 1 300 2 78 2 258 2 
0 2 79 1 82 1 144 1 60 1 169 1 285 1 226 1 363 1 87 1 312 1 247 1 288 2 342 1 248 1 203 1 318 1 176 4 273 1 17 1 371 1 295 1 231 2 90 2 296 1 180 1 18 1 159 1 163 1 376 1 114 1 300 2 210 1 276 1 78 2 258 2 115 1 
0 2 34 1 285 1 226 1 87 1 312 1 315 1 247 1 288 1 342 1 105 1 43 1 202 1 318 1 203 1 229 1 176 3 17 1 371 1 295 1 231 1 296 1 90 1 159 1 376 1 300 2 77 1 78 1 258 1 
0 6 240 1 143 2 60 4 335 1 64 1 285 5 196 1 197 1 246 4 247 5 342 3 17 4 295 4 159 3 113 1 161 1 24 1 300 20 78 8 214 3 302 1 351 3 258 21 304 1 36 1 84 1 37 1 221 1 124 1 226 4 87 3 173 1 367 1 128 1 318 3 176 41 178 1 323 1 135 1 376 4 377 1 379 4 
0 8 304 1 240 1 143 2 60 4 335 1 64 1 37 1 84 2 36 1 221 1 285 4 124 1 196 1 197 1 226 3 87 4 173 1 246 4 367 1 247 5 128 1 342 4 318 4 176 38 295 4 17 3 178 1 159 4 113 1 323 1 161 1 135 1 24 1 376 4 300 20 214 3 78 7 302 1 351 3 377 1 258 18 379 4 
0 4 304 1 240 1 143 1 97 2 60 7 335 2 64 1 84 1 37 1 36 1 221 1 285 8 124 1 196 1 197 1 226 7 87 2 173 1 246 4 367 1 247 8 342 2 318 2 176 52 295 7 17 7 178 1 159 2 113 1 323 1 161 1 135 1 376 7 300 27 214 2 78 14 302 1 351 4 377 1 258 25 379 4 
0 4 304 1 143 1 60 3 335 1 36 1 285 3 196 1 226 3 87 2 246 2 367 1 247 3 342 2 318 2 176 19 295 3 17 3 159 2 323 2 135 1 24 1 376 3 300 9 164 1 214 1 78 6 351 1 258 10 379 2 
0 6 304 1 240 1 143 2 60 2 37 1 84 2 36 1 221 1 285 2 196 1 226 2 87 3 246 4 367 2 247 3 342 3 318 3 176 26 17 2 295 3 178 1 159 3 113 1 323 1 161 1 135 1 376 3 300 14 78 4 214 2 351 2 258 12 379 2 
354 1 252 1 12 1 182 1 368 1 261 1 152 1 338 1 54 1 380 1 
283 1 281 1 
12 1 182 1 368 1 261 1 152 1 25 1 54 1 303 1 308 1 
354 1 12 1 368 1 129 1 261 1 345 1 262 1 252 1 50 1 182 1 160 1 225 1 337 1 152 1 338 1 213 2 54 1 257 1 
354 1 12 1 368 1 129 1 261 1 345 1 262 1 252 1 50 1 182 1 160 1 225 1 337 1 152 1 338 1 213 2 54 1 257 1 
354 1 12 1 368 1 129 1 261 1 345 1 262 1 252 1 50 1 182 1 160 1 225 1 337 1 152 1 338 1 213 2 54 1 257 1 
243 1 348 1 375 1 
243 1 348 1 375 1 
42 1 230 1 
42 1 230 1 375 1 
100 1 76 1 
168 1 261 1 262 1 281 1 283 1 100 1 68 1 195 1 337 1 152 1 198 1 315 2 12 1 43 2 368 1 229 2 251 1 371 2 296 2 297 1 298 1 182 1 160 1 76 1 213 1 54 1 257 1 
243 1 348 1 
42 1 230 1 375 1 
0 2 142 1 82 2 144 1 169 2 34 1 360 1 6 1 363 1 87 1 312 1 41 2 342 1 248 1 203 1 318 1 229 2 156 1 108 1 176 2 371 2 296 2 180 1 159 1 20 1 300 1 325 1 258 1 115 2 235 1 353 1 
216 1 79 1 82 2 319 1 204 1 271 1 294 1 119 1 180 1 169 2 22 1 207 1 183 1 162 2 4 1 86 1 363 1 88 1 115 2 
268 1 216 1 82 1 319 1 204 1 271 1 119 1 169 1 180 1 22 1 207 1 183 1 162 2 4 1 86 1 363 1 115 1 
248 1 238 1 82 1 144 1 180 1 169 1 170 1 359 1 336 1 207 1 363 1 88 1 115 1 340 1 
216 1 82 1 319 1 204 1 271 1 294 1 119 1 180 1 169 1 22 1 207 1 183 1 162 2 4 1 86 1 363 1 88 1 115 1 
44 1 
50 1 171 1 313 1 93 1 215 1 29 1 89 1 
239 1 117 1 148 1 33 1 313 1 366 1 89 1 40 1 343 1 21 1 23 1 233 1 50 2 160 1 93 1 257 1 378 1 
238 1 239 5 144 10 330 2 2 2 194 6 285 2 286 2 247 2 290 2 291 2 343 3 248 3 344 2 293 1 158 1 295 2 23 4 160 5 210 3 257 5 215 1 115 3 79 1 82 3 117 6 118 2 121 3 169 3 264 2 222 2 310 1 226 2 171 1 363 3 313 9 227 1 366 4 127 1 40 4 89 8 369 2 177 1 132 2 180 4 233 4 50 8 234 1 136 6 376 2 52 2 93 2 279 2 378 12 
239 1 117 3 37 1 221 1 194 4 285 1 226 1 313 5 366 2 247 1 40 2 89 3 343 1 295 1 178 1 113 1 23 2 233 2 50 4 160 1 161 1 136 4 376 1 214 1 93 1 257 1 278 1 351 1 279 1 378 6 379 1 
59 1 145 1 2 1 219 1 285 1 124 1 313 2 199 1 366 1 315 1 247 2 40 1 89 2 202 1 43 1 229 1 371 1 45 1 296 1 47 1 23 1 233 1 160 1 302 1 26 1 257 1 279 2 377 1 
23 1 233 1 50 1 171 1 93 1 313 1 366 1 215 1 40 1 89 1 
344 1 117 5 2 1 295 2 194 5 50 5 285 2 136 5 376 2 226 2 313 5 279 2 378 10 247 2 89 5 
50 1 160 1 343 1 239 1 93 1 257 1 
82 4 238 2 57 1 239 4 144 1 169 4 170 1 359 1 244 1 361 1 286 2 310 2 363 1 313 2 366 2 40 2 89 2 270 1 343 2 248 1 205 1 158 2 177 1 180 1 23 1 233 2 160 3 257 3 115 4 
0 2 82 1 238 1 145 1 144 1 169 1 87 1 363 1 312 1 315 2 342 1 43 2 202 2 318 1 248 1 203 1 229 2 176 1 273 1 371 3 74 1 296 3 159 1 180 1 20 1 298 1 163 1 114 1 210 1 276 1 258 1 115 1 
117 2 158 1 23 1 194 2 233 1 50 4 136 2 286 1 313 1 93 2 173 1 378 4 366 1 89 2 40 1 
12 1 15 1 54 1 
12 1 15 1 54 1 
354 1 12 1 292 1 76 1 54 1 
12 1 15 1 54 1 
12 1 54 1 63 1 
12 1 54 1 63 1 
12 1 54 1 63 1 
12 1 54 1 
368 1 261 1 
0 2 60 2 64 1 285 1 124 1 196 1 197 1 87 1 173 1 247 1 342 1 318 1 176 8 159 1 113 1 300 4 214 1 78 2 302 1 351 1 377 1 258 4 379 1 
0 4 60 2 218 1 335 1 64 1 285 1 124 1 196 1 197 1 87 2 173 1 247 2 342 2 318 2 176 11 295 1 17 1 159 2 113 1 376 1 300 6 214 1 78 3 302 1 351 1 377 1 258 5 379 2 
0 6 60 3 218 1 64 1 37 1 84 1 285 3 221 1 124 1 196 1 197 1 226 2 87 3 173 1 247 3 342 3 318 3 176 19 17 1 295 2 178 1 159 3 113 1 161 1 376 2 300 9 214 1 78 4 302 1 351 1 377 1 258 10 379 1 
0 6 60 3 218 1 64 1 84 1 37 1 285 2 221 1 124 1 196 1 197 1 226 1 87 3 173 1 247 3 342 3 318 3 176 17 17 2 295 2 178 1 159 3 113 1 161 1 376 2 300 10 214 1 78 5 302 1 351 1 377 1 258 7 379 1 
0 2 60 2 64 1 285 1 124 1 196 1 197 1 87 1 173 1 247 1 342 1 318 1 176 8 159 1 113 1 300 4 214 1 78 2 302 1 351 1 377 1 258 4 379 1 
0 2 60 1 37 1 285 2 221 1 196 1 226 2 87 1 247 2 342 1 318 1 176 12 17 1 295 2 178 1 159 1 113 1 161 1 376 2 300 6 214 1 78 2 351 1 258 6 379 1 
0 8 60 3 218 1 64 1 37 1 84 2 221 1 285 2 124 1 196 1 197 1 226 1 87 4 173 1 247 3 342 4 318 4 176 18 17 2 295 2 178 1 159 4 113 1 161 1 376 2 300 10 214 1 78 5 302 1 351 1 377 1 258 8 379 1 
0 8 60 3 37 1 84 2 221 1 285 2 196 1 226 2 87 4 247 3 342 4 318 4 176 16 17 3 295 3 178 1 159 4 113 1 161 1 24 1 376 3 300 9 214 1 78 6 351 1 258 7 379 1 
176 7 60 3 17 3 64 2 285 1 124 3 197 1 300 3 78 6 302 3 377 1 258 4 247 1 
0 8 60 3 64 1 37 1 84 2 221 1 285 2 124 1 196 1 197 1 226 1 87 4 173 1 247 3 342 4 318 4 176 18 17 1 295 2 178 1 159 4 113 1 161 1 24 1 376 2 300 10 214 1 78 4 302 1 351 1 377 1 258 8 379 1 
0 4 342 2 318 2 176 8 17 1 60 2 159 2 84 1 64 1 285 1 124 1 300 4 197 1 78 3 87 2 302 1 173 1 377 1 258 4 247 1 
64 1 285 1 124 1 176 6 300 3 197 1 78 2 60 2 302 1 173 1 377 1 258 3 247 1 29 1 
0 2 342 1 318 1 176 4 60 1 295 1 17 1 218 1 159 1 285 1 376 1 226 1 300 2 78 2 87 1 258 2 247 1 
176 7 60 1 295 1 17 1 335 1 285 1 376 1 226 1 300 3 214 1 78 2 351 1 258 4 379 2 247 1 
0 4 60 5 97 1 241 1 335 1 64 1 84 2 285 3 124 2 197 1 226 2 87 2 173 1 247 3 342 2 318 2 176 23 17 4 295 2 159 2 376 2 300 11 78 9 302 2 351 2 27 1 377 1 258 12 379 2 
176 1 258 1 379 1 
176 1 300 1 351 1 
0 2 342 1 318 1 344 1 176 6 295 1 17 1 60 2 159 1 218 1 285 1 376 1 300 3 226 1 87 1 78 3 258 3 247 1 
0 2 60 1 37 1 285 2 221 1 196 1 226 2 87 1 247 2 342 1 318 1 176 12 17 1 295 2 178 1 159 1 113 1 161 1 376 2 300 6 214 1 78 2 351 1 258 6 379 1 
176 6 60 1 17 1 285 1 124 1 300 3 78 2 302 1 377 1 258 3 247 1 
0 2 342 1 318 1 176 3 17 1 60 1 241 1 159 1 64 1 84 1 124 1 300 1 197 1 78 2 87 1 302 1 258 2 
0 2 342 1 318 1 59 1 176 10 60 3 17 2 159 1 285 2 124 2 196 1 300 5 87 1 78 5 302 2 377 1 258 5 247 2 
0 2 342 1 318 1 176 2 17 1 159 1 196 1 376 1 300 2 87 1 78 1 247 1 
0 2 342 1 318 1 176 4 60 1 295 1 17 1 159 1 285 1 196 1 376 1 226 1 300 2 78 2 87 1 258 2 247 1 
0 6 342 3 318 3 176 3 241 1 60 1 17 1 159 3 84 1 124 1 24 1 196 1 300 1 87 3 78 2 302 1 258 2 
0 10 331 1 241 1 60 7 218 1 335 1 64 1 84 2 285 5 124 3 196 1 197 1 226 3 87 5 173 1 247 5 175 1 342 5 318 5 176 34 16 1 295 3 17 5 159 5 24 1 376 3 300 16 214 1 78 12 302 3 351 3 377 2 258 18 379 4 
298 1 284 1 229 1 165 1 371 1 296 1 62 1 
236 1 327 1 229 1 371 1 296 1 62 1 298 1 284 1 253 1 101 1 165 1 137 1 
248 1 82 1 238 1 144 1 363 1 180 1 169 1 359 1 170 1 29 1 115 1 
13 1 43 1 248 1 238 1 82 1 229 1 144 1 371 2 296 2 180 1 169 1 298 1 163 1 114 1 210 1 363 1 315 1 115 1 
13 1 43 1 248 2 82 1 229 2 144 3 330 1 371 2 296 2 179 1 180 1 169 1 47 1 298 1 222 1 151 1 163 1 114 1 210 2 310 1 363 1 315 2 115 1 
13 1 43 1 248 2 82 2 229 2 144 3 330 1 371 2 296 2 179 1 180 1 169 2 374 1 47 1 298 1 222 1 151 1 265 1 114 1 210 2 310 1 363 1 315 2 115 2 
291 1 238 1 248 1 82 3 239 1 130 1 144 4 118 1 330 1 121 1 180 1 169 3 50 1 222 1 160 2 265 1 210 1 310 1 363 1 93 1 364 1 257 2 115 3 
291 1 238 1 248 1 82 3 369 1 239 1 144 4 118 1 330 1 121 1 180 1 169 3 50 1 222 1 160 2 265 1 210 1 310 1 363 1 93 1 257 2 115 3 
82 1 363 1 180 1 169 1 115 1 150 1 
41 1 79 1 167 1 269 1 238 2 82 7 155 1 248 2 271 1 260 1 144 3 192 1 169 7 180 3 150 1 210 1 363 2 227 1 187 1 325 1 115 6 
0 4 259 1 79 1 82 1 144 1 60 2 169 1 34 1 64 1 285 1 124 1 197 1 363 1 87 2 312 2 173 1 315 1 247 1 288 1 342 2 43 1 13 1 248 1 203 2 318 2 229 1 156 1 176 6 273 1 371 2 231 1 90 1 296 2 180 1 159 2 18 1 298 2 163 1 114 1 300 3 210 1 276 1 78 2 302 1 377 1 258 3 115 1 
82 1 238 1 239 2 144 2 118 1 121 1 169 1 264 1 195 1 171 1 313 1 366 2 89 1 40 2 290 1 291 1 343 1 369 1 177 1 23 2 50 1 233 2 160 3 52 1 93 1 257 3 215 1 115 1 
291 1 79 1 82 2 248 1 144 2 169 2 180 2 150 1 210 1 363 1 227 1 115 2 127 1 
79 1 238 1 82 4 248 1 32 1 144 1 180 1 169 4 170 1 359 1 265 1 363 1 115 4 
356 1 269 1 82 2 248 1 106 1 144 1 192 1 169 2 180 2 181 1 310 1 210 1 363 1 115 2 
216 1 162 1 4 1 82 1 238 1 204 1 363 1 180 1 169 1 115 1 
79 1 248 1 360 1 82 2 271 1 144 1 363 1 325 1 180 1 169 2 115 2 
79 1 238 1 82 5 248 2 32 1 260 1 144 3 169 5 180 2 359 1 170 1 310 1 363 2 325 1 187 1 115 4 
79 1 238 1 82 5 248 2 107 1 32 1 144 3 169 5 180 2 359 1 170 1 310 1 363 2 325 1 187 1 115 4 
13 1 43 1 248 1 238 1 82 1 229 1 144 1 371 2 296 2 180 1 169 1 374 1 298 1 114 1 210 1 363 1 315 1 115 1 
269 1 82 1 155 1 248 1 144 1 192 1 169 1 180 2 310 1 210 1 363 1 227 1 115 1 
142 1 229 1 108 1 6 1 287 1 328 1 256 1 371 1 296 1 
5 1 287 1 334 1 
298 1 307 1 328 1 287 1 256 1 
307 2 328 2 118 1 334 1 179 1 47 1 220 1 298 1 123 1 50 1 151 1 160 2 195 1 5 1 287 1 256 2 93 1 257 2 326 1 
38 1 109 1 346 1 29 1 
11 1 38 1 109 1 266 1 346 1 232 1 339 1 
11 1 309 1 110 1 
11 3 109 1 346 1 232 1 358 1 66 1 67 1 38 1 266 1 211 2 8 1 339 3 
11 2 38 1 109 1 266 1 346 1 3 1 232 1 46 1 339 2 
11 1 162 1 38 1 134 1 204 1 266 1 232 1 119 1 358 1 116 1 339 1 
11 1 38 1 109 1 266 1 232 1 358 1 339 1 
11 1 109 2 266 1 346 1 232 1 358 1 339 1 
11 2 31 1 191 1 109 1 232 2 358 1 99 1 38 1 266 2 339 2 
11 3 109 1 357 1 346 1 232 1 358 1 46 2 134 1 38 2 266 1 172 1 153 1 339 3 
11 2 370 1 109 1 204 1 346 1 232 1 119 1 358 1 46 1 38 1 4 1 162 2 183 1 266 1 339 2 
11 4 109 1 58 1 357 1 346 1 3 1 232 2 358 1 46 2 134 1 38 2 266 2 339 4 
11 1 38 1 109 1 266 1 346 1 232 1 358 1 339 1 
11 4 109 2 357 1 346 2 111 1 232 1 46 2 67 1 66 1 134 1 38 3 266 1 211 1 339 4 
11 2 109 1 250 1 346 1 232 1 372 1 358 1 46 1 38 1 92 1 266 1 339 2 
11 3 109 1 346 1 232 1 358 1 66 1 67 2 38 1 266 1 211 2 339 3 104 1 
38 2 112 1 174 2 61 1 
11 1 266 1 311 1 232 1 358 1 339 1 
11 2 38 1 109 1 266 1 346 1 172 1 232 1 358 1 46 1 339 2 
122 1 
11 1 38 1 109 1 266 1 346 1 232 1 358 1 339 1 
11 3 109 1 346 1 232 1 358 1 46 1 38 1 266 1 211 1 172 1 339 3 
38 1 134 1 357 1 111 1 
38 1 109 1 

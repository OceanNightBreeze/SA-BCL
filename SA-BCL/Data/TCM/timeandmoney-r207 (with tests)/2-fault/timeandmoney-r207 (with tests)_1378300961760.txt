#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
264 4 75 1 173 2 267 1 6 9 148 1 205 1 228 5 9 1 273 2 212 6 302 1 351 2 372 2 215 1 135 1 306 1 237 9 46 2 217 1 23 1 25 1 286 2 287 2 50 3 70 1 194 1 315 1 
264 4 75 1 173 2 267 1 6 9 148 1 205 1 228 5 9 1 273 2 212 6 302 1 351 2 372 2 215 1 135 1 306 1 237 9 46 2 217 1 23 1 25 1 286 2 287 2 50 3 70 1 194 1 315 1 
264 5 75 1 173 2 267 1 6 10 148 1 205 1 228 6 9 1 273 2 212 7 302 1 351 2 372 2 215 1 135 1 306 1 237 10 46 2 217 1 23 1 25 1 286 2 287 2 50 4 70 1 194 1 315 1 
264 3 173 2 267 1 6 7 148 1 205 1 228 4 9 1 273 2 212 4 302 1 351 1 372 2 215 1 135 1 306 1 237 7 46 2 217 1 23 1 25 1 286 2 287 2 50 2 70 1 194 1 315 1 
351 2 264 2 372 1 75 1 173 1 215 1 46 1 237 4 23 1 6 4 205 1 228 3 286 1 287 1 50 1 70 1 212 3 302 1 
372 1 173 1 189 1 46 1 237 2 23 1 6 2 25 1 228 1 286 1 124 1 273 1 70 1 171 1 315 1 302 1 
264 1 372 2 46 2 237 3 23 1 6 3 228 2 50 1 273 1 70 1 194 1 212 1 302 1 
351 2 111 1 264 4 372 2 75 1 173 1 215 1 46 2 237 9 217 1 23 1 6 9 205 1 57 1 228 5 9 1 286 1 287 1 50 3 273 1 70 1 194 1 212 7 302 1 
351 2 111 1 264 4 372 2 75 1 173 1 215 1 46 2 237 9 217 1 23 1 6 9 205 1 57 1 228 5 9 1 286 1 287 1 50 3 273 1 70 1 194 1 212 7 302 1 
330 1 258 1 255 1 
151 1 328 2 255 1 
213 2 122 2 17 2 18 1 378 1 331 2 324 2 132 2 
1 1 346 1 32 1 150 1 295 1 82 1 247 2 367 1 38 1 109 1 130 1 324 2 231 1 132 3 352 2 371 1 213 3 234 1 17 2 113 1 18 1 90 1 134 2 331 2 375 1 118 1 356 2 282 1 337 1 122 2 190 1 259 2 378 1 241 1 140 1 288 1 51 1 
213 1 122 1 17 1 182 1 18 1 331 1 324 1 238 1 157 1 132 1 
213 1 330 1 331 1 255 1 224 1 35 1 238 1 209 1 192 1 242 1 83 1 154 1 291 1 132 1 
213 1 17 1 330 1 331 1 255 1 224 1 35 1 238 1 122 1 209 2 83 1 154 1 291 2 324 1 132 1 
209 1 41 1 370 1 291 1 15 1 
152 1 330 1 209 2 255 1 322 1 41 1 370 1 291 2 
209 1 41 1 291 1 
249 1 213 1 17 1 18 1 331 1 238 1 122 1 182 1 209 1 370 1 291 1 324 1 157 1 132 1 
255 1 
152 1 330 1 209 2 255 1 39 1 41 1 370 1 291 2 
101 1 330 1 317 1 255 1 334 2 204 2 49 1 270 1 227 2 152 1 310 1 209 5 168 1 210 1 41 2 71 1 370 2 291 5 142 1 
258 1 378 1 
213 2 17 1 331 2 176 1 122 1 378 2 170 1 324 1 132 2 
112 1 369 1 119 1 
213 1 1 1 346 1 356 1 150 1 282 1 82 1 295 1 247 1 259 1 378 1 321 1 130 1 109 1 231 1 132 1 
213 2 1 1 17 1 112 1 346 1 331 1 307 1 356 1 282 1 150 1 295 1 82 1 247 1 122 1 259 1 28 1 109 1 130 1 231 1 132 2 
213 5 17 4 45 1 147 1 331 5 374 1 307 1 176 1 122 4 378 1 242 1 28 2 324 1 132 5 
213 2 122 2 17 2 182 1 331 2 54 1 238 1 132 2 
213 3 122 3 17 3 378 1 28 1 331 3 324 1 132 3 
213 1 122 1 17 1 182 1 331 1 238 1 132 1 
213 1 122 1 17 1 331 1 170 1 324 1 176 1 238 1 132 1 
1 1 346 1 32 1 224 1 35 1 176 1 150 1 295 1 82 1 247 1 367 1 209 1 83 1 154 1 109 1 130 1 324 2 231 1 132 4 352 1 371 1 213 4 17 3 18 1 90 1 134 2 331 3 375 1 307 1 118 1 356 1 282 1 238 1 337 1 283 1 122 3 190 1 259 1 378 1 241 1 28 1 51 1 291 1 379 1 
213 2 122 1 17 1 378 1 242 1 147 1 331 2 28 1 132 2 
213 3 17 3 331 3 255 1 224 1 307 1 176 1 35 1 238 1 283 1 122 3 209 1 83 1 28 2 153 1 154 1 324 1 291 1 132 3 
213 2 17 2 112 1 331 2 119 1 176 1 122 2 28 1 324 1 132 2 
213 1 1 1 346 1 356 1 150 1 282 1 82 1 295 1 247 1 259 1 378 1 130 1 109 1 231 1 132 1 
213 1 1 1 76 1 346 1 356 1 282 1 295 1 247 1 259 1 378 1 130 1 109 1 301 1 231 1 132 1 
352 2 371 1 112 1 100 1 216 1 90 1 134 2 32 1 355 1 375 1 119 1 319 1 337 1 180 1 163 1 190 2 369 1 40 1 51 1 
213 1 122 1 17 1 331 1 224 1 54 1 238 1 132 1 
218 1 340 1 
218 1 340 1 
265 1 232 1 
265 1 232 1 
265 1 232 1 
293 1 218 1 340 1 
293 1 218 1 340 1 
8 1 218 1 340 1 
218 2 265 1 254 1 340 2 233 1 232 1 
293 1 218 1 340 1 
166 1 218 1 340 1 
166 1 218 1 340 1 
166 1 218 1 340 1 
199 1 30 1 177 1 8 1 209 1 184 1 85 1 185 1 132 2 325 1 213 2 250 1 17 2 251 1 331 2 336 1 26 1 122 2 218 1 378 1 340 1 291 1 290 1 360 1 
2 1 30 2 254 1 255 1 336 2 56 1 26 1 218 2 209 2 272 1 27 1 184 2 37 1 59 1 340 2 85 3 291 2 185 2 61 2 
286 1 173 1 287 1 
286 1 173 1 189 1 
173 3 240 1 287 2 91 1 189 1 136 1 
173 2 240 1 287 1 91 1 189 1 81 1 
173 2 287 1 240 2 91 1 189 1 
100 1 101 3 266 1 175 1 204 1 104 1 177 1 151 1 227 1 152 1 209 5 230 1 41 1 370 4 42 2 300 1 327 2 328 3 330 1 251 1 116 1 255 2 334 1 163 1 167 1 310 1 96 1 71 2 125 1 72 2 291 5 360 1 
195 1 100 3 145 1 101 8 317 1 266 3 201 1 204 2 104 2 151 3 227 2 365 1 152 1 209 9 230 3 41 6 370 7 42 6 300 1 15 5 278 5 329 1 328 9 251 4 330 1 255 5 334 2 376 1 163 3 310 1 96 3 71 6 125 2 72 6 291 9 
100 1 101 3 317 1 266 1 175 1 204 1 104 1 151 2 227 1 209 3 230 1 370 2 42 2 327 1 328 4 330 1 251 1 255 3 334 1 163 1 167 1 96 1 125 1 71 2 291 3 72 2 
195 1 100 2 145 1 101 5 317 1 266 2 175 1 204 1 104 1 151 3 227 1 209 4 230 2 370 3 42 4 327 2 329 1 328 7 330 1 251 2 255 4 334 1 163 2 167 1 96 2 125 1 71 4 72 4 291 4 
1 1 279 1 258 1 
1 1 274 1 
308 1 
1 1 109 1 295 1 
1 1 73 1 
1 1 295 1 
1 3 279 2 223 1 109 1 137 1 295 1 
352 7 62 1 20 1 236 1 280 1 355 2 357 1 163 1 180 3 320 1 257 1 208 1 190 3 96 1 140 4 43 1 52 2 
352 7 62 1 20 1 236 1 280 1 355 2 357 1 163 1 180 3 320 1 257 1 208 1 190 3 96 1 140 4 43 1 52 2 
62 1 352 7 20 1 236 1 280 1 355 2 357 1 163 1 180 3 320 1 257 1 208 1 190 3 96 1 140 4 110 1 43 1 52 2 
222 3 100 3 294 1 266 3 55 1 180 10 320 1 208 1 230 3 298 1 43 2 62 1 371 1 352 31 305 1 20 5 114 4 90 1 236 2 134 2 280 2 355 5 375 1 357 2 163 4 94 1 257 1 190 15 311 1 96 4 260 1 140 16 51 1 52 3 
144 1 180 4 320 1 298 1 43 1 371 2 352 9 62 1 20 1 90 2 134 4 236 1 280 1 355 3 375 2 93 1 357 1 163 1 257 1 190 4 96 1 140 5 51 2 52 2 
173 2 346 1 103 1 202 1 174 1 6 2 206 1 247 1 228 1 36 1 273 1 212 1 302 1 276 1 235 1 372 1 189 1 237 2 46 1 136 1 23 1 356 1 48 1 282 1 286 1 287 1 259 1 69 1 70 1 243 1 
173 2 346 1 202 1 246 1 5 1 174 1 6 3 206 1 247 1 228 1 36 1 273 1 212 2 276 1 372 1 188 1 189 1 136 1 237 3 46 1 23 1 356 1 48 1 282 1 286 1 287 1 259 1 69 1 70 1 243 1 
173 2 346 1 202 1 246 1 174 1 6 2 206 1 247 1 228 1 36 1 273 1 212 2 188 1 189 1 237 2 136 1 23 1 356 1 282 1 286 1 259 1 287 1 69 1 70 1 243 1 
244 1 1 1 372 1 346 1 202 2 65 1 5 1 46 1 237 1 356 1 6 1 282 1 295 1 239 1 247 1 206 2 259 1 273 2 289 1 243 2 263 1 130 1 350 1 
173 2 346 1 202 1 174 1 6 1 206 1 247 1 36 1 273 1 302 1 276 1 235 1 372 1 188 1 189 1 237 1 46 1 136 1 356 1 48 1 282 1 286 1 287 1 259 1 69 1 243 1 
133 1 
53 2 1 1 198 2 101 2 346 1 104 1 204 1 295 1 151 2 247 2 152 3 209 5 58 2 154 1 14 2 155 1 213 1 160 4 63 1 117 1 255 2 356 2 164 1 310 1 259 2 263 1 71 2 34 1 224 1 225 1 35 1 227 1 366 2 83 1 41 6 130 2 132 1 328 2 330 1 89 2 332 2 331 1 334 1 335 1 282 1 238 1 192 1 95 1 339 1 242 1 289 1 141 1 341 1 291 5 342 1 
213 1 160 2 332 1 117 1 331 1 224 1 34 1 35 1 238 1 164 1 152 1 209 3 192 1 83 1 242 1 39 1 154 1 141 1 41 2 291 3 342 1 132 1 
213 1 330 1 160 3 117 1 331 1 255 1 224 1 34 1 35 1 238 1 164 1 152 1 209 3 192 1 58 1 83 1 242 1 39 1 154 1 141 1 41 1 291 3 342 1 132 1 
198 1 34 1 224 1 35 1 152 1 209 3 58 1 83 1 39 1 154 1 41 2 132 1 213 1 330 1 160 3 331 1 117 1 332 1 255 1 238 1 164 1 192 1 242 1 141 1 291 3 342 1 
53 2 198 4 101 1 204 1 151 2 152 3 209 5 58 4 13 1 154 1 14 2 213 1 160 6 63 1 117 1 255 5 164 1 66 1 310 1 71 1 224 1 34 1 268 1 35 1 227 1 366 2 83 1 39 1 41 7 132 1 330 5 89 2 332 4 331 1 334 1 238 1 285 1 192 1 139 1 242 1 141 1 341 1 291 5 342 1 
53 2 198 2 101 1 204 1 151 2 152 2 209 4 58 2 154 1 14 2 213 1 160 4 63 1 117 1 255 2 164 1 310 1 71 1 224 1 34 1 35 1 227 1 366 2 83 1 41 4 132 1 328 2 89 2 330 1 331 1 332 2 334 1 238 1 192 1 95 1 242 1 141 1 341 1 291 4 342 1 
53 2 198 2 101 1 34 1 224 1 268 1 35 1 204 1 151 2 227 1 152 2 366 2 209 4 58 2 83 1 154 1 14 2 41 4 132 1 213 1 330 1 89 2 160 4 63 1 332 2 331 1 117 1 255 1 334 1 238 1 164 1 66 1 285 1 310 1 192 1 242 1 141 1 341 1 71 1 291 4 342 1 
53 2 198 2 101 1 34 1 224 1 268 1 35 1 204 1 151 2 227 1 152 2 366 2 209 4 58 2 83 1 154 1 14 2 41 4 132 1 213 1 330 1 89 2 160 4 63 1 332 2 331 1 117 1 255 1 334 1 238 1 164 1 66 1 285 1 310 1 192 1 242 1 141 1 341 1 71 1 291 4 342 1 
198 2 101 1 34 1 224 1 35 1 204 1 227 1 152 2 209 4 58 2 83 1 154 1 14 2 41 4 323 2 132 1 213 1 328 2 88 2 330 1 89 2 160 4 332 2 331 1 117 1 255 1 334 1 238 1 165 1 164 1 285 1 310 1 192 1 242 1 97 1 141 1 341 1 71 1 291 4 342 1 343 1 
53 2 198 3 101 1 34 1 224 1 268 1 204 1 35 1 151 2 227 1 152 2 366 2 209 4 13 1 58 3 83 1 154 1 14 2 41 5 132 1 213 1 330 1 89 2 160 5 63 1 331 1 117 1 332 3 255 1 334 1 238 1 66 1 164 1 285 1 310 1 192 1 242 1 141 1 341 1 71 1 291 4 342 1 
53 2 198 3 101 1 34 1 224 1 268 1 204 1 35 1 151 2 227 1 152 2 366 2 209 4 13 1 58 3 83 1 154 1 14 2 41 5 132 1 213 1 330 1 89 2 160 5 63 1 331 1 117 1 332 3 255 1 334 1 238 1 66 1 164 1 285 1 310 1 192 1 242 1 141 1 341 1 71 1 291 4 342 1 
198 2 101 1 34 1 224 1 204 1 35 1 227 1 152 2 209 4 58 2 83 1 154 1 14 2 41 4 323 2 132 1 213 1 328 2 88 2 330 1 89 2 160 4 332 2 117 1 331 1 255 1 334 1 238 1 164 1 165 1 310 1 192 1 95 1 242 1 141 1 341 1 71 1 291 4 342 1 
352 6 371 1 62 1 112 1 216 1 90 1 134 2 236 1 280 1 32 1 355 2 375 1 119 1 337 1 163 1 180 2 320 1 257 1 190 3 258 1 378 2 96 1 140 3 369 1 51 1 52 1 
222 3 4 1 294 2 266 3 32 2 31 1 105 1 180 2 369 12 230 3 371 2 352 15 113 1 112 12 20 2 114 4 90 2 134 4 375 2 47 1 119 3 337 1 190 5 378 1 96 3 260 1 241 1 169 1 140 10 51 2 
1 1 196 1 346 1 32 1 31 1 150 1 295 1 82 1 247 1 108 1 321 1 109 1 130 1 231 1 132 2 213 2 371 1 352 2 17 1 113 1 90 1 134 2 331 1 375 1 119 1 307 1 356 1 282 1 337 1 121 1 122 1 190 1 259 1 378 1 241 1 28 1 140 1 51 1 
99 1 1 1 346 1 150 1 295 1 247 1 207 1 109 1 213 2 352 5 17 1 112 2 20 2 354 1 355 1 307 1 119 2 356 1 256 1 122 1 259 1 28 1 314 1 266 1 31 1 32 2 82 1 180 3 367 1 369 2 230 1 130 1 231 1 132 2 371 2 90 2 134 4 331 1 375 2 282 1 337 2 190 2 96 1 241 1 140 3 51 2 
1 3 346 2 318 1 103 1 32 2 77 1 295 2 247 8 181 1 38 2 130 2 131 1 132 1 304 1 213 1 371 2 352 2 17 1 113 1 216 1 188 1 90 2 134 4 331 1 375 2 356 8 282 2 337 2 122 1 190 1 68 1 259 7 261 1 241 1 28 1 140 1 289 1 51 2 263 1 
100 1 200 1 266 1 32 1 31 1 176 1 180 1 369 1 230 1 324 1 132 1 371 1 213 1 352 3 17 1 112 1 90 1 134 2 331 1 355 1 375 1 119 1 337 1 163 1 122 1 190 2 96 1 140 1 51 1 
352 2 371 1 112 1 20 1 216 1 90 1 134 2 32 1 375 1 119 1 337 1 180 1 10 1 96 1 140 2 369 1 230 1 51 1 
352 2 371 1 112 1 100 1 216 1 90 1 134 2 32 1 355 1 375 1 119 1 337 1 180 1 163 1 190 2 369 1 40 1 51 1 
100 1 266 1 32 1 180 2 230 1 369 2 371 1 352 4 112 2 20 1 216 1 90 1 134 2 355 1 375 1 119 2 337 1 163 1 190 2 96 1 140 2 51 1 
352 2 371 1 112 1 20 1 90 1 134 2 32 1 375 1 119 1 337 1 180 1 10 1 96 1 140 2 369 1 230 1 51 1 304 1 
352 2 371 1 112 1 100 1 90 1 134 2 32 1 355 1 375 1 119 1 337 1 180 1 163 1 190 2 369 1 40 1 51 1 304 1 
352 2 371 1 112 1 20 1 90 1 266 1 134 2 32 1 375 1 119 1 337 1 180 1 96 1 140 2 369 1 230 1 51 1 304 1 
371 1 352 2 112 1 20 1 90 1 266 1 134 2 32 1 375 1 119 1 337 1 180 1 96 1 140 2 369 1 230 1 51 1 
1 1 346 1 32 1 150 1 295 1 82 1 247 1 367 1 109 1 130 1 231 1 132 1 352 2 213 1 371 1 113 1 90 1 134 2 375 1 356 1 282 1 337 1 190 1 259 1 378 1 241 1 140 1 51 1 
1 1 346 1 76 1 32 1 295 1 247 1 229 1 109 1 130 1 301 1 231 1 132 1 352 2 213 1 371 1 113 1 90 1 134 2 375 1 356 1 282 1 337 1 190 1 259 1 378 1 241 1 140 1 51 1 
352 2 371 1 112 1 20 1 90 1 266 1 134 2 31 1 32 1 375 1 119 1 337 1 180 1 96 1 140 2 369 1 230 1 51 1 
99 1 1 1 346 1 266 1 103 1 32 1 150 1 82 1 295 1 180 1 247 1 367 1 369 1 230 1 109 1 231 1 132 1 352 2 213 1 371 1 112 1 20 1 90 1 134 2 375 1 119 1 356 1 282 1 337 1 259 1 96 1 140 2 51 1 
266 1 32 1 31 1 176 1 180 1 230 1 369 1 324 1 132 1 371 1 213 1 352 2 17 1 112 1 20 1 214 1 90 1 134 2 331 1 375 1 119 1 337 1 122 1 96 1 140 2 51 1 
197 1 344 1 3 1 100 4 102 1 294 1 11 1 298 1 349 1 299 1 352 41 62 1 159 1 20 4 114 4 252 1 355 4 163 5 257 1 260 3 74 1 222 3 266 4 33 4 180 8 320 1 230 4 277 2 371 3 90 3 134 6 236 1 333 1 280 1 93 1 375 3 281 1 190 21 96 5 140 20 51 3 98 1 52 1 
74 1 344 1 197 1 222 3 3 1 100 3 102 1 294 1 266 4 33 4 180 7 320 1 11 1 298 2 230 4 299 1 349 1 277 2 62 1 371 4 352 38 159 1 20 3 114 4 252 1 90 4 236 1 134 8 280 1 333 1 355 4 281 1 375 4 93 1 163 4 257 1 190 18 96 5 260 3 140 20 98 1 51 4 52 1 
74 1 197 1 222 4 3 1 100 7 102 1 294 2 266 7 33 4 180 14 320 1 11 1 298 1 230 7 299 1 349 1 277 1 62 1 371 2 352 52 159 1 20 7 114 4 252 1 90 2 236 1 134 4 280 1 333 1 355 7 375 2 93 1 163 8 257 1 190 25 96 8 260 2 169 2 140 27 98 1 51 2 52 1 
74 1 197 1 222 1 100 3 294 1 266 3 33 2 180 6 230 3 277 1 371 2 352 19 20 3 114 2 252 2 90 2 134 4 333 1 355 3 281 1 375 2 93 1 163 3 190 10 96 3 260 1 140 9 98 1 51 2 29 1 
74 1 197 1 222 2 3 1 100 2 102 1 266 3 33 4 180 4 11 1 298 2 230 3 299 1 349 1 277 2 371 3 352 26 159 1 20 2 114 2 252 1 90 3 134 6 333 1 355 2 375 3 93 1 163 2 190 12 96 3 260 2 140 14 98 2 51 3 
218 1 184 1 59 1 30 1 254 1 340 1 336 1 303 1 185 1 56 1 
8 1 325 1 
218 1 184 1 30 1 211 1 340 1 120 1 336 1 185 1 44 1 
293 1 275 1 
166 1 64 1 233 1 
2 1 30 1 254 1 255 1 336 1 56 1 26 1 218 1 209 1 272 1 27 1 184 1 59 1 340 1 85 2 291 1 185 1 61 1 
2 1 30 1 254 1 255 1 336 1 56 1 26 1 218 1 209 1 272 1 27 1 184 1 59 1 340 1 85 2 291 1 185 1 61 1 
2 1 30 1 254 1 255 1 336 1 56 1 26 1 218 1 209 1 272 1 27 1 184 1 59 1 340 1 85 2 291 1 185 1 61 1 
293 1 275 1 233 1 
293 1 275 1 233 1 
166 1 64 1 
166 1 64 1 233 1 
250 1 290 1 
199 1 30 1 177 1 8 1 272 1 209 1 184 1 370 1 85 1 185 1 132 2 61 1 325 1 213 2 250 1 17 2 251 1 353 1 331 2 336 1 122 2 218 1 378 1 340 1 291 1 290 1 360 1 
1 1 346 1 318 1 32 1 31 1 80 1 295 1 247 2 181 1 38 2 84 1 132 2 213 2 371 1 352 2 113 1 90 1 115 1 134 2 331 2 375 1 356 2 282 1 337 1 138 1 284 1 190 1 259 2 241 1 140 1 51 1 
173 2 19 1 346 1 188 1 245 1 189 1 103 1 202 1 136 1 356 2 48 1 174 1 282 1 269 1 247 2 286 1 287 1 259 2 36 1 
173 2 19 1 188 1 346 1 189 1 202 1 136 1 356 1 48 1 174 1 282 1 247 1 286 1 287 1 259 1 128 1 36 1 
1 1 346 1 245 1 202 1 65 1 356 1 282 1 295 1 247 1 259 1 289 1 130 1 263 1 248 1 
173 2 19 1 188 1 245 1 346 1 189 1 202 1 136 1 356 1 48 1 174 1 282 1 269 1 247 1 286 1 287 1 259 1 36 1 
78 1 
270 1 101 1 330 1 258 1 255 1 210 1 71 1 
53 1 328 1 330 1 101 1 63 1 255 2 334 1 204 1 227 1 151 1 152 1 366 1 209 1 310 1 41 1 71 1 291 1 
1 10 100 2 101 9 146 2 346 3 103 1 104 2 204 4 295 3 247 3 151 6 207 2 152 3 106 2 107 1 209 5 296 2 210 1 60 2 109 3 16 2 22 1 255 8 356 3 163 2 310 4 259 3 312 2 71 8 73 2 72 6 266 2 362 2 363 2 79 1 179 1 270 1 227 4 83 2 230 2 41 5 130 1 274 3 42 6 326 1 328 12 330 2 279 2 334 4 335 1 137 1 282 4 96 2 291 5 
222 2 100 4 101 13 102 1 294 1 266 4 104 1 204 2 149 1 227 2 151 5 152 1 106 5 209 1 11 1 230 4 60 1 299 1 41 1 349 1 42 8 159 1 328 10 330 2 114 2 92 1 255 7 334 2 335 1 163 4 310 2 96 4 260 1 169 1 71 8 291 1 72 8 
101 2 204 1 227 1 182 1 183 1 106 2 209 1 60 1 324 1 157 1 132 1 213 1 249 1 17 1 18 1 236 1 280 1 331 1 334 1 238 1 163 1 66 1 122 1 257 1 310 1 96 2 71 2 291 1 
330 1 101 1 255 1 334 1 204 1 227 1 270 1 310 1 210 1 71 1 
328 10 100 2 101 5 266 2 255 5 151 5 163 2 207 1 106 2 96 2 230 2 60 1 71 5 72 5 42 5 
152 1 330 1 209 1 255 1 41 1 291 1 
1 1 101 2 317 1 346 1 203 1 79 2 225 1 204 2 104 2 295 1 227 2 179 1 247 4 152 2 209 3 155 1 41 4 130 2 334 2 356 4 335 2 24 1 282 1 310 1 259 4 289 1 71 2 263 1 291 3 
1 1 346 1 32 1 150 1 82 1 295 1 247 1 367 1 130 1 109 1 324 2 231 1 132 3 352 1 371 1 213 3 17 2 18 1 90 1 134 2 331 2 375 1 118 1 356 1 282 1 337 1 122 2 190 1 259 1 378 1 241 1 51 1 
328 4 101 1 330 2 255 4 334 1 335 1 204 1 104 1 151 2 227 1 310 1 71 2 72 2 42 2 52 1 
12 1 184 1 30 1 
12 1 184 1 30 1 
0 1 250 1 184 1 59 1 30 1 
12 1 184 1 30 1 
184 1 30 1 253 1 
184 1 30 1 253 1 
184 1 30 1 253 1 
184 1 30 1 
218 1 340 1 
222 1 180 2 320 1 11 1 352 8 371 1 62 1 114 1 90 1 134 2 236 1 280 1 355 2 375 1 93 1 163 1 257 1 190 4 96 1 260 1 140 4 51 1 52 1 
222 1 294 1 266 1 180 3 320 1 11 1 230 1 62 1 352 11 371 2 20 1 114 2 90 2 236 1 134 4 280 1 355 2 93 1 375 2 163 1 257 1 190 5 96 2 260 1 123 1 140 6 51 2 52 1 
222 1 100 2 102 1 266 2 180 4 320 1 11 1 230 2 298 1 299 1 349 1 62 1 352 19 371 3 159 1 20 1 114 1 90 3 236 1 134 6 280 1 355 3 375 3 93 1 163 3 257 1 190 10 96 3 123 1 260 1 140 9 51 3 52 1 
222 1 100 1 102 1 266 2 180 5 320 1 11 1 298 1 230 2 349 1 299 1 62 1 352 17 371 3 159 1 20 2 114 1 90 3 236 1 134 6 280 1 355 3 375 3 93 1 163 2 257 1 190 7 96 3 123 1 260 1 140 10 51 3 52 1 
222 1 180 2 320 1 11 1 352 8 371 1 62 1 114 1 90 1 134 2 236 1 280 1 355 2 375 1 93 1 163 1 257 1 190 4 96 1 260 1 140 4 51 1 52 1 
222 1 100 2 102 1 266 2 180 2 11 1 230 2 349 1 299 1 352 12 371 1 159 1 20 1 114 1 90 1 134 2 355 1 375 1 93 1 163 2 190 6 96 2 260 1 140 6 51 1 
222 1 100 1 102 1 266 2 180 5 320 1 11 1 230 2 298 2 299 1 349 1 62 1 352 18 371 4 159 1 20 2 114 1 90 4 236 1 134 8 280 1 355 3 375 4 93 1 163 2 257 1 190 8 96 3 260 1 123 1 140 10 51 4 52 1 
222 1 100 2 102 1 266 3 180 6 11 1 230 3 298 2 299 1 349 1 352 16 371 4 159 1 20 3 114 1 90 4 134 8 355 3 93 1 375 4 281 1 163 2 190 7 96 3 260 1 140 9 51 4 
352 7 62 2 20 3 236 3 280 3 355 3 163 1 180 6 320 1 257 1 190 4 96 1 140 3 
222 1 100 1 102 1 266 2 180 4 320 1 11 1 230 2 298 2 299 1 349 1 62 1 352 18 371 4 159 1 20 1 114 1 90 4 236 1 134 8 280 1 355 3 93 1 375 4 281 1 163 2 257 1 190 8 96 3 260 1 140 10 51 4 52 1 
352 8 371 2 62 1 20 1 90 2 134 4 236 1 280 1 355 2 375 2 163 1 180 3 320 1 257 1 190 4 96 1 140 4 298 1 51 2 52 1 
163 1 352 6 180 2 62 1 320 1 257 1 190 3 258 1 96 1 236 1 280 1 140 3 355 2 52 1 
371 1 352 4 100 1 20 1 90 1 266 1 134 2 355 1 375 1 163 1 180 2 190 2 96 1 123 1 140 2 230 1 51 1 
352 7 222 1 100 1 20 1 114 2 294 1 266 1 355 1 163 1 180 2 190 4 96 1 260 1 140 3 230 1 
222 2 361 1 100 2 4 1 266 2 294 1 180 9 320 1 230 2 298 2 62 1 352 23 371 2 20 4 114 2 90 2 236 2 134 4 280 2 355 5 375 2 163 3 257 1 190 12 96 3 140 11 169 1 51 2 52 1 
352 1 190 1 114 1 
352 1 222 1 140 1 
371 1 352 6 20 1 100 1 90 1 266 1 134 2 355 2 375 1 180 3 163 1 207 1 190 3 96 1 123 1 140 3 230 1 51 1 
222 1 100 2 102 1 266 2 180 2 11 1 230 2 349 1 299 1 352 12 371 1 159 1 20 1 114 1 90 1 134 2 355 1 375 1 93 1 163 2 190 6 96 2 260 1 140 6 51 1 
352 6 20 1 236 1 280 1 355 1 163 1 180 2 257 1 190 3 96 1 140 3 
62 1 352 3 371 1 361 1 20 1 90 1 236 1 134 2 280 1 355 1 375 1 180 2 320 1 190 2 140 1 298 1 51 1 
371 1 352 10 20 2 90 1 134 2 236 2 280 2 355 3 375 1 93 1 180 5 163 2 183 1 257 1 190 5 96 2 140 5 51 1 
371 1 352 2 20 1 90 1 134 2 93 1 375 1 180 1 96 1 140 2 230 1 51 1 
371 1 352 4 100 1 20 1 90 1 266 1 134 2 355 1 93 1 375 1 163 1 180 2 190 2 96 1 140 2 230 1 51 1 
352 3 371 3 361 1 20 1 90 3 134 6 236 1 280 1 355 1 281 1 93 1 375 3 180 2 190 2 140 1 298 1 51 3 
222 3 361 1 100 3 294 1 266 3 180 12 320 1 298 2 230 3 62 1 305 1 371 5 352 34 20 5 114 4 90 5 236 3 134 10 280 3 355 7 281 1 375 5 93 1 163 5 94 1 257 2 190 18 311 1 96 5 260 1 123 1 140 16 51 5 52 1 
213 1 378 1 331 1 242 1 147 1 129 1 132 1 
213 1 21 1 147 1 331 1 162 1 271 1 378 1 242 1 129 1 297 1 221 1 132 1 
247 1 1 1 258 1 259 1 346 1 289 1 263 1 356 1 130 1 282 1 295 1 
213 2 1 1 17 1 346 1 331 1 356 1 282 1 150 1 295 1 247 1 122 1 259 1 378 1 28 1 109 1 130 1 231 1 132 2 
16 1 213 2 1 3 17 1 346 1 331 2 224 1 79 1 356 1 238 1 282 1 150 1 295 2 247 1 122 2 259 1 378 1 28 1 154 1 109 2 73 1 231 1 132 2 
16 1 213 2 1 3 17 1 76 1 346 1 331 2 224 1 79 1 356 2 238 1 282 1 295 2 247 2 122 2 377 1 259 2 378 1 28 1 154 1 109 2 73 1 231 1 132 2 
16 1 1 4 330 1 279 1 346 1 255 1 79 1 356 3 282 1 295 1 309 1 247 3 377 1 209 2 259 3 83 1 41 1 130 1 109 1 73 1 291 2 359 1 274 1 
16 1 1 4 330 1 279 1 346 1 255 1 79 1 356 3 282 1 295 1 247 3 377 1 209 2 259 3 296 1 83 1 41 1 130 1 109 1 73 1 291 2 274 1 
247 1 259 1 68 1 346 1 356 1 282 1 
143 1 1 3 158 1 188 1 346 2 318 1 103 1 77 1 356 7 137 1 282 3 295 2 247 7 68 1 259 6 261 1 38 1 130 2 109 1 131 1 156 1 
1 1 99 1 346 1 32 2 31 1 103 1 80 1 150 1 295 1 82 1 180 2 247 1 320 1 367 1 369 1 109 1 231 1 132 2 352 6 62 1 213 2 371 2 17 1 112 1 90 2 236 1 134 4 280 1 331 1 355 2 375 2 119 1 356 1 256 1 282 1 337 2 163 1 122 1 257 1 190 3 259 1 378 2 96 1 28 1 140 3 51 2 52 1 
1 2 101 1 146 1 362 1 204 2 270 1 227 2 179 1 247 1 152 1 209 3 296 1 83 1 210 1 41 2 130 1 370 1 274 1 330 1 279 1 255 1 334 2 356 1 259 1 310 2 312 1 71 1 291 3 
1 2 279 1 346 1 103 1 356 2 137 1 282 2 295 1 247 2 68 1 259 2 109 1 326 1 
1 1 346 1 103 1 356 4 282 1 295 1 247 4 348 1 377 1 259 4 289 1 130 1 263 1 
1 1 158 1 346 1 161 1 79 1 356 2 282 2 295 1 247 2 259 2 172 1 109 1 156 1 219 1 
247 1 286 1 173 1 259 1 346 1 36 1 189 1 356 1 130 1 282 1 
1 1 188 1 346 1 103 1 318 1 356 2 282 1 295 1 247 2 138 1 259 2 
1 3 346 2 103 1 318 1 77 1 79 1 356 5 282 2 295 2 247 5 348 1 259 4 289 1 263 1 130 1 131 1 
1 3 346 2 103 1 318 1 77 1 79 1 356 5 282 2 295 2 247 5 348 1 259 4 289 1 263 1 130 1 193 1 
213 2 1 1 17 1 76 1 346 1 331 1 356 1 282 1 295 1 247 1 122 1 259 1 378 1 28 1 109 1 130 1 231 1 132 2 
143 1 1 1 158 1 346 1 79 1 356 1 137 1 282 2 295 1 247 1 259 1 109 1 156 1 
347 1 378 1 368 1 313 1 127 1 
86 1 373 1 330 1 255 1 224 1 35 1 238 1 283 1 347 2 209 2 378 1 368 1 83 1 154 1 313 2 370 1 291 2 126 1 127 2 
213 1 115 1 331 1 284 1 368 1 313 1 84 1 127 1 132 1 
86 1 373 1 368 1 
228 1 258 1 70 1 23 1 
228 1 372 1 70 1 237 1 46 1 23 1 6 1 
206 1 273 1 6 1 
372 1 46 1 237 3 23 1 6 3 25 2 228 1 67 1 70 1 302 1 220 1 292 1 
351 1 228 1 372 1 70 1 237 2 46 1 23 1 212 1 6 2 
264 1 372 1 173 1 215 1 46 1 237 1 6 1 228 1 286 1 287 1 302 1 
228 1 372 1 70 1 237 1 46 1 6 1 302 1 
372 1 70 2 237 1 46 1 23 1 6 1 302 1 
228 1 364 1 372 2 70 1 237 2 46 2 6 2 226 1 302 1 178 1 
264 1 372 1 46 1 237 3 217 1 23 1 6 3 228 2 9 1 50 1 70 1 212 2 302 1 
372 1 173 2 316 1 189 1 46 1 237 2 136 1 23 1 6 2 228 1 286 1 287 1 70 1 212 1 302 1 
351 1 264 1 372 2 75 1 46 2 237 4 23 1 6 4 228 2 50 1 70 1 212 2 302 1 
228 1 372 1 70 1 237 1 46 1 23 1 6 1 302 1 
264 1 372 1 237 4 46 1 23 2 6 4 25 1 67 1 228 3 338 1 50 1 70 2 212 2 220 1 
57 1 228 1 87 1 372 1 358 1 70 1 237 2 46 1 23 1 212 1 6 2 302 1 
372 1 46 1 237 3 23 1 6 3 25 2 228 1 67 2 191 1 70 1 220 1 302 1 
186 2 228 2 262 1 7 1 
345 1 372 1 237 1 46 1 6 1 302 1 
228 1 372 1 70 1 237 2 46 1 217 1 23 1 212 1 6 2 302 1 
187 1 
228 1 372 1 70 1 237 1 46 1 23 1 6 1 302 1 
372 1 46 1 237 3 217 1 23 1 6 3 25 1 228 1 70 1 212 1 302 1 
228 1 264 1 338 1 50 1 
228 1 70 1 

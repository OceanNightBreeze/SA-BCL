#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (167,199) (167,199) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (167,199) (167,199) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (167,199) (167,199) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (167,199) (167,199) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 1 83 1 65 1 243 1 196 1 229 1 204 1 58 1 128 1 199 1 167 1 
358 1 83 1 65 1 243 1 196 1 229 1 204 1 58 1 128 1 199 1 167 1 
358 1 83 1 65 1 243 1 196 1 229 1 204 1 58 1 128 1 199 1 167 1 
358 1 83 1 65 1 243 1 196 1 229 1 204 1 58 1 128 1 199 1 167 1 
358 1 300 1 279 1 58 1 134 1 64 1 65 4 158 3 9 1 196 4 242 3 214 1 147 1 10 2 204 1 330 2 23 1 322 1 
358 1 279 1 58 1 268 1 64 1 227 1 282 1 158 1 65 2 83 1 196 2 309 1 147 1 204 1 23 1 128 1 
358 2 279 1 58 1 64 1 122 1 65 3 83 1 158 2 196 3 9 1 242 1 10 1 204 2 
300 1 358 2 130 1 279 1 58 1 134 1 64 1 308 1 122 1 158 5 65 9 83 1 196 9 242 7 9 3 214 1 147 1 10 4 204 2 330 2 23 1 111 1 322 1 249 1 
300 1 358 2 130 1 279 1 58 1 134 1 64 1 308 1 122 1 158 5 65 9 83 1 196 9 242 7 9 3 214 1 147 1 10 4 204 2 330 2 23 1 111 1 322 1 249 1 
73 1 
117 1 112 1 367 2 
195 2 277 2 50 1 38 2 192 1 154 2 207 2 306 2 
77 1 99 1 192 1 315 1 210 1 154 2 133 1 176 1 104 1 105 1 195 3 245 2 319 1 38 2 40 1 299 2 115 1 42 1 141 1 277 3 344 2 16 1 304 1 349 1 306 2 371 1 46 1 351 1 123 2 50 1 170 1 207 2 53 1 24 2 26 1 381 1 356 1 
195 1 277 1 38 1 192 1 39 1 154 1 207 1 306 1 267 1 318 1 
277 1 275 1 368 1 18 1 32 1 154 1 362 1 318 1 376 1 195 1 206 1 112 1 25 1 323 1 
275 2 277 1 368 1 32 1 306 1 154 1 362 1 318 1 195 1 38 1 207 1 206 1 112 1 25 1 323 2 
275 1 297 1 203 1 201 1 323 1 
275 2 297 1 191 1 173 1 32 1 201 1 112 1 323 2 
275 1 201 1 323 1 
275 1 277 1 192 1 59 1 306 1 154 1 267 1 318 1 297 1 195 1 38 1 39 1 207 1 323 1 
112 1 
281 1 275 2 297 1 173 1 32 1 201 1 112 1 323 2 
275 5 140 1 278 2 173 1 30 1 32 1 201 2 63 1 297 2 271 2 37 2 124 1 97 1 172 1 74 1 112 1 75 1 323 5 332 1 
277 2 99 1 344 1 133 1 306 1 154 1 135 1 46 1 176 1 351 1 194 1 123 1 195 2 245 1 319 1 170 1 207 1 53 1 40 1 218 1 
73 1 
277 2 154 2 306 1 252 1 195 2 50 2 38 1 260 1 207 1 
244 1 145 1 135 1 
277 1 344 1 99 1 133 1 62 1 46 1 176 1 351 1 123 1 195 1 50 1 245 1 319 1 170 1 53 1 40 1 
195 3 277 3 50 1 38 1 154 3 207 3 306 3 218 1 
195 1 277 1 154 1 207 1 306 1 267 1 318 1 
195 1 277 1 38 1 260 1 154 1 207 1 306 1 252 1 318 1 
77 1 1 1 99 1 192 1 315 1 210 1 133 1 154 3 362 1 176 1 104 1 194 1 318 1 195 4 245 1 319 1 38 2 40 1 218 1 299 1 323 1 115 1 141 1 277 4 275 1 344 1 16 1 368 1 304 1 306 3 371 1 46 1 351 1 123 1 50 1 170 1 260 1 207 3 206 1 53 1 24 2 25 1 261 1 356 1 
195 2 277 2 50 1 66 1 18 1 154 2 207 1 306 1 218 1 
275 1 277 3 151 1 368 1 362 1 306 3 154 3 318 1 194 1 195 3 38 1 260 1 207 3 206 1 218 2 112 1 261 1 25 1 323 1 
277 2 306 2 154 2 145 1 135 1 195 2 38 1 260 1 207 2 218 1 
277 1 344 1 99 1 133 1 46 1 176 1 351 1 123 1 195 1 50 1 245 1 319 1 170 1 53 1 40 1 
277 1 344 1 57 1 133 1 46 1 176 1 351 1 123 1 195 1 179 1 50 1 245 1 319 1 53 1 40 1 
77 2 16 1 45 1 314 1 304 1 4 1 315 1 294 1 89 1 210 1 349 2 144 1 143 1 145 2 371 1 135 2 341 1 244 2 259 1 162 1 24 2 299 4 13 1 115 1 
195 1 277 1 0 1 206 1 154 1 207 1 306 1 318 1 
277 5 18 1 31 1 306 4 154 5 194 1 195 5 66 1 50 1 38 1 260 1 207 4 230 1 218 2 
0 1 195 2 277 2 154 2 207 2 306 2 267 1 318 1 
79 1 187 1 
79 1 187 1 
370 1 20 1 
370 1 20 1 
370 1 20 1 
79 1 187 1 233 1 
79 1 187 1 233 1 
8 1 79 1 187 1 
79 2 187 2 370 1 296 1 20 1 185 1 
79 1 187 1 233 1 
79 1 187 1 328 1 
79 1 187 1 328 1 
79 1 187 1 328 1 
220 1 27 1 275 2 56 2 79 2 193 2 61 1 35 3 240 1 82 1 185 1 85 2 187 2 287 1 231 1 290 2 110 2 112 1 323 2 
56 1 79 1 153 1 174 1 193 1 154 2 103 1 35 1 240 1 195 2 8 1 85 1 323 1 275 1 277 2 183 1 184 1 306 2 50 1 187 1 354 1 207 2 290 1 331 1 
147 1 23 1 322 1 
147 1 23 1 268 1 
157 1 147 3 346 1 322 2 268 1 342 1 
138 1 147 2 346 1 322 1 268 1 342 1 
147 2 346 1 322 1 268 1 342 2 
335 1 237 2 337 1 314 1 173 1 132 1 153 1 5 2 32 1 63 1 297 4 271 1 37 1 364 1 162 1 112 2 323 5 367 3 116 2 301 1 275 5 117 1 45 1 278 1 201 1 144 1 165 1 97 3 354 1 331 1 74 2 208 1 
55 1 335 3 237 6 359 1 314 3 173 1 239 1 32 1 63 1 297 7 271 2 106 1 37 2 364 2 162 3 68 5 219 1 112 5 323 9 367 9 116 6 275 9 117 3 325 1 45 3 278 2 201 6 144 3 165 2 203 5 354 4 97 8 74 6 332 1 208 1 
335 1 237 2 314 1 132 1 32 1 5 1 297 2 271 1 37 1 364 1 162 1 112 3 323 3 367 4 301 1 116 2 275 3 117 2 45 1 278 1 165 1 144 1 97 3 354 1 74 2 332 1 
55 1 335 2 237 4 314 2 132 1 32 1 5 2 297 3 271 1 106 1 37 1 364 1 162 2 219 1 112 4 323 4 367 7 116 4 301 1 275 4 117 3 45 2 278 1 165 1 144 2 97 5 354 2 74 4 332 1 
73 1 
319 1 95 1 
347 1 
319 1 176 1 
357 2 319 3 246 1 46 1 176 1 129 1 
319 1 46 1 176 1 
319 1 375 1 
77 3 324 2 314 1 327 1 349 4 34 1 269 1 341 3 72 1 377 1 127 1 180 1 162 1 288 1 12 1 299 7 13 2 
77 3 324 2 314 1 327 1 349 4 34 1 269 1 341 3 72 1 377 1 127 1 180 1 162 1 288 1 12 1 299 7 13 2 
77 3 324 2 224 1 314 1 327 1 349 4 34 1 269 1 341 3 72 1 377 1 127 1 180 1 162 1 288 1 12 1 299 7 13 2 
236 1 77 15 335 3 314 4 315 1 210 1 34 2 269 2 341 10 180 1 162 4 321 1 12 5 299 31 41 1 13 5 15 3 324 3 16 1 45 3 19 1 327 2 349 16 371 1 144 3 166 1 72 1 377 1 51 1 310 4 127 1 288 2 24 2 311 1 
77 4 314 1 315 2 210 2 34 1 269 1 341 4 365 1 162 1 12 1 299 9 41 1 13 3 16 2 324 2 327 1 349 5 371 2 92 1 377 1 72 1 127 1 288 1 24 4 
358 1 80 1 58 1 268 1 64 1 158 1 65 2 83 1 157 1 242 1 159 1 245 1 196 2 40 1 298 1 322 1 163 1 344 1 164 1 200 1 88 1 279 1 120 1 351 1 123 1 256 1 147 2 125 1 204 1 23 1 
358 1 101 1 80 1 102 1 268 1 64 1 158 1 157 1 65 3 83 1 159 1 245 1 196 3 242 2 197 1 40 1 298 1 322 1 344 1 164 1 88 1 279 1 120 1 351 1 123 1 256 1 147 2 125 1 204 1 23 1 
101 1 80 1 102 1 268 1 64 1 158 1 83 1 65 2 157 1 159 1 245 1 196 2 242 2 40 1 322 1 344 1 164 1 279 1 120 1 351 1 123 1 256 1 147 2 125 1 23 1 
358 1 344 1 295 1 280 1 118 1 176 1 351 1 120 2 123 1 83 2 65 1 159 2 196 1 245 1 319 1 256 2 197 1 204 1 53 1 52 1 40 1 11 1 235 1 
358 1 80 1 102 1 58 1 268 1 65 1 83 1 157 1 159 1 245 1 196 1 40 1 298 1 322 1 344 1 164 1 200 1 88 1 120 1 351 1 123 1 256 1 147 2 125 1 204 1 23 1 
283 1 
334 1 190 2 154 1 63 1 195 1 245 2 107 1 11 1 112 2 117 2 344 2 18 1 251 1 201 6 118 1 165 1 351 1 168 1 123 2 169 4 206 1 74 2 25 1 76 2 173 3 32 1 362 1 211 1 176 1 318 1 271 1 37 1 319 1 215 1 216 1 40 1 323 5 367 2 275 5 277 1 368 1 278 1 90 1 225 1 48 1 226 1 376 1 94 2 284 1 378 2 188 2 97 2 53 2 150 2 333 2 
334 1 275 3 277 1 368 1 18 1 173 1 201 2 362 1 154 1 48 1 318 1 376 1 281 1 195 1 378 1 107 1 169 2 215 1 206 1 216 1 25 1 323 3 
334 1 173 1 154 1 362 1 32 1 318 1 195 1 107 1 215 1 216 1 112 1 323 3 277 1 275 3 368 1 18 1 201 1 48 1 376 1 281 1 169 3 188 1 206 1 25 1 
334 1 173 1 154 1 362 1 32 1 318 1 195 1 107 1 215 1 216 1 112 1 323 3 277 1 275 3 368 1 18 1 201 2 48 1 376 1 281 1 378 1 169 3 188 1 206 1 25 1 333 1 
334 1 190 2 100 1 154 1 63 1 195 1 107 1 109 1 112 5 117 2 18 1 251 1 201 7 168 1 169 6 206 1 74 1 25 1 76 2 29 1 173 3 362 1 32 5 318 1 271 1 37 1 215 1 216 1 323 5 43 1 277 1 275 5 368 1 278 1 48 1 376 1 281 1 94 2 378 4 188 4 97 1 150 2 380 1 333 4 
334 1 190 2 173 2 32 1 154 1 362 1 63 1 318 1 195 1 271 1 37 1 107 1 215 1 216 1 112 2 323 4 367 2 275 4 277 1 117 2 368 1 278 1 18 1 251 1 201 4 48 1 168 1 376 1 94 2 284 1 378 2 169 4 188 2 97 1 206 1 74 1 150 2 25 1 333 2 76 2 
334 1 190 2 173 2 32 1 154 1 362 1 318 1 63 1 195 1 271 1 37 1 107 1 215 1 216 1 109 1 112 1 323 4 43 1 277 1 275 4 117 2 368 1 18 1 278 1 251 1 201 4 48 1 168 1 376 1 94 2 378 2 169 4 188 2 97 1 206 1 74 1 150 2 25 1 380 1 333 2 76 2 
334 1 190 2 173 2 32 1 154 1 362 1 318 1 63 1 195 1 271 1 37 1 107 1 215 1 216 1 109 1 112 1 323 4 43 1 277 1 275 4 117 2 368 1 18 1 278 1 251 1 201 4 48 1 168 1 376 1 94 2 378 2 169 4 188 2 97 1 206 1 74 1 150 2 25 1 380 1 333 2 76 2 
334 1 173 2 32 1 154 1 362 1 60 1 316 1 318 1 63 1 213 2 195 1 271 1 37 1 107 1 215 1 198 2 216 1 112 1 323 4 367 2 277 1 275 4 368 1 18 1 278 1 201 4 48 1 168 1 376 1 378 2 169 4 148 1 188 2 97 1 206 1 74 1 150 2 25 1 380 1 333 2 76 2 
334 1 190 2 100 1 173 2 32 1 154 1 362 1 63 1 318 1 195 1 271 1 37 1 107 1 215 1 216 1 109 1 112 1 323 4 43 1 277 1 275 4 117 2 368 1 278 1 18 1 251 1 201 5 48 1 168 1 376 1 94 2 378 3 169 5 97 1 188 3 206 1 74 1 150 2 25 1 380 1 76 2 333 3 
334 1 190 2 100 1 173 2 32 1 154 1 362 1 63 1 318 1 195 1 271 1 37 1 107 1 215 1 216 1 109 1 112 1 323 4 43 1 277 1 275 4 117 2 368 1 278 1 18 1 251 1 201 5 48 1 168 1 376 1 94 2 378 3 169 5 97 1 188 3 206 1 74 1 150 2 25 1 380 1 76 2 333 3 
334 1 173 2 32 1 154 1 362 1 60 1 63 1 318 1 213 2 195 1 271 1 37 1 107 1 215 1 198 2 216 1 112 1 323 4 367 2 275 4 277 1 368 1 278 1 18 1 201 4 48 1 168 1 376 1 284 1 378 2 169 4 188 2 97 1 206 1 74 1 150 2 25 1 333 2 76 2 
73 1 16 1 304 1 315 1 210 1 89 1 371 1 24 2 115 1 
236 1 77 6 335 2 263 1 152 1 314 1 315 2 210 2 135 11 105 1 341 2 137 1 244 11 162 2 12 1 299 14 13 1 115 2 141 1 15 3 222 1 16 2 45 1 304 1 349 8 371 2 144 2 145 4 202 1 50 1 51 1 310 3 24 4 
77 1 99 1 315 1 210 1 133 1 154 1 338 1 62 1 176 1 194 1 137 1 105 1 195 2 245 1 319 1 160 1 40 1 218 1 299 2 115 1 343 1 277 2 141 1 344 1 16 1 304 1 306 1 349 1 145 1 371 1 46 1 351 1 123 1 50 1 170 1 53 1 207 1 24 2 
335 2 99 2 102 1 154 1 104 2 194 1 105 1 341 8 195 3 245 3 244 7 162 3 12 4 299 20 13 4 115 3 344 3 16 3 304 3 306 1 349 10 121 1 351 2 123 3 72 1 257 2 170 2 127 1 207 1 24 6 355 2 77 10 313 2 314 3 315 3 210 3 175 1 133 2 34 1 135 7 317 1 176 2 137 1 319 2 218 1 40 2 141 1 277 3 324 1 45 2 327 1 371 3 145 7 144 2 46 2 377 1 50 2 96 2 53 1 
77 1 265 1 238 1 315 2 102 1 210 2 154 1 176 2 105 1 195 1 245 7 319 3 218 1 40 2 11 1 299 2 163 1 115 2 303 1 277 1 141 1 221 1 344 8 16 2 345 1 304 2 89 1 306 1 349 1 371 2 118 1 351 2 123 8 205 1 207 1 53 2 24 4 189 1 381 2 
335 1 77 2 314 1 315 1 210 1 154 1 135 1 341 1 137 1 195 1 244 1 38 1 162 1 248 1 299 3 13 1 115 1 277 1 16 1 45 1 304 1 306 1 349 1 145 1 371 1 144 1 260 1 207 1 24 2 
16 1 304 1 315 1 89 1 210 1 349 2 145 1 371 1 143 1 144 1 135 1 341 1 244 1 162 1 12 1 24 2 299 2 115 1 
77 2 16 1 45 1 314 1 304 1 4 1 315 1 89 1 210 1 145 1 371 1 135 1 341 1 244 1 24 2 299 2 13 1 115 1 
77 2 335 1 16 1 314 1 45 1 304 1 315 1 89 1 210 1 349 2 145 2 371 1 144 1 135 2 341 2 244 2 162 1 12 1 24 2 299 4 13 1 115 1 
16 1 304 1 315 1 210 1 349 2 145 1 371 1 143 1 144 1 135 1 341 1 244 1 162 1 12 1 24 2 299 2 189 1 115 1 
77 2 16 1 45 1 314 1 304 1 4 1 315 1 210 1 145 1 371 1 135 1 341 1 244 1 24 2 299 2 189 1 13 1 115 1 
77 2 335 1 16 1 314 1 45 1 304 1 315 1 210 1 349 2 145 2 371 1 144 1 135 2 341 2 244 2 162 1 12 1 24 2 299 4 189 1 13 1 115 1 
77 2 335 1 16 1 314 1 45 1 304 1 315 1 210 1 349 2 145 2 371 1 144 1 135 2 341 2 244 2 162 1 12 1 24 2 299 4 13 1 115 1 
77 1 99 1 315 1 210 1 133 1 176 1 104 1 105 1 195 1 245 1 319 1 40 1 299 2 115 1 277 1 141 1 344 1 16 1 304 1 349 1 371 1 46 1 351 1 123 1 50 1 170 1 53 1 24 2 
77 1 57 1 315 1 210 1 133 1 176 1 105 1 179 1 195 1 245 1 319 1 40 1 299 2 69 1 115 1 277 1 141 1 344 1 16 1 304 1 349 1 371 1 46 1 351 1 123 1 50 1 53 1 24 2 
77 2 335 1 16 1 314 1 45 1 304 1 315 1 210 1 349 2 145 2 371 1 144 1 135 2 341 2 137 1 244 2 162 1 12 1 24 2 299 4 13 1 115 1 
77 2 335 1 99 1 314 1 315 1 210 1 133 1 135 2 176 1 104 1 341 2 195 1 244 2 245 1 319 1 162 1 40 1 12 1 299 4 163 1 13 1 115 1 277 1 344 1 16 1 45 1 304 1 349 2 145 2 144 1 371 1 46 1 351 1 123 1 170 1 355 1 24 2 
77 1 335 1 314 1 315 1 210 1 154 1 135 1 341 1 137 1 195 1 244 1 38 1 162 1 12 1 299 3 115 1 277 1 16 1 45 1 304 1 306 1 349 2 371 1 144 1 145 1 373 1 260 1 207 1 24 2 
236 1 77 21 335 4 28 1 314 5 266 2 315 3 210 3 34 1 6 1 341 8 161 1 108 1 162 5 12 4 181 1 41 1 299 41 113 1 13 4 276 1 15 3 324 1 16 3 45 4 305 1 327 1 349 20 371 3 144 4 92 1 352 4 72 1 377 1 146 1 51 3 228 1 310 4 171 1 127 1 232 1 24 6 98 1 
236 1 77 18 335 4 28 1 314 4 266 2 315 4 210 4 34 1 6 1 341 7 161 1 108 1 162 5 12 3 181 1 41 2 299 38 113 1 13 4 276 1 15 3 324 1 16 4 45 3 305 1 327 1 349 20 371 4 144 4 92 1 352 4 72 1 377 1 146 1 51 3 228 1 310 4 171 1 127 1 232 1 24 8 98 1 
236 2 77 25 335 7 28 1 314 8 266 1 315 2 210 2 34 1 6 1 341 14 161 1 108 1 162 8 12 7 41 1 181 1 299 52 113 1 13 7 276 1 15 4 324 1 222 2 16 2 45 7 305 1 327 1 349 27 371 2 144 7 92 1 352 4 72 1 377 1 146 1 51 2 310 4 171 1 127 1 24 4 98 1 
236 1 77 10 335 3 28 1 314 3 266 1 315 2 210 2 6 1 341 6 161 2 108 1 162 3 12 3 299 19 113 1 13 3 15 1 16 2 45 3 349 9 371 2 144 3 254 1 92 1 352 2 51 1 228 1 310 2 24 4 
77 12 335 3 28 1 314 2 266 2 315 3 210 3 6 2 341 4 161 1 108 1 162 3 12 2 181 1 41 2 299 26 113 1 13 2 276 1 15 2 16 3 45 2 305 1 349 14 371 3 144 3 92 1 352 4 146 1 51 2 310 2 171 1 24 6 98 1 
27 1 56 1 85 1 79 1 126 1 187 1 193 1 231 1 290 1 185 1 
8 1 103 1 
270 1 56 1 85 1 79 1 187 1 193 1 290 1 212 1 366 1 
220 1 27 1 275 1 56 1 79 1 193 1 35 2 240 1 82 1 185 1 85 1 187 1 287 1 231 1 290 1 110 1 112 1 323 1 
220 1 27 1 275 1 56 1 79 1 193 1 35 2 240 1 82 1 185 1 85 1 187 1 287 1 231 1 290 1 110 1 112 1 323 1 
220 1 27 1 275 1 56 1 79 1 193 1 35 2 240 1 82 1 185 1 85 1 187 1 287 1 231 1 290 1 110 1 112 1 323 1 
285 1 296 1 233 1 
285 1 296 1 233 1 
17 1 328 1 
17 1 328 1 296 1 
183 1 174 1 
56 1 79 1 153 1 174 1 33 1 193 1 103 1 154 2 35 1 195 2 297 1 8 1 85 1 110 1 323 1 220 1 277 2 275 1 183 1 184 1 306 2 50 1 187 1 354 1 207 2 290 1 331 1 
285 1 233 1 
17 1 328 1 296 1 
77 1 262 1 265 1 315 1 210 1 154 2 176 1 137 1 105 1 195 2 245 2 319 1 40 1 299 2 115 1 87 1 277 2 141 1 344 2 16 1 304 1 348 1 349 1 371 1 351 1 123 2 255 1 205 1 24 2 54 1 381 2 
344 2 164 1 102 1 241 1 374 1 268 1 351 1 123 2 340 1 157 1 245 2 159 1 147 2 125 1 23 1 40 1 298 1 322 1 163 1 
344 1 164 1 102 1 241 1 268 1 351 1 123 1 157 1 245 1 159 1 147 2 125 1 23 1 40 1 298 1 322 1 312 1 
344 1 78 1 295 1 118 1 176 1 374 1 351 1 123 1 245 1 159 1 319 1 53 1 40 1 11 1 
344 1 164 1 102 1 241 1 374 1 268 1 351 1 123 1 340 1 157 1 245 1 159 1 147 2 125 1 23 1 40 1 298 1 322 1 
361 1 
73 1 
190 1 173 1 32 1 63 1 271 1 37 1 112 2 323 1 367 1 275 1 117 1 278 1 251 1 201 1 94 1 97 1 74 1 
335 2 336 2 237 6 3 1 63 4 156 1 245 3 246 1 247 2 162 2 112 8 163 1 116 6 344 3 117 6 201 5 165 2 307 1 351 3 123 3 353 2 172 1 74 8 75 1 357 2 264 2 314 2 173 3 32 2 362 2 176 3 271 4 37 4 319 10 217 2 40 4 323 5 182 2 367 12 274 1 275 5 45 2 278 4 369 2 90 1 144 2 46 3 375 2 93 2 95 3 97 9 96 2 53 1 234 1 
335 2 336 2 237 5 360 1 314 2 173 1 32 2 63 2 271 2 37 2 162 2 181 1 112 5 323 1 367 6 116 5 275 1 117 3 15 1 45 2 278 2 305 1 90 1 201 1 165 1 144 2 91 1 93 1 146 1 51 1 310 1 171 1 97 8 74 5 98 1 
336 2 314 1 192 1 293 1 59 1 154 1 267 1 34 1 318 1 63 1 195 1 271 1 37 1 38 1 39 1 162 2 323 1 43 1 277 1 275 1 278 1 327 1 306 1 93 1 72 1 97 2 207 1 74 2 
278 1 32 1 63 1 271 1 37 1 97 1 172 1 74 1 112 1 75 1 
116 5 335 2 336 2 237 5 117 5 45 2 314 2 144 2 93 1 96 1 97 5 162 2 74 5 112 5 367 10 
275 1 173 1 32 1 201 1 112 1 323 1 
173 2 211 1 176 1 63 1 156 2 67 1 271 2 37 2 245 4 319 1 40 1 11 1 323 3 275 3 344 4 278 2 201 4 90 2 165 2 118 1 350 1 225 1 351 1 123 4 97 2 53 2 74 2 332 1 234 1 
77 1 99 1 192 1 315 1 210 1 154 2 133 1 176 1 104 1 195 3 245 1 38 2 319 1 40 1 299 1 115 1 141 1 277 3 344 1 16 1 304 1 306 2 371 1 46 1 351 1 123 1 50 1 170 1 53 1 207 2 24 2 356 1 
116 2 117 2 237 2 324 1 278 1 32 2 90 1 165 1 63 1 271 1 37 1 97 1 74 2 112 4 367 4 
292 1 56 1 290 1 
292 1 56 1 290 1 
27 1 56 1 142 1 183 1 290 1 
292 1 56 1 290 1 
56 1 258 1 290 1 
56 1 258 1 290 1 
56 1 258 1 290 1 
56 1 290 1 
79 1 187 1 
77 4 314 1 315 1 210 1 34 1 341 2 162 1 299 8 13 2 15 1 324 1 16 1 327 1 349 4 371 1 92 1 146 1 377 1 72 1 51 1 310 1 127 1 24 2 
236 1 77 5 335 1 314 1 315 2 210 2 34 1 155 1 341 3 162 2 12 1 299 11 13 2 15 1 324 1 16 2 327 1 349 6 371 2 144 1 92 1 72 1 377 1 146 1 51 1 310 2 127 1 24 4 
77 10 335 2 314 3 315 3 210 3 34 1 155 1 341 4 162 3 12 1 181 1 299 19 41 1 13 3 15 1 324 1 16 3 45 2 305 1 327 1 349 9 371 3 144 2 92 1 72 1 377 1 146 1 51 1 310 1 171 1 127 1 24 6 98 1 
77 7 335 2 314 2 315 3 210 3 34 1 155 1 341 5 162 3 12 2 41 1 299 17 181 1 13 3 15 1 324 1 16 3 45 1 305 1 327 1 349 10 371 3 144 2 92 1 72 1 377 1 146 1 51 1 310 1 171 1 127 1 24 6 98 1 
77 4 314 1 315 1 210 1 34 1 341 2 162 1 299 8 13 2 15 1 324 1 16 1 327 1 349 4 371 1 92 1 146 1 377 1 72 1 51 1 310 1 127 1 24 2 
77 6 335 2 314 2 315 1 210 1 341 2 162 2 12 1 299 12 181 1 13 1 15 1 16 1 45 2 305 1 349 6 371 1 144 2 92 1 146 1 51 1 310 1 171 1 24 2 98 1 
77 8 335 2 314 2 315 4 210 4 34 1 155 1 341 5 162 3 12 2 181 1 299 18 41 2 13 3 15 1 324 1 16 4 45 1 305 1 327 1 349 10 371 4 144 2 92 1 72 1 377 1 146 1 51 1 310 1 171 1 127 1 24 8 98 1 
77 7 335 3 314 2 315 4 210 4 341 6 162 3 12 3 181 1 299 16 41 2 13 3 15 1 16 4 45 2 305 1 349 9 371 4 144 3 92 1 146 1 51 1 310 1 228 1 171 1 24 8 98 1 
77 4 314 1 327 3 349 3 34 3 341 6 377 2 72 1 127 1 162 1 12 3 299 7 13 3 
77 8 335 2 314 2 315 4 210 4 34 1 341 4 162 3 12 1 181 1 299 18 41 2 13 3 15 1 324 1 16 4 45 1 305 1 327 1 349 10 371 4 144 2 92 1 72 1 377 1 146 1 51 1 310 1 228 1 171 1 127 1 24 8 98 1 
77 4 324 1 16 2 314 1 315 2 210 2 327 1 349 4 371 2 34 1 341 3 72 1 377 1 127 1 162 1 12 1 24 4 299 8 41 1 13 2 
73 1 
77 2 335 1 16 1 314 1 45 1 315 1 210 1 349 2 371 1 144 1 155 1 341 2 162 1 24 2 12 1 299 4 13 1 
236 1 77 4 335 1 15 1 314 1 45 1 349 3 144 1 341 2 51 1 310 2 162 1 12 1 299 7 13 1 
236 1 335 2 77 12 152 1 314 3 315 2 210 2 34 2 341 9 320 1 162 3 12 4 299 23 41 2 13 5 15 2 324 1 222 1 16 2 45 2 327 2 349 11 144 2 371 2 72 1 377 1 310 2 127 1 24 4 
77 1 310 1 299 1 
15 1 349 1 299 1 
77 3 335 1 16 1 45 1 314 1 315 1 210 1 349 3 371 1 144 1 155 1 341 3 96 1 162 1 24 2 12 1 299 6 13 2 
77 6 335 2 314 2 315 1 210 1 341 2 162 2 12 1 299 12 181 1 13 1 15 1 16 1 45 2 305 1 349 6 371 1 144 2 92 1 146 1 51 1 310 1 171 1 24 2 98 1 
77 3 314 1 327 1 349 3 34 1 341 2 72 1 162 1 12 1 299 6 13 1 
77 2 16 1 315 1 327 1 210 1 349 1 34 1 371 1 341 2 377 1 320 1 127 1 12 1 24 2 299 3 41 1 13 1 
77 5 16 1 314 2 315 1 293 1 210 1 327 2 349 5 371 1 34 2 92 1 341 5 72 1 162 2 24 2 12 2 299 10 13 3 
16 1 315 1 210 1 349 2 371 1 144 1 92 1 341 1 162 1 24 2 12 1 299 2 
77 2 335 1 16 1 314 1 45 1 315 1 210 1 349 2 371 1 144 1 92 1 341 2 162 1 24 2 12 1 299 4 13 1 
77 2 16 3 315 3 210 3 327 1 349 1 371 3 34 1 92 1 341 2 320 1 228 1 24 6 12 1 41 1 299 3 13 1 
236 1 77 18 335 3 314 5 315 5 210 5 34 3 155 1 341 12 320 1 162 5 12 5 41 2 299 34 13 7 15 3 324 1 16 5 45 3 19 1 327 3 349 16 371 5 144 3 166 1 92 1 72 2 377 1 51 1 310 4 228 1 127 1 24 10 311 1 
195 1 277 1 50 1 66 1 18 1 154 1 149 1 
277 1 250 1 18 1 154 1 36 1 195 1 50 1 66 1 289 1 149 1 379 1 273 1 
123 1 73 1 344 1 245 1 53 1 
277 2 344 1 99 1 133 1 306 1 154 1 46 1 176 1 351 1 123 1 195 2 50 1 245 1 319 1 207 1 53 1 40 1 218 1 
99 1 154 2 133 1 176 2 318 1 156 1 195 2 245 1 319 3 218 1 40 1 277 2 344 1 368 1 306 1 46 2 351 1 375 1 123 1 50 1 353 1 207 2 206 1 
57 1 154 2 133 1 176 2 318 1 156 1 195 2 245 2 319 3 218 1 40 1 277 2 344 2 368 1 306 1 46 2 351 1 375 1 21 1 123 2 50 1 353 1 207 2 206 1 
357 1 362 1 32 1 176 1 156 1 84 1 245 3 319 4 40 1 112 1 323 2 275 2 344 3 201 1 46 1 351 1 375 1 21 1 123 3 49 1 353 1 95 1 53 1 
357 1 275 2 344 3 369 1 32 1 362 1 201 1 46 1 176 1 351 1 375 1 21 1 123 3 156 1 353 1 245 3 319 4 95 1 53 1 40 1 112 1 323 2 
123 1 344 1 221 1 245 1 40 1 351 1 
303 1 221 1 344 7 345 1 238 1 102 1 81 1 46 1 253 1 176 2 351 2 123 7 245 6 329 1 319 3 246 1 205 1 53 2 40 3 163 1 381 1 
99 1 154 1 104 1 341 2 195 2 245 1 244 1 162 1 299 6 163 1 115 2 13 2 344 1 16 2 304 2 306 1 348 1 349 3 351 1 123 1 72 1 257 1 170 1 127 1 207 1 355 1 24 4 77 3 314 1 315 2 210 2 133 1 34 1 135 1 176 1 137 1 319 1 218 1 40 1 277 2 324 1 327 1 145 1 371 2 46 1 377 1 50 2 
357 1 264 1 173 1 32 1 362 1 63 2 297 1 271 2 245 1 37 2 319 2 247 1 217 1 112 1 323 3 275 3 344 1 278 2 369 1 201 2 123 1 95 1 97 1 53 1 172 1 74 1 75 1 234 1 
357 1 221 1 344 2 3 1 46 1 176 1 351 1 123 2 245 2 319 2 246 1 40 2 163 1 
2 1 344 4 118 1 176 1 351 1 21 1 123 4 245 4 319 1 53 1 40 1 11 1 163 1 
344 2 44 1 81 1 46 1 253 1 176 1 121 1 351 1 7 1 123 2 156 1 245 2 319 1 40 2 
123 1 164 1 344 1 245 1 147 1 53 1 23 1 40 1 268 1 351 1 
123 2 344 2 245 2 319 1 205 1 102 1 40 1 176 1 351 1 54 1 163 1 
2 1 344 5 345 1 238 1 118 1 176 2 351 2 123 5 156 1 245 4 319 3 205 1 53 1 40 2 11 1 163 1 
2 1 344 5 238 1 118 1 176 2 351 2 123 5 156 1 245 4 319 3 205 1 53 1 40 2 11 1 163 1 86 1 
277 2 344 1 57 1 133 1 306 1 154 1 46 1 176 1 351 1 123 1 195 2 50 1 245 1 319 1 207 1 53 1 40 1 218 1 
344 1 81 1 46 1 253 1 176 1 351 1 123 1 156 1 245 1 329 1 319 1 246 1 40 2 
50 1 131 1 119 1 71 1 177 1 
275 2 368 1 131 2 32 1 362 1 119 2 71 1 177 2 318 1 297 1 50 1 363 1 139 1 272 1 206 1 112 1 261 1 25 1 323 2 
87 1 195 1 277 1 255 1 262 1 131 1 154 1 71 1 177 1 
363 1 139 1 71 1 
73 1 
358 1 158 1 65 1 196 1 279 1 204 1 64 1 
83 1 65 1 120 1 
358 1 14 1 279 1 58 1 47 1 178 1 64 1 227 2 158 1 65 3 196 3 204 1 
358 1 158 1 65 2 242 1 196 2 279 1 204 1 330 1 64 1 
358 1 58 1 134 1 65 1 158 1 196 1 147 1 10 1 204 1 23 1 322 1 
358 1 158 1 65 1 196 1 204 1 58 1 64 1 
358 1 65 1 196 1 279 1 204 1 58 1 64 2 
358 2 223 1 58 1 64 1 158 1 65 2 196 2 186 1 286 1 204 2 
358 1 279 1 58 1 64 1 65 3 158 2 196 3 242 2 9 1 10 1 204 1 111 1 249 1 
358 1 209 1 279 1 58 1 268 1 64 1 158 1 65 2 157 1 196 2 242 1 147 2 204 1 23 1 322 1 
358 2 279 1 58 1 64 1 65 4 158 2 196 4 242 2 9 1 214 1 10 1 204 2 330 1 
358 1 158 1 65 1 196 1 279 1 204 1 58 1 64 1 
14 1 358 1 279 2 178 1 64 2 227 1 65 4 158 3 242 2 196 4 9 1 22 1 10 1 204 1 
358 1 291 1 302 1 130 1 279 1 58 1 64 1 158 1 65 2 196 2 242 1 204 1 
14 1 358 1 279 1 58 1 339 1 178 2 64 1 227 2 158 1 65 3 196 3 204 1 
158 2 326 2 136 1 114 1 
358 1 65 1 196 1 204 1 58 1 70 1 
358 1 158 1 65 2 242 1 196 2 279 1 204 1 58 1 64 1 249 1 
372 1 
358 1 158 1 65 1 196 1 279 1 204 1 58 1 64 1 
358 1 279 1 58 1 64 1 227 1 65 3 158 1 242 1 196 3 204 1 249 1 
158 1 9 1 22 1 10 1 
158 1 64 1 

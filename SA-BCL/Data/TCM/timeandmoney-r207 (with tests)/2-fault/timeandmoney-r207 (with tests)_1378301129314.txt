#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 232 (138,257) (138,257) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 232 (138,257) (138,257) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 232 (138,257) (138,257) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 232 (138,257) (138,257) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 232 125 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 232 125 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 247 67 276 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 247 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
281 1 62 2 227 1 232 1 25 2 204 1 202 4 176 4 28 9 269 1 271 9 336 2 136 2 182 2 55 3 138 1 92 1 340 6 144 2 218 1 257 1 193 1 347 1 61 1 195 2 302 1 
281 1 62 2 227 1 232 1 25 2 204 1 202 4 176 4 28 9 269 1 271 9 336 2 182 2 136 2 55 3 138 1 92 1 340 6 144 2 218 1 257 1 193 1 347 1 61 1 195 2 302 1 
281 1 62 2 227 1 232 1 25 2 204 1 202 4 176 4 28 9 269 1 271 9 336 2 182 2 136 2 55 3 138 1 92 1 340 6 144 2 218 1 257 1 193 1 347 1 61 1 195 2 302 1 
281 1 62 2 227 1 232 1 25 2 204 1 202 3 176 3 28 7 269 1 271 7 336 2 182 2 136 1 55 2 138 1 92 1 340 4 144 2 218 1 257 1 193 1 61 1 195 2 302 1 
144 1 62 1 25 1 227 1 136 2 55 1 202 2 176 2 28 4 193 1 347 1 340 3 232 1 271 4 336 1 195 1 
62 1 54 1 182 1 375 1 144 1 218 1 296 1 26 1 27 1 202 1 204 1 193 1 28 2 271 2 336 1 195 1 
62 2 182 1 55 1 92 1 340 1 375 1 296 1 202 2 176 1 193 1 28 3 271 3 336 2 
62 2 227 1 136 2 182 1 55 3 230 1 92 1 232 1 340 7 144 1 25 1 202 4 125 1 176 4 269 1 193 1 28 9 347 1 271 9 336 2 195 1 302 1 
62 2 227 1 136 2 182 1 55 3 230 1 92 1 232 1 340 7 144 1 25 1 202 4 125 1 176 4 269 1 193 1 28 9 347 1 271 9 336 2 195 1 302 1 
320 1 151 1 41 1 
146 1 41 1 287 2 
359 1 36 2 255 1 94 2 366 2 68 2 113 2 233 2 
20 1 1 1 21 1 102 2 355 1 325 1 128 1 327 1 80 1 266 1 233 2 359 1 149 1 174 2 366 2 11 2 68 2 113 2 135 1 156 1 57 1 294 1 143 1 253 2 217 1 36 3 255 1 94 3 220 1 74 1 345 2 348 1 97 1 351 1 42 1 300 1 194 1 
359 1 100 1 36 1 94 1 304 1 366 1 215 1 68 1 113 1 233 1 
353 1 167 1 100 1 117 1 339 1 214 1 33 1 233 1 120 1 189 1 36 1 94 1 151 1 41 1 
353 2 167 1 100 1 339 1 214 1 33 2 233 1 120 1 36 1 94 1 151 1 366 1 68 1 41 1 113 1 
353 1 243 1 79 1 248 1 33 1 
353 2 242 1 273 1 243 1 151 1 41 1 248 1 33 2 
353 1 248 1 33 1 
353 1 100 1 243 1 356 1 304 1 215 1 33 1 233 1 359 1 36 1 94 1 366 1 68 1 113 1 
41 1 
353 2 172 1 273 1 243 1 151 1 41 1 248 1 33 2 
241 2 179 1 353 5 273 1 228 1 243 2 263 1 264 1 329 2 33 5 248 2 130 1 277 2 51 1 123 1 334 1 151 1 41 1 380 1 
255 1 320 1 
5 1 233 2 36 2 255 2 94 2 366 1 68 1 299 1 113 1 
180 1 235 1 313 1 
135 1 21 1 355 1 156 1 325 1 80 1 308 1 253 1 36 1 255 1 174 1 149 1 94 1 74 1 11 1 194 1 
135 1 21 1 355 1 325 1 156 1 23 1 80 1 233 1 253 1 341 1 36 2 235 1 149 1 174 1 94 2 74 1 11 1 68 1 113 1 194 1 
23 2 169 1 233 5 159 1 189 1 36 5 341 1 255 1 94 5 366 1 68 4 378 1 113 4 299 1 
100 1 36 2 94 2 245 1 215 1 68 2 113 2 233 2 
36 3 255 1 94 3 366 1 23 1 68 3 113 3 233 3 
100 1 36 1 94 1 215 1 68 1 113 1 233 1 
100 1 36 1 5 1 94 1 366 1 68 1 113 1 299 1 233 1 
353 1 20 1 167 1 100 1 21 1 102 1 355 1 325 1 128 1 327 1 23 1 306 1 80 1 233 3 359 1 149 1 174 1 366 2 11 1 68 3 113 3 69 1 135 1 156 1 339 1 214 1 294 1 33 1 120 1 253 1 217 1 36 4 341 1 255 1 94 4 220 1 74 1 345 2 348 1 299 1 97 1 351 1 42 1 194 1 
189 1 36 2 255 1 94 2 23 1 68 1 378 1 113 1 233 2 
353 1 100 1 167 1 339 1 214 1 23 2 186 1 306 1 33 1 233 3 120 1 341 1 36 3 94 3 366 1 68 3 299 1 41 1 113 3 
23 1 233 2 36 2 235 1 94 2 366 1 313 1 68 2 299 1 113 2 
135 1 21 1 355 1 156 1 325 1 80 1 253 1 36 1 255 1 174 1 149 1 94 1 74 1 11 1 194 1 
135 1 355 1 325 1 80 1 253 1 36 1 255 1 174 1 149 1 94 1 74 1 11 1 346 1 238 1 194 1 
352 1 197 1 20 2 1 2 102 4 128 1 357 1 201 1 310 1 235 2 110 1 313 2 12 1 53 1 337 1 180 2 369 1 119 1 220 1 345 2 348 1 97 1 351 1 42 1 
100 1 167 1 36 1 94 1 245 1 68 1 113 1 233 1 
166 1 316 1 
166 1 316 1 
0 1 272 1 
0 1 272 1 
0 1 272 1 
166 1 83 1 316 1 
166 1 83 1 316 1 
166 1 326 1 316 1 
166 2 0 1 188 1 331 1 272 1 316 2 
166 1 83 1 316 1 
70 1 166 1 316 1 
70 1 166 1 316 1 
70 1 166 1 316 1 
166 1 353 1 326 1 305 1 9 1 129 1 233 2 109 1 68 2 285 1 113 2 134 1 316 1 370 1 33 1 158 1 250 1 142 1 122 1 17 1 36 2 255 1 94 2 376 1 
166 2 353 2 370 2 188 1 107 1 33 2 9 3 142 2 250 2 249 1 122 2 148 1 10 2 162 1 342 1 365 1 41 1 134 1 316 2 
144 1 25 1 195 1 
144 1 26 1 195 1 
144 3 124 1 25 2 26 1 231 1 239 1 
144 2 25 1 26 1 231 1 239 1 314 1 
144 2 25 1 26 1 231 2 239 1 
197 1 353 5 63 2 48 1 228 1 263 3 357 1 328 2 329 1 129 1 171 1 51 2 205 1 151 1 285 1 12 1 53 1 210 1 287 3 241 1 273 1 243 4 16 2 140 1 187 1 248 1 33 5 277 1 146 1 376 1 163 1 41 2 
197 3 353 9 228 1 263 8 199 1 357 3 328 6 329 2 79 5 171 2 51 6 151 1 111 1 12 3 53 3 210 2 287 9 241 2 154 1 273 1 56 1 243 7 16 6 187 1 248 6 33 9 374 5 277 2 58 1 123 1 146 3 376 4 38 1 163 3 41 5 
197 1 353 3 63 1 48 1 263 3 357 1 328 2 329 1 171 1 51 2 205 1 151 1 53 1 12 1 210 1 287 4 241 1 243 2 16 2 33 3 277 1 123 1 146 2 376 1 163 1 41 3 
197 2 353 4 63 2 48 1 263 5 357 2 328 4 199 1 329 1 171 1 51 4 205 1 151 1 111 1 53 2 12 2 210 1 287 7 241 1 243 3 16 4 33 4 277 1 58 1 123 1 146 3 376 2 163 2 41 4 
320 1 80 1 8 1 
93 1 80 1 
206 1 
149 1 325 1 80 1 
116 1 80 1 
149 1 80 1 
149 1 325 1 106 1 8 2 80 3 65 1 
197 1 20 3 1 4 102 7 338 1 119 2 216 1 358 1 311 1 110 3 203 1 96 1 126 1 132 1 12 1 112 1 29 2 
197 1 20 3 1 4 102 7 338 1 119 2 216 1 358 1 311 1 110 3 203 1 96 1 126 1 132 1 12 1 112 1 29 2 
197 1 20 3 1 4 102 7 338 1 119 2 216 1 358 1 191 1 311 1 110 3 203 1 96 1 126 1 132 1 12 1 112 1 29 2 
197 4 20 15 101 4 1 16 102 31 128 1 77 1 357 3 358 1 311 2 361 1 203 2 110 10 132 1 270 3 133 1 29 3 112 2 53 3 12 4 338 2 119 5 291 1 216 5 318 1 95 1 96 1 126 1 163 3 345 2 348 1 97 1 351 1 76 1 
197 1 20 4 1 5 102 9 128 2 311 1 110 4 203 1 132 1 12 1 29 2 112 1 338 1 119 3 185 1 216 1 35 1 96 1 126 1 345 4 348 2 97 2 351 2 76 1 
62 1 355 1 25 1 174 1 26 1 202 1 84 1 11 1 28 2 14 1 271 2 336 1 115 1 182 1 340 1 375 1 253 1 144 2 160 1 124 1 296 1 219 1 161 1 319 1 192 1 193 1 222 1 194 1 195 1 165 1 
62 1 355 1 4 1 234 1 25 1 174 1 26 1 202 1 84 1 11 1 28 3 271 3 336 1 115 1 182 1 340 2 375 1 253 1 144 2 160 1 124 1 296 1 219 1 161 1 192 1 222 1 60 1 194 1 195 1 165 1 
355 1 4 1 234 1 25 1 174 1 26 1 202 1 84 1 11 1 28 2 271 2 182 1 340 2 375 1 253 1 144 2 160 1 124 1 296 1 219 1 161 1 192 1 194 1 165 1 195 1 
226 1 62 1 182 2 355 1 80 1 253 1 160 2 219 2 149 1 161 2 174 1 74 1 28 1 11 1 39 1 349 1 271 1 260 1 336 1 194 1 379 1 60 1 153 1 
62 1 355 1 4 1 25 1 174 1 26 1 84 1 11 1 28 1 271 1 336 1 115 1 182 1 253 1 144 2 160 1 124 1 219 1 161 1 319 1 192 1 193 1 222 1 194 1 195 1 165 1 
32 1 
226 1 167 1 228 1 329 1 6 1 80 1 171 1 282 1 233 1 51 2 174 2 284 2 11 2 86 1 287 2 241 1 15 1 339 1 247 1 184 2 248 6 253 2 189 1 146 2 94 1 350 2 260 1 194 1 261 1 353 5 100 1 103 1 355 1 104 2 263 2 360 2 149 1 150 4 151 1 367 1 315 2 114 1 273 3 117 1 275 1 214 1 372 1 33 5 277 1 120 1 36 1 279 2 74 2 41 2 43 1 
261 1 353 3 167 1 100 1 6 1 233 1 282 1 172 1 150 2 284 1 114 1 273 1 15 1 117 1 339 1 214 1 33 3 248 2 120 1 189 1 36 1 94 1 
261 1 353 3 167 1 100 1 104 1 6 1 233 1 282 1 172 1 150 3 151 1 114 1 273 1 15 1 117 1 339 1 214 1 248 1 33 3 120 1 189 1 36 1 94 1 41 1 
261 1 353 3 167 1 100 1 104 1 6 1 233 1 282 1 172 1 150 3 284 1 151 1 114 1 273 1 15 1 117 1 339 1 214 1 184 1 33 3 248 2 120 1 189 1 36 1 94 1 41 1 
167 1 228 1 229 1 329 1 6 1 282 1 233 1 51 1 172 1 284 4 241 1 15 1 244 1 339 1 247 1 184 4 293 1 248 7 189 1 146 2 94 1 350 2 261 1 353 5 100 1 104 4 263 1 360 2 150 6 151 5 67 1 152 1 315 2 114 1 273 3 117 1 214 1 372 1 33 5 120 1 277 1 36 1 279 2 41 5 
261 1 353 4 167 1 100 1 228 1 104 2 263 1 329 1 6 1 282 1 233 1 51 1 360 2 284 2 150 4 151 1 287 2 315 2 114 1 241 1 273 2 15 1 117 1 339 1 247 1 214 1 184 2 372 1 248 4 33 4 277 1 120 1 189 1 36 1 146 2 279 2 94 1 41 2 350 2 43 1 
261 1 353 4 167 1 100 1 228 1 229 1 104 2 263 1 329 1 6 1 233 1 282 1 51 1 360 2 284 2 150 4 151 1 67 1 315 2 241 1 114 1 273 2 15 1 117 1 339 1 247 1 214 1 184 2 372 1 293 1 248 4 33 4 120 1 277 1 189 1 36 1 146 2 279 2 94 1 41 1 350 2 
261 1 353 4 167 1 100 1 228 1 229 1 104 2 263 1 329 1 6 1 233 1 282 1 51 1 360 2 284 2 150 4 151 1 67 1 315 2 241 1 114 1 273 2 15 1 117 1 339 1 247 1 214 1 184 2 372 1 293 1 248 4 33 4 120 1 277 1 189 1 36 1 146 2 279 2 94 1 41 1 350 2 
261 1 353 2 167 1 100 1 228 1 263 1 329 1 6 1 81 1 233 1 282 1 51 1 360 1 150 2 67 1 315 1 241 1 114 1 155 1 15 1 90 1 117 1 339 1 247 1 214 1 33 2 120 1 276 1 277 1 189 1 36 1 94 1 
261 1 353 4 167 1 100 1 228 1 229 1 104 3 263 1 329 1 6 1 233 1 282 1 51 1 360 2 150 5 284 3 151 1 67 1 152 1 315 2 241 1 114 1 273 2 15 1 117 1 339 1 247 1 214 1 372 1 184 3 293 1 33 4 248 5 277 1 120 1 189 1 36 1 146 2 279 2 94 1 41 1 350 2 
261 1 353 4 167 1 100 1 228 1 229 1 104 3 263 1 329 1 6 1 233 1 282 1 51 1 360 2 150 5 284 3 151 1 67 1 152 1 315 2 241 1 114 1 273 2 15 1 117 1 339 1 247 1 214 1 372 1 184 3 293 1 33 4 248 5 277 1 120 1 189 1 36 1 146 2 279 2 94 1 41 1 350 2 
261 1 353 2 167 1 100 1 228 1 263 1 329 1 6 1 282 1 233 1 51 1 360 1 150 2 315 1 114 1 241 1 155 1 15 1 117 1 90 1 339 1 247 1 214 1 33 2 277 1 120 1 189 1 36 1 94 1 
197 1 20 3 1 3 102 6 128 1 235 1 311 1 203 1 110 2 132 1 313 1 12 1 29 1 337 1 180 1 119 2 255 2 96 1 320 1 220 1 126 1 345 2 348 1 97 1 351 1 42 1 
197 1 20 6 101 3 1 8 2 1 102 14 128 2 77 1 357 1 7 1 52 1 235 11 110 2 270 3 313 4 133 1 53 2 12 2 178 1 180 11 119 1 216 1 157 1 217 1 255 1 220 2 163 2 345 4 348 2 97 2 351 2 42 1 300 1 
20 1 21 1 1 1 102 2 355 1 325 1 128 1 23 1 80 1 308 1 233 1 149 1 174 1 11 1 313 1 68 1 113 1 135 1 156 1 91 1 157 1 253 1 217 1 36 2 341 1 255 1 147 1 94 2 220 1 74 1 345 2 377 1 348 1 97 1 351 1 42 1 194 1 300 1 
1 10 4 1 325 2 128 3 80 2 233 1 174 3 235 7 175 1 132 1 11 3 53 2 12 3 135 2 180 7 292 1 294 2 253 3 341 1 255 2 94 3 96 1 19 1 345 6 348 3 351 3 97 3 300 1 194 2 197 3 20 10 21 2 102 20 355 2 357 2 23 1 200 2 311 1 149 2 108 2 203 1 110 8 313 7 29 1 68 1 113 1 209 2 317 2 119 4 156 2 216 4 157 1 217 1 36 3 220 3 126 1 74 1 163 2 42 3 
226 1 20 1 1 1 102 2 355 2 4 1 128 2 265 1 23 1 307 1 80 3 233 1 174 7 149 2 131 1 11 8 14 1 68 1 113 1 289 1 337 1 71 1 181 1 34 1 253 8 143 2 217 1 36 1 94 1 220 2 74 2 345 4 348 2 97 2 351 2 42 2 260 1 194 2 300 1 
197 1 20 2 1 1 102 3 128 1 357 1 233 1 235 1 110 1 366 1 313 1 68 1 53 1 12 1 113 1 180 1 119 1 157 1 36 1 94 1 220 1 163 1 345 2 322 1 299 1 348 1 97 1 351 1 42 1 
337 1 352 1 180 1 1 2 102 2 128 1 216 1 235 1 110 1 220 1 313 1 345 2 53 1 12 1 348 1 42 1 351 1 97 1 
337 1 197 1 180 1 20 2 102 2 369 1 119 1 128 1 357 1 235 1 110 1 220 1 313 1 345 2 348 1 42 1 351 1 97 1 
197 1 20 2 1 2 102 4 128 1 357 1 235 2 110 2 313 2 12 1 53 1 337 1 180 2 119 1 216 1 220 1 163 1 345 2 348 1 97 1 351 1 42 1 
352 1 180 1 1 2 102 2 128 1 265 1 216 1 235 1 110 1 220 1 313 1 345 2 53 1 12 1 348 1 42 1 351 1 97 1 
197 1 180 1 20 2 102 2 369 1 119 1 128 1 265 1 357 1 235 1 110 1 220 1 313 1 345 2 348 1 42 1 351 1 97 1 
197 1 20 2 1 2 102 4 128 1 265 1 357 1 235 2 110 2 313 2 12 1 53 1 180 2 119 1 216 1 220 1 163 1 345 2 348 1 97 1 351 1 42 1 
197 1 20 2 1 2 102 4 128 1 357 1 235 2 110 2 313 2 12 1 53 1 180 2 119 1 216 1 220 1 163 1 345 2 348 1 97 1 351 1 42 1 
20 1 1 1 21 1 102 2 355 1 325 1 128 1 80 1 149 1 174 1 11 1 135 1 156 1 294 1 253 1 217 1 36 1 255 1 94 1 220 1 74 1 345 2 348 1 42 1 351 1 97 1 300 1 194 1 
20 1 1 1 102 2 355 1 325 1 128 1 80 1 149 1 174 1 11 1 238 1 13 1 135 1 253 1 217 1 36 1 255 1 94 1 220 1 74 1 346 1 345 2 348 1 42 1 351 1 97 1 300 1 194 1 
197 1 20 2 1 2 102 4 128 1 357 1 235 2 110 2 313 2 12 1 53 1 180 2 119 1 216 1 157 1 220 1 163 1 345 2 348 1 97 1 351 1 42 1 
197 1 20 2 1 2 21 1 102 4 355 1 325 1 128 1 357 1 80 1 235 2 174 1 149 1 110 2 313 2 11 1 12 1 53 1 14 1 209 1 180 2 135 1 119 1 156 1 216 1 294 1 253 1 36 1 94 1 220 1 163 1 345 2 348 1 42 1 351 1 97 1 194 1 
197 1 20 1 1 2 102 3 128 1 357 1 233 1 235 1 110 1 366 1 313 1 68 1 53 1 12 1 113 1 180 1 216 1 157 1 36 1 94 1 220 1 163 1 345 2 40 1 299 1 348 1 97 1 351 1 42 1 
197 3 20 10 101 2 1 9 102 19 128 2 77 1 357 3 333 1 267 2 236 1 110 6 270 1 133 1 53 3 12 3 211 1 368 1 119 3 216 3 141 1 35 1 18 2 75 1 298 1 163 3 345 4 348 2 97 2 351 2 
197 2 20 12 1 14 101 2 22 1 102 26 128 3 357 2 267 4 283 1 236 2 110 4 237 1 270 2 133 2 53 3 12 3 211 1 368 1 119 2 216 2 141 2 35 1 73 1 321 1 18 1 298 1 163 3 345 6 348 3 97 3 351 3 76 2 223 1 
1 20 77 1 128 3 333 1 283 1 236 1 237 1 132 1 12 5 53 4 133 3 141 2 295 1 96 1 18 1 298 1 345 6 348 3 351 3 97 3 197 5 20 21 101 4 102 41 22 1 357 4 267 4 311 1 110 8 203 1 270 3 29 1 211 1 368 1 119 4 216 4 35 1 73 1 321 1 126 1 163 4 76 1 223 1 
197 4 20 18 101 4 1 20 22 1 102 38 128 4 77 1 357 3 333 1 267 4 283 1 311 1 236 1 203 1 237 1 110 7 132 1 270 3 29 1 133 3 53 4 12 5 211 1 368 1 119 4 216 3 141 2 295 1 35 1 73 1 96 1 321 1 18 1 126 1 298 1 163 4 345 8 348 4 97 4 351 4 76 2 223 1 
197 8 20 25 101 4 1 27 22 1 102 52 128 2 77 2 357 7 7 2 267 4 283 1 311 1 236 1 203 1 237 1 110 14 132 1 270 4 29 1 133 2 53 7 12 8 211 1 368 1 119 7 216 7 141 1 35 1 73 1 96 1 321 1 18 1 126 1 298 1 163 7 345 4 348 2 97 2 351 2 76 1 223 1 
166 1 122 1 370 1 342 1 188 1 107 1 207 1 250 1 316 1 142 1 
326 1 305 1 
166 1 122 1 168 1 370 1 72 1 212 1 250 1 316 1 142 1 
83 1 246 1 
70 1 331 1 87 1 
166 1 353 1 370 1 188 1 107 1 33 1 9 2 142 1 250 1 249 1 122 1 10 1 162 1 342 1 365 1 41 1 134 1 316 1 
166 1 353 1 370 1 188 1 107 1 33 1 9 2 142 1 250 1 249 1 122 1 10 1 162 1 342 1 365 1 41 1 134 1 316 1 
166 1 353 1 370 1 188 1 107 1 33 1 9 2 142 1 250 1 249 1 122 1 10 1 162 1 342 1 365 1 41 1 134 1 316 1 
83 1 246 1 331 1 
83 1 246 1 331 1 
70 1 87 1 
70 1 331 1 87 1 
17 1 109 1 
166 1 353 1 326 1 305 1 9 1 170 1 129 1 233 2 10 1 109 1 285 1 68 2 113 2 316 1 243 1 370 1 33 1 158 1 249 1 250 1 142 1 122 1 17 1 36 2 255 1 94 2 376 1 
20 1 1 1 102 2 355 1 128 1 80 1 233 2 149 1 174 2 268 1 85 1 11 2 208 1 71 1 30 1 34 1 157 1 253 2 143 2 217 1 190 1 36 2 94 2 220 1 345 2 348 1 351 1 42 1 97 1 194 1 300 1 
31 1 355 1 4 1 144 2 253 2 124 1 25 1 26 1 174 2 161 1 84 1 11 2 14 1 222 1 194 1 195 1 196 1 45 1 165 1 
303 1 31 1 355 1 4 1 144 2 253 1 124 1 25 1 26 1 174 1 161 1 84 1 11 1 222 1 194 1 195 1 165 1 
226 1 355 1 50 1 80 1 253 1 149 1 174 1 161 1 74 1 11 1 349 1 260 1 194 1 196 1 
31 1 355 1 4 1 144 2 253 1 124 1 25 1 26 1 174 1 161 1 84 1 11 1 222 1 194 1 195 1 196 1 45 1 165 1 
278 1 
51 1 263 1 264 1 320 1 151 1 41 1 130 1 
353 1 228 1 263 1 329 1 51 1 151 1 287 1 241 1 273 1 372 1 248 1 33 1 277 1 146 1 279 1 41 2 350 1 
228 4 325 3 328 6 330 2 329 4 80 10 8 2 171 2 130 1 51 8 174 3 335 1 11 3 14 1 53 2 12 2 177 1 88 1 240 2 287 12 241 4 290 2 137 2 16 6 248 5 93 3 253 3 252 2 254 1 256 2 146 6 194 3 353 5 197 2 355 4 264 1 263 9 106 1 357 2 149 3 362 1 151 2 317 2 273 3 116 2 275 1 214 2 33 5 277 4 74 1 163 2 221 2 41 8 280 2 
353 1 197 2 101 1 324 1 228 2 263 8 328 5 357 2 329 2 171 1 51 5 283 1 237 1 151 2 270 1 133 1 53 2 12 2 287 6 241 2 273 1 290 2 274 1 16 5 275 1 33 1 248 1 277 2 73 1 146 3 321 1 163 2 41 5 280 1 223 1 
353 1 197 1 100 1 228 1 263 2 356 1 304 1 329 1 233 1 51 2 359 1 311 1 203 1 366 1 132 1 12 2 68 1 113 1 241 1 290 2 215 1 293 1 33 1 277 1 36 1 94 1 280 1 44 1 
241 1 228 1 264 1 263 1 329 1 130 1 277 1 51 1 151 1 41 1 
197 2 290 2 16 5 263 5 328 5 357 2 51 5 146 5 163 2 53 2 12 2 41 5 280 1 317 1 287 10 
353 1 273 1 151 1 41 1 33 1 248 1 
353 3 226 1 354 1 228 1 355 1 103 1 263 2 329 2 80 1 171 2 51 2 149 1 174 4 362 2 11 4 367 1 241 2 89 1 273 2 275 2 248 4 33 3 277 2 253 4 123 1 254 1 74 2 260 1 194 1 
20 1 21 1 102 1 355 1 325 1 128 1 327 1 80 1 233 2 359 1 174 1 149 1 366 2 11 1 68 2 113 2 135 1 156 1 294 1 253 1 217 1 36 3 255 1 94 3 220 1 74 1 345 2 348 1 97 1 42 1 351 1 194 1 
241 1 228 1 16 2 263 1 328 2 275 1 329 1 171 1 277 1 51 2 146 2 151 2 29 1 41 4 287 4 
213 1 370 1 250 1 
213 1 370 1 250 1 
370 1 312 1 109 1 342 1 250 1 
213 1 370 1 250 1 
370 1 309 1 250 1 
370 1 309 1 250 1 
370 1 309 1 250 1 
370 1 250 1 
166 1 316 1 
197 1 20 4 1 4 102 8 119 2 128 2 216 1 311 1 110 3 96 1 203 1 126 1 132 1 345 4 29 1 12 1 348 2 351 2 97 2 76 1 
197 1 20 3 1 3 102 6 119 2 311 1 320 1 96 1 203 1 110 2 126 1 132 1 29 1 12 1 
197 1 20 2 1 2 102 4 119 1 128 1 357 1 216 1 64 1 110 2 163 1 345 2 53 1 12 1 348 1 351 1 97 1 
197 1 20 4 1 3 101 2 102 7 119 1 110 2 77 1 357 1 163 1 216 1 270 1 12 1 53 1 133 1 
197 3 20 12 1 11 101 2 102 23 77 1 128 2 357 2 7 1 311 2 52 1 203 2 110 9 132 1 270 2 29 1 12 3 53 2 119 5 216 4 297 1 96 1 126 1 163 2 345 4 348 2 351 2 97 2 76 2 
20 1 101 1 102 1 
1 1 102 1 270 1 
197 1 20 3 1 3 102 6 119 2 128 1 357 1 216 1 64 1 110 3 163 1 345 2 53 1 12 1 348 1 97 1 351 1 317 1 
197 2 20 6 1 6 101 1 102 12 119 1 128 1 357 2 216 1 35 1 73 1 283 1 110 2 321 1 237 1 163 2 345 2 270 1 12 2 53 2 133 1 348 1 351 1 97 1 223 1 
197 1 20 3 1 3 102 6 119 1 216 1 311 1 203 1 110 2 132 1 12 1 
20 2 1 1 102 3 119 1 128 1 216 1 311 1 297 1 110 2 203 1 96 1 126 1 345 2 348 1 351 1 97 1 76 1 
197 2 20 5 1 5 102 10 119 3 128 1 216 2 35 1 311 2 203 2 110 5 132 1 345 2 12 2 348 1 97 1 351 1 44 1 
1 2 102 2 128 1 216 1 35 1 110 1 345 2 53 1 12 1 348 1 351 1 97 1 
197 1 20 2 1 2 102 4 119 1 128 1 357 1 216 1 35 1 110 2 163 1 345 2 53 1 12 1 348 1 351 1 97 1 
20 2 1 1 102 3 119 1 128 3 216 1 35 1 333 1 311 1 297 1 203 1 110 2 345 6 348 3 351 3 97 3 76 1 
197 5 20 18 101 4 1 16 102 34 128 5 77 1 357 3 64 1 333 1 311 3 203 3 110 12 132 2 270 3 29 1 133 1 53 3 12 5 119 7 291 1 216 5 35 1 318 1 297 1 95 1 96 1 126 1 163 3 345 10 348 5 97 5 351 5 76 2 
197 1 20 4 101 1 1 4 102 8 128 1 311 1 237 1 203 1 110 2 132 1 270 1 29 1 12 1 133 1 119 2 35 1 96 1 126 1 345 2 348 1 97 1 351 1 
197 1 20 5 101 2 1 6 102 11 128 2 77 1 64 1 311 1 203 1 237 1 110 3 132 1 270 1 29 1 133 1 53 1 12 2 119 2 216 1 35 1 96 1 126 1 163 1 345 4 348 2 97 2 351 2 
197 3 20 10 101 1 1 9 102 19 128 3 357 2 64 1 283 1 311 1 203 1 237 1 110 4 132 1 270 1 29 1 133 1 53 2 12 3 119 3 216 1 35 1 73 1 96 1 321 1 126 1 163 2 345 6 348 3 97 3 351 3 76 1 223 1 
197 2 20 7 101 1 1 10 102 17 128 3 357 1 64 1 283 1 311 1 203 1 237 1 110 5 132 1 270 1 29 1 133 1 53 2 12 3 119 3 216 2 35 1 73 1 96 1 321 1 126 1 163 2 345 6 348 3 97 3 351 3 76 1 223 1 
197 1 20 4 101 1 1 4 102 8 128 1 311 1 237 1 203 1 110 2 132 1 270 1 29 1 12 1 133 1 119 2 35 1 96 1 126 1 345 2 348 1 97 1 351 1 
197 2 20 6 1 6 101 1 102 12 119 1 128 1 357 2 216 1 35 1 73 1 283 1 110 2 321 1 237 1 163 2 345 2 270 1 12 2 53 2 133 1 348 1 351 1 97 1 223 1 
197 2 20 8 101 1 1 10 102 18 128 4 357 1 64 1 283 1 311 1 203 1 237 1 110 5 132 1 270 1 29 1 133 1 53 2 12 3 119 3 216 2 35 1 73 1 96 1 321 1 126 1 163 2 345 8 348 4 97 4 351 4 76 2 223 1 
197 2 20 7 101 1 1 9 102 16 128 4 357 2 333 1 283 1 237 1 110 6 270 1 133 1 53 3 12 3 119 3 216 3 35 1 73 1 321 1 163 3 345 8 348 4 97 4 351 4 76 2 223 1 
197 1 20 4 1 3 102 7 119 3 216 3 311 3 96 1 203 3 110 6 126 2 132 1 12 1 
197 2 20 8 101 1 1 10 102 18 128 4 357 1 333 1 283 1 311 1 203 1 237 1 110 4 132 1 270 1 29 1 133 1 53 2 12 3 119 3 216 1 35 1 73 1 96 1 321 1 126 1 163 2 345 8 348 4 97 4 351 4 76 2 223 1 
189 1 36 1 255 1 94 1 378 1 233 1 288 1 
233 1 251 1 189 1 37 1 36 1 255 1 94 1 59 1 378 1 98 1 127 1 288 1 
253 1 226 1 149 1 174 1 355 1 320 1 74 1 11 1 80 1 260 1 194 1 
135 1 21 1 355 1 325 1 23 1 80 1 233 1 253 1 36 2 255 1 149 1 174 1 94 2 74 1 11 1 68 1 113 1 194 1 
100 1 167 1 135 1 21 1 116 1 355 1 325 2 23 1 80 3 233 2 120 1 253 1 36 2 255 1 149 2 174 1 94 2 362 1 11 1 68 1 113 2 194 1 240 1 
167 1 100 1 355 1 105 1 325 2 23 1 80 3 233 2 174 2 149 2 362 1 11 2 68 1 113 2 240 1 135 1 116 1 120 1 253 2 36 2 255 1 94 2 346 1 194 1 
353 2 355 1 105 1 325 1 8 1 80 4 24 1 174 3 149 1 362 1 151 1 11 3 240 1 116 1 118 1 214 1 248 1 33 2 93 1 253 3 74 1 41 1 194 1 
353 2 116 1 355 1 105 1 325 1 214 1 33 2 80 4 248 1 8 1 253 3 93 1 149 1 174 3 362 1 151 1 74 1 11 3 41 1 221 1 194 1 240 1 
253 1 174 1 355 1 11 1 194 1 289 1 
181 1 47 1 3 1 355 3 4 1 325 1 106 1 307 1 80 3 34 1 143 1 253 7 174 6 149 2 131 1 344 1 74 2 11 7 14 1 194 2 289 1 
1 3 325 1 128 2 80 1 233 1 174 1 235 1 85 1 132 1 11 1 14 1 12 1 135 1 180 1 294 1 253 1 255 2 94 2 96 1 345 4 348 2 351 2 97 2 194 1 197 1 20 3 21 1 102 6 355 1 23 1 200 1 149 1 311 1 203 1 110 2 313 1 68 1 29 1 113 1 209 1 156 1 119 2 157 1 36 2 220 2 126 1 42 2 
353 3 228 2 263 1 264 1 329 2 330 1 80 2 8 1 130 1 51 1 174 1 151 1 11 1 241 2 273 1 137 1 243 1 214 1 33 3 248 2 277 2 253 1 93 1 254 1 256 1 74 1 41 1 221 1 
355 2 325 1 106 1 8 1 80 2 253 2 174 2 149 1 335 1 11 2 14 1 194 1 289 1 
226 1 355 1 105 1 80 1 253 4 174 4 149 1 363 1 74 1 11 4 14 1 260 1 194 1 
47 1 355 2 325 1 198 1 80 1 253 2 174 2 149 1 362 1 259 1 175 1 344 1 11 2 194 1 
144 1 253 1 26 1 174 1 355 1 74 1 11 1 194 1 195 1 165 1 
30 1 355 1 4 1 80 1 34 1 253 2 174 2 149 1 11 2 14 1 194 1 
226 1 355 2 307 1 80 3 34 1 253 5 174 4 149 2 363 1 362 1 131 1 74 1 11 5 14 1 260 1 194 2 
226 1 355 2 307 1 80 3 34 1 253 5 174 4 149 2 363 1 362 1 74 1 11 5 14 1 260 1 286 1 194 2 
135 1 355 1 325 1 23 1 80 1 233 1 253 1 36 2 255 1 149 1 174 1 94 2 74 1 11 1 346 1 68 1 113 1 194 1 
47 1 3 1 355 2 325 1 106 1 80 1 253 1 174 1 149 1 362 1 344 1 11 1 194 1 
46 1 262 1 255 1 258 1 225 1 
46 2 353 2 100 1 167 1 262 2 243 1 339 1 139 1 214 1 306 1 33 2 120 1 121 1 255 1 258 1 151 1 41 1 224 1 225 2 
46 1 36 1 190 1 262 1 94 1 268 1 258 1 208 1 233 1 
121 1 258 1 139 1 
375 1 296 1 202 1 320 1 
375 1 62 1 296 1 202 1 28 1 271 1 336 1 
160 1 182 1 271 1 
62 1 49 1 332 1 375 1 296 1 202 1 204 2 343 1 193 1 28 3 271 3 336 1 
375 1 62 1 296 1 136 1 202 1 28 2 340 1 271 2 336 1 
62 1 227 1 144 1 25 1 202 1 176 1 193 1 28 1 271 1 336 1 195 1 
62 1 296 1 202 1 28 1 193 1 271 1 336 1 
375 1 62 1 296 2 28 1 193 1 271 1 336 1 
62 2 373 1 296 1 202 1 193 1 28 2 323 1 271 2 336 2 164 1 
62 1 55 1 340 2 375 1 296 1 202 2 176 1 193 1 28 3 269 1 271 3 336 1 302 1 
62 1 371 1 340 1 375 1 144 2 124 1 296 1 25 1 26 1 202 1 193 1 28 2 271 2 336 1 195 1 
62 2 136 1 55 1 340 2 375 1 296 1 202 2 176 1 193 1 28 4 347 1 271 4 336 2 
375 1 62 1 296 1 202 1 28 1 193 1 271 1 336 1 
62 1 55 1 340 2 332 1 375 2 296 2 204 1 202 3 343 1 66 1 176 1 28 4 271 4 336 1 
375 1 62 1 296 1 183 1 202 1 230 1 28 2 193 1 340 1 271 2 336 1 301 1 
62 1 332 2 375 1 145 1 296 1 202 1 204 2 343 1 193 1 28 3 271 3 336 1 
99 2 364 1 202 2 78 1 
62 1 173 1 28 1 193 1 271 1 336 1 
375 1 62 1 296 1 202 1 28 2 193 1 340 1 271 2 336 1 302 1 
82 1 
375 1 62 1 296 1 202 1 28 1 193 1 271 1 336 1 
62 1 340 1 375 1 296 1 204 1 202 1 193 1 28 3 271 3 336 1 302 1 
55 1 202 1 66 1 176 1 
296 1 202 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 126 109 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
308 2 244 6 247 1 91 1 134 2 356 1 112 1 339 1 35 1 256 9 185 1 188 1 39 1 14 1 97 9 144 2 162 1 262 1 210 1 118 2 164 2 372 1 52 4 169 1 213 5 301 2 239 2 55 3 
308 2 244 6 247 1 91 1 134 2 356 1 112 1 339 1 35 1 256 9 185 1 188 1 39 1 14 1 97 9 144 2 162 1 262 1 210 1 118 2 164 2 372 1 52 4 169 1 213 5 301 2 239 2 55 3 
308 2 244 7 247 1 91 1 134 2 356 1 112 1 339 1 35 1 256 10 185 1 188 1 39 1 14 1 97 10 144 2 162 1 262 1 210 1 118 2 164 2 372 1 52 5 169 1 213 6 301 2 239 2 55 4 
308 2 244 4 91 1 134 2 356 1 112 1 339 1 35 1 256 7 185 1 188 1 39 1 14 1 97 7 144 2 162 1 262 1 210 1 118 1 164 2 372 1 52 3 169 1 213 4 301 2 239 2 55 2 
97 4 144 1 262 1 308 1 118 2 164 1 244 3 247 1 372 1 134 1 356 1 52 2 169 1 213 3 301 1 256 4 55 1 39 1 
97 2 262 1 308 1 74 1 164 1 91 1 372 1 134 1 213 1 169 1 194 1 301 1 339 1 239 1 256 2 319 1 
213 2 169 1 97 3 301 2 262 1 239 1 164 2 244 1 256 3 55 1 185 1 372 1 52 1 
14 1 97 9 144 1 162 1 262 1 308 1 118 2 164 2 244 7 247 1 372 1 134 1 356 1 52 4 213 5 169 1 301 2 239 1 256 9 9 1 185 1 55 3 39 1 367 1 
14 1 97 9 144 1 162 1 262 1 308 1 118 2 164 2 244 7 247 1 372 1 134 1 356 1 52 4 213 5 169 1 301 2 239 1 256 9 9 1 185 1 55 3 39 1 367 1 
28 1 145 1 69 1 
171 1 69 1 173 2 
73 2 136 2 266 2 108 1 184 1 238 2 287 2 63 2 
243 1 179 1 156 1 353 1 108 1 221 1 110 2 336 1 335 1 63 2 135 2 288 1 136 2 137 1 253 1 68 1 184 1 233 1 73 3 261 1 143 2 15 1 98 1 266 2 165 1 238 3 49 1 75 1 20 1 195 2 54 1 149 1 201 2 129 1 287 2 219 1 87 1 
73 1 136 1 170 1 266 1 355 1 184 1 238 1 146 1 287 1 63 1 
73 1 242 1 145 1 203 1 193 1 238 1 146 1 290 1 136 1 216 1 255 1 69 1 10 1 351 1 
73 1 242 1 145 1 266 1 238 1 146 1 63 1 290 1 136 1 216 2 255 1 69 1 10 2 287 1 351 1 
142 1 216 1 43 1 47 1 10 1 
142 1 352 1 145 1 216 2 47 1 69 1 10 2 305 1 
142 1 216 1 10 1 
73 1 355 1 266 1 47 1 238 1 146 1 63 1 136 1 216 1 170 1 172 1 184 1 10 1 287 1 
69 1 
142 1 145 1 216 2 326 1 47 1 69 1 10 2 305 1 
142 2 295 1 145 1 106 2 265 1 204 1 47 2 180 1 269 2 216 5 270 2 22 1 36 1 69 1 10 5 304 1 305 1 153 1 191 1 
28 1 108 1 
73 2 44 1 266 1 108 2 238 2 63 1 136 2 196 1 287 1 
1 1 183 1 322 1 
73 1 143 1 156 1 283 1 98 1 108 1 238 1 221 1 110 1 336 1 335 1 288 1 20 1 54 1 149 1 201 1 
73 2 96 1 143 1 156 1 98 1 322 1 266 1 238 2 221 1 297 1 110 1 336 1 335 1 288 1 20 1 136 1 54 1 149 1 201 1 287 1 
73 5 96 1 193 1 266 4 108 1 238 5 297 2 63 1 136 5 196 1 324 1 314 1 125 1 287 4 
73 2 136 2 170 1 266 2 238 2 60 1 146 1 287 2 
73 3 136 3 266 3 108 1 238 3 297 1 63 1 287 3 
73 1 136 1 170 1 266 1 238 1 146 1 287 1 
73 1 136 1 196 1 44 1 266 1 238 1 146 1 287 1 63 1 
243 1 156 1 242 1 353 1 29 1 108 1 221 1 110 1 336 1 335 1 63 2 135 1 288 1 290 1 136 3 137 1 253 1 255 1 68 1 233 1 184 1 10 1 73 4 96 1 143 1 98 1 266 3 238 4 146 1 297 1 75 1 20 1 195 2 196 1 216 1 54 1 149 1 201 1 128 1 129 1 287 3 351 1 219 1 87 1 
73 2 136 2 193 1 314 1 266 1 108 1 238 2 297 1 287 1 
73 3 96 1 242 1 29 1 266 3 238 3 146 1 297 2 63 1 290 1 136 3 196 1 216 1 255 1 69 1 10 1 279 1 287 3 351 1 
73 2 136 2 196 1 183 1 322 1 266 2 238 2 297 1 287 2 63 1 
73 1 143 1 156 1 98 1 108 1 238 1 221 1 110 1 335 1 336 1 288 1 20 1 54 1 149 1 201 1 
73 1 143 1 98 1 108 1 238 1 221 1 110 1 335 1 336 1 20 1 6 1 54 1 81 1 149 1 201 1 
1 2 243 1 353 1 249 1 135 4 64 1 253 1 205 1 183 2 161 1 95 1 258 1 322 2 49 2 75 1 195 2 285 1 102 1 197 1 199 1 129 2 219 1 272 1 87 1 
73 1 136 1 266 1 238 1 146 1 60 1 351 1 287 1 
370 1 51 1 
370 1 51 1 
267 1 379 1 
267 1 379 1 
267 1 379 1 
348 1 370 1 51 1 
66 1 370 1 51 1 
53 1 267 1 370 2 51 2 282 1 379 1 
348 1 370 1 51 1 
348 1 370 1 51 1 
316 1 370 1 51 1 
316 1 370 1 51 1 
316 1 370 1 51 1 
354 1 108 1 159 1 224 1 33 1 136 2 66 1 231 1 312 1 257 1 10 1 189 1 73 2 368 1 369 1 266 2 370 1 238 2 51 1 48 1 216 1 80 1 200 1 287 2 
117 1 368 3 369 2 331 2 107 1 370 2 51 2 224 2 181 1 216 2 231 1 363 1 312 2 67 1 365 1 69 1 257 2 10 2 282 1 
144 1 308 1 134 1 
308 1 319 1 134 1 
144 2 79 1 308 3 167 1 345 1 319 1 
358 1 144 1 308 2 167 1 345 1 319 1 
144 1 308 2 167 1 345 2 319 1 
306 1 106 1 354 1 131 1 333 1 180 1 8 2 10 5 69 2 95 1 114 1 189 1 258 1 342 2 142 1 295 3 145 1 321 1 47 4 373 1 285 1 269 1 216 5 197 1 270 1 171 1 376 2 200 1 304 2 305 1 173 3 241 1 
306 2 329 5 106 2 131 3 246 1 180 1 362 1 10 9 69 5 341 1 95 3 189 4 114 2 258 3 191 1 234 1 342 6 142 6 295 8 145 1 43 5 47 7 373 1 285 3 269 2 216 9 197 3 270 2 171 3 376 6 24 1 304 6 305 1 173 9 350 1 
306 1 106 1 131 1 8 1 69 3 10 3 95 1 114 1 189 1 258 1 191 1 342 2 295 3 145 1 321 1 47 2 269 1 285 1 216 3 197 1 270 1 171 2 376 2 304 2 173 4 241 1 
306 1 106 1 131 2 246 1 362 1 8 2 69 4 10 4 95 2 114 1 189 2 258 2 191 1 342 4 295 5 145 1 321 1 47 3 269 1 285 2 216 4 197 2 270 1 171 3 376 4 24 1 304 4 173 7 241 1 
361 1 28 1 336 1 
336 1 207 1 
374 1 
149 1 336 1 335 1 
30 1 336 1 
149 1 336 1 
361 2 149 1 198 1 340 1 336 3 335 1 
40 1 49 4 101 1 135 7 32 2 197 1 160 1 104 1 84 1 199 2 93 1 129 3 258 1 366 1 272 3 208 1 57 1 
40 1 49 4 101 1 135 7 32 2 197 1 160 1 104 1 84 1 199 2 93 1 129 3 258 1 366 1 272 3 208 1 57 1 
40 1 49 4 101 1 135 7 32 2 197 1 160 1 104 1 313 1 84 1 199 2 93 1 129 3 258 1 366 1 272 3 208 1 57 1 
243 1 273 1 353 1 131 3 158 1 334 4 135 31 32 3 160 2 93 1 95 3 366 1 258 4 208 2 320 1 40 2 42 1 284 3 49 16 101 2 75 1 195 2 214 1 285 3 197 4 104 1 84 1 199 5 127 1 129 15 105 1 219 1 272 10 57 5 
243 2 353 2 248 1 135 9 32 2 160 1 93 1 258 1 366 1 208 1 40 1 49 5 75 2 101 1 195 4 197 1 347 1 199 3 84 1 129 4 105 1 219 2 272 4 57 1 
308 2 309 1 132 1 244 1 220 1 110 1 62 1 134 1 225 1 250 1 256 2 11 1 319 1 97 2 144 1 143 1 262 1 164 1 98 1 372 1 268 1 213 1 169 1 301 1 79 1 54 1 239 1 82 1 201 1 26 1 
27 1 308 2 132 1 244 2 220 1 110 1 62 1 134 1 225 1 250 1 289 1 256 3 11 1 319 1 97 3 144 1 143 1 262 1 164 1 98 1 372 1 213 1 301 1 79 1 54 1 239 1 82 1 377 1 201 1 26 1 
97 2 144 1 27 1 143 1 262 1 308 2 98 1 132 1 220 1 244 2 62 1 110 1 372 1 134 1 250 1 213 1 79 1 54 1 239 1 256 2 377 1 11 1 201 1 319 1 26 1 
132 2 110 1 336 1 250 2 357 1 289 1 311 1 256 1 97 1 143 1 264 1 164 1 98 1 20 1 301 1 54 1 103 1 239 2 149 1 201 1 25 1 26 2 155 1 
308 2 132 1 220 1 110 1 62 1 134 1 225 1 250 1 256 1 11 1 319 1 97 1 144 1 143 1 164 1 98 1 268 1 169 1 301 1 79 1 54 1 239 1 82 1 377 1 201 1 26 1 
293 1 
0 1 242 1 157 1 106 1 203 1 110 2 336 1 290 1 252 1 7 2 255 1 69 2 10 5 114 1 13 1 73 1 295 2 296 1 20 2 21 1 269 1 215 1 216 5 270 1 171 2 303 1 305 3 304 2 173 2 351 1 175 4 274 2 180 1 357 1 227 2 136 1 138 2 364 1 187 1 317 1 142 6 143 2 145 1 235 2 98 1 193 1 46 2 238 1 146 1 286 2 103 1 54 1 148 1 149 1 201 2 
242 1 157 1 203 1 290 1 136 1 252 1 138 1 255 1 364 1 10 3 317 1 73 1 142 2 193 1 238 1 146 1 21 1 216 3 326 1 305 1 351 1 175 2 
242 1 157 1 203 1 290 1 136 1 252 1 255 1 7 1 364 1 10 3 69 1 317 1 73 1 142 1 145 1 193 1 238 1 146 1 21 1 216 3 326 1 305 1 351 1 175 3 
242 1 157 1 274 1 203 1 290 1 136 1 252 1 138 1 255 1 7 1 364 1 10 3 69 1 317 1 73 1 142 2 145 1 193 1 238 1 146 1 21 1 216 3 326 1 305 1 351 1 175 3 
0 1 88 1 58 1 242 1 157 1 274 4 106 1 203 1 180 1 226 1 290 1 227 2 136 1 252 1 138 4 7 4 255 1 364 1 186 1 69 5 10 5 13 1 140 1 317 1 73 1 142 7 295 1 235 2 145 5 193 1 46 2 238 1 146 1 21 1 269 1 286 2 216 5 270 1 171 2 326 1 304 1 305 3 351 1 175 6 
0 1 242 1 157 1 106 1 203 1 290 1 252 1 255 1 7 2 10 4 69 2 13 1 73 1 295 1 21 1 269 1 216 4 270 1 171 2 304 1 305 2 173 2 351 1 175 4 274 2 180 1 136 1 227 2 138 2 364 1 317 1 142 4 235 2 145 1 193 1 46 2 238 1 146 1 286 2 148 1 
0 1 58 1 242 1 274 2 157 1 106 1 203 1 180 1 290 1 227 2 136 1 138 2 252 1 7 2 255 1 364 1 69 1 186 1 10 4 13 1 317 1 140 1 73 1 142 4 295 1 145 1 235 2 193 1 46 2 238 1 146 1 21 1 269 1 286 2 216 4 270 1 171 2 305 2 304 1 351 1 175 4 
0 1 58 1 242 1 274 2 157 1 106 1 203 1 180 1 290 1 227 2 136 1 138 2 252 1 7 2 255 1 364 1 69 1 186 1 10 4 13 1 317 1 140 1 73 1 142 4 295 1 145 1 235 2 193 1 46 2 238 1 146 1 21 1 269 1 286 2 216 4 270 1 171 2 305 2 304 1 351 1 175 4 
0 1 242 1 274 2 157 1 106 1 203 1 180 1 275 1 290 1 136 1 138 2 252 1 7 2 255 1 364 1 69 1 186 1 10 4 317 1 280 1 73 1 142 4 295 1 145 1 235 2 193 1 19 1 238 1 146 1 21 1 269 1 78 2 286 2 216 4 270 1 150 2 305 2 304 1 173 2 351 1 175 4 
0 1 58 1 242 1 157 1 274 3 106 1 203 1 180 1 290 1 226 1 227 2 136 1 252 1 138 3 255 1 7 3 364 1 69 1 186 1 10 4 13 1 140 1 317 1 73 1 142 5 295 1 145 1 235 2 193 1 46 2 238 1 146 1 21 1 269 1 286 2 216 4 270 1 171 2 305 2 304 1 351 1 175 5 
0 1 58 1 242 1 157 1 274 3 106 1 203 1 180 1 290 1 226 1 227 2 136 1 252 1 138 3 255 1 7 3 364 1 69 1 186 1 10 4 13 1 140 1 317 1 73 1 142 5 295 1 145 1 235 2 193 1 46 2 238 1 146 1 21 1 269 1 286 2 216 4 270 1 171 2 305 2 304 1 351 1 175 5 
0 1 242 1 274 2 157 1 106 1 203 1 180 1 290 1 136 1 138 2 252 1 7 2 255 1 364 1 69 1 10 4 317 1 280 1 73 1 142 4 295 1 145 1 235 2 193 1 238 1 146 1 21 1 269 1 78 2 286 2 216 4 270 1 148 1 150 2 305 2 304 1 173 2 351 1 175 4 
1 1 40 1 243 1 28 1 353 1 322 1 108 2 49 3 135 6 75 1 32 1 195 2 197 1 160 1 253 1 183 1 84 1 199 2 161 1 93 1 129 3 258 1 366 1 272 2 219 1 87 1 
1 11 243 2 353 2 131 2 108 1 334 3 135 14 338 1 253 1 183 4 68 1 95 1 258 2 320 1 41 1 15 1 212 1 322 11 284 3 49 8 75 2 122 1 195 4 77 1 214 1 285 2 197 1 199 1 129 6 272 2 219 2 57 1 87 2 
156 1 243 1 353 1 108 1 221 1 110 1 336 1 335 1 135 2 288 1 136 1 253 1 183 1 68 1 38 1 73 2 96 1 143 1 15 1 236 1 98 1 283 1 266 1 238 2 297 1 49 1 75 1 300 1 20 1 195 2 77 1 54 1 149 1 201 1 129 1 287 1 219 1 87 1 
1 7 243 3 156 2 108 2 110 3 335 2 336 2 111 2 288 2 251 1 160 1 253 3 68 1 258 3 259 1 209 2 73 3 15 1 266 1 297 1 75 3 20 1 77 1 84 1 129 10 219 3 272 8 87 3 353 3 131 2 221 2 135 20 32 1 359 2 136 1 183 7 315 2 233 2 93 1 95 2 366 1 40 1 96 1 143 3 98 2 322 7 371 1 238 3 49 10 195 6 285 2 197 3 54 2 149 2 377 1 199 4 201 3 287 1 57 4 
178 1 243 2 179 2 353 2 309 1 245 1 61 1 110 8 336 3 135 2 357 1 136 1 360 1 253 2 68 1 161 1 94 1 190 1 73 1 143 7 15 1 98 2 99 1 266 1 238 1 297 1 49 1 75 2 20 2 195 4 54 2 103 1 149 2 377 1 201 8 129 1 287 1 219 2 87 2 
1 1 243 1 353 1 131 1 5 1 63 1 135 3 136 1 253 1 183 1 95 1 258 1 73 1 322 1 266 1 238 1 49 1 75 1 195 2 77 1 285 1 196 1 197 1 199 1 129 2 287 1 272 1 219 1 87 1 
1 1 243 1 353 1 322 1 49 2 249 1 135 2 75 1 195 2 285 1 253 1 183 1 161 1 258 1 272 1 219 1 57 1 87 1 
1 1 243 1 353 1 322 1 135 2 75 1 195 2 102 1 253 1 197 1 183 1 199 1 161 1 95 1 129 2 272 1 219 1 87 1 
1 2 243 1 353 1 131 1 135 4 253 1 183 2 161 1 95 1 258 1 322 2 49 2 75 1 195 2 285 1 197 1 199 1 129 2 219 1 272 2 87 1 57 1 
1 1 243 1 353 1 322 1 49 2 249 1 135 2 75 1 195 2 285 1 253 1 183 1 190 1 258 1 272 1 219 1 57 1 87 1 
1 1 243 1 353 1 322 1 135 2 75 1 195 2 102 1 253 1 197 1 183 1 199 1 95 1 129 2 190 1 272 1 219 1 87 1 
1 2 243 1 353 1 131 1 135 4 253 1 183 2 95 1 258 1 190 1 322 2 49 2 75 1 195 2 285 1 197 1 199 1 129 2 219 1 272 2 87 1 57 1 
1 2 243 1 353 1 131 1 135 4 253 1 183 2 95 1 258 1 322 2 49 2 75 1 195 2 285 1 197 1 199 1 129 2 219 1 272 2 87 1 57 1 
156 1 243 1 353 1 108 1 221 1 110 1 335 1 336 1 135 2 288 1 253 1 68 1 233 1 73 1 143 1 15 1 98 1 238 1 49 1 75 1 20 1 195 2 54 1 149 1 201 1 129 1 219 1 87 1 
243 1 353 1 108 1 221 1 110 1 335 1 336 1 135 2 6 1 253 1 68 1 73 1 143 1 15 1 98 1 238 1 49 1 50 1 75 1 20 1 195 2 54 1 149 1 81 1 201 1 129 1 219 1 87 1 
1 2 243 1 353 1 131 1 135 4 253 1 183 2 95 1 258 1 322 2 49 2 75 1 195 2 285 1 77 1 197 1 199 1 129 2 219 1 272 2 87 1 57 1 
1 2 156 1 243 1 353 1 309 1 131 1 221 1 110 1 335 1 336 1 135 4 288 1 253 1 183 2 233 1 315 1 95 1 258 1 73 1 143 1 98 1 322 2 238 1 49 2 75 1 195 2 285 1 197 1 54 1 149 1 199 1 201 1 129 2 272 2 219 1 57 1 87 1 
1 1 243 1 130 1 353 1 131 1 63 1 135 3 136 1 253 1 183 1 95 1 258 1 73 1 322 1 266 1 238 1 49 2 75 1 195 2 77 1 285 1 196 1 197 1 129 1 287 1 272 1 219 1 57 1 87 1 
243 2 353 2 131 3 90 1 4 2 334 2 337 1 135 19 92 1 291 2 12 1 95 3 258 3 72 1 320 1 298 1 284 1 49 9 75 2 195 4 214 1 285 3 347 1 197 3 23 1 199 3 129 10 219 2 272 6 57 3 
243 2 353 2 131 3 90 2 4 1 109 1 334 2 135 25 92 1 291 4 37 1 12 2 95 2 258 3 320 2 16 1 166 1 298 1 49 13 284 2 75 2 195 4 285 3 197 2 347 1 23 1 199 1 126 1 349 1 105 1 129 12 272 2 219 2 57 1 
243 4 4 1 109 1 334 4 291 4 160 1 206 1 12 1 258 5 72 1 16 1 166 1 298 1 75 4 214 1 347 1 23 1 84 1 126 1 349 1 129 21 272 9 219 4 353 4 131 4 90 2 135 42 32 1 92 1 37 1 93 1 95 4 366 1 320 3 40 1 49 21 284 3 195 8 285 4 197 5 199 4 105 2 57 5 
243 3 4 1 109 1 334 4 291 4 160 1 206 1 12 1 258 5 72 1 16 1 166 1 298 1 75 3 214 1 347 1 23 1 84 1 126 1 349 1 129 18 272 6 219 3 353 3 131 4 90 2 135 37 32 1 92 1 37 1 93 1 95 3 366 1 320 3 40 1 49 19 284 3 195 6 285 4 197 4 199 4 105 1 57 2 
243 2 353 2 131 7 90 1 4 1 109 1 334 4 135 52 32 1 92 1 160 1 291 4 37 1 93 1 12 1 95 7 366 1 258 8 320 2 40 1 212 2 16 1 166 1 298 1 284 4 49 27 75 2 195 4 214 2 285 7 347 1 197 8 23 1 84 1 199 7 126 1 349 1 105 1 129 25 219 2 272 14 57 7 
369 1 312 1 107 1 370 1 365 1 59 1 257 1 51 1 224 1 282 1 
66 1 48 1 
328 1 229 1 292 1 369 1 312 1 370 1 257 1 51 1 224 1 
348 1 375 1 
53 1 276 1 316 1 
368 2 369 1 331 1 107 1 370 1 51 1 224 1 181 1 216 1 231 1 363 1 312 1 67 1 365 1 69 1 10 1 257 1 282 1 
368 2 369 1 331 1 107 1 370 1 51 1 224 1 181 1 216 1 231 1 363 1 312 1 67 1 365 1 69 1 10 1 257 1 282 1 
368 2 369 1 331 1 107 1 370 1 51 1 224 1 181 1 216 1 231 1 363 1 312 1 67 1 365 1 69 1 10 1 257 1 282 1 
53 1 348 1 375 1 
53 1 348 1 375 1 
276 1 316 1 
53 1 276 1 316 1 
33 1 80 1 
354 1 331 1 108 1 159 1 224 1 33 1 181 1 136 2 66 1 312 1 10 1 257 1 189 1 73 2 368 1 369 1 266 2 47 1 370 1 238 2 51 1 48 1 216 1 80 1 200 1 154 1 287 2 
243 1 179 2 353 1 245 1 110 2 336 1 133 1 135 2 136 2 360 1 230 1 253 1 68 1 73 2 143 2 15 1 98 1 17 1 238 2 49 1 323 1 75 1 195 2 77 1 54 1 325 1 149 1 201 2 129 1 219 1 87 1 
144 1 143 2 308 2 309 1 98 1 220 1 110 2 120 1 62 1 134 1 225 1 250 1 79 1 54 1 302 1 278 1 377 1 201 2 319 1 
144 1 143 1 308 2 98 1 332 1 220 1 110 1 120 1 62 1 134 1 225 1 250 1 79 1 54 1 377 1 201 1 319 1 
143 1 330 1 98 1 110 1 336 1 250 1 357 1 20 1 54 1 103 1 302 1 149 1 201 1 155 1 
144 1 143 1 308 2 98 1 220 1 110 1 120 1 62 1 134 1 225 1 250 1 79 1 54 1 302 1 278 1 377 1 201 1 319 1 
147 1 
295 1 28 1 145 1 22 1 36 1 69 1 304 1 
106 1 180 1 227 1 69 2 10 1 13 1 142 1 295 1 145 1 46 1 269 1 216 1 270 1 171 1 304 1 305 1 173 1 
202 2 242 2 106 4 110 3 336 10 335 3 10 5 69 8 114 2 258 2 71 1 207 3 209 2 343 2 342 6 295 9 211 2 20 1 269 4 216 5 270 4 22 1 171 6 217 2 303 1 305 3 304 8 173 12 309 1 131 2 30 2 223 1 180 4 228 1 361 2 310 2 182 1 232 1 36 1 95 2 142 5 143 3 145 2 98 3 237 2 285 2 54 4 197 2 149 3 198 1 376 6 201 3 378 2 380 2 
106 2 131 2 109 1 334 1 180 2 37 1 10 1 69 4 95 2 258 2 320 1 142 1 342 5 295 7 145 1 211 1 16 1 166 1 284 1 269 2 285 2 216 1 270 2 197 2 171 3 376 5 126 1 151 1 305 1 304 5 173 6 
106 1 355 1 180 1 63 1 136 1 160 1 184 1 10 1 140 1 258 2 73 1 40 1 295 2 211 2 266 1 238 1 146 1 269 1 216 1 270 1 197 1 170 1 217 1 84 1 172 1 56 1 304 2 287 1 
295 1 145 1 106 1 180 1 269 1 270 1 22 1 36 1 69 1 304 1 
342 5 295 5 211 2 131 2 285 2 197 2 171 5 217 1 376 5 69 5 304 5 173 10 95 2 258 2 209 1 
142 1 145 1 216 1 69 1 10 1 305 1 
106 2 110 4 336 1 180 1 31 1 357 1 182 1 10 3 187 1 114 2 71 2 191 1 142 4 143 4 295 2 192 1 98 1 20 2 215 1 269 2 216 3 54 1 270 2 103 1 149 1 303 2 201 4 304 2 305 2 
243 1 156 1 353 1 108 1 221 1 110 1 63 2 335 1 336 1 135 1 288 1 136 2 137 1 253 1 68 1 184 1 233 1 73 3 143 1 98 1 266 2 238 3 75 1 20 1 195 2 54 1 149 1 201 1 129 1 287 2 219 1 87 1 
342 2 295 1 145 2 106 1 180 1 32 1 269 1 270 1 171 2 376 2 303 1 69 4 304 2 173 4 114 1 
123 1 369 1 312 1 
80 1 369 1 312 1 365 1 294 1 
123 1 369 1 312 1 
123 1 369 1 312 1 
177 1 369 1 312 1 
177 1 369 1 312 1 
177 1 369 1 312 1 
369 1 312 1 
370 1 51 1 
40 1 243 2 353 2 49 4 135 8 75 2 32 1 195 4 197 1 160 1 84 1 199 2 93 1 129 4 105 1 258 1 366 1 272 3 219 2 57 1 
40 1 28 1 49 3 135 6 32 1 160 1 197 1 199 2 84 1 93 1 129 3 366 1 258 1 272 2 
243 1 353 1 131 1 18 1 49 2 75 1 135 4 195 2 285 1 197 1 199 1 129 2 95 1 258 1 272 2 219 1 57 1 
320 1 131 1 334 2 284 1 49 3 135 7 214 1 285 1 197 1 199 1 95 1 129 4 258 1 272 2 57 1 
243 2 353 2 131 2 334 2 135 23 32 1 338 1 160 2 93 1 95 2 366 1 258 3 141 1 40 2 212 1 49 11 284 2 75 2 195 4 285 2 214 1 197 3 84 1 199 5 129 12 105 2 272 9 219 2 57 4 
129 1 334 1 135 1 
49 1 284 1 135 1 
243 1 353 1 131 1 18 1 49 3 75 1 135 6 195 2 285 1 197 1 199 2 129 3 95 1 258 1 219 1 272 3 209 1 57 1 
243 2 353 2 131 2 109 1 334 1 135 13 37 1 95 2 258 2 320 1 16 1 166 1 284 1 49 7 75 2 195 4 285 2 347 1 197 2 199 1 126 1 105 1 129 6 219 2 272 3 57 2 
40 1 49 3 135 6 197 1 160 1 84 1 199 1 129 3 258 1 272 2 57 1 
40 1 243 1 353 1 49 1 135 3 75 1 195 2 160 1 199 1 93 1 129 2 105 1 366 1 272 2 219 1 57 1 141 1 
40 2 243 1 353 1 49 5 75 1 135 10 195 2 347 1 160 2 197 2 199 3 84 1 56 1 129 5 258 2 219 1 272 5 57 2 
243 1 353 1 49 2 75 1 135 2 195 2 285 1 347 1 258 1 219 1 272 1 57 1 
243 1 353 1 131 1 49 2 75 1 135 4 195 2 285 1 197 1 347 1 199 1 129 2 95 1 258 1 272 2 219 1 57 1 
40 1 243 3 353 3 49 1 135 3 75 3 195 6 347 1 160 1 199 1 105 1 129 2 219 3 272 2 141 1 72 1 57 1 
243 5 353 5 158 1 131 3 334 4 135 34 32 1 160 3 93 1 95 3 366 1 258 5 141 1 72 1 320 1 40 3 42 1 18 1 284 3 49 16 75 5 195 10 214 1 285 3 347 1 197 5 84 2 199 7 127 1 105 2 129 18 219 5 272 12 57 5 
243 1 353 1 109 1 334 1 135 8 32 1 160 1 93 1 258 1 366 1 320 1 40 1 284 1 49 4 75 1 195 2 197 1 347 1 199 2 84 1 129 4 219 1 272 2 
243 2 353 2 131 1 109 1 334 2 135 11 32 1 160 1 93 1 366 1 258 2 320 1 40 1 18 1 284 1 49 6 75 2 195 4 214 1 285 1 197 1 347 1 84 1 199 2 129 5 219 2 272 3 57 1 
243 4 353 4 131 2 109 1 334 1 135 14 37 1 95 2 258 2 320 1 16 1 18 1 166 1 284 1 49 7 75 4 195 8 285 2 347 1 197 2 199 1 126 1 129 7 105 2 219 4 272 3 57 2 
243 2 353 2 131 2 109 1 334 1 135 10 37 1 95 1 258 2 320 1 16 1 18 1 166 1 284 1 49 6 75 2 195 4 285 2 347 1 197 1 199 1 126 1 129 4 219 2 272 1 
243 1 353 1 109 1 334 1 135 8 32 1 160 1 93 1 258 1 366 1 320 1 40 1 284 1 49 4 75 1 195 2 197 1 347 1 199 2 84 1 129 4 219 1 272 2 
243 2 353 2 131 2 109 1 334 1 135 13 37 1 95 2 258 2 320 1 16 1 166 1 284 1 49 7 75 2 195 4 285 2 347 1 197 2 199 1 126 1 105 1 129 6 219 2 272 3 57 2 
243 3 353 3 131 2 109 1 334 1 135 11 37 1 95 1 258 2 320 1 16 1 18 1 166 1 284 1 49 6 75 3 195 6 285 2 347 1 197 1 199 1 126 1 129 5 105 1 219 3 272 1 
243 3 353 3 131 2 109 1 334 1 135 11 37 1 95 1 258 2 72 1 320 1 16 1 166 1 284 1 49 6 75 3 195 6 285 2 347 1 197 1 199 2 126 1 129 5 105 1 219 3 272 3 57 1 
40 3 49 3 135 7 197 1 160 3 199 3 84 1 93 1 129 4 366 2 258 1 272 6 57 3 
243 3 353 3 131 2 109 1 334 1 135 11 37 1 95 1 258 2 72 1 320 1 16 1 166 1 284 1 49 6 75 3 195 6 285 2 347 1 197 1 199 1 126 1 129 5 105 1 219 3 272 1 
73 1 136 1 193 1 314 1 108 1 238 1 299 1 
73 1 2 1 163 1 344 1 193 1 108 1 238 1 299 1 136 1 314 1 83 1 176 1 
20 1 28 1 143 1 54 1 103 1 98 1 149 1 201 1 110 1 336 1 357 1 
73 2 143 1 98 1 266 1 108 1 238 2 221 1 297 1 110 1 336 1 335 1 288 1 20 1 136 1 54 1 149 1 201 1 287 1 
73 2 343 1 143 1 98 1 30 1 266 2 108 1 238 2 146 1 221 1 297 1 110 1 336 3 335 2 288 1 290 1 136 2 54 1 149 2 201 1 351 1 287 1 71 1 
73 2 343 1 143 2 98 1 30 1 266 2 108 1 238 2 146 1 221 1 297 1 110 2 336 3 335 2 290 1 136 2 6 1 54 1 149 2 201 2 70 1 351 1 287 1 71 1 
343 1 142 1 242 1 143 3 145 1 89 1 98 1 30 1 100 1 110 3 335 1 336 4 20 1 361 1 216 2 54 1 149 1 69 1 10 2 201 3 70 1 71 1 207 1 
343 1 142 1 242 1 143 3 145 1 98 1 30 1 110 3 335 1 336 4 20 1 361 1 216 2 310 1 54 1 149 1 69 1 10 2 201 3 70 1 71 1 207 1 
143 1 54 1 98 1 201 1 61 1 110 1 
178 1 179 1 143 6 309 1 98 2 99 1 245 1 61 1 110 7 335 1 336 3 20 2 34 1 65 1 54 3 198 1 149 2 277 1 377 1 201 7 94 1 
1 1 243 2 156 1 353 2 309 1 108 2 221 1 110 1 336 1 335 1 135 6 32 1 111 1 288 1 136 1 160 1 253 2 183 1 315 1 233 1 93 1 258 1 366 1 73 2 40 1 143 1 98 1 322 1 266 1 238 2 49 3 297 1 323 1 75 2 195 4 77 1 197 1 54 1 149 1 84 1 199 2 201 1 129 3 287 1 272 2 219 2 87 2 
202 1 242 1 106 2 110 1 180 2 336 2 361 1 310 1 182 1 36 1 69 1 10 3 207 1 142 2 295 1 143 1 145 1 237 1 47 1 20 1 269 2 216 3 270 2 22 1 201 1 304 1 305 1 378 1 
143 2 309 1 98 1 61 1 110 2 223 1 335 1 336 2 361 1 54 2 198 1 149 1 201 2 
143 4 309 1 98 1 110 4 336 1 357 1 20 1 54 1 103 1 149 1 201 4 218 1 70 1 
116 1 143 2 98 1 110 2 335 1 336 1 251 1 34 1 54 2 149 1 277 1 201 2 152 1 71 1 
20 1 143 1 308 1 54 1 98 1 220 1 201 1 110 1 319 1 134 1 
143 2 309 1 98 1 245 1 110 2 336 1 230 1 54 1 149 1 377 1 201 2 
143 4 309 1 98 2 99 1 245 1 110 5 336 3 357 1 20 1 103 1 54 2 149 2 201 5 218 1 94 1 71 1 
143 4 309 1 98 2 99 1 245 1 110 5 336 3 357 1 20 1 103 1 54 2 149 2 201 5 218 1 115 1 71 1 
73 2 143 1 98 1 266 1 108 1 238 2 221 1 297 1 110 1 336 1 335 1 20 1 136 1 6 1 54 1 149 1 201 1 287 1 
143 1 98 1 110 1 335 1 336 1 34 1 65 1 54 2 198 1 149 1 277 1 201 1 71 1 
73 1 17 1 238 1 133 1 346 1 136 1 325 1 240 1 281 1 
307 1 124 1 281 1 
45 1 108 1 240 1 346 1 281 1 
307 1 242 1 145 1 29 1 45 2 108 1 47 1 146 1 168 1 346 2 290 1 216 2 124 1 255 1 240 2 69 1 10 2 351 1 281 1 
213 1 28 1 262 1 372 1 
213 1 97 1 301 1 262 1 164 1 256 1 372 1 
239 1 256 1 26 1 
97 3 262 1 164 1 91 2 372 1 213 1 169 1 76 1 301 1 254 1 256 3 86 1 
213 1 97 2 301 1 262 1 118 1 164 1 244 1 256 2 372 1 
213 1 169 1 97 1 144 1 301 1 308 1 164 1 256 1 39 1 134 1 52 1 
213 1 169 1 97 1 301 1 262 1 164 1 256 1 
169 1 97 1 301 1 262 2 164 1 256 1 372 1 
97 2 262 1 164 2 121 1 213 1 169 1 301 2 256 2 85 1 327 1 
213 2 14 1 169 1 97 3 162 1 301 1 262 1 164 1 244 2 256 3 55 1 372 1 52 1 
97 2 144 1 262 1 308 2 164 1 119 1 244 1 372 1 134 1 213 1 169 1 301 1 79 1 256 2 319 1 
213 2 169 1 97 4 301 2 262 1 118 1 164 2 244 2 256 4 55 1 247 1 372 1 52 1 
213 1 169 1 97 1 301 1 262 1 164 1 256 1 372 1 
97 4 262 2 164 1 244 2 91 1 372 2 52 1 213 3 76 1 301 1 139 1 256 4 55 1 86 1 
97 2 262 1 164 1 3 1 244 1 372 1 213 1 169 1 301 1 256 2 9 1 271 1 
97 3 262 1 263 1 164 1 91 2 372 1 213 1 169 1 76 2 301 1 256 3 86 1 
260 1 213 2 222 1 174 2 
169 1 97 1 301 1 164 1 256 1 113 1 
213 1 14 1 169 1 97 2 301 1 262 1 164 1 244 1 256 2 372 1 
318 1 
213 1 169 1 97 1 301 1 262 1 164 1 256 1 372 1 
14 1 97 3 262 1 164 1 244 1 91 1 372 1 169 1 213 1 301 1 256 3 
213 1 139 1 55 1 52 1 
213 1 262 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
311 1 215 2 186 1 279 1 72 3 231 1 239 1 88 2 234 1 169 3 182 1 90 2 48 1 
1 1 311 1 215 5 291 1 177 1 72 9 239 2 296 2 118 1 182 3 276 2 244 1 186 1 342 1 279 1 344 1 65 2 231 1 191 1 166 1 133 2 88 2 234 4 138 1 169 9 90 2 48 6 170 1 
1 1 311 1 215 5 291 1 177 1 72 9 239 2 296 2 118 1 182 3 276 2 244 1 186 1 342 1 279 1 344 1 65 2 231 1 191 1 166 1 133 2 88 2 234 4 138 1 169 9 90 2 48 6 170 1 
1 1 311 1 215 6 291 1 177 1 72 10 239 2 296 2 118 1 182 4 276 2 244 1 186 1 342 1 279 1 344 1 65 2 231 1 191 1 166 1 133 2 88 2 234 5 138 1 169 10 90 2 48 7 170 1 
1 1 311 1 215 4 291 1 177 1 72 7 239 2 296 2 118 1 182 2 276 2 244 1 186 1 342 1 279 1 344 1 65 1 231 1 191 1 166 1 133 2 88 2 234 3 138 1 169 7 90 2 48 4 
215 3 186 1 342 1 279 1 65 2 72 4 231 1 296 1 133 1 88 1 234 2 138 1 169 4 182 1 90 1 48 3 276 1 170 1 
142 1 215 1 25 1 186 1 279 1 72 2 231 1 264 1 239 1 296 1 133 1 166 1 88 1 118 1 197 1 169 2 90 1 
1 1 311 1 215 5 72 9 239 1 296 1 182 3 274 1 276 1 244 1 186 1 342 1 279 1 374 1 65 2 231 1 133 1 234 4 88 2 138 1 169 9 48 7 90 2 170 1 
1 1 311 1 215 5 72 9 239 1 296 1 182 3 274 1 276 1 244 1 186 1 342 1 279 1 374 1 65 2 231 1 133 1 234 4 88 2 138 1 169 9 48 7 90 2 170 1 
207 1 294 1 347 1 148 1 84 1 53 1 266 1 8 1 241 1 354 1 321 1 160 1 102 1 227 1 
152 1 
92 1 267 1 181 1 8 1 10 1 321 2 347 2 152 1 
23 1 92 1 218 1 93 1 347 5 149 1 85 1 152 1 286 1 55 2 109 1 267 2 8 2 337 2 10 1 321 5 287 1 310 2 101 1 
92 1 210 1 152 1 
350 1 20 2 152 1 
207 2 294 2 160 2 148 2 220 1 84 2 227 1 53 2 
331 1 238 1 28 2 294 2 73 1 4 1 148 2 366 1 220 1 31 1 53 2 6 2 159 1 59 1 300 1 160 3 227 1 340 1 245 1 207 3 189 2 66 1 83 1 211 1 67 1 84 2 306 1 108 1 134 2 351 1 307 2 193 1 46 1 328 1 235 1 236 1 200 1 
266 1 207 1 241 1 354 1 294 1 160 1 148 1 84 1 227 1 53 1 
92 1 207 1 26 1 247 1 347 1 152 1 53 1 298 1 74 1 241 1 99 1 321 1 160 1 171 1 
92 1 207 1 26 1 247 1 294 1 347 2 148 1 84 1 152 1 53 1 298 1 241 1 321 2 160 1 171 1 
267 1 8 1 321 1 141 1 347 1 
92 1 267 1 8 1 248 1 10 1 321 2 347 2 152 1 
267 1 321 1 347 1 
207 2 294 1 148 1 84 1 220 1 53 2 353 1 241 1 47 1 140 1 160 2 
225 1 237 1 297 1 
238 1 245 1 207 1 176 1 189 1 73 1 66 1 211 1 366 1 220 1 6 1 134 1 351 1 108 1 160 1 236 1 
245 1 238 1 207 2 162 1 189 1 73 1 66 1 148 1 211 1 366 1 84 1 297 1 53 1 6 1 108 1 351 1 134 1 160 2 236 1 60 1 
210 1 220 1 
260 1 207 5 162 2 312 1 294 1 148 4 84 4 220 1 53 5 47 1 120 1 99 1 160 5 60 1 
266 1 207 1 241 1 160 1 148 1 84 1 53 1 
207 3 162 1 294 1 160 3 148 3 220 1 84 3 53 3 
266 1 207 1 241 1 160 1 148 1 84 1 53 1 
207 1 294 1 148 1 84 1 53 1 353 1 241 1 47 1 160 1 
238 1 294 2 148 3 6 1 298 1 53 3 241 2 59 1 300 1 160 4 60 1 340 1 245 1 207 4 162 1 247 1 347 1 66 1 107 1 211 1 67 1 306 1 351 1 108 1 307 2 358 1 171 1 26 1 28 1 73 1 366 1 220 1 321 1 227 1 189 1 83 1 84 3 134 1 193 1 235 1 46 1 47 1 140 1 236 1 200 1 
207 2 162 1 312 1 148 1 84 1 220 1 53 2 241 1 140 1 99 1 160 2 
207 3 26 1 162 2 247 1 294 1 347 1 148 3 107 1 84 3 152 1 53 3 298 1 241 1 35 1 47 1 321 1 160 3 60 1 171 1 
207 2 162 1 294 1 148 2 84 2 53 2 297 1 47 1 225 1 160 2 
238 1 245 1 207 1 189 1 73 1 66 1 366 1 211 1 220 1 6 1 134 1 351 1 108 1 160 1 236 1 
245 1 207 1 189 1 73 1 366 1 211 1 220 1 6 1 134 1 351 1 108 1 379 1 160 1 236 1 183 1 
259 1 28 4 31 2 297 2 96 1 222 1 157 1 59 2 300 1 225 2 79 1 61 1 278 1 39 1 349 1 83 1 67 1 307 2 378 1 193 1 46 1 200 1 237 2 361 1 
207 1 26 1 148 1 265 1 84 1 53 1 241 1 160 1 
213 1 309 1 77 1 
341 1 323 1 209 1 213 2 309 2 13 1 
213 1 309 1 
213 1 309 1 
341 1 13 1 
341 1 13 1 
341 1 13 1 
240 1 213 1 309 1 
240 1 213 1 309 1 
240 1 213 1 309 1 
213 1 309 1 318 1 
213 1 309 1 318 1 
213 1 309 1 318 1 
145 1 148 2 220 1 53 2 205 1 58 1 77 1 321 1 160 2 78 1 226 1 207 2 187 1 41 1 232 1 347 1 84 2 168 1 16 1 285 1 308 1 213 1 309 1 89 1 
209 1 164 1 145 2 41 2 232 2 192 1 347 2 251 1 152 1 352 1 168 3 268 1 308 2 242 1 213 2 309 2 58 1 319 2 321 2 
370 1 197 1 382 2 276 1 133 2 
296 1 276 1 133 1 
197 1 296 1 133 1 
367 1 370 1 197 1 382 1 276 2 133 3 
370 1 197 1 382 1 258 1 276 1 133 2 
92 1 216 1 292 2 149 1 5 1 152 2 368 1 55 1 267 1 8 4 224 2 337 1 10 1 321 5 101 2 121 2 226 1 277 1 79 1 61 1 278 1 347 5 375 1 350 1 286 3 285 1 89 1 288 1 20 3 310 1 22 1 361 1 
92 1 216 1 175 1 292 6 149 1 5 2 315 1 152 5 368 3 267 6 55 2 8 7 117 1 224 6 337 2 10 1 36 1 321 9 101 6 79 3 61 3 278 3 130 1 347 9 375 2 350 3 285 4 286 8 139 1 357 5 287 1 20 9 310 2 141 5 361 3 
92 1 292 2 5 1 152 3 55 1 368 1 8 2 337 1 224 2 321 3 121 1 101 2 277 1 79 1 61 1 278 1 347 3 375 1 350 2 286 3 285 1 310 1 287 1 20 4 22 1 361 1 
92 1 175 1 292 4 5 1 152 4 55 1 368 2 8 3 117 1 224 4 337 1 36 1 321 4 121 2 101 4 277 1 79 2 61 2 278 2 347 4 375 1 350 3 286 5 285 2 20 7 310 1 287 1 22 1 361 2 
345 1 
210 1 280 1 211 1 
180 1 211 1 
108 1 73 1 211 1 
295 1 211 1 
73 1 211 1 
108 1 45 1 280 2 73 1 199 1 211 3 
173 1 259 2 161 1 28 7 313 1 219 1 304 1 365 1 31 4 96 3 75 1 156 1 57 1 110 2 59 3 371 1 79 1 361 1 
173 5 259 5 113 1 261 3 262 4 28 31 313 1 147 1 219 2 95 1 179 1 31 16 368 3 96 10 75 2 156 1 57 2 59 15 300 1 371 2 61 3 79 4 322 1 278 3 161 1 250 1 304 1 83 1 307 2 193 1 110 3 111 1 200 1 361 4 
173 1 259 3 161 1 15 1 28 9 95 1 219 1 304 1 83 2 31 5 96 4 307 4 193 2 75 1 156 1 57 1 110 2 19 1 59 4 300 2 371 1 200 2 79 1 361 1 
173 1 259 2 161 1 28 7 313 1 219 1 304 1 31 4 96 3 75 1 156 1 57 1 110 2 59 3 371 1 79 1 361 1 
173 1 259 2 161 1 28 7 313 1 219 1 304 1 31 4 96 3 75 1 156 1 57 1 110 2 59 3 371 1 79 1 361 1 
245 1 185 1 303 2 104 1 128 2 188 1 72 1 189 1 73 1 211 1 239 2 131 1 335 1 6 1 351 1 134 1 88 1 56 1 9 2 169 1 21 1 236 1 90 1 
144 1 72 1 296 1 239 1 6 1 316 1 367 1 33 1 9 1 276 1 245 1 303 1 249 1 128 1 189 1 231 1 133 2 134 1 351 1 87 1 88 1 196 1 197 1 169 1 359 1 90 1 
215 1 144 1 72 2 296 1 239 1 6 1 316 1 367 1 33 1 9 1 276 1 245 1 303 1 186 1 279 1 249 1 128 1 189 1 231 1 133 2 134 1 351 1 87 1 355 1 88 1 196 1 197 1 169 2 48 1 90 1 
215 1 72 3 296 1 239 1 6 1 367 1 316 1 33 1 9 1 276 1 245 1 303 1 186 1 279 1 126 1 249 1 128 1 188 1 189 1 133 2 134 1 351 1 87 1 88 1 196 1 197 1 169 3 359 1 90 1 48 2 
215 1 72 2 239 1 296 1 6 1 316 1 367 1 9 1 276 1 245 1 303 1 186 1 279 1 126 1 128 1 189 1 133 2 134 1 351 1 87 1 196 1 197 1 169 2 359 1 48 2 
364 1 
201 2 92 1 146 1 333 1 293 1 149 1 5 1 152 2 6 2 53 1 298 1 204 2 55 1 155 2 241 1 153 4 337 1 10 3 99 1 101 2 160 1 12 2 245 1 208 1 207 1 104 1 247 1 343 1 63 2 347 5 211 1 350 2 351 1 17 1 18 1 20 2 310 1 171 1 26 1 73 1 267 6 74 1 269 2 270 1 321 5 275 1 80 2 184 1 185 1 37 1 189 2 134 2 286 2 236 2 329 1 
80 1 184 1 207 1 26 1 247 1 333 1 347 3 298 1 53 1 267 2 181 1 74 1 153 2 241 1 17 1 18 1 10 1 321 3 99 1 160 1 275 1 171 1 
201 1 92 1 184 1 207 1 26 1 247 1 333 1 347 3 152 1 298 1 53 1 267 1 181 1 74 1 153 3 241 1 17 1 18 1 10 1 321 3 99 1 160 1 275 1 171 1 
201 1 92 1 26 1 333 1 53 1 298 1 152 1 267 2 181 1 74 1 241 1 153 3 269 1 10 1 99 1 321 3 160 1 275 1 80 1 207 1 184 1 247 1 347 3 17 1 18 1 171 1 
201 4 92 5 333 1 334 1 149 1 298 1 53 1 152 5 204 2 55 1 153 6 241 1 155 2 243 1 337 1 10 3 99 1 160 1 101 1 12 2 207 1 208 1 247 1 63 2 347 5 350 2 69 1 17 1 18 1 310 1 171 1 172 1 26 1 30 1 267 7 181 1 74 1 269 4 321 5 275 1 80 4 184 1 286 1 329 1 
201 2 92 1 333 1 149 1 298 1 53 1 152 2 204 2 55 1 153 4 241 1 155 2 337 1 10 2 99 1 160 1 101 1 12 2 207 1 208 1 247 1 63 2 347 4 350 2 17 1 18 1 310 1 20 2 171 1 26 1 267 4 74 1 269 2 270 1 321 4 275 1 80 2 184 1 286 1 329 1 
201 2 172 1 92 1 26 1 333 1 149 1 152 1 53 1 298 1 204 2 267 4 55 1 74 1 155 2 241 1 153 4 269 2 243 1 337 1 10 2 99 1 321 4 101 1 160 1 12 2 275 1 80 2 208 1 207 1 184 1 247 1 63 2 347 4 350 2 286 1 69 1 17 1 18 1 310 1 329 1 171 1 
201 2 172 1 92 1 26 1 333 1 149 1 152 1 53 1 298 1 204 2 267 4 55 1 74 1 155 2 241 1 153 4 269 2 243 1 337 1 10 2 99 1 321 4 101 1 160 1 12 2 275 1 80 2 208 1 207 1 184 1 247 1 63 2 347 4 350 2 286 1 69 1 17 1 18 1 310 1 329 1 171 1 
201 2 172 1 92 1 202 1 26 1 71 1 290 2 333 1 115 2 149 1 152 1 53 1 298 1 267 4 55 1 74 1 155 2 241 1 153 4 269 2 337 1 10 2 99 1 321 4 101 1 160 1 275 1 80 2 208 1 207 1 184 1 247 1 63 2 347 4 167 1 286 1 17 1 18 1 20 2 310 1 171 1 
172 1 201 3 92 1 26 1 333 1 30 1 149 1 152 1 53 1 298 1 204 2 55 1 267 5 74 1 155 2 241 1 153 5 243 1 269 3 337 1 10 2 99 1 321 4 101 1 160 1 12 2 275 1 80 3 208 1 207 1 184 1 247 1 63 2 347 4 350 2 286 1 69 1 17 1 18 1 310 1 329 1 171 1 
172 1 201 3 92 1 26 1 333 1 30 1 149 1 152 1 53 1 298 1 204 2 55 1 267 5 74 1 155 2 241 1 153 5 243 1 269 3 337 1 10 2 99 1 321 4 101 1 160 1 12 2 275 1 80 3 208 1 207 1 184 1 247 1 63 2 347 4 350 2 286 1 69 1 17 1 18 1 310 1 329 1 171 1 
201 2 92 1 202 1 26 1 290 2 333 1 115 2 149 1 152 1 53 1 298 1 267 4 55 1 74 1 155 2 241 1 153 4 269 2 270 1 337 1 10 2 321 4 99 1 101 1 160 1 275 1 80 2 208 1 184 1 207 1 247 1 63 2 347 4 286 1 17 1 18 1 20 2 310 1 171 1 
331 1 143 1 28 2 73 2 148 1 53 1 6 8 31 1 32 1 222 1 119 1 59 1 300 2 160 1 340 1 245 2 207 1 185 1 246 1 162 1 104 1 189 8 283 1 211 3 83 2 84 1 67 2 351 2 134 7 307 4 194 1 193 2 355 1 46 2 328 2 359 1 236 2 200 2 91 1 
259 1 28 3 294 1 148 1 297 1 53 1 31 1 368 1 96 1 59 2 300 1 225 1 160 1 61 1 79 1 207 1 278 1 346 1 83 1 67 1 84 1 253 1 307 2 193 1 46 1 47 1 237 1 200 1 361 1 
259 2 28 6 220 2 297 1 31 3 96 2 222 1 75 1 57 1 156 1 59 3 300 1 225 1 79 1 161 1 210 1 304 1 83 1 67 1 307 2 193 1 110 1 46 1 200 1 237 1 361 1 
331 1 173 1 259 1 261 3 262 3 28 14 94 1 220 1 52 1 297 11 31 8 368 2 96 2 59 6 300 2 225 4 206 1 61 1 79 1 340 1 14 1 322 1 278 2 83 2 67 1 253 1 307 4 193 2 46 2 111 1 200 2 237 11 361 2 
238 1 0 1 331 1 176 1 28 2 73 1 148 1 366 1 220 1 6 1 53 1 31 1 76 1 59 1 300 1 225 1 160 2 60 1 340 1 245 1 207 2 162 1 64 1 189 1 66 1 211 1 83 1 67 1 84 1 253 1 108 1 351 1 134 1 307 2 193 1 46 1 236 1 200 1 
331 1 238 2 148 1 6 3 53 1 297 7 96 8 156 1 57 1 59 10 300 3 160 3 100 2 60 1 61 2 339 1 340 1 245 2 207 3 161 1 162 1 163 1 304 1 66 2 211 2 67 3 253 1 306 2 351 2 108 2 307 6 255 2 110 1 359 1 361 3 259 4 173 4 114 1 28 20 73 2 29 2 366 2 220 2 31 10 368 2 75 1 225 7 79 3 124 2 278 2 189 3 83 3 84 1 134 3 193 3 46 3 236 1 200 3 237 7 
173 1 278 1 28 2 83 1 67 1 297 1 31 2 96 1 307 2 378 1 193 1 222 1 46 1 300 1 225 1 237 1 200 1 361 1 
259 1 28 2 83 1 349 1 67 1 297 1 96 1 307 2 193 1 222 1 46 1 59 2 300 1 225 1 237 1 200 1 61 1 79 1 
173 1 259 1 28 4 31 2 297 2 368 1 96 2 222 1 59 2 300 1 225 2 61 1 79 1 278 1 83 1 67 1 307 2 193 1 46 1 200 1 237 2 361 1 
173 1 278 1 28 2 83 1 67 1 297 1 31 2 32 1 96 1 307 2 378 1 193 1 46 1 300 1 225 1 237 1 200 1 361 1 
259 1 28 2 83 1 349 1 67 1 297 1 32 1 96 1 307 2 193 1 46 1 59 2 300 1 225 1 237 1 200 1 61 1 79 1 
173 1 259 1 28 4 31 2 297 2 32 1 368 1 96 2 59 2 300 1 225 2 61 1 79 1 278 1 83 1 67 1 307 2 193 1 46 1 200 1 237 2 361 1 
173 1 259 1 28 4 31 2 297 2 368 1 96 2 59 2 300 1 225 2 61 1 79 1 278 1 83 1 67 1 307 2 193 1 46 1 200 1 237 2 361 1 
331 1 238 1 28 2 73 1 366 1 220 1 31 1 6 1 59 1 300 1 160 1 340 1 245 1 207 1 189 1 66 1 211 1 83 1 67 1 306 1 108 1 351 1 134 1 307 2 193 1 46 1 236 1 200 1 
331 1 28 2 73 1 366 1 220 1 31 1 6 1 59 1 300 1 183 1 160 1 340 1 245 1 207 1 189 1 211 1 83 1 67 1 108 1 351 1 134 1 307 2 193 1 379 1 195 1 46 1 236 1 200 1 
173 1 259 1 28 4 31 2 297 2 368 1 96 2 59 2 300 1 225 2 61 1 79 1 278 1 83 1 67 1 253 1 307 2 193 1 46 1 200 1 237 2 361 1 
259 1 173 1 238 1 28 4 73 1 366 1 297 2 31 2 6 1 368 1 96 2 59 2 300 1 225 2 100 1 160 1 79 1 61 1 245 1 207 1 278 1 189 1 66 1 211 1 83 1 67 1 306 1 108 1 351 1 134 1 307 2 193 1 355 1 46 1 237 2 200 1 361 1 
173 1 28 3 294 1 148 1 53 1 31 2 297 1 368 1 96 1 59 1 300 1 271 1 160 1 225 1 79 1 61 1 207 1 278 1 83 1 67 1 84 1 253 1 307 2 193 1 46 1 47 1 200 1 237 1 361 1 
289 2 259 3 173 3 261 1 262 2 3 1 28 19 314 1 31 9 368 3 96 6 34 1 59 10 300 2 61 3 79 3 322 1 278 3 38 1 15 1 325 2 282 1 43 1 83 2 307 4 193 2 381 1 111 1 200 2 361 3 
173 2 259 2 289 4 261 2 262 2 27 1 3 1 28 26 95 2 31 14 368 3 96 4 34 2 97 1 59 12 300 3 372 1 79 2 61 2 278 3 38 2 15 1 40 1 125 1 325 1 282 1 43 1 83 3 307 6 193 3 212 1 111 2 200 3 361 3 
289 4 259 4 173 4 261 3 27 1 262 4 3 1 28 41 314 1 95 1 31 20 368 4 96 8 34 1 75 1 156 1 57 1 97 1 59 21 300 3 372 1 338 1 61 4 79 5 322 1 278 4 161 1 38 2 125 1 40 1 15 1 325 1 304 1 282 1 43 1 83 3 307 6 193 3 212 1 110 1 111 3 200 3 361 5 
289 4 259 4 173 3 261 3 27 1 262 4 3 1 28 38 314 1 95 2 31 20 368 4 96 7 34 1 75 1 156 1 57 1 97 1 59 18 300 4 372 1 338 1 61 3 79 4 322 1 278 4 161 1 38 2 125 1 40 1 15 1 325 1 304 1 282 1 43 1 83 4 307 8 193 4 212 1 110 1 111 3 200 4 361 5 
289 4 259 7 173 7 261 4 27 1 262 4 3 1 28 52 95 1 31 27 368 7 96 14 34 1 75 1 156 1 57 1 97 1 59 25 300 2 372 1 206 2 61 7 79 8 322 2 278 7 161 1 38 1 125 1 40 1 15 1 325 1 304 1 282 1 43 1 83 2 307 4 193 2 212 1 110 1 111 2 200 2 361 8 
352 1 308 1 209 1 213 1 145 1 309 1 41 1 232 1 192 1 301 1 
77 1 78 1 
308 1 362 1 213 1 145 1 309 1 363 1 41 1 232 1 112 1 
240 1 326 1 
323 1 123 1 318 1 
209 1 164 1 145 1 41 1 232 1 192 1 347 1 152 1 352 1 168 2 268 1 308 1 242 1 213 1 58 1 309 1 319 1 321 1 
209 1 164 1 145 1 41 1 232 1 192 1 347 1 152 1 352 1 168 2 268 1 308 1 242 1 213 1 58 1 309 1 319 1 321 1 
209 1 164 1 145 1 41 1 232 1 192 1 347 1 152 1 352 1 168 2 268 1 308 1 242 1 213 1 58 1 309 1 319 1 321 1 
323 1 240 1 326 1 
323 1 240 1 326 1 
123 1 318 1 
323 1 123 1 318 1 
205 1 187 1 
145 1 148 2 220 1 53 2 268 1 8 1 205 1 319 1 77 1 321 1 160 2 78 1 226 1 207 2 62 1 187 1 41 1 232 1 347 1 84 2 168 1 16 1 285 1 308 1 213 1 309 1 89 1 
331 1 174 1 28 2 73 1 6 2 53 2 31 1 221 1 299 1 119 1 59 1 300 1 160 2 340 1 245 1 302 1 207 2 324 1 246 1 189 2 211 1 83 1 67 1 253 1 351 1 134 2 307 2 193 1 46 1 328 2 200 1 
245 1 185 1 217 1 104 1 128 1 189 1 73 1 211 1 6 1 351 1 134 1 21 1 236 1 272 1 
245 1 81 1 128 1 189 1 296 1 133 2 6 1 367 1 134 1 351 1 254 1 33 1 87 1 196 1 197 1 359 1 272 1 276 1 
245 1 81 1 128 1 189 2 296 1 133 2 6 2 367 1 351 1 134 2 254 1 33 1 87 1 355 1 196 1 197 1 359 1 272 1 276 1 
245 1 128 1 189 1 296 1 133 2 6 1 367 1 134 1 54 1 351 1 254 1 33 1 87 1 196 1 197 1 359 1 276 1 
86 1 
92 1 218 1 93 1 149 1 152 1 55 1 286 1 337 1 310 1 101 1 
278 2 103 1 292 5 152 5 350 5 368 2 286 5 255 1 224 5 380 2 20 10 101 5 61 2 79 2 361 2 
92 1 267 1 10 1 321 1 347 1 152 1 
50 1 146 1 178 1 73 1 149 1 5 2 6 4 55 2 267 4 337 2 10 2 321 3 101 2 245 1 185 1 37 2 104 1 343 1 189 4 347 3 42 1 211 1 327 2 351 1 134 4 286 2 287 1 310 2 236 2 
286 1 92 1 218 1 210 1 93 1 101 1 152 1 
92 1 149 1 152 2 204 1 55 1 267 1 337 1 10 1 321 1 101 1 12 1 347 1 350 1 286 1 310 1 20 1 329 1 
92 2 203 2 292 6 93 1 295 2 149 4 5 2 6 3 152 8 55 4 158 2 336 1 337 4 10 3 11 2 101 8 61 2 245 4 103 2 347 5 211 10 351 3 108 3 350 6 355 1 255 2 356 1 310 4 20 12 214 2 171 2 361 2 24 1 218 1 178 1 73 3 267 5 368 2 180 3 223 2 224 6 321 5 273 2 79 2 278 2 37 1 189 3 280 2 327 1 134 3 286 9 380 2 199 1 236 1 
92 2 261 1 262 1 27 1 292 5 149 2 5 1 152 5 267 1 55 2 368 2 97 1 224 5 337 2 10 1 321 1 101 5 61 2 79 2 278 2 37 1 103 1 40 1 125 1 229 1 106 1 347 1 350 3 286 8 212 1 380 2 111 1 20 6 310 2 361 2 
294 1 148 1 149 1 53 1 266 1 55 1 241 1 75 1 57 1 243 1 156 1 337 1 321 1 160 1 101 2 102 1 79 1 227 1 207 1 103 1 347 1 84 1 286 2 354 1 380 2 310 1 70 1 361 2 
238 1 28 1 294 2 73 1 148 2 366 1 220 1 6 1 53 2 59 1 300 1 160 3 227 1 340 1 245 1 207 3 189 1 66 1 83 1 211 1 84 2 67 1 306 1 134 1 351 1 108 1 307 2 193 1 235 1 46 1 236 1 200 1 
92 2 37 1 292 2 149 1 5 1 152 4 350 2 55 1 286 1 110 1 224 2 337 1 20 4 310 1 101 2 
308 1 205 1 145 1 165 1 192 1 
308 1 145 1 98 1 
308 1 145 1 98 1 
308 1 145 1 98 1 
308 1 154 1 145 1 
308 1 154 1 145 1 
308 1 154 1 145 1 
308 1 145 1 
213 1 309 1 
259 3 173 2 15 1 28 10 83 1 31 5 307 2 96 5 193 1 75 2 57 2 156 1 59 5 300 1 200 1 79 2 70 1 361 2 
173 1 278 1 15 1 28 2 83 1 31 2 307 2 96 1 193 1 300 1 200 1 361 1 
259 1 173 1 278 1 15 1 28 4 83 1 31 2 368 1 96 2 307 2 193 1 59 2 300 1 200 1 79 1 61 1 361 1 
259 1 173 1 15 1 28 3 314 1 95 1 83 3 31 1 307 6 96 2 193 3 75 1 57 1 257 1 59 2 300 3 200 3 
173 5 259 7 113 1 261 3 262 4 28 34 314 1 95 2 179 1 31 16 368 3 96 12 75 3 156 2 57 3 59 18 300 5 61 3 79 5 322 1 278 3 161 1 15 1 250 1 304 1 82 1 83 5 307 10 193 5 110 1 257 1 111 1 200 5 361 5 
259 2 261 1 262 1 28 8 31 4 96 2 75 1 57 1 156 1 59 4 300 1 79 1 161 1 40 1 15 1 304 1 83 1 307 2 193 1 110 1 111 1 200 1 361 1 
259 2 173 1 261 1 262 2 28 11 31 6 368 1 96 3 75 1 156 1 57 1 59 5 300 2 79 1 322 1 278 1 161 1 40 1 15 1 304 1 82 1 83 2 307 4 193 2 110 1 111 1 200 2 361 2 
173 1 259 3 261 1 262 1 27 1 28 19 95 1 31 9 368 2 96 4 75 1 156 1 57 1 97 1 59 10 300 3 61 2 79 3 278 2 161 1 40 1 15 1 125 1 304 1 82 1 83 3 307 6 193 3 212 1 110 1 111 1 200 3 361 3 
173 2 259 3 261 1 262 1 27 1 28 17 95 1 31 10 368 2 96 5 75 1 156 1 57 1 97 1 59 7 300 3 61 1 79 2 278 2 161 1 40 1 15 1 125 1 304 1 82 1 83 3 307 6 193 3 212 1 110 1 111 1 200 3 361 3 
259 2 261 1 262 1 28 8 31 4 96 2 75 1 57 1 156 1 59 4 300 1 79 1 161 1 40 1 15 1 304 1 83 1 307 2 193 1 110 1 111 1 200 1 361 1 
173 1 259 1 261 1 262 1 27 1 28 12 31 6 368 2 96 2 97 1 59 6 300 1 61 2 79 2 278 2 40 1 15 1 125 1 83 1 307 2 193 1 212 1 111 1 200 1 361 2 
173 2 259 3 261 1 262 1 27 1 28 18 95 2 31 10 368 2 96 5 75 1 156 1 57 1 97 1 59 8 300 4 61 1 79 2 278 2 161 1 40 1 15 1 125 1 304 1 82 1 83 4 307 8 193 4 212 1 110 1 111 1 200 4 361 3 
173 3 259 3 261 1 262 1 27 1 28 16 314 1 95 2 31 9 368 3 96 6 97 1 59 7 300 4 61 2 79 2 278 3 40 1 15 1 125 1 83 4 307 8 193 4 212 1 111 1 200 4 361 3 
259 3 173 3 161 2 28 7 304 1 31 3 96 6 75 3 57 3 156 1 59 4 79 1 361 1 
173 1 259 3 261 1 262 1 27 1 28 18 314 1 95 2 31 10 368 2 96 4 75 1 156 1 57 1 97 1 59 8 300 4 61 1 79 2 278 2 161 1 40 1 15 1 125 1 304 1 83 4 307 8 193 4 212 1 110 1 111 1 200 4 361 3 
173 1 259 2 161 1 28 8 95 1 304 1 83 2 31 4 96 3 307 4 193 2 75 1 156 1 57 1 110 1 59 4 300 2 200 2 79 1 361 1 
259 2 96 2 161 1 75 1 156 1 57 1 210 1 110 1 28 6 59 3 304 1 79 1 31 3 361 1 
259 1 173 1 278 1 28 4 82 1 83 1 31 2 368 1 96 2 307 2 193 1 59 2 300 1 200 1 79 1 61 1 361 1 
259 1 173 1 322 1 278 1 261 1 262 2 28 7 31 3 368 1 96 2 59 4 111 1 79 1 61 1 361 1 
173 4 259 5 261 2 262 2 28 23 94 1 95 2 31 11 368 2 96 9 75 2 156 1 57 2 59 12 300 2 61 2 79 3 206 1 322 1 278 2 161 1 304 1 83 2 307 4 193 2 110 1 257 1 200 2 361 3 
262 1 28 1 59 1 
261 1 28 1 31 1 
173 1 259 2 278 1 28 6 82 1 83 1 31 3 368 1 307 2 96 3 193 1 255 1 59 3 300 1 200 1 61 1 79 1 361 1 
173 1 259 1 261 1 262 1 27 1 28 12 31 6 368 2 96 2 97 1 59 6 300 1 61 2 79 2 278 2 40 1 15 1 125 1 83 1 307 2 193 1 212 1 111 1 200 1 361 2 
259 1 173 1 28 6 31 3 96 2 75 1 156 1 57 1 59 3 79 1 361 1 
173 1 259 1 161 1 28 3 95 1 304 1 83 1 31 1 96 2 307 2 193 1 75 1 57 1 257 1 59 2 300 1 200 1 
207 1 137 1 312 1 99 1 160 1 220 1 53 1 
207 1 127 1 312 1 129 1 220 1 53 1 135 1 7 1 137 1 198 1 99 1 160 1 
245 1 185 1 104 1 189 4 73 1 376 1 211 1 6 4 134 4 351 1 355 1 236 1 330 1 
245 2 190 1 189 2 73 1 305 1 284 1 211 1 6 2 327 1 134 2 108 1 351 1 377 1 339 1 
245 1 351 1 134 1 87 1 197 1 189 1 236 1 296 1 133 1 6 1 
245 1 189 2 73 1 211 1 6 2 134 2 351 1 221 1 355 1 119 1 359 1 
245 2 185 1 143 1 104 1 189 5 73 2 283 1 376 1 211 3 6 5 327 1 134 4 351 2 355 1 119 1 236 1 
245 2 185 1 143 1 104 1 189 5 73 2 376 1 150 1 211 3 6 5 327 1 134 4 351 2 355 1 119 1 236 1 
245 1 351 1 134 1 185 1 104 1 210 1 189 1 73 1 236 1 211 1 6 1 
245 1 207 2 162 1 189 1 73 1 148 1 66 1 211 1 366 1 220 1 84 1 53 1 6 1 108 1 134 1 351 1 160 2 236 1 
26 1 73 2 295 1 148 1 366 1 220 1 6 1 53 2 298 1 241 2 223 1 160 2 245 1 207 2 162 1 189 1 66 1 211 3 84 2 351 1 134 1 327 1 108 2 140 1 
26 1 73 2 295 1 148 1 366 1 220 1 6 1 53 2 298 1 241 2 223 1 183 1 160 2 245 1 207 2 162 1 189 1 211 3 84 2 351 1 134 1 327 1 108 2 140 1 
92 1 2 1 73 1 295 1 6 3 152 1 267 1 180 1 223 1 321 2 245 1 228 1 280 1 189 3 347 2 211 4 351 1 134 3 327 1 108 1 236 1 330 1 171 1 
245 1 92 1 189 3 280 1 73 1 295 1 347 2 211 4 152 1 6 3 108 1 327 1 134 3 351 1 267 1 180 1 223 1 158 1 321 2 236 1 330 1 171 1 
245 1 351 1 134 1 189 1 91 1 6 1 
245 3 143 1 190 1 189 7 73 2 283 1 348 1 211 3 6 7 134 6 108 1 351 2 377 1 194 1 355 1 119 1 328 1 199 1 359 1 236 2 91 1 
238 1 148 1 6 1 53 1 297 1 96 2 57 1 156 1 59 3 300 2 100 1 160 2 245 1 207 2 161 1 162 1 304 1 66 1 211 1 67 2 306 1 253 1 351 1 108 1 307 4 355 1 110 1 361 1 259 2 174 1 28 6 73 1 29 1 366 1 220 2 31 3 75 1 225 1 79 1 189 1 83 2 84 1 134 1 193 2 46 2 200 2 237 1 
92 1 203 1 218 1 178 1 93 1 149 2 152 1 6 1 55 2 267 2 8 1 180 1 158 1 337 2 10 1 321 3 101 1 273 1 11 1 189 1 280 1 347 3 211 2 134 1 286 1 310 2 236 1 171 1 
245 2 280 1 189 2 73 1 211 2 6 2 134 2 108 1 351 1 355 1 356 1 199 1 91 1 
245 1 207 2 162 1 189 1 73 1 148 1 211 1 366 1 220 1 84 1 53 1 6 1 108 1 134 1 351 1 160 2 236 1 183 1 
245 2 190 1 189 1 73 1 348 1 211 1 6 1 327 1 134 1 108 1 351 1 377 1 199 1 
233 1 320 1 220 1 122 1 132 1 
92 1 332 1 26 1 294 1 148 1 53 1 298 1 152 1 266 1 8 1 241 2 320 1 321 2 160 1 102 1 227 1 122 1 207 1 247 1 281 1 347 2 107 1 84 1 132 1 233 1 354 1 49 1 171 1 
302 1 207 1 324 1 132 1 53 1 233 1 299 1 160 1 122 1 
281 1 49 1 132 1 
215 1 186 1 88 1 279 1 169 1 72 1 231 1 90 1 
215 3 186 2 279 2 72 4 264 1 116 1 88 1 234 1 118 1 169 4 182 1 48 2 90 1 360 1 
215 1 186 1 279 1 72 2 105 1 231 1 317 1 88 1 169 2 90 1 274 1 48 1 
215 1 186 1 279 1 72 3 231 1 252 1 116 2 88 1 118 2 169 3 90 1 360 1 
68 1 215 2 369 2 230 1 
44 1 88 1 169 1 72 1 231 1 90 1 
215 1 186 1 88 1 279 1 169 2 72 2 231 1 48 1 90 1 244 1 
256 1 
215 1 186 1 88 1 279 1 169 1 72 1 231 1 90 1 
215 1 186 1 210 1 279 1 
215 1 186 1 88 1 279 1 169 1 72 1 90 1 
9 1 169 1 239 1 
215 1 186 1 279 1 72 3 263 1 231 1 116 1 88 1 118 2 169 3 90 1 360 1 
215 1 186 1 88 1 279 1 65 1 169 2 72 2 48 1 90 1 
215 1 342 1 72 1 231 1 296 1 133 1 88 1 234 1 169 1 90 1 276 1 
215 1 186 1 88 1 169 1 72 1 231 1 90 1 
186 2 88 1 279 1 169 1 72 1 231 1 90 1 
215 1 373 1 186 1 72 2 231 1 151 1 88 2 136 1 169 2 90 2 
1 1 215 2 186 1 279 1 72 3 231 1 88 1 234 1 169 3 182 1 90 1 48 2 244 1 
215 1 186 1 279 1 72 2 231 1 51 1 296 1 133 2 367 1 88 1 197 1 169 2 90 1 276 1 48 1 
215 2 186 1 279 1 65 1 72 4 231 1 88 2 234 1 169 4 182 1 90 2 48 2 170 1 
215 1 186 1 279 1 72 3 231 1 88 1 118 1 169 3 48 1 90 1 244 1 
215 1 234 1 182 1 264 1 
215 1 186 1 

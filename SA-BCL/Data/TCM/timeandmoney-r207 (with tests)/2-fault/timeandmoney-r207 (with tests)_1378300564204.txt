#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 9 209 2 339 1 248 1 86 9 32 4 133 2 7 1 317 1 237 1 120 1 64 2 242 1 326 2 305 1 166 6 14 1 172 1 48 1 101 1 376 1 306 2 104 1 378 2 309 3 147 5 108 1 226 2 
54 9 209 2 339 1 248 1 86 9 32 4 133 2 7 1 317 1 237 1 120 1 64 2 242 1 326 2 305 1 166 6 14 1 172 1 48 1 101 1 376 1 306 2 104 1 309 3 147 5 378 2 108 1 226 2 
54 10 209 2 339 1 248 1 86 10 32 5 133 2 7 1 317 1 237 1 120 1 64 2 242 1 326 2 305 1 166 7 14 1 172 1 48 1 101 1 376 1 306 2 104 1 309 4 147 6 378 2 108 1 226 2 
54 7 209 2 339 1 248 1 86 7 32 3 133 2 7 1 317 1 237 1 120 1 64 2 242 1 326 2 305 1 166 4 14 1 172 1 48 1 101 1 376 1 306 2 104 1 309 2 147 4 378 1 226 2 
120 1 64 1 54 4 326 1 209 1 166 3 14 1 248 1 376 1 306 1 86 4 32 2 104 1 309 1 378 2 147 3 108 1 226 1 
120 1 64 1 54 2 371 1 326 1 209 1 14 1 44 1 101 1 144 1 48 1 86 2 104 1 133 1 147 1 226 1 
120 1 64 2 54 3 209 2 166 1 14 1 86 3 32 1 104 1 133 1 309 1 147 2 237 1 
54 9 209 2 248 1 32 4 86 9 133 1 7 1 237 1 120 1 64 2 242 1 326 1 166 7 14 1 376 1 306 1 104 1 309 3 147 5 378 2 108 1 355 1 285 1 226 1 
54 9 209 2 248 1 32 4 86 9 133 1 7 1 237 1 120 1 64 2 242 1 326 1 166 7 14 1 376 1 306 1 104 1 309 3 147 5 378 2 108 1 355 1 285 1 226 1 
146 1 145 1 240 1 
146 1 174 2 60 1 
231 2 370 2 232 2 361 2 110 1 31 1 338 2 164 2 
357 1 2 1 361 3 186 2 340 1 82 1 31 1 55 1 295 2 231 3 88 1 232 2 344 2 135 2 93 1 59 1 164 2 256 1 63 1 370 2 258 1 43 1 193 1 140 1 170 1 261 1 197 1 49 1 70 1 199 1 375 2 71 1 308 1 109 1 110 1 265 1 338 2 
365 1 231 1 370 1 232 1 379 1 223 1 361 1 110 1 338 1 164 1 
325 1 361 1 45 1 168 1 195 1 221 1 142 1 365 1 146 1 231 1 343 1 240 1 94 1 164 1 
370 1 361 1 45 1 168 1 195 2 221 1 142 1 365 1 146 1 231 1 343 2 232 1 240 1 338 1 164 1 
280 1 343 1 195 1 52 1 62 1 
146 1 343 2 298 1 195 2 52 1 53 1 240 1 62 1 
343 1 195 1 62 1 
370 1 195 1 361 1 365 1 231 1 343 1 232 1 379 1 90 1 223 1 52 1 110 1 338 1 164 1 
146 1 
146 1 343 2 298 1 366 1 195 2 52 1 240 1 62 1 
356 1 12 1 27 1 195 5 15 1 229 1 67 2 329 1 177 1 146 1 103 2 200 1 343 5 298 1 334 2 52 2 203 1 240 1 62 2 
357 1 370 1 140 1 361 2 170 1 261 1 186 1 82 1 55 1 375 1 231 2 71 1 232 1 117 1 299 1 344 1 93 1 59 1 337 1 164 1 
145 1 31 1 
370 1 361 2 198 1 31 2 231 2 232 1 338 1 139 1 164 2 
1 1 117 1 210 1 
357 1 361 1 140 1 170 1 261 1 186 1 82 1 31 1 55 1 375 1 231 1 71 1 344 1 93 1 59 1 216 1 
182 1 370 4 361 5 260 1 114 1 198 1 31 1 231 5 232 4 299 2 337 1 94 1 338 1 164 5 
365 1 231 2 370 2 232 2 379 1 361 2 74 1 164 2 
231 3 370 3 232 3 299 1 361 3 338 1 31 1 164 3 
365 1 231 1 370 1 232 1 379 1 361 1 164 1 
365 1 231 1 370 1 232 1 361 1 338 1 198 1 139 1 164 1 
357 1 361 4 186 1 340 1 115 1 82 1 31 1 55 1 295 1 365 1 231 4 88 1 232 3 343 1 299 1 344 1 135 2 93 1 59 1 164 3 256 1 63 1 370 3 258 1 193 1 140 1 45 1 168 1 195 1 170 1 221 1 142 1 261 1 197 1 199 1 198 1 375 1 71 1 179 1 109 1 337 1 110 1 265 1 338 2 
231 2 370 1 232 1 361 2 299 1 260 1 31 1 94 1 164 2 
370 3 195 1 168 1 361 3 45 1 221 1 142 1 363 1 115 1 198 1 365 1 146 1 231 3 343 1 232 3 299 2 337 1 338 1 164 3 
1 1 370 2 361 2 198 1 231 2 232 2 117 1 299 1 338 1 164 2 
357 1 361 1 140 1 170 1 261 1 186 1 82 1 31 1 55 1 375 1 231 1 71 1 344 1 93 1 59 1 
357 1 361 1 140 1 220 1 261 1 196 1 186 1 82 1 31 1 55 1 375 1 365 1 231 1 71 1 148 1 344 1 59 1 
1 2 360 1 4 1 210 2 314 1 340 2 251 1 295 4 88 1 117 2 135 2 58 1 254 1 256 1 258 1 193 1 349 1 70 2 199 1 18 1 282 1 265 1 153 1 126 1 
365 1 231 1 370 1 232 1 361 1 142 1 74 1 164 1 
19 1 122 1 
19 1 122 1 
312 1 129 1 
312 1 129 1 
312 1 129 1 
290 1 19 1 122 1 
19 1 122 1 69 1 
312 1 19 2 122 2 236 1 346 1 129 1 
290 1 19 1 122 1 
290 1 19 1 122 1 
19 1 122 1 264 1 
19 1 122 1 264 1 
19 1 122 1 264 1 
113 1 361 2 159 1 31 1 231 2 232 2 343 1 164 2 191 1 370 2 11 1 345 1 194 1 122 1 195 1 100 1 69 1 105 1 19 1 180 1 20 1 310 1 151 1 21 1 
359 1 11 2 277 1 345 3 113 2 122 2 195 2 262 1 212 1 146 1 343 2 87 1 19 2 20 2 236 1 310 1 40 2 274 1 151 2 
306 1 326 1 226 1 
326 1 144 1 226 1 
206 1 306 2 207 1 326 3 144 1 84 1 
206 1 306 1 207 1 326 2 292 1 144 1 
306 1 206 2 207 1 326 2 144 1 
267 1 27 3 247 1 116 2 343 5 298 1 134 1 58 1 300 1 91 1 302 1 60 1 61 1 240 1 191 1 62 1 12 2 97 2 195 5 174 3 67 1 100 1 329 1 103 1 307 2 146 2 334 1 180 1 52 4 282 1 153 1 126 1 
287 1 27 8 229 1 252 1 116 6 343 9 134 1 298 1 58 3 300 3 91 2 60 3 61 2 240 1 275 1 62 6 257 1 259 1 12 6 97 6 195 9 174 9 67 2 350 5 329 1 146 5 103 2 280 5 334 2 180 4 52 7 282 3 73 1 153 3 126 3 
267 1 27 3 247 1 229 1 343 3 116 2 58 1 91 1 300 1 60 2 61 1 240 1 12 2 97 2 195 3 174 4 67 1 146 3 103 1 307 1 334 1 180 1 52 2 282 1 153 1 126 1 
287 1 267 1 27 5 247 1 229 1 252 1 116 4 343 4 58 2 91 1 300 2 60 3 61 1 240 1 12 4 97 4 195 4 174 7 67 1 146 4 103 1 307 2 334 1 180 2 52 3 282 2 73 1 153 2 126 2 
145 1 36 1 59 1 
281 1 59 1 
303 1 
71 1 59 1 82 1 
315 1 59 1 
59 1 82 1 
71 1 162 1 36 2 234 1 59 3 82 1 
23 1 360 2 372 1 169 1 187 1 175 1 340 3 349 3 68 2 70 4 295 7 178 1 56 1 107 1 58 1 225 1 126 1 
23 1 360 2 372 1 169 1 187 1 175 1 340 3 349 3 68 2 70 4 295 7 178 1 56 1 107 1 58 1 225 1 126 1 
23 1 360 2 372 1 169 1 175 1 187 1 340 3 349 3 68 2 70 4 295 7 178 1 56 1 107 1 38 1 58 1 225 1 126 1 
23 5 360 5 288 1 187 2 340 15 342 1 295 31 56 2 135 2 300 3 58 4 163 4 322 1 256 1 192 1 258 1 372 1 193 1 167 3 169 1 16 1 175 1 349 10 68 3 199 1 70 16 178 1 107 2 124 1 149 1 282 3 225 2 153 3 126 4 
256 2 23 1 360 3 258 2 288 1 373 1 193 2 169 1 175 1 187 1 349 4 340 4 68 2 70 5 199 2 178 1 295 9 56 1 107 1 135 4 58 1 225 1 204 1 126 1 
54 2 209 1 156 1 80 1 250 1 186 1 55 1 84 1 86 2 133 1 316 1 344 1 118 1 120 1 255 1 64 1 326 2 166 1 14 1 140 1 328 1 144 1 374 1 375 1 306 1 351 1 104 1 147 1 333 1 226 1 
183 1 54 3 209 1 156 1 80 1 250 1 186 1 84 1 55 1 86 3 133 1 316 1 344 1 120 1 255 1 64 1 96 1 326 2 166 2 14 1 140 1 328 1 46 1 144 1 374 1 375 1 306 1 147 1 333 1 226 1 
183 1 54 2 156 1 250 1 186 1 55 1 84 1 86 2 133 1 316 1 344 1 120 1 96 1 326 2 166 2 14 1 140 1 328 1 144 1 374 1 375 1 306 1 147 1 333 1 226 1 
54 1 209 1 228 1 362 1 250 2 186 1 83 1 5 1 82 1 55 1 86 1 133 2 316 2 344 1 59 1 64 1 278 1 140 1 46 1 328 2 261 1 375 1 201 1 
255 1 64 1 54 1 183 1 326 2 209 1 140 1 156 1 328 1 80 1 186 1 250 1 144 1 374 1 84 1 55 1 375 1 306 1 86 1 133 1 104 1 333 1 316 1 344 1 118 1 226 1 
297 1 
55 1 343 5 298 3 344 2 301 4 60 2 59 1 62 6 164 1 12 2 168 1 261 2 221 1 174 2 67 1 353 1 311 1 75 1 27 2 128 1 77 2 228 1 361 1 362 1 269 1 186 2 82 1 30 2 365 1 231 1 233 1 235 2 91 1 41 2 369 2 190 2 240 1 95 1 94 1 276 2 325 1 195 5 140 1 45 1 142 1 244 1 141 1 329 1 375 2 146 2 103 1 51 1 334 1 284 1 286 1 
325 1 75 1 168 1 195 3 361 1 45 1 142 1 221 1 365 1 231 1 343 3 298 1 366 1 233 1 353 1 301 2 284 1 190 1 95 1 94 1 62 2 164 1 
75 1 361 1 30 1 365 1 231 1 343 3 298 1 233 1 366 1 301 3 240 1 94 1 95 1 62 1 164 1 325 1 45 1 195 3 168 1 221 1 142 1 146 1 353 1 284 1 
75 1 361 1 77 1 30 1 365 1 231 1 343 3 298 1 366 1 233 1 301 3 190 1 240 1 94 1 95 1 164 1 62 2 325 1 45 1 195 3 168 1 221 1 142 1 146 1 353 1 284 1 
358 1 75 1 27 1 361 1 77 4 130 1 30 4 364 1 365 1 231 1 343 5 298 3 233 1 366 1 235 2 41 2 301 6 60 2 369 2 190 4 240 5 94 1 95 1 164 1 62 7 276 2 325 1 12 1 195 5 45 1 168 1 141 1 221 1 142 1 67 1 329 1 50 1 103 1 146 5 51 1 334 1 353 1 72 1 284 1 
343 4 298 2 301 4 60 2 164 1 62 4 12 1 168 1 221 1 174 2 67 1 353 1 311 1 75 1 27 1 361 1 77 2 30 2 365 1 231 1 233 1 235 2 41 2 369 2 190 2 240 1 94 1 95 1 276 2 325 1 45 1 195 4 141 1 142 1 329 1 103 1 146 2 51 1 334 1 284 1 
75 1 27 1 77 2 361 1 130 1 30 2 365 1 364 1 231 1 343 4 298 2 233 1 235 2 41 2 301 4 60 2 369 2 190 2 240 1 94 1 95 1 62 4 164 1 276 2 325 1 12 1 45 1 195 4 168 1 141 1 221 1 142 1 67 1 329 1 50 1 146 1 103 1 51 1 334 1 353 1 284 1 
75 1 27 1 77 2 361 1 130 1 30 2 365 1 364 1 231 1 343 4 298 2 233 1 235 2 41 2 301 4 60 2 369 2 190 2 240 1 94 1 95 1 62 4 164 1 276 2 325 1 12 1 45 1 195 4 168 1 141 1 221 1 142 1 67 1 329 1 50 1 146 1 103 1 51 1 334 1 353 1 284 1 
22 2 75 1 27 1 77 2 184 1 361 1 130 1 30 2 365 1 231 1 343 4 298 2 233 1 35 1 235 2 301 4 369 2 190 2 238 2 240 1 94 1 95 1 62 4 164 1 325 1 12 1 45 1 195 4 168 1 221 1 142 1 174 2 67 1 329 1 146 1 103 1 51 1 222 1 334 1 353 1 284 1 
75 1 27 1 361 1 77 3 130 1 30 3 364 1 365 1 231 1 343 4 298 2 233 1 235 2 41 2 301 5 60 2 369 2 190 3 240 1 94 1 95 1 164 1 62 5 276 2 325 1 12 1 45 1 195 4 168 1 141 1 221 1 142 1 67 1 329 1 50 1 146 1 103 1 51 1 334 1 353 1 72 1 284 1 
75 1 27 1 361 1 77 3 130 1 30 3 364 1 365 1 231 1 343 4 298 2 233 1 235 2 41 2 301 5 60 2 369 2 190 3 240 1 94 1 95 1 164 1 62 5 276 2 325 1 12 1 45 1 195 4 168 1 141 1 221 1 142 1 67 1 329 1 50 1 146 1 103 1 51 1 334 1 353 1 72 1 284 1 
22 2 75 1 27 1 77 2 361 1 184 1 30 2 365 1 231 1 343 4 298 2 233 1 235 2 301 4 369 2 190 2 238 2 240 1 95 1 94 1 62 4 164 1 325 1 12 1 195 4 45 1 168 1 221 1 142 1 174 2 67 1 329 1 146 1 103 1 51 1 334 1 353 1 284 1 311 1 
1 1 360 2 210 1 340 3 31 2 295 6 88 1 117 1 135 2 58 1 254 1 256 1 258 1 193 1 169 1 175 1 349 2 68 1 199 1 70 3 178 1 145 1 107 1 225 1 265 1 126 1 
1 4 2 1 23 1 111 1 360 1 210 11 340 6 31 1 295 14 88 2 117 11 135 4 39 1 300 2 58 1 163 3 256 2 192 1 63 1 258 2 193 2 167 3 349 2 199 2 70 8 124 1 282 2 265 1 205 1 382 1 153 1 154 1 126 2 
357 1 1 1 2 1 155 1 361 2 186 1 340 1 82 1 31 1 55 1 6 1 295 2 231 2 88 1 232 1 271 1 344 1 299 1 135 2 93 1 59 1 216 1 164 1 256 1 370 1 63 1 258 1 193 1 140 1 170 1 261 1 199 1 70 1 375 1 71 1 337 1 265 1 382 1 
1 7 2 1 210 7 340 10 161 1 55 2 295 20 117 7 344 3 299 1 58 3 300 2 59 2 164 1 256 3 63 1 258 3 169 1 170 2 261 1 175 1 349 8 68 1 70 10 178 1 71 2 225 1 265 3 125 2 126 3 357 2 23 4 183 1 360 4 361 3 78 2 186 3 29 2 82 2 31 2 231 3 232 1 88 3 33 2 135 6 272 1 93 2 370 1 193 3 140 2 99 1 199 3 375 3 107 1 109 2 282 2 337 1 382 1 153 2 
2 1 340 1 55 3 295 2 344 6 299 1 59 4 10 1 254 1 164 1 304 1 256 2 217 1 63 1 121 1 258 2 261 2 70 1 308 2 71 1 263 1 265 2 183 1 228 1 361 1 362 1 186 7 270 1 82 3 231 1 88 2 232 1 89 1 37 1 135 4 370 1 243 1 193 2 140 4 199 2 375 7 106 1 202 1 
1 1 360 1 210 1 361 1 340 2 295 3 231 1 232 1 88 1 117 1 135 2 300 1 58 1 164 1 256 1 370 1 258 1 193 1 98 1 349 1 198 1 199 1 70 1 282 1 265 1 338 1 382 1 153 1 126 1 
1 1 256 1 23 1 258 1 193 1 210 1 349 1 251 1 199 1 70 2 295 2 88 1 117 1 135 2 282 1 254 1 265 1 126 1 
1 1 256 1 360 1 258 1 193 1 210 1 314 1 349 1 340 2 199 1 295 2 88 1 117 1 135 2 58 1 254 1 265 1 153 1 
1 2 23 1 360 1 210 2 340 2 295 4 88 1 117 2 135 2 300 1 58 1 254 1 256 1 258 1 193 1 349 2 70 2 199 1 282 1 265 1 153 1 126 1 
1 1 256 1 23 1 258 1 193 1 210 1 349 1 251 1 199 1 70 2 295 2 88 1 117 1 37 1 135 2 282 1 265 1 126 1 
1 1 256 1 360 1 258 1 193 1 210 1 314 1 349 1 340 2 199 1 295 2 88 1 117 1 37 1 135 2 58 1 265 1 153 1 
1 2 23 1 360 1 210 2 340 2 295 4 88 1 117 2 37 1 135 2 300 1 58 1 256 1 258 1 193 1 349 2 70 2 199 1 282 1 265 1 153 1 126 1 
1 2 23 1 360 1 210 2 340 2 295 4 88 1 117 2 135 2 300 1 58 1 256 1 258 1 193 1 349 2 70 2 199 1 282 1 265 1 153 1 126 1 
357 1 2 1 361 1 186 1 340 1 82 1 31 1 55 1 295 2 231 1 88 1 344 1 135 2 93 1 59 1 256 1 63 1 258 1 193 1 140 1 170 1 261 1 70 1 199 1 375 1 71 1 109 1 265 1 
357 1 361 1 186 1 340 1 82 1 31 1 55 1 365 1 295 1 231 1 88 1 344 1 135 2 59 1 256 1 63 1 258 1 193 1 140 1 220 1 196 1 171 1 261 1 199 1 375 1 71 1 148 1 265 1 
1 2 23 1 360 1 210 2 340 2 295 4 88 1 117 2 135 2 300 1 58 1 256 1 258 1 193 1 349 2 70 2 199 1 282 1 265 1 382 1 153 1 126 1 
1 2 357 1 23 1 360 1 210 2 361 1 186 1 340 2 82 1 55 1 295 4 231 1 88 1 117 2 344 1 135 2 58 1 300 1 93 1 59 1 256 1 258 1 193 1 140 1 170 1 349 2 70 2 199 1 375 1 351 1 71 1 282 1 109 1 125 1 265 1 153 1 126 1 
1 1 23 1 210 1 361 1 340 1 295 3 231 1 232 1 88 1 117 1 135 2 58 1 300 1 164 1 256 1 370 1 258 1 193 1 349 1 198 1 199 1 70 2 181 1 282 1 265 1 153 1 338 1 382 1 126 1 
23 3 360 3 313 1 112 2 340 10 85 1 213 1 295 19 34 1 135 4 300 3 58 3 320 1 163 2 256 2 192 1 258 2 13 1 193 2 373 1 167 1 245 2 349 6 199 2 70 9 123 1 124 1 282 3 153 3 126 3 
23 2 360 2 313 1 288 2 112 4 340 12 85 2 213 1 295 26 296 1 57 1 34 1 135 6 58 2 300 3 318 1 239 1 324 1 163 2 241 1 256 3 192 2 258 3 193 3 373 1 167 2 245 1 349 4 199 3 70 14 123 2 282 3 153 2 126 3 
112 4 288 1 340 21 295 41 213 1 296 1 57 1 58 5 300 4 163 4 256 3 258 3 167 3 169 1 173 1 175 1 349 8 68 1 70 20 178 1 123 1 124 1 225 1 126 5 23 4 313 1 360 4 85 2 34 1 135 6 318 1 239 1 320 1 324 1 241 1 192 3 373 1 193 3 245 1 199 3 107 1 282 4 153 4 
23 3 360 4 313 1 288 2 112 4 340 18 296 1 85 2 213 1 295 38 57 1 34 1 135 8 300 4 58 4 318 1 320 1 239 1 324 1 163 4 241 1 256 4 192 3 258 4 193 4 373 1 167 3 169 1 173 1 245 1 175 1 349 7 68 1 199 4 70 20 178 1 123 1 107 1 124 1 282 4 225 1 153 3 126 5 
23 7 111 2 360 7 313 1 288 1 112 4 340 25 296 1 85 1 213 1 295 52 57 1 34 1 135 4 300 7 58 8 318 1 239 1 324 1 163 4 241 1 256 2 192 2 258 2 193 2 373 1 167 4 169 1 245 1 175 1 349 14 68 1 199 2 70 27 178 1 123 1 107 1 124 2 282 7 225 1 153 7 126 8 
11 1 19 1 113 1 122 1 20 1 291 1 236 1 262 1 274 1 151 1 
159 1 69 1 
11 1 19 1 113 1 218 1 122 1 20 1 279 1 368 1 151 1 
290 1 76 1 
332 1 346 1 264 1 
359 1 11 1 277 1 345 2 113 1 122 1 195 1 262 1 146 1 343 1 87 1 19 1 20 1 236 1 310 1 40 1 274 1 151 1 
359 1 11 1 277 1 345 2 113 1 122 1 195 1 262 1 146 1 343 1 87 1 19 1 20 1 236 1 310 1 40 1 274 1 151 1 
359 1 11 1 277 1 345 2 113 1 122 1 195 1 262 1 146 1 343 1 87 1 19 1 20 1 236 1 310 1 40 1 274 1 151 1 
290 1 76 1 346 1 
290 1 76 1 346 1 
332 1 264 1 
332 1 346 1 264 1 
194 1 21 1 
113 1 361 2 159 1 31 1 231 2 87 1 343 1 232 2 40 1 191 1 164 2 11 1 370 2 345 1 194 1 122 1 195 1 100 1 69 1 330 1 105 1 19 1 180 1 20 1 52 1 151 1 21 1 
2 1 361 2 186 2 81 1 340 1 82 1 55 1 295 2 231 2 88 1 344 2 135 2 136 1 59 1 319 1 138 1 164 2 256 1 121 1 63 1 258 1 193 1 140 1 219 1 199 1 70 1 375 2 308 2 263 1 265 1 382 1 
255 1 183 1 326 2 327 1 140 1 328 1 156 1 186 2 144 1 84 1 55 1 375 2 306 1 351 1 333 1 344 2 380 1 336 1 226 1 
255 1 183 1 326 2 140 1 328 1 156 1 186 1 144 1 84 1 55 1 375 1 306 1 333 1 344 1 336 1 273 1 226 1 
327 1 278 1 140 1 228 1 328 1 261 1 362 1 186 1 82 1 55 1 375 1 352 1 344 1 59 1 
255 1 183 1 326 2 327 1 140 1 328 1 156 1 186 1 144 1 84 1 55 1 375 1 306 1 333 1 344 1 380 1 336 1 226 1 
137 1 
177 1 146 1 145 1 200 1 12 1 27 1 240 1 
27 1 343 1 298 1 41 1 60 1 240 1 62 1 276 1 12 1 195 1 141 1 174 1 67 1 329 1 103 1 146 2 334 1 
249 2 293 2 253 1 55 3 343 5 116 6 298 3 214 2 344 3 300 2 58 2 59 10 60 6 62 5 12 8 168 2 261 1 174 12 67 4 351 1 177 1 71 3 224 1 126 2 27 9 185 2 315 2 186 3 28 2 131 1 82 3 188 2 33 2 36 2 234 1 91 2 189 1 240 2 321 1 97 6 140 4 195 5 329 4 375 3 103 4 146 8 200 1 377 2 334 4 335 2 281 3 282 2 153 2 286 1 
208 1 27 8 296 1 343 1 116 5 298 1 57 1 214 2 91 1 300 2 58 2 60 3 239 1 240 2 324 1 163 1 241 1 62 1 192 1 12 5 97 5 167 1 195 1 174 6 67 2 329 2 103 2 146 5 377 1 334 2 282 2 152 1 153 2 286 1 126 2 
27 2 361 1 365 1 364 1 231 1 343 1 232 1 90 1 214 2 58 1 164 1 370 1 12 2 65 1 195 1 169 1 67 1 329 1 103 1 377 1 379 1 334 1 223 1 107 1 225 1 110 1 338 1 126 2 
12 1 27 1 67 1 329 1 177 1 103 1 146 1 200 1 334 1 240 1 
12 5 27 5 97 5 174 10 146 5 377 1 116 5 33 1 214 2 300 2 58 2 282 2 60 5 153 2 126 2 
146 1 343 1 298 1 195 1 240 1 62 1 
27 2 128 1 228 1 229 1 79 1 269 1 362 1 186 4 131 2 82 1 55 1 253 1 343 3 298 2 344 4 91 2 59 1 62 4 12 2 140 1 195 3 261 2 348 1 67 2 329 1 375 4 103 2 334 2 286 2 
357 1 361 3 186 1 340 1 82 1 31 1 55 1 295 1 231 3 232 2 88 1 344 1 135 2 93 1 59 1 164 2 256 1 63 1 370 2 258 1 193 1 140 1 170 1 261 1 197 1 199 1 375 1 71 1 109 1 110 1 265 1 338 2 
12 2 27 1 97 2 174 4 67 1 68 1 329 1 103 1 146 4 116 2 334 1 91 1 60 2 240 2 286 1 
24 1 20 1 151 1 
42 1 20 1 274 1 21 1 151 1 
24 1 20 1 151 1 
24 1 20 1 151 1 
20 1 119 1 151 1 
20 1 119 1 151 1 
20 1 119 1 151 1 
20 1 151 1 
19 1 122 1 
256 2 23 1 360 2 258 2 288 1 193 2 169 1 175 1 340 4 349 3 68 1 70 4 199 2 295 8 178 1 107 1 135 4 58 1 225 1 126 1 
360 2 169 1 175 1 340 3 349 2 68 1 70 3 178 1 295 6 145 1 107 1 58 1 225 1 126 1 
165 1 256 1 23 1 360 1 258 1 193 1 340 2 349 2 199 1 70 2 295 4 135 2 58 1 300 1 282 1 153 1 126 1 
192 1 23 1 360 1 167 1 340 4 349 2 70 3 295 7 124 1 58 1 300 1 282 1 153 1 163 2 126 1 
23 4 360 5 111 1 288 2 157 1 340 12 295 23 135 4 300 2 39 1 58 3 163 2 256 2 258 2 193 2 167 2 169 1 175 1 349 9 68 1 70 11 199 2 178 1 107 2 124 1 282 2 225 2 153 2 126 3 
295 1 340 1 163 1 
295 1 167 1 70 1 
256 1 165 1 23 1 258 1 360 2 193 1 340 3 349 3 199 1 70 3 295 6 33 1 135 2 300 1 58 1 282 1 153 1 126 1 
23 1 360 1 340 6 295 12 296 1 57 1 135 2 300 2 58 2 239 1 163 1 324 1 241 1 256 1 192 1 258 1 193 1 373 1 167 1 349 2 199 1 70 6 282 2 153 2 126 2 
23 1 360 1 169 1 340 3 349 2 70 3 295 6 107 1 58 1 225 1 126 1 
256 1 23 1 360 1 258 1 288 1 193 1 157 1 175 1 349 2 340 2 70 1 199 1 295 3 178 1 107 1 135 2 225 1 
256 1 23 2 258 1 360 3 193 1 373 1 65 1 169 1 349 5 340 5 199 1 70 5 295 10 107 2 135 2 58 2 225 2 126 2 
256 1 23 1 258 1 373 1 193 1 349 1 199 1 70 2 295 2 135 2 282 1 126 1 
256 1 23 1 360 1 258 1 373 1 193 1 340 2 349 2 199 1 70 2 295 4 135 2 58 1 300 1 282 1 153 1 126 1 
256 3 23 1 258 3 360 1 288 1 373 1 193 3 157 1 340 2 349 2 199 3 70 1 295 3 107 1 135 6 225 1 320 1 
23 5 360 7 288 2 157 1 340 18 342 1 295 34 135 10 300 3 58 5 320 1 322 1 163 4 165 1 256 5 192 1 258 5 193 5 373 1 167 3 169 2 16 1 175 1 349 12 68 1 199 5 70 16 178 1 107 3 124 1 282 3 225 3 153 3 126 5 
256 1 192 1 360 2 258 1 373 1 193 1 167 1 169 1 175 1 349 2 340 4 68 1 70 4 199 1 178 1 295 8 57 1 107 1 135 2 58 1 225 1 163 1 126 1 
23 1 360 2 340 5 295 11 57 1 135 4 58 1 300 1 163 2 256 2 165 1 192 1 258 2 373 1 193 2 167 1 169 1 175 1 349 3 68 1 199 2 70 6 178 1 107 1 124 1 282 1 225 1 126 2 
23 1 360 3 288 1 340 10 295 19 296 1 57 1 135 6 300 2 58 3 239 1 163 1 324 1 241 1 165 1 256 3 192 1 258 3 193 3 373 1 167 1 169 1 175 1 349 4 68 1 199 3 70 9 178 1 107 1 282 2 225 1 153 2 126 3 
23 2 360 3 288 1 340 7 295 17 296 1 57 1 135 6 300 2 58 2 239 1 163 1 324 1 241 1 165 1 256 3 192 1 258 3 193 3 373 1 167 1 169 1 175 1 349 5 68 1 199 3 70 10 178 1 107 1 282 2 225 1 153 1 126 3 
256 1 192 1 360 2 258 1 373 1 193 1 167 1 169 1 175 1 349 2 340 4 68 1 70 4 199 1 178 1 295 8 57 1 107 1 135 2 58 1 225 1 163 1 126 1 
23 1 360 1 340 6 295 12 296 1 57 1 135 2 300 2 58 2 239 1 163 1 324 1 241 1 256 1 192 1 258 1 193 1 373 1 167 1 349 2 199 1 70 6 282 2 153 2 126 2 
23 2 360 3 288 2 340 8 295 18 296 1 57 1 135 8 300 2 58 2 239 1 324 1 163 1 241 1 165 1 256 4 192 1 258 4 193 4 373 1 167 1 169 1 175 1 349 5 68 1 199 4 70 10 178 1 107 1 282 2 225 1 153 1 126 3 
23 3 360 3 288 2 340 7 295 16 296 1 57 1 135 8 300 3 58 2 320 1 239 1 324 1 163 1 241 1 256 4 192 1 258 4 373 1 193 4 167 1 349 6 199 4 70 9 282 3 153 2 126 3 
23 3 360 3 169 1 175 2 340 4 349 6 70 3 295 7 178 1 107 3 58 1 225 3 126 1 
23 1 360 3 288 2 340 8 295 18 296 1 57 1 135 8 300 2 58 2 320 1 239 1 324 1 163 1 241 1 256 4 192 1 258 4 373 1 193 4 167 1 169 1 175 1 349 4 68 1 199 4 70 10 178 1 107 1 282 2 225 1 153 1 126 3 
231 1 25 1 361 1 260 1 31 1 94 1 164 1 
127 1 25 1 246 1 361 1 260 1 17 1 31 1 102 1 231 1 381 1 94 1 164 1 
145 1 140 1 228 1 344 1 362 1 261 1 186 1 59 1 82 1 55 1 375 1 
357 1 370 1 140 1 361 2 261 1 186 1 82 1 31 1 55 1 375 1 231 2 71 1 232 1 299 1 344 1 93 1 59 1 164 1 
357 1 361 2 315 1 186 1 131 1 82 2 31 1 55 1 365 1 231 2 232 1 188 1 344 1 299 1 93 1 59 3 164 2 370 2 140 1 221 1 142 1 375 1 71 2 
357 1 361 2 315 1 186 1 131 1 82 2 31 1 55 1 365 2 231 2 232 1 188 1 344 1 299 1 59 3 164 2 370 2 140 1 196 1 221 1 142 1 375 1 71 2 148 1 
168 1 140 1 195 2 315 1 261 1 347 1 186 3 47 1 82 1 131 1 176 1 55 1 375 3 146 1 71 1 343 2 188 1 344 3 36 1 281 1 59 4 240 1 62 1 
168 1 140 1 195 2 315 1 261 1 186 3 28 1 47 1 82 1 131 1 55 1 375 3 146 1 71 1 343 2 188 1 344 3 36 1 281 1 59 4 240 1 62 1 
304 1 140 1 344 1 186 1 55 1 375 1 
183 1 289 1 186 6 82 2 55 2 89 1 344 5 234 1 59 3 10 1 304 1 121 1 217 1 140 3 261 2 375 6 308 1 71 1 106 1 202 1 
1 1 210 1 340 3 55 1 295 6 117 1 344 1 299 1 58 1 59 1 164 1 256 2 258 2 170 1 169 1 175 1 349 2 68 1 70 3 351 1 178 1 71 1 225 1 125 1 265 2 126 1 357 1 360 2 78 1 361 2 186 1 82 1 31 2 231 2 232 1 88 2 135 4 93 1 319 1 370 1 193 2 140 1 199 2 375 1 107 1 109 1 382 1 
27 1 185 1 186 1 249 1 28 1 253 1 343 3 298 1 344 1 36 1 59 2 240 1 62 2 12 1 195 3 168 1 261 1 67 2 329 2 375 1 177 1 146 1 103 2 200 1 334 2 52 1 335 1 281 1 
304 1 140 2 186 2 82 1 55 1 375 2 351 1 71 1 36 1 344 2 234 1 59 2 321 1 
140 1 228 1 261 1 362 1 186 4 47 1 341 1 82 1 55 1 375 4 351 1 344 4 59 1 
243 1 140 2 186 2 99 1 270 1 131 1 82 1 55 1 375 2 71 1 106 1 344 2 59 1 10 1 
326 1 333 1 140 1 344 1 261 1 186 1 144 1 226 1 55 1 375 1 
351 1 121 1 183 1 140 1 344 2 186 2 136 1 59 1 82 1 55 1 375 2 
121 1 217 1 228 1 140 2 362 1 261 1 186 5 341 1 131 1 82 2 55 2 375 5 351 1 89 1 344 4 59 3 
121 1 217 1 228 1 140 2 362 1 261 1 186 5 341 1 131 1 82 2 55 2 375 5 351 1 132 1 344 4 59 3 
357 1 361 2 186 1 82 1 55 1 31 1 365 1 231 2 232 1 344 1 299 1 59 1 164 1 370 1 140 1 196 1 261 1 375 1 71 1 148 1 
289 1 140 2 186 1 131 1 82 1 55 1 375 1 71 1 106 1 344 1 234 1 59 1 10 1 
354 1 8 1 266 1 31 1 323 1 
0 1 227 1 168 1 195 2 45 1 142 1 221 1 115 1 31 1 365 1 146 1 343 2 8 1 354 2 52 1 283 1 240 1 266 2 323 2 
231 1 8 1 354 1 361 1 219 1 81 1 138 1 323 1 164 1 
0 1 227 1 8 1 
120 1 145 1 147 1 14 1 
120 1 86 1 54 1 64 1 147 1 209 1 14 1 
86 1 133 1 250 1 
120 1 64 1 54 3 209 1 26 1 14 1 158 1 101 2 86 3 104 1 147 1 367 1 
120 1 86 2 54 2 64 1 147 1 378 1 166 1 209 1 14 1 
306 1 32 1 86 1 54 1 64 1 104 1 326 1 147 1 209 1 248 1 226 1 
86 1 54 1 64 1 104 1 147 1 209 1 14 1 
120 1 86 1 54 1 64 1 104 1 209 1 14 2 
64 2 54 2 209 2 14 1 66 1 294 1 86 2 104 1 147 1 331 1 
120 1 64 1 54 3 242 1 209 1 166 2 14 1 86 3 32 1 104 1 309 1 147 2 7 1 
120 1 64 1 54 2 326 2 209 1 166 1 14 1 144 1 84 1 306 1 86 2 104 1 147 1 150 1 226 1 
120 1 64 2 54 4 209 2 166 2 14 1 86 4 32 1 104 1 378 1 309 1 147 2 108 1 
120 1 86 1 54 1 64 1 104 1 147 1 209 1 14 1 
120 2 54 4 64 1 26 1 166 2 209 1 14 2 268 1 101 1 86 4 32 1 309 1 147 3 367 1 
120 1 64 1 54 2 3 1 209 1 166 1 14 1 160 1 86 2 104 1 147 1 285 1 
120 1 64 1 54 3 26 1 209 1 14 1 143 1 101 2 86 3 104 1 147 1 367 2 
147 2 92 2 211 1 215 1 
86 1 54 1 64 1 104 1 209 1 9 1 
120 1 86 2 54 2 64 1 104 1 147 1 166 1 7 1 209 1 14 1 
230 1 
120 1 86 1 54 1 64 1 104 1 147 1 209 1 14 1 
120 1 64 1 54 3 166 1 209 1 14 1 101 1 86 3 104 1 147 1 7 1 
32 1 147 1 309 1 268 1 
147 1 14 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
163 2 236 1 66 1 111 2 191 2 344 1 268 9 47 2 320 4 368 1 348 2 73 1 323 1 34 1 173 1 219 5 282 3 15 1 77 1 37 1 259 1 19 1 22 9 132 2 232 1 182 2 162 1 381 6 
163 2 236 1 66 1 111 2 191 2 344 1 268 9 47 2 320 4 368 1 348 2 73 1 323 1 34 1 173 1 219 5 282 3 15 1 77 1 37 1 259 1 19 1 132 2 22 9 232 1 182 2 162 1 381 6 
163 2 236 1 66 1 111 2 191 2 344 1 268 10 47 2 320 5 368 1 348 2 73 1 323 1 34 1 173 1 219 6 282 4 15 1 77 1 37 1 259 1 19 1 132 2 22 10 232 1 182 2 162 1 381 7 
163 2 236 1 66 1 111 2 191 2 344 1 268 7 47 2 320 3 368 1 348 2 73 1 323 1 173 1 219 4 282 2 15 1 77 1 37 1 259 1 19 1 132 2 22 7 232 1 182 1 162 1 381 4 
163 1 66 1 219 3 282 1 111 1 77 1 191 1 268 4 259 1 47 1 320 2 22 4 73 1 132 1 182 2 34 1 162 1 381 3 
44 1 236 1 163 1 219 1 66 1 111 1 77 1 191 1 268 2 259 1 47 1 347 1 368 1 348 1 22 2 6 1 
173 1 163 2 66 1 219 2 282 1 77 1 191 2 268 3 259 1 320 1 348 1 22 3 381 1 
163 2 66 1 111 1 191 2 268 9 320 4 47 1 348 1 91 1 73 1 34 1 173 1 219 5 282 3 15 1 77 1 259 1 19 1 22 9 132 1 378 1 182 2 162 1 381 7 
163 2 66 1 111 1 191 2 268 9 320 4 47 1 348 1 91 1 73 1 34 1 173 1 219 5 282 3 15 1 77 1 259 1 19 1 22 9 132 1 378 1 182 2 162 1 381 7 
255 1 130 1 149 1 
375 2 130 1 151 1 
354 2 98 2 369 1 114 2 315 1 122 2 126 2 272 2 
266 1 114 2 315 1 319 1 242 1 272 2 88 1 296 1 90 2 192 2 143 1 349 1 369 1 74 1 171 1 122 2 96 1 194 1 217 1 126 3 53 1 302 1 199 1 16 1 354 3 98 2 175 1 373 1 131 1 20 1 264 2 61 1 207 2 311 1 160 1 161 1 135 2 
354 1 98 1 369 1 214 1 2 1 114 1 122 1 78 1 126 1 272 1 
255 1 221 1 130 1 354 1 2 1 86 1 69 1 140 1 39 1 21 1 95 1 122 1 278 1 126 1 
255 1 221 1 130 1 354 1 98 1 114 1 2 1 86 2 69 1 140 1 272 1 21 2 122 1 278 1 126 1 
21 1 45 1 86 1 335 1 294 1 
229 1 21 2 255 1 130 1 45 1 86 2 335 1 249 1 
21 1 86 1 335 1 
329 1 354 1 98 1 45 1 2 1 86 1 114 1 78 1 272 1 21 1 369 1 214 1 122 1 126 1 
130 1 
229 1 21 2 255 1 130 1 370 1 45 1 86 2 335 1 
209 1 127 1 281 1 255 1 220 1 130 1 68 2 152 1 45 2 190 2 305 1 86 5 240 1 4 1 229 1 167 2 21 5 377 1 335 2 
266 1 354 2 98 1 114 1 242 1 296 1 143 1 192 1 349 1 60 1 8 1 207 1 171 1 122 1 160 1 251 1 194 1 96 1 135 1 126 2 
315 1 149 1 
354 2 98 1 114 1 315 2 225 1 272 1 307 1 122 2 126 2 
212 1 60 1 317 1 
363 1 354 1 266 1 315 1 242 1 296 1 143 1 192 1 349 1 207 1 171 1 160 1 96 1 194 1 135 1 126 1 
354 3 98 3 114 3 315 1 122 3 251 1 272 1 126 3 
354 1 98 1 2 1 114 1 122 1 78 1 126 1 
307 1 354 1 98 1 2 1 114 1 122 1 225 1 126 1 272 1 
266 1 114 3 2 1 86 1 69 1 140 1 315 1 242 1 272 2 296 1 90 1 143 1 192 1 349 1 369 1 8 1 171 1 122 3 278 1 251 1 194 1 96 1 217 1 126 4 302 1 221 1 16 1 354 4 98 3 175 1 258 1 373 1 225 1 131 1 20 1 21 1 106 1 264 2 61 1 207 1 311 1 160 1 161 1 135 1 
354 2 98 1 95 1 114 1 315 1 122 2 251 1 228 1 126 2 
187 1 221 1 130 1 354 3 98 3 86 1 2 1 114 3 140 1 69 1 225 1 272 1 21 1 106 1 8 1 122 3 251 2 278 1 126 3 
212 1 354 2 98 2 60 1 114 2 122 2 225 1 251 1 126 2 272 1 
354 1 266 1 315 1 242 1 296 1 143 1 192 1 349 1 207 1 171 1 160 1 96 1 194 1 135 1 126 1 
354 1 223 1 315 1 242 1 154 1 296 1 143 1 192 1 349 1 207 1 160 1 96 1 194 1 135 1 126 1 
210 1 112 1 317 2 90 4 212 2 119 1 216 1 250 1 300 1 252 1 217 1 196 1 53 2 197 1 302 1 175 1 355 1 131 2 264 2 61 1 60 2 311 1 161 1 338 1 
354 1 353 1 98 1 2 1 114 1 69 1 122 1 126 1 
280 1 354 5 98 4 114 4 315 1 225 1 228 1 272 1 95 1 8 1 121 1 122 5 251 2 126 5 
353 1 354 2 98 2 2 1 114 2 122 2 78 1 126 2 
231 1 246 1 
231 1 246 1 
116 1 5 1 
116 1 5 1 
116 1 5 1 
231 1 246 1 51 1 
231 1 246 1 148 1 
180 1 231 2 246 2 123 1 116 1 5 1 
231 1 246 1 51 1 
231 1 246 1 51 1 
128 1 231 1 246 1 
128 1 231 1 246 1 
128 1 231 1 246 1 
13 1 14 1 130 1 86 2 115 3 267 1 29 1 101 1 31 2 49 2 166 1 21 2 246 2 231 2 290 2 123 1 235 1 24 2 351 2 
42 1 341 1 114 2 86 1 115 1 315 1 295 1 31 1 166 1 246 1 122 2 126 2 148 1 351 1 354 2 98 2 222 1 304 1 284 1 202 1 21 1 231 1 290 1 24 1 
111 1 132 1 47 1 
347 1 111 1 47 1 
347 1 110 1 132 2 76 1 227 1 47 3 
347 1 132 1 76 1 227 1 11 1 47 2 
347 1 132 1 76 1 227 2 47 2 
209 3 84 2 68 1 189 1 190 1 45 4 342 2 86 5 365 1 4 1 295 1 167 1 325 1 216 1 250 1 300 1 252 1 279 1 255 1 174 1 130 2 222 1 54 2 151 1 152 2 284 1 261 1 229 1 375 3 21 5 309 1 335 1 
209 8 340 1 84 6 238 1 68 2 189 2 45 7 190 2 342 6 86 9 240 1 365 2 4 1 295 4 294 5 167 2 75 1 216 3 250 3 300 3 252 3 255 1 174 3 130 5 151 3 152 6 226 1 374 5 229 1 375 9 21 9 309 1 333 1 335 6 379 1 
209 3 84 2 68 1 189 1 45 2 190 1 86 3 342 2 240 1 365 1 295 1 167 1 325 1 216 1 250 1 300 1 252 1 255 1 130 3 174 1 54 1 151 2 152 2 261 1 375 4 21 3 
209 5 84 4 68 1 189 1 190 1 45 3 342 4 86 4 240 1 365 1 295 2 167 1 75 1 325 1 216 2 250 2 300 2 252 2 255 1 130 4 174 2 54 2 151 3 152 4 226 1 261 1 375 7 21 4 333 1 
211 1 160 1 149 1 
113 1 160 1 
18 1 
349 1 160 1 
349 1 211 2 299 1 139 1 160 3 242 1 
349 1 160 1 242 1 
176 1 160 1 
53 4 371 1 129 1 355 2 269 1 131 3 117 1 103 1 90 7 376 1 193 1 119 3 23 1 334 1 216 1 184 2 300 1 
53 4 371 1 129 1 355 2 269 1 131 3 117 1 103 1 90 7 376 1 193 1 119 3 23 1 334 1 216 1 184 2 300 1 
53 4 371 1 129 1 355 2 269 1 131 3 117 1 103 1 90 7 376 1 193 1 119 3 23 1 291 1 334 1 216 1 184 2 300 1 
26 1 314 1 269 3 270 3 30 1 321 1 117 7 90 40 168 1 193 2 92 1 119 13 32 1 216 6 250 3 300 6 252 3 35 1 53 21 371 1 302 1 129 1 174 3 355 6 331 4 131 19 103 3 376 2 23 2 264 2 61 1 334 1 311 1 184 3 161 1 
269 1 117 1 90 9 119 4 193 1 32 1 247 1 216 1 300 1 53 5 302 2 303 1 371 1 129 1 355 3 131 4 103 1 376 1 23 1 264 4 61 2 311 2 184 2 161 2 
110 1 163 1 66 1 111 1 1 1 191 1 364 1 268 2 47 2 244 1 296 1 347 1 348 1 192 1 94 1 96 1 352 1 219 1 77 1 99 1 259 1 205 1 82 1 132 1 22 2 58 1 207 1 135 1 185 1 381 1 
110 1 163 1 111 1 138 1 1 1 191 1 364 1 268 3 47 2 244 1 296 1 347 1 348 1 192 1 94 1 96 1 352 1 219 1 77 1 38 1 259 1 205 1 82 1 132 1 22 3 58 1 207 1 158 1 135 1 381 2 
352 1 110 1 219 1 111 1 138 1 77 1 38 1 268 2 364 1 259 1 47 2 296 1 244 1 347 1 348 1 82 1 192 1 132 1 22 2 58 1 94 1 207 1 96 1 135 1 381 2 
253 1 352 2 164 1 163 1 191 1 268 1 364 2 296 1 348 2 143 1 192 1 349 1 22 1 58 2 146 1 158 1 207 1 159 1 9 1 160 1 96 1 135 1 52 1 
110 1 163 1 66 1 111 1 1 1 191 1 364 1 268 1 47 2 244 1 296 1 347 1 348 1 192 1 94 1 96 1 352 1 38 1 205 1 82 1 132 1 22 1 58 1 207 1 135 1 185 1 
188 1 
189 1 190 1 86 5 2 1 140 1 4 1 296 1 143 2 192 2 349 1 146 1 95 1 96 1 195 1 255 1 254 2 256 1 354 1 151 2 17 2 152 2 56 1 155 4 260 1 21 5 59 2 207 2 310 1 159 1 361 1 160 1 63 1 209 2 68 1 69 1 271 1 167 1 213 1 122 1 278 1 125 2 326 1 126 1 221 1 130 2 177 2 39 1 229 3 375 2 83 2 289 1 335 6 183 1 337 2 135 2 
86 3 2 1 69 1 140 1 271 1 213 1 370 1 95 1 122 1 278 1 326 1 126 1 256 1 221 1 354 1 39 1 155 2 229 1 21 3 183 1 335 2 337 1 
86 3 2 1 69 1 140 1 271 1 213 1 370 1 95 1 122 1 278 1 326 1 126 1 256 1 221 1 254 1 255 1 354 1 130 1 39 1 155 3 229 1 21 3 335 1 183 1 
86 3 2 1 69 1 140 1 271 1 213 1 370 1 95 1 122 1 278 1 326 1 126 1 256 1 221 1 254 1 255 1 354 1 130 1 39 1 177 1 155 3 229 1 21 3 183 1 335 2 337 1 
209 1 313 1 68 1 190 1 86 5 2 1 69 1 140 1 316 1 271 1 4 1 167 1 213 1 370 1 95 1 122 1 278 1 125 2 195 1 326 1 126 1 255 5 254 4 256 1 221 1 130 5 354 1 151 2 17 2 152 1 39 1 177 4 155 6 40 1 229 3 21 5 286 1 83 2 59 2 183 1 335 7 63 1 134 1 337 4 
190 1 2 1 86 4 140 1 4 1 95 1 195 1 256 1 254 2 255 1 354 1 152 1 17 2 151 2 56 1 155 4 21 4 59 2 63 1 209 1 68 1 69 1 271 1 167 1 213 1 122 1 278 1 326 1 125 2 126 1 221 1 130 2 39 1 177 2 229 2 375 2 83 2 183 1 335 4 337 2 
209 1 68 1 190 1 86 4 2 1 69 1 140 1 316 1 271 1 4 1 167 1 213 1 95 1 122 1 278 1 125 2 195 1 326 1 126 1 255 1 254 2 256 1 221 1 130 1 354 1 151 2 17 2 152 1 177 2 39 1 155 4 229 2 40 1 21 4 83 2 59 2 335 4 183 1 337 2 63 1 134 1 
209 1 68 1 190 1 86 4 2 1 69 1 140 1 316 1 271 1 4 1 167 1 213 1 95 1 122 1 278 1 125 2 195 1 326 1 126 1 255 1 254 2 256 1 221 1 130 1 354 1 151 2 17 2 152 1 177 2 39 1 155 4 229 2 40 1 21 4 83 2 59 2 335 4 183 1 337 2 63 1 134 1 
209 1 68 1 190 1 86 4 2 1 69 1 140 1 271 1 4 1 72 2 87 1 167 1 213 1 95 1 169 1 248 1 122 1 278 1 195 1 326 1 126 1 255 1 254 2 256 1 221 1 130 1 354 1 17 2 152 1 177 2 39 1 155 4 229 2 40 1 375 2 178 2 21 4 59 2 335 4 183 1 337 2 
209 1 68 1 190 1 86 4 2 1 69 1 140 1 316 1 271 1 4 1 167 1 213 1 95 1 122 1 278 1 125 2 195 1 326 1 126 1 255 1 256 1 221 1 254 3 130 1 354 1 151 2 17 2 152 1 39 1 177 3 155 5 229 2 40 1 21 4 286 1 83 2 59 2 183 1 335 5 63 1 337 3 134 1 
209 1 68 1 190 1 86 4 2 1 69 1 140 1 316 1 271 1 4 1 167 1 213 1 95 1 122 1 278 1 125 2 195 1 326 1 126 1 255 1 256 1 221 1 254 3 130 1 354 1 151 2 17 2 152 1 39 1 177 3 155 5 229 2 40 1 21 4 286 1 83 2 59 2 183 1 335 5 63 1 337 3 134 1 
209 1 68 1 190 1 86 4 2 1 69 1 140 1 271 1 4 1 72 2 167 1 213 1 95 1 122 1 248 1 278 1 195 1 326 1 126 1 255 1 254 2 256 1 221 1 130 1 354 1 17 2 152 1 56 1 177 2 39 1 155 4 229 2 375 2 178 2 21 4 59 2 335 4 183 1 337 2 
315 2 317 1 269 1 90 6 212 1 119 2 193 1 216 1 300 1 217 1 149 1 196 1 53 3 371 1 302 1 129 1 175 1 355 2 131 3 103 1 60 1 264 2 61 1 311 1 184 1 161 1 
2 1 315 1 317 8 270 2 90 12 212 2 119 1 92 1 215 1 170 1 172 1 216 2 250 2 300 1 217 2 252 1 150 1 53 7 302 2 199 1 16 1 174 2 175 1 355 1 331 2 131 5 264 4 61 2 60 8 181 1 311 2 161 2 25 1 
363 1 266 1 114 1 315 1 242 1 296 1 90 2 212 1 192 1 143 1 349 1 170 1 8 1 171 1 122 1 251 1 194 1 96 1 217 1 126 2 53 1 302 1 354 2 16 1 199 1 98 1 175 1 131 1 358 1 207 1 157 1 61 1 264 2 311 1 160 1 161 1 135 1 186 1 
242 2 293 1 296 2 90 20 50 2 192 3 143 1 349 2 193 1 8 1 251 1 250 2 300 3 96 2 194 2 252 2 53 10 302 3 199 1 16 1 354 3 257 2 98 1 355 4 306 2 103 1 207 3 264 6 61 3 60 7 109 1 311 3 160 2 161 3 27 1 266 2 114 1 315 2 317 7 269 1 117 4 322 2 212 7 119 8 170 1 171 2 122 1 216 3 217 3 126 3 371 1 129 1 174 2 175 3 38 1 373 2 131 10 184 1 135 3 
292 1 114 1 319 2 296 2 90 2 192 7 143 2 349 2 7 1 146 1 122 1 251 1 96 2 217 2 126 1 196 1 53 1 302 2 218 1 354 1 199 1 16 1 98 1 175 2 201 1 99 1 38 1 131 1 287 1 107 1 207 8 264 4 61 2 233 1 159 1 311 2 160 3 161 2 135 8 
114 1 317 1 272 1 90 3 212 1 119 1 170 1 122 1 216 1 250 1 300 1 217 1 252 1 126 1 53 1 302 1 354 1 174 1 98 1 175 1 372 1 355 1 225 1 131 2 60 1 264 2 61 1 311 1 161 1 
53 2 302 1 112 1 175 1 317 1 117 1 90 2 212 1 119 1 60 1 61 1 264 2 311 1 216 1 250 1 161 1 217 1 196 1 
302 1 210 1 175 1 355 1 317 1 131 2 90 2 212 1 119 1 60 1 61 1 264 2 311 1 161 1 300 1 217 1 252 1 196 1 
317 2 117 1 90 4 212 2 119 2 216 1 250 1 300 1 217 1 252 1 196 1 53 2 302 1 174 1 175 1 355 1 131 2 264 2 61 1 60 2 311 1 161 1 
53 2 218 1 302 1 112 1 175 1 317 1 117 1 90 2 212 1 119 1 60 1 61 1 264 2 311 1 216 1 250 1 161 1 217 1 
218 1 302 1 210 1 175 1 355 1 317 1 131 2 90 2 212 1 119 1 60 1 61 1 264 2 311 1 161 1 300 1 217 1 252 1 
317 2 117 1 90 4 212 2 119 2 216 1 250 1 300 1 217 1 252 1 53 2 302 1 218 1 174 1 175 1 355 1 131 2 264 2 61 1 60 2 311 1 161 1 
53 2 302 1 174 1 175 1 355 1 317 2 131 2 117 1 90 4 212 2 119 2 60 2 61 1 264 2 311 1 216 1 250 1 300 1 161 1 252 1 217 1 
266 1 315 1 242 1 296 1 90 2 192 1 143 1 349 1 171 1 194 1 96 1 217 1 126 1 53 1 302 1 199 1 354 1 16 1 175 1 373 1 131 1 207 1 61 1 264 2 311 1 160 1 161 1 135 1 
315 1 242 1 296 1 90 2 192 1 143 1 349 1 194 1 96 1 217 1 126 1 53 1 302 1 199 1 354 1 16 1 223 1 175 1 154 1 131 1 104 1 207 1 61 1 264 2 311 1 160 1 161 1 135 1 
317 2 117 1 90 4 212 2 119 2 170 1 216 1 250 1 300 1 217 1 252 1 53 2 302 1 174 1 175 1 355 1 131 2 264 2 61 1 60 2 311 1 161 1 
266 1 317 2 242 1 117 1 296 1 90 4 212 2 192 1 349 1 119 2 171 1 216 1 250 1 300 1 194 1 96 1 252 1 217 1 126 1 53 2 302 1 257 1 354 1 174 1 175 1 355 1 99 1 373 1 131 2 60 2 207 1 61 1 264 2 311 1 160 1 161 1 135 1 
114 1 317 1 272 1 117 1 90 3 212 1 119 1 170 1 122 1 216 1 250 1 300 1 252 1 217 1 126 1 53 2 302 1 354 1 174 1 98 1 175 1 225 1 153 1 131 1 264 2 61 1 60 1 311 1 161 1 
339 1 137 2 241 2 270 1 321 1 117 3 90 19 118 1 92 1 119 6 216 3 250 3 300 3 252 3 53 9 302 2 303 1 174 3 224 1 355 3 331 2 131 10 262 1 206 1 264 4 61 2 133 1 108 1 311 2 161 2 
339 1 137 1 241 2 270 2 321 1 117 1 90 20 118 2 119 2 92 1 216 3 250 3 300 3 252 3 53 10 302 1 303 1 174 3 355 1 331 2 131 10 262 1 206 2 264 2 61 1 108 1 311 1 161 1 25 1 
339 1 137 1 241 2 141 1 270 3 321 2 117 2 90 25 118 2 92 2 119 4 216 4 250 4 300 3 252 3 53 13 302 2 303 1 174 4 224 1 355 2 331 4 131 12 262 1 206 1 264 4 61 2 108 1 311 2 161 2 25 1 
339 1 137 1 241 2 141 1 270 3 321 2 117 3 90 27 118 2 92 2 119 6 216 4 250 4 300 4 252 4 53 13 302 2 303 1 174 4 224 1 355 3 331 4 131 14 262 1 206 1 264 4 61 2 108 1 311 2 161 2 25 1 
339 1 137 1 269 2 241 2 270 2 321 1 117 3 90 30 118 1 193 2 92 1 119 7 216 5 250 3 300 5 252 3 53 16 371 2 302 1 303 1 129 2 174 3 355 4 331 2 131 14 103 2 262 1 206 1 264 2 61 1 108 1 311 1 184 2 161 1 25 1 
274 1 231 1 246 1 290 1 29 1 123 1 235 1 24 1 31 1 351 1 
304 1 148 1 
231 1 246 1 290 1 102 1 234 1 24 1 70 1 31 1 351 1 
14 1 130 1 86 1 115 2 267 1 29 1 101 1 31 1 49 1 166 1 21 1 246 1 231 1 290 1 123 1 235 1 24 1 351 1 
14 1 130 1 86 1 115 2 267 1 29 1 101 1 31 1 49 1 166 1 21 1 246 1 231 1 290 1 123 1 235 1 24 1 351 1 
14 1 130 1 86 1 115 2 267 1 29 1 101 1 31 1 49 1 166 1 21 1 246 1 231 1 290 1 123 1 235 1 24 1 351 1 
180 1 51 1 33 1 
180 1 51 1 33 1 
89 1 128 1 
89 1 128 1 180 1 
341 1 202 1 
42 1 341 1 45 1 86 1 114 2 267 1 115 1 315 1 295 1 31 1 49 1 246 1 122 2 126 2 148 1 351 1 354 2 222 1 304 1 98 2 100 1 284 1 202 1 21 1 231 1 290 1 24 1 
51 1 33 1 
89 1 128 1 180 1 
319 2 46 1 345 1 296 1 90 2 192 2 349 1 276 1 170 1 350 1 122 2 96 1 217 1 126 2 53 1 302 1 354 2 199 1 16 1 175 1 330 1 131 1 107 1 207 2 61 1 264 2 233 1 311 1 160 1 161 1 135 2 
110 1 111 1 1 1 99 1 239 1 38 1 318 1 47 2 296 1 244 1 347 1 192 2 82 1 132 1 58 1 207 2 96 1 135 2 97 1 
110 1 111 1 1 1 38 1 318 1 47 2 244 1 296 1 347 1 192 1 82 1 132 1 58 1 207 1 96 1 135 1 327 1 
164 1 192 1 143 1 349 1 58 1 93 1 146 1 207 1 159 1 160 1 96 1 97 1 135 1 296 1 
110 1 111 1 1 1 239 1 38 1 318 1 47 2 296 1 244 1 347 1 192 1 82 1 132 1 58 1 207 1 96 1 135 1 97 1 
41 1 
209 1 255 1 130 1 152 1 305 1 377 1 149 1 
209 1 255 1 130 2 68 1 190 1 152 1 151 1 86 1 4 1 229 1 375 1 167 1 21 1 83 1 335 1 63 1 125 1 
0 2 84 6 189 2 190 4 86 5 342 6 140 2 242 3 48 1 4 4 296 4 243 2 143 1 192 3 349 3 299 1 250 2 96 3 300 2 252 2 255 2 151 6 152 8 305 1 99 1 306 2 203 2 57 2 21 5 263 2 105 2 207 3 361 1 160 10 209 9 67 2 113 3 68 4 211 2 167 4 277 1 216 2 130 8 174 2 176 2 285 1 229 3 80 1 375 12 179 1 332 2 377 1 335 5 135 3 
43 1 209 13 84 8 189 1 68 2 190 2 86 1 342 8 270 2 4 2 321 1 273 1 167 2 298 1 92 1 216 4 10 1 250 4 300 4 12 1 252 4 255 2 130 7 174 4 151 5 152 8 356 1 331 2 229 1 57 1 375 10 21 1 332 3 361 1 208 1 335 1 25 1 
209 2 68 1 190 1 2 1 86 1 114 1 316 1 269 1 4 1 272 1 167 1 193 1 369 1 214 1 122 1 216 2 300 1 126 1 35 1 329 1 354 1 98 1 152 2 78 1 103 1 57 1 21 1 332 2 
209 1 255 1 130 1 68 1 190 1 152 1 305 1 4 1 167 1 377 1 
209 5 84 5 174 2 130 5 152 5 151 5 342 5 306 1 57 1 375 10 332 2 216 2 250 2 300 2 252 2 
229 1 21 1 255 1 130 1 86 1 335 1 
209 2 68 2 189 2 190 2 86 3 240 1 3 1 4 1 296 1 167 2 192 4 143 2 349 1 146 1 96 1 152 2 285 2 260 1 229 2 80 1 21 3 288 1 289 1 207 4 361 2 159 1 335 4 160 1 135 4 
266 1 114 2 315 1 242 1 272 2 296 1 90 1 192 1 143 1 349 1 369 1 171 1 122 2 96 1 194 1 217 1 126 3 302 1 16 1 354 3 98 2 175 1 373 1 131 1 20 1 264 2 61 1 207 1 311 1 160 1 161 1 135 1 
209 1 84 2 255 2 130 4 68 1 189 1 151 2 152 2 190 1 342 2 4 1 375 4 167 1 361 1 184 1 
301 1 24 1 31 1 
230 1 235 1 24 1 202 1 31 1 
301 1 24 1 31 1 
301 1 24 1 31 1 
55 1 24 1 31 1 
55 1 24 1 31 1 
55 1 24 1 31 1 
24 1 31 1 
231 1 246 1 
53 4 302 2 371 1 129 1 355 2 269 1 131 4 117 1 90 8 103 1 193 1 119 3 32 1 61 2 264 4 216 1 311 2 184 1 300 1 161 2 
53 3 371 1 129 1 355 2 269 1 131 3 103 1 90 6 119 2 193 1 216 1 184 1 300 1 149 1 
53 2 302 1 237 1 174 1 355 1 131 2 117 1 90 4 119 2 61 1 264 2 311 1 216 1 250 1 300 1 161 1 252 1 
53 6 174 2 355 1 270 2 321 1 331 2 117 1 131 6 90 12 119 2 92 1 216 2 250 2 300 2 25 1 252 2 
269 2 270 2 117 2 90 26 193 2 92 1 119 7 32 1 216 5 250 2 300 5 252 2 35 1 53 13 150 1 371 1 302 1 129 1 174 2 355 5 331 2 131 13 103 2 61 1 264 2 311 1 184 1 161 1 25 1 
90 1 331 1 131 1 
90 1 53 1 270 1 
53 3 302 1 237 1 174 1 355 2 306 1 131 3 117 1 90 6 119 3 264 2 61 1 311 1 216 1 250 1 161 1 300 1 252 1 
43 1 270 2 321 1 273 1 117 2 90 22 298 1 92 1 119 4 216 4 250 4 300 4 12 1 252 4 53 11 302 1 303 1 174 4 355 2 331 2 131 11 264 2 61 1 208 1 311 1 161 1 25 1 
53 3 355 1 269 1 131 3 117 1 90 6 103 1 193 1 119 2 216 1 300 1 
53 1 371 1 302 1 129 1 355 1 269 1 117 1 131 2 103 1 90 3 275 1 119 2 32 1 61 1 264 2 311 1 161 1 
53 5 302 1 303 1 355 3 269 2 117 2 131 5 103 2 90 10 119 5 193 1 264 2 61 1 311 1 216 2 161 1 300 2 35 1 
53 2 303 1 302 1 117 1 90 2 119 1 61 1 264 2 311 1 216 1 250 1 161 1 
53 2 303 1 302 1 174 1 355 1 131 2 117 1 90 4 119 2 61 1 264 2 311 1 216 1 250 1 300 1 161 1 252 1 
53 1 303 1 302 3 224 1 355 1 269 1 131 2 117 1 90 3 103 1 275 1 119 2 32 1 61 3 264 6 311 3 161 3 
26 1 237 1 314 1 269 2 270 3 321 1 117 4 90 35 168 1 193 2 92 1 119 9 32 1 216 6 250 3 300 5 252 2 35 1 53 18 371 1 302 4 303 1 129 1 174 3 355 5 224 1 331 4 131 17 103 2 264 8 61 4 311 4 184 1 161 4 
269 1 270 1 321 1 90 11 298 1 193 1 119 2 92 1 216 2 250 1 300 1 53 6 302 1 303 1 371 1 174 1 129 1 355 2 331 2 131 5 103 1 264 2 61 1 311 1 184 1 161 1 
237 1 269 1 270 1 321 1 117 1 90 11 298 1 193 1 92 1 119 3 216 2 250 1 300 1 53 6 371 1 303 1 302 2 129 1 174 1 355 2 331 2 131 5 103 1 264 4 61 2 311 2 184 1 161 2 
237 1 269 2 270 2 321 1 117 2 90 25 298 1 193 2 92 1 119 6 216 5 250 2 300 5 252 2 35 1 53 13 371 1 302 2 303 1 129 1 174 2 355 4 331 2 131 12 103 2 264 4 61 2 311 2 184 1 161 2 25 1 
237 1 269 2 270 2 321 1 117 3 90 23 298 1 193 2 92 1 119 8 216 5 250 2 300 4 252 1 35 1 53 13 371 1 302 2 303 1 129 1 174 2 355 5 331 2 131 10 103 2 264 4 61 2 311 2 184 1 161 2 25 1 
269 1 270 1 321 1 90 11 298 1 193 1 119 2 92 1 216 2 250 1 300 1 53 6 302 1 303 1 371 1 174 1 129 1 355 2 331 2 131 5 103 1 264 2 61 1 311 1 184 1 161 1 
270 2 321 1 117 1 90 12 298 1 92 1 119 2 216 2 250 2 300 2 252 2 53 6 302 1 303 1 174 2 355 1 331 2 131 6 264 2 61 1 311 1 161 1 25 1 
237 1 270 2 321 1 90 10 298 1 92 1 119 1 216 2 250 2 300 1 252 1 53 6 302 2 303 1 174 2 355 1 331 2 131 4 264 4 61 2 311 2 161 2 25 1 
270 1 321 1 90 7 298 1 92 1 119 1 216 1 250 1 300 1 252 1 53 3 303 1 302 2 174 1 224 1 355 1 331 2 131 4 264 4 61 2 311 2 161 2 
53 3 371 2 129 1 355 3 269 3 131 4 117 3 90 7 103 3 119 6 193 1 216 1 300 1 
270 1 321 1 90 7 298 1 92 1 119 1 216 1 250 1 300 1 252 1 53 3 303 1 302 2 174 1 224 1 355 1 331 2 131 4 264 4 61 2 311 2 161 2 
354 1 95 1 315 1 122 1 265 1 126 1 228 1 
354 1 315 1 228 1 308 1 142 1 156 1 245 1 95 1 122 1 265 1 126 1 328 1 
192 1 143 1 349 1 146 1 207 1 159 1 160 1 96 1 135 1 296 1 149 1 
354 2 266 1 98 1 114 1 315 1 242 1 296 1 143 1 192 1 349 1 207 1 122 1 160 1 251 1 194 1 96 1 135 1 126 2 
221 1 354 2 266 1 98 2 176 1 2 1 114 1 69 1 315 1 242 2 296 1 285 1 192 1 263 1 349 2 207 1 122 2 160 3 251 1 194 1 96 1 135 1 126 2 
114 1 2 1 69 1 315 1 242 2 296 1 192 2 144 1 349 2 122 2 251 1 96 1 194 1 126 2 221 1 354 2 98 2 223 1 176 1 285 1 263 1 207 2 160 3 135 2 
362 1 113 1 211 1 86 2 140 1 242 1 296 1 192 3 143 1 144 1 349 1 96 1 198 1 255 1 130 1 176 1 285 1 21 2 263 1 207 3 335 1 160 4 135 3 
255 1 130 1 67 1 113 1 176 1 211 1 86 2 140 1 242 1 296 1 285 1 21 2 143 1 192 3 144 1 349 1 263 1 207 3 335 1 160 4 96 1 135 3 
192 1 7 1 207 1 96 1 135 1 296 1 
292 1 201 1 99 1 38 1 319 1 242 1 79 1 296 3 287 1 143 2 192 6 349 2 7 1 107 1 207 7 299 1 312 1 160 3 96 2 135 7 380 1 
242 1 345 1 296 1 90 6 50 1 192 1 349 1 193 1 251 1 96 1 194 1 300 1 53 3 302 2 257 1 354 2 98 1 99 1 355 2 103 1 207 1 264 4 61 2 60 1 311 2 160 1 161 2 266 1 114 1 315 2 317 1 269 1 212 1 119 2 170 1 171 1 122 1 216 1 217 2 126 2 371 1 129 1 175 2 373 1 131 3 184 1 135 1 
209 1 0 1 67 1 68 2 113 1 190 2 45 1 211 1 86 3 140 1 4 2 243 1 167 2 192 1 143 1 255 1 130 1 152 1 305 1 203 1 229 1 80 1 21 3 207 1 377 1 335 2 160 2 135 1 
211 1 99 1 242 1 296 2 192 2 179 1 349 1 7 1 207 2 299 1 160 2 96 1 135 2 
99 1 296 1 204 1 143 1 192 4 144 1 349 1 207 4 146 1 159 1 160 1 96 1 135 4 
242 1 79 1 293 1 285 1 296 2 192 2 297 1 359 1 349 1 207 2 160 1 96 1 135 2 380 1 
347 1 82 1 192 1 143 1 111 1 207 1 96 1 47 1 135 1 296 1 
99 1 38 1 296 1 192 2 276 1 349 1 207 2 107 1 160 1 96 1 135 2 
201 1 99 1 285 1 296 2 204 1 143 1 192 4 287 1 349 2 146 1 207 5 107 1 159 1 160 3 96 2 135 5 
99 1 285 1 296 2 204 1 143 1 192 4 287 1 360 1 349 2 146 1 207 5 107 1 159 1 160 3 96 2 135 5 
354 2 98 1 223 1 114 1 315 1 242 1 296 1 143 1 192 1 349 1 207 1 122 1 160 1 251 1 194 1 96 1 135 1 126 2 
242 1 79 1 285 1 296 2 192 1 349 1 207 1 299 1 312 1 160 1 96 1 135 1 380 1 
65 1 136 1 283 1 315 1 357 1 
65 2 136 1 255 1 221 1 130 1 283 2 45 1 2 1 86 2 140 1 69 1 165 1 315 1 357 2 21 2 81 1 120 1 106 1 278 1 
136 1 354 1 283 1 330 1 46 1 357 1 350 1 122 1 126 1 
81 1 136 1 165 1 
219 1 77 1 259 1 149 1 
163 1 219 1 22 1 77 1 191 1 268 1 259 1 
348 1 364 1 268 1 
163 1 236 2 219 1 66 1 200 1 191 1 77 1 343 1 268 3 259 1 22 3 64 1 
163 1 219 1 22 2 77 1 191 1 182 1 268 2 259 1 381 1 
163 1 66 1 219 1 111 1 191 1 268 1 320 1 47 1 22 1 73 1 132 1 
163 1 219 1 66 1 22 1 77 1 191 1 268 1 
163 1 66 1 22 1 77 2 191 1 268 1 259 1 
163 2 219 1 66 1 77 1 191 2 268 2 71 1 22 2 324 1 147 1 
163 1 66 1 219 2 15 1 282 1 77 1 191 1 268 3 259 1 320 1 19 1 22 3 381 2 
110 1 163 1 219 1 66 1 111 1 77 1 191 1 85 1 268 2 259 1 47 2 347 1 22 2 132 1 381 1 
163 2 66 1 219 2 282 1 77 1 191 2 268 4 259 1 320 1 22 4 182 1 34 1 381 2 
163 1 219 1 66 1 22 1 77 1 191 1 268 1 259 1 
236 1 163 1 219 3 282 1 77 2 191 1 343 1 268 4 259 2 320 1 367 1 22 4 64 1 381 2 
163 1 219 1 66 1 77 1 191 1 268 2 259 1 22 2 91 1 145 1 124 1 381 1 
163 1 36 1 236 2 219 1 66 1 191 1 77 1 343 1 268 3 259 1 22 3 64 2 
219 2 28 1 336 1 346 2 
163 1 66 1 22 1 191 1 268 1 366 1 
163 1 219 1 66 1 15 1 22 2 77 1 191 1 268 2 259 1 381 1 
62 1 
163 1 219 1 66 1 22 1 77 1 191 1 268 1 259 1 
236 1 163 1 219 1 66 1 15 1 22 3 77 1 191 1 268 3 259 1 381 1 
219 1 282 1 320 1 367 1 
219 1 77 1 

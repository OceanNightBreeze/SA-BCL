#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 15 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 15 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 329 125 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 89 2 178 1 105 2 106 9 318 3 27 1 341 1 264 1 6 1 188 5 323 2 32 1 78 1 168 1 345 1 144 4 327 6 118 2 247 1 97 1 373 2 62 9 220 1 152 1 88 2 288 2 102 1 
293 1 89 2 178 1 105 2 106 9 318 3 27 1 341 1 264 1 6 1 188 5 32 1 323 2 78 1 168 1 345 1 144 4 327 6 118 2 247 1 97 1 373 2 62 9 220 1 152 1 88 2 288 2 102 1 
293 1 89 2 178 1 105 2 106 10 318 4 27 1 341 1 264 1 6 1 188 6 32 1 323 2 78 1 168 1 345 1 144 5 327 7 118 2 247 1 97 1 373 2 62 10 220 1 152 1 88 2 288 2 102 1 
293 1 89 2 178 1 105 2 106 7 318 2 27 1 341 1 264 1 6 1 188 4 32 1 323 1 78 1 168 1 345 1 144 3 327 4 118 2 247 1 97 1 373 2 62 7 152 1 88 2 288 2 102 1 
168 1 293 1 345 1 105 1 106 4 144 2 327 3 118 1 318 1 373 1 341 1 62 4 220 1 152 1 88 1 188 3 288 1 323 2 
78 1 168 1 89 1 105 1 106 2 247 1 18 1 373 1 341 1 62 2 152 1 88 1 10 1 188 1 288 1 164 1 
168 1 178 1 89 1 106 3 144 1 327 1 318 1 373 2 341 1 62 3 152 1 88 2 188 2 
89 1 178 1 293 1 105 1 106 9 318 3 27 1 341 1 188 5 323 2 168 1 345 1 144 4 327 7 60 1 118 1 97 1 373 2 62 9 220 1 152 1 88 2 288 1 336 1 
89 1 178 1 293 1 105 1 106 9 318 3 27 1 341 1 188 5 323 2 168 1 345 1 144 4 327 7 60 1 118 1 97 1 373 2 62 9 220 1 152 1 88 2 288 1 336 1 
15 1 34 1 129 1 
129 1 122 2 38 1 
237 2 332 2 145 2 190 1 130 1 137 2 5 2 132 2 
22 1 338 1 225 1 44 2 314 2 339 1 340 2 108 1 137 2 5 2 184 2 28 1 49 1 237 2 51 1 320 2 238 1 189 1 190 1 166 1 243 1 367 1 145 3 83 1 197 1 171 1 249 1 39 1 40 1 332 3 377 1 378 1 309 1 130 1 223 1 132 2 174 1 
54 1 99 1 237 1 58 1 332 1 145 1 190 1 137 1 5 1 132 1 
1 1 203 1 34 1 58 1 277 1 81 1 142 1 59 1 145 1 30 1 332 1 286 1 129 1 132 1 
203 1 34 1 277 2 58 1 142 1 59 1 145 1 137 1 5 1 237 1 30 1 332 1 286 2 129 1 132 1 
63 1 277 1 286 1 328 1 343 1 
233 1 159 1 63 1 34 1 277 2 286 2 129 1 343 1 
277 1 286 1 343 1 
54 1 58 1 277 1 145 1 181 1 137 1 5 1 99 1 63 1 237 1 332 1 286 1 190 1 132 1 
129 1 
233 1 63 1 34 1 277 2 286 2 129 1 342 1 343 1 
175 1 114 1 34 1 216 1 135 1 277 5 82 2 259 2 261 1 372 1 232 2 233 1 63 2 286 5 127 1 129 1 363 1 162 1 343 2 
15 1 130 1 
56 1 145 2 137 1 109 1 5 1 237 1 332 2 130 2 132 2 
115 1 57 1 300 1 
22 1 314 1 340 1 243 1 367 1 145 1 108 1 184 1 39 1 28 1 139 1 332 1 377 1 238 1 309 1 130 1 
94 1 237 3 332 3 145 3 130 1 137 3 5 1 132 3 
99 1 237 1 58 1 332 1 145 1 137 1 132 1 
237 1 56 1 58 1 332 1 145 1 137 1 109 1 5 1 132 1 
22 1 225 1 44 1 203 1 314 1 340 1 108 1 137 3 319 1 5 2 184 1 28 1 92 1 49 1 237 3 51 1 320 2 30 1 238 1 189 1 190 1 166 1 94 1 56 1 58 1 277 1 243 1 142 1 367 1 59 1 145 4 197 1 171 1 249 1 39 1 65 1 332 4 377 1 286 1 309 1 130 1 223 1 132 3 174 1 
94 1 237 1 357 1 332 2 81 1 145 2 130 1 137 1 132 2 
94 2 56 1 203 1 277 1 58 1 142 1 59 1 145 3 319 1 137 3 72 1 5 1 92 1 237 3 30 1 332 3 286 1 129 1 132 3 
115 1 94 1 237 2 56 1 300 1 332 2 145 2 137 2 5 1 132 2 
22 1 314 1 340 1 243 1 367 1 145 1 108 1 184 1 39 1 28 1 332 1 377 1 309 1 238 1 130 1 
22 1 314 1 179 1 340 1 243 1 346 1 145 1 184 1 39 1 28 1 332 1 377 1 309 1 238 1 130 1 
225 1 134 1 44 4 2 1 257 1 260 1 26 1 49 1 51 1 320 2 74 1 300 2 189 1 11 1 115 2 57 2 193 1 83 2 197 1 171 2 85 1 307 1 128 1 223 1 
237 1 58 1 332 1 142 1 145 1 298 1 137 1 132 1 
94 2 56 1 357 1 79 1 81 1 145 5 281 1 137 4 319 1 5 1 237 4 332 5 130 1 132 5 
99 1 237 2 58 1 332 2 145 2 298 1 137 2 132 2 
22 1 115 1 94 1 314 1 340 1 243 1 367 1 145 2 108 1 319 1 137 1 184 1 28 1 39 1 237 1 332 2 377 1 238 1 309 1 132 1 
113 1 41 1 
113 1 41 1 
375 1 156 1 
375 1 156 1 
375 1 156 1 
379 1 113 1 41 1 
113 1 41 1 246 1 
375 1 156 1 16 1 113 2 41 2 371 1 
379 1 113 1 41 1 
379 1 113 1 41 1 
93 1 113 1 41 1 
93 1 113 1 41 1 
93 1 113 1 41 1 
104 3 277 2 230 1 371 1 196 1 198 2 235 2 124 1 208 1 351 2 251 1 286 2 267 2 268 2 41 2 113 2 129 1 272 1 364 1 
104 1 192 1 277 1 194 1 145 2 246 1 117 1 231 1 137 2 198 1 185 1 235 1 237 2 351 1 251 1 332 2 286 1 151 1 268 1 41 1 113 1 130 1 273 1 132 2 
105 1 288 1 118 1 
105 1 10 1 288 1 
236 1 45 1 105 3 10 1 316 1 118 2 
236 1 45 1 105 2 10 1 118 1 153 1 
236 1 45 2 105 2 10 1 118 1 
175 3 134 1 2 1 297 1 260 1 259 1 231 1 261 2 232 1 233 1 321 1 210 2 162 1 140 2 343 1 276 1 34 1 277 5 193 1 82 1 117 1 195 1 121 1 122 3 38 1 63 4 284 1 201 2 286 5 151 1 334 1 129 2 
175 8 134 3 2 3 297 3 260 3 259 2 261 6 232 2 158 5 233 1 90 1 321 2 210 6 271 1 214 1 162 1 140 6 343 6 114 1 324 1 34 1 277 9 193 3 82 2 328 5 195 2 122 9 38 3 63 7 284 1 173 1 286 9 221 1 151 4 129 5 
175 3 134 1 2 1 297 1 260 1 259 1 261 2 232 1 321 1 210 2 140 2 114 1 34 1 276 1 277 3 193 1 82 1 195 1 122 4 38 2 63 2 201 1 286 3 151 1 129 3 334 1 
175 5 134 2 2 2 297 2 260 2 259 1 261 4 232 1 321 1 210 4 271 1 140 4 114 1 324 1 34 1 276 1 277 4 193 2 82 1 195 1 122 7 38 3 63 3 173 1 201 2 286 4 151 2 129 4 334 1 
7 1 15 1 238 1 
224 1 238 1 
244 1 
28 1 238 1 
28 1 7 2 191 1 238 3 309 1 95 1 
28 1 238 1 309 1 
238 1 182 1 
44 13 71 2 260 3 50 1 11 4 213 1 169 2 193 3 37 2 83 7 98 1 171 6 19 1 350 1 64 1 128 3 311 1 43 1 
44 13 71 2 260 3 50 1 11 6 213 1 169 2 193 3 37 2 83 7 98 1 171 6 19 3 350 1 64 1 128 3 311 1 43 1 
44 13 71 2 260 3 50 1 11 4 213 1 169 2 193 3 37 2 83 7 98 1 171 6 19 1 350 1 64 1 128 3 353 1 311 1 43 1 
225 1 176 1 134 3 44 39 155 3 297 3 2 3 71 3 260 6 359 4 265 1 49 1 50 1 51 1 320 2 11 13 213 2 169 2 193 6 37 3 83 20 98 1 171 19 19 7 350 1 282 1 64 1 308 1 285 1 352 1 128 6 311 2 43 2 223 1 381 1 
225 2 44 15 71 2 260 3 265 1 49 2 51 2 320 4 50 1 301 1 11 6 213 1 169 2 193 3 348 1 37 2 83 8 171 7 19 2 350 1 64 1 128 4 311 1 223 2 43 1 
22 1 89 1 69 1 314 1 105 2 340 1 106 2 295 1 316 1 4 1 184 1 341 1 269 1 112 1 10 1 188 1 161 1 168 1 327 1 369 1 118 1 373 1 62 2 377 1 152 1 287 1 88 1 288 1 380 1 253 1 
22 1 133 1 89 1 69 1 314 1 105 2 340 1 106 3 295 1 296 1 316 1 4 1 184 1 341 1 112 1 10 1 188 1 161 1 327 2 36 1 118 1 373 1 62 3 377 1 152 1 287 1 88 1 288 1 380 1 253 1 
22 1 89 1 69 1 314 1 105 2 340 1 106 2 295 1 296 1 316 1 4 1 184 1 341 1 10 1 188 1 161 1 327 2 36 1 118 1 62 2 377 1 152 1 287 1 253 1 288 1 
22 1 89 2 133 1 305 1 314 1 315 1 106 1 340 1 180 1 4 2 373 1 184 1 138 1 62 1 28 1 39 1 377 1 77 1 88 1 287 2 238 1 202 1 161 2 
22 1 89 1 69 1 314 1 105 2 340 1 106 1 295 1 316 1 4 1 184 1 112 1 10 1 161 1 168 1 369 1 36 1 118 1 373 1 62 1 377 1 287 1 88 1 288 1 380 1 253 1 
279 1 
175 2 177 1 1 1 340 2 47 4 136 1 3 1 184 2 232 1 233 3 8 1 238 1 13 2 12 1 343 6 55 2 305 1 241 1 58 1 142 1 347 2 59 1 145 1 195 1 61 2 148 1 22 1 203 1 314 2 315 1 25 2 259 1 261 2 360 1 263 1 28 1 30 1 211 1 162 1 165 1 34 1 277 5 35 1 81 1 82 1 122 2 330 2 38 2 172 2 39 2 332 1 286 5 377 1 129 2 132 1 
1 1 203 1 47 2 136 1 360 1 233 1 30 1 211 1 342 1 343 2 165 1 35 1 277 3 58 1 81 1 142 1 59 1 145 1 330 1 332 1 286 3 132 1 
1 1 203 1 47 3 136 1 360 1 233 1 30 1 211 1 342 1 343 1 165 1 55 1 34 1 35 1 277 3 58 1 81 1 142 1 59 1 145 1 332 1 286 3 129 1 132 1 
1 1 203 1 47 3 136 1 360 1 233 1 30 1 211 1 342 1 343 2 165 1 55 1 34 1 35 1 277 3 58 1 81 1 142 1 59 1 347 1 145 1 330 1 332 1 286 3 129 1 132 1 
175 1 177 1 1 1 47 6 136 1 232 1 233 3 13 2 342 1 343 7 55 4 58 1 142 1 347 4 59 1 145 1 61 2 354 1 203 1 25 2 259 1 261 1 360 1 263 1 205 1 362 1 30 1 211 1 162 1 165 1 275 1 34 5 277 5 35 1 81 1 82 1 330 4 38 2 172 2 332 1 286 5 129 5 335 1 132 1 
175 1 177 1 1 1 47 4 136 1 3 1 232 1 233 2 13 2 343 4 55 2 58 1 142 1 59 1 347 2 145 1 61 2 203 1 25 2 259 1 261 1 263 1 360 1 30 1 211 1 162 1 165 1 34 1 277 4 35 1 81 1 82 1 122 2 38 2 330 2 172 2 332 1 286 4 129 2 132 1 
175 1 177 1 1 1 203 1 47 4 25 2 136 1 259 1 261 1 263 1 360 1 232 1 233 2 362 1 30 1 211 1 13 2 162 1 343 4 165 1 55 2 34 1 35 1 277 4 58 1 81 1 142 1 82 1 347 2 59 1 145 1 61 2 330 2 38 2 172 2 332 1 286 4 129 1 354 1 335 1 132 1 
175 1 177 1 1 1 203 1 47 4 25 2 136 1 259 1 261 1 263 1 360 1 232 1 233 2 362 1 30 1 211 1 13 2 162 1 343 4 165 1 55 2 34 1 35 1 277 4 58 1 81 1 142 1 82 1 347 2 59 1 145 1 61 2 330 2 38 2 172 2 332 1 286 4 129 1 354 1 335 1 132 1 
175 1 177 1 0 2 1 1 203 1 47 4 136 1 259 1 261 1 360 1 232 1 233 2 30 1 211 1 322 1 162 1 343 4 165 1 365 1 55 2 34 1 35 1 277 4 58 1 81 1 142 1 82 1 347 2 59 1 145 1 122 2 61 2 330 2 172 2 332 1 286 4 129 1 355 2 354 1 289 1 132 1 
175 1 177 1 1 1 203 1 47 5 25 2 136 1 259 1 261 1 263 1 360 1 232 1 233 2 362 1 30 1 211 1 13 2 162 1 343 5 165 1 275 1 55 3 34 1 35 1 277 4 58 1 81 1 142 1 82 1 59 1 347 3 145 1 61 2 38 2 330 3 172 2 332 1 286 4 129 1 354 1 335 1 132 1 
175 1 177 1 1 1 203 1 47 5 25 2 136 1 259 1 261 1 263 1 360 1 232 1 233 2 362 1 30 1 211 1 13 2 162 1 343 5 165 1 275 1 55 3 34 1 35 1 277 4 58 1 81 1 142 1 82 1 59 1 347 3 145 1 61 2 38 2 330 3 172 2 332 1 286 4 129 1 354 1 335 1 132 1 
175 1 177 1 1 1 0 2 47 4 136 1 3 1 232 1 233 2 343 4 55 2 58 1 142 1 59 1 347 2 145 1 61 2 355 2 203 1 259 1 261 1 360 1 30 1 211 1 162 1 165 1 34 1 277 4 35 1 81 1 82 1 122 2 330 2 172 2 332 1 286 4 129 1 289 1 132 1 
225 1 44 4 15 1 169 1 193 1 71 1 260 1 37 1 83 2 197 1 171 2 49 1 74 1 320 2 51 1 50 1 64 1 11 1 128 1 189 1 130 1 223 1 
176 1 338 1 225 2 134 2 44 14 155 3 297 2 2 1 260 1 359 3 183 1 299 1 49 2 51 2 320 4 300 4 9 1 11 2 189 2 366 1 115 11 57 11 193 2 83 8 197 1 249 1 171 6 19 1 101 1 285 1 128 1 130 1 223 2 
22 1 225 1 338 1 44 2 314 1 340 1 46 1 108 1 137 1 319 1 184 1 28 1 111 1 49 1 237 1 320 2 51 1 139 1 300 1 9 1 238 1 189 1 94 1 243 1 367 1 145 2 83 1 119 1 197 1 249 1 171 1 39 1 332 2 377 1 309 1 130 1 223 1 132 1 
338 1 225 3 134 2 44 26 340 1 297 2 2 2 137 1 184 1 237 1 49 3 50 1 51 3 300 6 9 1 238 2 11 6 189 3 94 1 57 6 58 1 243 2 193 5 145 3 197 3 249 1 19 1 350 1 64 1 309 2 22 2 254 2 314 1 71 2 260 5 108 2 319 1 206 2 28 2 73 2 29 1 320 6 75 1 212 2 166 2 115 6 169 2 367 2 37 2 83 13 171 13 39 1 332 3 377 2 128 5 130 2 223 3 337 1 132 1 
22 2 225 2 338 1 44 2 314 8 340 7 315 1 255 1 317 1 137 1 184 8 28 2 237 1 49 2 74 1 51 2 320 4 269 1 238 3 189 2 94 1 305 1 36 1 245 1 145 1 370 1 83 1 197 2 249 1 171 1 39 2 20 1 149 1 332 1 377 2 378 2 290 1 223 2 132 1 
225 1 294 1 134 1 44 3 297 1 2 1 260 1 137 1 5 1 49 1 237 1 51 1 320 2 300 1 9 1 11 1 189 1 115 1 56 1 57 1 193 1 145 1 83 1 197 1 171 2 332 1 128 1 223 1 132 1 
115 1 225 1 134 1 44 2 57 1 193 1 83 2 197 1 19 1 85 1 49 1 74 1 320 2 51 1 300 1 11 1 189 1 223 1 
115 1 225 1 44 2 57 1 2 1 260 1 197 1 171 2 49 1 74 1 320 2 51 1 307 1 300 1 11 1 128 1 189 1 223 1 
115 2 225 1 134 1 44 4 57 2 193 1 2 1 297 1 260 1 83 2 197 1 171 2 19 1 49 1 74 1 320 2 51 1 300 2 128 1 11 2 189 1 223 1 
115 1 225 1 134 1 44 2 57 1 193 1 370 1 83 2 197 1 19 1 85 1 49 1 320 2 51 1 300 1 11 1 189 1 223 1 
115 1 225 1 44 2 57 1 2 1 370 1 260 1 197 1 171 2 49 1 320 2 51 1 307 1 300 1 11 1 128 1 189 1 223 1 
115 2 225 1 134 1 44 4 57 2 193 1 2 1 297 1 370 1 260 1 83 2 197 1 171 2 19 1 49 1 320 2 51 1 300 2 128 1 11 2 189 1 223 1 
115 2 225 1 134 1 44 4 57 2 193 1 2 1 297 1 260 1 83 2 197 1 171 2 19 1 49 1 320 2 51 1 300 2 128 1 11 2 189 1 223 1 
22 1 338 1 225 1 44 2 314 1 340 1 108 1 184 1 28 1 49 1 320 2 51 1 238 1 189 1 166 1 243 1 367 1 145 1 83 1 197 1 249 1 171 1 39 1 332 1 377 1 309 1 130 1 223 1 
22 1 338 1 225 1 44 2 179 1 314 1 340 1 184 1 207 1 28 1 49 1 320 2 51 1 238 1 189 1 243 1 346 1 145 1 83 1 197 1 249 1 171 1 39 1 332 1 377 1 309 1 130 1 223 1 
115 2 225 1 134 1 44 4 57 2 193 1 2 1 297 1 260 1 83 2 197 1 171 2 19 1 49 1 320 2 51 1 300 2 9 1 128 1 11 2 189 1 223 1 
22 1 225 1 134 1 44 4 314 1 340 1 2 1 297 1 260 1 108 1 184 1 206 1 28 1 49 1 320 2 51 1 300 2 269 1 238 1 11 2 189 1 115 2 166 1 57 2 193 1 243 1 367 1 145 1 83 2 197 1 171 2 19 1 332 1 377 1 309 1 128 1 223 1 
225 1 134 1 44 3 2 1 256 1 297 1 260 1 137 1 5 1 49 1 237 1 51 1 320 2 300 1 9 1 11 1 189 1 115 1 56 1 57 1 193 1 145 1 83 2 197 1 171 1 19 1 332 1 223 1 132 1 
176 1 225 2 134 3 44 19 155 1 297 3 2 3 107 1 260 3 48 2 359 2 49 2 51 2 320 4 31 1 11 6 14 1 325 1 193 3 217 2 348 1 83 9 84 1 171 10 19 3 200 1 87 1 285 1 128 3 223 2 
225 3 176 2 356 1 292 1 134 3 44 26 155 2 297 3 2 2 107 2 260 2 48 4 359 2 265 2 49 3 51 3 320 6 31 1 11 4 14 1 325 1 193 3 217 1 348 1 83 14 349 1 171 12 199 1 19 2 87 2 128 2 42 1 223 3 103 1 
292 1 356 1 176 3 225 3 134 4 44 40 155 3 297 4 2 4 71 1 229 1 107 2 260 5 48 4 359 4 265 1 49 3 50 1 51 3 320 6 31 1 11 8 14 1 169 1 325 1 193 5 217 1 37 1 348 1 349 1 83 19 84 1 171 21 199 1 19 4 64 1 87 1 285 1 128 4 42 1 223 3 103 1 
292 1 356 1 176 3 225 4 134 4 44 37 155 3 297 4 2 3 71 1 229 1 107 2 260 4 48 4 359 4 265 2 49 4 50 1 51 4 320 8 31 1 11 7 14 1 169 1 325 1 193 5 217 1 37 1 348 1 349 1 83 19 84 1 171 18 199 1 19 3 64 1 87 1 285 1 128 4 42 1 223 4 103 1 
292 1 356 1 176 2 225 2 134 7 44 51 155 4 297 7 2 7 71 1 107 1 260 8 48 4 359 4 265 1 299 2 49 2 50 1 51 2 320 4 31 1 11 14 14 1 169 1 325 1 193 8 217 1 37 1 348 1 349 1 83 26 171 25 199 1 19 7 64 1 87 1 285 2 128 7 42 1 223 2 103 1 
235 1 124 1 351 1 268 1 113 1 41 1 371 1 262 1 272 1 198 1 
246 1 273 1 
235 1 226 1 351 1 204 1 268 1 113 1 41 1 274 1 198 1 
104 2 277 1 371 1 196 1 198 1 235 1 124 1 208 1 351 1 251 1 286 1 267 1 268 1 41 1 113 1 129 1 272 1 364 1 
104 2 277 1 371 1 196 1 198 1 235 1 124 1 208 1 351 1 251 1 286 1 267 1 268 1 41 1 113 1 129 1 272 1 364 1 
104 2 277 1 371 1 196 1 198 1 235 1 124 1 208 1 351 1 251 1 286 1 267 1 268 1 41 1 113 1 129 1 272 1 364 1 
16 1 379 1 157 1 
16 1 379 1 157 1 
93 1 86 1 
93 1 86 1 16 1 
185 1 192 1 
104 1 231 1 137 2 235 1 185 1 237 2 267 1 268 1 113 1 273 1 277 1 192 1 194 1 145 2 117 1 246 1 196 1 198 1 63 1 351 1 332 2 286 1 126 1 151 1 41 1 130 1 132 2 
379 1 157 1 
93 1 86 1 16 1 
22 1 225 1 338 1 44 2 314 2 340 2 184 2 28 1 266 1 49 1 320 2 51 1 209 1 187 1 9 1 238 1 189 1 145 2 83 1 197 1 331 1 249 1 171 1 20 1 332 2 377 1 378 2 252 1 290 1 223 1 132 2 
22 1 23 1 215 1 69 1 105 2 314 2 340 2 295 1 316 1 36 1 118 1 184 2 377 1 150 1 10 1 269 1 161 1 288 1 380 1 
22 1 227 1 215 1 69 1 105 2 314 1 340 1 295 1 316 1 36 1 118 1 184 1 377 1 10 1 161 1 288 1 380 1 
22 1 314 1 305 1 340 1 116 1 315 1 180 1 184 1 28 1 39 1 377 1 150 1 238 1 161 1 
22 1 23 1 215 1 69 1 105 2 314 1 340 1 295 1 316 1 36 1 118 1 184 1 377 1 150 1 10 1 161 1 288 1 380 1 
291 1 
175 1 15 1 34 1 216 1 129 1 363 1 261 1 
175 1 25 1 259 1 261 1 263 1 232 1 233 1 162 1 13 1 343 1 34 1 277 1 82 1 122 1 38 1 286 1 129 2 
175 9 224 3 134 2 228 1 340 3 297 2 2 2 182 2 184 3 232 4 233 3 91 1 7 2 238 10 304 2 52 2 240 2 343 5 140 6 344 1 193 2 95 1 195 2 248 1 148 1 309 3 22 3 203 2 314 3 70 1 259 4 260 2 261 8 28 3 73 2 210 6 269 1 363 1 162 4 216 1 34 2 277 5 280 2 82 4 122 12 38 6 39 1 283 2 376 2 377 4 286 5 222 2 129 8 131 2 
175 8 176 1 356 1 292 1 134 2 155 1 297 2 2 2 259 2 260 2 359 1 261 5 232 2 233 1 210 5 304 1 162 2 52 2 343 1 140 5 34 2 277 1 193 2 82 2 195 1 349 1 122 6 38 3 148 1 286 1 310 1 129 5 42 1 312 1 103 1 
175 2 71 1 259 1 260 1 181 1 261 2 137 1 5 1 232 1 362 1 237 1 304 1 162 1 190 1 52 2 54 1 58 1 277 1 169 1 193 2 82 1 145 1 37 1 99 1 350 1 332 1 286 1 132 1 
175 1 216 1 34 1 82 1 259 1 261 1 232 1 363 1 162 1 129 1 
175 5 134 2 193 2 297 2 2 2 260 2 261 5 122 10 38 5 73 1 210 5 304 1 129 5 52 2 140 5 
233 1 34 1 277 1 286 1 129 1 343 1 
22 1 175 2 314 4 340 4 315 1 70 1 259 2 261 2 184 4 232 2 233 2 28 1 8 1 76 1 238 1 239 1 12 1 162 1 343 4 114 1 305 1 277 3 82 2 195 2 248 2 39 2 148 2 377 1 286 3 
22 1 225 1 44 1 314 1 340 1 108 1 137 2 184 1 5 2 28 1 49 1 237 2 51 1 320 2 238 1 189 1 190 1 166 1 243 1 367 1 145 3 197 1 171 1 249 1 39 1 332 3 377 1 309 1 130 1 223 1 132 2 174 1 
175 1 34 2 82 1 259 1 195 1 261 2 122 4 38 2 232 1 148 1 210 2 162 1 129 4 43 1 140 2 
268 1 258 1 198 1 
154 1 124 1 192 1 268 1 198 1 
268 1 258 1 198 1 
268 1 258 1 198 1 
268 1 146 1 198 1 
268 1 146 1 198 1 
268 1 146 1 198 1 
268 1 198 1 
113 1 41 1 
225 2 44 16 71 2 260 3 265 1 49 2 50 1 51 2 320 4 11 6 169 2 193 3 37 2 83 8 171 8 19 3 350 1 64 1 128 3 223 2 
44 4 15 1 169 1 193 1 71 1 37 1 260 1 83 2 171 2 50 1 64 1 128 1 11 1 
225 1 134 1 44 4 193 1 2 1 297 1 260 1 96 1 83 2 171 2 19 1 49 1 320 2 51 1 128 1 11 2 223 1 
176 1 134 1 44 7 155 1 193 1 2 1 297 1 260 1 83 3 359 2 171 4 19 1 285 1 128 1 11 2 
225 1 134 2 44 24 155 2 2 2 297 2 71 2 260 5 359 2 265 1 299 1 49 1 50 1 320 2 51 1 11 6 366 1 169 2 193 5 37 2 83 12 171 12 19 2 350 1 64 1 285 1 128 4 223 1 
171 1 44 1 359 1 
44 1 155 1 83 1 
225 1 134 1 44 6 193 1 297 1 2 1 96 1 260 1 83 3 171 3 19 1 73 1 49 1 51 1 320 2 11 3 128 2 223 1 
176 1 356 1 225 1 292 1 134 2 44 12 155 1 297 2 2 2 260 2 359 1 49 1 51 1 320 2 11 2 193 2 348 1 83 6 349 1 171 6 19 1 128 1 42 1 223 1 103 1 
44 6 169 1 193 1 71 1 260 1 37 1 83 3 171 3 19 1 128 1 11 2 
225 1 44 3 71 1 37 1 83 1 265 1 171 2 19 1 49 1 50 1 320 2 51 1 64 1 302 1 11 2 128 1 223 1 
225 1 44 10 169 1 193 2 71 2 348 1 37 2 260 2 83 5 171 5 19 2 350 1 49 1 51 1 320 2 128 3 11 5 223 1 
19 1 225 1 134 1 44 2 49 1 51 1 320 2 193 1 11 1 348 1 83 2 223 1 
225 1 134 1 44 4 193 1 2 1 297 1 260 1 348 1 83 2 171 2 19 1 49 1 320 2 51 1 128 1 11 2 223 1 
225 3 44 3 71 1 348 1 37 1 83 1 265 1 84 1 171 2 19 1 49 3 320 6 51 3 302 1 128 1 11 2 223 3 
176 1 225 4 134 2 44 30 155 3 297 2 2 2 71 2 260 5 359 3 265 1 49 4 50 1 51 4 320 8 11 8 169 2 193 5 37 2 96 1 348 1 83 15 171 15 84 1 19 4 350 1 282 1 64 1 308 1 352 1 128 4 223 4 
176 1 356 1 225 1 44 14 155 1 71 2 260 3 359 1 49 1 51 1 320 2 50 1 11 4 169 2 193 3 348 1 37 2 83 7 171 7 19 1 350 1 64 1 128 3 223 1 
176 1 356 1 225 2 134 1 44 17 155 1 297 1 71 2 260 3 359 2 49 2 50 1 51 2 320 4 11 5 169 2 193 4 37 2 348 1 96 1 83 9 171 8 19 2 350 1 64 1 285 1 128 3 223 2 
176 1 356 1 225 3 292 1 134 2 44 25 155 1 297 2 2 2 71 2 260 5 359 1 265 1 49 3 50 1 51 3 320 6 11 6 169 2 193 5 37 2 96 1 348 1 83 12 349 1 171 13 19 2 350 1 64 1 128 4 42 1 223 3 103 1 
176 1 356 1 225 3 292 1 134 2 44 23 155 1 297 2 2 1 71 2 260 4 359 1 265 1 49 3 50 1 51 3 320 6 11 8 169 2 193 5 37 2 96 1 348 1 83 13 349 1 171 10 19 4 350 1 64 1 128 4 42 1 223 3 103 1 
176 1 356 1 225 1 44 14 155 1 71 2 260 3 359 1 49 1 51 1 320 2 50 1 11 4 169 2 193 3 348 1 37 2 83 7 171 7 19 1 350 1 64 1 128 3 223 1 
176 1 356 1 225 1 292 1 134 2 44 12 155 1 297 2 2 2 260 2 359 1 49 1 51 1 320 2 11 2 193 2 348 1 83 6 349 1 171 6 19 1 128 1 42 1 223 1 103 1 
176 1 356 1 225 4 292 1 134 2 44 24 155 1 297 2 2 1 71 2 260 4 359 1 265 2 49 4 50 1 51 4 320 8 11 6 169 2 193 5 37 2 96 1 348 1 83 13 349 1 171 11 19 2 350 1 64 1 128 4 42 1 223 4 103 1 
176 1 356 1 225 4 292 1 134 3 44 16 155 1 297 3 2 2 260 2 359 1 265 2 49 4 51 4 320 8 11 6 193 3 348 1 83 9 349 1 171 7 84 1 19 3 128 3 42 1 223 4 103 1 
44 7 169 1 193 1 71 3 260 1 37 3 83 3 171 4 19 3 50 2 64 1 128 3 11 6 
176 1 356 1 225 4 292 1 134 2 44 24 155 1 297 2 2 1 71 2 260 4 359 1 265 2 49 4 50 1 51 4 320 8 11 6 169 2 193 5 37 2 348 1 83 13 349 1 171 11 84 1 19 2 350 1 64 1 128 4 42 1 223 4 103 1 
160 1 357 1 332 1 81 1 145 1 130 1 132 1 
33 1 357 1 81 1 143 1 326 1 145 1 17 1 147 1 160 1 332 1 130 1 132 1 
22 1 28 1 39 1 15 1 305 1 314 1 315 1 340 1 377 1 238 1 184 1 
22 1 94 1 314 1 340 1 243 1 145 2 108 1 137 1 184 1 28 1 39 1 237 1 332 2 377 1 238 1 309 1 130 1 132 1 
22 1 94 1 314 1 58 1 340 1 142 1 243 1 145 2 108 1 182 1 137 1 184 1 248 1 28 2 237 2 30 1 332 2 377 1 238 3 309 2 130 1 131 1 132 2 
22 1 94 1 314 2 179 1 58 1 340 2 142 1 243 1 145 2 182 1 137 1 184 2 248 1 28 2 237 2 30 1 332 2 377 1 303 1 238 3 309 2 130 1 131 1 132 2 
224 1 22 1 203 1 34 1 314 3 277 2 340 3 170 1 182 1 184 3 248 1 374 1 39 1 28 1 7 1 377 1 286 2 303 1 309 1 238 4 129 1 131 1 343 1 
224 1 22 1 203 1 34 1 314 3 277 2 340 3 182 1 184 3 248 1 39 1 28 1 7 1 377 1 286 2 303 1 309 1 238 4 222 1 129 1 131 1 343 1 
22 1 314 1 340 1 377 1 255 1 184 1 
22 2 314 7 80 1 340 6 255 1 278 1 36 1 245 1 95 1 317 1 184 7 39 2 28 2 20 1 149 1 66 1 377 3 378 1 269 1 309 1 238 3 
225 2 44 12 340 1 137 1 184 1 237 1 49 2 51 2 50 1 9 1 238 1 189 2 11 4 94 1 58 1 243 1 193 3 145 2 197 2 19 1 350 1 64 1 309 1 22 1 254 1 314 1 71 2 260 3 108 1 206 1 28 1 266 1 29 1 320 4 269 1 166 1 169 2 367 1 37 2 83 6 171 6 332 2 377 1 128 3 130 2 223 2 132 1 
175 1 224 1 203 1 314 1 340 1 70 1 259 2 261 1 184 1 232 2 233 1 7 1 238 2 363 1 162 2 240 1 343 2 34 1 216 1 277 3 82 2 63 1 39 1 283 1 376 1 286 3 222 1 129 1 
22 1 344 1 314 2 340 2 255 1 95 1 184 2 28 1 7 1 377 2 269 1 309 1 238 2 
22 1 314 4 305 1 340 4 315 1 219 1 184 4 39 1 28 1 377 1 303 1 269 1 238 1 
22 1 314 2 340 2 278 1 306 1 184 2 248 1 361 1 28 1 66 1 377 2 309 1 238 1 163 1 
22 1 39 1 69 1 105 1 314 1 340 1 377 1 10 1 288 1 184 1 
22 1 314 2 340 2 36 1 184 2 28 1 20 1 209 1 377 1 269 1 238 1 
22 2 305 1 314 5 315 1 340 4 245 1 317 1 219 1 184 5 248 1 39 1 28 2 20 1 377 2 269 1 238 3 
22 2 305 1 314 5 315 1 340 4 317 1 120 1 219 1 184 5 248 1 39 1 28 2 20 1 377 2 269 1 238 3 
22 1 94 1 314 1 179 1 340 1 243 1 145 2 137 1 184 1 28 1 39 1 237 1 332 2 377 1 238 1 309 1 130 1 132 1 
22 1 314 1 80 1 340 1 278 1 95 1 184 1 248 1 28 1 66 1 377 2 309 1 238 1 
234 1 110 1 187 1 329 1 
234 1 125 1 270 1 
110 1 234 2 187 1 329 1 
110 1 234 2 63 1 125 1 187 1 277 1 286 1 270 1 123 1 329 1 
15 1 152 1 188 1 341 1 
62 1 106 1 152 1 88 1 188 1 373 1 341 1 
89 1 106 1 287 1 
168 1 141 1 313 1 242 1 106 3 247 2 373 1 341 1 62 3 88 1 152 1 188 1 
62 2 106 2 152 1 327 1 88 1 188 1 323 1 373 1 341 1 
168 1 293 1 105 1 106 1 144 1 118 1 373 1 62 1 88 1 188 1 288 1 
62 1 168 1 106 1 88 1 188 1 373 1 341 1 
62 1 168 1 106 1 152 1 88 1 373 1 341 2 
62 2 167 1 168 1 186 1 250 1 106 2 88 2 188 1 373 2 341 1 
168 1 106 3 144 1 327 2 27 1 97 1 318 1 373 1 341 1 62 3 152 1 88 1 188 2 
168 1 105 2 106 2 327 1 316 1 118 1 373 1 341 1 62 2 100 1 152 1 10 1 88 1 188 1 288 1 
168 1 106 4 144 1 327 2 318 1 373 2 341 1 62 4 220 1 152 1 88 2 188 2 323 1 
62 1 168 1 106 1 152 1 88 1 188 1 373 1 341 1 
313 1 141 1 106 4 144 1 327 2 247 1 358 1 318 1 373 1 341 2 62 4 152 2 88 1 188 3 
168 1 106 2 327 1 60 1 373 1 341 1 62 2 333 1 88 1 152 1 188 1 67 1 
141 1 168 1 313 2 106 3 247 2 373 1 341 1 62 3 88 1 152 1 188 1 21 1 
68 1 368 1 188 2 218 2 
62 1 168 1 106 1 88 1 53 1 373 1 
62 2 168 1 106 2 152 1 327 1 88 1 188 1 97 1 373 1 341 1 
24 1 
62 1 168 1 106 1 152 1 88 1 188 1 373 1 341 1 
168 1 106 3 327 1 247 1 97 1 373 1 341 1 62 3 88 1 152 1 188 1 
144 1 188 1 358 1 318 1 
188 1 341 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 26 (110,137) (110,137) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 26 (110,137) (110,137) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 26 (110,137) (110,137) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 26 (110,137) (110,137) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 26 (119,321) (119,321) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 290 (118,132) 55 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 290 46 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 290 (118,132) 55 4 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 73 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (256,282) (158,253) (158,253) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (34,139,157) (21,242) (21,242) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (34,139,157) (21,242) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 290 46 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 207 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 290 (118,132) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 73 19 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 290 (118,132) (118,132) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (256,282) (256,282) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (34,139,157) (34,139,157) (34,139,157) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (34,139,157) (34,139,157) (34,139,157) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (34,139,157) (34,139,157) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 290 (118,132) 55 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 234 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
323 1 58 1 
110 1 323 1 137 1 26 1 
110 1 323 1 137 1 26 1 
110 1 323 1 137 1 26 1 
110 1 323 1 137 1 26 1 
182 1 323 1 
119 1 321 1 91 1 323 1 26 1 219 1 
148 1 323 1 
148 1 323 1 
312 1 202 1 232 1 287 1 209 1 170 1 35 1 194 1 59 1 329 1 176 1 154 1 114 1 245 1 
144 1 
144 1 108 1 287 2 170 1 149 1 150 1 245 2 220 1 
164 1 144 1 99 1 251 2 288 1 287 5 170 2 192 2 124 1 149 1 195 1 150 2 326 1 62 1 44 1 277 1 337 2 245 5 220 1 
144 1 234 1 149 1 
144 1 66 1 262 2 
312 2 202 2 154 2 232 2 209 2 194 2 263 1 59 1 
312 1 202 1 6 1 232 1 55 1 209 1 290 1 194 1 328 2 59 1 154 1 16 1 132 1 92 1 278 1 
312 1 329 1 202 1 154 1 232 1 209 1 114 1 35 1 194 1 59 1 
312 1 50 1 144 1 232 1 287 1 149 1 294 1 194 1 291 1 14 1 302 1 114 1 22 1 245 1 
312 1 50 1 202 1 144 1 232 1 287 2 209 1 149 1 194 1 291 1 154 1 302 1 114 1 22 1 245 2 
287 1 170 1 211 1 150 1 245 1 
144 1 287 2 170 1 149 1 24 1 150 1 245 2 220 1 
287 1 150 1 245 1 
312 2 202 1 223 1 320 1 232 2 209 1 194 2 154 1 263 2 
105 1 212 1 11 1 
46 1 290 1 92 1 328 1 
234 1 263 1 
312 1 273 1 154 1 232 1 80 1 209 1 290 1 92 1 194 1 328 1 
312 5 202 1 223 1 286 1 232 5 209 4 194 5 273 1 14 1 154 4 80 2 263 1 68 1 138 1 
312 2 154 2 265 1 232 2 209 2 114 1 35 1 194 2 
312 3 202 1 154 3 232 3 80 1 209 3 194 3 263 1 
312 1 154 1 232 1 209 1 114 1 35 1 194 1 
312 1 202 1 154 1 223 1 320 1 232 1 209 1 114 1 194 1 
312 3 50 1 202 2 223 1 4 1 232 3 55 1 287 1 209 3 290 1 291 1 194 3 328 1 59 1 10 1 273 1 154 3 302 1 132 1 80 1 22 1 114 1 92 1 245 1 
312 2 14 1 154 1 232 2 80 1 209 1 194 2 263 1 138 1 
312 3 50 1 202 1 223 1 144 1 227 1 232 3 287 1 209 3 194 3 291 1 10 1 273 1 154 3 302 1 80 2 22 1 114 1 245 1 
312 2 202 1 223 1 232 2 209 2 212 1 194 2 154 2 105 1 80 1 
290 1 92 1 328 1 
73 1 92 1 328 1 
0 1 162 2 53 2 84 1 252 1 212 2 173 1 126 4 11 2 13 1 295 2 131 1 225 1 266 1 229 1 102 1 39 1 105 2 155 1 333 1 241 1 160 1 47 1 199 1 
312 1 154 1 265 1 302 1 232 1 209 1 114 1 194 1 
128 1 8 1 81 1 
75 1 249 1 45 1 8 2 81 2 324 1 
8 1 81 1 
8 1 81 1 
249 1 324 1 
249 1 324 1 
249 1 324 1 
111 1 8 1 81 1 
111 1 8 1 81 1 
111 1 8 1 81 1 
304 1 8 1 81 1 
304 1 8 1 81 1 
304 1 8 1 81 1 
201 1 169 1 209 2 287 1 8 1 128 1 89 1 298 1 218 1 263 1 312 2 232 2 194 2 236 1 196 1 154 2 239 1 159 1 240 1 336 1 81 1 198 1 115 1 245 1 
201 2 2 1 71 1 144 1 268 2 169 2 287 2 122 1 8 2 236 3 275 1 239 2 89 1 45 1 179 1 218 2 81 2 245 2 339 1 
52 2 72 1 338 1 91 2 219 1 
181 1 91 1 338 1 
181 1 91 1 219 1 
52 1 72 1 319 1 338 2 91 3 219 1 
296 1 52 1 72 1 338 1 91 2 219 1 
281 1 0 1 283 1 251 1 288 2 287 5 170 4 13 1 175 1 298 1 66 1 262 3 25 2 220 1 145 1 144 2 31 1 192 1 149 1 325 2 150 1 327 1 326 3 104 2 333 1 159 1 277 1 160 1 113 1 337 1 198 1 245 5 
0 3 283 1 251 2 288 6 287 9 170 7 211 5 13 3 175 3 298 4 66 3 262 9 23 5 220 1 311 1 28 1 144 5 317 1 99 1 31 2 192 2 149 1 235 1 325 6 150 6 327 2 326 8 153 1 104 6 333 3 277 1 160 3 337 2 49 1 245 9 
0 1 251 1 287 3 288 2 170 2 175 1 13 1 298 1 66 2 262 4 25 1 144 3 145 1 99 1 31 1 192 1 149 1 325 2 327 1 326 3 104 2 333 1 160 1 113 1 337 1 245 3 
0 2 251 1 287 4 288 4 170 3 175 2 13 2 298 2 66 3 262 7 25 2 28 1 144 4 145 1 99 1 31 1 192 1 149 1 235 1 325 4 327 1 326 5 153 1 104 4 333 2 160 2 337 1 113 1 245 4 
247 1 
141 1 217 1 234 1 
70 1 217 1 
217 1 48 1 60 1 
217 1 7 1 
217 1 48 1 
141 2 167 1 217 3 48 1 125 1 60 1 
162 4 313 1 266 2 318 2 30 1 123 1 100 1 126 7 151 1 295 3 13 1 331 1 130 1 333 1 261 1 136 1 47 3 95 1 
0 3 162 16 204 1 53 2 5 1 289 1 123 1 126 31 295 15 175 3 13 4 130 1 216 1 131 1 261 1 136 5 94 1 95 2 313 2 225 1 228 4 266 5 229 1 267 3 318 3 30 2 100 1 38 1 331 2 333 4 241 1 160 3 47 10 161 1 
162 5 204 1 53 4 120 1 126 9 13 1 295 4 130 1 131 2 261 1 136 1 95 1 313 1 225 2 266 3 229 2 318 2 30 1 100 1 332 1 331 1 333 1 241 2 47 4 
162 4 313 1 266 2 318 2 30 1 123 1 100 1 126 7 295 3 13 1 331 1 130 1 333 1 261 1 136 1 47 3 95 1 
162 4 313 1 266 2 318 2 30 1 123 1 100 1 126 7 295 3 13 1 331 1 130 1 333 1 261 1 136 1 47 3 95 1 
200 2 203 2 143 1 32 2 253 1 210 1 270 2 256 1 9 1 77 1 328 1 299 1 158 1 92 1 67 1 
64 1 32 1 323 1 328 1 
32 1 322 1 323 1 328 1 
200 1 203 1 143 1 186 1 85 1 32 1 34 1 270 1 9 1 77 1 328 1 299 2 64 1 21 1 242 1 307 1 67 2 
200 1 203 1 299 1 186 1 64 1 32 1 34 1 21 1 270 1 307 1 67 1 328 1 
41 1 
163 1 83 2 251 1 14 1 15 2 22 1 92 2 262 2 27 4 187 1 33 1 191 2 192 1 194 1 40 2 106 1 277 1 114 1 116 1 50 1 205 1 288 2 287 5 292 1 294 1 291 1 57 2 302 1 305 2 135 1 308 1 66 2 309 1 220 3 312 1 222 2 144 2 231 1 232 1 149 1 150 6 237 1 326 2 328 2 327 1 337 1 245 5 
50 1 287 3 294 1 291 1 14 1 302 1 22 1 308 1 309 1 220 1 312 1 27 2 232 1 191 1 194 1 237 1 150 2 106 1 108 1 114 1 116 1 245 3 
50 1 287 3 294 1 291 1 14 1 302 1 22 1 308 1 309 1 220 1 312 1 27 3 222 1 144 1 232 1 194 1 149 1 150 1 237 1 106 1 108 1 114 1 116 1 245 3 
50 1 287 3 294 1 291 1 14 1 302 1 22 1 308 1 309 1 220 1 312 1 27 3 222 1 144 1 232 1 191 1 194 1 149 1 237 1 150 2 40 1 106 1 108 1 114 1 116 1 245 3 
50 1 83 2 251 1 288 1 287 5 254 1 294 1 291 1 57 2 15 2 14 1 302 1 305 2 306 1 135 1 22 1 66 2 308 1 309 1 220 3 312 1 27 6 140 1 222 4 144 5 232 1 33 1 192 1 191 4 36 1 149 5 194 1 150 7 237 1 326 1 40 4 272 1 106 1 108 1 277 1 337 1 114 1 116 1 245 5 
83 2 251 1 14 1 15 2 22 1 262 2 27 4 33 1 192 1 191 2 194 1 40 2 106 1 277 1 114 1 116 1 50 1 287 4 288 1 291 1 294 1 292 1 57 2 302 1 305 2 135 1 308 1 66 2 309 1 220 2 312 1 222 2 144 2 232 1 149 1 237 1 150 4 326 1 337 1 245 4 
50 1 83 2 251 1 288 1 287 4 254 1 294 1 291 1 57 2 15 2 14 1 302 1 305 2 306 1 135 1 22 1 66 2 308 1 309 1 220 2 312 1 27 4 222 2 144 1 232 1 33 1 191 2 192 1 149 1 194 1 150 4 237 1 40 2 326 1 272 1 106 1 277 1 337 1 114 1 116 1 245 4 
50 1 83 2 251 1 288 1 287 4 254 1 294 1 291 1 57 2 15 2 14 1 302 1 305 2 306 1 135 1 22 1 66 2 308 1 309 1 220 2 312 1 27 4 222 2 144 1 232 1 33 1 191 2 192 1 149 1 194 1 150 4 237 1 40 2 326 1 272 1 106 1 277 1 337 1 114 1 116 1 245 4 
50 1 83 2 168 1 251 1 288 1 287 4 254 1 294 1 291 1 213 1 15 2 14 1 302 1 22 1 262 2 308 1 309 1 220 2 312 1 27 4 222 2 314 1 144 1 232 1 33 1 191 2 192 1 149 1 194 1 150 4 237 1 40 2 326 1 330 2 106 1 42 2 277 1 337 1 114 1 116 1 245 4 
50 1 83 2 251 1 288 1 287 4 254 1 294 1 291 1 57 2 15 2 14 1 302 1 305 2 306 1 135 1 22 1 66 2 308 1 309 1 220 2 312 1 27 5 222 3 144 1 232 1 33 1 192 1 191 3 149 1 194 1 36 1 237 1 150 5 326 1 40 3 272 1 106 1 277 1 337 1 114 1 116 1 245 4 
50 1 83 2 251 1 288 1 287 4 254 1 294 1 291 1 57 2 15 2 14 1 302 1 305 2 306 1 135 1 22 1 66 2 308 1 309 1 220 2 312 1 27 5 222 3 144 1 232 1 33 1 192 1 191 3 149 1 194 1 36 1 237 1 150 5 326 1 40 3 272 1 106 1 277 1 337 1 114 1 116 1 245 4 
50 1 83 2 168 1 251 1 288 1 287 4 292 1 294 1 291 1 15 2 14 1 302 1 22 1 262 2 308 1 309 1 220 2 312 1 27 4 222 2 144 1 232 1 33 1 191 2 192 1 149 1 194 1 150 4 237 1 40 2 326 1 330 2 106 1 42 2 277 1 337 1 114 1 116 1 245 4 
162 1 53 4 84 2 121 1 250 1 209 1 173 1 126 2 295 1 16 1 215 1 131 2 134 1 92 2 312 1 225 2 229 2 232 1 322 1 194 1 102 2 328 4 154 1 109 1 241 2 80 1 
0 1 202 1 162 1 53 2 84 1 209 1 212 1 126 3 11 1 175 1 13 1 295 2 297 1 131 1 312 1 223 1 225 1 266 1 229 1 232 1 189 1 194 1 102 1 105 1 154 1 333 1 241 1 160 1 47 1 
162 3 225 1 53 2 266 2 84 1 318 1 229 1 30 1 234 1 100 1 212 1 173 1 102 1 126 6 11 1 295 3 13 1 105 1 331 1 130 1 333 1 131 1 241 1 261 1 47 2 263 2 
0 2 162 8 53 4 84 2 5 1 121 1 289 1 212 4 126 14 127 1 11 11 295 6 175 2 13 2 131 2 136 1 263 1 142 1 225 2 266 1 228 3 229 2 267 3 74 1 233 1 189 1 102 1 105 11 109 1 333 1 241 2 160 1 47 2 
162 1 53 2 84 1 248 1 121 1 209 1 290 1 212 1 126 2 295 1 177 1 131 1 92 1 312 1 225 1 229 1 232 1 189 1 269 1 194 1 102 1 328 1 273 1 154 1 109 1 80 1 241 1 46 1 
312 1 53 2 225 1 84 1 229 1 121 1 232 1 207 1 209 1 189 1 194 1 102 1 126 1 328 1 273 1 295 1 154 1 131 1 241 1 80 1 92 1 
0 1 162 2 225 1 53 2 84 1 229 1 252 1 212 1 173 1 102 1 126 2 11 1 13 1 105 1 131 1 241 1 47 1 136 1 
225 1 53 2 266 1 84 1 229 1 212 1 173 1 102 1 126 2 11 1 295 2 105 1 333 1 131 1 241 1 160 1 47 1 199 1 
0 1 162 2 53 2 84 1 212 2 173 1 126 4 11 2 13 1 175 1 295 2 131 1 136 1 225 1 266 1 229 1 102 1 105 2 333 1 241 1 160 1 47 2 
0 1 162 2 225 1 53 2 84 1 229 1 250 1 252 1 212 1 102 1 126 2 11 1 13 1 105 1 131 1 241 1 47 1 136 1 
225 1 53 2 266 1 84 1 229 1 250 1 212 1 102 1 126 2 11 1 295 2 105 1 333 1 131 1 241 1 160 1 47 1 199 1 
0 1 162 2 53 2 84 1 250 1 212 2 126 4 11 2 13 1 175 1 295 2 131 1 136 1 225 1 266 1 229 1 102 1 105 2 333 1 241 1 160 1 47 2 
0 1 162 2 53 2 84 1 212 2 126 4 11 2 13 1 175 1 295 2 131 1 136 1 225 1 266 1 229 1 102 1 105 2 333 1 241 1 160 1 47 2 
132 1 290 1 92 1 328 1 
73 1 19 1 92 1 328 1 
0 1 162 2 53 2 84 1 212 2 126 4 11 2 13 1 175 1 295 2 131 1 136 1 225 1 266 1 229 1 189 1 102 1 105 2 333 1 241 1 160 1 47 2 
118 1 132 1 322 1 290 1 328 1 
0 1 202 1 162 2 53 2 84 1 209 1 212 1 126 3 11 1 295 1 175 1 13 1 131 1 136 1 93 1 312 1 223 1 225 1 229 1 232 1 189 1 194 1 102 1 154 1 105 1 333 1 241 1 160 1 47 1 
0 3 162 9 53 4 285 1 5 1 171 1 87 1 289 1 88 2 126 19 295 10 175 3 13 3 18 1 90 1 260 1 131 2 136 3 225 2 266 3 228 2 229 2 267 1 101 2 274 1 332 1 333 3 241 2 160 3 47 6 
0 3 162 14 204 2 53 6 285 2 171 1 289 2 88 1 126 26 61 1 295 12 12 1 175 3 13 3 129 1 301 1 90 1 63 1 260 2 131 3 136 2 225 3 266 2 228 2 229 3 267 2 101 4 103 1 274 1 332 1 333 2 241 3 160 2 47 4 
0 4 162 20 5 1 171 1 88 1 13 5 175 4 12 1 90 1 18 1 260 2 261 1 266 4 267 3 30 1 100 1 101 4 103 1 274 1 47 8 204 1 53 6 285 1 289 3 126 41 61 1 295 21 129 1 130 1 301 1 63 1 131 3 136 4 225 3 228 4 226 1 229 3 318 1 332 1 331 1 333 5 241 3 160 4 
0 4 162 20 204 2 53 8 285 1 5 1 171 1 289 3 88 1 126 38 61 1 12 1 295 18 175 4 13 5 130 1 129 1 18 1 301 1 90 1 63 1 260 2 131 4 261 1 136 3 225 4 226 1 266 4 228 4 318 1 229 4 267 3 30 1 100 1 101 4 103 1 274 1 331 1 332 1 333 4 241 4 160 3 47 7 
0 7 162 27 204 1 53 4 285 1 5 2 171 1 289 2 88 1 126 52 127 2 61 1 12 1 295 25 175 7 13 8 130 1 129 1 301 1 90 1 63 1 260 1 131 2 261 1 136 7 225 2 266 7 228 4 318 1 229 2 267 4 30 1 100 1 101 4 103 1 274 1 331 1 332 1 333 8 241 2 160 7 47 14 
201 1 275 1 183 1 239 1 169 1 45 1 122 1 218 1 8 1 81 1 
128 1 240 1 
78 1 51 1 201 1 239 1 169 1 112 1 218 1 8 1 81 1 
206 1 111 1 
3 1 75 1 304 1 
201 1 71 1 144 1 268 1 169 1 287 1 122 1 8 1 236 2 275 1 89 1 239 1 45 1 179 1 218 1 81 1 245 1 339 1 
201 1 71 1 144 1 268 1 169 1 287 1 122 1 8 1 236 2 275 1 89 1 239 1 45 1 179 1 218 1 81 1 245 1 339 1 
201 1 71 1 144 1 268 1 169 1 287 1 122 1 8 1 236 2 275 1 89 1 239 1 45 1 179 1 218 1 81 1 245 1 339 1 
75 1 206 1 111 1 
75 1 206 1 111 1 
3 1 304 1 
3 1 75 1 304 1 
336 1 196 1 
201 1 169 1 287 1 209 2 170 1 8 1 128 1 298 1 218 1 263 1 312 2 232 2 268 1 194 2 236 1 196 1 154 2 239 1 159 1 240 1 336 1 81 1 198 1 115 1 339 1 280 1 245 1 
312 2 162 1 1 1 53 2 225 1 84 1 229 1 121 1 232 2 189 1 194 2 102 1 126 2 328 2 238 1 295 1 257 1 16 2 109 1 131 1 241 1 134 1 20 1 
282 1 107 1 270 1 256 1 92 1 328 1 
107 1 157 1 85 1 64 1 34 1 270 1 139 1 328 1 
107 1 157 1 85 1 64 1 34 1 322 1 270 1 139 1 328 2 
85 1 64 1 34 1 270 1 65 1 139 1 328 1 
174 1 
164 1 144 1 251 1 288 1 192 1 149 1 326 1 44 1 277 1 337 1 
0 2 144 5 288 5 325 5 326 5 175 2 13 2 104 5 258 1 333 2 160 2 262 10 66 5 96 1 264 2 
144 1 287 1 149 1 245 1 150 1 220 1 
163 1 205 1 99 1 231 2 251 2 287 3 288 2 172 1 192 2 150 4 328 4 327 2 326 2 152 1 276 1 259 2 277 1 337 2 92 2 245 3 220 2 
164 1 144 1 288 1 44 1 234 1 149 1 326 1 
251 1 288 1 287 1 57 1 305 1 135 1 66 1 262 1 220 1 144 2 192 1 149 1 150 1 326 1 277 1 337 1 245 1 
251 1 277 1 337 1 192 1 37 1 92 1 328 1 
0 2 251 2 287 1 288 5 289 1 61 1 12 1 175 2 13 2 129 1 63 1 262 6 66 3 96 1 220 1 264 2 228 1 144 5 267 1 231 1 147 1 192 2 149 2 325 5 150 1 103 1 327 1 326 8 104 5 333 2 43 1 277 2 337 2 160 2 245 1 
202 1 251 1 287 1 288 2 209 1 59 1 13 2 176 1 130 1 306 1 96 1 264 2 312 1 184 1 232 1 30 1 35 1 192 1 194 1 326 2 329 1 154 1 331 1 333 1 277 1 337 1 114 1 245 1 
312 1 202 1 154 1 232 1 132 1 55 1 209 1 290 1 92 1 194 1 328 1 59 1 
144 4 318 1 231 1 251 1 288 2 192 1 149 2 325 2 327 1 326 1 104 2 277 1 337 1 66 2 262 4 
275 1 239 1 208 1 336 1 218 1 
239 1 316 1 218 1 
239 1 316 1 218 1 
239 1 316 1 218 1 
239 1 86 1 218 1 
239 1 86 1 218 1 
239 1 86 1 218 1 
239 1 218 1 
8 1 81 1 
162 5 53 2 225 1 184 1 266 3 229 1 30 2 126 10 295 5 13 2 332 1 331 2 130 1 333 2 131 1 241 1 47 5 136 2 
0 1 162 2 225 1 53 2 229 1 126 2 13 1 332 1 131 1 241 1 136 1 47 1 
0 1 162 2 225 1 53 2 266 1 229 1 126 4 295 2 175 1 13 1 332 1 333 1 131 1 241 1 160 1 47 2 136 1 
162 1 204 1 225 3 53 6 266 1 229 3 30 1 293 1 126 3 295 2 332 1 331 1 18 1 131 3 241 3 47 2 136 1 
0 3 162 16 204 2 53 10 5 1 289 1 293 1 126 34 295 18 175 3 13 5 130 2 18 1 216 1 303 1 131 5 261 1 136 5 225 5 228 4 266 7 318 1 229 5 267 3 30 3 100 1 38 1 331 3 332 1 333 5 241 5 160 3 47 12 161 1 
162 4 53 2 289 1 126 8 61 1 13 1 295 4 130 1 131 1 261 1 225 1 228 1 266 2 318 1 267 1 229 1 30 1 100 1 332 1 331 1 333 1 241 1 47 2 
0 1 162 6 53 4 5 1 289 1 126 11 61 1 295 5 175 1 13 2 130 1 303 1 131 2 261 1 136 1 225 2 266 2 228 2 318 1 229 2 267 1 30 1 100 1 331 1 332 1 333 1 241 2 47 3 
0 2 162 9 204 1 53 6 289 1 126 19 61 1 295 10 12 1 175 2 13 3 130 1 129 1 303 1 63 1 131 3 261 1 136 1 225 3 228 1 266 3 318 1 267 1 229 3 30 1 100 1 103 1 331 1 332 1 333 3 241 3 160 2 47 4 
0 2 162 10 204 1 53 6 289 1 126 17 61 1 295 7 12 1 175 2 13 3 130 1 129 1 303 1 63 1 131 3 261 1 136 2 225 3 228 1 266 3 318 1 267 1 229 3 30 1 100 1 103 1 331 1 332 1 333 2 241 3 160 1 47 5 
162 4 53 2 289 1 126 8 61 1 13 1 295 4 130 1 131 1 261 1 225 1 228 1 266 2 318 1 267 1 229 1 30 1 100 1 332 1 331 1 333 1 241 1 47 2 
0 2 162 6 53 2 289 1 126 12 61 1 295 6 12 1 175 2 13 2 129 1 63 1 131 1 136 1 225 1 228 1 266 1 267 1 229 1 103 1 332 1 333 2 241 1 160 2 47 2 
0 2 162 10 204 2 53 8 289 1 126 18 61 1 295 8 12 1 175 2 13 3 130 1 129 1 63 1 303 1 131 4 261 1 136 2 225 4 228 1 266 3 318 1 229 4 267 1 30 1 100 1 103 1 331 1 332 1 333 2 241 4 160 1 47 5 
0 3 162 9 204 2 53 8 289 1 126 16 61 1 295 7 12 1 175 3 13 3 129 1 18 1 63 1 131 4 136 3 225 4 228 1 266 3 229 4 267 1 103 1 332 1 333 2 241 4 160 2 47 6 
162 3 266 3 30 3 100 1 126 7 295 4 13 1 331 3 130 1 333 1 261 2 47 6 136 3 
0 2 162 10 204 2 53 8 289 1 126 18 61 1 295 8 12 1 175 2 13 3 130 1 129 1 18 1 63 1 131 4 261 1 136 1 225 4 228 1 266 3 318 1 229 4 267 1 30 1 100 1 103 1 331 1 332 1 333 2 241 4 160 1 47 4 
162 4 204 1 225 2 53 4 266 2 318 1 229 2 30 1 100 1 126 8 13 1 295 4 331 1 130 1 333 1 131 2 241 2 261 1 136 1 47 3 
162 3 266 2 318 1 30 1 234 1 100 1 126 6 295 3 13 1 331 1 130 1 333 1 261 1 47 2 
0 1 162 2 225 1 53 2 266 1 229 1 126 4 295 2 175 1 13 1 333 1 303 1 131 1 241 1 160 1 47 2 136 1 
0 1 162 3 266 1 228 2 267 1 5 1 289 1 126 7 295 4 175 1 13 1 333 1 160 1 136 1 47 2 
0 2 162 11 204 2 53 4 5 1 293 1 126 23 127 1 13 3 175 2 295 12 130 1 131 2 261 1 136 4 225 2 228 2 266 5 318 1 267 2 229 2 30 2 233 1 100 1 331 2 333 3 241 2 160 2 47 9 
295 1 228 1 126 1 
162 1 267 1 126 1 
0 1 162 3 53 2 225 1 266 2 229 1 126 6 295 3 175 1 13 1 258 1 333 1 303 1 131 1 241 1 160 1 136 1 47 3 
0 2 162 6 53 2 289 1 126 12 61 1 295 6 12 1 175 2 13 2 129 1 63 1 131 1 136 1 225 1 228 1 266 1 267 1 229 1 103 1 332 1 333 2 241 1 160 2 47 2 
162 3 266 1 30 1 126 6 13 1 295 3 331 1 130 1 333 1 47 2 136 1 
162 1 204 1 225 1 53 2 266 1 229 1 30 1 100 1 293 1 126 3 295 2 331 1 131 1 261 1 241 1 136 1 47 2 
312 1 14 1 232 1 54 1 194 1 263 1 138 1 
312 1 98 1 284 1 315 1 54 1 232 1 271 1 194 1 14 1 300 1 263 1 138 1 
79 1 133 1 322 1 92 1 328 4 
243 1 328 1 
92 1 328 1 
64 1 322 1 328 2 
322 1 92 1 328 2 
322 1 92 1 328 2 
234 1 92 1 328 1 
312 1 154 1 232 1 80 1 209 1 92 1 194 1 328 1 
312 1 154 1 259 1 232 1 80 1 209 1 194 1 328 1 
312 1 154 1 259 1 232 1 80 1 209 1 194 1 328 1 
259 1 287 1 245 1 328 1 
259 1 287 1 245 1 328 1 
117 1 328 1 
92 1 328 1 
312 1 53 2 225 1 84 1 229 1 232 1 209 1 189 1 322 1 194 1 102 1 328 1 154 1 131 1 241 1 80 1 20 1 
152 1 251 1 277 1 287 1 337 1 170 1 192 1 92 1 245 1 328 1 
117 1 328 1 
312 1 154 1 232 1 80 1 209 1 92 1 194 1 328 1 
259 1 328 1 
221 1 335 1 76 1 56 1 263 1 
221 2 50 1 144 1 166 1 76 2 287 2 170 1 149 1 291 1 56 1 193 1 10 1 302 1 335 2 22 1 114 1 263 1 245 2 246 1 
312 1 257 1 1 1 232 1 335 1 76 1 194 1 56 1 238 1 
166 1 56 1 246 1 
165 1 323 1 
97 1 143 1 165 1 186 2 146 1 188 1 255 2 77 1 214 1 299 4 17 1 244 2 67 4 69 3 
299 1 224 1 165 1 186 1 178 1 323 1 67 1 82 1 
165 1 146 1 323 1 214 1 299 1 279 1 67 1 
156 1 230 1 190 2 69 2 
323 1 
310 1 299 1 165 1 186 1 323 1 67 1 
185 1 
323 1 
255 1 234 1 244 1 69 1 
299 1 143 1 255 1 244 1 67 1 77 1 69 1 
200 1 203 1 299 1 
214 1 299 1 165 1 146 1 188 1 323 1 67 1 
299 2 143 1 186 1 334 1 255 1 244 1 67 2 77 1 69 1 
323 1 
323 1 
323 1 
29 1 323 1 
310 1 97 1 180 1 165 1 186 2 323 1 299 2 17 1 67 2 69 1 
91 1 323 1 219 1 
97 1 165 1 186 2 323 1 299 2 17 1 334 1 197 1 67 2 69 1 
299 1 165 1 146 1 323 1 67 1 
97 1 17 1 165 1 69 1 
255 1 69 1 

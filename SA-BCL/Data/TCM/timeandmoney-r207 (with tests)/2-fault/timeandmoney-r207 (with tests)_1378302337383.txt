#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 40 131 121 182 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
86 2 271 1 272 1 87 9 106 2 212 1 322 2 277 6 279 1 45 2 161 1 190 1 282 1 114 2 372 1 166 4 220 1 350 9 102 1 290 2 291 3 353 5 105 1 378 2 318 1 79 1 259 1 211 1 
86 2 271 1 272 1 87 9 106 2 212 1 322 2 277 6 279 1 45 2 161 1 190 1 282 1 114 2 372 1 166 4 220 1 350 9 102 1 290 2 291 3 353 5 105 1 378 2 318 1 79 1 259 1 211 1 
86 2 271 1 272 1 87 10 106 2 212 1 322 2 277 7 279 1 45 2 161 1 190 1 282 1 114 2 372 1 166 5 220 1 350 10 102 1 290 2 291 4 353 6 105 1 378 2 318 1 79 1 259 1 211 1 
86 1 271 1 272 1 87 7 106 2 212 1 322 2 277 4 45 2 161 1 190 1 282 1 114 2 372 1 166 3 220 1 350 7 102 1 290 2 291 2 353 4 105 1 378 2 318 1 79 1 259 1 211 1 
86 2 271 1 106 1 87 4 212 1 350 4 322 1 290 1 102 1 291 1 277 3 279 1 45 1 353 3 105 1 378 1 79 1 166 2 
271 1 87 2 106 1 212 1 220 1 350 2 183 1 290 1 9 1 45 1 147 1 353 1 378 1 79 1 318 1 114 1 
271 1 87 3 212 1 350 3 291 1 277 1 45 2 353 2 190 1 378 2 79 1 114 1 166 1 
86 2 271 1 87 9 106 1 212 1 322 1 236 1 277 7 279 1 45 2 190 1 114 1 14 1 372 1 166 4 350 9 102 1 290 1 291 3 353 5 105 1 378 2 79 1 211 1 
86 2 271 1 87 9 106 1 212 1 322 1 236 1 277 7 279 1 45 2 190 1 114 1 14 1 372 1 166 4 350 9 102 1 290 1 291 3 353 5 105 1 378 2 79 1 211 1 
221 1 222 1 254 1 
305 1 222 1 40 2 
228 1 227 1 152 2 68 2 29 2 266 2 137 2 158 2 
85 1 181 1 152 3 360 1 92 1 158 2 239 1 62 1 306 1 68 2 47 1 162 1 137 2 195 2 71 1 196 1 266 3 119 1 50 2 141 2 72 2 331 1 224 1 171 2 172 1 292 1 228 1 227 1 175 1 205 1 251 1 104 1 146 1 59 1 29 2 253 1 379 1 
227 1 152 1 10 1 68 1 29 1 153 1 266 1 137 1 158 1 70 1 
221 1 197 1 152 1 222 1 266 1 153 1 101 1 363 1 54 1 295 1 240 1 58 1 137 1 83 1 
221 1 152 1 222 1 266 1 153 1 101 2 363 1 158 1 54 1 295 1 68 1 58 1 29 1 83 2 137 1 
188 1 150 1 335 1 101 1 83 1 
238 1 150 1 221 1 335 1 222 1 270 1 101 2 83 2 
335 1 101 1 83 1 
150 1 152 1 153 1 266 1 101 1 158 1 227 1 10 1 68 1 29 1 69 1 83 1 137 1 70 1 
222 1 
150 1 221 1 335 1 222 1 270 1 101 2 264 1 83 2 
150 2 221 1 374 1 222 1 265 2 199 2 101 5 157 1 249 1 293 1 160 2 269 1 27 1 335 2 352 1 78 1 270 1 257 1 83 5 
71 1 360 1 152 2 266 2 119 1 72 1 331 1 171 1 158 1 326 1 175 1 62 1 146 1 47 1 97 1 29 1 379 1 355 1 137 1 195 1 
228 1 254 1 
152 2 266 2 343 1 158 1 228 2 68 1 29 1 113 1 137 2 
46 1 346 1 355 1 
71 1 152 1 360 1 266 1 119 1 72 1 331 1 171 1 228 1 62 1 175 1 146 1 47 1 379 1 195 1 283 1 
228 1 152 3 68 1 29 3 266 3 137 3 158 3 326 1 
152 1 10 1 29 1 153 1 266 1 137 1 158 1 
152 1 68 1 29 1 153 1 266 1 113 1 343 1 137 1 158 1 
85 1 181 1 360 1 152 4 213 1 153 1 363 1 158 3 326 1 239 1 62 1 68 2 47 1 97 1 113 1 15 1 137 3 195 1 71 1 196 1 266 4 119 1 50 1 141 2 331 1 72 1 224 1 101 1 171 1 54 1 295 1 228 1 175 1 227 1 205 1 251 1 146 1 104 1 58 1 59 1 29 3 253 1 379 1 83 1 
228 1 197 1 152 2 29 1 99 1 266 2 137 2 158 1 326 1 
152 3 213 1 222 1 153 1 266 3 101 1 363 1 158 3 326 2 54 1 295 1 68 1 58 1 97 1 29 3 113 1 209 1 83 1 137 3 
152 2 266 2 158 2 326 1 68 1 46 1 29 2 113 1 355 1 137 2 
71 1 152 1 360 1 266 1 119 1 72 1 331 1 171 1 228 1 62 1 175 1 146 1 47 1 379 1 195 1 
71 1 152 1 266 1 119 1 72 1 171 1 228 1 62 1 175 1 146 1 47 1 379 1 380 1 194 1 195 1 
358 1 85 1 181 1 92 2 324 1 156 1 239 1 346 2 46 2 24 1 138 1 141 2 50 4 224 1 376 1 251 1 205 2 28 1 316 1 59 1 206 1 124 1 355 2 319 1 
295 1 152 1 29 1 153 1 266 1 261 1 137 1 158 1 
197 1 152 5 266 5 187 1 158 4 326 2 26 1 228 1 68 1 29 4 97 1 99 1 113 1 137 5 
152 2 10 1 29 2 261 1 153 1 266 2 137 2 158 2 
111 1 208 1 
111 1 208 1 
4 1 308 1 
4 1 308 1 
4 1 308 1 
111 1 252 1 208 1 
111 1 252 1 208 1 
111 1 281 1 208 1 
111 2 22 1 4 1 208 2 308 1 82 1 
111 1 252 1 208 1 
66 1 111 1 208 1 
66 1 111 1 208 1 
66 1 111 1 208 1 
349 1 222 1 235 1 302 1 101 2 159 1 145 1 263 1 65 2 111 2 30 3 207 2 177 2 219 1 208 2 297 2 82 1 298 2 83 2 
152 2 88 1 20 1 287 1 266 2 140 1 101 1 158 2 344 1 159 1 228 1 65 1 111 1 368 1 30 1 29 2 207 1 281 1 328 1 208 1 297 1 298 1 137 2 83 1 
106 1 322 1 290 1 
106 1 147 1 290 1 
232 1 147 1 322 2 126 1 289 1 290 3 
116 1 147 1 322 1 126 1 289 1 290 2 
147 1 322 1 289 1 126 2 290 2 
84 1 358 1 359 2 150 4 361 2 40 3 5 1 305 1 160 1 328 1 221 1 20 1 287 1 138 1 265 1 222 2 199 1 101 5 74 1 332 1 202 1 76 1 249 3 269 1 28 1 335 1 57 1 78 2 270 1 319 1 80 2 83 5 
358 3 359 6 150 7 342 1 361 6 40 9 5 2 188 5 305 3 160 2 13 1 221 1 20 4 374 1 138 3 222 5 265 2 199 2 101 9 74 2 375 5 202 3 76 1 249 8 314 1 269 1 28 3 335 6 230 1 256 1 78 6 270 1 319 3 258 1 83 9 
358 1 150 2 359 2 361 2 40 4 5 1 305 2 160 1 221 1 20 1 374 1 138 1 222 3 265 1 199 1 101 3 74 1 332 1 202 1 249 3 28 1 57 1 78 2 80 1 319 1 83 3 
358 2 359 4 150 3 342 1 361 4 40 7 5 1 305 3 160 1 221 1 20 2 374 1 138 2 222 4 265 1 199 1 101 4 74 1 332 1 202 2 249 5 314 1 28 2 230 1 57 1 78 4 80 2 319 2 83 4 
231 1 254 1 379 1 
60 1 379 1 
357 1 
47 1 379 1 
231 2 268 1 47 1 119 1 379 3 115 1 
47 1 119 1 379 1 
379 1 41 1 
358 1 320 2 330 1 17 1 185 1 50 7 92 4 216 1 201 1 376 3 205 3 28 1 255 1 124 2 370 1 329 1 33 1 
358 1 320 2 330 1 17 1 185 1 50 7 92 4 216 1 201 1 376 3 205 3 28 1 255 1 124 2 370 1 329 1 33 1 
358 1 320 2 330 1 17 1 246 1 185 1 50 7 92 4 216 1 201 1 376 3 205 3 28 1 255 1 124 2 370 1 33 1 329 1 
320 3 358 4 180 4 181 1 107 1 185 2 92 16 216 2 7 1 239 1 95 1 64 1 370 1 329 1 284 1 330 2 17 2 245 3 138 3 141 2 50 31 224 1 201 1 202 3 376 10 173 1 205 15 28 4 59 1 255 5 124 5 338 1 319 3 33 1 
358 1 320 2 181 2 185 1 92 5 216 1 364 1 7 1 239 2 345 1 370 1 329 1 17 1 330 1 141 4 50 9 224 2 376 4 205 4 28 1 59 2 124 3 255 1 33 1 
232 1 271 1 106 1 87 2 212 1 322 1 129 1 277 1 45 1 96 1 242 1 191 1 114 1 195 1 71 1 350 2 72 1 139 1 73 1 170 1 171 1 290 2 143 1 203 1 175 1 123 1 147 1 353 1 378 1 79 1 
232 1 271 1 106 1 87 3 212 1 322 1 129 1 277 2 42 1 45 1 96 1 242 1 191 1 114 1 195 1 71 1 350 3 72 1 73 1 142 1 170 1 171 1 290 2 143 1 203 1 175 1 147 1 353 1 378 1 178 1 
232 1 271 1 87 2 106 1 212 1 129 1 322 1 277 2 42 1 96 1 242 1 114 1 195 1 71 1 350 2 72 1 73 1 170 1 171 1 290 2 203 1 175 1 147 1 353 1 178 1 
71 1 87 1 350 1 72 1 142 1 73 2 170 2 171 1 325 1 6 1 366 1 175 1 62 1 377 1 45 1 47 1 31 1 242 2 378 1 379 1 114 2 35 1 195 1 
232 1 106 1 87 1 322 1 129 1 42 1 45 1 96 1 242 1 191 1 114 1 195 1 71 1 350 1 72 1 139 1 73 1 170 1 171 1 290 2 143 1 203 1 175 1 147 1 378 1 79 1 
189 1 
149 1 0 1 152 1 153 1 262 4 5 1 305 2 160 1 62 2 11 1 71 1 221 1 117 1 222 2 265 1 266 1 72 2 267 2 171 2 75 1 269 1 175 1 315 1 270 3 78 2 35 1 83 5 128 2 90 2 130 1 40 2 363 1 131 1 276 1 365 2 240 1 47 1 49 2 195 2 137 1 197 1 198 2 199 1 101 5 249 2 54 1 295 1 377 1 335 6 58 1 339 2 379 1 210 1 381 1 300 1 
0 1 197 1 152 1 153 1 266 1 262 2 101 3 363 1 54 1 295 1 240 1 335 2 315 1 11 1 58 1 270 1 339 1 264 1 210 1 83 3 381 1 137 1 
152 1 0 1 153 1 262 3 363 1 365 1 240 1 11 1 264 1 137 1 197 1 221 1 266 1 222 1 101 3 54 1 295 1 335 1 315 1 58 1 270 1 210 1 381 1 83 3 
152 1 0 1 153 1 262 3 363 1 365 1 240 1 11 1 264 1 137 1 197 1 221 1 266 1 222 1 101 3 54 1 295 1 315 1 335 2 58 1 270 1 339 1 210 1 381 1 83 3 128 1 
149 1 152 1 0 1 2 1 153 1 262 6 160 1 305 2 63 1 11 1 264 1 221 5 266 1 222 5 265 1 267 2 269 1 121 1 315 1 270 3 78 1 83 5 128 4 90 2 363 1 131 1 365 4 240 1 137 1 49 2 197 1 373 1 199 1 198 2 101 5 54 1 249 1 295 1 204 1 335 7 58 1 339 4 210 1 381 1 
149 1 0 1 152 1 90 2 153 1 262 4 40 2 363 1 131 1 365 2 305 2 160 1 240 1 11 1 49 2 137 1 221 1 197 1 222 2 265 1 266 1 198 2 199 1 101 4 267 2 249 1 54 1 295 1 269 1 335 4 315 1 58 1 339 2 270 2 78 1 210 1 381 1 83 4 300 1 128 2 
149 1 152 1 0 1 90 2 2 1 153 1 262 4 363 1 131 1 365 2 305 2 160 1 240 1 11 1 49 2 137 1 221 1 197 1 222 1 265 1 266 1 198 2 199 1 101 4 267 2 249 1 54 1 295 1 121 1 269 1 204 1 335 4 315 1 58 1 339 2 270 2 78 1 210 1 381 1 83 4 128 2 
149 1 152 1 0 1 90 2 2 1 153 1 262 4 363 1 131 1 365 2 305 2 160 1 240 1 11 1 49 2 137 1 221 1 197 1 222 1 265 1 266 1 198 2 199 1 101 4 267 2 249 1 54 1 295 1 121 1 269 1 204 1 335 4 315 1 58 1 339 2 270 2 78 1 210 1 381 1 83 4 128 2 
152 1 0 1 182 1 273 1 153 1 262 2 40 1 186 1 363 1 131 1 160 1 240 1 11 1 49 1 137 1 197 1 265 1 266 1 199 1 101 2 267 1 249 1 54 1 294 1 295 1 121 1 269 1 315 1 58 1 78 1 210 1 381 1 83 2 
149 1 152 1 0 1 90 2 2 1 153 1 262 5 363 1 131 1 365 3 305 2 160 1 240 1 11 1 49 2 137 1 221 1 197 1 373 1 222 1 265 1 266 1 198 2 199 1 101 4 267 2 249 1 54 1 295 1 121 1 269 1 204 1 315 1 335 5 58 1 270 2 78 1 339 3 210 1 381 1 83 4 128 3 
149 1 152 1 0 1 90 2 2 1 153 1 262 5 363 1 131 1 365 3 305 2 160 1 240 1 11 1 49 2 137 1 221 1 197 1 373 1 222 1 265 1 266 1 198 2 199 1 101 4 267 2 249 1 54 1 295 1 121 1 269 1 204 1 315 1 335 5 58 1 270 2 78 1 339 3 210 1 381 1 83 4 128 3 
37 2 0 1 152 1 153 1 273 1 262 4 40 2 363 1 131 1 365 2 160 1 240 1 11 1 49 2 137 1 221 1 197 1 222 1 265 1 266 1 199 1 101 4 267 2 249 1 54 1 294 2 295 1 269 1 335 4 315 1 58 1 339 2 270 2 78 1 210 1 381 1 83 4 300 1 128 2 
358 1 320 1 85 1 181 1 185 1 92 3 239 1 46 1 346 1 370 1 329 1 330 1 141 2 50 6 224 1 376 2 228 2 251 1 205 3 28 1 59 1 206 1 254 1 124 2 355 1 33 1 
358 2 180 3 85 1 181 2 92 8 132 1 239 2 95 1 306 1 218 1 134 1 112 1 346 11 46 4 284 1 245 3 138 1 141 4 50 14 224 2 376 2 202 2 228 1 205 6 251 2 28 1 59 2 253 1 255 1 124 1 355 11 319 2 34 1 
85 1 181 1 152 1 89 1 153 1 92 1 132 1 158 1 326 1 93 1 239 1 306 1 46 1 97 1 137 1 21 1 266 1 141 2 50 2 224 1 228 1 251 1 205 1 29 1 59 1 253 1 81 1 
152 3 158 1 8 1 62 1 306 1 110 2 346 7 71 2 266 3 119 2 72 3 224 3 171 3 228 2 175 2 28 3 229 2 29 1 124 4 355 7 319 2 33 1 320 1 358 3 85 3 181 3 360 2 185 1 91 2 92 10 132 1 326 1 239 3 42 1 97 1 47 2 46 7 370 1 329 1 244 2 195 3 137 1 330 1 285 1 138 2 51 1 141 6 50 20 331 2 202 2 376 8 205 10 251 3 104 2 146 2 59 3 253 1 255 4 379 2 
85 2 260 1 181 2 152 1 215 1 92 1 158 1 326 1 239 2 42 1 62 2 306 1 47 2 307 1 193 1 137 1 195 7 71 2 266 1 72 8 141 4 52 1 50 2 169 1 224 2 171 8 334 1 172 2 175 2 251 2 205 1 123 1 377 1 206 1 29 1 59 2 253 1 379 3 35 1 
358 1 85 1 181 1 152 1 92 1 132 1 158 1 239 1 68 1 46 1 346 1 113 1 137 1 266 1 138 1 141 2 50 3 224 1 376 1 202 1 251 1 205 2 28 1 29 1 59 1 124 1 355 1 319 1 382 1 
358 1 85 1 181 1 50 2 141 2 224 1 92 2 156 1 376 1 239 1 251 1 46 1 346 1 206 1 59 1 255 1 355 1 319 1 
85 1 181 1 24 1 138 1 50 2 141 2 224 1 376 1 239 1 251 1 205 2 28 1 46 1 346 1 206 1 59 1 124 1 355 1 
358 1 85 1 181 1 92 2 239 1 346 2 46 2 138 1 141 2 50 4 224 1 202 1 376 2 251 1 205 2 28 1 59 1 206 1 255 1 124 1 319 1 355 2 
358 1 85 1 181 1 50 2 141 2 224 1 92 2 156 1 334 1 376 1 239 1 251 1 46 1 346 1 59 1 255 1 355 1 319 1 
85 1 181 1 24 1 138 1 50 2 141 2 224 1 334 1 376 1 239 1 251 1 205 2 28 1 46 1 346 1 59 1 124 1 355 1 
358 1 85 1 181 1 92 2 239 1 346 2 46 2 138 1 141 2 50 4 224 1 334 1 202 1 376 2 251 1 205 2 28 1 59 1 255 1 124 1 319 1 355 2 
358 1 85 1 181 1 92 2 239 1 346 2 46 2 138 1 50 4 141 2 224 1 202 1 376 2 251 1 205 2 28 1 59 1 255 1 124 1 319 1 355 2 
85 1 181 1 360 1 152 1 92 1 239 1 62 1 306 1 47 1 195 1 71 1 266 1 119 1 50 2 331 1 72 1 141 2 224 1 171 1 228 1 175 1 146 1 104 1 251 1 205 1 59 1 253 1 379 1 
85 1 181 1 152 1 323 1 92 1 239 1 62 1 306 1 47 1 194 1 195 1 71 1 266 1 119 1 50 2 72 1 141 2 224 1 171 1 228 1 175 1 146 1 251 1 205 1 59 1 253 1 379 1 380 1 
358 1 85 1 181 1 92 2 132 1 239 1 346 2 46 2 138 1 141 2 50 4 224 1 202 1 376 2 251 1 205 2 28 1 59 1 255 1 124 1 319 1 355 2 
358 1 85 1 181 1 360 1 152 1 92 2 239 1 46 2 346 2 47 1 195 1 71 1 138 1 266 1 119 1 50 4 331 1 72 1 141 2 224 1 171 1 376 2 202 1 175 1 205 2 146 1 104 1 251 1 28 1 229 1 123 1 59 1 124 1 255 1 379 1 355 2 319 1 
358 1 85 1 181 1 152 1 92 2 132 1 158 1 239 1 68 1 346 1 46 1 113 1 137 1 138 1 266 1 141 2 50 3 224 1 376 1 202 1 205 1 251 1 28 1 77 1 29 1 59 1 255 1 319 1 355 1 
358 3 180 2 181 2 92 9 155 2 364 1 239 2 95 1 241 1 16 1 284 1 19 1 245 1 138 3 141 4 50 19 288 1 224 2 25 1 103 1 202 3 376 6 205 10 28 3 59 2 124 3 255 3 319 3 125 2 299 1 
358 3 180 2 181 3 92 14 155 4 364 1 7 2 278 1 367 1 239 3 95 2 44 1 241 1 135 1 165 1 16 1 245 2 138 2 141 6 50 26 224 3 25 2 103 2 376 4 202 3 144 1 205 12 28 2 59 3 255 2 124 2 319 3 125 1 299 1 
155 4 7 1 165 1 16 1 224 3 25 1 28 5 124 4 319 4 33 1 356 1 125 1 358 5 320 1 180 4 181 3 185 1 92 20 364 1 239 3 367 1 278 1 95 3 44 1 241 1 135 1 370 1 329 1 284 1 330 1 245 3 138 4 50 41 141 6 288 1 103 2 376 8 202 4 144 1 205 21 59 3 255 4 299 1 
320 1 358 5 180 4 181 4 185 1 92 20 155 4 364 1 7 2 278 1 367 1 239 4 95 3 44 1 241 1 135 1 370 1 165 1 329 1 16 1 284 1 330 1 245 3 138 3 141 8 50 38 288 1 224 4 25 1 103 2 202 4 376 7 144 1 205 18 28 4 59 4 124 4 255 3 319 4 356 1 33 1 125 1 299 1 
320 1 358 8 180 4 181 2 185 1 92 27 155 4 364 1 7 1 278 1 367 1 239 2 95 2 44 1 218 2 241 1 135 1 370 1 165 1 329 1 16 1 284 2 330 1 245 4 138 7 141 4 50 52 224 2 25 1 103 1 202 7 376 14 144 1 205 25 28 8 59 2 124 7 255 7 319 7 33 1 125 1 299 1 
349 1 111 1 65 1 207 1 369 1 302 1 208 1 297 1 82 1 298 1 
281 1 140 1 
94 1 1 1 111 1 65 1 39 1 207 1 208 1 297 1 298 1 
349 1 222 1 302 1 101 1 159 1 145 1 263 1 65 1 111 1 30 2 207 1 177 1 219 1 208 1 297 1 82 1 298 1 83 1 
349 1 222 1 302 1 101 1 159 1 145 1 263 1 65 1 111 1 30 2 207 1 177 1 219 1 208 1 297 1 82 1 298 1 83 1 
349 1 222 1 302 1 101 1 159 1 145 1 263 1 65 1 111 1 30 2 207 1 177 1 219 1 208 1 297 1 82 1 298 1 83 1 
22 1 252 1 248 1 
22 1 252 1 248 1 
66 1 371 1 
66 1 22 1 371 1 
88 1 368 1 
150 1 152 2 88 1 158 2 344 1 111 1 65 1 368 1 219 1 281 1 328 1 137 2 20 1 287 1 266 2 118 1 140 1 101 1 228 1 30 1 29 2 177 1 207 1 208 1 297 1 298 1 83 1 
252 1 248 1 
66 1 22 1 371 1 
85 1 181 1 152 2 215 1 92 1 132 1 133 1 239 1 306 1 67 1 47 1 243 1 100 1 137 2 195 2 71 1 266 2 72 2 141 2 52 1 50 2 224 1 171 2 333 1 172 2 175 1 251 1 205 1 59 1 253 1 379 1 
232 1 71 1 106 1 322 1 223 1 214 1 72 2 170 1 171 2 290 2 120 1 203 1 175 1 42 1 123 1 147 1 96 1 191 1 195 2 
232 1 71 1 106 1 322 1 214 1 72 1 170 1 171 1 290 2 203 1 42 1 175 1 147 1 96 1 191 1 48 1 195 1 
71 1 223 1 72 1 170 1 171 1 250 1 175 1 62 1 377 1 47 1 31 1 379 1 195 1 35 1 
232 1 71 1 106 1 322 1 223 1 214 1 72 1 170 1 171 1 290 2 120 1 203 1 42 1 175 1 147 1 96 1 191 1 195 1 
226 1 
249 1 221 1 222 1 254 1 78 1 257 1 157 1 
149 1 221 1 90 1 222 2 265 1 198 1 199 1 101 1 40 1 249 1 160 1 305 1 269 1 335 1 270 1 78 1 83 1 
341 1 60 3 61 1 157 1 5 2 160 4 305 6 62 1 12 2 347 2 71 4 221 2 23 1 168 2 265 4 222 8 119 3 72 3 171 3 75 1 175 3 269 4 268 1 123 1 28 2 176 2 270 3 78 8 319 2 83 5 231 2 358 2 38 2 359 6 361 6 234 2 91 2 40 12 41 2 47 3 195 3 247 2 138 2 199 4 101 5 53 1 200 1 202 2 249 9 54 2 335 5 379 10 257 1 301 2 
358 2 359 5 180 1 361 5 40 6 237 1 5 1 278 1 367 1 160 2 305 3 95 1 347 2 135 1 165 1 245 1 221 2 351 1 265 2 222 5 138 2 199 2 101 1 75 1 202 2 249 8 269 2 144 1 335 1 28 2 270 1 78 5 319 2 83 1 301 1 
358 2 152 1 2 1 153 1 185 1 274 1 158 1 160 1 10 1 68 1 347 2 370 1 69 1 137 1 70 1 330 1 266 1 265 1 199 1 101 1 249 2 269 1 227 1 28 1 29 1 78 2 83 1 301 1 
221 1 265 1 222 1 199 1 157 1 249 1 160 1 269 1 78 1 257 1 
358 2 359 5 361 5 222 5 138 2 91 1 40 10 202 2 249 5 305 5 28 2 347 2 78 5 319 2 301 1 
221 1 335 1 222 1 101 1 270 1 83 1 
341 2 303 1 276 1 5 2 160 2 62 2 47 1 195 4 167 1 71 1 374 1 23 1 117 1 265 2 199 2 72 4 101 3 171 4 75 2 249 2 175 1 269 1 335 4 377 1 379 1 78 2 270 2 83 3 35 1 
85 1 181 1 152 3 360 1 158 2 239 1 62 1 68 2 47 1 195 1 137 2 71 1 196 1 266 3 119 1 50 1 141 2 72 1 331 1 224 1 171 1 228 1 227 1 175 1 205 1 104 1 146 1 251 1 59 1 29 2 253 1 379 1 
320 1 359 2 221 2 361 2 265 1 222 4 199 1 40 4 75 1 5 1 249 1 305 2 160 1 269 1 78 2 
296 1 297 1 298 1 
296 1 297 1 298 1 
349 1 56 1 88 1 297 1 298 1 
296 1 297 1 298 1 
297 1 298 1 179 1 
297 1 298 1 179 1 
297 1 298 1 179 1 
297 1 298 1 
111 1 208 1 
320 1 358 1 330 1 181 2 185 1 50 8 141 4 92 4 224 2 376 3 7 1 239 2 205 4 28 1 59 2 255 1 124 2 370 1 329 1 33 1 
320 1 358 1 330 1 185 1 50 6 92 3 376 2 205 3 28 1 254 1 124 2 370 1 329 1 33 1 
358 1 181 1 151 1 138 1 141 2 50 4 224 1 92 2 376 2 202 1 239 1 205 2 28 1 59 1 124 1 255 1 319 1 
284 1 358 1 180 2 245 1 138 1 50 7 92 3 202 1 376 2 95 1 205 4 28 1 124 1 255 1 319 1 
320 1 358 3 180 2 181 2 185 2 92 11 7 2 239 2 134 1 218 1 370 1 329 1 284 1 330 2 245 2 138 2 50 23 141 4 224 2 376 9 202 2 205 12 28 3 59 2 354 1 255 4 124 5 319 2 33 1 
180 1 205 1 50 1 
245 1 50 1 92 1 
358 1 181 1 151 1 138 1 141 2 50 6 224 1 91 1 92 3 202 1 376 3 239 1 205 3 28 1 59 1 255 1 124 2 319 1 
358 2 180 1 181 1 92 6 364 1 239 1 367 1 278 1 95 1 135 1 165 1 245 1 138 2 50 12 141 2 224 1 202 2 376 2 144 1 205 6 28 2 59 1 255 1 124 1 319 2 
358 1 330 1 185 1 50 6 92 3 376 2 205 3 28 1 124 1 255 1 370 1 
330 1 181 1 185 1 50 3 141 2 92 1 224 1 376 2 7 1 239 1 205 2 59 1 354 1 255 1 124 1 33 1 329 1 
358 2 330 2 181 1 185 2 141 2 50 10 224 1 274 1 92 5 364 1 376 5 239 1 205 5 28 2 59 1 124 3 255 2 370 1 
358 1 181 1 141 2 50 2 224 1 92 2 364 1 376 1 239 1 59 1 255 1 319 1 
358 1 181 1 138 1 141 2 50 4 224 1 92 2 364 1 376 2 202 1 239 1 205 2 28 1 59 1 124 1 255 1 319 1 
330 1 181 3 185 1 50 3 141 6 288 1 224 3 92 1 364 1 376 2 7 1 239 3 205 2 59 3 354 1 124 1 255 1 
320 1 358 5 180 4 107 1 181 5 151 1 185 3 92 16 364 1 7 2 239 5 95 1 64 1 370 2 329 1 284 1 330 3 245 3 138 3 141 10 50 34 288 1 224 5 202 3 376 12 173 1 205 18 28 5 59 5 354 1 255 5 124 7 319 3 33 1 
320 1 358 1 180 1 181 1 185 1 92 4 364 1 239 1 95 1 370 1 165 1 329 1 330 1 245 1 50 8 141 2 224 1 376 2 205 4 28 1 59 1 124 2 33 1 
320 1 358 2 180 2 181 2 151 1 185 1 92 6 364 1 239 2 95 1 370 1 165 1 329 1 284 1 330 1 245 1 50 11 141 4 224 2 202 1 376 3 205 5 28 1 59 2 124 2 255 1 319 1 33 1 
320 1 358 3 180 1 181 3 151 1 185 1 92 9 364 1 7 1 278 1 239 3 367 1 95 1 135 1 370 1 165 1 329 1 330 1 245 1 138 2 50 19 141 6 224 3 202 2 376 4 144 1 205 10 28 3 59 3 255 1 124 3 319 2 33 1 
320 1 358 3 180 1 181 3 151 1 185 1 92 10 364 1 7 1 239 3 367 1 278 1 95 1 135 1 370 1 165 1 329 1 330 1 245 1 138 1 50 17 141 6 224 3 202 2 376 5 144 1 205 7 28 2 59 3 255 2 124 3 319 2 33 1 
320 1 358 1 180 1 181 1 185 1 92 4 364 1 239 1 95 1 370 1 165 1 329 1 330 1 245 1 50 8 141 2 224 1 376 2 205 4 28 1 59 1 124 2 33 1 
358 2 180 1 181 1 92 6 364 1 239 1 367 1 278 1 95 1 135 1 165 1 245 1 138 2 50 12 141 2 224 1 202 2 376 2 144 1 205 6 28 2 59 1 255 1 124 1 319 2 
320 1 358 3 180 1 181 4 151 1 185 1 92 10 364 1 7 2 278 1 367 1 239 4 95 1 135 1 370 1 165 1 329 1 330 1 245 1 138 1 50 18 141 8 224 4 202 2 376 5 144 1 205 8 28 2 59 4 255 2 124 3 319 2 33 1 
358 3 180 1 181 4 92 9 364 1 7 2 278 1 367 1 239 4 95 1 135 1 165 1 245 1 138 2 50 16 141 8 224 4 288 1 202 3 376 6 144 1 205 7 28 2 59 4 255 3 124 3 319 3 
358 1 330 3 185 3 50 7 92 3 376 6 205 4 28 1 124 3 255 3 370 1 329 1 33 2 
320 1 358 3 180 1 181 4 185 1 92 10 364 1 7 2 278 1 367 1 239 4 95 1 135 1 370 1 165 1 329 1 330 1 245 1 138 1 50 18 141 8 224 4 288 1 202 2 376 4 144 1 205 8 28 2 59 4 255 1 124 3 319 2 33 1 
228 1 152 1 197 1 266 1 99 1 336 1 137 1 
197 1 152 1 266 1 228 1 174 1 122 1 99 1 32 1 317 1 336 1 164 1 137 1 
71 1 175 1 62 1 377 1 47 1 254 1 72 1 379 1 171 1 35 1 195 1 
71 1 152 2 360 1 266 2 119 1 72 1 171 1 158 1 326 1 228 1 62 1 175 1 146 1 47 1 29 1 379 1 137 1 195 1 
360 1 341 1 152 2 153 1 363 1 41 1 158 2 326 1 47 2 195 1 137 2 71 1 247 1 266 2 119 2 72 1 171 1 295 1 228 1 175 1 146 1 29 1 379 3 
341 1 152 2 184 1 153 1 363 1 41 1 158 2 326 1 47 2 195 2 137 2 71 1 247 1 266 2 119 2 72 2 171 2 295 1 228 1 175 1 146 1 29 1 379 3 380 1 
231 1 341 1 184 1 60 1 41 1 62 1 47 1 195 3 310 1 71 1 221 1 247 1 222 1 119 1 72 3 101 2 171 3 54 1 175 1 335 1 337 1 379 4 83 2 
231 1 71 1 221 1 341 1 184 1 247 1 222 1 234 1 119 1 60 1 72 3 101 2 171 3 41 1 54 1 62 1 175 1 335 1 47 1 379 4 83 2 195 3 
71 1 175 1 72 1 307 1 171 1 195 1 
71 3 260 1 119 1 215 1 362 1 72 7 169 1 108 1 313 1 171 7 172 1 42 1 62 2 268 1 175 2 123 1 47 2 379 3 307 1 193 1 195 6 
152 2 158 1 110 1 346 1 71 1 266 2 119 1 72 1 224 2 171 1 175 1 228 2 229 1 123 1 28 1 29 1 124 2 355 1 33 1 358 1 320 1 85 2 181 2 360 1 185 1 92 3 132 1 326 1 239 2 46 1 47 1 370 1 329 1 195 1 137 1 330 1 331 1 141 4 50 6 333 1 376 2 104 1 251 2 146 1 205 3 59 2 379 1 
231 1 150 1 38 1 234 1 60 1 157 1 160 2 62 1 195 1 221 1 23 1 168 1 222 1 265 2 199 2 72 1 101 3 171 1 249 1 54 1 269 2 335 2 176 1 78 1 379 2 270 1 257 1 83 3 
231 1 71 2 175 1 268 1 123 1 47 1 119 1 72 2 379 2 200 1 307 1 171 2 195 2 
71 1 184 1 72 4 171 4 62 1 175 1 123 1 377 1 47 1 379 1 348 1 195 4 35 1 
71 2 341 1 119 1 362 1 72 2 313 1 171 2 8 1 175 1 47 1 280 1 379 1 136 1 195 2 
71 1 106 1 175 1 62 1 147 1 96 1 72 1 171 1 290 1 195 1 
71 1 72 2 215 1 171 2 42 1 175 1 123 1 47 1 243 1 379 1 195 2 
71 2 260 1 341 1 72 5 215 1 171 5 62 1 175 2 377 1 123 1 47 2 379 3 348 1 193 1 35 1 195 4 
71 2 260 1 341 1 72 5 215 1 171 5 62 1 175 2 377 1 123 1 47 2 192 1 379 3 348 1 35 1 195 4 
71 1 152 2 266 2 119 1 72 1 171 1 158 1 326 1 228 1 62 1 175 1 146 1 47 1 29 1 379 1 380 1 137 1 195 1 
71 2 341 1 119 1 362 1 72 1 108 1 313 1 171 1 268 1 175 1 47 1 379 1 195 1 
311 1 304 1 228 1 98 1 217 1 
150 1 311 2 221 1 213 1 222 1 153 1 101 2 363 1 217 2 54 1 295 1 304 1 228 1 58 1 98 2 163 1 148 1 127 1 83 2 
152 1 266 1 217 1 304 1 133 1 67 1 98 1 100 1 137 1 
304 1 148 1 127 1 
271 1 212 1 353 1 254 1 
271 1 87 1 212 1 350 1 45 1 353 1 378 1 
350 1 73 1 114 1 
271 1 340 1 87 3 212 1 220 2 350 3 45 1 353 1 378 1 79 1 309 1 36 1 
86 1 271 1 87 2 212 1 350 2 45 1 353 1 378 1 277 1 
106 1 87 1 350 1 45 1 322 1 353 1 378 1 79 1 290 1 166 1 102 1 
271 1 87 1 350 1 45 1 353 1 378 1 79 1 
271 2 87 1 212 1 350 1 45 1 378 1 79 1 
271 1 87 2 233 1 286 1 350 2 154 1 45 2 353 1 378 2 79 1 
271 1 87 3 212 1 350 3 277 2 291 1 45 1 353 2 378 1 79 1 372 1 211 1 166 1 
232 1 271 1 87 2 106 1 212 1 350 2 322 1 109 1 290 2 277 1 45 1 147 1 353 1 378 1 79 1 
86 1 271 1 87 4 212 1 350 4 277 2 291 1 279 1 45 2 353 2 378 2 79 1 166 1 
271 1 87 1 212 1 350 1 45 1 353 1 378 1 79 1 
340 1 271 2 87 4 220 1 212 2 350 4 275 1 277 2 291 1 45 1 353 3 378 1 309 1 166 1 
18 1 271 1 87 2 312 1 212 1 350 2 277 1 45 1 353 1 378 1 79 1 14 1 
87 3 340 2 271 1 220 2 212 1 350 3 3 1 45 1 353 1 378 1 79 1 309 1 
55 1 321 1 43 2 353 2 
87 1 350 1 45 1 378 1 79 1 225 1 
271 1 87 2 212 1 350 2 45 1 353 1 378 1 79 1 211 1 277 1 
327 1 
271 1 87 1 212 1 350 1 45 1 353 1 378 1 79 1 
271 1 87 3 212 1 220 1 350 3 45 1 353 1 378 1 79 1 211 1 277 1 
353 1 275 1 166 1 291 1 
271 1 353 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 168 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 1 325 1 19 9 182 2 326 2 224 2 327 1 162 1 228 2 164 2 94 6 53 3 342 4 33 1 348 1 242 1 35 1 82 1 244 1 290 1 375 1 215 1 246 2 218 1 128 2 107 5 15 1 157 9 
68 1 325 1 19 9 182 2 224 2 326 2 327 1 162 1 228 2 164 2 94 6 53 3 342 4 33 1 348 1 242 1 35 1 82 1 244 1 290 1 375 1 215 1 246 2 218 1 128 2 107 5 15 1 157 9 
68 1 325 1 19 10 182 2 224 2 326 2 327 1 162 1 228 2 164 2 94 7 53 4 342 5 33 1 348 1 242 1 35 1 82 1 244 1 290 1 375 1 215 1 246 2 218 1 128 2 107 6 15 1 157 10 
68 1 325 1 19 7 182 2 224 2 326 1 327 1 228 2 164 2 94 4 53 2 342 3 33 1 348 1 242 1 35 1 82 1 244 1 290 1 375 1 215 1 246 2 218 1 128 2 107 4 15 1 157 7 
342 2 19 4 182 1 224 1 326 2 162 1 242 1 164 1 94 3 82 1 244 1 215 1 375 1 246 1 128 1 107 3 53 1 157 4 
19 2 224 1 348 1 242 1 228 1 164 1 82 1 244 1 48 1 265 1 246 1 128 1 107 1 15 1 294 1 157 2 
342 1 19 3 224 2 33 1 242 1 228 1 94 1 82 1 244 1 128 2 107 2 53 1 157 3 
68 1 342 4 19 9 182 1 326 2 224 2 33 1 327 1 162 1 242 1 228 1 164 1 94 7 82 1 244 1 375 1 215 1 246 1 49 1 128 2 107 5 379 1 53 3 157 9 
68 1 342 4 19 9 182 1 326 2 224 2 33 1 327 1 162 1 242 1 228 1 164 1 94 7 82 1 244 1 375 1 215 1 246 1 49 1 128 2 107 5 379 1 53 3 157 9 
174 1 168 1 221 1 
174 1 263 2 307 1 
262 2 113 2 4 2 335 2 267 2 339 1 350 2 87 1 
158 2 111 1 113 2 73 1 332 1 186 1 364 2 140 1 25 1 4 2 143 1 335 3 282 1 28 1 365 1 339 1 52 2 341 1 55 1 103 1 123 1 124 2 288 1 315 1 350 2 351 1 261 1 126 1 262 2 151 1 376 1 318 1 154 1 267 3 295 2 87 1 63 1 
262 1 216 1 113 1 4 1 85 1 335 1 267 1 339 1 350 1 304 1 
65 1 299 1 115 1 226 1 71 1 331 1 174 1 262 1 85 1 335 1 267 1 78 1 254 1 221 1 
113 1 299 1 115 2 226 2 331 1 350 1 174 1 262 1 4 1 85 1 335 1 267 1 78 1 254 1 221 1 
119 1 115 1 226 1 20 1 148 1 
174 1 115 2 337 1 226 2 6 1 20 1 148 1 221 1 
115 1 226 1 20 1 
161 1 113 1 115 1 226 1 350 1 304 1 148 1 262 1 216 1 4 1 85 1 335 1 339 1 267 1 
174 1 
174 1 0 1 115 2 337 1 226 2 20 1 148 1 221 1 
321 1 222 2 368 1 369 1 115 5 226 5 117 2 229 1 302 1 372 1 20 2 184 1 148 2 174 1 125 1 14 2 191 1 337 1 221 1 
168 1 87 1 
17 1 113 1 350 1 262 2 38 1 4 1 335 2 267 2 87 2 
237 1 208 1 183 1 
111 1 93 1 124 1 73 1 315 1 332 1 151 1 318 1 335 1 282 1 267 1 365 1 52 1 295 1 87 1 63 1 
111 1 113 1 124 1 315 1 73 1 332 1 262 1 151 1 318 1 4 1 282 1 335 2 155 1 50 1 365 1 267 2 52 1 208 1 295 1 63 1 
262 3 113 3 4 3 335 3 50 1 267 3 350 1 87 1 
262 1 113 1 4 1 85 1 335 1 267 1 304 1 
17 1 262 1 113 1 4 1 38 1 85 1 335 1 267 1 350 1 
158 1 111 1 113 3 299 1 115 1 226 1 331 1 73 1 332 1 186 1 364 2 305 1 140 1 4 3 143 1 282 1 335 4 50 1 28 1 365 1 339 1 52 1 78 1 254 1 55 1 103 1 123 1 124 1 288 1 315 1 350 2 37 1 126 1 151 1 262 3 318 1 38 1 154 1 85 1 155 1 267 4 295 1 87 1 63 1 
199 1 262 2 113 1 4 1 335 2 50 1 71 1 267 2 87 1 
113 3 115 1 299 1 226 1 331 1 350 1 174 1 37 1 22 1 262 3 38 1 4 3 85 1 335 3 155 1 50 2 267 3 78 1 254 1 
262 2 237 1 113 2 4 2 38 1 335 2 50 1 267 2 208 1 350 1 
111 1 124 1 73 1 315 1 332 1 151 1 318 1 335 1 282 1 267 1 365 1 52 1 295 1 87 1 63 1 
111 1 360 1 298 1 124 1 73 1 332 1 318 1 335 1 282 1 267 1 365 1 52 1 295 1 87 1 63 1 
158 2 286 1 235 1 55 2 324 1 57 1 123 1 260 1 288 1 183 1 186 1 126 1 364 2 140 1 143 1 208 1 
262 1 113 1 4 1 334 1 85 1 335 1 267 1 254 1 
113 4 71 1 350 1 199 1 262 5 4 4 38 1 5 1 335 5 308 1 50 2 155 1 267 5 87 1 
262 2 113 2 334 1 4 2 85 1 335 2 267 2 304 1 
120 1 70 1 
120 1 70 1 
266 1 234 1 
266 1 234 1 
266 1 234 1 
120 1 127 1 70 1 
3 1 120 1 70 1 
291 1 120 2 84 1 266 1 70 2 234 1 
120 1 127 1 70 1 
120 1 127 1 70 1 
120 1 70 1 31 1 
120 1 70 1 31 1 
120 1 70 1 31 1 
66 2 120 2 258 1 90 1 115 2 70 2 361 1 226 2 72 2 289 1 174 1 291 1 231 2 292 1 152 1 170 3 169 1 202 2 367 2 
66 1 113 2 115 1 70 1 361 1 226 1 3 1 231 1 4 2 335 2 75 1 76 1 170 1 367 1 120 1 238 1 353 1 150 1 262 2 267 2 132 1 202 1 358 1 87 1 
246 1 182 1 164 1 
48 1 246 1 164 1 
122 1 48 1 182 2 246 3 269 1 39 1 
122 1 48 1 182 1 246 2 39 1 9 1 
122 1 48 1 182 1 246 2 39 2 
222 1 324 1 1 1 115 5 274 1 117 1 226 5 330 2 229 3 20 1 333 1 205 2 278 1 206 2 252 1 307 1 141 1 191 1 76 1 337 1 196 1 32 1 238 1 260 1 372 2 148 4 174 2 150 1 263 3 177 1 14 1 221 1 
271 1 222 2 159 1 160 1 324 3 1 3 115 9 274 2 226 9 117 2 302 1 229 8 20 6 333 3 46 1 205 6 119 5 206 6 252 2 307 3 74 1 191 1 337 1 32 1 344 1 238 4 260 3 372 6 148 7 317 5 174 5 263 9 177 3 14 2 221 1 
222 1 324 1 1 1 115 3 274 1 117 1 226 3 302 1 229 3 330 1 333 1 205 2 252 1 206 2 307 2 141 1 196 1 238 1 260 1 372 2 148 2 174 3 177 1 263 4 14 1 221 1 
271 1 222 1 160 1 324 2 1 2 115 4 274 1 117 1 226 4 302 1 229 5 330 2 333 2 205 4 206 4 252 1 307 3 141 1 196 1 344 1 238 2 260 2 372 4 148 3 174 4 263 7 177 2 14 1 221 1 
168 1 259 1 365 1 
365 1 268 1 
190 1 
111 1 365 1 
111 1 104 1 259 2 365 3 83 1 63 1 
111 1 365 1 63 1 
217 1 365 1 
67 2 158 7 55 3 114 1 135 1 328 1 260 1 34 1 213 1 333 1 230 1 61 3 176 1 99 2 309 1 341 4 133 1 
67 2 158 7 55 3 114 1 135 1 328 1 260 1 34 1 213 1 333 1 230 1 61 3 176 1 99 2 309 1 341 4 133 1 
67 2 158 7 55 3 114 1 135 1 328 1 260 1 34 1 213 1 163 1 333 1 230 1 61 3 176 1 99 2 309 1 133 1 341 4 
158 31 67 3 204 1 324 3 114 1 273 1 135 2 1 3 328 2 137 3 95 4 186 1 333 4 230 5 364 2 23 1 142 1 192 1 309 2 99 5 340 1 341 16 55 15 123 1 34 1 260 4 213 1 288 1 61 10 126 1 176 2 177 3 264 1 133 1 
158 9 67 2 135 1 328 1 333 1 186 2 230 1 364 4 192 1 309 1 99 3 341 5 257 1 55 4 123 2 260 1 80 1 34 1 288 2 213 1 61 4 126 2 176 1 133 1 
19 2 182 1 224 1 228 1 94 1 164 1 362 1 118 1 48 1 282 1 52 1 310 1 236 1 370 1 7 1 124 1 242 1 82 1 244 1 175 1 354 1 318 1 246 2 128 1 107 1 248 1 180 1 269 1 295 1 157 2 
134 1 19 3 182 1 224 1 228 1 164 1 94 2 362 1 118 1 48 1 282 1 52 1 310 1 236 1 370 1 124 1 316 1 82 1 244 1 354 1 318 1 246 2 128 1 107 1 248 1 269 1 180 1 357 1 295 1 157 3 
19 2 182 1 228 1 94 2 164 1 362 1 118 1 48 1 282 1 52 1 236 1 370 1 124 1 316 1 82 1 244 1 318 1 246 2 107 1 248 1 180 1 357 1 269 1 295 1 157 2 
312 1 111 1 134 1 236 2 19 1 224 1 124 1 228 2 73 1 362 2 21 1 214 1 318 1 128 1 282 1 144 1 365 1 51 1 180 2 52 1 295 1 366 1 157 1 
19 1 182 1 224 1 228 1 164 1 362 1 118 1 48 1 282 1 52 1 310 1 236 1 370 1 7 1 124 1 242 1 354 1 318 1 246 2 128 1 248 1 180 1 357 1 269 1 295 1 157 1 
301 1 
40 1 181 2 222 1 42 2 136 2 274 1 226 5 275 1 43 4 229 2 331 1 138 1 280 2 191 1 282 1 335 1 337 3 336 1 51 1 52 2 195 1 14 1 106 1 295 2 65 1 111 1 112 1 115 5 299 1 117 1 71 1 73 2 20 6 307 2 365 1 78 1 254 1 77 1 366 1 256 2 210 1 212 1 124 2 372 2 174 2 262 1 263 2 318 1 377 2 85 1 86 1 130 1 267 1 131 2 221 1 
65 1 256 1 112 1 0 1 115 3 299 1 226 3 43 2 71 1 331 1 20 2 262 1 85 1 106 1 86 1 335 1 337 1 336 1 267 1 195 1 254 1 78 1 
65 1 112 1 0 1 115 3 299 1 226 3 43 3 71 1 331 1 20 1 174 1 262 1 85 1 106 1 86 1 335 1 337 1 336 1 267 1 131 1 195 1 254 1 78 1 221 1 
65 1 112 1 0 1 299 1 115 3 226 3 71 1 43 3 331 1 20 2 280 1 335 1 337 1 336 1 195 1 78 1 254 1 256 1 174 1 262 1 106 1 85 1 86 1 267 1 131 1 221 1 
65 1 181 2 222 1 112 1 0 1 42 2 136 2 115 5 299 1 117 1 226 5 71 1 43 6 229 1 331 1 20 7 47 1 276 1 280 4 307 2 191 1 335 1 337 3 336 1 195 1 78 1 254 1 256 4 210 1 372 1 174 5 262 1 377 2 14 1 320 1 178 1 106 1 85 1 130 1 86 1 267 1 131 4 108 1 221 5 
181 2 40 1 222 1 42 2 136 2 226 4 43 4 331 1 229 1 280 2 335 1 191 1 336 1 337 2 195 1 14 1 106 1 65 1 112 1 299 1 115 4 117 1 71 1 20 4 307 2 254 1 78 1 256 2 210 1 372 1 174 2 262 1 263 2 377 2 85 1 130 1 86 1 267 1 131 2 221 1 
65 1 181 2 222 1 112 1 42 2 136 2 299 1 115 4 117 1 226 4 71 1 43 4 229 1 331 1 20 4 47 1 280 2 307 2 335 1 191 1 337 2 336 1 195 1 78 1 254 1 256 2 210 1 372 1 174 1 262 1 377 2 14 1 320 1 106 1 85 1 130 1 86 1 267 1 131 2 108 1 221 1 
65 1 181 2 222 1 112 1 42 2 136 2 299 1 115 4 117 1 226 4 71 1 43 4 229 1 331 1 20 4 47 1 280 2 307 2 335 1 191 1 337 2 336 1 195 1 78 1 254 1 256 2 210 1 372 1 174 1 262 1 377 2 14 1 320 1 106 1 85 1 130 1 86 1 267 1 131 2 108 1 221 1 
65 1 181 2 222 1 251 1 112 1 299 1 115 4 117 1 226 4 71 1 43 4 229 1 331 1 20 4 188 2 24 2 280 2 335 1 191 1 337 2 336 1 195 1 78 1 254 1 256 2 210 1 372 1 174 1 262 1 374 1 263 2 377 2 13 1 14 1 320 1 106 1 85 1 86 1 267 1 131 2 221 1 
65 1 181 2 222 1 112 1 42 2 136 2 299 1 115 4 117 1 226 4 71 1 43 5 229 1 331 1 20 5 47 1 280 3 307 2 191 1 335 1 337 2 336 1 195 1 78 1 254 1 256 3 210 1 372 1 174 1 262 1 377 2 14 1 320 1 106 1 85 1 178 1 130 1 86 1 267 1 131 3 108 1 221 1 
65 1 181 2 222 1 112 1 42 2 136 2 299 1 115 4 117 1 226 4 71 1 43 5 229 1 331 1 20 5 47 1 280 3 307 2 191 1 335 1 337 2 336 1 195 1 78 1 254 1 256 3 210 1 372 1 174 1 262 1 377 2 14 1 320 1 106 1 85 1 178 1 130 1 86 1 267 1 131 3 108 1 221 1 
65 1 40 1 181 2 222 1 112 1 251 1 115 4 299 1 117 1 226 4 71 1 43 4 229 1 331 1 20 4 188 2 24 2 280 2 191 1 335 1 337 2 336 1 195 1 78 1 254 1 256 2 210 1 372 1 174 1 262 1 263 2 377 2 14 1 106 1 85 1 86 1 267 1 131 2 221 1 
158 6 67 1 328 1 183 1 186 1 333 1 364 2 168 1 140 1 143 1 99 2 208 1 341 3 286 1 55 3 123 1 34 1 260 1 288 1 213 1 61 2 126 1 176 1 133 1 87 2 
158 9 1 2 137 2 95 2 183 7 186 2 333 2 364 4 97 1 140 1 143 2 208 7 101 1 341 6 55 3 237 5 287 1 123 2 79 1 288 2 36 1 126 2 177 2 264 1 85 1 154 1 87 1 110 1 
158 2 88 1 111 1 113 1 93 1 73 1 332 1 186 1 97 1 364 2 140 1 4 1 282 1 143 1 335 2 50 1 365 1 52 1 341 1 237 1 55 1 347 1 123 1 124 1 315 1 288 1 261 1 126 1 151 1 262 1 318 1 154 1 155 1 267 2 16 1 295 1 87 1 63 1 
158 5 111 1 113 1 1 1 116 1 73 1 183 2 332 1 333 1 186 2 97 1 364 4 167 1 306 1 140 2 4 1 282 1 233 1 143 2 335 2 50 1 365 1 52 1 208 2 341 3 103 1 55 2 123 2 124 1 315 1 288 2 126 2 151 1 262 1 177 1 318 1 154 1 155 1 267 2 220 1 295 1 63 1 
158 2 111 2 272 1 113 1 73 2 186 2 364 4 140 2 4 1 25 2 335 1 282 2 143 2 50 1 365 3 52 8 51 1 171 1 255 1 341 1 366 1 286 1 55 1 123 2 58 1 124 8 59 1 288 2 175 1 261 1 126 2 262 1 318 2 154 1 267 1 357 1 295 7 156 1 203 1 
158 3 324 1 113 1 1 1 183 1 186 1 333 1 364 2 97 1 140 1 4 1 143 1 335 1 99 1 208 1 341 1 237 1 55 2 123 1 260 1 288 1 350 1 149 1 61 1 126 1 262 1 177 1 38 1 267 1 
158 2 286 1 1 1 123 1 288 1 243 1 183 1 186 1 333 1 126 1 364 2 140 1 143 1 208 1 341 2 
158 2 286 1 235 1 324 1 55 2 123 1 260 1 288 1 183 1 186 1 126 1 364 2 140 1 143 1 208 1 
158 2 286 1 1 1 123 1 288 1 183 1 186 1 333 1 126 1 364 2 177 1 140 1 143 1 208 1 341 2 
158 2 1 1 123 1 288 1 243 1 183 1 186 1 333 1 126 1 364 2 140 1 143 1 208 1 255 1 341 2 
158 2 235 1 324 1 55 2 123 1 260 1 288 1 183 1 186 1 126 1 364 2 140 1 143 1 208 1 255 1 
158 2 1 1 123 1 288 1 183 1 186 1 333 1 126 1 364 2 177 1 140 1 143 1 208 1 255 1 341 2 
158 2 1 1 123 1 288 1 183 1 186 1 333 1 126 1 364 2 177 1 140 1 143 1 208 1 341 2 
158 2 111 1 73 1 332 1 186 1 364 2 140 1 282 1 335 1 143 1 365 1 52 1 341 1 103 1 55 1 123 1 124 1 315 1 288 1 261 1 126 1 151 1 318 1 154 1 267 1 295 1 87 1 63 1 
158 2 111 1 360 1 298 1 73 1 332 1 186 1 364 2 140 1 282 1 335 1 143 1 365 1 52 1 341 1 209 1 55 1 123 1 124 1 288 1 261 1 126 1 318 1 154 1 267 1 295 1 87 1 63 1 
158 2 1 1 123 1 288 1 183 1 186 1 333 1 126 1 97 1 364 2 177 1 140 1 143 1 208 1 341 2 
158 2 111 1 1 1 183 1 332 1 333 1 186 1 364 2 140 1 282 1 233 1 335 1 143 1 365 1 52 1 208 1 341 2 103 1 123 1 124 1 315 1 288 1 175 1 126 1 151 1 318 1 177 1 267 1 295 1 63 1 
158 2 113 1 1 1 183 1 230 1 186 1 333 1 364 2 97 1 140 1 4 1 143 1 335 1 208 1 341 2 237 1 123 1 288 1 350 1 61 1 126 1 262 1 177 1 38 1 267 1 270 1 
158 19 324 3 273 1 1 3 300 2 137 1 165 1 95 2 186 2 333 3 230 3 364 4 27 1 29 1 99 3 341 9 285 2 56 1 55 10 123 2 173 1 80 1 260 3 288 2 60 1 61 6 126 2 355 1 177 3 264 1 
158 26 324 2 273 2 1 3 300 4 137 2 303 1 165 1 95 2 230 2 186 3 333 3 277 1 364 6 232 1 279 1 192 2 29 2 99 2 341 14 285 1 55 12 56 1 346 1 123 3 173 2 260 2 80 1 288 3 61 4 126 3 355 1 200 1 177 3 
324 4 1 4 273 3 328 1 137 3 95 4 230 4 333 5 186 3 277 1 232 1 279 1 192 1 338 1 99 4 341 20 285 1 55 21 56 1 346 1 288 3 61 8 355 1 200 1 158 41 67 1 300 4 303 1 165 1 364 6 27 1 29 1 123 3 173 2 260 5 80 1 34 1 213 1 126 3 177 4 176 1 264 1 133 1 
67 1 158 38 324 3 273 3 1 4 328 1 300 4 137 3 303 1 165 1 95 4 186 4 333 5 230 3 277 1 364 8 232 1 279 1 27 1 338 1 192 2 29 1 99 4 341 20 285 1 56 1 55 18 346 1 123 4 173 2 34 1 80 1 260 4 213 1 288 4 61 7 126 4 355 1 176 1 200 1 177 4 264 1 133 1 
67 1 158 52 324 7 273 2 1 7 328 1 300 4 137 4 303 1 165 1 95 4 186 2 333 8 230 7 277 1 364 4 232 1 279 1 192 1 29 1 99 7 341 27 285 1 287 2 56 1 55 25 346 1 123 2 173 1 34 1 80 1 260 8 213 1 288 2 61 14 126 2 355 1 176 1 200 1 177 7 264 2 133 1 
66 1 291 1 120 1 231 1 292 1 152 1 189 1 70 1 202 1 367 1 
3 1 358 1 
66 1 120 1 231 1 240 1 70 1 172 1 227 1 202 1 367 1 
66 1 120 1 258 1 115 1 361 1 70 1 226 1 72 1 289 1 174 1 291 1 231 1 292 1 152 1 170 2 169 1 202 1 367 1 
66 1 120 1 258 1 115 1 361 1 70 1 226 1 72 1 289 1 174 1 291 1 231 1 292 1 152 1 170 2 169 1 202 1 367 1 
66 1 120 1 258 1 115 1 361 1 70 1 226 1 72 1 289 1 174 1 291 1 231 1 292 1 152 1 170 2 169 1 202 1 367 1 
127 1 84 1 352 1 
127 1 84 1 352 1 
371 1 31 1 
84 1 371 1 31 1 
132 1 353 1 
66 1 113 2 115 1 70 1 226 1 72 1 3 1 231 1 4 2 335 2 75 1 76 1 169 1 170 1 367 1 120 1 238 1 239 1 148 1 353 1 150 1 262 2 267 2 132 1 202 1 358 1 87 1 
127 1 352 1 
84 1 371 1 31 1 
158 2 111 1 272 1 91 1 166 1 186 1 97 1 364 2 140 1 25 2 282 1 143 1 335 2 365 1 52 2 100 1 341 1 55 1 147 1 123 1 58 1 124 2 288 1 261 1 126 1 262 2 318 1 201 1 154 1 267 2 295 2 
182 1 124 2 164 1 118 1 175 1 318 1 48 1 12 1 246 2 129 1 282 1 248 1 269 1 357 1 52 2 180 1 378 1 295 2 310 1 
182 1 349 1 124 1 164 1 118 1 318 1 48 1 246 2 282 1 248 1 269 1 357 1 52 1 180 1 378 1 295 1 310 1 
312 1 111 1 124 1 73 1 318 1 129 1 282 1 247 1 365 1 52 1 180 1 51 1 295 1 366 1 
182 1 124 1 164 1 118 1 318 1 48 1 12 1 246 2 129 1 282 1 248 1 269 1 357 1 52 1 180 1 378 1 295 1 310 1 
139 1 
174 1 125 1 168 1 229 1 372 1 184 1 221 1 
222 1 42 1 136 1 115 1 117 1 226 1 229 1 20 1 307 1 191 1 337 1 372 1 174 2 263 1 14 1 130 1 221 1 
222 4 89 2 223 2 324 2 1 2 274 2 329 2 226 5 229 9 331 2 184 1 138 1 333 2 282 3 191 4 337 3 52 3 54 1 62 1 14 4 295 3 359 1 63 3 111 3 18 2 296 1 115 5 117 4 73 1 20 5 205 6 167 2 206 6 253 2 307 6 365 10 311 2 313 1 211 2 124 3 259 2 260 2 372 8 83 1 175 1 125 1 174 8 373 2 318 4 263 12 177 2 217 2 268 3 221 2 
222 2 324 2 273 1 1 2 115 1 274 1 226 1 117 2 229 8 137 1 20 1 303 1 95 1 138 1 333 2 205 5 232 1 206 5 253 1 279 1 98 1 307 3 191 2 337 1 311 2 346 1 314 1 260 2 372 5 174 5 263 6 200 1 177 2 14 2 221 2 
222 1 161 1 113 1 115 1 328 1 117 1 226 1 229 2 304 1 333 2 47 1 253 1 4 1 335 1 191 1 339 1 311 2 241 1 260 1 213 1 372 2 350 1 262 1 176 1 216 1 14 1 85 1 267 1 
222 1 117 1 229 1 372 1 184 1 125 1 174 1 14 1 191 1 221 1 
311 2 324 2 1 2 260 2 229 5 372 5 333 2 174 5 205 5 167 1 206 5 177 2 263 10 253 1 307 5 
174 1 115 1 226 1 337 1 20 1 221 1 
111 1 222 2 115 3 274 2 117 2 226 3 275 1 302 1 73 2 229 2 20 4 138 2 187 1 281 1 282 1 191 1 337 2 365 1 52 4 51 1 366 1 54 2 212 1 124 4 372 2 318 1 14 2 295 4 359 1 
158 1 111 1 113 2 73 1 332 1 186 1 364 2 140 1 4 2 335 3 282 1 143 1 28 1 339 1 365 1 52 1 55 1 103 1 123 1 124 1 315 1 288 1 350 2 126 1 262 2 151 1 318 1 154 1 267 3 295 1 87 1 63 1 
67 1 222 1 274 1 117 1 229 1 372 2 138 1 174 4 205 2 206 2 263 4 307 2 14 1 191 1 221 2 
66 1 297 1 367 1 
66 1 292 1 30 1 353 1 367 1 
66 1 297 1 367 1 
66 1 297 1 367 1 
66 1 219 1 367 1 
66 1 219 1 367 1 
66 1 219 1 367 1 
66 1 367 1 
120 1 70 1 
67 1 158 8 55 4 123 2 328 1 260 1 34 1 213 1 288 2 333 1 230 1 186 2 61 3 126 2 364 4 176 1 192 1 99 2 341 4 133 1 
67 1 158 6 55 3 328 1 34 1 260 1 213 1 333 1 61 2 168 1 176 1 99 2 133 1 341 3 
158 4 121 1 55 2 324 1 1 1 123 1 260 1 288 1 186 1 333 1 230 1 61 2 126 1 364 2 177 1 99 1 341 2 
158 7 324 1 55 4 273 1 1 1 260 1 137 1 95 2 333 1 230 1 61 2 177 1 264 1 99 1 341 3 
67 1 158 23 324 2 1 2 328 2 137 2 95 2 230 4 333 3 186 2 364 4 192 2 99 5 341 11 55 12 287 1 123 2 34 1 260 3 213 1 288 2 81 1 61 9 126 2 176 2 177 2 264 1 133 1 110 1 
158 1 55 1 95 1 
158 1 137 1 341 1 
158 6 121 1 55 3 324 1 1 1 123 1 260 1 288 1 186 1 333 1 230 1 61 3 126 1 364 2 167 1 177 1 99 2 341 3 
158 12 324 2 273 1 1 2 137 1 303 1 95 1 230 1 186 1 333 2 364 2 232 1 279 1 99 1 341 6 55 6 346 1 123 1 80 1 260 2 288 1 61 2 126 1 200 1 177 2 
158 6 55 3 328 1 260 1 213 1 333 1 230 1 61 2 176 1 99 1 341 3 
158 3 55 2 123 1 328 1 34 1 288 1 81 1 230 1 186 1 61 2 126 1 364 2 176 1 192 1 99 1 341 1 133 1 
158 10 55 5 123 1 241 1 328 2 80 1 260 2 288 1 213 1 186 1 230 2 333 2 61 5 126 1 364 2 176 2 99 3 341 5 
158 2 1 1 123 1 80 1 288 1 186 1 333 1 230 1 61 1 126 1 364 2 341 2 
158 4 55 2 324 1 1 1 123 1 260 1 80 1 288 1 186 1 333 1 230 1 61 2 126 1 364 2 177 1 99 1 341 2 
158 3 55 2 123 3 328 1 80 1 288 3 81 1 186 3 230 1 61 2 126 3 364 6 176 1 27 1 192 1 99 1 341 1 
67 1 158 34 204 1 324 3 273 1 1 3 328 3 137 3 95 4 186 5 333 5 230 5 23 1 364 10 27 1 192 2 99 7 340 1 341 16 121 1 55 18 123 5 34 1 80 1 260 5 213 2 288 5 81 1 61 12 126 5 176 3 177 3 264 1 133 1 
67 1 158 8 273 1 328 1 137 1 95 1 333 1 186 1 364 2 99 2 341 4 55 4 123 1 260 1 80 1 34 1 288 1 213 1 61 2 126 1 200 1 176 1 133 1 
67 1 158 11 273 1 1 1 328 1 137 1 95 2 186 2 333 2 230 1 364 4 99 2 341 6 121 1 55 5 123 2 260 1 34 1 80 1 213 1 288 2 61 3 126 2 176 1 200 1 177 1 264 1 133 1 
67 1 158 19 324 2 273 1 1 2 328 1 137 1 303 1 95 1 230 1 186 3 333 3 364 6 232 1 279 1 192 1 99 3 341 9 121 1 55 10 346 1 123 3 34 1 80 1 260 3 213 1 288 3 61 4 126 3 176 1 200 1 177 2 133 1 
67 1 158 17 324 1 273 1 1 2 328 1 137 1 303 1 95 1 230 2 186 3 333 3 364 6 232 1 279 1 192 1 99 3 341 10 121 1 55 7 346 1 123 3 34 1 80 1 260 2 213 1 288 3 61 5 126 3 176 1 200 1 177 2 133 1 
67 1 158 8 273 1 328 1 137 1 95 1 333 1 186 1 364 2 99 2 341 4 55 4 123 1 260 1 80 1 34 1 288 1 213 1 61 2 126 1 200 1 176 1 133 1 
158 12 324 2 273 1 1 2 137 1 303 1 95 1 230 1 186 1 333 2 364 2 232 1 279 1 99 1 341 6 55 6 346 1 123 1 80 1 260 2 288 1 61 2 126 1 200 1 177 2 
67 1 158 18 324 1 273 1 1 2 328 1 137 1 303 1 95 1 230 2 186 4 333 3 364 8 232 1 279 1 192 2 99 3 341 10 121 1 55 8 346 1 123 4 34 1 80 1 260 2 213 1 288 4 61 5 126 4 176 1 200 1 177 2 133 1 
158 16 324 2 273 1 1 3 137 1 303 1 95 1 230 3 186 4 333 3 364 8 232 1 279 1 27 1 192 2 99 3 341 9 55 7 346 1 123 4 80 1 260 2 288 4 61 6 126 4 200 1 177 3 
158 7 55 4 328 3 260 1 34 1 213 1 230 3 333 1 61 6 176 3 99 3 133 2 341 3 
67 1 158 18 324 1 273 1 1 2 328 1 137 1 303 1 95 1 230 1 186 4 333 3 364 8 232 1 279 1 27 1 192 2 99 3 341 10 55 8 346 1 123 4 34 1 80 1 260 2 213 1 288 4 61 4 126 4 176 1 200 1 177 2 133 1 
262 1 199 1 319 1 335 1 267 1 71 1 87 1 
102 1 146 1 71 1 363 1 199 1 262 1 153 1 319 1 335 1 179 1 267 1 87 1 
111 1 318 1 168 1 282 1 124 1 365 1 51 1 52 1 73 1 295 1 366 1 
111 1 113 1 124 1 73 1 315 1 332 1 262 1 318 1 4 1 335 2 282 1 50 1 365 1 267 2 52 1 295 1 87 1 63 1 
111 2 113 1 332 1 4 2 282 1 335 2 50 1 365 3 52 1 78 1 254 1 54 1 124 1 315 1 262 2 373 1 318 1 217 1 85 1 267 2 295 1 87 1 63 2 
111 2 113 1 298 1 332 1 4 2 282 1 335 2 50 1 365 3 52 2 78 1 254 1 54 1 124 2 262 2 373 1 318 1 217 1 85 1 267 2 295 2 109 1 87 1 63 2 
323 1 161 1 113 1 115 2 226 2 331 1 20 1 304 1 4 1 335 1 365 2 339 1 52 1 54 1 259 1 124 1 350 1 174 1 262 1 216 1 85 1 267 1 268 1 295 1 221 1 
111 1 54 1 223 1 115 2 226 2 124 3 259 1 73 1 331 1 20 1 174 1 373 1 318 1 217 1 282 1 365 4 52 3 268 1 295 3 109 1 221 1 63 1 
318 1 282 1 124 1 52 1 295 1 203 1 
111 2 69 1 272 1 124 7 59 1 2 1 73 2 83 1 175 1 318 3 207 1 25 1 282 2 365 3 357 1 52 7 171 1 295 6 156 1 203 1 63 1 
328 2 332 1 183 1 230 1 186 2 333 3 97 1 140 2 4 1 233 1 335 2 143 2 282 1 50 1 99 4 52 1 341 7 103 1 55 7 241 1 288 2 61 5 151 1 295 1 63 1 158 14 67 1 111 1 113 1 116 1 166 1 364 4 365 1 208 1 123 2 124 1 34 1 260 3 315 1 213 2 36 1 175 1 126 2 262 1 318 1 176 2 85 1 267 2 133 1 87 3 
18 1 222 2 89 1 223 1 115 3 117 2 226 3 329 1 229 1 73 1 331 1 20 2 184 1 191 2 337 1 365 2 52 1 124 1 259 1 372 1 148 1 174 1 125 1 14 2 268 1 295 1 221 1 359 1 
111 1 259 1 124 2 83 1 175 1 62 1 318 2 282 1 365 2 52 2 295 2 203 1 63 1 
111 1 41 1 124 4 73 1 175 1 318 1 282 1 365 1 52 4 51 1 295 4 109 1 366 1 
111 1 250 1 69 1 54 1 124 2 2 1 96 1 318 2 282 1 365 1 52 2 295 2 64 1 63 1 
318 1 48 1 246 1 282 1 124 1 52 1 73 1 164 1 295 1 118 1 
111 1 272 1 124 2 175 1 318 1 282 1 365 1 52 2 357 1 295 2 100 1 
111 2 41 1 54 1 272 1 124 5 73 1 59 1 175 1 318 2 282 2 365 3 51 1 52 5 295 4 171 1 366 1 
111 2 41 1 54 1 272 1 124 5 73 1 175 1 10 1 318 2 282 2 365 3 51 1 52 5 295 4 171 1 366 1 
111 1 113 1 298 1 124 1 73 1 332 1 262 1 318 1 4 1 335 2 282 1 50 1 365 1 267 2 52 1 295 1 87 1 63 1 
111 1 69 1 54 1 124 1 2 1 83 1 318 2 207 1 282 1 365 1 52 1 295 1 63 1 
356 1 105 1 11 1 194 1 87 1 
322 1 345 1 115 2 299 1 226 2 331 1 148 1 174 1 37 1 45 1 356 2 105 2 11 1 85 1 194 2 254 1 78 1 87 1 221 1 
91 1 147 1 356 1 262 1 105 1 11 1 201 1 335 1 267 1 
322 1 45 1 11 1 
168 1 107 1 82 1 244 1 
19 1 128 1 224 1 107 1 82 1 244 1 157 1 
19 1 228 1 362 1 
19 3 224 1 242 1 8 1 82 1 244 1 26 1 128 1 193 1 107 1 15 2 157 3 
19 2 326 1 128 1 224 1 107 1 94 1 82 1 244 1 157 2 
342 1 375 1 19 1 246 1 182 1 128 1 224 1 107 1 242 1 164 1 157 1 
19 1 128 1 224 1 107 1 242 1 244 1 157 1 
19 1 128 1 224 1 242 1 82 1 244 2 157 1 
343 1 19 2 224 2 242 1 244 1 245 1 293 1 128 2 107 1 157 2 
68 1 342 1 19 3 224 1 327 1 242 1 94 2 82 1 244 1 128 1 107 2 53 1 157 3 
19 2 182 1 224 1 242 1 164 1 94 1 82 1 244 1 185 1 48 1 246 2 128 1 107 1 269 1 157 2 
342 1 19 4 224 2 326 1 162 1 242 1 94 2 82 1 244 1 128 2 107 2 53 1 157 4 
19 1 128 1 224 1 107 1 242 1 82 1 244 1 157 1 
284 1 342 1 19 4 224 1 8 1 94 2 82 2 244 2 26 1 128 1 107 3 15 1 53 1 157 4 
19 2 224 1 242 1 44 1 94 1 82 1 244 1 128 1 107 1 249 1 379 1 157 2 
197 1 19 3 224 1 242 1 8 2 82 1 244 1 26 1 128 1 107 1 15 2 157 3 
92 1 225 2 107 2 145 1 
19 1 128 1 224 1 283 1 242 1 157 1 
68 1 19 2 128 1 224 1 107 1 242 1 94 1 82 1 244 1 157 2 
198 1 
19 1 128 1 224 1 107 1 242 1 82 1 244 1 157 1 
68 1 19 3 128 1 224 1 107 1 242 1 15 1 94 1 82 1 244 1 157 3 
284 1 342 1 107 1 53 1 
107 1 244 1 

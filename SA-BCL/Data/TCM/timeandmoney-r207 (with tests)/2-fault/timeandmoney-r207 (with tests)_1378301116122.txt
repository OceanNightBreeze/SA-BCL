#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 57 293 56 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (212,292) 115 134 37 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 57 188 152 190 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 57 188 152 190 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 57 188 152 190 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 57 188 152 190 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 57 275 152 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 57 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 57 275 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 57 293 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
280 1 4 5 245 2 5 1 220 1 282 2 114 1 285 9 136 1 137 1 315 2 228 2 22 1 317 1 204 1 139 1 50 1 259 2 164 3 55 9 301 6 325 2 58 1 332 1 172 1 370 2 369 4 273 1 
280 1 4 5 245 2 5 1 220 1 282 2 114 1 285 9 136 1 137 1 315 2 228 2 22 1 317 1 204 1 139 1 50 1 259 2 164 3 55 9 301 6 325 2 58 1 332 1 172 1 370 2 369 4 273 1 
280 1 4 6 245 2 5 1 220 1 282 2 114 1 285 10 136 1 137 1 315 2 228 2 22 1 317 1 204 1 139 1 50 1 259 2 164 4 55 10 301 7 325 2 58 1 332 1 172 1 370 2 369 5 273 1 
280 1 4 4 245 2 5 1 220 1 282 2 114 1 285 7 136 1 137 1 315 1 228 2 317 1 204 1 139 1 50 1 259 2 164 2 55 7 301 4 325 2 58 1 332 1 172 1 370 2 369 3 273 1 
139 1 280 1 4 3 5 1 164 1 259 1 282 1 114 1 55 4 301 3 325 1 285 4 315 2 228 1 22 1 370 1 369 2 204 1 
139 1 92 1 141 1 4 1 245 1 259 1 282 1 114 1 55 2 285 2 169 1 228 1 370 1 172 1 204 1 273 1 
139 1 4 2 245 1 164 1 114 1 55 3 301 1 285 3 137 1 228 2 370 2 369 1 204 1 
139 1 347 1 280 1 4 5 5 1 245 1 259 1 164 3 282 1 114 1 55 9 301 7 325 1 285 9 136 1 137 1 170 1 315 2 228 2 332 1 22 1 370 2 369 4 204 1 
139 1 347 1 280 1 4 5 5 1 245 1 259 1 164 3 282 1 114 1 55 9 301 7 325 1 285 9 136 1 137 1 170 1 315 2 228 2 332 1 22 1 370 2 369 4 204 1 
322 1 63 1 109 1 
63 1 84 1 111 2 
69 2 201 2 252 2 88 2 232 1 86 2 356 1 59 2 
150 1 19 1 151 1 219 1 86 2 178 1 69 3 201 3 252 2 354 2 88 2 116 2 291 1 89 2 45 1 356 1 358 1 90 1 119 1 23 1 47 1 142 1 121 2 74 1 232 1 94 1 145 1 95 1 12 1 264 1 99 1 266 1 239 1 101 1 33 1 272 2 59 2 
69 1 201 1 252 1 88 1 108 1 86 1 356 1 59 1 365 1 77 1 
276 1 257 1 322 1 230 1 63 1 143 1 131 1 77 1 250 1 201 1 69 1 171 1 360 1 59 1 
276 1 257 1 322 1 230 1 63 1 143 2 86 1 77 1 252 1 201 1 69 1 88 1 171 2 360 1 59 1 
199 1 143 1 171 1 352 1 312 1 
199 1 322 1 63 1 143 2 171 2 352 1 183 1 237 1 
199 1 143 1 171 1 
255 1 143 1 108 1 86 1 352 1 365 1 77 1 252 1 201 1 69 1 88 1 171 1 356 1 59 1 
63 1 
199 1 322 1 63 1 143 2 171 2 357 1 352 1 237 1 
278 2 322 1 231 1 63 1 128 2 143 5 247 1 196 1 352 2 237 1 225 1 226 1 199 2 41 2 8 1 171 5 253 1 308 1 334 1 
232 1 109 1 
350 1 64 1 232 2 86 1 201 2 69 2 252 1 88 1 59 2 
21 1 115 1 212 1 
121 1 150 1 19 1 151 1 219 1 232 1 95 1 13 1 12 1 69 1 201 1 354 1 116 1 264 1 239 1 358 1 
150 1 121 1 151 1 19 1 219 1 129 1 86 1 95 1 12 1 344 1 201 2 69 2 354 1 88 1 264 1 116 1 212 1 239 1 358 1 59 1 
344 1 252 1 69 3 201 3 88 3 232 1 86 3 59 3 
69 1 201 1 88 1 108 1 86 1 59 1 77 1 
350 1 69 1 201 1 252 1 88 1 64 1 86 1 59 1 77 1 
276 1 150 1 151 1 19 1 38 1 219 1 64 1 129 1 86 3 252 2 69 4 201 4 354 1 88 3 116 1 89 1 45 1 356 1 358 1 90 1 360 1 23 1 47 1 257 1 142 1 230 1 121 1 143 1 232 1 94 1 95 1 77 1 12 1 148 1 344 1 264 1 99 1 266 1 239 1 171 1 101 1 33 1 272 2 59 3 
344 1 69 2 201 2 88 1 232 1 26 1 131 1 86 1 59 2 
276 1 257 1 230 1 63 1 38 1 64 1 143 1 129 1 86 3 77 1 344 2 252 1 201 3 69 3 88 3 171 1 360 1 59 3 104 1 
64 1 86 2 21 1 344 1 252 1 201 2 69 2 88 2 212 1 59 2 
121 1 150 1 19 1 151 1 219 1 232 1 95 1 12 1 69 1 201 1 354 1 116 1 264 1 239 1 358 1 
121 1 150 1 151 1 219 1 232 1 95 1 133 1 12 1 69 1 201 1 354 1 116 1 264 1 358 1 158 1 
83 1 353 1 21 2 87 1 115 2 292 1 89 4 90 1 159 1 361 1 295 1 91 1 23 1 47 1 142 1 122 1 74 2 94 1 266 1 32 1 212 2 101 2 272 2 346 1 
257 1 69 1 201 1 88 1 281 1 86 1 59 1 77 1 
64 1 129 1 26 1 232 1 131 1 86 4 344 2 201 5 69 5 252 1 304 1 88 4 331 1 59 5 
69 2 201 2 88 2 281 1 108 1 86 2 59 2 77 1 
209 1 339 1 
209 1 339 1 
144 1 113 1 
144 1 113 1 
144 1 113 1 
209 1 339 1 30 1 
209 1 339 1 30 1 
240 1 209 1 339 1 
207 1 209 2 339 2 363 1 144 1 113 1 
209 1 339 1 30 1 
209 1 339 1 311 1 
209 1 339 1 311 1 
209 1 339 1 311 1 
120 1 205 1 162 1 1 1 208 1 63 1 209 2 339 2 243 2 143 2 363 1 186 2 176 3 326 2 29 1 71 1 171 2 44 2 81 2 
335 1 240 1 243 1 86 2 176 1 201 2 69 2 88 2 44 1 46 1 162 1 209 1 339 1 143 1 232 1 364 1 186 1 303 1 171 1 79 1 269 1 80 1 81 1 59 2 
325 1 259 1 282 1 
169 1 259 1 282 1 
11 1 126 1 325 2 287 1 169 1 259 3 
11 1 126 1 325 1 169 1 259 2 229 1 
11 1 325 1 126 2 169 1 259 2 
105 1 278 1 63 2 128 1 107 1 130 2 84 1 111 3 352 4 153 1 225 2 135 1 226 1 199 1 41 1 361 1 184 2 91 1 322 1 231 3 25 2 143 5 364 1 237 1 54 1 328 1 79 1 32 1 171 5 371 1 346 1 80 1 
105 3 278 2 63 5 128 2 107 1 84 3 111 9 352 7 153 2 312 5 225 6 199 6 226 1 284 1 41 2 253 1 361 3 184 6 91 3 24 1 322 1 231 8 25 6 143 9 75 5 147 1 237 1 54 2 32 3 171 9 270 1 333 1 346 3 80 4 215 1 
278 1 105 1 63 3 128 1 130 1 84 2 111 4 352 2 153 1 135 1 225 2 41 1 253 1 361 1 184 2 91 1 322 1 231 3 25 2 143 3 54 1 328 1 32 1 171 3 346 1 80 1 
278 1 105 2 63 4 128 1 130 2 84 3 111 7 352 3 153 1 135 1 225 4 41 1 253 1 361 2 184 4 91 2 24 1 322 1 231 5 25 4 143 4 147 1 54 1 328 1 32 2 171 4 270 1 346 2 80 2 
200 1 109 1 358 1 
358 1 167 1 
76 1 
264 1 358 1 
200 2 343 1 264 1 219 1 263 1 358 3 
264 1 219 1 358 1 
206 1 358 1 
295 2 91 1 106 1 74 4 83 3 27 1 10 1 165 2 300 1 261 1 97 1 337 1 189 1 101 3 89 7 346 1 214 1 
295 2 91 1 106 1 74 4 83 3 27 1 10 1 165 2 300 1 261 1 97 1 337 1 189 1 101 3 89 7 346 1 214 1 
295 2 91 1 362 1 106 1 74 4 83 3 27 1 10 1 165 2 300 1 261 1 97 1 337 1 189 1 101 3 89 7 346 1 214 1 
300 1 56 1 74 2 189 2 101 1 57 1 306 1 293 1 89 3 175 1 165 1 
106 1 83 4 85 1 89 9 90 2 295 3 91 1 23 2 47 2 74 5 49 1 94 2 27 1 10 1 165 2 300 1 261 1 97 1 189 1 101 4 272 4 346 1 214 1 274 1 
151 1 4 1 194 1 245 1 221 1 282 1 114 1 285 2 354 1 287 1 116 1 228 1 181 1 204 1 139 1 160 1 296 1 121 1 259 2 366 1 55 2 301 1 325 1 302 1 12 1 169 1 330 1 370 1 82 1 36 1 
151 1 4 1 194 1 245 1 282 1 114 1 285 3 287 1 354 1 116 1 228 1 204 1 156 1 160 1 296 1 121 1 259 2 341 1 366 1 53 1 55 3 301 2 325 1 302 1 12 1 169 1 330 1 370 1 82 1 36 1 
151 1 4 1 245 1 282 1 114 1 285 2 354 1 287 1 116 1 204 1 160 1 296 1 121 1 259 2 341 1 366 1 53 1 55 2 301 2 12 1 325 1 169 1 330 1 82 1 36 1 
296 2 121 1 151 1 245 2 65 1 95 1 249 1 55 1 12 1 28 1 285 1 168 1 354 1 264 1 327 1 116 1 330 2 228 1 368 1 370 1 358 1 156 1 36 2 
151 1 194 1 245 1 282 1 285 1 354 1 287 1 116 1 228 1 181 1 139 1 160 1 296 1 121 1 259 2 366 1 53 1 55 1 325 1 302 1 12 1 169 1 330 1 370 1 82 1 36 1 
187 1 
276 1 278 1 218 1 128 1 84 2 131 1 225 2 226 1 41 1 230 1 231 2 340 2 143 5 95 2 237 3 54 1 342 1 12 1 103 2 59 1 61 2 191 1 309 1 63 2 151 1 192 1 242 1 111 2 199 6 251 1 250 1 354 2 201 1 69 1 116 2 117 1 358 1 157 1 360 1 319 2 256 4 257 1 322 1 121 2 258 1 324 1 77 1 210 2 28 1 264 1 327 1 211 2 171 5 271 2 34 1 
276 1 192 1 242 1 131 1 199 2 250 1 69 1 201 1 117 1 357 1 360 1 157 1 256 2 257 1 230 1 143 3 324 1 77 1 237 1 210 1 171 3 59 1 
276 1 192 1 242 1 63 1 131 1 199 1 250 1 69 1 201 1 117 1 357 1 360 1 157 1 256 3 257 1 230 1 322 1 340 1 143 3 324 1 77 1 237 1 171 3 59 1 
276 1 192 1 242 1 63 1 131 1 199 2 250 1 69 1 201 1 117 1 357 1 360 1 157 1 256 3 257 1 230 1 322 1 340 1 143 3 324 1 237 1 77 1 210 1 171 3 211 1 59 1 
276 1 278 1 61 2 191 1 309 1 63 5 192 1 242 1 128 1 84 2 310 1 131 1 225 1 226 1 199 7 250 1 201 1 69 1 41 1 117 1 357 1 157 1 360 1 294 1 319 2 256 6 257 1 322 5 230 1 231 1 340 4 143 5 93 1 324 1 236 1 237 3 77 1 210 4 98 1 171 5 211 4 271 2 103 2 59 1 
276 1 278 1 128 1 84 2 131 1 226 1 225 1 41 1 230 1 231 1 340 2 143 4 237 2 59 1 103 2 191 1 61 2 309 1 242 1 192 1 63 2 111 2 199 4 250 1 251 1 69 1 201 1 117 1 360 1 157 1 256 4 319 2 257 1 322 1 324 1 77 1 210 2 171 4 211 2 271 2 
276 1 278 1 61 2 191 1 309 1 63 1 192 1 242 1 128 1 84 2 310 1 131 1 199 4 225 1 226 1 250 1 69 1 201 1 41 1 117 1 360 1 157 1 294 1 319 2 256 4 257 1 322 1 230 1 231 1 340 2 143 4 93 1 324 1 237 2 77 1 210 2 211 2 171 4 271 2 103 2 59 1 
276 1 278 1 61 2 191 1 309 1 63 1 192 1 242 1 128 1 84 2 310 1 131 1 199 4 225 1 226 1 250 1 69 1 201 1 41 1 117 1 360 1 157 1 294 1 319 2 256 4 257 1 322 1 230 1 231 1 340 2 143 4 93 1 324 1 237 2 77 1 210 2 211 2 171 4 271 2 103 2 59 1 
276 1 278 1 191 1 63 1 192 1 242 1 128 1 111 2 131 1 199 4 225 1 226 1 250 1 68 2 69 1 201 1 70 1 41 1 117 1 360 1 157 1 294 1 256 4 257 1 322 1 230 1 231 1 340 2 143 4 323 2 324 1 237 2 77 1 210 2 15 1 211 2 171 4 271 2 103 2 59 1 149 1 
276 1 278 1 61 2 191 1 309 1 63 1 192 1 242 1 128 1 84 2 310 1 131 1 225 1 226 1 199 5 250 1 69 1 201 1 41 1 117 1 360 1 157 1 294 1 319 2 256 5 257 1 322 1 230 1 231 1 340 3 143 4 93 1 324 1 237 2 77 1 210 3 98 1 171 4 211 3 271 2 103 2 59 1 
276 1 278 1 61 2 191 1 309 1 63 1 192 1 242 1 128 1 84 2 310 1 131 1 225 1 226 1 199 5 250 1 69 1 201 1 41 1 117 1 360 1 157 1 294 1 319 2 256 5 257 1 322 1 230 1 231 1 340 3 143 4 93 1 324 1 237 2 77 1 210 3 98 1 171 4 211 3 271 2 103 2 59 1 
276 1 278 1 128 1 131 1 226 1 225 1 41 1 230 1 231 1 340 2 143 4 237 2 59 1 103 2 149 1 191 1 242 1 192 1 63 1 111 2 199 4 250 1 251 1 69 1 201 1 68 2 117 1 360 1 157 1 256 4 257 1 322 1 323 2 324 1 77 1 210 2 171 4 211 2 271 2 
106 1 83 2 109 1 353 1 21 1 115 1 89 6 90 1 295 2 23 1 91 1 47 1 142 1 74 3 232 2 94 1 27 1 10 1 165 1 261 1 97 1 266 1 212 1 101 3 272 2 346 1 
37 1 23 1 47 1 142 1 74 1 94 1 175 1 134 1 66 1 115 3 266 1 212 3 101 1 306 1 89 2 272 2 90 1 
216 1 150 1 151 1 19 1 219 1 129 1 86 1 177 1 178 1 66 1 21 1 354 1 69 2 201 2 88 1 116 1 180 1 45 1 89 2 358 1 90 1 23 1 47 1 121 1 142 1 74 1 232 1 94 1 95 1 12 1 13 1 344 1 264 1 266 1 239 1 101 1 272 2 59 1 
279 2 219 2 129 1 83 8 86 1 178 1 88 1 227 1 289 2 45 1 89 20 90 3 295 4 91 3 47 3 142 3 232 2 94 3 10 1 95 1 53 1 97 1 12 2 344 1 238 2 239 2 101 10 346 3 59 1 105 2 106 1 150 2 19 2 151 2 154 1 66 1 21 7 354 3 201 3 69 3 115 7 155 1 116 3 358 2 361 2 23 3 121 3 74 10 27 1 165 1 261 1 264 2 266 3 212 7 32 2 33 2 127 2 272 6 214 4 
349 1 151 2 221 1 86 1 353 1 178 1 286 1 69 1 201 1 354 8 88 1 314 1 116 7 338 1 89 2 45 1 358 3 90 2 119 2 23 2 320 1 47 2 140 1 121 8 142 2 74 1 94 2 95 2 53 1 12 2 28 1 344 1 265 1 327 1 264 2 266 2 101 1 272 4 59 1 
105 1 64 1 83 1 195 1 86 1 66 1 21 1 115 1 252 1 201 1 69 1 88 1 89 3 90 1 361 1 295 1 23 1 91 1 47 1 142 1 74 1 94 1 266 1 212 1 32 1 101 2 272 2 346 1 59 1 
23 1 91 1 47 1 142 1 122 1 74 2 83 1 94 1 353 1 21 1 115 1 266 1 212 1 89 2 272 2 214 1 90 1 361 1 
295 1 23 1 47 1 142 1 83 1 94 1 353 1 21 1 115 1 87 1 266 1 212 1 32 1 101 2 89 2 272 2 346 1 90 1 
105 1 83 2 353 1 21 2 115 2 89 4 90 1 361 1 295 1 91 1 23 1 47 1 142 1 74 2 94 1 266 1 212 2 32 1 101 2 272 2 214 1 346 1 
23 1 91 1 140 1 47 1 142 1 122 1 74 2 83 1 94 1 21 1 115 1 266 1 212 1 89 2 272 2 214 1 90 1 361 1 
295 1 23 1 140 1 47 1 142 1 83 1 94 1 21 1 115 1 87 1 266 1 212 1 32 1 101 2 89 2 272 2 346 1 90 1 
105 1 83 2 21 2 115 2 89 4 90 1 361 1 295 1 91 1 23 1 47 1 140 1 142 1 74 2 94 1 266 1 212 2 32 1 101 2 272 2 214 1 346 1 
105 1 83 2 21 2 115 2 89 4 90 1 361 1 295 1 91 1 23 1 47 1 142 1 74 2 94 1 266 1 212 2 32 1 101 2 272 2 214 1 346 1 
150 1 151 1 19 1 219 1 178 1 354 1 201 1 69 1 116 1 89 2 45 1 358 1 90 1 23 1 47 1 121 1 142 1 74 1 232 1 94 1 95 1 12 1 264 1 266 1 239 1 33 1 101 1 272 2 
150 1 151 1 219 1 133 1 178 1 354 1 201 1 69 1 116 1 118 1 89 2 45 1 358 1 90 1 158 1 23 1 47 1 121 1 142 1 74 1 232 1 94 1 95 1 12 1 264 1 266 1 101 1 272 2 
105 1 83 2 66 1 21 2 115 2 89 4 90 1 361 1 295 1 91 1 23 1 47 1 142 1 74 2 94 1 266 1 212 2 32 1 101 2 272 2 214 1 346 1 
105 1 150 1 151 1 19 1 219 1 83 2 221 1 21 2 115 2 354 1 201 1 69 1 116 1 289 1 89 4 358 1 90 1 361 1 295 1 91 1 23 1 47 1 121 1 142 1 74 2 94 1 12 1 264 1 266 1 32 1 212 2 239 1 101 2 33 1 272 2 346 1 214 1 
105 1 217 1 64 1 83 1 86 1 66 1 21 1 252 1 201 1 69 1 115 1 88 1 89 3 90 1 361 1 23 1 91 1 47 1 142 1 74 2 94 1 266 1 32 1 212 1 101 1 272 2 346 1 214 1 59 1 
23 1 47 1 74 2 152 1 246 1 94 1 175 1 188 1 268 1 101 2 57 1 190 1 306 1 89 4 272 2 90 1 274 1 
23 1 47 1 74 2 152 1 246 1 94 1 175 1 188 1 268 1 101 2 57 1 190 1 306 1 89 4 272 2 90 1 274 1 
23 1 47 1 74 2 152 1 246 1 94 1 175 1 188 1 268 1 101 2 57 1 190 1 306 1 89 4 272 2 90 1 274 1 
23 1 47 1 74 2 152 1 246 1 94 1 175 1 188 1 268 1 101 2 57 1 190 1 306 1 89 4 272 2 90 1 274 1 
275 1 23 1 47 1 74 4 152 2 246 1 94 1 175 2 188 2 57 2 268 2 101 4 190 1 306 2 89 8 272 2 90 1 274 1 
29 1 208 1 209 1 243 1 339 1 363 1 351 1 44 1 186 1 81 1 
240 1 46 1 
209 1 243 1 339 1 316 1 44 1 102 1 186 1 81 1 367 1 
120 1 205 1 162 1 1 1 208 1 63 1 209 1 339 1 243 1 143 1 363 1 186 1 176 2 326 1 29 1 171 1 44 1 81 1 
120 1 205 1 162 1 1 1 208 1 63 1 209 1 339 1 243 1 143 1 363 1 186 1 176 2 326 1 29 1 171 1 44 1 81 1 
120 1 205 1 162 1 1 1 208 1 63 1 209 1 339 1 243 1 143 1 363 1 186 1 176 2 326 1 29 1 171 1 44 1 81 1 
60 1 207 1 30 1 
60 1 207 1 30 1 
174 1 311 1 
207 1 174 1 311 1 
335 1 269 1 
335 1 240 1 243 1 86 2 352 1 176 1 69 2 201 2 88 2 44 1 46 1 120 1 209 1 339 1 143 1 232 1 364 1 186 1 326 1 303 1 31 1 171 1 79 1 269 1 80 1 81 1 59 2 
60 1 30 1 
207 1 174 1 311 1 
151 1 6 1 178 1 66 1 67 1 354 2 69 2 201 2 338 1 116 2 89 2 45 1 358 1 90 1 254 1 119 2 23 1 47 1 121 2 142 1 74 1 94 1 51 1 12 1 264 1 265 1 266 1 329 1 101 1 272 2 59 2 
9 1 160 1 121 2 151 1 234 1 259 2 221 1 282 1 366 1 53 1 325 1 12 1 302 1 287 1 169 1 354 2 179 1 116 2 330 1 
9 1 160 1 121 1 151 1 259 2 282 1 283 1 366 1 53 1 325 1 302 1 12 1 287 1 169 1 354 1 116 1 330 1 
121 1 151 1 65 1 95 1 248 1 12 1 28 1 354 1 179 1 264 1 116 1 327 1 330 1 358 1 
9 1 160 1 121 1 151 1 234 1 259 2 282 1 366 1 53 1 325 1 302 1 12 1 287 1 169 1 354 1 179 1 116 1 330 1 
35 1 
225 1 322 1 231 1 63 1 109 1 247 1 196 1 
278 1 61 1 309 1 63 2 128 1 84 1 111 1 225 1 226 1 199 1 41 1 319 1 322 1 231 1 143 1 237 1 171 1 
277 2 278 4 3 1 219 3 128 4 84 6 221 1 40 2 226 4 225 8 42 1 41 4 288 2 184 6 91 2 230 2 231 9 143 5 233 2 95 1 299 1 52 2 54 2 237 3 12 3 14 2 238 2 305 1 346 2 105 2 241 1 62 2 151 4 63 8 247 1 111 12 196 1 197 2 199 5 200 2 354 3 116 3 358 10 361 2 322 2 121 3 206 2 25 6 167 3 264 3 263 1 171 5 32 2 34 1 
275 1 0 1 278 2 105 2 63 5 128 2 84 3 110 1 111 6 175 1 40 2 199 1 226 2 225 5 138 1 41 2 361 2 184 5 91 2 322 2 231 8 25 5 143 1 235 1 96 1 54 1 237 1 78 1 14 1 171 1 32 2 57 1 34 1 306 1 346 2 
278 1 128 1 310 1 108 1 86 1 40 2 226 1 225 2 69 1 201 1 252 1 41 1 88 1 356 1 91 2 255 1 231 2 123 1 143 1 27 1 10 1 365 1 77 1 261 1 14 1 171 1 346 1 59 1 
225 1 278 1 226 1 322 1 231 1 63 1 41 1 128 1 247 1 196 1 
105 2 91 2 63 5 231 5 25 5 84 5 111 10 40 2 225 5 14 1 238 1 32 2 346 2 361 2 184 5 
199 1 322 1 63 1 143 1 171 1 237 1 
278 2 151 1 218 1 3 1 128 2 226 1 199 4 225 2 354 4 41 2 116 4 253 1 73 1 358 1 161 1 121 4 231 2 143 3 95 2 299 2 54 2 237 2 342 1 12 1 28 1 264 1 327 1 171 3 34 2 
150 1 19 1 151 1 219 1 86 2 354 1 69 3 201 3 252 2 88 2 116 1 89 1 45 1 356 1 358 1 90 1 23 1 47 1 121 1 142 1 232 1 94 1 95 1 12 1 99 1 264 1 266 1 239 1 101 1 33 1 272 2 59 2 
278 1 322 2 231 1 63 4 25 2 128 1 84 2 111 4 165 1 54 1 225 2 226 1 41 1 34 1 184 2 
243 1 186 1 132 1 
243 1 186 1 132 1 
208 1 243 1 269 1 186 1 125 1 
243 1 186 1 132 1 
243 1 222 1 186 1 
243 1 222 1 186 1 
243 1 222 1 186 1 
243 1 186 1 
209 1 339 1 
275 1 23 1 47 1 74 1 101 1 57 1 94 1 306 1 89 2 272 2 175 1 90 1 274 1 
275 1 23 2 47 2 74 1 193 1 94 2 175 1 57 1 101 1 306 1 272 4 89 2 90 2 274 1 
275 1 0 1 105 2 106 1 193 1 83 4 85 1 175 1 89 19 90 3 361 2 295 3 23 3 91 3 47 3 74 9 94 3 235 1 27 1 10 1 165 1 96 1 78 1 261 1 97 1 32 2 101 10 57 1 306 1 272 6 214 1 346 3 274 1 
275 1 23 1 47 1 74 1 101 1 57 1 94 1 306 1 89 2 272 2 175 1 90 1 274 1 
275 1 23 1 47 1 74 1 101 1 57 1 94 1 306 1 89 2 272 2 175 1 90 1 274 1 
275 1 105 2 0 1 83 2 175 1 89 12 90 1 361 2 295 1 23 1 91 2 47 1 74 6 94 1 235 1 96 1 78 1 32 2 101 6 57 1 306 1 272 2 214 1 346 2 274 1 
275 1 23 2 47 2 74 1 193 1 94 2 175 1 57 1 101 1 306 1 272 4 89 2 90 2 274 1 
275 1 23 2 47 2 163 1 74 1 94 2 175 1 57 1 101 1 306 1 272 4 89 2 90 2 274 1 
295 3 91 1 106 2 74 3 83 6 27 3 10 1 261 3 97 1 101 4 89 7 346 1 214 3 
275 1 23 2 47 2 163 1 74 1 94 2 175 1 57 1 101 1 306 1 272 4 89 2 90 2 274 1 
295 2 91 1 23 2 47 2 106 1 74 4 83 3 94 2 85 1 27 1 10 1 165 1 261 1 97 1 101 4 89 8 272 4 346 1 214 1 90 2 
295 2 91 1 106 1 74 3 83 2 109 1 27 1 10 1 165 1 261 1 97 1 101 3 89 6 346 1 
295 1 23 1 105 1 91 1 47 1 193 1 74 2 83 2 94 1 32 1 101 2 272 2 89 4 346 1 214 1 90 1 361 1 
74 1 101 1 57 1 306 1 89 2 175 1 
134 1 74 1 101 1 306 1 89 2 175 1 
101 1 89 1 175 1 
74 1 89 1 306 1 
295 2 23 1 105 1 91 1 47 1 193 1 74 3 83 3 94 1 238 1 32 1 101 3 272 2 89 6 214 1 346 1 90 1 361 1 
275 1 23 1 47 1 74 1 101 1 57 1 94 1 306 1 89 2 272 2 175 1 90 1 274 1 
295 1 91 1 74 3 83 2 27 1 10 1 261 1 101 3 89 6 346 1 214 1 
295 1 23 1 47 1 106 1 74 1 185 1 83 2 85 1 94 1 27 1 261 1 97 1 101 2 89 3 272 2 214 1 90 1 
295 3 23 1 91 2 47 1 123 1 74 5 83 5 94 1 27 2 10 1 261 2 101 5 272 2 89 10 214 2 346 2 90 1 274 1 
23 1 91 1 47 1 74 2 83 1 94 1 272 2 89 2 214 1 90 1 274 1 361 1 
295 1 23 1 105 1 91 1 47 1 74 2 83 2 94 1 32 1 101 2 272 2 89 4 346 1 214 1 90 1 274 1 361 1 
295 1 23 3 47 3 163 1 185 1 74 1 83 2 85 1 94 3 27 1 261 1 101 2 89 3 272 6 214 1 90 3 274 1 
23 3 47 3 163 1 74 1 193 1 94 3 175 1 57 1 101 1 306 1 89 2 272 6 293 1 90 3 274 1 
69 1 201 1 267 1 232 1 26 1 131 1 59 1 
2 1 232 1 124 1 20 1 26 1 131 1 201 1 69 1 267 1 202 1 345 1 59 1 
12 1 28 1 354 1 121 1 151 1 264 1 327 1 116 1 109 1 358 1 95 1 
150 1 121 1 151 1 19 1 219 1 232 1 86 1 95 1 12 1 344 1 201 2 69 2 354 1 88 1 264 1 116 1 358 1 59 1 
276 1 257 1 206 1 62 1 150 1 121 1 151 1 19 1 219 2 232 1 86 2 299 1 77 1 12 1 344 1 201 2 69 2 354 1 88 1 264 2 116 1 358 3 59 2 
276 1 150 1 62 1 151 1 219 2 86 2 133 1 354 2 69 2 201 2 88 1 116 2 358 3 257 1 121 2 206 1 232 1 299 1 77 1 12 1 344 1 264 2 307 1 59 2 
62 1 151 1 63 1 219 1 200 1 199 1 354 3 116 3 355 1 358 4 121 3 206 1 230 1 322 1 143 2 95 1 167 1 299 1 12 1 264 1 171 2 307 1 173 1 
322 1 230 1 206 1 62 1 121 3 63 1 151 1 219 1 143 2 197 1 95 1 299 1 167 1 199 1 200 1 12 1 354 3 264 1 116 3 171 2 307 1 358 4 
12 1 320 1 354 1 121 1 151 1 116 1 
119 1 320 1 349 1 121 7 151 3 219 1 221 1 95 2 198 1 53 1 7 1 12 2 286 1 354 7 265 1 314 1 116 6 16 1 263 1 264 2 358 3 
106 1 279 1 150 1 151 1 19 1 219 1 83 2 221 1 86 1 66 1 21 1 115 1 69 2 201 2 354 1 88 1 116 1 289 1 89 6 358 1 90 2 295 2 254 1 91 1 23 2 47 2 142 2 121 1 74 3 232 2 94 2 27 1 10 1 165 1 261 1 97 1 12 1 344 1 264 1 266 2 212 1 239 1 101 3 33 1 272 4 346 1 59 1 
277 1 278 2 63 1 3 1 128 2 247 1 196 1 352 1 197 1 225 1 226 2 199 2 200 1 354 1 41 2 288 1 116 1 358 2 322 1 121 1 230 1 231 1 143 3 95 1 52 1 167 1 237 1 171 3 
320 1 121 2 241 1 151 2 219 1 221 1 200 1 12 1 354 2 116 2 263 1 264 1 358 2 
121 4 151 1 221 1 95 1 313 1 28 1 12 1 354 4 116 4 327 1 264 1 307 1 358 1 
121 2 151 2 219 1 299 1 198 1 7 1 12 1 354 2 155 1 116 2 264 1 203 1 213 1 358 1 
160 1 12 1 169 1 354 1 121 1 151 1 116 1 259 1 282 1 95 1 
121 2 151 1 221 1 51 1 53 1 12 1 354 2 116 2 265 1 264 1 358 1 
349 1 121 5 151 2 221 1 95 1 299 1 313 1 28 1 12 2 286 1 354 5 327 1 116 4 265 1 264 2 358 3 
348 1 121 5 151 2 221 1 95 1 299 1 313 1 28 1 12 2 286 1 354 5 327 1 116 4 265 1 264 2 358 3 
150 1 121 1 151 1 219 1 232 1 86 1 95 1 133 1 12 1 344 1 201 2 69 2 354 1 88 1 264 1 116 1 358 1 59 1 
121 1 151 2 219 1 198 1 299 1 7 1 12 1 354 1 116 1 16 1 263 1 264 1 358 1 
244 1 6 1 67 1 201 1 69 1 329 1 100 1 18 1 59 1 
146 1 112 1 18 1 
244 1 232 1 100 1 72 1 18 1 
276 1 257 1 322 1 230 1 63 1 38 1 244 2 143 2 232 1 298 1 352 1 112 1 146 1 77 1 171 2 100 2 72 2 18 1 360 1 
4 1 109 1 204 1 114 1 
55 1 285 1 4 1 228 1 370 1 204 1 114 1 
296 1 285 1 245 1 
139 1 321 1 4 1 114 1 55 3 285 3 43 1 228 1 318 1 370 1 204 1 273 2 
55 2 301 1 285 2 4 1 315 1 228 1 370 1 204 1 114 1 
55 1 139 1 325 1 280 1 285 1 4 1 228 1 259 1 282 1 369 1 370 1 
55 1 139 1 285 1 4 1 228 1 370 1 204 1 
55 1 139 1 285 1 228 1 370 1 204 2 114 1 
139 1 39 1 4 1 224 1 55 2 285 2 228 2 17 1 370 2 204 1 
139 1 4 2 164 1 114 1 55 3 301 2 285 3 136 1 228 1 332 1 370 1 369 1 204 1 
139 1 4 1 259 2 282 1 114 1 55 2 301 1 325 1 285 2 169 1 287 1 228 1 370 1 204 1 182 1 
139 1 4 2 164 1 114 1 55 4 301 2 285 4 315 1 228 2 370 2 22 1 369 1 204 1 
55 1 139 1 285 1 4 1 228 1 370 1 204 1 114 1 
321 1 48 1 4 3 164 1 114 2 55 4 301 2 285 4 43 1 228 1 370 1 369 1 204 2 273 1 
139 1 347 1 4 1 260 1 114 1 55 2 262 1 301 1 285 2 228 1 370 1 204 1 
139 1 321 1 4 1 223 1 114 1 55 3 285 3 43 2 228 1 370 1 204 1 273 2 
4 2 290 2 359 1 166 1 
55 1 139 1 285 1 297 1 228 1 370 1 
55 2 139 1 301 1 285 2 4 1 228 1 332 1 370 1 204 1 114 1 
336 1 
55 1 139 1 285 1 4 1 228 1 370 1 204 1 114 1 
55 3 139 1 301 1 285 3 4 1 228 1 332 1 370 1 204 1 114 1 273 1 
48 1 4 1 164 1 369 1 
4 1 204 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 11 127 146 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 11 127 146 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 11 127 146 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 11 127 146 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 11 127 146 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 1 8 1 300 1 38 1 281 1 342 1 
128 1 8 1 300 1 38 1 281 1 342 1 
128 1 8 1 300 1 38 1 281 1 342 1 
128 1 8 1 300 1 38 1 281 1 342 1 
128 4 8 1 362 1 179 1 350 2 300 1 281 4 63 3 266 1 186 1 31 3 158 1 188 1 287 1 38 1 272 2 115 1 193 1 
128 2 8 1 117 1 179 1 274 1 300 1 278 1 63 1 281 2 266 1 158 1 160 1 222 1 287 1 38 1 71 1 
128 3 8 2 362 1 300 2 278 1 281 3 63 2 31 1 158 1 269 1 287 1 38 1 272 1 
128 9 226 1 350 2 153 1 278 1 281 9 63 5 31 7 158 1 287 1 38 1 115 1 8 2 362 3 179 1 300 2 186 1 266 1 218 1 188 1 269 1 40 1 272 4 193 1 
128 9 226 1 350 2 153 1 278 1 281 9 63 5 31 7 158 1 287 1 38 1 115 1 8 2 362 3 179 1 300 2 186 1 266 1 218 1 188 1 269 1 40 1 272 4 193 1 
157 1 163 1 301 1 
157 1 0 1 120 2 
224 2 9 2 238 2 26 2 81 2 159 2 6 1 145 1 
224 2 42 1 59 1 44 1 168 1 26 3 81 2 276 1 170 2 107 1 352 1 82 1 29 2 155 1 159 3 86 1 6 1 70 1 205 1 137 2 116 1 9 2 238 2 182 2 340 1 296 1 118 1 143 1 145 1 302 1 147 1 305 1 247 2 221 1 248 1 101 1 194 1 
224 1 9 1 13 1 133 1 238 1 26 1 81 1 159 1 261 1 145 1 
224 1 140 1 13 1 26 1 39 1 183 1 254 1 255 1 157 1 327 1 159 1 163 1 289 1 191 1 
224 1 9 1 13 1 238 1 26 1 81 1 183 1 254 1 255 2 157 1 327 2 159 1 163 1 289 1 191 1 
255 1 325 1 246 1 327 1 27 1 
51 1 255 2 325 1 157 1 327 2 27 1 163 1 15 1 
255 1 327 1 27 1 
224 1 9 1 13 1 238 1 26 1 81 1 261 1 131 1 145 1 255 1 325 1 133 1 327 1 159 1 
157 1 
255 2 325 1 157 1 294 1 327 2 27 1 163 1 15 1 
105 1 211 1 293 2 280 1 27 2 15 1 17 2 255 5 325 2 202 1 18 1 157 1 122 1 327 5 231 2 356 1 257 1 163 1 288 1 
6 1 301 1 
224 2 9 1 238 1 26 2 81 1 159 2 270 1 175 1 6 2 
283 1 154 1 358 1 
59 1 26 1 182 1 340 1 170 1 296 1 107 1 352 1 29 1 155 1 159 1 6 1 113 1 70 1 248 1 194 1 
224 1 59 1 238 1 26 2 340 1 92 1 81 1 182 1 296 1 170 1 107 1 352 1 29 1 155 1 159 2 358 1 70 1 248 1 194 1 249 1 
224 3 9 1 238 3 26 3 92 1 81 3 159 3 6 1 
224 1 13 1 133 1 238 1 26 1 81 1 159 1 
224 1 9 1 13 1 238 1 26 1 81 1 159 1 270 1 175 1 
349 1 224 3 59 1 44 1 168 1 26 4 81 3 276 1 170 1 107 1 352 1 82 1 254 1 155 1 29 1 255 1 159 4 6 1 70 1 289 1 137 2 116 1 9 2 13 1 238 3 340 1 92 1 182 1 296 1 262 1 183 1 118 1 145 1 147 1 327 1 305 1 247 1 221 1 270 1 191 1 248 1 101 1 194 1 249 1 
224 2 140 1 238 1 26 2 81 1 92 1 159 2 6 1 132 1 
224 3 9 1 13 1 238 3 26 3 92 2 81 3 183 1 262 1 254 1 255 1 157 1 327 1 159 3 270 1 258 1 289 1 191 1 249 1 
224 2 9 1 238 2 26 2 92 1 81 2 154 1 159 2 270 1 358 1 
59 1 26 1 182 1 340 1 170 1 296 1 107 1 352 1 29 1 155 1 159 1 6 1 70 1 248 1 194 1 
103 1 59 1 26 1 182 1 170 1 296 1 107 1 352 1 184 1 29 1 159 1 6 1 70 1 248 1 194 1 
44 1 46 1 251 1 154 2 82 1 283 2 65 1 284 1 358 2 137 2 116 1 55 1 239 1 363 1 118 1 143 2 20 1 305 1 268 1 221 1 247 4 41 1 99 1 101 2 
224 1 260 1 13 1 238 1 26 1 81 1 159 1 254 1 
224 5 9 1 140 1 238 4 26 5 212 1 92 2 81 4 132 1 324 1 159 5 270 1 6 1 249 1 
224 2 260 1 13 1 133 1 238 2 26 2 81 2 159 2 
129 1 360 1 
129 1 360 1 
195 1 165 1 
195 1 165 1 
195 1 165 1 
129 1 125 1 360 1 
129 1 125 1 360 1 
368 1 129 1 360 1 
195 1 165 1 129 2 331 1 371 1 360 2 
129 1 125 1 360 1 
129 1 360 1 83 1 
129 1 360 1 83 1 
129 1 360 1 83 1 
129 2 312 1 56 1 264 3 265 1 4 2 244 2 343 2 173 2 255 2 345 1 326 2 157 1 327 2 285 1 371 1 360 2 348 1 207 1 
224 2 129 1 238 2 321 1 26 2 81 2 275 1 130 1 227 1 264 1 265 1 4 1 343 1 255 1 173 1 368 1 326 1 230 1 327 1 159 2 36 1 6 1 290 1 360 1 
266 1 179 1 188 1 
266 1 179 1 71 1 
108 1 179 3 188 2 71 1 308 1 102 1 
179 2 188 1 161 1 71 1 308 1 102 1 
179 2 188 1 71 1 308 1 102 2 
311 2 80 1 45 1 0 1 279 2 27 1 62 2 227 1 255 5 230 1 157 2 284 1 232 1 231 1 256 1 257 3 290 1 55 1 211 2 293 1 142 1 363 1 120 3 15 1 17 1 325 4 121 1 122 1 19 1 20 1 327 5 163 1 
311 6 80 2 45 1 277 1 0 3 279 6 27 6 227 4 228 1 255 9 157 5 284 3 232 3 231 2 356 1 257 8 236 5 55 3 361 1 211 6 293 2 295 1 142 2 363 3 120 9 15 1 17 2 216 1 325 7 246 5 122 1 20 3 327 9 328 1 163 1 
80 1 311 2 0 2 279 2 227 1 62 1 255 3 157 3 284 1 231 1 232 1 356 1 256 1 257 3 55 1 293 1 211 2 142 1 363 1 120 4 17 1 325 2 19 1 327 3 20 1 163 1 
311 4 80 1 277 1 0 3 279 4 227 2 62 2 228 1 255 4 157 4 284 2 231 1 232 2 356 1 256 1 257 5 55 2 361 1 293 1 211 4 142 1 363 2 120 7 17 1 325 3 19 1 327 4 20 2 163 1 
84 1 301 1 194 1 
250 1 194 1 
35 1 
352 1 194 1 
84 2 237 1 352 1 248 1 194 3 259 1 
352 1 248 1 194 1 
180 1 194 1 
309 1 55 1 46 3 363 1 322 1 143 4 28 1 282 2 50 1 65 2 369 1 318 1 247 7 286 1 320 1 57 1 101 3 
309 1 55 1 46 3 363 1 322 1 143 4 28 1 282 2 50 1 65 2 369 1 318 1 247 7 286 1 320 1 57 1 101 3 
309 1 55 1 46 3 91 1 363 1 322 1 143 4 28 1 282 2 50 1 65 2 369 1 318 1 247 7 286 1 320 1 57 1 101 3 
309 2 46 10 198 1 171 1 82 1 28 1 282 3 50 5 65 5 334 1 318 1 32 1 284 3 232 3 320 1 286 2 357 1 235 3 137 2 116 1 55 4 10 1 363 4 322 2 143 16 95 4 369 1 217 1 20 3 305 1 221 1 247 31 57 2 101 15 
309 1 46 4 82 2 282 2 50 1 65 3 318 1 286 1 357 1 320 1 137 4 116 2 55 1 363 1 213 1 322 1 143 5 369 1 305 2 221 2 190 1 247 9 57 1 101 4 
128 2 59 1 314 1 170 1 278 1 63 1 281 2 29 1 108 1 201 1 31 1 158 1 67 1 355 1 33 1 52 1 136 1 287 1 38 1 70 1 71 1 208 1 138 1 8 1 179 2 182 1 300 1 266 1 188 1 306 1 
128 3 59 1 152 1 170 1 278 1 63 1 281 3 29 1 108 1 201 1 31 2 158 1 67 1 355 1 33 1 52 1 136 1 287 1 70 1 71 1 208 1 138 1 8 1 179 2 182 1 93 1 300 1 266 1 188 1 220 1 
128 2 59 1 170 1 278 1 63 1 281 2 29 1 108 1 201 1 31 2 158 1 355 1 33 1 52 1 136 1 287 1 70 1 71 1 208 1 179 2 182 1 93 1 266 1 220 1 188 1 
128 1 59 1 152 1 170 1 107 1 278 2 253 1 352 1 281 1 332 1 29 1 317 1 355 2 33 2 70 1 72 1 208 2 8 1 182 1 300 1 185 1 223 1 194 1 
128 1 59 1 170 1 278 1 281 1 29 1 108 1 201 1 67 1 355 1 33 1 52 1 136 1 38 1 70 1 71 1 208 1 138 1 8 1 179 2 182 1 93 1 300 1 266 1 188 1 306 1 
119 1 
224 1 43 1 170 2 0 2 1 4 2 1 332 1 231 1 289 1 7 2 339 1 338 1 140 1 13 1 292 1 293 1 142 1 182 2 183 1 299 1 15 3 17 1 304 1 346 2 150 2 22 1 21 1 191 1 194 1 59 1 196 1 26 1 107 2 27 6 352 1 254 1 29 2 156 2 255 5 317 1 157 2 159 1 69 2 257 2 70 1 211 2 39 1 75 2 120 2 215 1 122 1 327 5 76 1 163 1 126 2 
224 1 26 1 27 2 1 2 2 1 254 1 255 3 159 1 289 1 140 1 338 1 13 1 294 1 39 1 183 1 299 1 15 1 327 3 150 1 76 1 21 1 191 1 
224 1 26 1 27 1 1 3 2 1 254 1 255 3 157 1 159 1 289 1 7 1 140 1 338 1 13 1 294 1 39 1 183 1 299 1 15 1 327 3 76 1 21 1 163 1 191 1 
224 1 26 1 27 2 1 3 2 1 254 1 255 3 157 1 159 1 289 1 7 1 140 1 338 1 13 1 294 1 39 1 183 1 299 1 15 1 346 1 327 3 150 1 76 1 21 1 163 1 191 1 
224 1 273 1 26 1 0 2 27 7 1 6 2 1 254 1 156 2 255 5 157 5 231 1 159 1 69 2 5 1 257 1 289 1 89 1 7 4 177 1 339 1 140 1 338 1 292 1 13 1 211 1 293 1 294 1 39 1 183 1 299 1 298 1 75 2 15 3 17 1 122 1 346 4 327 5 150 4 76 1 163 5 21 1 126 2 191 1 
224 1 0 2 1 4 2 1 231 1 289 1 7 2 140 1 338 1 339 1 292 1 13 1 293 1 183 1 299 1 15 2 17 1 346 2 150 2 21 1 191 1 26 1 27 4 254 1 255 4 156 2 157 2 159 1 69 2 257 1 211 1 39 1 75 2 120 2 215 1 122 1 327 4 76 1 163 1 126 2 
224 1 273 1 26 1 0 2 27 4 1 4 2 1 254 1 156 2 255 4 157 1 231 1 159 1 69 2 5 1 257 1 289 1 7 2 89 1 339 1 140 1 338 1 292 1 13 1 211 1 293 1 39 1 183 1 299 1 75 2 15 2 17 1 346 2 122 1 327 4 150 2 76 1 163 1 21 1 126 2 191 1 
224 1 273 1 26 1 0 2 27 4 1 4 2 1 254 1 156 2 255 4 157 1 231 1 159 1 69 2 5 1 257 1 289 1 7 2 89 1 339 1 140 1 338 1 292 1 13 1 211 1 293 1 39 1 183 1 299 1 75 2 15 2 17 1 346 2 122 1 327 4 150 2 76 1 163 1 21 1 126 2 191 1 
224 1 273 1 26 1 351 1 27 4 1 4 2 1 316 1 254 1 156 2 255 4 157 1 231 1 159 1 69 2 257 1 53 2 289 1 7 2 209 1 339 1 140 1 338 1 13 1 211 1 293 1 39 1 183 1 299 1 120 2 15 2 14 2 17 1 346 2 122 1 327 4 150 2 76 1 163 1 21 1 191 1 
224 1 273 1 26 1 0 2 27 5 1 5 2 1 254 1 156 2 255 4 157 1 231 1 159 1 69 2 5 1 257 1 289 1 7 3 89 1 177 1 339 1 140 1 338 1 292 1 13 1 211 1 293 1 39 1 183 1 299 1 75 2 15 2 17 1 122 1 346 3 327 4 150 3 76 1 163 1 21 1 126 2 191 1 
224 1 273 1 26 1 0 2 27 5 1 5 2 1 254 1 156 2 255 4 157 1 231 1 159 1 69 2 5 1 257 1 289 1 7 3 89 1 177 1 339 1 140 1 338 1 292 1 13 1 211 1 293 1 39 1 183 1 299 1 75 2 15 2 17 1 122 1 346 3 327 4 150 3 76 1 163 1 21 1 126 2 191 1 
224 1 1 4 2 1 231 1 289 1 53 2 7 2 140 1 338 1 339 1 13 1 293 1 183 1 299 1 14 2 15 2 17 1 346 2 150 2 21 1 191 1 26 1 27 4 316 1 254 1 255 4 156 2 157 1 159 1 69 2 257 1 211 1 39 1 120 2 215 1 122 1 327 4 76 1 163 1 
44 1 46 2 154 1 82 1 282 1 283 1 65 2 318 1 358 1 320 1 6 2 137 2 116 1 55 1 363 1 118 1 322 1 143 3 301 1 369 1 305 1 268 1 221 1 247 6 57 1 101 3 
42 1 44 1 168 1 46 2 198 1 154 4 171 1 82 2 50 1 283 11 65 1 284 1 232 2 110 1 6 1 358 11 235 3 137 4 116 2 55 2 12 1 139 1 363 1 118 2 143 8 366 1 95 3 245 1 20 2 305 2 221 2 247 14 101 6 
224 1 42 1 59 1 44 1 26 2 197 1 168 1 81 1 170 1 107 1 154 1 352 1 82 1 155 1 29 1 336 1 159 2 6 1 70 1 113 1 137 2 116 1 238 1 340 1 182 1 92 1 296 1 118 1 143 1 242 1 366 1 305 1 221 1 247 2 248 1 194 1 249 1 101 1 
224 1 42 1 44 3 168 1 46 8 81 1 170 3 82 3 282 1 172 2 283 7 50 4 135 1 284 2 232 2 6 2 87 2 137 6 291 1 55 3 238 1 182 3 92 1 340 2 93 1 296 2 143 10 147 2 20 2 305 3 247 20 57 1 248 2 101 10 249 1 194 2 59 2 26 3 107 1 154 7 352 2 29 3 155 2 65 4 318 1 159 3 109 2 320 1 358 7 70 2 359 2 116 3 363 3 118 3 322 1 366 1 369 1 221 3 164 1 
224 1 151 1 23 1 42 1 59 2 44 2 314 1 26 1 168 1 81 1 170 7 107 2 352 2 48 1 82 2 332 1 29 8 317 1 159 1 34 1 86 2 70 2 137 4 116 2 238 1 92 1 182 8 93 1 118 2 365 1 143 1 189 1 268 1 305 2 221 2 247 2 100 1 194 3 101 1 
224 1 44 1 46 1 26 1 81 1 154 1 82 1 283 1 65 1 284 1 159 1 232 1 111 1 358 1 137 2 116 1 9 1 55 1 238 1 363 1 118 1 143 1 366 1 20 1 305 1 270 1 221 1 247 3 101 2 
55 1 44 1 46 1 118 1 154 1 143 2 82 1 50 1 283 1 20 1 268 1 305 1 247 2 221 1 41 1 358 1 137 2 116 1 
44 1 46 1 363 1 118 1 154 1 82 1 283 1 65 1 284 1 268 1 305 1 247 2 221 1 358 1 99 1 137 2 116 1 101 2 
44 1 46 2 154 2 82 1 283 2 50 1 65 1 284 1 232 1 358 2 137 2 116 1 55 1 363 1 118 1 143 2 20 1 305 1 268 1 221 1 247 4 101 2 
55 1 44 1 46 1 118 1 154 1 143 2 82 1 50 1 283 1 20 1 34 1 305 1 247 2 221 1 41 1 358 1 137 2 116 1 
44 1 46 1 363 1 118 1 154 1 82 1 283 1 65 1 284 1 34 1 305 1 247 2 221 1 358 1 99 1 137 2 116 1 101 2 
44 1 46 2 154 2 82 1 283 2 50 1 65 1 284 1 232 1 34 1 358 2 137 2 116 1 55 1 363 1 118 1 143 2 20 1 305 1 221 1 247 4 101 2 
44 1 46 2 154 2 82 1 283 2 50 1 65 1 284 1 232 1 358 2 137 2 116 1 55 1 363 1 118 1 143 2 20 1 305 1 247 4 221 1 101 2 
42 1 59 1 44 1 26 1 168 1 170 1 107 1 352 1 82 1 155 1 29 1 159 1 6 1 70 1 137 2 116 1 340 1 182 1 296 1 118 1 143 1 147 1 305 1 247 2 221 1 248 1 194 1 101 1 
42 1 103 1 59 1 44 1 26 1 168 1 170 1 107 1 352 1 82 1 29 1 319 1 159 1 6 1 70 1 137 2 116 1 182 1 296 1 118 1 143 1 184 1 305 1 247 2 221 1 248 1 194 1 101 1 
44 1 46 2 154 2 82 1 283 2 50 1 65 1 284 1 232 1 358 2 137 2 116 1 55 1 363 1 118 1 143 2 366 1 20 1 305 1 221 1 247 4 101 2 
59 1 44 1 46 2 314 1 26 1 170 1 154 2 352 1 82 1 155 1 29 1 50 1 283 2 65 1 284 1 159 1 232 1 358 2 70 1 359 1 137 2 116 1 55 1 340 1 182 1 363 1 296 1 118 1 143 2 147 1 20 1 305 1 247 4 221 1 248 1 101 2 194 1 
224 1 310 1 44 1 46 1 26 1 81 1 154 1 82 1 50 1 283 1 284 1 159 1 232 1 358 1 137 2 116 1 9 1 55 1 238 1 363 1 118 1 143 2 366 1 20 1 305 1 270 1 221 1 247 3 101 1 
146 1 11 1 305 1 221 1 190 1 127 1 82 1 137 2 116 1 49 1 
146 1 11 1 305 1 221 1 190 1 127 1 82 1 137 2 116 1 49 1 
146 1 11 1 305 1 221 1 190 1 127 1 82 1 137 2 116 1 49 1 
146 1 11 1 305 1 221 1 190 1 127 1 82 1 137 2 116 1 49 1 
146 1 11 1 305 1 221 1 190 1 127 1 82 1 137 2 116 1 49 1 
343 1 173 1 326 1 129 1 56 1 285 1 323 1 371 1 360 1 4 1 
368 1 275 1 
343 1 173 1 326 1 129 1 214 1 77 1 307 1 360 1 4 1 
129 1 312 1 56 1 264 2 265 1 4 1 244 1 343 1 255 1 173 1 326 1 157 1 327 1 285 1 371 1 360 1 348 1 207 1 
129 1 312 1 56 1 264 2 265 1 4 1 244 1 343 1 255 1 173 1 326 1 157 1 327 1 285 1 371 1 360 1 348 1 207 1 
129 1 312 1 56 1 264 2 265 1 4 1 244 1 343 1 255 1 173 1 326 1 157 1 327 1 285 1 371 1 360 1 348 1 207 1 
331 1 364 1 125 1 
331 1 364 1 125 1 
243 1 83 1 
331 1 243 1 83 1 
321 1 36 1 
224 2 129 1 26 2 81 2 275 1 130 1 227 1 4 1 255 1 173 1 230 1 159 2 36 1 6 1 360 1 290 1 207 1 238 2 321 1 264 1 244 1 343 1 325 1 368 1 326 1 327 1 370 1 
364 1 125 1 
331 1 243 1 83 1 
224 2 23 1 42 1 59 1 166 1 44 1 26 2 168 1 170 2 352 1 48 1 82 1 29 2 159 2 86 2 70 1 137 2 116 1 337 1 182 2 118 1 144 1 143 1 366 1 148 1 305 1 221 1 247 2 329 1 194 1 101 1 
59 1 179 2 314 1 182 2 93 1 170 2 16 1 333 1 29 2 266 1 108 1 201 1 149 1 67 1 188 1 136 1 70 1 71 1 208 1 
59 1 179 2 182 1 93 1 170 1 16 1 29 1 266 1 108 1 201 1 67 1 188 1 136 1 70 1 71 1 206 1 208 1 
59 1 182 1 170 1 107 1 352 1 185 1 332 1 29 1 317 1 149 1 70 1 78 1 194 1 208 1 
59 1 179 2 182 1 93 1 170 1 16 1 333 1 29 1 266 1 108 1 201 1 149 1 67 1 188 1 136 1 70 1 71 1 208 1 
178 1 
202 1 18 1 157 1 211 1 257 1 163 1 301 1 
0 1 27 1 255 1 157 2 231 1 257 1 292 1 211 1 293 1 75 1 120 1 15 1 17 1 122 1 327 1 163 1 126 1 
330 1 170 3 0 6 279 6 84 2 284 2 231 4 232 2 234 1 55 2 293 4 180 2 142 2 182 3 297 1 183 2 15 3 94 2 344 1 17 4 18 1 97 2 20 2 22 1 248 3 194 10 250 3 59 3 25 2 311 6 314 1 107 1 27 5 352 3 199 2 29 3 255 5 202 1 157 8 354 2 68 2 109 2 257 9 204 2 70 4 259 1 210 2 211 8 363 2 120 12 367 1 122 4 327 5 163 2 
311 5 47 1 0 3 27 1 279 5 171 1 255 1 157 5 354 2 284 2 231 2 232 2 233 1 176 1 257 8 235 1 54 1 73 1 55 2 293 2 211 5 142 1 363 2 263 1 120 6 94 1 15 1 17 2 95 1 122 2 327 1 20 2 347 1 22 1 163 2 
224 1 26 1 81 1 131 1 255 1 133 1 318 1 354 2 159 1 231 1 5 1 257 2 55 2 9 1 13 1 293 1 211 2 238 1 363 1 261 1 322 1 145 1 94 1 17 1 122 1 327 1 57 1 192 1 
293 1 211 1 17 1 18 1 202 1 157 1 122 1 231 1 257 1 163 1 
55 2 311 5 211 5 363 2 0 5 279 5 120 10 94 1 157 5 354 2 20 2 284 2 232 2 109 1 257 5 
255 1 157 1 327 1 27 1 163 1 15 1 
167 1 59 1 196 1 330 1 170 4 107 2 27 4 352 1 3 1 332 1 29 4 255 3 317 1 231 2 356 1 257 2 70 1 293 2 211 2 182 4 142 2 15 2 344 2 17 2 304 1 122 1 327 3 22 2 194 1 
224 2 59 1 44 1 168 1 26 3 81 2 170 1 276 1 107 1 352 1 82 1 29 1 155 1 159 3 6 1 70 1 137 2 116 1 9 2 238 2 182 1 340 1 296 1 118 1 145 1 147 1 305 1 247 1 221 1 248 1 101 1 194 1 
311 2 211 2 293 1 142 1 0 2 279 2 120 4 282 1 17 1 157 4 122 1 231 1 257 1 163 2 22 1 
326 1 335 1 4 1 
326 1 335 1 4 1 
229 1 326 1 285 1 36 1 4 1 
326 1 335 1 4 1 
225 1 326 1 4 1 
225 1 326 1 4 1 
225 1 326 1 4 1 
326 1 4 1 
129 1 360 1 
46 2 171 1 82 1 282 1 65 2 318 1 320 1 235 1 137 2 116 1 55 1 363 1 322 1 143 4 95 1 369 1 305 1 247 8 221 1 190 1 347 1 57 1 101 4 
46 3 198 1 61 1 171 1 82 2 282 1 50 1 65 2 318 1 232 1 320 1 235 1 137 4 116 2 55 2 363 1 322 1 143 6 95 2 369 1 20 1 305 2 247 11 190 1 221 2 347 1 57 1 101 5 
46 4 47 1 61 1 171 1 82 3 282 1 50 1 65 3 318 1 284 2 232 2 233 1 320 1 357 1 235 1 137 6 54 1 116 3 55 3 363 3 322 1 143 9 263 1 95 1 369 1 20 2 305 3 247 19 221 3 190 1 347 1 57 1 101 10 
46 5 47 1 61 1 171 1 82 3 282 1 50 2 65 3 318 1 284 1 232 2 233 1 320 1 357 1 235 1 137 6 54 1 116 3 55 3 363 2 322 1 143 10 263 1 95 1 369 1 20 2 305 3 247 17 221 3 190 1 347 1 57 1 101 7 
46 2 171 1 82 1 282 1 65 2 318 1 320 1 235 1 137 2 116 1 55 1 363 1 322 1 143 4 95 1 369 1 305 1 247 8 221 1 190 1 347 1 57 1 101 4 
46 2 47 1 171 1 82 1 50 1 65 1 284 2 232 2 233 1 235 1 137 2 54 1 116 1 55 2 363 2 143 6 263 1 95 1 20 2 305 1 247 12 221 1 190 1 347 1 101 6 
46 5 47 1 61 1 171 1 82 4 282 1 50 2 65 3 318 1 284 1 232 2 233 1 320 1 357 2 235 1 137 8 54 1 116 4 55 3 363 2 322 1 143 10 263 1 95 1 369 1 20 2 305 4 247 18 221 4 190 1 347 1 57 1 101 8 
46 6 47 1 171 1 82 4 50 3 65 3 284 2 232 3 233 1 357 2 235 1 137 8 54 1 116 4 55 3 90 1 363 2 143 9 263 1 95 1 20 3 305 4 247 16 190 1 221 4 347 1 101 7 
55 1 46 6 363 1 322 3 143 3 50 3 65 3 369 2 318 1 247 7 320 1 57 3 101 4 
46 4 47 1 171 1 82 4 282 1 50 1 65 3 318 1 284 1 232 2 233 1 320 1 357 2 235 1 137 8 54 1 116 4 55 3 90 1 363 2 322 1 143 10 263 1 95 1 369 1 20 2 305 4 247 18 190 1 221 4 347 1 57 1 101 8 
55 1 46 3 363 1 322 1 143 4 82 2 282 1 50 1 65 2 369 1 318 1 305 2 247 8 221 2 357 1 320 1 57 1 137 4 101 4 116 2 
55 1 46 2 363 1 322 1 143 3 301 1 282 1 65 2 369 1 318 1 247 6 320 1 57 1 101 3 
55 1 46 2 363 1 61 1 143 2 82 1 50 1 65 1 284 1 20 1 305 1 232 1 221 1 247 4 137 2 101 2 116 1 
55 1 46 2 363 1 198 1 171 1 143 3 50 1 65 1 95 2 284 1 20 1 232 1 247 7 235 1 101 4 
46 9 198 1 82 2 282 1 50 4 65 5 318 1 284 2 232 2 110 1 320 1 357 2 235 2 137 4 116 2 55 3 12 1 363 3 322 2 143 11 95 2 303 1 369 1 20 2 305 2 247 23 221 2 57 2 101 12 
95 1 247 1 101 1 
247 1 143 1 235 1 
55 1 46 3 363 1 61 1 143 3 82 1 50 1 65 2 20 1 284 1 305 1 232 1 221 1 109 1 247 6 137 2 116 1 101 3 
46 2 47 1 171 1 82 1 50 1 65 1 284 2 232 2 233 1 235 1 137 2 54 1 116 1 55 2 363 2 143 6 263 1 95 1 20 2 305 1 247 12 221 1 190 1 347 1 101 6 
55 1 46 2 363 1 322 1 143 3 50 1 65 1 318 1 247 6 57 1 101 3 
46 2 322 1 143 1 82 1 50 1 65 1 303 1 369 1 305 1 247 3 221 1 357 1 320 1 57 1 137 2 101 2 116 1 
55 2 46 5 363 2 322 2 143 5 82 1 50 2 65 3 318 1 305 1 221 1 190 1 247 10 57 2 137 2 192 1 116 1 101 5 
55 1 46 1 143 2 82 1 50 1 20 1 305 1 190 1 221 1 247 2 137 2 116 1 
55 1 46 2 363 1 143 2 82 1 50 1 65 1 284 1 20 1 305 1 232 1 190 1 221 1 247 4 137 2 101 2 116 1 
90 1 46 2 322 1 143 1 82 3 50 1 303 1 65 1 305 3 247 3 190 1 221 3 357 1 57 1 137 6 101 2 116 3 
46 12 198 1 61 1 171 1 82 5 282 1 50 5 334 1 65 7 318 2 284 3 232 3 320 1 357 2 235 3 137 10 116 5 10 1 55 5 90 1 363 5 322 3 143 16 303 1 95 4 369 1 217 1 20 3 305 5 221 5 190 1 247 34 57 3 101 18 
224 1 140 1 187 1 26 1 159 1 6 1 132 1 
224 1 140 1 181 1 26 1 240 1 241 1 132 1 187 1 159 1 112 1 6 1 79 1 
59 1 317 1 182 1 170 1 107 1 70 1 352 1 301 1 332 1 194 1 29 1 
224 1 59 1 238 1 26 2 92 1 81 1 182 1 340 1 296 1 170 1 107 1 352 1 29 1 159 2 6 1 70 1 248 1 194 1 
224 2 59 1 13 1 180 1 238 2 26 2 92 1 81 1 182 1 340 1 296 1 170 1 352 2 254 1 29 1 344 1 68 1 159 2 6 1 70 1 191 1 248 2 194 3 
224 2 103 1 59 1 313 1 26 2 81 1 170 2 352 2 254 1 29 2 68 1 159 2 6 1 70 1 13 1 238 2 180 1 182 2 92 1 296 1 344 1 191 1 248 2 194 3 
250 1 59 1 180 1 313 1 182 3 183 1 170 3 107 1 27 1 352 1 30 1 29 3 344 1 255 2 84 1 157 1 68 1 327 2 219 1 163 1 70 1 248 1 194 4 
250 1 59 1 180 1 313 1 182 3 183 1 170 3 107 1 27 1 352 1 29 3 344 1 255 2 84 1 157 1 97 1 68 1 327 2 163 1 70 1 248 1 194 4 
59 1 182 1 170 1 189 1 70 1 29 1 
151 1 59 2 314 1 182 7 106 1 93 1 170 6 365 1 107 2 352 2 48 1 29 7 123 1 189 1 86 1 70 3 100 1 88 1 248 1 259 1 194 3 
224 1 59 1 166 1 44 2 46 2 26 2 314 1 81 1 170 1 154 1 352 1 82 2 282 1 29 1 155 1 283 1 65 2 318 1 159 2 358 1 6 2 320 1 70 1 87 1 359 1 137 4 116 2 55 1 238 1 92 1 182 1 340 1 363 1 296 1 118 2 322 1 143 3 366 1 147 1 369 1 305 2 247 6 221 2 57 1 248 1 101 3 194 1 
250 1 25 1 330 1 170 1 107 1 27 2 199 1 29 1 255 3 84 1 202 1 157 1 231 2 257 1 204 1 211 1 293 2 182 1 183 1 15 1 17 2 325 1 18 1 122 2 97 1 327 3 163 1 194 2 
59 1 314 1 182 2 170 2 352 1 29 2 84 1 367 1 189 1 70 2 248 1 259 1 194 2 
59 1 313 1 314 1 182 4 170 4 107 1 352 1 332 1 29 4 317 1 267 1 70 1 194 1 
59 1 182 2 169 1 170 2 352 1 29 2 344 1 123 1 135 1 70 2 114 1 88 1 248 1 194 1 
266 1 59 1 179 1 182 1 170 1 136 1 107 1 70 1 71 1 29 1 
59 1 148 1 314 1 182 2 93 1 170 2 70 1 352 1 48 1 194 1 29 2 
151 1 59 2 314 1 182 5 170 4 107 1 365 1 352 2 48 1 332 1 29 5 344 1 317 1 267 1 70 2 194 3 
59 2 141 1 314 1 182 5 170 4 107 1 365 1 352 2 48 1 332 1 29 5 344 1 317 1 267 1 70 2 194 3 
224 1 103 1 59 1 238 1 26 2 92 1 81 1 182 1 296 1 170 1 107 1 352 1 29 1 159 2 6 1 70 1 248 1 194 1 
59 1 182 1 106 1 170 1 352 1 29 1 344 1 123 1 70 2 88 1 248 1 259 1 194 1 
224 1 337 1 26 1 144 1 353 1 159 1 85 1 37 1 329 1 
353 1 203 1 74 1 
353 1 85 1 6 1 37 1 372 1 
13 1 104 1 183 1 262 1 74 1 254 1 353 1 255 2 325 1 157 1 327 2 203 1 85 2 6 1 37 2 163 1 191 1 289 1 372 2 
158 1 287 1 301 1 63 1 
128 1 8 1 158 1 300 1 287 1 63 1 281 1 
33 1 278 1 281 1 
128 3 8 1 24 1 300 1 252 1 63 1 281 3 162 1 158 1 160 2 38 1 287 1 
128 2 8 1 31 1 350 1 158 1 300 1 287 1 63 1 281 2 
128 1 266 1 186 1 8 1 179 1 188 1 300 1 38 1 63 1 281 1 272 1 
128 1 8 1 300 1 287 1 38 1 63 1 281 1 
128 1 8 1 158 1 300 1 287 2 38 1 281 1 
128 2 8 2 341 1 300 2 63 1 281 2 96 1 98 1 287 1 38 1 
128 3 8 1 362 1 153 1 300 1 281 3 63 2 31 2 158 1 218 1 287 1 38 1 272 1 
128 2 8 1 179 2 300 1 63 1 281 2 108 1 266 1 174 1 31 1 158 1 188 1 287 1 38 1 71 1 
128 4 8 2 362 1 350 1 300 2 281 4 63 2 31 2 158 1 287 1 38 1 272 1 115 1 
128 1 8 1 158 1 300 1 287 1 38 1 63 1 281 1 
128 4 8 1 24 1 362 1 300 1 281 4 63 3 162 1 134 1 31 2 158 2 160 1 287 2 272 1 
128 2 8 1 300 1 315 1 63 1 281 2 31 1 158 1 40 1 287 1 38 1 58 1 
128 3 8 1 24 2 300 1 63 1 281 3 162 1 158 1 160 2 38 1 271 1 287 1 
66 2 60 1 63 2 64 1 
128 1 8 1 300 1 200 1 38 1 281 1 
128 2 8 1 31 1 158 1 153 1 300 1 287 1 38 1 63 1 281 2 
124 1 
128 1 8 1 158 1 300 1 287 1 38 1 63 1 281 1 
128 3 8 1 31 1 158 1 153 1 160 1 300 1 287 1 38 1 63 1 281 3 
362 1 134 1 63 1 272 1 
287 1 63 1 

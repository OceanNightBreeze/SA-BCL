#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 120 258 106 328 81 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 120 258 106 328 81 376 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 120 258 106 328 81 376 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 120 258 106 328 81 376 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 298 106 328 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 120 258 106 328 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 120 258 106 328 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 120 258 106 328 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 120 258 106 328 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 120 258 106 328 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 120 258 106 328 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 120 258 106 328 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
131 2 273 2 51 3 141 2 117 2 337 1 10 1 12 1 238 9 93 1 119 1 199 1 218 1 151 1 283 1 322 2 66 1 155 1 220 1 343 2 68 5 70 1 157 9 41 4 267 2 160 1 102 1 165 6 
131 2 273 2 51 3 141 2 117 2 337 1 10 1 12 1 238 9 93 1 119 1 199 1 218 1 151 1 283 1 322 2 66 1 155 1 220 1 68 5 343 2 70 1 157 9 41 4 267 2 160 1 102 1 165 6 
131 2 273 2 51 4 141 2 117 2 337 1 10 1 12 1 238 10 93 1 119 1 199 1 218 1 151 1 283 1 322 2 66 1 155 1 220 1 68 6 343 2 70 1 157 10 41 5 267 2 160 1 102 1 165 7 
131 2 273 2 51 2 141 2 117 2 337 1 10 1 12 1 238 7 93 1 119 1 199 1 151 1 283 1 322 2 66 1 155 1 220 1 68 4 343 1 70 1 157 7 41 3 267 2 160 1 102 1 165 4 
131 1 218 1 283 1 322 1 273 1 51 1 155 1 343 2 68 3 141 1 117 1 157 4 10 1 41 2 238 4 119 1 199 1 165 3 
131 1 151 1 283 1 322 1 273 1 233 1 66 1 68 1 117 1 157 2 348 1 10 1 267 1 238 2 318 1 119 1 
283 1 322 2 51 1 68 2 117 2 70 1 157 3 10 1 41 1 267 1 238 3 119 1 165 1 
131 1 273 1 51 3 83 1 141 1 117 2 337 1 10 1 238 9 93 1 119 1 199 1 218 1 283 1 322 2 65 1 155 1 68 5 343 2 70 1 157 9 41 4 267 1 165 7 
131 1 273 1 51 3 83 1 141 1 117 2 337 1 10 1 238 9 93 1 119 1 199 1 218 1 283 1 322 2 65 1 155 1 68 5 343 2 70 1 157 9 41 4 267 1 165 7 
272 1 234 1 275 1 
118 1 235 2 275 1 
180 2 62 1 278 2 251 2 347 2 206 1 219 2 260 2 
110 2 87 1 90 1 316 1 358 1 278 3 28 1 251 2 236 1 11 1 148 1 364 2 254 1 200 1 321 1 180 3 62 1 13 1 299 1 202 1 284 1 95 2 206 1 219 2 260 2 286 1 212 1 346 1 347 2 290 1 100 1 243 2 21 2 128 1 308 1 22 1 46 1 
180 1 60 1 223 1 278 1 251 1 347 1 206 1 219 1 260 1 287 1 
272 1 180 1 60 1 113 1 171 1 275 1 278 1 251 1 252 1 30 1 145 1 237 1 217 1 163 1 
272 1 180 1 60 1 171 2 113 1 219 1 260 1 275 1 278 1 347 1 251 1 252 1 237 1 217 2 163 1 
69 1 169 1 171 1 217 1 188 1 
272 1 69 1 169 1 74 1 339 1 171 2 217 2 275 1 
169 1 171 1 217 1 
180 1 60 1 171 1 206 1 219 1 260 1 287 1 69 1 223 1 278 1 347 1 251 1 217 1 166 1 
275 1 
272 1 69 1 250 1 169 1 339 1 171 2 217 2 275 1 
272 1 167 1 181 2 228 2 183 1 169 2 371 1 171 5 275 1 88 1 140 2 69 2 89 1 222 1 29 1 224 1 339 1 217 5 253 1 
62 1 234 1 
180 2 62 2 219 1 260 1 278 2 251 2 347 1 331 1 310 1 
1 1 341 1 103 1 
180 1 62 1 107 1 202 1 95 1 284 1 316 1 278 1 346 1 100 1 128 1 21 1 308 1 364 1 200 1 321 1 
180 2 1 1 202 1 284 1 95 1 219 1 316 1 174 1 346 1 278 2 347 1 251 1 100 1 308 1 128 1 21 1 364 1 227 1 200 1 321 1 
174 1 180 3 62 1 278 3 251 3 347 3 219 3 260 1 
180 1 60 1 223 1 278 1 251 1 347 1 219 1 
180 1 60 1 278 1 251 1 347 1 219 1 260 1 331 1 310 1 
110 1 113 1 171 1 87 1 90 1 316 1 174 1 357 1 358 1 278 4 28 1 251 3 236 1 361 1 252 1 11 1 237 1 217 1 364 1 200 1 321 1 180 4 60 1 62 1 299 1 202 1 284 1 95 1 206 1 219 3 260 2 286 1 346 1 347 3 290 1 100 1 243 2 308 1 128 1 21 1 163 1 227 1 46 1 310 1 
180 2 174 1 62 1 278 2 251 2 347 1 30 1 75 1 219 1 
180 3 60 1 171 1 113 1 219 3 208 1 260 1 275 1 174 2 357 1 278 3 347 3 251 3 252 1 237 1 217 1 163 1 227 1 310 1 
180 2 1 1 219 2 260 1 174 1 278 2 347 2 251 2 103 1 310 1 
180 1 62 1 202 1 95 1 284 1 316 1 278 1 346 1 100 1 128 1 21 1 308 1 364 1 200 1 321 1 
180 1 182 1 62 1 95 1 284 1 185 1 316 1 278 1 346 1 100 1 128 1 21 1 308 1 364 1 200 1 
1 2 105 1 110 4 52 1 87 1 90 1 91 1 28 1 236 1 11 1 254 2 120 1 280 1 341 2 299 1 300 1 286 2 221 1 243 2 103 2 269 1 377 1 270 1 271 1 
180 1 60 1 278 1 133 1 251 1 347 1 252 1 219 1 
0 1 180 5 62 1 219 4 260 1 18 1 174 2 278 5 347 4 251 5 30 1 75 1 227 1 310 1 
180 2 60 1 133 1 223 1 278 2 251 2 347 2 219 2 
373 1 24 1 
373 1 24 1 
99 1 172 1 
99 1 172 1 
99 1 172 1 
373 1 355 1 24 1 
154 1 373 1 24 1 
99 1 31 1 373 2 172 1 210 1 24 2 
373 1 355 1 24 1 
373 1 355 1 24 1 
324 1 373 1 24 1 
324 1 373 1 24 1 
324 1 373 1 24 1 
108 1 231 2 170 2 171 2 373 2 53 2 275 1 5 1 176 1 20 1 266 1 362 1 317 2 94 2 217 2 31 1 309 3 24 2 379 1 
48 1 170 1 231 1 50 1 171 1 53 1 314 1 278 2 251 2 362 1 94 1 217 1 180 2 121 1 62 1 37 1 154 1 219 2 373 1 96 1 347 2 265 1 309 1 24 1 
131 1 141 1 273 1 
131 1 273 1 318 1 
186 1 141 2 329 1 273 3 349 1 318 1 
186 1 141 1 291 1 329 1 273 2 318 1 
141 1 186 1 329 2 273 2 318 1 
272 1 167 2 105 1 228 1 169 1 50 1 171 5 314 1 235 3 275 2 140 1 142 2 91 1 118 1 29 1 339 1 177 1 217 5 120 1 121 1 181 1 258 1 17 1 261 1 375 1 69 4 222 3 72 1 101 1 269 1 245 2 45 2 
272 1 167 6 105 3 228 2 229 1 169 6 171 9 314 4 235 9 275 5 140 2 142 6 91 3 338 1 118 3 29 1 339 1 217 9 147 1 146 1 340 1 120 3 181 2 183 1 258 3 372 5 261 1 69 7 345 1 222 8 72 2 101 2 269 3 188 5 245 6 
272 1 167 2 105 1 228 1 171 3 314 1 235 4 275 3 140 1 142 2 91 1 118 2 177 1 217 3 120 1 181 1 183 1 258 1 69 2 375 1 222 3 72 1 101 1 269 1 245 2 45 1 
272 1 167 4 105 2 228 1 229 1 171 4 314 2 235 7 275 4 140 1 142 4 91 2 118 3 177 1 217 4 340 1 120 2 181 1 183 1 258 2 375 1 69 3 345 1 222 5 72 1 101 1 269 2 245 4 45 2 
374 1 346 1 234 1 
346 1 282 1 
246 1 
346 1 200 1 
374 2 346 3 168 1 14 1 284 1 200 1 
346 1 284 1 200 1 
256 1 346 1 
280 2 293 1 105 1 135 1 333 1 110 7 64 1 325 1 286 3 125 1 344 2 249 1 91 1 178 1 149 1 270 3 254 4 
280 2 293 1 105 1 135 1 333 1 110 7 64 1 325 1 286 3 125 1 344 2 249 1 91 1 178 1 149 1 270 3 254 4 
280 2 293 1 105 1 135 1 333 1 110 7 64 1 325 1 286 3 125 1 334 1 344 2 249 1 91 1 178 1 149 1 270 3 254 4 
293 2 105 4 135 1 110 31 333 2 175 1 249 5 7 1 91 4 28 1 8 1 360 1 236 1 11 1 178 1 149 2 33 3 254 16 120 3 255 1 280 5 299 1 64 1 370 4 258 3 325 2 125 1 286 15 302 1 344 3 243 2 226 1 269 3 270 10 
293 1 280 3 105 1 152 1 333 1 110 9 299 2 64 1 325 1 125 1 286 4 344 2 249 1 91 1 28 2 236 2 11 2 243 4 178 1 226 1 149 1 270 4 254 5 189 1 
131 1 230 1 273 2 3 1 136 1 141 1 117 1 56 1 10 1 238 2 318 1 119 1 364 1 320 1 283 1 322 1 204 1 95 1 68 1 98 1 213 1 157 2 100 1 267 1 21 1 187 1 308 1 349 1 165 1 104 1 
131 1 294 1 273 2 3 1 136 1 141 1 117 1 56 1 238 3 318 1 119 1 364 1 320 1 63 1 283 1 322 1 204 1 95 1 68 1 98 1 157 3 100 1 267 1 349 1 21 1 187 1 308 1 164 1 165 2 104 1 
131 1 63 1 294 1 283 1 273 2 95 1 204 1 136 1 68 1 141 1 98 1 157 2 100 1 56 1 267 1 349 1 318 1 308 1 238 2 21 1 119 1 364 1 165 2 320 1 104 1 
117 1 296 1 144 1 56 2 238 1 364 1 320 2 200 1 322 1 95 1 204 2 124 1 156 1 242 1 346 1 157 1 100 1 267 2 21 1 128 1 162 1 308 1 164 1 
131 1 294 1 273 2 3 1 136 1 141 1 117 1 56 1 10 1 238 1 318 1 364 1 320 1 322 1 204 1 95 1 98 1 213 1 157 1 100 1 267 1 21 1 187 1 308 1 349 1 104 1 
216 1 
167 2 292 1 169 6 171 5 113 1 55 2 251 1 118 2 252 1 297 2 339 3 217 5 179 4 180 1 181 1 60 1 257 1 15 1 301 1 67 1 303 1 222 2 346 1 350 2 128 2 21 2 308 1 78 1 272 1 25 1 228 1 232 2 235 2 275 2 140 1 144 1 278 1 29 1 363 1 30 1 145 1 237 1 319 2 364 2 200 1 279 2 367 1 368 1 203 2 95 2 289 1 100 1 162 1 101 1 163 1 
169 2 171 3 113 1 278 1 250 1 251 1 363 1 252 1 30 1 237 1 145 1 339 1 217 3 319 1 179 2 180 1 60 1 368 1 257 1 15 1 301 1 163 1 
272 1 279 1 180 1 60 1 257 1 368 1 169 1 15 1 113 1 171 3 301 1 275 1 250 1 278 1 251 1 252 1 363 1 30 1 339 1 145 1 237 1 217 3 179 3 163 1 
272 1 169 2 171 3 113 1 275 1 55 1 250 1 278 1 251 1 363 1 252 1 30 1 339 1 237 1 145 1 217 3 319 1 179 3 180 1 279 1 60 1 368 1 257 1 15 1 301 1 163 1 
167 1 169 7 113 1 171 5 55 4 250 1 251 1 252 1 118 2 339 3 297 2 217 5 179 6 180 1 60 1 181 1 257 1 15 1 301 1 222 1 350 2 272 5 130 1 25 1 228 1 194 1 232 2 275 5 140 1 278 1 363 1 29 1 30 1 237 1 145 1 319 4 279 4 368 1 203 2 38 1 97 1 289 1 163 1 244 1 
167 1 169 4 113 1 171 4 55 2 251 1 252 1 118 2 297 2 339 2 217 4 179 4 180 1 60 1 181 1 257 1 15 1 301 1 303 1 222 1 350 2 272 1 25 1 228 1 232 2 235 2 275 2 140 1 278 1 29 1 363 1 30 1 237 1 145 1 319 2 279 2 368 1 203 2 289 1 163 1 
272 1 130 1 167 1 25 1 228 1 169 4 194 1 232 2 171 4 113 1 275 1 140 1 55 2 278 1 251 1 118 2 363 1 252 1 29 1 30 1 339 2 297 2 237 1 145 1 217 4 319 2 179 4 279 2 180 1 181 1 60 1 368 1 257 1 203 2 15 1 301 1 289 1 222 1 350 2 163 1 244 1 
272 1 130 1 167 1 25 1 228 1 169 4 194 1 232 2 171 4 113 1 275 1 140 1 55 2 278 1 251 1 118 2 363 1 252 1 29 1 30 1 339 2 297 2 237 1 145 1 217 4 319 2 179 4 279 2 180 1 181 1 60 1 368 1 257 1 203 2 15 1 301 1 289 1 222 1 350 2 163 1 244 1 
272 1 167 1 228 1 169 4 232 2 171 4 113 1 235 2 275 1 116 2 140 1 55 2 278 1 251 1 363 1 252 1 29 1 30 1 339 2 297 2 237 1 145 1 217 4 319 2 179 4 58 1 365 1 279 2 180 1 181 1 60 1 368 1 257 1 15 1 301 1 211 2 289 1 222 1 264 1 163 1 244 1 
272 1 130 1 167 1 25 1 228 1 169 5 194 1 232 2 171 4 113 1 275 1 140 1 55 3 278 1 251 1 118 2 29 1 363 1 252 1 30 1 339 2 297 2 237 1 145 1 217 4 319 3 179 5 180 1 279 3 181 1 60 1 368 1 257 1 203 2 15 1 301 1 97 1 289 1 222 1 350 2 163 1 244 1 
272 1 130 1 167 1 25 1 228 1 169 5 194 1 232 2 171 4 113 1 275 1 140 1 55 3 278 1 251 1 118 2 29 1 363 1 252 1 30 1 339 2 297 2 237 1 145 1 217 4 319 3 179 5 180 1 279 3 181 1 60 1 368 1 257 1 203 2 15 1 301 1 97 1 289 1 222 1 350 2 163 1 244 1 
167 1 169 4 113 1 171 4 116 2 55 2 251 1 252 1 297 2 339 2 217 4 179 4 180 1 60 1 181 1 257 1 15 1 301 1 303 1 222 1 272 1 228 1 232 2 235 2 275 1 140 1 278 1 29 1 363 1 30 1 237 1 145 1 319 2 365 1 279 2 368 1 211 2 289 1 163 1 
1 1 293 1 105 1 110 6 234 1 87 1 90 1 91 1 28 1 236 1 11 1 178 1 149 1 254 3 280 2 62 2 341 1 299 1 64 1 125 1 286 3 344 1 243 2 103 1 377 1 270 2 
1 11 105 1 110 14 137 1 87 2 90 1 249 1 91 2 215 1 28 2 236 2 11 2 148 1 33 3 254 8 120 2 150 1 255 1 280 1 62 1 341 11 299 2 370 3 205 1 258 2 286 6 302 1 158 1 290 1 243 4 103 4 269 1 270 2 
107 1 110 2 87 1 316 1 90 1 174 1 278 2 28 1 251 1 236 1 11 1 364 1 148 1 254 1 200 1 321 1 180 2 62 1 36 1 202 1 299 1 284 1 95 1 219 1 16 1 240 1 286 1 346 1 347 1 158 1 100 1 290 1 308 1 21 1 128 1 243 2 103 1 227 1 
293 1 1 7 105 3 294 1 110 20 174 1 249 4 251 1 11 3 178 1 120 2 254 10 180 3 62 2 341 7 299 3 64 1 258 2 219 1 125 1 344 1 346 2 347 1 21 3 128 1 308 2 227 1 269 2 270 8 87 3 90 3 316 2 143 1 278 3 91 3 28 3 236 3 197 1 149 1 148 1 364 3 200 2 321 2 201 1 280 4 366 2 202 2 95 3 323 2 284 2 286 10 39 2 158 1 290 1 100 2 243 6 103 7 378 2 46 2 
132 1 294 1 230 1 110 2 4 1 247 1 54 1 87 2 174 1 90 2 278 1 336 1 144 1 251 1 28 2 236 2 11 2 364 8 148 1 254 1 200 2 180 1 299 2 95 7 219 1 286 1 346 3 347 1 100 2 290 1 268 1 43 1 308 2 21 8 128 2 243 4 162 1 22 2 377 1 
1 1 105 1 110 3 87 1 90 1 278 1 91 1 28 1 251 1 236 1 11 1 120 1 254 1 180 1 280 1 341 1 299 1 369 1 258 1 219 1 260 1 286 2 347 1 158 1 243 2 103 1 269 1 270 1 310 1 
1 1 341 1 110 2 299 1 300 1 87 1 90 1 249 1 91 1 28 1 236 1 11 1 243 2 103 1 270 1 377 1 120 1 254 2 
280 1 1 1 341 1 105 1 110 2 299 1 52 1 286 2 87 1 90 1 28 1 236 1 11 1 243 2 103 1 269 1 270 1 377 1 
1 2 105 1 110 4 87 1 90 1 249 1 91 1 28 1 236 1 11 1 254 2 120 1 280 1 341 2 299 1 258 1 286 2 243 2 103 2 269 1 377 1 270 2 
1 1 341 1 110 2 299 1 300 1 87 1 90 1 249 1 336 1 91 1 28 1 236 1 11 1 243 2 103 1 270 1 120 1 254 2 
280 1 1 1 341 1 105 1 110 2 299 1 52 1 286 2 87 1 90 1 336 1 28 1 236 1 11 1 243 2 103 1 269 1 270 1 
1 2 105 1 110 4 87 1 90 1 249 1 91 1 336 1 28 1 236 1 11 1 254 2 120 1 280 1 341 2 299 1 258 1 286 2 243 2 103 2 269 1 270 2 
280 1 1 2 105 1 341 2 299 1 110 4 258 1 286 2 87 1 90 1 249 1 91 1 28 1 236 1 11 1 243 2 103 2 269 1 270 2 120 1 254 2 
110 2 87 1 316 1 90 1 278 1 28 1 236 1 11 1 148 1 364 1 254 1 200 1 321 1 180 1 62 1 202 1 299 1 284 1 95 1 286 1 346 1 100 1 290 1 308 1 21 1 128 1 243 2 46 1 
110 2 87 1 316 1 276 1 90 1 278 1 28 1 236 1 11 1 148 1 364 1 254 1 200 1 180 1 182 1 62 1 299 1 284 1 95 1 185 1 286 1 346 1 100 1 290 1 308 1 21 1 128 1 243 2 
1 2 105 1 110 4 87 1 90 1 249 1 91 1 28 1 236 1 11 1 254 2 120 1 280 1 341 2 299 1 258 1 286 2 158 1 243 2 103 2 269 1 270 2 
1 2 105 1 110 4 230 1 87 1 316 1 90 1 249 1 91 1 278 1 28 1 236 1 11 1 364 1 254 2 120 1 200 1 321 1 180 1 280 1 341 2 202 1 299 1 284 1 323 1 95 1 258 1 286 2 346 1 100 1 308 1 21 1 243 2 103 2 269 1 270 2 46 1 
1 1 105 1 110 3 87 1 90 1 173 1 249 1 278 1 91 1 28 1 251 1 236 1 11 1 120 1 254 2 180 1 341 1 299 1 258 1 219 1 260 1 286 1 347 1 158 1 243 2 103 1 269 1 270 1 310 1 
351 1 81 1 105 3 295 2 110 19 82 1 249 3 91 3 28 2 236 2 11 2 33 1 254 9 120 3 280 3 255 1 152 1 123 1 299 2 370 2 184 2 258 3 286 10 19 1 302 1 307 1 243 4 376 1 269 3 270 6 
351 2 81 2 106 1 105 1 110 17 49 1 6 1 91 2 28 2 236 2 11 2 298 1 33 2 254 9 120 2 280 1 255 2 152 1 299 2 370 2 184 2 258 2 286 8 328 1 307 1 243 4 226 1 376 1 269 1 270 1 
351 2 81 1 106 1 105 3 295 1 110 30 49 1 82 1 6 1 249 2 91 4 28 3 236 3 11 3 298 1 33 3 254 15 120 4 280 2 255 3 122 1 152 1 299 3 370 4 184 3 258 4 286 15 19 1 302 1 328 1 307 1 243 6 226 1 376 1 269 3 270 4 
351 2 81 1 106 1 105 3 295 1 110 30 49 1 82 1 6 1 249 2 91 4 28 3 236 3 11 3 298 1 33 3 254 15 120 4 280 3 255 3 122 1 152 1 299 3 370 4 184 3 258 4 286 15 19 1 302 1 328 1 307 1 243 6 226 1 376 1 269 3 270 5 
293 1 351 1 81 1 106 1 105 6 110 41 49 1 6 1 249 4 91 7 28 1 236 1 11 1 178 1 149 1 298 1 33 4 254 22 120 6 280 6 255 2 152 1 299 1 64 1 370 4 184 2 205 2 258 6 125 1 286 19 344 1 302 2 328 1 307 1 243 2 376 1 269 5 270 10 
327 1 20 1 108 1 170 1 231 1 94 1 31 1 373 1 53 1 24 1 
154 1 96 1 
191 1 61 1 170 1 231 1 94 1 373 1 53 1 24 1 262 1 
108 1 231 1 170 1 171 1 373 1 53 1 275 1 5 1 20 1 266 1 362 1 317 1 217 1 94 1 31 1 309 2 24 1 379 1 
108 1 231 1 170 1 171 1 373 1 53 1 275 1 5 1 20 1 266 1 362 1 317 1 217 1 94 1 31 1 309 2 24 1 379 1 
108 1 231 1 170 1 171 1 373 1 53 1 275 1 5 1 20 1 266 1 362 1 317 1 217 1 94 1 31 1 309 2 24 1 379 1 
23 1 355 1 210 1 
23 1 355 1 210 1 
9 1 324 1 
9 1 324 1 210 1 
37 1 48 1 
48 1 170 1 231 1 50 1 171 1 53 1 314 1 5 1 278 2 251 2 317 1 217 1 94 1 180 2 121 1 62 1 37 1 154 1 373 1 219 2 96 1 69 1 265 1 347 2 225 1 309 1 24 1 
23 1 355 1 
9 1 324 1 210 1 
190 1 110 2 353 1 356 1 87 1 90 1 278 2 251 2 28 1 236 1 11 1 364 2 148 1 254 1 200 1 180 2 299 1 95 2 286 1 326 1 346 1 158 1 100 1 290 1 268 1 43 1 308 1 21 2 161 1 243 2 22 2 
131 1 129 1 294 1 230 1 273 2 95 2 204 1 3 1 136 1 342 1 141 1 98 1 127 1 100 1 349 1 318 1 308 1 21 2 364 2 
131 1 294 1 273 2 95 1 204 1 3 1 136 1 342 1 141 1 98 1 100 1 349 1 318 1 21 1 308 1 364 1 80 1 
95 1 204 1 346 1 296 1 144 1 127 1 100 1 308 1 128 1 21 1 162 1 364 1 34 1 200 1 
131 1 129 1 294 1 273 2 95 1 204 1 3 1 136 1 342 1 141 1 98 1 127 1 100 1 349 1 318 1 21 1 308 1 364 1 
109 1 
272 1 167 1 222 1 253 1 234 1 275 1 88 1 
272 1 181 1 25 1 167 1 228 1 169 1 203 1 171 1 235 1 275 2 140 1 222 1 29 1 118 1 339 1 217 1 350 1 
167 8 105 2 169 5 113 2 171 5 214 2 118 6 339 3 217 5 253 1 59 2 120 2 181 4 256 2 14 1 258 2 259 1 222 9 346 10 306 2 71 2 73 1 308 3 128 1 21 3 76 2 78 1 269 2 272 2 228 4 230 1 312 1 354 2 235 12 275 8 315 2 88 1 140 4 142 6 91 2 29 4 364 3 200 3 281 1 282 3 284 3 95 3 39 2 288 1 374 2 100 4 42 2 101 2 245 6 
272 1 167 3 106 1 228 2 105 1 169 1 49 1 112 1 171 1 235 6 275 4 140 2 6 1 142 4 91 1 29 2 118 3 339 1 217 1 298 1 33 1 120 1 255 1 181 2 370 1 258 1 222 5 328 1 71 1 269 1 245 4 
293 1 167 2 228 1 105 1 194 1 214 1 171 1 140 1 278 1 91 2 251 1 29 1 217 1 149 1 180 1 60 1 181 1 206 1 219 1 260 1 125 1 287 1 223 1 305 1 222 2 71 2 347 1 166 1 
272 1 181 1 167 1 228 1 275 1 140 1 88 1 222 1 29 1 253 1 
167 5 105 2 214 1 258 2 235 10 275 5 39 1 142 5 91 2 222 5 71 2 118 5 269 2 120 2 245 5 
272 1 169 1 339 1 171 1 217 1 275 1 
292 1 167 2 228 2 193 1 169 4 2 1 312 2 171 3 140 2 144 1 29 1 339 2 217 3 364 4 200 1 181 2 183 1 367 1 95 4 288 1 346 1 222 2 100 1 308 1 21 4 128 2 101 2 162 1 78 2 
110 1 87 1 316 1 90 1 358 1 278 3 28 1 251 2 236 1 11 1 364 1 200 1 321 1 180 3 62 1 299 1 202 1 95 1 284 1 206 1 219 2 260 2 286 1 346 1 347 2 290 1 100 1 243 2 21 1 128 1 308 1 46 1 
272 2 167 2 181 1 228 1 235 4 275 4 140 1 344 1 142 2 222 1 118 2 29 1 101 1 78 1 245 2 
196 1 170 1 53 1 
108 1 48 1 170 1 114 1 53 1 
196 1 170 1 53 1 
196 1 170 1 53 1 
126 1 170 1 53 1 
126 1 170 1 53 1 
126 1 170 1 53 1 
170 1 53 1 
373 1 24 1 
280 2 293 1 105 1 110 8 299 2 64 1 125 1 286 4 344 1 249 1 91 1 28 2 236 2 11 2 243 4 226 1 178 1 149 1 254 4 270 3 
293 1 280 2 105 1 110 6 64 1 234 1 286 3 125 1 344 1 91 1 178 1 149 1 270 2 254 3 
280 1 105 1 299 1 110 4 258 1 207 1 286 2 249 1 91 1 28 1 236 1 11 1 243 2 269 1 270 2 120 1 254 2 
280 1 255 1 105 1 110 7 370 2 258 1 286 4 302 1 249 1 91 1 269 1 33 1 254 3 120 1 270 2 
293 2 105 3 110 23 85 1 249 4 91 3 28 2 236 2 11 2 178 1 149 2 33 2 120 2 254 11 150 1 280 5 299 2 64 1 370 2 205 1 258 2 125 1 286 12 344 1 302 1 243 4 226 2 269 2 270 9 
110 1 370 1 286 1 
110 1 33 1 254 1 
280 2 105 1 299 1 110 6 258 1 207 1 286 3 39 1 249 1 91 1 28 1 236 1 11 1 243 2 269 1 120 1 254 3 270 3 
280 1 255 1 106 1 105 1 152 1 299 1 110 10 49 1 370 1 258 2 286 4 6 1 91 2 328 1 28 1 236 1 11 1 243 2 298 1 269 1 33 1 270 1 120 2 254 6 
293 1 280 1 105 1 110 6 125 1 286 3 249 1 91 1 149 1 254 3 270 2 
280 1 293 1 110 3 299 1 64 1 85 1 286 2 249 1 28 1 236 1 11 1 243 2 178 1 226 1 149 1 254 1 270 2 
293 2 280 3 105 2 152 1 299 1 110 10 286 5 125 1 249 2 305 1 91 2 28 1 236 1 11 1 243 2 149 2 270 5 254 5 
152 1 299 1 110 2 249 1 91 1 28 1 236 1 11 1 243 2 120 1 254 2 270 1 
280 1 105 1 152 1 299 1 110 4 258 1 286 2 249 1 91 1 28 1 236 1 11 1 243 2 269 1 270 2 120 1 254 2 
293 1 280 1 152 1 110 3 299 3 82 1 85 1 286 2 249 1 28 3 236 3 11 3 243 6 226 1 149 1 270 2 254 1 
293 3 105 5 110 34 82 1 85 1 249 5 7 1 91 5 360 1 8 1 28 5 236 5 11 5 178 1 149 3 33 3 254 16 120 3 255 1 280 7 152 1 299 5 64 1 370 4 258 3 207 1 125 2 286 18 344 1 302 1 243 10 226 2 269 3 270 12 
293 1 105 1 110 8 91 1 28 1 236 1 11 1 178 1 149 1 33 1 254 4 255 1 280 2 152 1 299 1 64 1 370 1 286 4 125 1 344 1 328 1 243 2 270 2 
293 1 105 1 110 11 249 1 91 2 28 2 236 2 11 2 178 1 149 1 33 1 254 6 120 1 280 2 255 1 152 1 299 2 64 1 370 2 258 1 207 1 125 1 286 5 344 1 302 1 328 1 243 4 270 3 
105 1 106 1 110 11 49 1 6 1 91 2 28 2 236 2 11 2 298 1 33 1 254 6 120 2 255 1 280 1 152 1 299 2 370 1 258 2 286 5 328 1 243 4 226 1 269 1 270 1 
280 1 255 1 106 1 105 1 152 1 299 1 110 10 49 1 370 1 258 2 286 4 6 1 91 2 328 1 28 1 236 1 11 1 243 2 298 1 269 1 33 1 270 1 120 2 254 6 
293 1 105 1 110 8 91 1 28 1 236 1 11 1 178 1 149 1 33 1 254 4 255 1 280 2 152 1 299 1 64 1 370 1 286 4 125 1 344 1 328 1 243 2 270 2 
280 1 255 1 106 1 105 1 152 1 299 1 110 10 49 1 370 1 258 2 286 4 6 1 91 2 328 1 28 1 236 1 11 1 243 2 298 1 269 1 33 1 270 1 120 2 254 6 
106 1 105 1 110 11 49 1 6 1 91 2 28 3 236 3 11 3 298 1 33 1 254 6 120 2 255 1 280 1 152 1 299 3 370 1 258 2 207 1 286 5 328 1 243 6 226 1 269 1 270 1 
106 1 105 1 110 11 49 1 82 1 6 1 91 2 28 3 236 3 11 3 298 1 33 1 254 6 120 2 255 1 280 2 152 1 299 3 370 1 258 2 286 5 328 1 243 6 226 1 269 1 270 2 
293 3 280 3 105 1 110 7 64 1 286 4 125 1 249 3 91 1 178 2 149 3 270 6 254 3 
106 1 105 1 110 11 49 1 82 1 6 1 91 2 28 3 236 3 11 3 298 1 33 1 254 6 120 2 255 1 280 1 152 1 299 3 370 1 258 2 286 5 328 1 243 6 226 1 269 1 270 1 
180 1 62 1 278 1 251 1 30 1 75 1 86 1 
180 1 332 1 62 1 352 1 115 1 248 1 138 1 86 1 278 1 251 1 30 1 75 1 
346 1 144 1 95 1 100 1 308 1 162 1 21 1 128 1 364 1 234 1 200 1 
180 2 62 1 202 1 284 1 95 1 219 1 316 1 174 1 346 1 278 2 347 1 251 1 100 1 128 1 21 1 308 1 364 1 200 1 
312 1 174 1 316 1 278 2 251 2 252 1 364 1 200 2 180 2 60 1 62 1 256 1 202 1 95 1 284 2 219 2 346 3 347 1 100 1 308 1 21 1 76 1 163 1 
312 1 174 1 316 1 278 2 251 2 252 1 364 2 200 2 180 2 60 1 62 1 256 1 153 1 95 2 284 2 219 2 185 1 346 3 347 1 100 1 308 1 21 2 76 1 163 1 
272 1 169 1 312 1 171 2 113 1 275 1 217 2 364 3 200 1 256 1 153 1 282 1 95 3 284 1 374 1 304 1 346 4 100 1 159 1 308 1 21 3 76 1 128 1 
272 1 256 1 153 1 282 1 169 1 284 1 95 3 312 1 113 1 171 2 275 1 374 1 306 1 346 4 100 1 128 1 76 1 217 2 21 3 308 1 364 3 200 1 
95 1 100 1 308 1 21 1 364 1 4 1 
132 1 294 1 134 1 14 1 230 1 95 6 284 1 4 1 285 1 247 1 54 1 346 3 100 3 268 1 128 2 21 7 308 2 22 1 364 7 79 1 200 2 
1 1 293 1 105 1 110 6 230 1 356 1 87 2 316 1 90 2 174 1 91 1 278 2 28 2 251 1 236 2 11 2 178 1 149 1 364 1 254 3 200 1 321 1 180 2 280 2 341 1 62 2 299 2 202 1 64 1 284 1 95 1 323 1 219 1 286 3 125 1 344 1 346 1 347 1 158 1 100 1 308 1 243 4 21 1 103 1 270 2 378 1 46 1 
272 1 167 1 228 2 169 2 171 3 113 1 354 1 275 1 315 1 88 1 140 2 29 2 339 1 217 3 253 1 364 1 181 2 282 1 95 1 288 1 69 1 374 1 222 1 306 1 346 2 42 1 128 1 21 1 
14 1 230 1 95 2 284 1 4 1 374 1 346 2 73 1 100 2 21 2 308 1 364 2 200 1 
153 1 230 1 95 4 144 1 346 1 100 1 57 1 128 1 21 4 162 1 308 1 364 4 200 1 
134 1 95 2 284 1 312 1 285 1 143 1 346 1 359 1 40 1 100 2 21 2 308 1 364 2 200 1 
131 1 98 1 273 1 95 1 100 1 318 1 308 1 21 1 128 1 364 1 
190 1 346 1 294 1 230 1 95 2 100 1 268 1 308 1 21 2 364 2 200 1 
132 1 230 1 95 4 312 1 247 1 144 1 346 3 100 2 268 1 57 1 162 1 128 1 21 5 308 2 364 5 200 2 
230 1 311 1 95 4 312 1 247 1 144 1 346 3 100 2 268 1 57 1 162 1 128 1 21 5 308 2 364 5 200 2 
180 2 62 1 284 1 95 1 219 1 185 1 316 1 174 1 346 1 278 2 347 1 251 1 100 1 128 1 21 1 308 1 364 1 200 1 
134 1 14 1 95 1 284 1 312 1 285 1 346 1 100 2 21 1 308 1 364 1 79 1 200 1 
277 1 62 1 192 1 111 1 84 1 
272 1 60 1 62 1 192 2 47 1 111 2 113 1 171 2 209 1 275 1 84 2 277 1 69 1 263 1 357 1 252 1 237 1 217 2 163 1 
180 1 192 1 353 1 84 1 277 1 326 1 278 1 251 1 161 1 
277 1 263 1 209 1 
283 1 119 1 234 1 68 1 
117 1 283 1 322 1 157 1 238 1 119 1 68 1 
267 1 238 1 320 1 
151 2 322 1 283 1 241 1 68 1 195 1 117 1 157 3 10 1 238 3 119 1 239 1 
117 1 283 1 322 1 157 2 238 2 119 1 165 1 68 1 343 1 
131 1 322 1 273 1 68 1 141 1 117 1 157 1 10 1 41 1 238 1 199 1 
117 1 283 1 322 1 157 1 10 1 238 1 68 1 
117 1 283 2 322 1 157 1 10 1 238 1 119 1 
283 1 322 2 68 1 117 2 157 2 92 1 10 1 238 2 198 1 32 1 
283 1 322 1 51 1 68 2 117 1 337 1 157 3 10 1 41 1 238 3 93 1 119 1 165 2 
131 1 283 1 322 1 273 2 274 1 68 1 141 1 117 1 157 2 10 1 318 1 238 2 349 1 119 1 165 1 
218 1 283 1 322 2 51 1 343 1 68 2 117 2 157 4 10 1 41 1 238 4 119 1 165 2 
117 1 283 1 322 1 157 1 10 1 238 1 119 1 68 1 
151 1 283 2 322 1 51 1 68 3 195 1 117 1 157 4 41 1 238 4 119 2 77 1 165 2 239 1 
283 1 322 1 313 1 83 1 68 1 139 1 117 1 157 2 10 1 238 2 119 1 165 1 
151 2 322 1 283 1 68 1 195 1 117 1 157 3 10 1 238 3 119 1 35 1 239 2 
335 2 330 1 27 1 68 2 
117 1 322 1 157 1 10 1 26 1 238 1 
117 1 283 1 322 1 157 2 10 1 93 1 238 2 119 1 165 1 68 1 
44 1 
117 1 283 1 322 1 157 1 10 1 238 1 119 1 68 1 
151 1 117 1 283 1 322 1 157 3 10 1 93 1 238 3 119 1 165 1 68 1 
41 1 51 1 77 1 68 1 
283 1 68 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
343 1 363 2 169 1 35 1 71 1 240 1 219 4 72 1 325 1 106 9 265 1 200 1 330 1 292 5 110 3 293 9 19 2 224 2 248 2 134 2 84 1 356 1 295 6 296 1 24 2 159 2 59 1 340 1 
343 1 363 2 169 1 35 1 71 1 240 1 219 4 72 1 325 1 106 9 265 1 200 1 330 1 292 5 110 3 293 9 19 2 224 2 248 2 134 2 84 1 356 1 295 6 296 1 159 2 24 2 59 1 340 1 
343 1 363 2 169 1 35 1 71 1 240 1 219 5 72 1 325 1 106 10 265 1 200 1 330 1 292 6 110 4 293 10 19 2 224 2 248 2 134 2 84 1 356 1 295 7 296 1 159 2 24 2 59 1 340 1 
363 2 169 1 35 1 71 1 240 1 219 3 72 1 325 1 106 7 265 1 200 1 330 1 292 4 110 2 293 7 19 2 224 2 248 2 134 2 84 1 356 1 295 4 296 1 159 2 24 1 59 1 340 1 
106 4 343 1 200 1 292 3 110 1 224 1 19 1 293 4 363 1 134 1 84 1 356 1 295 3 35 1 24 2 159 1 219 2 72 1 
106 2 292 1 7 1 19 1 293 2 224 1 363 1 49 1 112 1 134 1 169 1 248 1 84 1 356 1 35 1 296 1 
106 3 292 2 110 1 19 2 293 3 134 2 248 1 84 1 356 1 295 1 35 1 71 1 219 1 
343 1 363 1 35 1 71 1 219 4 72 1 263 1 325 1 106 9 200 1 292 5 110 3 293 9 19 2 224 1 248 1 134 2 84 1 356 1 295 7 158 1 24 2 159 1 59 1 
343 1 363 1 35 1 71 1 219 4 72 1 263 1 325 1 106 9 200 1 292 5 110 3 293 9 19 2 224 1 248 1 134 2 84 1 356 1 295 7 158 1 24 2 159 1 59 1 
93 1 153 1 83 1 
113 1 162 2 153 1 
269 1 22 2 76 2 284 2 270 2 130 1 197 2 222 2 
276 1 163 2 97 1 98 1 259 1 301 2 170 1 171 1 216 1 70 1 321 2 307 1 172 2 284 2 196 1 37 1 197 2 370 1 287 1 222 2 76 2 45 2 129 1 18 1 352 1 130 1 269 1 22 3 135 1 314 1 136 1 89 1 380 1 270 3 381 1 91 1 275 1 
22 1 76 1 379 1 284 1 195 1 270 1 130 1 272 1 197 1 222 1 
6 1 30 1 261 1 203 1 153 1 83 1 22 1 249 1 235 1 34 1 379 1 270 1 197 1 54 1 
76 1 30 2 261 1 203 1 153 1 83 1 22 1 249 1 34 1 379 1 284 1 270 1 54 2 197 1 222 1 
60 1 359 1 229 1 30 1 54 1 
161 1 60 1 359 1 30 2 54 2 221 1 153 1 83 1 
359 1 30 1 54 1 
76 1 60 1 130 1 30 1 151 1 22 1 379 1 195 1 284 1 270 1 272 1 54 1 197 1 222 1 
153 1 
161 1 60 1 359 1 30 2 54 2 20 1 153 1 83 1 
326 1 161 1 60 2 359 2 344 1 328 2 372 1 30 5 360 1 364 1 233 2 153 1 83 1 164 1 304 1 54 5 369 2 120 1 253 1 
269 1 93 1 
76 1 48 1 22 2 269 2 13 1 284 1 270 2 197 2 222 1 
236 1 336 1 367 1 
276 1 45 1 129 1 18 1 352 1 269 1 22 1 314 1 216 1 321 1 308 1 172 1 270 1 196 1 91 1 370 1 
76 1 276 1 45 1 129 1 18 1 352 1 22 2 314 1 216 1 321 1 172 1 367 1 284 1 196 1 270 2 91 1 197 1 370 1 103 1 317 1 
269 1 22 3 76 3 284 3 270 3 197 3 317 1 222 1 
22 1 76 1 379 1 284 1 270 1 272 1 197 1 
22 1 76 1 379 1 13 1 284 1 270 1 197 1 48 1 222 1 
276 1 163 1 98 1 30 1 259 1 301 2 119 1 261 1 171 1 216 1 34 1 321 1 366 1 13 1 172 1 284 3 196 1 37 1 197 3 370 1 103 1 287 1 222 2 76 3 45 1 129 1 352 1 18 1 130 1 203 1 269 1 22 4 135 1 314 1 249 1 136 1 379 1 89 1 380 1 270 4 381 1 91 1 54 1 317 1 
269 1 22 2 76 1 291 1 284 1 270 2 6 1 197 2 317 1 
76 3 30 1 203 1 119 1 261 1 153 1 22 3 9 1 249 1 34 1 379 1 13 1 284 3 270 3 54 1 197 3 103 1 317 2 222 1 
76 2 22 2 13 1 336 1 284 2 367 1 270 2 197 2 317 1 222 1 
276 1 45 1 129 1 18 1 352 1 269 1 22 1 314 1 216 1 321 1 172 1 270 1 196 1 91 1 370 1 
45 1 129 1 18 1 280 1 269 1 22 1 314 1 216 1 321 1 172 1 217 1 270 1 196 1 91 1 370 1 
342 1 163 4 255 1 186 1 98 1 66 1 301 2 171 1 236 2 194 1 367 2 287 1 176 1 350 1 150 1 313 1 135 1 136 1 89 2 336 2 381 1 298 1 338 1 275 2 
22 1 76 1 34 1 379 1 17 1 284 1 270 1 197 1 
76 4 291 1 6 1 22 5 269 1 251 1 13 1 284 4 270 5 147 1 197 5 317 2 103 1 222 1 
22 2 76 2 379 1 17 1 284 2 270 2 272 1 197 2 
15 1 361 1 
15 1 361 1 
4 1 202 1 
4 1 202 1 
4 1 202 1 
15 1 361 1 281 1 
15 1 361 1 281 1 
15 1 361 1 281 1 
316 1 15 1 361 1 
4 1 202 1 57 1 27 1 15 2 361 2 
47 1 15 1 361 1 
47 1 15 1 361 1 
47 1 15 1 361 1 
143 1 63 2 177 1 77 2 30 2 361 2 153 1 303 1 101 2 87 1 226 1 183 1 237 3 54 2 273 2 57 1 15 2 124 2 16 1 
254 1 63 1 256 1 118 1 30 1 361 1 8 1 101 1 284 2 237 1 197 2 324 1 15 1 124 1 76 2 77 1 246 1 269 1 22 2 139 1 226 1 270 2 316 1 54 1 
159 1 224 1 363 1 
224 1 363 1 112 1 
210 1 43 1 159 2 224 3 260 1 112 1 
43 1 159 1 286 1 224 2 260 1 112 1 
43 1 159 1 224 2 260 2 112 1 
161 1 60 4 211 1 61 1 254 1 359 1 162 3 256 1 186 1 30 5 66 1 360 1 233 1 234 2 369 1 371 1 350 1 326 3 128 2 244 1 328 1 246 1 372 2 83 1 153 2 113 1 378 2 137 1 138 1 88 1 54 5 298 1 
60 7 161 1 61 2 359 6 162 9 229 5 256 4 186 3 30 9 66 3 360 1 365 1 233 2 164 1 234 6 305 1 285 1 369 2 371 3 350 3 326 8 310 1 128 6 79 5 328 2 372 6 82 1 83 1 153 5 113 3 137 1 88 2 54 9 56 1 298 3 
60 2 211 1 61 1 162 4 256 1 186 1 30 3 66 1 233 1 164 1 234 2 369 1 371 1 350 1 326 3 128 2 328 1 372 2 83 1 153 3 113 2 378 1 138 1 88 1 54 3 298 1 
211 1 61 1 60 3 162 7 256 2 186 2 30 4 66 2 365 1 233 1 164 1 234 4 369 1 371 2 350 2 326 5 128 4 328 1 372 4 82 1 83 1 153 4 113 3 378 2 138 1 88 1 54 4 56 1 298 2 
348 1 370 1 93 1 
349 1 370 1 
204 1 
129 1 370 1 
348 2 216 1 52 1 129 1 370 3 33 1 
216 1 129 1 370 1 
279 1 370 1 
3 1 184 1 163 7 150 2 145 2 66 1 266 1 99 1 376 1 194 3 89 3 174 1 297 1 298 1 92 1 104 1 275 4 
3 1 184 1 163 7 150 2 145 2 66 1 266 1 99 1 376 1 194 3 89 3 174 1 297 1 298 1 92 1 104 1 275 4 
3 1 184 1 163 7 150 2 145 2 66 1 373 1 266 1 99 1 376 1 194 3 89 3 174 1 297 1 298 1 92 1 104 1 275 4 
3 1 184 2 163 31 186 3 145 3 66 4 99 2 301 2 189 1 171 1 102 1 194 10 174 5 104 1 371 3 350 3 311 1 150 5 201 1 329 1 266 1 376 2 135 1 136 1 156 3 206 1 89 15 225 1 381 1 297 2 92 1 58 4 298 4 275 16 
184 1 3 1 163 9 145 2 66 1 99 1 301 4 171 2 194 4 174 1 104 1 311 1 150 3 266 1 135 2 376 1 136 2 89 4 315 1 227 1 381 2 297 1 298 1 275 5 
210 1 142 1 64 1 363 1 214 1 35 1 321 1 172 1 196 1 146 1 241 1 148 1 106 2 243 1 45 1 292 1 293 2 19 1 224 2 112 1 134 1 248 1 314 1 84 1 356 1 295 1 116 1 115 1 159 1 271 1 
210 1 142 1 64 1 363 1 318 1 35 1 321 1 172 1 196 1 146 1 220 1 148 1 106 3 243 1 45 1 292 1 293 3 19 1 224 2 112 1 134 1 248 1 314 1 356 1 114 1 295 2 116 1 115 1 159 1 271 1 
210 1 64 1 363 1 318 1 35 1 321 1 172 1 196 1 146 1 148 1 106 2 243 1 45 1 292 1 293 2 224 2 112 1 248 1 314 1 356 1 295 2 114 1 116 1 115 1 159 1 
67 1 321 1 172 1 196 1 146 2 370 1 39 1 220 1 74 1 106 1 289 1 243 2 45 1 129 1 18 1 293 1 19 1 268 1 314 1 134 1 248 2 116 2 140 1 
210 1 106 1 142 1 45 1 243 1 64 1 224 2 19 1 293 1 363 1 318 1 112 1 314 1 214 1 248 1 134 1 84 1 321 1 115 1 172 1 116 1 159 1 196 1 271 1 146 1 148 1 
21 1 
161 3 61 1 2 1 212 2 162 2 299 1 6 1 261 1 11 4 215 1 172 2 309 1 129 1 18 2 83 1 268 1 22 1 314 1 181 2 270 1 140 1 359 6 144 1 230 2 30 5 187 1 360 1 233 1 319 1 235 1 192 1 193 1 34 1 321 2 283 2 36 2 196 1 322 1 369 1 197 1 370 1 105 1 326 2 45 2 328 1 372 2 203 1 153 2 247 1 249 1 113 2 205 2 379 1 54 5 208 2 
161 1 2 1 359 2 212 1 30 3 6 1 187 1 20 1 203 1 261 1 319 1 22 1 249 1 192 1 11 2 235 1 34 1 379 1 322 1 270 1 54 3 197 1 
161 1 2 1 359 1 30 3 6 1 187 1 20 1 203 1 261 1 153 1 83 1 319 1 22 1 249 1 192 1 11 3 235 1 34 1 379 1 181 1 322 1 270 1 54 3 197 1 
161 1 2 1 359 2 212 1 6 1 30 3 187 1 261 1 319 1 235 1 11 3 192 1 34 1 322 1 36 1 197 1 20 1 203 1 83 1 153 1 22 1 249 1 379 1 270 1 181 1 54 3 
161 3 2 1 212 4 6 1 261 1 166 1 11 6 218 1 126 1 127 1 20 1 83 5 22 1 270 1 181 4 359 7 144 1 230 2 30 5 187 1 360 1 233 1 319 1 192 1 235 1 193 1 34 1 282 1 283 2 36 4 322 1 197 1 369 1 326 1 328 1 372 1 203 1 153 5 249 1 205 2 113 2 379 1 54 5 208 2 
2 1 161 2 162 2 212 2 6 1 261 1 11 4 83 1 22 1 270 1 181 2 359 4 144 1 230 2 30 4 187 1 360 1 233 1 319 1 193 1 192 1 235 1 34 1 283 2 322 1 36 2 197 1 369 1 326 1 328 1 372 1 203 1 153 2 247 1 249 1 205 2 113 2 379 1 54 4 208 2 
161 2 2 1 359 4 212 2 144 1 230 2 6 1 30 4 187 1 360 1 233 1 261 1 319 1 193 1 235 1 11 4 192 1 34 1 282 1 283 2 36 2 218 1 322 1 197 1 369 1 326 1 127 1 328 1 372 1 203 1 153 1 83 1 22 1 249 1 113 2 205 2 379 1 181 2 270 1 54 4 208 2 
161 2 2 1 359 4 212 2 144 1 230 2 6 1 30 4 187 1 360 1 233 1 261 1 319 1 193 1 235 1 11 4 192 1 34 1 282 1 283 2 36 2 218 1 322 1 197 1 369 1 326 1 127 1 328 1 372 1 203 1 153 1 83 1 22 1 249 1 113 2 205 2 379 1 181 2 270 1 54 4 208 2 
161 2 2 1 359 4 212 2 162 2 144 1 65 1 6 1 30 4 187 1 360 1 362 2 233 1 261 1 319 1 235 1 11 4 192 1 34 1 283 2 36 2 218 1 322 1 197 1 369 1 123 2 326 1 264 1 328 1 80 1 372 1 203 1 153 1 83 1 22 1 249 1 379 1 181 2 270 1 54 4 208 2 
161 2 2 1 359 5 212 3 144 1 230 2 6 1 30 4 187 1 360 1 233 1 261 1 319 1 193 1 235 1 11 5 192 1 34 1 282 1 283 2 218 1 322 1 36 3 369 1 197 1 126 1 326 1 127 1 328 1 372 1 203 1 153 1 83 1 22 1 249 1 113 2 205 2 379 1 270 1 181 3 54 4 208 2 
161 2 2 1 359 5 212 3 144 1 230 2 6 1 30 4 187 1 360 1 233 1 261 1 319 1 193 1 235 1 11 5 192 1 34 1 282 1 283 2 218 1 322 1 36 3 369 1 197 1 126 1 326 1 127 1 328 1 372 1 203 1 153 1 83 1 22 1 249 1 113 2 205 2 379 1 270 1 181 3 54 4 208 2 
2 1 161 2 162 2 212 2 6 1 261 1 11 4 123 2 264 1 83 1 22 1 270 1 181 2 359 4 144 1 30 4 187 1 360 1 362 2 233 1 319 1 192 1 235 1 34 1 283 2 322 1 36 2 197 1 369 1 326 1 328 1 372 1 203 1 153 1 247 1 249 1 379 1 54 4 208 2 
3 1 163 6 98 1 145 1 66 1 99 1 301 2 171 1 236 1 194 2 367 1 104 1 287 1 150 2 266 1 313 1 269 2 376 1 135 1 136 1 89 3 336 1 381 1 298 1 93 1 275 3 
163 14 345 1 98 1 186 1 66 1 189 1 301 4 170 1 171 2 236 11 194 2 367 11 174 1 37 1 38 1 371 2 287 2 350 2 46 1 150 1 353 1 269 1 135 2 136 2 156 3 252 1 89 6 225 1 336 4 381 2 58 3 298 2 275 8 
276 1 163 2 345 1 98 1 301 2 320 1 170 1 171 1 216 1 321 1 172 1 308 1 284 1 196 1 197 1 37 1 370 1 103 1 40 1 287 1 42 1 76 1 45 1 129 1 352 1 18 1 269 1 22 2 314 1 135 1 136 1 89 1 336 1 270 2 91 1 381 1 317 1 275 1 
3 1 163 20 345 1 66 3 301 6 170 1 171 3 216 2 172 3 174 4 350 2 76 1 129 2 18 1 352 2 266 1 178 1 267 2 133 1 269 2 312 1 22 3 135 3 314 2 136 3 23 2 89 10 270 3 91 2 317 1 275 10 276 2 98 3 186 2 145 1 99 1 318 1 236 7 321 3 194 8 284 1 367 7 196 2 37 1 197 1 370 2 104 1 103 1 371 2 287 3 290 2 45 3 150 4 376 1 250 2 380 2 336 7 381 3 298 3 
96 1 163 2 213 1 98 2 232 1 318 1 301 4 170 1 171 2 321 7 70 2 172 8 284 1 196 2 368 1 197 1 37 1 370 3 241 1 287 2 242 1 76 1 45 8 129 2 18 2 268 1 313 1 22 1 314 2 135 2 332 1 136 2 53 1 89 1 270 1 381 2 140 1 317 1 275 1 
163 3 345 1 98 1 186 1 66 1 301 2 236 1 171 1 194 1 13 1 367 1 284 1 197 1 371 1 222 1 287 1 350 1 76 1 150 1 22 1 135 1 136 1 333 1 89 2 336 1 270 1 381 1 298 1 275 1 
163 2 98 1 301 2 313 1 135 1 236 1 136 1 171 1 194 1 336 1 367 1 174 1 381 1 298 1 287 1 176 1 350 1 275 2 
163 2 150 1 98 1 186 1 66 1 301 2 313 1 135 1 236 1 136 1 171 1 194 1 89 2 336 1 367 1 381 1 338 1 287 1 
163 4 98 1 186 1 66 1 301 2 171 1 236 2 194 2 367 2 174 1 371 1 350 1 287 1 150 1 313 1 135 1 136 1 89 2 336 2 381 1 298 1 275 2 
163 2 98 1 301 2 135 1 236 1 136 1 171 1 194 1 53 1 336 1 367 1 174 1 381 1 298 1 287 1 176 1 350 1 275 2 
163 2 150 1 98 1 186 1 66 1 301 2 135 1 236 1 136 1 171 1 194 1 53 1 89 2 336 1 367 1 381 1 338 1 287 1 
163 4 98 1 186 1 66 1 301 2 171 1 236 2 194 2 367 2 174 1 371 1 350 1 287 1 150 1 135 1 136 1 53 1 89 2 336 2 381 1 298 1 275 2 
163 4 98 1 186 1 66 1 301 2 171 1 236 2 194 2 367 2 174 1 371 1 350 1 287 1 150 1 135 1 136 1 89 2 336 2 381 1 298 1 275 2 
276 1 163 2 98 1 301 2 170 1 171 1 216 1 321 1 172 1 196 1 37 1 370 1 287 1 45 1 129 1 352 1 18 1 269 1 22 1 314 1 135 1 136 1 89 1 380 1 270 1 91 1 381 1 275 1 
163 2 98 1 280 1 301 2 302 1 170 1 171 1 216 1 321 1 172 1 217 1 196 1 37 1 370 1 287 1 45 1 129 1 18 1 269 1 22 1 314 1 135 1 136 1 89 1 270 1 91 1 381 1 275 1 
163 4 345 1 98 1 186 1 66 1 301 2 171 1 236 2 194 2 367 2 174 1 371 1 350 1 287 1 150 1 135 1 136 1 89 2 336 2 381 1 298 1 275 2 
276 1 163 4 186 1 98 1 66 1 301 2 236 2 171 1 216 1 194 2 321 1 172 1 367 2 196 1 174 1 370 1 241 1 371 1 350 1 287 1 45 1 129 1 150 1 352 1 22 1 314 1 135 1 136 1 23 1 89 2 336 2 380 1 270 1 91 1 381 1 298 1 275 2 
163 3 345 1 186 1 98 1 66 1 301 2 171 1 236 1 194 1 13 1 284 1 367 1 174 1 197 1 371 1 222 1 287 1 350 1 76 1 22 1 135 1 51 1 136 1 89 1 336 1 270 1 381 1 298 1 275 2 
163 19 186 3 66 3 31 1 100 1 189 1 301 4 167 1 191 2 171 2 306 1 194 6 174 3 175 1 371 3 125 2 350 3 288 1 150 3 135 2 136 2 156 1 335 1 89 10 225 1 227 1 381 2 58 2 298 3 275 9 
163 26 186 2 258 1 66 2 31 2 100 1 301 6 189 2 190 1 165 1 167 1 191 1 171 3 194 4 306 2 174 2 175 1 371 3 125 4 350 3 311 2 78 1 150 2 111 1 135 3 136 3 156 2 89 12 227 1 381 3 55 1 58 2 298 3 275 14 
3 1 163 41 186 4 145 1 258 1 66 5 31 1 99 1 100 1 189 3 301 6 165 1 190 1 167 1 191 1 171 3 306 2 194 8 174 4 104 1 175 1 371 4 125 4 350 4 75 1 311 1 78 1 150 4 266 1 111 1 376 1 135 3 136 3 156 3 335 1 89 21 225 1 227 1 381 3 55 1 58 4 298 5 275 20 
3 1 163 38 186 3 145 1 258 1 66 4 31 1 99 1 100 1 189 3 301 8 165 1 190 1 167 1 191 1 171 4 306 2 194 7 174 3 104 1 175 1 371 4 125 4 350 4 75 1 311 2 78 1 150 4 266 1 111 1 376 1 135 4 136 4 156 3 335 1 89 18 225 1 227 1 381 4 55 1 58 4 298 5 275 20 
3 1 163 52 186 7 145 1 258 1 66 8 31 1 99 1 100 1 189 2 301 4 165 1 190 1 167 1 191 1 171 2 306 1 194 14 174 7 104 1 175 1 371 7 125 4 350 7 311 1 78 1 150 7 266 1 111 1 376 1 135 2 136 2 156 4 252 2 89 25 225 2 227 1 381 2 55 1 58 4 298 8 275 27 
101 1 63 1 177 1 77 1 108 1 57 1 15 1 361 1 124 1 303 1 
139 1 316 1 
101 1 63 1 77 1 300 1 231 1 15 1 361 1 274 1 124 1 
143 1 63 1 177 1 77 1 30 1 361 1 153 1 303 1 101 1 87 1 226 1 237 2 54 1 273 1 57 1 15 1 124 1 16 1 
143 1 63 1 177 1 77 1 30 1 361 1 153 1 303 1 101 1 87 1 226 1 237 2 54 1 273 1 57 1 15 1 124 1 16 1 
143 1 63 1 177 1 77 1 30 1 361 1 153 1 303 1 101 1 87 1 226 1 237 2 54 1 273 1 57 1 15 1 124 1 16 1 
337 1 27 1 281 1 
337 1 27 1 281 1 
47 1 122 1 
47 1 27 1 122 1 
118 1 324 1 
60 1 254 1 63 1 256 1 118 1 30 1 361 1 8 1 101 1 284 2 237 1 324 1 197 2 15 1 16 1 124 1 76 2 77 1 246 1 331 1 269 1 22 2 139 1 270 2 316 1 273 1 54 1 
337 1 281 1 
47 1 27 1 122 1 
163 2 345 1 98 1 301 2 170 1 171 1 70 2 321 2 172 2 196 1 368 1 197 2 37 1 370 1 287 1 223 1 242 1 199 1 44 1 45 2 129 1 374 1 22 2 314 1 135 1 136 1 89 1 270 2 381 1 358 1 275 1 
210 1 1 1 142 1 45 2 64 1 347 1 224 2 363 1 318 1 112 1 314 1 321 2 172 2 159 1 180 1 196 1 146 1 241 1 148 1 
210 1 142 1 45 1 64 1 81 1 224 2 363 1 318 1 112 1 314 1 321 1 172 1 159 1 180 1 196 1 146 1 148 1 
45 1 129 1 18 1 29 1 347 1 67 1 268 1 314 1 321 1 172 1 196 1 146 1 370 1 140 1 
210 1 1 1 142 1 45 1 64 1 347 1 224 2 363 1 318 1 112 1 314 1 321 1 172 1 159 1 180 1 196 1 146 1 148 1 
278 1 
326 1 304 1 372 1 93 1 153 1 83 1 253 1 
161 1 359 1 162 1 230 1 30 1 360 1 233 1 193 1 369 1 326 1 328 1 372 1 153 2 83 1 113 1 205 1 54 1 
61 2 161 3 162 12 257 2 66 2 168 2 304 1 348 2 12 1 216 3 349 3 172 3 262 1 350 2 351 2 128 6 129 3 18 1 83 2 314 4 90 2 357 2 28 1 359 5 279 2 186 2 30 5 360 4 188 2 233 4 33 1 234 6 321 3 196 3 369 4 370 10 241 1 105 1 149 1 371 2 326 9 290 2 45 3 107 2 328 4 372 8 203 2 153 8 113 6 157 1 207 2 54 5 298 2 253 1 
95 1 61 1 161 1 359 1 162 6 186 2 30 1 66 2 188 1 360 2 189 1 233 2 190 1 165 1 168 2 234 5 369 2 105 1 371 2 350 2 326 8 128 5 78 1 328 2 372 5 131 1 111 1 153 5 83 2 113 3 156 1 54 1 55 1 58 1 298 2 
3 1 30 1 66 1 188 1 360 1 99 1 233 1 168 2 69 1 282 1 195 1 284 1 369 1 197 1 222 1 326 2 76 1 328 1 130 1 372 2 151 1 22 1 376 1 379 1 270 1 272 1 54 1 298 2 
326 1 328 1 372 1 360 1 233 1 83 1 153 1 304 1 369 1 253 1 
326 5 290 1 162 10 128 5 186 2 372 5 66 2 188 1 153 5 168 2 234 5 113 5 298 2 371 2 350 2 
161 1 359 1 30 1 54 1 153 1 83 1 
61 2 161 2 359 4 299 1 30 3 360 1 233 2 164 1 321 4 172 4 173 1 196 1 369 2 262 1 370 1 105 2 149 2 41 1 309 1 326 2 45 4 129 1 328 2 18 2 372 2 268 1 314 1 54 3 140 1 
276 1 163 1 98 1 259 1 301 2 171 1 216 1 321 1 172 1 284 2 196 1 37 1 197 2 370 1 222 2 287 1 76 2 45 1 129 1 18 1 352 1 130 1 269 1 22 3 135 1 314 1 136 1 89 1 380 1 270 3 381 1 91 1 
326 1 61 1 162 4 128 2 328 1 145 1 372 2 360 1 233 1 83 2 153 4 234 2 113 2 369 1 105 1 
63 1 77 1 25 1 
63 1 77 1 25 1 
63 1 77 1 25 1 
377 1 63 1 77 1 324 1 303 1 
63 1 160 1 77 1 
63 1 160 1 77 1 
63 1 160 1 77 1 
63 1 77 1 
15 1 361 1 
3 1 311 1 163 8 150 2 145 1 66 1 266 1 99 1 301 4 135 2 376 1 136 2 171 2 194 3 89 4 174 1 381 2 298 1 104 1 275 4 
376 1 3 1 163 6 194 2 89 3 150 2 145 1 66 1 266 1 298 1 99 1 104 1 93 1 275 3 
163 4 150 1 186 1 66 1 301 2 68 1 135 1 136 1 171 1 194 2 89 2 381 1 174 1 298 1 371 1 350 1 275 2 
163 7 150 1 186 1 66 1 189 1 156 1 194 2 89 4 225 1 174 1 58 2 298 1 371 1 275 3 350 1 
3 1 163 23 186 2 145 1 66 3 99 2 301 4 171 2 194 9 174 4 238 1 104 1 371 2 350 2 311 2 150 5 353 1 266 1 376 2 135 2 136 2 156 2 89 12 252 1 225 1 381 2 298 3 58 2 275 11 
163 1 89 1 58 1 
163 1 156 1 275 1 
290 1 163 6 186 1 150 2 66 1 301 2 68 1 135 1 171 1 136 1 194 3 89 3 381 1 174 1 298 1 371 1 350 1 275 3 
163 12 186 2 66 2 189 1 301 2 190 1 165 1 171 1 194 2 174 1 371 2 350 2 150 1 78 1 111 1 135 1 136 1 156 1 89 6 227 1 381 1 55 1 58 1 298 2 275 6 
3 1 163 6 150 1 66 1 99 1 376 1 194 2 89 3 174 1 298 1 275 3 
311 1 163 3 150 1 266 1 99 1 301 2 376 1 135 1 136 1 171 1 194 2 89 2 174 1 238 1 381 1 104 1 275 1 
3 1 163 10 150 3 66 2 99 2 301 2 135 1 376 2 171 1 136 1 69 1 194 5 89 5 227 1 381 1 174 2 298 2 275 5 
163 2 301 2 135 1 136 1 171 1 194 1 227 1 381 1 174 1 298 1 350 1 275 2 
163 4 150 1 186 1 66 1 301 2 135 1 136 1 171 1 194 2 89 2 227 1 381 1 174 1 298 1 371 1 350 1 275 2 
311 1 163 3 150 1 99 1 301 6 135 3 376 1 136 3 171 3 194 2 335 1 89 2 227 1 238 1 381 3 174 1 275 1 
3 2 163 34 186 3 145 1 66 5 99 3 189 1 301 10 68 1 102 1 171 5 194 12 238 1 174 5 104 1 371 3 350 3 311 2 150 7 329 1 266 1 376 3 135 5 136 5 206 1 156 3 89 18 335 1 225 1 227 1 381 5 58 4 298 5 275 16 
3 1 163 8 145 1 66 1 99 1 189 1 301 2 171 1 194 2 104 1 150 2 266 1 111 1 135 1 376 1 136 1 156 1 89 4 227 1 381 1 298 1 58 1 275 4 
3 1 163 11 145 1 66 1 99 1 189 1 301 4 68 1 171 2 194 3 174 1 104 1 371 1 350 1 150 2 266 1 111 1 376 1 135 2 136 2 156 1 89 5 225 1 227 1 381 2 58 2 298 2 275 6 
3 1 163 19 186 2 145 1 66 3 99 1 189 1 301 6 190 1 165 1 68 1 171 3 194 4 174 1 104 1 371 2 350 2 311 1 150 3 78 1 266 1 111 1 376 1 135 3 136 3 156 1 89 10 227 1 381 3 55 1 58 1 298 3 275 9 
3 1 163 17 186 1 145 1 66 2 99 1 189 1 301 6 190 1 165 1 68 1 171 3 194 5 174 2 104 1 371 2 350 2 311 1 150 3 78 1 266 1 111 1 376 1 135 3 136 3 156 1 89 7 227 1 381 3 55 1 58 1 298 3 275 10 
3 1 163 8 145 1 66 1 99 1 189 1 301 2 171 1 194 2 104 1 150 2 266 1 111 1 135 1 376 1 136 1 156 1 89 4 227 1 381 1 298 1 58 1 275 4 
163 12 186 2 66 2 189 1 301 2 190 1 165 1 171 1 194 2 174 1 371 2 350 2 150 1 78 1 111 1 135 1 136 1 156 1 89 6 227 1 381 1 55 1 58 1 298 2 275 6 
3 1 163 18 186 1 145 1 66 2 99 1 189 1 301 8 190 1 165 1 68 1 171 4 194 5 174 2 104 1 371 2 350 2 311 2 78 1 150 3 266 1 111 1 376 1 135 4 136 4 156 1 89 8 227 1 381 4 55 1 58 1 298 3 275 10 
163 16 186 2 66 2 189 1 301 8 190 1 165 1 171 4 194 6 174 3 371 3 350 3 311 2 78 1 150 3 111 1 135 4 136 4 156 1 89 7 335 1 227 1 381 4 55 1 58 1 298 3 275 9 
3 1 163 7 150 3 66 1 266 2 99 3 376 3 194 6 89 4 174 3 104 1 298 1 275 3 
3 1 163 18 186 1 145 1 66 2 99 1 189 1 301 8 190 1 165 1 171 4 194 4 174 1 104 1 371 2 350 2 311 2 78 1 150 3 266 1 111 1 376 1 135 4 136 4 156 1 89 8 335 1 227 1 381 4 55 1 58 1 298 3 275 10 
269 1 22 1 341 1 291 1 270 1 6 1 197 1 
341 1 291 1 6 1 354 1 32 1 269 1 50 1 22 1 10 1 270 1 197 1 121 1 
314 1 321 1 172 1 45 1 129 1 18 1 196 1 370 1 140 1 93 1 268 1 
76 1 276 1 45 1 129 1 18 1 269 1 22 2 314 1 216 1 321 1 172 1 284 1 270 2 196 1 91 1 197 1 370 1 317 1 
276 1 279 1 261 1 216 2 34 1 321 1 172 1 284 1 196 1 197 2 370 3 149 1 76 2 45 1 107 1 129 2 269 1 22 2 314 1 379 1 270 2 91 1 317 1 
279 1 280 1 261 1 216 2 34 1 321 2 172 2 284 1 196 1 197 2 370 3 149 1 76 2 45 2 107 1 129 2 245 1 269 1 22 2 314 1 379 1 270 2 91 1 317 1 
359 1 327 1 107 1 45 3 129 1 18 1 279 1 245 1 30 2 203 1 153 1 83 1 314 1 348 1 216 1 321 3 172 3 349 1 196 1 239 1 54 2 370 4 149 1 
359 1 107 1 45 3 129 1 18 1 279 1 245 1 30 2 203 1 153 1 83 1 314 1 348 1 216 1 321 3 172 3 349 1 90 1 196 1 54 2 370 4 149 1 
314 1 321 1 172 1 45 1 213 1 196 1 
242 1 0 1 96 1 62 1 213 1 45 7 129 2 18 2 232 1 318 1 33 1 179 1 314 3 332 1 216 1 70 1 321 6 172 7 196 2 370 3 241 1 
3 1 163 6 345 1 66 1 301 4 171 2 216 1 172 1 223 1 76 1 129 1 352 1 266 1 22 2 269 2 135 2 314 1 136 2 23 1 89 3 270 2 91 1 317 1 275 3 276 1 98 2 145 1 99 1 236 1 321 1 194 2 284 1 367 1 196 1 197 1 370 1 104 1 241 1 287 2 45 1 150 2 376 1 250 1 336 1 380 1 381 2 298 1 
60 1 161 1 359 2 257 1 30 3 360 2 233 2 304 1 348 1 321 1 172 1 349 1 369 2 262 1 370 2 326 1 45 1 18 1 328 2 372 1 203 1 153 1 83 1 207 1 90 1 54 3 357 1 253 1 
213 1 45 2 129 1 33 1 348 1 314 2 157 1 216 1 321 2 172 2 196 1 370 2 241 1 
45 4 129 1 18 1 245 1 268 1 294 1 314 1 321 4 172 4 196 1 140 1 370 1 241 1 
0 1 62 1 45 2 129 1 178 1 375 1 314 2 216 1 321 2 172 2 196 1 26 1 370 1 149 1 
314 1 321 1 172 1 45 1 64 1 18 1 196 1 224 1 363 1 112 1 
242 1 199 1 45 2 129 1 318 1 314 1 321 2 172 2 196 1 370 1 241 1 
242 1 96 1 45 5 129 2 18 1 268 1 294 1 314 2 332 1 321 4 172 5 196 2 140 1 370 3 241 1 149 1 
242 1 5 1 96 1 45 5 129 2 18 1 268 1 294 1 314 2 321 4 172 5 196 2 140 1 370 3 241 1 149 1 
76 1 45 1 129 1 18 1 280 1 269 1 22 2 314 1 216 1 321 1 172 1 284 1 270 2 196 1 91 1 197 1 370 1 317 1 
0 1 62 1 45 1 129 1 33 1 179 1 314 2 216 1 321 1 172 1 196 1 370 1 149 1 
22 1 209 1 44 1 270 1 346 1 182 1 197 1 374 1 358 1 
155 1 346 1 109 1 
269 1 209 1 185 1 182 1 346 1 
209 2 60 1 185 2 346 1 30 2 109 1 203 1 261 1 119 1 153 1 83 1 269 1 155 1 249 1 34 1 379 1 117 1 182 2 54 2 
356 1 35 1 292 1 93 1 
106 1 134 1 356 1 35 1 292 1 293 1 19 1 
248 1 243 1 293 1 
106 3 134 1 85 1 84 1 356 1 35 1 296 2 292 1 293 3 19 1 355 1 152 1 
106 2 134 1 356 1 295 1 35 1 24 1 292 1 293 2 19 1 
106 1 134 1 84 1 200 1 159 1 292 1 224 1 219 1 293 1 19 1 363 1 
106 1 134 1 84 1 356 1 292 1 293 1 19 1 
106 1 134 1 84 1 356 2 35 1 293 1 19 1 
106 2 134 2 84 1 356 1 14 1 292 1 293 2 19 2 339 1 132 1 
106 3 292 2 110 1 19 1 293 3 134 1 84 1 356 1 295 2 35 1 219 1 59 1 325 1 
106 2 210 1 292 1 224 2 19 1 293 2 363 1 112 1 134 1 84 1 356 1 295 1 35 1 159 1 73 1 
106 4 343 1 292 2 110 1 19 2 293 4 134 2 84 1 356 1 295 2 35 1 24 1 219 1 
106 1 134 1 84 1 356 1 35 1 292 1 293 1 19 1 
106 4 292 3 110 1 293 4 19 1 152 1 134 1 85 1 356 2 295 2 35 2 296 1 219 1 94 1 
198 1 106 2 292 1 19 1 293 2 134 1 84 1 356 1 295 1 35 1 323 1 263 1 
106 3 277 1 292 1 19 1 293 3 152 2 134 1 85 1 84 1 356 1 35 1 296 2 
228 1 86 2 334 1 292 2 
141 1 106 1 134 1 84 1 293 1 19 1 
106 2 134 1 84 1 356 1 295 1 35 1 292 1 293 2 19 1 59 1 
154 1 
106 1 134 1 84 1 356 1 35 1 292 1 293 1 19 1 
106 3 292 1 19 1 293 3 134 1 84 1 295 1 356 1 35 1 296 1 59 1 
106 1 295 1 292 1 110 1 293 1 219 1 
356 1 292 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
235 9 89 2 205 1 363 3 366 1 340 1 341 2 288 1 141 1 215 5 270 1 374 1 61 2 95 1 96 1 272 6 125 1 254 4 126 1 226 9 308 2 358 1 278 2 232 1 49 2 132 1 381 1 262 2 
235 9 89 2 205 1 363 3 366 1 340 1 341 2 288 1 141 1 215 5 270 1 374 1 61 2 95 1 96 1 272 6 125 1 254 4 126 1 226 9 308 2 358 1 278 2 232 1 49 2 132 1 381 1 262 2 
235 10 89 2 205 1 363 4 366 1 340 1 341 2 288 1 141 1 215 6 270 1 374 1 61 2 95 1 96 1 272 7 125 1 254 5 126 1 226 10 308 2 358 1 278 2 232 1 49 2 132 1 381 1 262 2 
235 7 89 1 205 1 363 2 366 1 340 1 341 2 288 1 141 1 215 4 270 1 374 1 61 2 95 1 272 4 125 1 254 3 126 1 226 7 308 2 358 1 278 2 232 1 49 2 132 1 381 1 262 2 
96 1 272 3 235 4 89 2 363 1 205 1 341 1 254 2 226 4 308 1 358 1 278 1 232 1 49 1 215 3 132 1 381 1 61 1 
235 2 366 1 341 1 141 1 317 1 226 2 308 1 358 1 278 1 371 1 295 1 215 1 232 1 49 1 132 1 262 1 
272 1 235 3 363 1 341 2 125 1 254 1 226 3 308 2 358 1 232 1 215 2 132 1 262 1 
235 9 89 2 363 3 205 1 341 2 288 1 187 1 215 5 245 1 61 1 95 1 272 7 96 1 125 1 254 4 226 9 308 2 358 1 278 1 232 1 49 1 132 1 381 1 262 1 
235 9 89 2 363 3 205 1 341 2 288 1 187 1 215 5 245 1 61 1 95 1 272 7 96 1 125 1 254 4 226 9 308 2 358 1 278 1 232 1 49 1 132 1 381 1 262 1 
312 1 230 1 365 1 
172 2 312 1 279 1 
116 1 20 2 186 2 104 2 111 2 296 2 223 2 335 1 
108 1 206 1 138 1 237 1 111 3 162 1 210 1 289 1 142 2 264 1 116 1 186 2 145 1 296 3 12 2 75 1 36 1 169 1 373 2 300 1 151 1 20 2 152 1 173 1 99 1 22 1 81 1 223 2 46 2 69 1 104 2 260 1 105 2 379 1 52 1 135 1 335 1 
20 1 186 1 104 1 155 1 32 1 208 1 111 1 296 1 223 1 335 1 
20 1 312 1 32 1 111 1 66 1 181 1 4 1 128 1 230 1 259 1 296 1 29 1 203 1 136 1 
20 1 312 1 32 1 111 1 181 1 223 1 4 1 186 1 128 2 104 1 230 1 259 1 296 1 29 2 136 1 
128 1 29 1 23 1 299 1 150 1 
93 1 128 2 312 1 230 1 29 2 13 1 23 1 150 1 
128 1 29 1 23 1 
20 1 32 1 208 1 111 1 3 1 223 1 128 1 186 1 104 1 155 1 296 1 29 1 150 1 335 1 
312 1 
93 1 227 1 128 2 312 1 230 1 29 2 23 1 150 1 
284 1 312 1 163 1 164 1 343 1 23 2 275 1 93 1 354 2 277 1 128 5 230 1 9 1 231 1 29 5 380 1 134 2 150 2 178 2 
116 1 365 1 
20 2 109 1 111 2 223 1 186 1 116 2 104 1 229 1 296 2 
267 1 303 1 353 1 
151 1 108 1 237 1 138 1 111 1 99 1 196 1 22 1 210 1 116 1 296 1 379 1 105 1 12 1 169 1 373 1 
151 1 20 1 108 1 138 1 237 1 111 2 99 1 303 1 195 1 22 1 57 1 210 1 186 1 104 1 296 2 379 1 105 1 12 1 169 1 373 1 
116 1 20 3 186 3 104 3 111 3 296 3 57 1 223 1 
20 1 186 1 104 1 32 1 208 1 111 1 296 1 
20 1 186 1 109 1 104 1 229 1 32 1 111 1 296 1 223 1 
108 1 138 1 237 1 32 1 111 4 162 1 181 1 57 1 210 1 289 1 142 1 264 1 4 1 116 1 115 1 186 3 296 4 12 1 75 1 36 1 169 1 373 1 300 1 151 1 20 3 173 1 99 1 195 1 22 1 81 1 223 2 46 2 128 1 104 3 229 1 259 1 260 1 29 1 379 1 105 1 204 1 135 1 136 1 335 1 
116 1 20 2 186 1 104 1 111 2 296 2 221 1 57 1 203 1 
20 3 312 1 32 1 111 3 195 1 181 1 57 2 223 1 4 1 128 1 186 3 129 1 115 1 104 3 229 1 259 1 296 3 29 1 136 1 
20 2 111 2 303 1 57 1 223 1 267 1 186 2 104 2 229 1 296 2 
151 1 108 1 237 1 138 1 111 1 99 1 22 1 210 1 116 1 296 1 379 1 105 1 12 1 373 1 169 1 
151 1 108 1 237 1 138 1 111 1 22 1 253 1 116 1 228 1 296 1 379 1 105 1 12 1 373 1 169 1 
158 1 289 2 142 4 267 2 147 1 75 1 36 1 193 1 16 1 300 1 219 1 62 1 173 1 43 1 303 2 81 1 197 1 68 1 353 2 46 2 69 2 26 1 281 1 135 1 
20 1 186 1 292 1 104 1 32 1 259 1 111 1 296 1 
20 5 111 5 195 1 221 1 101 1 57 2 223 1 186 4 116 1 104 4 229 1 202 1 296 5 203 1 
20 2 186 2 292 1 104 2 32 1 208 1 111 2 296 2 
182 1 351 1 
182 1 351 1 
362 1 72 1 
362 1 72 1 
362 1 72 1 
182 1 351 1 17 1 
182 1 316 1 351 1 
375 1 362 1 56 1 182 2 351 2 72 1 
182 1 351 1 17 1 
182 1 351 1 17 1 
364 1 182 1 351 1 
364 1 182 1 351 1 
364 1 182 1 351 1 
273 1 90 2 312 1 120 1 40 2 207 2 56 1 182 2 351 2 113 1 265 1 290 1 128 2 7 3 70 1 293 1 200 2 84 2 29 2 
90 1 207 1 111 2 139 1 92 1 182 1 316 1 113 1 116 1 186 2 7 1 370 1 294 1 296 2 347 1 20 2 40 1 351 1 128 1 104 2 84 1 130 1 29 1 360 1 
278 1 49 1 61 1 
278 1 371 1 49 1 
310 1 371 1 49 3 309 1 61 2 336 1 
310 1 121 1 371 1 49 2 309 1 61 1 
310 1 371 1 49 2 309 2 61 1 
158 1 86 1 338 2 312 2 139 1 164 2 163 3 93 1 34 1 6 1 370 1 347 1 193 1 150 4 219 1 172 3 326 1 65 2 252 1 197 1 23 1 198 1 45 1 354 1 277 1 128 5 279 1 230 1 29 5 331 2 134 1 178 1 
158 3 86 2 87 5 312 5 140 1 164 6 163 8 93 1 34 2 370 4 35 1 242 1 9 1 168 1 217 1 193 3 299 5 150 7 219 3 172 9 65 6 252 1 197 3 23 6 198 3 354 2 128 9 355 1 277 1 279 3 230 1 29 9 331 6 134 2 178 2 
158 1 86 1 312 3 338 1 163 3 164 2 34 1 370 1 9 1 193 1 150 2 219 1 326 1 172 4 65 2 197 1 198 1 45 1 354 1 128 3 279 2 230 1 29 3 331 2 134 1 178 1 
158 2 86 1 312 4 338 2 140 1 163 5 164 4 34 1 370 2 35 1 9 1 168 1 193 2 150 3 219 2 172 7 326 1 65 4 197 2 198 2 45 1 354 1 128 4 279 3 230 1 29 4 331 4 134 1 178 1 
137 1 365 1 169 1 
102 1 169 1 
251 1 
108 1 169 1 
137 2 108 1 138 1 350 1 169 3 176 1 
108 1 138 1 169 1 
169 1 24 1 
219 1 171 2 39 1 62 3 91 1 43 2 289 3 142 7 69 4 48 1 268 1 244 1 192 1 78 1 261 1 193 1 157 1 
219 1 171 2 39 1 62 3 91 1 43 2 289 3 142 7 69 4 48 1 268 1 244 1 192 1 78 1 261 1 193 1 157 1 
219 1 171 2 39 1 62 3 91 1 43 2 161 1 289 3 142 7 69 4 48 1 268 1 244 1 192 1 78 1 261 1 193 1 157 1 
158 3 0 1 91 1 367 1 289 15 142 31 268 2 322 1 244 2 297 1 75 1 192 1 14 4 78 5 193 4 300 1 301 3 219 4 171 3 39 1 62 10 122 1 173 1 43 5 197 3 198 3 46 2 69 16 357 1 48 2 71 1 261 1 135 1 157 2 
367 1 74 1 289 4 142 9 268 1 244 1 75 2 192 1 78 1 193 1 300 2 219 1 171 2 62 4 39 1 173 2 43 3 46 4 69 5 201 1 48 1 261 1 135 2 157 1 
235 2 313 1 341 1 314 1 183 1 165 1 320 1 371 1 215 1 372 1 12 1 373 1 15 1 61 1 272 1 151 1 41 1 22 1 327 1 256 1 226 2 308 1 358 1 278 1 232 1 49 2 105 1 132 1 262 1 336 1 
235 3 341 1 183 1 185 1 165 1 320 1 371 1 215 1 298 1 372 1 12 1 373 1 15 1 94 1 61 1 272 2 151 1 41 1 22 1 327 1 256 1 226 3 308 1 358 1 278 1 232 1 49 2 105 1 336 1 262 1 
235 2 183 1 165 1 320 1 371 1 215 1 298 1 372 1 12 1 373 1 94 1 61 1 272 2 151 1 41 1 22 1 256 1 226 2 358 1 278 1 232 1 49 2 105 1 262 1 336 1 
151 1 235 1 108 1 97 1 2 1 341 1 22 1 183 2 225 1 25 1 256 2 226 1 185 1 308 1 372 2 379 1 105 1 12 1 118 1 169 1 106 1 373 1 262 2 
235 1 341 1 314 1 183 1 165 1 320 1 371 1 372 1 12 1 373 1 15 1 94 1 61 1 151 1 41 1 22 1 327 1 256 1 226 1 308 1 278 1 49 2 105 1 132 1 262 1 336 1 
28 1 
181 1 93 3 4 1 296 1 12 2 248 1 349 1 151 1 18 1 20 1 22 1 66 1 67 2 23 6 354 1 356 1 259 1 29 5 105 2 203 1 106 1 108 1 312 2 160 4 32 1 111 1 164 2 163 2 34 1 166 1 216 2 269 1 77 2 373 2 169 1 79 1 172 2 42 2 82 1 224 2 225 1 83 1 128 5 277 1 279 2 230 1 280 1 330 1 379 2 51 1 333 2 134 1 177 2 178 1 136 1 
160 2 32 1 111 1 181 1 4 1 93 1 216 1 296 1 269 1 79 1 18 1 20 1 66 1 82 1 23 2 356 1 128 3 227 1 259 1 29 3 203 1 136 1 
312 1 160 3 32 1 111 1 181 1 4 1 93 1 296 1 269 1 79 1 18 1 20 1 66 1 82 1 23 1 356 1 128 3 227 1 230 1 259 1 29 3 203 1 333 1 136 1 
312 1 160 3 32 1 111 1 181 1 93 1 4 1 216 1 296 1 269 1 79 1 18 1 20 1 66 1 82 1 23 2 224 1 227 1 356 1 128 3 230 1 259 1 29 3 203 1 333 1 136 1 
312 5 160 6 32 1 111 1 181 1 164 1 163 1 93 3 4 1 216 4 269 1 296 1 218 1 77 2 324 1 248 1 79 1 18 1 20 1 194 1 42 2 304 1 66 1 82 1 67 2 23 7 224 4 354 1 27 1 277 1 356 1 227 1 128 5 279 2 230 5 259 1 29 5 51 1 203 1 134 1 333 4 177 2 178 1 136 1 
181 1 4 1 93 2 296 1 248 1 18 1 20 1 66 1 67 2 23 4 354 1 356 1 259 1 29 4 203 1 312 2 160 4 32 1 111 1 163 1 164 1 216 2 269 1 77 2 79 1 172 2 42 2 82 1 224 2 83 1 128 4 277 1 279 2 230 1 51 1 134 1 333 2 136 1 178 1 177 2 
312 1 160 4 32 1 111 1 181 1 164 1 163 1 93 2 4 1 216 2 296 1 269 1 218 1 77 2 324 1 248 1 79 1 18 1 20 1 42 2 304 1 66 1 82 1 23 4 67 2 224 2 354 1 356 1 128 4 277 1 279 2 230 1 259 1 29 4 51 1 203 1 333 2 134 1 177 2 178 1 136 1 
312 1 160 4 32 1 111 1 181 1 164 1 163 1 93 2 4 1 216 2 296 1 269 1 218 1 77 2 324 1 248 1 79 1 18 1 20 1 42 2 304 1 66 1 82 1 23 4 67 2 224 2 354 1 356 1 128 4 277 1 279 2 230 1 259 1 29 4 51 1 203 1 333 2 134 1 177 2 178 1 136 1 
312 1 160 4 32 1 111 1 181 1 163 1 164 1 93 2 4 1 240 1 216 2 296 1 269 1 59 2 77 2 248 1 79 1 18 1 38 1 20 1 172 2 98 2 304 1 174 1 66 1 82 1 23 4 224 2 354 1 356 1 128 4 277 1 230 1 259 1 29 4 203 1 333 2 134 1 177 2 178 1 136 1 
312 1 160 5 32 1 111 1 181 1 164 1 163 1 93 2 4 1 216 3 296 1 269 1 218 1 77 2 324 1 248 1 79 1 18 1 20 1 42 2 304 1 66 1 82 1 67 2 23 5 224 3 354 1 27 1 277 1 356 1 128 4 279 2 230 1 259 1 29 4 51 1 203 1 134 1 333 3 177 2 178 1 136 1 
312 1 160 5 32 1 111 1 181 1 164 1 163 1 93 2 4 1 216 3 296 1 269 1 218 1 77 2 324 1 248 1 79 1 18 1 20 1 42 2 304 1 66 1 82 1 67 2 23 5 224 3 354 1 27 1 277 1 356 1 128 4 279 2 230 1 259 1 29 4 51 1 203 1 134 1 333 3 177 2 178 1 136 1 
181 1 4 1 93 2 296 1 59 2 248 1 18 1 20 1 98 2 66 1 23 4 354 1 356 1 259 1 29 4 203 1 312 1 160 4 32 1 111 1 164 1 163 1 216 2 269 1 77 2 79 1 38 1 172 2 82 1 224 2 83 1 128 4 277 1 230 1 134 1 333 2 136 1 178 1 177 2 
365 1 289 3 142 6 267 1 116 2 268 1 244 1 75 1 36 1 192 1 193 1 300 1 219 1 171 1 62 2 39 1 173 1 43 2 303 1 81 1 68 1 353 1 46 2 69 3 261 1 135 1 
158 1 162 1 184 1 289 6 142 14 267 4 116 1 322 1 75 2 36 2 14 3 78 1 193 1 300 2 301 3 219 2 62 2 173 2 43 1 303 11 124 1 81 1 222 1 197 2 198 2 353 11 46 4 69 8 357 1 359 1 30 1 52 1 135 2 
108 1 138 1 237 1 111 2 162 1 57 1 210 1 289 1 142 2 267 1 116 1 186 1 296 2 12 1 36 1 75 1 169 1 373 1 300 1 151 1 20 1 173 1 99 1 195 1 22 1 196 1 274 1 81 1 199 1 46 2 69 1 104 1 329 1 359 1 105 1 379 1 52 1 135 1 
88 2 54 1 237 2 138 2 342 1 57 1 289 10 142 20 186 1 244 1 296 3 12 3 192 1 94 1 193 3 300 3 151 2 19 2 20 1 62 8 99 2 154 1 195 1 303 7 22 2 197 2 198 2 353 7 69 10 104 1 359 1 105 3 261 1 158 2 108 2 111 3 162 1 210 2 264 2 211 2 318 2 267 7 116 2 268 1 75 3 36 3 373 3 169 2 78 4 219 3 171 1 39 1 173 3 43 4 81 3 46 6 379 1 52 1 135 3 
236 1 138 1 57 1 287 1 289 1 142 2 186 1 345 1 296 1 12 7 94 1 300 2 151 3 20 1 302 1 22 4 352 1 68 1 69 1 258 1 104 1 105 6 106 1 108 3 206 1 313 1 111 1 162 1 213 1 76 1 36 2 75 2 323 1 373 7 169 4 80 1 173 2 81 2 225 1 46 4 379 2 233 1 52 1 135 2 
158 1 111 1 289 2 142 3 267 1 186 1 167 1 296 1 75 1 36 1 193 1 300 1 219 1 20 1 62 1 173 1 43 1 303 1 81 1 197 1 223 1 198 1 353 1 46 2 69 1 104 1 229 1 359 1 135 1 
300 1 219 1 62 1 173 1 303 1 81 1 197 1 142 2 68 1 353 1 46 2 267 1 26 1 69 2 36 1 75 1 78 1 135 1 
300 1 158 1 62 1 173 1 43 1 303 1 81 1 289 2 142 2 68 1 353 1 46 2 267 1 36 1 75 1 135 1 16 1 193 1 
158 1 289 2 142 4 267 2 75 1 36 1 78 1 193 1 300 1 219 1 62 2 173 1 43 1 303 2 81 1 197 1 198 1 68 1 353 2 46 2 69 2 135 1 
300 1 219 1 62 1 236 1 173 1 303 1 81 1 197 1 142 2 353 1 46 2 267 1 26 1 69 2 36 1 75 1 78 1 135 1 
300 1 158 1 62 1 236 1 173 1 43 1 303 1 81 1 289 2 142 2 353 1 46 2 267 1 36 1 75 1 135 1 16 1 193 1 
158 1 236 1 289 2 142 4 267 2 75 1 36 1 78 1 193 1 300 1 219 1 62 2 173 1 43 1 303 2 81 1 197 1 198 1 353 2 46 2 69 2 135 1 
158 1 289 2 142 4 267 2 75 1 36 1 78 1 193 1 300 1 219 1 62 2 173 1 43 1 303 2 81 1 197 1 198 1 353 2 46 2 69 2 135 1 
108 1 138 1 237 1 111 1 162 1 210 1 289 1 142 2 264 1 116 1 296 1 12 1 36 1 75 1 373 1 169 1 300 1 151 1 173 1 99 1 22 1 81 1 46 2 69 1 105 1 379 1 52 1 135 1 
108 1 138 1 237 1 111 1 162 1 289 1 142 2 143 1 116 1 296 1 12 1 36 1 75 1 373 1 169 1 300 1 151 1 173 1 22 1 81 1 253 1 46 2 69 1 228 1 105 1 379 1 52 1 135 1 
158 1 289 2 142 4 267 2 75 1 36 1 78 1 193 1 300 1 219 1 62 2 173 1 43 1 303 2 81 1 197 1 198 1 353 2 46 2 69 2 359 1 135 1 
158 1 108 1 313 1 138 1 237 1 111 1 210 1 289 2 142 4 264 1 318 1 267 2 296 1 12 1 36 1 75 1 78 1 373 1 169 1 193 1 300 1 219 1 151 1 62 2 173 1 43 1 99 1 303 2 22 1 81 1 197 1 198 1 353 2 46 2 69 2 105 1 135 1 
158 1 111 1 289 1 142 3 5 1 267 1 186 1 296 1 75 1 36 1 78 1 193 1 300 1 219 1 20 1 62 1 173 1 303 1 81 1 197 1 223 1 198 1 353 1 46 2 69 2 104 1 229 1 359 1 135 1 
158 3 209 1 315 1 368 1 239 1 289 10 142 19 241 1 322 1 75 2 246 2 14 2 247 2 78 3 193 3 300 2 301 1 219 3 62 6 173 2 43 3 377 1 197 3 198 3 46 4 69 9 357 1 201 1 135 2 107 1 
158 2 367 2 315 1 289 12 239 1 142 26 241 2 146 1 321 1 11 1 75 3 246 4 14 2 247 1 78 2 148 1 193 2 300 3 301 2 219 3 250 1 62 4 173 3 43 2 377 1 197 3 198 3 46 6 69 14 357 2 201 1 282 1 135 3 107 2 
289 21 239 1 142 41 291 1 241 1 146 1 244 1 11 1 14 4 246 4 192 1 247 1 148 1 193 5 300 3 301 3 250 1 62 8 197 4 198 4 69 20 357 3 201 1 261 1 107 2 158 4 367 1 209 1 315 1 321 1 268 1 322 1 75 3 78 4 219 5 171 1 39 1 173 3 377 1 43 4 46 6 135 3 282 1 
158 3 209 1 367 2 315 1 239 1 289 18 142 38 291 1 146 1 241 1 268 1 321 1 322 1 244 1 11 1 75 4 192 1 246 4 14 4 247 1 78 3 148 1 193 4 300 4 301 3 219 5 171 1 250 1 39 1 62 7 173 4 43 4 377 1 197 4 198 4 46 8 69 20 357 3 201 1 261 1 282 1 135 4 107 2 
158 7 367 1 315 1 239 1 289 25 142 52 146 1 241 1 268 1 321 1 322 2 244 1 11 1 75 2 192 1 246 4 14 4 247 1 78 7 148 1 193 8 300 2 301 4 219 8 171 1 250 1 39 1 62 14 173 2 43 7 377 1 222 2 197 7 198 7 46 4 69 27 357 2 201 1 261 1 282 1 135 2 107 1 
273 1 293 1 90 1 339 1 40 1 84 1 207 1 56 1 182 1 351 1 
294 1 316 1 
8 1 90 1 40 1 84 1 243 1 207 1 182 1 351 1 44 1 
273 1 90 1 312 1 120 1 40 1 207 1 56 1 182 1 351 1 113 1 290 1 128 1 7 2 70 1 293 1 200 1 84 1 29 1 
273 1 90 1 312 1 120 1 40 1 207 1 56 1 182 1 351 1 113 1 290 1 128 1 7 2 70 1 293 1 200 1 84 1 29 1 
273 1 90 1 312 1 120 1 40 1 207 1 56 1 182 1 351 1 113 1 290 1 128 1 7 2 70 1 293 1 200 1 84 1 29 1 
375 1 112 1 17 1 
375 1 112 1 17 1 
257 1 364 1 
257 1 375 1 364 1 
92 1 360 1 
90 1 111 2 207 1 139 1 92 1 182 1 316 1 116 1 7 1 186 2 370 1 294 1 296 2 150 1 347 1 20 2 40 1 220 1 351 1 70 1 128 1 200 1 104 2 84 1 130 1 29 1 360 1 
112 1 17 1 
257 1 375 1 364 1 
108 1 206 2 111 2 162 1 289 1 142 2 319 1 117 1 345 1 296 2 12 2 36 1 75 1 76 1 271 1 169 1 373 2 149 1 300 1 151 1 20 2 376 1 173 1 22 1 81 1 46 2 69 1 359 1 105 2 52 1 135 1 
348 1 151 1 170 1 313 1 22 1 238 1 327 1 278 1 165 1 371 1 320 1 49 2 105 2 12 2 372 1 373 2 94 1 61 1 336 1 
170 1 151 1 22 1 327 1 278 1 165 1 371 1 320 1 49 2 105 1 12 1 190 1 372 1 373 1 94 1 61 1 336 1 
348 1 151 1 108 1 97 1 22 1 100 1 225 1 379 1 105 1 12 1 372 1 169 1 373 1 106 1 
348 1 170 1 151 1 22 1 238 1 327 1 278 1 165 1 371 1 320 1 49 2 105 1 12 1 372 1 373 1 94 1 61 1 336 1 
50 1 
312 1 230 1 365 1 163 1 164 1 275 1 380 1 
312 2 164 1 163 1 93 1 172 1 42 1 67 1 23 1 354 1 277 1 128 1 279 1 230 1 29 1 51 1 134 1 178 1 
337 2 137 2 138 3 286 1 93 3 12 3 193 2 151 3 19 2 153 1 22 4 65 6 350 1 23 5 197 2 24 2 198 2 102 3 354 4 29 5 105 3 156 2 158 2 159 1 263 2 311 2 108 3 312 8 313 1 163 9 164 8 34 2 212 1 214 2 169 10 373 3 37 1 325 2 219 2 172 12 378 2 275 1 277 4 128 5 279 6 230 2 330 1 379 1 331 6 380 1 134 4 178 4 136 2 234 2 
158 2 312 5 163 8 164 5 34 1 93 1 146 1 321 1 11 1 14 1 148 1 325 2 193 2 301 1 219 2 250 1 172 6 63 1 65 5 23 1 197 2 198 2 354 2 128 1 357 1 277 2 279 3 328 1 230 2 330 1 29 1 331 5 134 2 156 1 178 2 
32 1 208 1 111 1 3 1 164 2 163 2 186 1 268 1 296 1 244 1 324 1 325 2 193 1 219 2 20 1 39 1 223 1 354 1 277 1 128 1 104 1 155 1 29 1 332 1 134 1 156 1 178 1 335 1 
312 1 164 1 163 1 275 1 354 1 277 1 230 1 380 1 134 1 178 1 
158 2 19 1 219 2 172 10 312 5 65 5 197 2 164 5 163 5 198 2 279 5 331 5 156 1 325 2 193 2 
93 1 128 1 312 1 230 1 29 1 23 1 
108 1 163 2 164 2 266 1 34 2 93 2 212 1 9 1 12 4 169 1 373 4 249 1 151 1 349 1 153 2 22 1 23 4 225 1 354 2 277 1 128 3 280 1 330 2 29 3 105 4 379 2 106 1 134 2 178 2 
108 1 237 1 138 1 111 3 162 1 210 1 289 1 142 1 264 1 116 1 186 2 296 3 12 1 75 1 36 1 373 1 169 1 300 1 151 1 20 2 173 1 99 1 22 1 81 1 223 2 46 2 104 2 260 1 105 1 379 1 135 1 335 1 
171 1 172 4 312 4 65 2 164 2 163 1 354 1 34 1 277 1 279 2 230 2 330 1 331 2 134 1 178 1 
40 1 84 1 53 1 
293 1 283 1 40 1 84 1 360 1 
40 1 84 1 53 1 
40 1 84 1 53 1 
40 1 84 1 21 1 
40 1 84 1 21 1 
40 1 84 1 21 1 
40 1 84 1 
182 1 351 1 
300 2 219 1 171 1 39 1 62 3 173 2 43 2 367 1 289 4 142 8 46 4 69 4 268 1 244 1 75 2 192 1 78 1 261 1 135 2 193 1 
219 1 171 1 62 2 39 1 365 1 43 2 289 3 142 6 69 3 268 1 244 1 192 1 261 1 193 1 
158 1 300 1 219 1 62 2 173 1 43 1 289 2 197 1 198 1 142 4 46 2 69 2 119 1 75 1 78 1 135 1 193 1 
158 1 301 1 219 1 62 2 43 1 289 4 197 1 142 7 198 1 69 3 357 1 322 1 14 2 78 1 193 1 
158 2 367 2 289 12 142 23 268 2 322 1 244 2 75 2 192 1 14 2 78 4 193 3 300 2 219 3 301 2 171 1 39 1 62 9 173 2 43 5 124 1 197 2 222 1 198 2 307 1 46 4 69 11 261 1 135 2 
289 1 14 1 142 1 
69 1 301 1 142 1 
300 1 158 1 19 1 219 1 62 3 173 1 43 2 289 3 197 1 142 6 198 1 46 2 69 3 75 1 119 1 78 1 135 1 193 1 
158 2 289 6 142 12 146 1 321 1 11 1 75 1 14 1 78 1 148 1 193 2 300 1 301 1 219 2 250 1 62 2 173 1 43 1 197 2 198 2 46 2 69 6 357 1 201 1 135 1 
219 1 39 1 62 2 43 1 289 3 142 6 69 3 268 1 244 1 78 1 193 1 
300 1 62 2 173 1 43 1 367 1 289 2 142 3 307 1 46 2 69 1 268 1 244 1 75 1 192 1 78 1 261 1 135 1 
300 1 219 2 62 5 39 1 173 1 43 3 289 5 142 10 46 2 69 5 201 1 268 2 244 2 75 1 332 1 78 2 135 1 193 2 
300 1 219 1 62 1 173 1 197 1 142 2 46 2 69 2 201 1 75 1 78 1 135 1 
158 1 300 1 219 1 62 2 173 1 43 1 289 2 197 1 198 1 142 4 46 2 69 2 201 1 75 1 78 1 135 1 193 1 
300 3 62 2 173 3 367 1 209 1 43 1 289 2 142 3 307 1 46 6 69 1 201 1 268 1 244 1 75 3 78 1 135 3 
158 3 0 1 367 2 209 1 289 18 142 34 268 3 322 1 244 3 297 1 119 1 75 5 192 1 14 4 78 5 193 5 300 5 301 3 219 5 171 1 39 2 62 12 173 5 43 7 197 3 198 3 307 1 46 10 69 16 357 1 201 1 71 1 261 1 135 5 
289 4 142 8 321 1 268 1 244 1 75 1 14 1 192 1 193 1 300 1 219 1 301 1 171 1 62 2 39 1 173 1 43 2 46 2 69 4 357 1 201 1 261 1 135 1 
289 5 142 11 268 1 321 1 322 1 244 1 75 2 119 1 192 1 14 2 78 1 193 1 300 2 301 1 219 2 171 1 39 1 62 3 173 2 43 2 197 1 198 1 46 4 69 6 357 1 201 1 261 1 135 2 
158 2 367 1 289 10 142 19 146 1 268 1 321 1 244 1 11 1 119 1 75 3 192 1 14 1 78 1 148 1 193 3 300 3 301 1 219 3 171 1 250 1 39 1 62 4 173 3 43 3 197 2 198 2 46 6 69 9 357 1 201 1 261 1 135 3 
158 1 367 1 289 7 142 17 146 1 268 1 321 1 244 1 11 1 119 1 75 3 192 1 14 1 78 2 148 1 193 2 300 3 301 1 219 3 171 1 250 1 39 1 62 5 173 3 43 3 197 2 198 2 46 6 69 10 357 1 201 1 261 1 135 3 
289 4 142 8 321 1 268 1 244 1 75 1 14 1 192 1 193 1 300 1 219 1 301 1 171 1 62 2 39 1 173 1 43 2 46 2 69 4 357 1 201 1 261 1 135 1 
158 2 289 6 142 12 146 1 321 1 11 1 75 1 14 1 78 1 148 1 193 2 300 1 301 1 219 2 250 1 62 2 173 1 43 1 197 2 198 2 46 2 69 6 357 1 201 1 135 1 
158 1 367 2 289 8 142 18 146 1 268 1 321 1 244 1 11 1 119 1 75 4 192 1 14 1 78 2 148 1 193 2 300 4 301 1 219 3 171 1 250 1 39 1 62 5 173 4 43 3 197 2 198 2 46 8 69 10 357 1 201 1 261 1 135 4 
158 2 209 1 367 2 289 7 142 16 146 1 321 1 11 1 75 4 14 1 78 3 148 1 193 2 300 4 301 1 219 3 250 1 62 6 173 4 43 3 197 3 198 3 46 8 69 9 357 1 201 1 135 4 
219 1 62 6 39 1 43 3 289 4 142 7 69 3 268 3 244 3 192 2 261 1 78 3 193 1 
158 1 209 1 367 2 289 8 142 18 146 1 268 1 321 1 244 1 11 1 75 4 192 1 14 1 78 1 148 1 193 2 300 4 301 1 219 3 171 1 250 1 39 1 62 4 173 4 43 3 197 2 198 2 46 8 69 10 357 1 201 1 261 1 135 4 
144 1 116 1 20 1 111 1 296 1 221 1 203 1 
20 1 55 1 180 1 64 1 111 1 221 1 114 1 144 1 116 1 296 1 203 1 334 1 
151 1 108 1 365 1 22 1 12 1 105 1 379 1 169 1 106 1 373 1 225 1 
151 1 20 1 108 1 138 1 237 1 111 2 22 1 57 1 210 1 116 1 186 1 104 1 296 2 379 1 105 1 12 1 169 1 373 1 
108 2 237 1 138 2 32 1 111 2 57 1 210 1 4 1 116 1 186 2 296 2 12 1 373 1 169 3 151 1 20 2 153 1 22 1 24 1 104 1 259 1 105 1 234 1 
108 2 237 1 138 2 32 1 111 2 57 1 4 1 116 1 186 2 296 2 12 2 373 2 169 3 151 1 20 2 153 1 22 1 24 1 228 1 104 1 259 1 105 2 31 1 234 1 
137 1 108 1 312 1 138 1 188 1 12 3 169 4 373 3 151 1 153 1 22 1 23 1 24 1 255 1 102 1 128 2 230 1 29 2 105 3 379 1 31 1 234 1 136 1 
151 1 263 1 108 1 137 1 312 1 153 1 138 1 22 1 23 1 24 1 102 1 128 2 230 1 29 2 379 1 105 3 12 3 373 3 169 4 31 1 136 1 234 1 
151 1 80 1 22 1 12 1 105 1 373 1 
108 2 313 1 138 1 213 1 189 1 345 1 12 6 169 3 373 6 323 1 94 1 80 1 151 2 302 1 22 3 350 1 258 1 105 5 379 2 233 1 
88 1 108 1 313 1 138 1 237 1 111 2 57 1 210 1 289 3 142 6 264 1 318 1 267 1 116 2 186 1 117 1 268 1 244 1 296 2 12 1 36 2 75 2 192 1 169 1 373 1 193 1 300 2 219 1 151 1 171 1 20 1 39 1 62 2 173 2 43 2 99 1 303 1 22 1 81 2 353 1 46 4 69 3 104 1 359 1 105 1 261 1 135 2 
337 1 263 1 137 1 312 1 163 1 164 1 93 1 212 1 214 1 12 1 373 1 169 2 150 1 378 1 23 2 275 1 354 2 102 1 277 2 128 3 230 1 29 3 105 1 379 1 380 1 134 2 178 2 136 1 
80 1 151 1 137 1 108 1 313 1 138 1 286 1 22 2 350 1 105 2 12 2 373 2 169 2 
151 1 108 1 313 1 22 1 225 1 379 1 105 4 12 4 373 4 106 1 169 1 85 1 31 1 
151 1 54 1 108 1 153 1 302 1 138 1 22 2 287 1 352 1 105 2 12 2 233 1 373 2 169 1 
151 1 278 1 165 1 371 1 49 1 22 1 12 1 105 1 379 1 373 1 
151 1 108 1 313 1 22 1 319 1 345 1 105 2 12 2 373 2 169 1 94 1 
151 2 108 2 153 1 313 1 22 2 225 1 213 1 345 1 379 1 105 4 12 5 106 1 373 5 169 3 323 1 85 1 
151 2 108 2 153 1 313 1 22 2 225 1 47 1 345 1 379 1 105 4 12 5 106 1 373 5 169 3 323 1 85 1 
151 1 20 1 108 1 138 1 237 1 111 2 22 1 57 1 116 1 186 1 228 1 104 1 296 2 379 1 105 1 12 1 169 1 373 1 
151 1 108 1 153 1 302 1 138 1 22 2 350 1 189 1 105 1 12 1 233 1 373 1 169 1 
276 1 116 1 10 1 305 1 369 1 
312 1 32 1 181 1 305 2 369 2 4 1 276 1 116 1 128 2 115 1 230 1 259 1 131 1 10 2 29 2 346 1 133 1 136 1 150 1 
20 1 376 1 111 1 305 1 369 1 276 1 296 1 271 1 149 1 
276 1 131 1 133 1 
358 1 365 1 215 1 232 1 
226 1 235 1 308 1 358 1 215 1 232 1 341 1 
235 1 262 1 256 1 
235 3 341 1 141 2 33 1 226 3 103 1 308 1 358 1 215 1 232 1 191 1 132 1 
226 2 272 1 235 2 308 1 358 1 89 1 215 1 232 1 341 1 
226 1 235 1 308 1 278 1 205 1 49 1 215 1 341 1 132 1 254 1 61 1 
226 1 235 1 308 1 215 1 232 1 341 1 132 1 
226 1 235 1 308 1 358 1 232 2 341 1 132 1 
235 2 341 2 58 1 226 2 308 2 215 1 232 1 60 1 132 1 73 1 
95 1 272 2 235 3 363 1 341 1 288 1 254 1 226 3 308 1 358 1 232 1 215 2 132 1 
272 1 235 2 179 1 341 1 226 2 308 1 358 1 278 1 371 1 215 1 232 1 49 2 132 1 336 1 61 1 
96 1 272 2 235 4 89 1 363 1 341 2 254 1 226 4 308 2 358 1 232 1 215 2 132 1 
226 1 235 1 308 1 358 1 215 1 232 1 341 1 132 1 
272 2 235 4 363 1 341 1 141 1 254 1 33 1 226 4 103 1 127 1 308 1 358 2 232 2 215 3 
272 1 235 2 110 1 341 1 226 2 308 1 344 1 358 1 215 1 232 1 132 1 245 1 
235 3 1 1 341 1 141 2 33 2 226 3 103 1 308 1 358 1 215 1 232 1 132 1 
361 2 215 2 285 1 306 1 
226 1 235 1 308 1 123 1 341 1 132 1 
226 2 272 1 235 2 308 1 358 1 215 1 232 1 341 1 132 1 288 1 
175 1 
226 1 235 1 308 1 358 1 215 1 232 1 341 1 132 1 
272 1 235 3 341 1 288 1 141 1 226 3 308 1 358 1 232 1 215 1 132 1 
127 1 363 1 215 1 254 1 
215 1 232 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 225 68 155 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 1 263 1 117 1 60 2 189 2 193 1 70 1 259 1 27 3 348 3 357 1 139 2 252 1 
339 1 60 2 62 1 300 1 109 2 259 1 348 9 367 1 139 5 142 1 263 4 286 2 117 1 243 2 120 1 189 2 49 1 268 1 193 2 269 1 70 3 56 1 26 1 27 9 195 2 76 1 357 1 252 6 
339 1 60 2 62 1 300 1 109 2 259 1 348 9 367 1 139 5 142 1 263 4 286 2 117 1 243 2 120 1 189 2 49 1 268 1 193 2 269 1 70 3 56 1 26 1 27 9 195 2 76 1 357 1 252 6 
339 1 60 2 62 1 300 1 109 2 259 1 348 10 367 1 139 6 142 1 263 5 286 2 117 1 243 2 120 1 189 2 49 1 268 1 193 2 269 1 70 4 56 1 26 1 27 10 195 2 76 1 357 1 252 7 
339 1 60 2 300 1 109 2 259 1 348 7 367 1 139 4 142 1 263 3 286 2 117 1 243 1 120 1 189 2 49 1 268 1 193 2 269 1 70 2 56 1 26 1 27 7 195 2 76 1 357 1 252 4 
339 1 263 2 286 1 117 1 60 1 243 2 189 1 62 1 49 1 109 1 70 1 56 1 259 1 27 4 195 1 348 4 139 3 252 3 
339 1 327 1 117 1 60 1 330 1 189 1 190 1 109 1 193 1 269 1 259 1 27 2 195 1 348 2 76 1 139 1 
339 1 60 2 62 1 109 1 259 1 348 9 367 1 139 5 142 1 263 4 286 1 371 1 117 1 243 2 311 1 189 2 49 1 193 1 70 3 56 1 27 9 195 1 357 1 252 7 
339 1 60 2 62 1 109 1 259 1 348 9 367 1 139 5 142 1 263 4 286 1 371 1 117 1 243 2 311 1 189 2 49 1 193 1 70 3 56 1 27 9 195 1 357 1 252 7 
0 1 133 1 20 1 150 1 61 1 122 1 205 1 229 1 186 1 163 1 247 1 317 1 212 1 29 1 
285 1 
239 1 285 1 133 2 176 1 212 2 122 1 123 1 196 1 
238 2 239 2 360 1 285 1 133 5 1 1 288 1 161 1 122 2 322 1 123 1 152 1 280 1 164 2 208 1 111 1 212 5 196 1 237 2 
198 1 285 1 123 1 
285 1 209 2 125 1 
186 2 20 1 150 2 61 2 205 2 191 1 29 2 229 2 
358 1 275 1 104 1 341 1 106 1 5 2 61 3 227 1 34 1 205 2 301 2 229 2 110 1 186 2 231 1 41 1 366 1 235 2 236 1 326 1 309 1 47 1 20 1 329 2 217 1 150 2 373 2 98 1 191 1 314 1 126 1 51 1 55 1 71 1 222 1 29 3 273 1 
186 1 20 1 163 1 150 1 247 1 317 1 61 1 205 1 29 1 229 1 
285 1 133 1 116 1 181 1 150 1 61 1 123 1 220 1 154 1 156 1 317 1 130 1 212 1 29 1 
285 1 133 2 116 1 181 1 150 1 61 1 123 1 205 1 229 1 186 1 156 1 317 1 130 1 212 2 29 1 
239 1 133 1 212 1 122 1 214 1 
239 1 285 1 38 1 133 2 212 2 122 1 123 1 196 1 
239 1 133 1 212 1 
150 2 61 2 205 1 87 1 191 2 229 1 186 1 28 1 29 2 
201 1 7 1 153 1 
358 1 326 1 329 1 341 1 61 1 34 1 98 1 373 1 191 1 126 1 110 1 51 1 39 1 235 1 29 1 273 1 
358 1 326 1 329 1 341 1 201 1 150 1 61 2 34 1 98 1 373 1 126 1 229 1 110 1 186 1 51 1 207 1 57 1 235 1 29 2 273 1 
198 1 191 1 
186 3 207 1 150 3 61 3 205 1 191 1 29 3 229 3 
186 1 163 1 150 1 317 1 61 1 29 1 229 1 
186 1 150 1 317 1 61 1 28 1 205 1 87 1 29 1 229 1 
358 1 340 1 275 1 294 1 133 1 104 1 181 1 341 1 5 2 61 4 34 1 205 2 87 1 301 1 229 3 110 1 186 3 231 1 207 1 41 1 366 1 212 1 235 1 236 1 326 1 47 1 116 1 20 1 329 1 217 1 150 3 98 1 373 1 191 1 314 1 126 1 51 1 71 1 57 1 156 1 317 1 130 1 29 4 273 1 
186 1 207 1 154 1 150 2 61 2 191 1 173 1 29 2 229 1 
340 1 285 1 133 1 116 1 181 1 150 3 61 3 4 1 205 1 87 1 229 3 186 3 207 2 57 1 317 1 156 1 212 1 130 1 29 3 
201 1 150 2 61 2 7 1 205 1 87 1 229 2 186 2 207 1 29 2 
358 1 326 1 329 1 341 1 61 1 34 1 98 1 373 1 191 1 126 1 110 1 51 1 235 1 29 1 273 1 
358 1 216 1 326 1 329 1 341 1 61 1 34 1 98 1 373 1 191 1 126 1 235 1 29 1 197 1 273 1 
275 1 105 1 82 1 201 2 277 1 5 2 323 1 7 2 278 1 9 1 301 4 89 1 41 2 366 1 17 1 236 1 67 1 217 1 314 1 153 2 55 2 71 1 334 1 177 1 
93 1 186 1 150 1 317 1 156 1 61 1 29 1 229 1 
150 5 61 5 204 1 205 1 87 1 191 1 173 1 229 4 186 4 206 1 207 2 154 1 57 1 29 5 
93 1 186 2 163 1 150 2 317 1 61 2 29 2 229 2 
290 1 194 1 379 1 
18 1 290 2 147 1 194 2 368 1 112 1 
290 1 194 1 
290 1 194 1 
147 1 368 1 
147 1 368 1 
147 1 368 1 
290 1 194 1 129 1 
290 1 194 1 129 1 
290 1 194 1 129 1 
290 1 194 1 305 1 
290 1 194 1 305 1 
290 1 194 1 305 1 
285 1 133 2 265 2 295 1 83 1 202 1 85 2 361 1 374 1 175 2 290 2 347 2 304 3 137 1 194 2 292 2 43 1 212 2 112 1 
264 1 133 1 370 1 170 1 265 1 94 1 83 1 150 2 85 1 61 2 299 1 191 1 229 2 175 1 186 2 290 1 347 1 304 1 73 1 194 1 212 1 284 1 29 2 379 1 
109 2 345 2 286 1 327 1 95 1 
109 1 286 1 195 1 
109 1 327 1 195 1 
109 3 345 1 286 2 327 1 95 1 351 1 
109 2 345 1 286 1 327 1 218 1 95 1 
133 5 180 1 296 1 105 1 277 1 107 1 299 1 161 1 323 1 344 2 89 1 363 2 164 1 209 3 212 5 111 3 284 1 237 1 238 1 239 1 19 1 285 2 146 2 94 1 288 2 122 4 123 1 352 1 125 1 316 1 253 1 196 1 
360 1 133 9 296 2 105 3 277 3 107 2 161 1 323 3 228 1 36 1 344 6 89 3 14 5 164 2 209 9 212 9 111 8 214 5 237 2 239 6 238 2 19 3 285 5 115 1 143 1 146 6 94 4 288 6 122 7 123 1 24 1 352 1 125 3 375 1 196 1 
360 1 133 3 180 1 296 1 105 1 277 1 107 1 323 1 344 2 89 1 363 1 164 1 209 4 212 3 111 3 237 1 238 1 285 3 19 1 146 2 94 1 288 2 122 2 123 1 125 2 253 1 
360 1 133 4 180 1 296 1 105 2 277 2 107 1 323 2 228 1 36 1 344 4 89 2 363 2 164 1 209 7 212 4 111 5 237 1 238 1 285 4 19 2 146 4 94 2 288 4 122 3 123 1 125 3 375 1 253 1 
349 1 
198 1 326 1 355 1 
326 1 100 1 
326 1 126 1 
132 1 326 3 355 2 261 1 126 1 273 1 
326 1 126 1 273 1 
78 1 326 1 
320 1 328 2 321 1 105 1 313 1 6 1 323 1 172 1 88 1 301 7 303 1 55 4 334 3 232 1 41 3 131 1 177 2 254 1 
275 1 320 2 321 1 105 4 225 3 277 3 5 2 255 1 6 5 323 4 88 1 301 31 89 3 12 1 232 2 41 15 365 1 366 1 19 3 68 1 328 3 148 1 313 1 172 2 314 1 25 1 55 16 333 4 378 1 334 10 71 1 131 1 177 5 254 2 
275 2 320 1 105 1 5 4 135 1 6 1 323 1 88 1 301 9 232 1 41 4 366 2 328 2 48 1 313 1 172 1 314 2 25 1 55 5 71 2 334 4 131 1 177 3 254 1 
320 1 328 2 321 1 105 1 313 1 6 1 323 1 172 1 88 1 301 7 55 4 334 3 232 1 41 3 131 1 177 2 254 1 
320 1 328 2 321 1 105 1 313 1 6 1 323 1 172 1 88 1 301 7 55 4 334 3 232 1 41 3 131 1 177 2 254 1 
358 1 319 2 102 1 224 1 341 1 60 1 3 2 183 1 108 1 348 1 306 1 235 1 168 1 307 1 326 1 329 1 189 1 97 2 373 1 98 1 126 1 193 2 27 1 
274 1 358 1 319 1 3 1 60 1 341 1 258 1 109 2 40 1 259 1 348 1 235 1 286 1 327 1 329 1 188 1 149 1 189 1 97 1 351 1 373 1 193 1 315 1 27 1 195 1 58 1 
339 1 274 1 358 1 319 1 3 1 60 1 341 1 258 1 109 2 259 1 348 2 42 1 139 1 235 1 286 1 327 1 117 1 329 1 188 1 149 1 189 1 97 1 351 1 373 1 193 1 315 1 27 2 195 1 58 1 252 1 
339 1 274 1 358 1 319 1 276 1 224 1 3 1 60 1 341 1 258 1 109 2 40 1 348 3 139 1 235 1 286 1 327 1 117 1 329 1 149 1 189 1 351 1 97 1 373 1 193 1 315 1 27 3 195 1 58 1 252 2 
339 1 358 1 319 1 276 1 3 1 341 1 258 1 109 2 40 1 348 2 139 1 235 1 327 1 286 1 117 1 329 1 149 1 97 1 351 1 373 1 193 1 27 2 195 1 58 1 252 2 
262 1 
293 1 296 1 341 1 61 1 161 1 257 1 302 1 164 1 63 1 209 2 306 1 111 2 212 5 215 2 116 1 267 1 123 1 125 2 126 1 220 1 317 1 75 4 130 1 29 1 358 1 133 5 81 2 181 1 226 1 136 2 183 1 35 2 325 1 138 1 235 2 140 1 237 1 239 6 238 1 369 1 285 2 144 2 326 1 145 1 287 2 329 2 150 1 288 2 98 2 373 2 99 1 332 2 154 1 156 1 196 3 
239 2 369 1 133 3 116 1 145 1 181 1 267 1 150 1 61 1 35 1 220 1 63 1 154 1 176 1 75 2 317 1 156 1 130 1 212 3 325 1 29 1 196 1 
239 1 369 1 285 1 133 3 116 1 145 1 181 1 267 1 150 1 61 1 123 1 220 1 63 1 154 1 176 1 75 3 317 1 156 1 130 1 212 3 325 1 29 1 196 1 215 1 
133 3 81 1 181 1 61 1 35 1 63 1 212 3 325 1 215 1 239 2 369 1 285 1 116 1 145 1 150 1 267 1 123 1 220 1 154 1 176 1 156 1 317 1 75 3 130 1 29 1 196 1 
293 1 61 1 161 1 302 1 63 1 164 1 212 5 111 1 215 4 66 1 116 1 267 1 123 5 125 2 220 1 75 6 317 1 176 1 130 1 29 1 133 5 81 4 181 1 31 1 136 2 35 4 325 1 237 1 239 7 238 1 369 1 285 5 240 1 144 2 145 1 287 2 150 1 288 1 151 1 332 2 154 1 156 1 337 1 196 3 
293 1 61 1 161 1 302 1 63 1 164 1 209 2 212 4 111 1 215 2 116 1 267 1 123 1 125 2 220 1 75 4 317 1 130 1 29 1 133 4 81 2 181 1 136 2 35 2 325 1 138 1 237 1 238 1 239 4 369 1 285 2 144 2 145 1 287 2 150 1 288 1 332 2 154 1 156 1 196 2 
293 1 133 4 81 2 181 1 61 1 136 2 161 1 35 2 302 1 164 1 63 1 111 1 212 4 325 1 215 2 237 1 239 4 238 1 369 1 285 1 240 1 144 2 116 1 145 1 287 2 150 1 267 1 288 1 123 1 151 1 125 2 332 2 220 1 154 1 156 1 317 1 75 4 130 1 337 1 29 1 196 2 
293 1 133 4 81 2 181 1 61 1 136 2 161 1 35 2 302 1 164 1 63 1 111 1 212 4 325 1 215 2 237 1 239 4 238 1 369 1 285 1 240 1 144 2 116 1 145 1 287 2 150 1 267 1 288 1 123 1 151 1 125 2 332 2 220 1 154 1 156 1 317 1 75 4 130 1 337 1 29 1 196 2 
133 4 81 2 181 1 61 1 161 1 35 2 302 1 233 1 164 1 63 1 209 2 282 1 111 1 212 4 325 1 113 2 215 2 237 1 239 4 238 1 369 1 285 1 240 1 144 2 116 1 145 1 287 2 150 1 267 1 288 1 121 1 123 1 289 2 220 1 154 1 156 1 317 1 75 4 130 1 29 1 196 2 
293 1 133 4 81 3 181 1 31 1 61 1 136 2 161 1 35 3 302 1 164 1 63 1 111 1 212 4 325 1 237 1 215 3 238 1 239 5 369 1 285 1 240 1 144 2 116 1 145 1 287 2 150 1 267 1 288 1 123 1 151 1 125 2 332 2 220 1 154 1 156 1 317 1 75 5 130 1 337 1 29 1 196 2 
293 1 133 4 81 3 181 1 31 1 61 1 136 2 161 1 35 3 302 1 164 1 63 1 111 1 212 4 325 1 237 1 215 3 238 1 239 5 369 1 285 1 240 1 144 2 116 1 145 1 287 2 150 1 267 1 288 1 123 1 151 1 125 2 332 2 220 1 154 1 156 1 317 1 75 5 130 1 337 1 29 1 196 2 
133 4 81 2 181 1 61 1 161 1 35 2 302 1 164 1 63 1 209 2 282 1 111 1 212 4 325 1 138 1 113 2 215 2 237 1 239 4 238 1 369 1 285 1 144 2 116 1 145 1 287 2 267 1 150 1 288 1 123 1 289 2 220 1 154 1 156 1 317 1 75 4 130 1 29 1 196 2 
358 2 275 2 182 1 341 2 106 2 61 1 5 4 183 1 229 1 301 2 186 1 185 1 207 1 40 1 41 1 366 2 42 1 64 1 306 1 235 8 236 2 114 1 67 1 326 3 47 1 329 7 217 2 69 1 150 1 373 8 98 2 314 2 126 2 331 1 55 1 71 2 74 1 222 1 29 1 
275 1 105 1 201 1 277 1 343 1 5 2 61 1 7 1 205 1 323 1 87 1 229 1 301 3 186 1 89 1 41 2 366 1 236 1 19 1 217 1 150 1 314 1 153 1 55 1 334 1 71 1 356 1 177 1 29 1 
198 1 275 1 320 1 105 1 201 1 5 2 7 1 323 1 88 1 301 6 41 3 366 1 236 1 67 1 328 1 217 1 313 1 172 1 314 1 191 2 153 1 55 3 71 1 334 2 131 1 177 2 
275 2 199 1 105 2 201 11 225 3 277 2 5 4 6 1 7 4 323 1 301 14 89 1 362 1 12 1 41 6 366 2 236 1 19 2 68 1 47 1 46 1 217 2 312 1 191 1 314 2 153 11 55 8 334 2 333 3 71 2 356 1 222 1 177 1 
358 1 275 1 341 1 298 1 61 2 5 2 34 1 7 1 229 1 301 2 110 1 186 1 39 1 207 1 41 1 366 1 235 1 236 1 326 1 47 1 329 1 217 1 150 1 373 1 98 1 191 1 314 1 126 1 192 1 51 1 55 1 71 1 356 1 57 1 158 1 222 1 29 2 273 1 
105 3 341 2 201 7 5 6 61 3 6 4 7 7 301 20 110 2 207 1 211 2 19 2 22 1 217 3 118 2 313 1 172 1 314 3 126 2 219 2 71 3 356 1 131 1 222 1 177 4 29 3 178 2 273 2 358 2 79 1 275 3 320 1 277 2 34 2 323 3 88 1 229 1 186 1 89 2 324 1 231 2 40 1 41 10 366 3 235 3 236 3 326 2 47 1 328 1 329 3 150 1 373 3 98 1 191 2 153 7 51 2 55 10 334 8 57 1 
67 1 275 1 105 1 217 1 201 1 277 1 5 2 6 1 7 1 314 1 278 1 153 1 301 2 55 2 334 1 71 1 366 1 236 1 
67 1 275 1 217 1 201 1 5 2 7 1 323 1 314 1 9 1 153 1 301 2 89 1 334 1 71 1 41 2 366 1 177 1 236 1 
275 1 105 1 277 1 201 2 5 2 6 1 7 2 323 1 301 4 89 1 41 2 366 1 236 1 67 1 19 1 217 1 314 1 153 2 55 2 71 1 334 2 177 1 
275 1 105 1 217 1 201 1 277 1 5 2 6 1 7 1 314 1 278 1 153 1 301 2 185 1 55 2 334 1 71 1 366 1 236 1 
275 1 217 1 201 1 5 2 7 1 323 1 314 1 9 1 153 1 301 2 185 1 89 1 334 1 71 1 41 2 366 1 177 1 236 1 
275 1 105 1 277 1 201 2 5 2 6 1 7 2 323 1 301 4 185 1 89 1 41 2 366 1 236 1 19 1 217 1 314 1 153 2 55 2 71 1 334 2 177 1 
275 1 19 1 105 1 217 1 201 2 277 1 5 2 6 1 323 1 7 2 314 1 153 2 301 4 89 1 55 2 334 2 71 1 41 2 366 1 177 1 236 1 
358 1 275 1 341 1 61 1 5 2 34 1 301 2 110 1 231 1 41 1 366 1 235 1 236 1 326 1 47 1 329 1 217 1 373 1 98 1 191 1 314 1 126 1 51 1 55 1 71 1 222 1 29 1 273 1 
358 1 179 1 275 1 341 1 61 1 5 2 34 1 301 2 41 1 366 1 235 1 236 1 216 1 326 1 47 1 329 1 217 1 373 1 98 1 191 1 314 1 126 1 55 1 71 1 222 1 29 1 273 1 197 1 
275 1 105 1 277 1 201 2 5 2 6 1 7 2 323 1 301 4 89 1 41 2 366 1 236 1 19 1 217 1 314 1 153 2 55 2 71 1 334 2 356 1 177 1 
358 1 275 1 105 1 341 1 201 2 277 1 61 1 5 2 6 1 34 1 323 1 7 2 301 4 110 1 89 1 231 1 41 2 366 1 42 1 235 1 236 1 19 1 326 1 329 1 217 1 373 1 314 1 153 2 126 1 51 1 55 2 334 2 71 1 177 1 29 1 273 1 178 1 
275 1 30 1 105 1 277 1 201 1 5 2 61 1 6 1 323 1 205 1 7 1 87 1 229 1 301 3 89 1 186 1 41 1 366 1 236 1 19 1 217 1 150 1 314 1 153 1 55 2 334 1 71 1 356 1 29 1 
275 2 105 3 225 1 277 3 5 4 135 1 6 3 323 3 301 19 230 1 89 3 12 1 41 10 366 2 15 1 213 1 92 1 141 2 169 1 19 3 68 1 314 2 174 2 54 1 246 1 55 9 333 2 71 2 334 6 177 3 
275 3 103 1 134 1 105 3 225 2 277 3 5 6 6 2 135 1 323 2 10 1 301 26 230 2 89 2 41 12 366 3 15 1 213 1 92 1 141 4 19 3 68 2 23 1 245 1 314 3 174 1 25 2 54 2 55 14 334 4 71 3 333 2 155 1 177 2 
103 1 105 5 5 6 6 4 10 1 301 41 12 1 15 1 213 1 169 1 19 4 68 3 23 1 313 1 172 1 314 3 174 1 25 1 71 3 131 1 177 4 359 1 275 3 320 1 134 1 277 4 225 3 135 1 323 5 88 1 89 4 230 2 41 21 366 3 141 4 92 1 328 1 245 1 54 1 55 20 334 8 333 4 155 1 
359 1 275 4 103 1 320 1 134 1 105 5 225 3 277 4 5 8 135 1 6 3 323 4 88 1 10 1 301 38 230 2 89 3 12 1 41 18 366 4 15 1 213 1 92 1 141 4 169 1 19 4 68 3 328 1 23 1 245 1 313 1 172 1 314 4 174 1 25 2 54 1 55 20 333 4 71 4 334 7 155 1 131 1 177 4 
275 2 103 1 320 1 134 1 199 2 105 8 225 4 277 7 5 4 135 1 6 7 323 8 88 1 10 1 301 52 230 1 89 7 12 2 41 25 366 2 15 1 213 1 92 1 141 4 19 7 68 2 328 1 23 1 245 1 313 1 172 1 314 2 174 1 25 1 54 1 55 27 333 4 71 2 334 14 155 1 131 1 177 7 
175 1 290 1 265 1 347 1 137 1 350 1 194 1 202 1 85 1 112 1 
73 1 379 1 
175 1 37 1 290 1 265 1 347 1 297 1 90 1 194 1 85 1 
285 1 133 1 265 1 295 1 83 1 202 1 85 1 361 1 175 1 290 1 347 1 304 2 137 1 194 1 292 1 43 1 212 1 112 1 
285 1 133 1 265 1 295 1 83 1 202 1 85 1 361 1 175 1 290 1 347 1 304 2 137 1 194 1 292 1 43 1 212 1 112 1 
285 1 133 1 265 1 295 1 83 1 202 1 85 1 361 1 175 1 290 1 347 1 304 2 137 1 194 1 292 1 43 1 212 1 112 1 
18 1 21 1 129 1 
18 1 21 1 129 1 
305 1 11 1 
18 1 305 1 11 1 
264 1 370 1 
133 1 295 1 85 1 61 2 299 1 229 2 186 2 347 1 304 1 212 1 44 1 284 1 264 1 265 1 170 1 370 1 94 1 150 2 122 1 191 1 175 1 290 1 73 1 194 1 292 1 29 2 379 1 
21 1 129 1 
18 1 305 1 11 1 
358 1 275 1 341 1 200 1 84 1 106 2 61 2 5 2 8 1 301 2 41 1 366 1 64 1 235 2 236 1 326 1 47 1 242 1 329 2 217 1 69 1 150 2 373 2 314 1 126 1 55 1 71 1 356 1 271 1 222 1 29 2 
358 1 326 1 329 1 341 1 3 1 98 1 373 1 183 1 126 1 165 1 187 1 306 1 235 1 307 1 
358 1 286 1 327 1 329 1 341 1 3 1 149 1 351 1 373 1 258 1 50 1 109 2 315 1 40 1 195 1 187 1 234 1 235 1 
358 1 286 1 327 1 329 2 341 1 3 1 149 1 351 1 373 2 258 1 50 1 109 2 315 1 40 1 195 1 187 1 234 1 42 1 235 2 
358 1 286 1 327 1 329 1 3 1 341 1 149 1 351 1 373 1 258 1 50 1 109 2 377 1 315 1 40 1 195 1 235 1 
279 1 
238 1 285 1 288 1 161 1 123 1 152 1 280 1 164 1 111 1 237 1 
19 2 285 5 146 5 105 2 118 1 277 2 288 5 323 2 184 2 125 5 344 5 89 2 209 10 77 1 111 5 
239 1 285 1 133 1 212 1 123 1 196 1 
358 1 360 1 133 3 296 2 32 1 341 1 161 1 183 1 257 1 13 1 164 2 166 2 111 2 212 3 306 1 235 4 140 1 237 2 238 2 239 4 326 1 329 4 244 1 288 2 373 4 98 2 126 1 99 2 196 2 
198 1 285 1 280 1 288 1 111 1 123 1 152 1 
293 1 133 1 136 1 161 1 164 1 209 1 111 1 212 1 237 1 238 1 239 1 285 2 288 1 123 1 125 1 332 1 196 1 
101 2 296 2 105 2 341 4 160 1 161 4 344 6 164 4 210 2 209 12 166 1 111 9 212 5 19 2 266 2 118 2 123 2 126 3 125 6 353 1 355 2 130 2 77 2 273 3 358 3 78 2 132 1 80 2 133 5 277 2 323 2 184 2 89 2 280 1 42 1 235 3 237 4 238 4 239 5 285 8 326 10 146 6 329 3 244 1 288 8 98 1 373 3 152 1 99 1 291 1 100 3 248 2 250 2 196 3 
238 1 285 1 68 1 146 1 225 1 288 1 161 1 125 1 344 1 333 1 164 1 209 2 155 1 111 1 237 1 
0 1 133 1 320 1 105 2 61 1 161 1 323 1 205 1 184 2 229 1 186 1 163 1 164 1 212 1 111 2 237 1 238 1 20 1 372 1 150 1 288 2 313 1 172 1 247 1 317 1 77 1 337 1 29 1 
358 1 275 1 104 1 341 1 5 2 61 3 34 1 205 2 301 1 229 2 110 1 186 2 231 1 41 1 366 1 235 1 236 1 326 1 47 1 20 1 329 1 217 1 150 2 373 1 98 1 191 1 314 1 126 1 51 1 71 1 29 3 273 1 
238 1 285 4 296 1 328 1 146 2 288 2 161 1 123 2 125 2 344 2 99 1 164 1 209 4 111 1 237 1 
175 1 264 1 202 1 85 1 157 1 
175 1 85 1 272 1 
175 1 85 1 272 1 
175 1 85 1 272 1 
175 1 85 1 167 1 
175 1 85 1 167 1 
175 1 85 1 167 1 
175 1 85 1 
290 1 194 1 
275 1 320 2 105 2 372 1 5 2 135 1 6 2 313 1 172 2 323 2 314 1 301 10 55 5 71 1 334 5 41 5 366 1 177 3 
275 1 105 1 277 1 5 2 135 1 6 1 314 1 301 2 55 2 71 1 334 1 366 1 
275 1 19 1 105 1 277 1 5 2 135 1 6 1 323 1 314 1 301 4 89 1 55 2 334 2 71 1 41 2 366 1 177 1 
169 1 308 1 275 3 320 1 5 6 135 1 6 1 172 1 314 3 25 1 301 3 55 1 71 3 334 2 41 2 366 3 177 1 
275 5 320 3 105 5 225 3 277 3 255 1 5 10 86 1 135 1 6 5 323 5 88 1 301 34 89 3 12 1 365 1 41 18 366 5 169 1 308 1 19 3 68 1 328 1 148 1 313 2 172 3 314 5 25 2 55 16 333 4 71 5 334 12 131 1 177 7 
275 2 320 1 328 1 105 1 5 4 313 1 6 1 323 1 172 1 314 2 88 1 301 8 25 1 55 4 334 3 71 2 41 4 366 2 131 1 177 2 
198 1 320 1 328 1 105 1 313 1 172 1 323 1 88 1 301 6 55 3 334 2 41 3 131 1 177 2 
275 1 19 1 105 1 277 1 5 2 86 1 6 1 323 1 314 1 301 4 89 1 55 2 334 2 71 1 41 2 366 1 177 1 
19 1 68 1 105 1 225 1 277 1 6 1 323 1 301 7 89 1 12 1 55 3 333 2 334 2 41 4 177 1 
275 2 320 2 105 3 199 1 277 2 225 2 5 4 6 4 323 3 88 1 301 23 89 2 12 1 41 12 366 2 19 2 308 1 46 1 328 1 313 1 172 2 314 2 25 2 55 11 334 9 333 2 71 2 131 1 177 5 
333 1 41 1 301 1 
55 1 225 1 301 1 
275 1 19 1 105 1 118 1 277 1 5 2 86 1 6 1 323 1 314 1 301 6 89 1 55 3 71 1 334 3 41 3 366 1 177 2 
275 1 103 1 105 2 134 1 225 1 277 2 5 2 6 1 135 1 323 2 301 12 89 2 41 6 366 1 19 2 68 1 23 1 245 1 314 1 55 6 333 1 71 1 334 2 155 1 177 1 
320 1 105 1 313 1 6 1 323 1 172 1 301 6 55 3 334 2 41 3 177 1 
308 1 275 1 320 1 5 2 6 1 172 1 88 1 314 1 301 3 25 1 55 1 334 2 71 1 41 2 366 1 131 1 177 1 
275 1 320 1 105 1 225 1 5 2 135 1 323 1 88 1 301 8 41 4 366 1 68 1 328 1 313 1 172 1 314 1 55 4 333 1 71 1 334 2 155 1 131 1 177 2 
275 2 320 1 105 2 225 1 277 1 5 4 135 1 86 1 6 1 323 1 88 1 301 11 12 1 41 5 366 2 19 1 68 1 328 1 313 1 172 1 314 2 55 6 333 2 71 2 334 3 155 1 131 1 177 2 
275 3 103 1 320 1 134 1 105 3 225 1 277 2 5 6 86 1 6 1 135 1 323 3 88 1 301 19 89 2 41 10 366 3 19 2 68 1 328 1 23 1 245 1 313 1 172 1 314 3 25 1 55 9 333 1 71 3 334 4 155 1 131 1 177 3 
275 3 103 1 320 1 105 3 134 1 225 1 277 2 5 6 86 1 6 2 135 1 323 2 88 1 301 17 89 1 41 7 366 3 19 2 68 1 328 1 23 1 245 1 313 1 172 1 314 3 25 1 55 10 333 1 71 3 334 5 155 1 131 1 177 3 
275 1 320 1 105 1 225 1 5 2 135 1 323 1 88 1 301 8 41 4 366 1 68 1 328 1 313 1 172 1 314 1 55 4 333 1 71 1 334 2 155 1 131 1 177 2 
275 1 103 1 105 2 134 1 225 1 277 2 5 2 6 1 135 1 323 2 301 12 89 2 41 6 366 1 19 2 68 1 23 1 245 1 314 1 55 6 333 1 71 1 334 2 155 1 177 1 
275 4 103 1 320 1 134 1 105 3 225 1 277 2 5 8 6 2 86 1 135 1 323 2 88 1 301 18 89 1 41 8 366 4 19 2 68 1 328 1 23 1 245 1 313 1 172 1 314 4 25 2 55 10 333 1 71 4 334 5 155 1 131 1 177 3 
275 4 103 1 134 1 105 3 225 1 277 3 5 8 6 3 135 1 323 2 301 16 89 2 41 7 366 4 169 1 19 3 68 1 23 1 245 1 314 4 25 2 55 9 333 1 71 4 334 6 155 1 177 3 
320 3 105 1 6 3 313 1 323 1 172 3 88 2 301 7 55 3 334 6 41 4 131 1 177 3 
275 4 103 1 320 1 134 1 105 3 225 1 277 2 5 8 6 1 135 1 323 2 88 1 301 18 89 1 41 8 366 4 169 1 19 2 68 1 328 1 23 1 245 1 313 1 172 1 314 4 25 2 55 10 333 1 71 4 334 4 155 1 131 1 177 3 
241 1 154 1 150 1 61 1 191 1 29 1 173 1 
376 1 223 1 241 1 162 1 154 1 16 1 150 1 61 1 96 1 191 1 29 1 173 1 
358 1 326 1 310 1 329 4 341 1 119 1 42 1 306 1 183 1 373 4 98 1 235 4 126 1 
358 1 59 1 326 1 22 1 329 2 341 2 373 2 126 1 364 1 72 1 166 1 260 1 235 2 273 1 
109 1 358 1 327 1 329 1 195 1 341 1 373 1 98 1 235 1 258 1 
358 1 326 1 40 1 329 2 341 1 69 1 42 1 373 2 8 1 235 2 126 1 
358 2 114 1 326 3 310 1 329 4 341 2 69 1 183 1 98 1 373 5 126 2 74 1 166 1 42 1 306 1 235 5 
358 2 114 1 326 3 310 1 329 4 341 2 203 1 69 1 183 1 98 1 373 5 126 2 166 1 42 1 306 1 235 5 
358 1 198 1 326 1 329 1 341 1 306 1 183 1 373 1 98 1 235 1 126 1 
358 1 326 1 329 1 341 1 150 1 61 2 34 1 98 1 373 1 191 1 126 1 229 1 110 1 186 1 207 1 235 1 29 2 273 1 
78 1 358 1 326 3 116 1 329 1 341 1 150 2 61 2 34 1 373 1 191 1 126 2 229 2 110 1 186 1 207 1 166 1 248 1 317 1 156 1 235 1 29 2 273 2 
358 1 78 1 341 1 61 2 34 1 229 2 186 1 207 1 166 1 235 2 216 1 326 3 116 1 329 2 119 1 150 2 373 2 191 1 126 2 156 1 317 1 248 1 29 2 273 2 
78 1 239 1 358 1 285 1 133 2 326 4 329 3 341 1 119 1 98 1 123 1 373 3 126 1 355 1 166 1 100 1 248 1 130 1 212 2 283 1 235 3 91 1 273 1 
78 1 239 1 358 1 285 1 133 2 326 4 329 3 341 1 119 1 98 1 123 1 373 3 126 1 355 1 166 1 100 1 248 1 130 1 212 2 250 1 235 3 273 1 
358 1 331 1 329 1 341 1 373 1 235 1 
358 2 114 1 132 1 326 3 329 6 182 1 341 3 106 1 69 1 98 2 373 7 126 2 331 1 72 1 40 1 74 1 42 1 260 1 336 1 235 7 273 1 
105 1 341 1 201 1 5 4 61 2 7 1 301 6 110 1 207 1 217 2 313 1 172 1 314 2 126 1 219 1 71 2 356 1 131 1 29 2 177 2 178 1 273 1 358 1 275 2 320 1 34 1 323 1 88 1 229 1 186 1 231 1 41 3 366 2 42 1 235 1 236 2 326 1 328 1 329 1 242 1 150 1 373 1 191 2 153 1 51 1 55 3 334 2 
133 3 101 1 161 2 280 1 164 2 210 1 111 1 212 3 235 1 237 2 238 2 239 2 285 1 326 2 266 1 329 1 288 1 244 1 122 1 123 1 373 1 98 1 152 1 355 1 100 1 130 1 250 1 196 1 
358 1 132 1 326 2 329 2 341 2 373 2 126 1 331 1 355 1 291 1 42 1 235 2 273 1 
358 1 216 1 326 1 329 1 341 1 150 1 61 2 34 1 98 1 373 1 191 1 126 1 229 1 186 1 207 1 235 1 29 2 273 1 
358 1 132 1 326 1 329 1 341 2 373 1 126 1 72 1 166 1 260 1 336 1 235 1 273 1 
270 1 128 1 2 1 191 1 251 1 
340 1 285 1 133 2 116 1 181 1 2 1 122 1 123 1 191 1 52 1 270 2 128 2 281 1 317 1 156 1 130 1 212 2 251 2 338 1 
128 1 200 1 2 1 84 1 150 1 61 1 271 1 251 1 29 1 
2 1 281 1 338 1 
339 1 117 1 27 1 259 1 60 1 348 1 189 1 139 1 
339 2 263 1 117 2 342 1 60 1 189 1 269 1 70 1 27 4 348 4 249 1 65 1 139 3 252 2 
339 1 45 1 371 1 117 1 60 1 189 1 354 1 259 1 27 2 348 2 139 1 252 1 
339 1 117 1 60 1 189 1 269 2 259 1 27 3 348 3 65 1 249 2 139 1 159 1 
33 2 171 1 335 1 139 2 
27 1 259 1 60 1 348 1 256 1 189 1 
339 1 117 1 27 2 259 1 60 1 348 2 189 1 139 1 252 1 142 1 
221 1 
339 1 117 1 27 1 259 1 60 1 348 1 189 1 139 1 
339 1 198 1 117 1 139 1 
339 1 117 1 27 1 60 1 348 1 189 1 139 1 
193 1 319 1 348 1 
339 1 117 1 60 1 189 1 124 1 269 2 259 1 27 3 348 3 65 1 249 1 139 1 
339 1 117 1 27 2 243 1 60 1 348 2 189 1 139 1 252 1 
263 1 286 1 60 1 189 1 49 1 109 1 259 1 27 1 195 1 348 1 139 1 
117 1 27 1 259 1 60 1 348 1 189 1 139 1 
339 1 117 2 27 1 259 1 60 1 348 1 189 1 
318 1 117 1 60 2 189 2 127 1 346 1 259 1 27 2 348 2 139 1 
339 1 263 1 117 1 60 1 189 1 70 1 259 1 27 3 348 3 367 1 139 2 142 1 252 2 
339 1 327 1 286 1 117 1 60 1 189 1 351 1 109 2 53 1 259 1 27 2 195 1 348 2 139 1 252 1 
339 1 263 1 117 1 60 2 243 1 189 2 62 1 70 1 259 1 27 4 348 4 139 2 252 2 
339 1 117 1 60 1 189 1 269 1 259 1 27 3 348 3 139 1 252 1 142 1 
263 1 70 1 342 1 139 1 
117 1 139 1 

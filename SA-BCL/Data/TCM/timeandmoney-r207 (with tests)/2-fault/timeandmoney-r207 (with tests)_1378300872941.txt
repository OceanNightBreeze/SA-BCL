#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 322 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
286 1 249 2 340 2 131 1 229 1 358 1 28 1 77 2 155 2 80 4 347 1 9 1 234 1 327 9 136 3 297 6 55 1 14 1 371 5 62 1 219 1 122 1 69 2 279 2 128 1 146 1 227 9 381 2 
286 1 249 2 340 2 131 1 229 1 358 1 28 1 77 2 155 2 80 4 347 1 9 1 234 1 327 9 136 3 297 6 55 1 14 1 371 5 62 1 219 1 122 1 69 2 279 2 128 1 146 1 227 9 381 2 
286 1 249 2 340 2 131 1 229 1 358 1 28 1 77 2 155 2 80 5 347 1 9 1 234 1 327 10 136 4 297 7 55 1 14 1 371 6 62 1 219 1 122 1 69 2 279 2 128 1 146 1 227 10 381 2 
286 1 249 1 340 2 131 1 229 1 358 1 28 1 77 2 155 2 80 3 9 1 234 1 327 7 136 2 297 4 55 1 14 1 371 4 62 1 219 1 122 1 69 2 279 2 128 1 146 1 227 7 381 2 
286 1 249 2 340 1 131 1 371 3 229 1 77 1 155 1 80 2 347 1 279 1 146 1 327 4 136 1 227 4 297 3 55 1 381 1 
286 1 150 1 340 1 131 1 371 1 28 1 17 1 244 1 155 1 9 1 69 1 279 1 146 1 327 2 227 2 381 1 
286 1 131 1 371 2 62 1 155 2 80 1 69 1 146 1 327 3 136 1 227 3 297 1 381 2 
286 1 249 2 340 1 131 1 229 1 77 1 206 1 155 2 80 4 347 1 114 1 327 9 136 3 297 7 55 1 371 5 62 1 122 1 69 1 128 1 279 1 146 1 227 9 381 2 
286 1 249 2 340 1 131 1 229 1 77 1 206 1 155 2 80 4 347 1 114 1 327 9 136 3 297 7 55 1 371 5 62 1 122 1 69 1 128 1 279 1 146 1 227 9 381 2 
39 1 246 1 176 1 
271 2 251 1 39 1 
177 1 79 2 190 2 151 2 372 2 228 2 204 2 235 1 
177 1 151 2 252 1 228 2 270 1 204 3 108 1 74 1 231 1 320 1 157 1 233 2 79 3 49 2 259 2 328 1 235 1 139 1 190 2 166 2 372 2 61 1 237 1 93 1 301 1 303 1 94 1 304 1 355 1 119 1 124 1 19 1 125 1 145 1 357 1 265 1 282 2 
321 1 79 1 81 1 190 1 151 1 299 1 372 1 228 1 204 1 235 1 
372 1 204 1 132 1 39 1 26 1 191 1 342 1 179 1 143 1 221 1 79 1 81 1 246 1 71 1 
151 1 190 1 228 1 372 1 204 1 132 2 39 1 342 2 26 1 191 1 221 1 79 1 81 1 246 1 71 1 
198 1 132 1 342 1 217 1 130 1 
198 1 332 1 132 2 39 1 246 1 342 2 319 1 130 1 
132 1 342 1 130 1 
321 1 79 1 81 1 190 1 151 1 198 1 299 1 372 1 228 1 204 1 132 1 342 1 235 1 97 1 
39 1 
312 1 198 1 132 2 39 1 246 1 342 2 319 1 130 1 
25 1 132 5 39 1 342 5 262 2 255 1 319 1 292 1 257 1 44 2 67 1 198 2 113 2 246 1 173 1 137 1 24 1 130 2 56 1 
190 1 228 1 372 1 204 2 74 1 108 1 237 1 93 1 218 1 303 1 94 1 333 1 304 1 355 1 134 1 79 2 49 1 259 1 265 1 282 1 
177 1 176 1 
177 2 151 1 190 1 372 2 228 1 204 2 291 1 79 2 159 1 
117 1 208 1 218 1 
177 1 165 1 204 1 108 1 74 1 93 1 237 1 303 1 94 1 304 1 355 1 79 1 49 1 259 1 265 1 282 1 
177 1 190 4 151 1 369 1 228 4 372 5 204 5 290 1 333 1 179 1 291 1 118 1 134 2 79 5 
79 2 81 1 190 2 299 1 372 2 228 2 204 2 242 1 
134 1 177 1 79 3 151 1 190 3 372 3 228 3 204 3 
79 1 81 1 190 1 299 1 372 1 228 1 204 1 
79 1 81 1 159 1 190 1 151 1 372 1 228 1 204 1 291 1 
266 1 177 1 151 2 252 1 228 3 204 4 132 1 74 1 108 1 26 1 342 1 47 1 291 1 320 1 134 1 233 2 79 4 81 1 49 1 259 1 328 1 235 1 139 1 190 3 166 1 372 3 191 1 61 1 237 1 93 1 303 1 94 1 333 1 304 1 355 1 119 1 221 1 124 1 125 1 145 1 357 1 265 1 282 1 71 1 
134 1 177 1 79 2 190 1 372 2 228 1 204 2 290 1 179 1 
151 1 190 3 228 3 372 3 132 1 204 3 39 1 342 1 191 1 26 1 333 1 47 1 291 1 221 1 134 2 79 3 223 1 81 1 71 1 
151 1 190 2 228 2 372 2 204 2 218 1 291 1 134 1 79 2 208 1 
177 1 204 1 108 1 74 1 93 1 237 1 303 1 94 1 355 1 304 1 79 1 49 1 259 1 265 1 282 1 
177 1 204 1 74 1 93 1 237 1 303 1 94 1 355 1 29 1 304 1 156 1 79 1 49 1 259 1 282 1 
117 2 166 4 270 2 215 1 61 1 169 1 218 2 31 1 119 1 5 1 256 1 6 1 222 1 233 2 124 2 207 1 208 2 357 1 145 1 21 1 328 1 50 1 105 1 139 1 
79 1 81 1 190 1 372 1 228 1 204 1 242 1 221 1 
364 1 300 1 
364 1 300 1 
102 1 368 1 
102 1 368 1 
102 1 368 1 
364 1 189 1 300 1 
364 1 189 1 300 1 
123 1 364 1 300 1 
331 1 164 1 364 2 102 1 300 2 368 1 
364 1 189 1 300 1 
364 1 59 1 300 1 
364 1 59 1 300 1 
364 1 59 1 300 1 
177 1 190 2 370 1 372 2 268 1 73 1 228 2 204 2 132 1 300 1 342 1 178 1 75 1 154 1 66 1 123 1 79 2 364 1 263 1 264 1 338 1 84 1 162 1 149 1 
331 1 73 2 268 1 300 2 132 2 39 1 342 2 354 1 75 2 43 1 99 1 32 1 66 2 364 2 209 2 309 1 264 3 162 2 147 1 
340 1 279 1 77 1 
340 1 279 1 244 1 
340 3 15 1 314 1 258 1 77 2 244 1 
340 2 15 1 258 1 77 1 70 1 244 1 
340 2 15 1 258 2 77 1 244 1 
72 1 25 3 251 1 132 5 342 5 178 1 256 1 255 2 319 1 3 1 271 3 135 2 346 2 207 1 113 1 50 1 367 1 56 1 370 1 39 2 262 1 170 1 44 1 197 1 198 4 21 1 246 1 337 1 103 2 310 1 130 1 149 1 
72 3 25 8 251 3 316 1 132 9 342 9 178 4 76 1 256 3 255 6 319 1 271 9 135 6 272 5 158 1 346 6 207 3 83 1 113 2 50 3 52 1 56 1 39 5 262 2 217 5 373 1 44 2 197 1 198 7 21 3 246 1 337 2 310 2 24 1 130 6 
72 1 25 3 251 2 132 3 342 3 178 1 256 1 3 1 255 2 135 2 271 4 346 2 207 1 113 1 50 1 367 1 39 3 262 1 44 1 198 2 246 1 21 1 337 1 103 1 310 1 24 1 
72 2 25 5 251 3 316 1 132 4 342 4 178 2 256 2 3 1 255 4 271 7 135 4 346 4 158 1 207 2 113 1 50 2 367 1 39 4 262 1 373 1 44 1 198 3 246 1 21 2 337 1 103 2 310 1 24 1 
304 1 220 1 176 1 
304 1 98 1 
200 1 
237 1 93 1 304 1 
304 1 248 1 
237 1 304 1 
90 1 237 1 93 1 350 1 220 2 304 3 
58 1 166 7 270 4 40 2 318 1 361 1 31 2 241 1 194 1 124 3 375 1 181 1 21 1 366 1 50 1 163 1 105 3 
58 1 166 7 270 4 40 2 318 1 361 1 31 2 241 1 194 1 124 3 375 1 181 1 21 1 366 1 50 1 163 1 105 3 
58 1 166 7 270 4 40 2 318 1 361 1 31 2 241 1 194 1 124 3 375 1 181 1 21 1 366 1 50 1 163 1 35 1 105 3 
287 3 72 3 270 11 109 1 318 4 361 1 2 4 31 3 256 3 233 2 322 1 207 3 181 1 328 1 51 1 50 3 163 1 139 1 212 1 58 1 166 22 40 1 61 1 142 1 120 1 193 1 124 11 145 1 21 3 105 7 
270 5 318 1 361 1 31 3 232 1 233 4 181 1 328 2 50 1 163 1 139 2 166 9 58 1 41 1 61 2 40 2 241 1 193 1 194 1 124 4 375 1 21 1 145 2 105 4 
286 1 340 2 131 1 314 1 288 1 74 1 289 1 343 1 77 1 153 1 30 1 155 1 112 1 49 1 293 1 259 1 327 2 297 1 86 1 371 1 168 1 303 1 244 1 69 1 279 1 281 1 146 1 282 1 227 2 381 1 
286 1 340 2 314 1 288 1 74 1 289 1 343 1 77 1 153 1 155 1 273 1 112 1 49 1 293 1 259 1 327 3 296 1 297 2 86 1 371 1 168 1 303 1 244 1 69 1 279 1 146 1 104 1 282 1 227 3 381 1 
286 1 340 2 314 1 74 1 343 1 77 1 153 1 273 1 112 1 49 1 293 1 259 1 327 2 297 2 86 1 371 1 168 1 303 1 244 1 69 1 279 1 146 1 104 1 282 1 227 2 
315 1 38 1 74 1 168 2 237 1 303 1 304 1 355 1 153 2 100 1 155 1 307 1 49 1 112 2 126 1 69 2 259 1 12 1 327 1 296 1 282 1 227 1 381 1 
340 2 131 1 314 1 288 1 74 1 289 1 343 1 77 1 153 1 155 1 112 1 49 1 293 1 259 1 327 1 86 1 168 1 303 1 244 1 69 1 279 1 281 1 104 1 282 1 227 1 381 1 
269 1 
251 2 204 1 342 5 254 1 255 2 348 2 49 2 113 1 259 2 53 1 56 1 116 1 353 2 262 1 303 1 355 2 304 1 221 1 306 1 307 1 129 1 226 4 174 2 130 6 71 1 25 2 315 1 132 5 74 1 27 1 26 1 179 1 319 3 271 2 79 1 365 2 81 1 324 2 330 1 88 1 89 2 372 1 39 2 191 1 237 1 95 1 96 1 42 1 334 2 143 1 101 1 44 1 246 1 337 1 282 2 
312 1 89 1 372 1 132 3 204 1 191 1 342 3 27 1 26 1 96 1 179 1 319 1 221 1 143 1 306 1 79 1 81 1 226 2 330 1 53 1 130 2 71 1 
312 1 372 1 132 3 204 1 39 1 191 1 342 3 27 1 26 1 96 1 179 1 319 1 334 1 221 1 143 1 306 1 79 1 81 1 246 1 226 3 330 1 53 1 130 1 71 1 
312 1 204 1 132 3 26 1 27 1 342 3 179 1 319 1 79 1 81 1 53 1 330 1 89 1 372 1 191 1 39 1 96 1 143 1 221 1 334 1 306 1 246 1 226 3 174 1 130 2 71 1 
251 2 1 1 204 1 342 5 344 1 255 1 348 2 113 1 53 1 56 1 353 2 262 1 221 1 171 1 306 1 226 6 174 4 130 7 71 1 312 1 25 1 132 5 26 1 27 1 179 1 319 3 79 1 81 1 365 2 324 2 183 1 330 1 275 1 88 1 89 4 372 1 191 1 39 5 96 1 42 1 143 1 334 4 44 1 246 5 
25 1 251 2 132 4 204 1 27 1 342 4 26 1 179 1 319 2 255 1 271 2 79 1 365 2 81 1 324 2 348 2 113 1 53 1 330 1 56 1 88 1 89 2 372 1 39 2 191 1 353 2 262 1 96 1 42 1 334 2 143 1 221 1 44 1 306 1 246 1 129 1 226 4 174 2 130 4 71 1 
25 1 251 2 204 1 132 4 26 1 27 1 342 4 179 1 319 2 255 1 79 1 365 2 81 1 324 2 348 2 113 1 183 1 53 1 330 1 275 1 56 1 88 1 89 2 372 1 39 1 191 1 353 2 262 1 42 1 96 1 334 2 143 1 221 1 171 1 44 1 306 1 246 1 226 4 174 2 130 4 71 1 
25 1 251 2 204 1 132 4 26 1 27 1 342 4 179 1 319 2 255 1 79 1 365 2 81 1 324 2 348 2 113 1 183 1 53 1 330 1 275 1 56 1 88 1 89 2 372 1 39 1 191 1 353 2 262 1 42 1 96 1 334 2 143 1 221 1 171 1 44 1 306 1 246 1 226 4 174 2 130 4 71 1 
25 1 204 1 132 4 26 1 27 1 342 4 317 2 46 1 179 1 319 2 255 1 271 2 79 1 81 1 348 2 113 1 36 1 53 1 330 1 56 1 88 1 89 2 372 1 39 1 191 1 353 2 239 2 262 1 96 1 334 2 143 1 221 1 171 1 305 1 44 1 306 1 246 1 226 4 174 2 130 4 71 1 
25 1 251 2 204 1 132 4 26 1 27 1 342 4 344 1 179 1 319 2 255 1 79 1 365 2 81 1 324 2 348 2 113 1 183 1 275 1 53 1 330 1 56 1 88 1 89 3 372 1 39 1 191 1 353 2 262 1 42 1 96 1 143 1 221 1 334 3 171 1 44 1 306 1 246 1 226 5 174 3 130 5 71 1 
25 1 251 2 204 1 132 4 26 1 27 1 342 4 344 1 179 1 319 2 255 1 79 1 365 2 81 1 324 2 348 2 113 1 183 1 275 1 53 1 330 1 56 1 88 1 89 3 372 1 39 1 191 1 353 2 262 1 42 1 96 1 143 1 221 1 334 3 171 1 44 1 306 1 246 1 226 5 174 3 130 5 71 1 
25 1 132 4 204 1 27 1 342 4 26 1 317 2 179 1 319 2 255 1 271 2 79 1 81 1 348 2 113 1 53 1 330 1 36 1 56 1 88 1 89 2 372 1 39 1 191 1 353 2 239 2 262 1 96 1 334 2 143 1 221 1 44 1 306 1 246 1 129 1 226 4 174 2 130 4 71 1 
177 2 117 1 166 6 58 1 270 3 40 1 61 1 218 1 31 2 119 1 241 1 222 1 194 1 233 2 124 3 375 1 208 1 21 1 357 1 145 1 328 1 50 1 163 1 176 1 105 2 139 1 
177 1 287 3 72 2 252 1 270 8 109 1 318 1 31 1 2 3 362 1 231 1 256 1 78 1 233 4 207 2 208 4 294 1 328 2 50 2 13 1 139 2 212 1 117 11 166 14 61 2 218 11 119 1 124 6 377 1 145 2 357 2 21 1 105 2 
177 1 250 1 228 1 252 1 204 2 270 1 74 1 108 1 362 1 231 1 134 1 79 2 233 2 49 1 325 1 208 1 259 1 328 1 139 1 165 1 190 1 372 1 166 2 237 1 93 1 61 1 303 1 94 1 333 1 304 1 355 1 119 1 124 1 265 1 145 1 357 1 282 1 175 1 
252 1 204 3 108 2 256 2 207 2 49 3 208 7 11 1 259 3 50 3 163 1 351 1 298 2 117 7 58 1 166 20 61 3 303 2 218 7 355 1 304 2 119 3 124 10 125 2 20 2 21 3 357 3 356 2 265 2 177 2 72 2 228 1 270 10 74 2 230 2 318 4 31 4 362 1 231 1 134 1 233 6 79 3 328 3 139 3 190 1 372 1 40 1 93 2 237 2 333 1 94 2 241 1 194 1 375 1 145 3 104 1 282 3 284 1 105 8 
315 1 228 1 252 1 204 1 270 1 74 2 30 1 231 1 134 1 79 1 233 4 82 1 33 1 49 7 10 1 259 8 326 1 328 2 139 2 190 1 372 1 166 2 61 2 237 2 302 1 301 2 303 2 277 1 304 3 355 2 119 2 222 1 124 1 307 1 145 2 357 2 104 1 282 8 285 1 
72 1 151 1 228 1 204 1 270 1 31 1 291 1 362 1 256 1 233 2 79 1 207 1 208 1 328 1 50 1 139 1 190 1 117 1 372 1 166 3 61 1 218 1 119 1 124 2 145 1 357 1 21 1 247 1 105 1 
117 1 166 2 270 2 215 1 61 1 318 1 218 1 119 1 222 1 233 2 207 1 208 1 357 1 145 1 328 1 50 1 105 1 139 1 
117 1 166 2 61 1 218 1 31 1 119 1 5 1 256 1 222 1 233 2 124 2 208 1 357 1 145 1 21 1 328 1 105 1 139 1 
72 1 117 2 166 4 270 2 61 1 318 1 218 2 31 1 256 1 119 1 222 1 233 2 124 2 207 1 208 2 21 1 357 1 145 1 328 1 50 1 105 2 139 1 
117 1 166 2 270 2 215 1 61 1 318 1 218 1 119 1 233 2 207 1 208 1 357 1 145 1 328 1 50 1 285 1 105 1 139 1 
117 1 166 2 61 1 218 1 31 1 119 1 5 1 256 1 233 2 124 2 208 1 357 1 145 1 21 1 328 1 285 1 105 1 139 1 
72 1 117 2 166 4 270 2 61 1 318 1 218 2 31 1 256 1 119 1 233 2 124 2 207 1 208 2 21 1 357 1 145 1 328 1 50 1 285 1 105 2 139 1 
72 1 117 2 166 4 270 2 61 1 318 1 218 2 31 1 256 1 119 1 233 2 124 2 207 1 208 2 21 1 357 1 145 1 328 1 50 1 105 2 139 1 
177 1 252 1 270 1 204 1 74 1 108 1 231 1 79 1 233 2 49 1 259 1 328 1 139 1 166 2 237 1 93 1 61 1 303 1 94 1 355 1 304 1 119 1 125 1 124 1 265 1 357 1 145 1 282 1 
177 1 252 1 270 1 204 1 74 1 29 1 231 1 156 1 79 1 233 2 49 1 259 1 328 1 139 1 166 2 237 1 93 1 61 1 303 1 94 1 355 1 304 1 119 1 196 1 124 1 357 1 145 1 282 1 
72 1 117 2 166 4 270 2 61 1 318 1 218 2 31 1 362 1 256 1 119 1 233 2 124 2 207 1 208 2 21 1 357 1 145 1 328 1 50 1 105 2 139 1 
72 1 270 2 204 1 74 1 108 1 318 1 31 1 30 1 256 1 79 1 233 2 207 1 49 1 208 2 259 1 328 1 50 1 139 1 117 2 166 4 93 1 237 1 61 1 218 2 303 1 94 1 304 1 119 1 124 2 125 1 21 1 265 1 356 1 357 1 145 1 282 1 105 2 
72 1 151 1 228 1 204 1 270 2 318 1 291 1 362 1 256 1 233 2 79 1 207 1 208 1 328 1 50 1 139 1 190 1 117 1 372 1 166 3 61 1 352 1 218 1 119 1 124 1 21 1 145 1 357 1 105 1 
287 3 0 4 109 3 152 1 2 4 256 4 207 4 50 5 163 1 212 1 213 1 166 41 58 1 60 1 61 3 124 21 21 5 311 1 72 4 270 20 359 1 318 4 31 4 232 1 363 1 233 6 323 1 182 1 328 3 184 1 139 3 85 2 40 1 192 1 241 1 374 1 193 1 194 1 195 1 278 1 375 1 145 3 105 8 
287 3 72 4 0 4 270 20 359 1 109 3 152 1 318 3 31 4 2 4 232 1 256 3 363 1 233 8 323 1 207 4 182 1 328 4 184 1 50 5 163 1 85 2 139 4 212 1 213 1 58 1 166 38 60 1 40 1 61 4 192 1 241 1 374 1 194 1 193 2 195 1 375 1 278 1 124 18 145 4 21 4 311 1 105 7 
287 4 72 7 0 4 270 27 359 1 109 2 152 1 318 7 31 7 2 4 232 1 256 7 363 1 233 4 323 1 207 7 182 1 294 2 328 2 184 1 50 8 163 1 85 1 139 2 212 2 58 1 166 52 60 1 40 1 61 2 192 1 241 1 374 1 194 1 193 1 195 1 375 1 278 1 124 25 145 2 21 8 105 14 
287 1 72 3 0 2 270 9 109 1 318 3 31 3 2 2 232 1 256 3 233 4 323 1 207 3 328 2 50 3 85 1 139 2 212 1 166 19 92 1 60 1 61 2 192 2 374 1 195 1 124 10 145 2 21 3 311 1 105 6 
287 2 72 3 0 4 270 14 359 1 109 2 152 1 318 2 31 2 2 2 232 1 256 2 363 1 233 6 323 1 207 3 182 1 328 3 184 1 50 3 85 2 139 3 166 26 60 1 61 3 192 1 374 2 193 2 195 1 124 12 278 1 21 2 145 3 105 4 
331 1 66 1 364 1 73 1 300 1 354 1 75 1 162 1 260 1 43 1 
123 1 263 1 
66 1 364 1 180 1 73 1 300 1 202 1 185 1 75 1 162 1 
189 1 199 1 
164 1 59 1 378 1 
331 1 268 1 73 1 132 1 300 1 39 1 342 1 354 1 75 1 43 1 99 1 32 1 66 1 364 1 209 1 264 2 162 1 147 1 
331 1 268 1 73 1 132 1 300 1 39 1 342 1 354 1 75 1 43 1 99 1 32 1 66 1 364 1 209 1 264 2 162 1 147 1 
331 1 268 1 73 1 132 1 300 1 39 1 342 1 354 1 75 1 43 1 99 1 32 1 66 1 364 1 209 1 264 2 162 1 147 1 
164 1 189 1 199 1 
164 1 189 1 199 1 
59 1 378 1 
164 1 59 1 378 1 
338 1 84 1 
177 1 73 1 228 2 204 2 132 1 342 1 178 1 75 1 154 1 79 2 364 1 209 1 349 1 84 1 162 1 190 2 370 1 372 2 300 1 99 1 66 1 123 1 198 1 263 1 264 1 338 1 149 1 
252 1 253 1 204 2 270 1 74 1 362 1 231 1 205 1 345 1 48 1 79 2 233 2 33 1 49 2 259 2 328 1 139 1 372 2 166 2 237 1 61 1 302 1 301 2 303 1 304 1 119 1 124 1 357 1 201 1 145 1 282 2 
340 2 314 1 74 1 168 1 288 1 110 1 343 1 303 1 77 1 30 1 64 1 244 1 49 2 293 1 279 1 259 2 104 1 295 1 282 2 
340 2 314 1 168 1 288 1 74 1 110 1 343 1 303 1 77 1 244 1 49 1 293 1 279 1 259 1 224 1 104 1 282 1 
315 1 74 1 168 1 237 1 303 1 304 1 355 1 121 1 100 1 49 1 307 1 259 1 295 1 282 1 
340 2 314 1 168 1 288 1 74 1 110 1 343 1 303 1 77 1 64 1 244 1 49 1 293 1 279 1 259 1 104 1 295 1 282 1 
54 1 
25 1 39 1 246 1 173 1 255 1 176 1 257 1 
25 1 251 1 132 1 342 1 255 1 319 1 271 1 365 1 324 1 113 1 56 1 39 2 262 1 42 1 44 1 246 1 130 1 
251 6 341 1 342 5 45 2 255 8 256 2 257 1 346 6 111 2 207 2 49 3 113 4 259 3 50 2 161 1 56 4 167 2 262 4 303 4 304 10 355 1 220 2 308 1 21 2 173 1 225 2 130 5 72 2 25 9 132 5 74 3 230 2 30 1 319 3 135 6 271 12 186 1 90 1 191 2 39 8 237 3 93 3 95 1 98 3 44 4 376 2 246 2 337 2 379 1 282 3 148 2 380 2 248 2 106 2 
287 1 72 2 25 8 251 3 132 1 133 1 342 1 109 1 152 1 2 1 319 1 255 5 256 2 363 1 271 6 135 5 346 5 111 1 207 2 182 1 113 2 184 1 50 2 56 2 39 5 262 2 95 1 44 2 278 1 337 1 21 2 246 2 22 1 225 2 130 1 
25 2 151 1 228 1 204 1 132 1 342 1 255 2 321 1 79 1 111 1 81 1 113 1 50 2 235 1 163 1 275 1 56 1 190 1 299 1 58 1 372 1 262 1 97 1 44 1 194 1 21 1 225 2 339 1 
25 1 39 1 262 1 255 1 257 1 44 1 113 1 246 1 173 1 56 1 
72 2 25 5 251 5 230 1 39 5 255 5 256 2 135 5 271 10 346 5 111 1 207 2 21 2 225 2 50 2 
132 1 39 1 246 1 342 1 319 1 130 1 
25 2 315 1 341 2 132 3 74 1 342 3 254 1 255 2 319 2 49 4 113 2 259 4 56 1 116 1 237 1 262 2 303 1 95 2 304 1 355 2 44 2 68 1 307 1 337 2 23 1 379 1 282 4 24 1 130 4 
177 1 151 2 252 1 228 2 204 3 108 1 74 1 320 1 233 2 79 3 49 1 259 1 328 1 235 1 139 1 190 2 166 1 372 2 93 1 237 1 61 1 303 1 94 1 355 1 304 1 119 1 124 1 125 1 145 1 265 1 357 1 282 1 
25 1 251 2 39 4 40 1 262 1 95 1 255 2 135 2 271 4 44 1 346 2 113 1 337 1 246 2 56 1 
66 1 73 1 329 1 
66 1 73 1 329 1 
66 1 267 1 73 1 338 1 43 1 
66 1 73 1 329 1 
66 1 188 1 73 1 
66 1 188 1 73 1 
66 1 188 1 73 1 
66 1 73 1 
364 1 300 1 
166 8 58 1 270 4 40 1 61 2 318 1 31 2 241 1 194 1 193 1 233 4 124 4 375 1 21 1 145 2 328 2 50 1 163 1 105 3 139 2 
58 1 166 6 270 3 40 1 31 2 241 1 194 1 124 3 375 1 21 1 50 1 163 1 176 1 105 2 
72 1 166 4 270 2 61 1 318 1 31 1 256 1 233 2 124 2 207 1 34 1 21 1 145 1 328 1 50 1 105 2 139 1 
212 1 287 1 72 1 166 7 270 3 109 1 318 1 31 1 2 2 256 1 124 4 207 1 21 1 50 1 105 2 
72 2 287 2 270 11 318 4 2 2 31 5 256 2 78 1 7 1 233 4 207 2 294 1 328 2 50 3 163 2 139 2 212 1 58 2 166 23 40 1 61 2 241 1 194 1 193 2 375 1 124 12 21 3 145 2 105 9 
124 1 166 1 2 1 
287 1 166 1 270 1 
72 1 166 6 270 3 230 1 61 1 318 1 31 2 256 1 233 2 124 3 207 1 34 1 145 1 21 1 328 1 50 1 105 3 139 1 
287 1 72 2 270 6 109 1 152 1 318 1 2 1 31 1 232 1 256 2 363 1 233 2 207 2 182 1 328 1 50 2 184 1 139 1 166 12 61 1 124 6 278 1 145 1 21 2 105 2 
166 6 58 1 270 3 318 1 31 1 194 1 124 3 21 1 50 1 163 1 105 2 
58 1 166 3 270 1 61 1 318 1 31 1 241 1 7 1 193 1 233 2 375 1 124 2 145 1 328 1 163 1 105 2 139 1 
287 1 270 4 109 1 2 1 31 2 232 1 233 2 328 1 50 1 163 1 139 1 166 8 58 1 40 1 61 1 241 1 194 1 124 4 278 1 375 1 21 1 145 1 105 2 
287 1 72 1 270 6 109 1 318 1 31 2 2 2 232 1 233 4 207 1 34 1 328 2 50 2 163 1 139 2 212 1 58 1 166 11 40 1 61 2 241 1 194 1 375 1 124 5 278 1 21 1 145 2 105 3 
287 1 72 2 270 9 109 1 152 1 318 1 2 1 31 3 232 1 256 2 363 1 233 6 207 2 182 1 34 1 328 3 184 1 50 3 163 1 139 3 58 1 166 19 40 1 61 3 241 1 194 1 193 1 375 1 124 10 278 1 145 3 21 3 105 4 
287 1 72 2 270 10 109 1 152 1 318 2 2 1 31 3 232 1 256 1 363 1 233 6 207 2 182 1 34 1 328 3 50 3 184 1 163 1 139 3 58 1 166 17 40 1 61 3 241 1 194 1 193 1 375 1 124 7 278 1 145 3 21 2 105 5 
287 1 270 4 109 1 2 1 31 2 232 1 233 2 328 1 50 1 163 1 139 1 166 8 58 1 40 1 61 1 241 1 194 1 124 4 278 1 375 1 21 1 145 1 105 2 
287 1 72 2 270 6 109 1 152 1 318 1 2 1 31 1 232 1 256 2 363 1 233 2 207 2 182 1 328 1 50 2 184 1 139 1 166 12 61 1 124 6 278 1 145 1 21 2 105 2 
287 1 72 2 270 10 109 1 152 1 318 2 2 1 31 3 232 1 256 1 363 1 233 8 207 2 182 1 34 1 328 4 184 1 50 3 163 1 139 4 58 1 166 18 40 1 61 4 241 1 194 1 193 2 375 1 124 8 278 1 145 4 21 2 105 5 
287 1 72 3 270 9 109 1 152 1 318 3 2 1 31 3 232 1 256 2 363 1 233 8 207 3 182 1 328 4 184 1 50 3 139 4 166 16 61 4 193 2 124 7 278 1 145 4 21 2 311 1 105 6 
166 7 58 3 270 3 318 3 31 3 241 1 194 1 124 4 375 2 21 1 50 1 163 3 105 6 
287 1 72 2 270 10 109 1 152 1 318 1 2 1 31 3 232 1 256 1 363 1 233 8 207 2 182 1 328 4 184 1 50 3 163 1 139 4 58 1 166 18 40 1 61 4 241 1 194 1 193 2 375 1 124 8 278 1 145 4 21 2 311 1 105 4 
58 2 166 10 270 5 61 1 318 2 31 3 232 1 194 1 233 2 124 5 145 1 21 2 328 1 50 2 163 2 339 1 105 5 139 1 
166 2 270 2 61 1 318 1 232 1 233 2 207 1 145 1 328 1 50 1 105 1 139 1 
72 1 166 4 270 2 61 1 318 1 31 1 256 1 232 1 233 2 124 2 207 1 21 1 145 1 328 1 50 1 105 2 139 1 
166 3 58 1 270 1 61 3 318 1 31 1 232 1 193 1 7 1 233 6 124 2 145 3 328 3 163 1 311 1 105 2 139 3 
287 3 72 3 270 16 109 1 318 5 2 4 31 7 232 1 256 3 7 1 233 10 207 3 34 1 328 5 51 1 50 5 163 3 139 5 212 1 58 3 166 34 40 1 61 5 142 1 241 1 120 1 194 2 193 2 375 1 124 18 145 5 21 5 311 1 105 12 
177 1 79 1 372 1 204 1 290 1 115 1 179 1 
177 1 236 1 372 1 204 1 290 1 179 1 79 1 335 1 127 1 336 1 115 1 261 1 
315 1 307 1 49 1 259 1 74 1 237 1 303 1 282 1 304 1 355 1 176 1 
177 1 190 1 228 1 372 1 204 2 74 1 237 1 93 1 303 1 94 1 304 1 355 1 134 1 79 2 49 1 259 1 265 1 282 1 
177 1 190 2 228 1 372 2 341 1 204 2 74 1 237 2 93 2 45 1 303 1 94 1 304 3 221 1 134 1 79 2 81 1 49 1 259 1 265 1 282 1 248 1 71 1 
177 1 341 1 228 1 204 2 74 1 45 1 156 1 134 1 79 2 81 1 49 2 259 2 190 2 91 1 372 2 93 2 237 2 303 1 94 1 304 3 221 1 282 2 71 1 248 1 
341 1 132 2 74 1 342 2 45 1 49 3 259 3 274 1 187 1 91 1 191 1 39 1 93 1 237 1 303 1 220 1 304 4 355 1 98 1 246 1 282 3 130 1 248 1 
91 1 341 1 132 2 39 1 191 1 342 2 74 1 237 1 93 1 45 1 303 1 355 1 304 4 220 1 98 1 376 1 49 3 259 3 246 1 282 3 130 1 248 1 
49 1 259 1 74 1 303 1 282 1 277 1 
90 1 74 2 16 1 93 1 237 2 301 1 302 1 240 1 303 3 277 1 30 1 355 2 304 3 82 1 49 6 10 1 259 7 326 1 104 1 282 7 276 1 
177 2 228 1 270 3 204 2 74 1 108 1 31 2 362 1 30 1 48 1 134 1 79 2 233 4 49 1 208 1 259 1 328 2 50 1 163 1 139 2 190 1 117 1 166 6 58 1 372 1 40 1 237 1 93 1 61 2 218 1 303 1 94 1 304 1 241 1 119 2 194 1 124 3 375 1 125 1 20 1 21 1 145 2 357 2 356 1 265 1 282 1 105 2 
25 1 132 3 342 3 255 1 319 1 257 1 49 1 113 2 259 1 56 2 167 1 39 1 191 1 262 2 355 1 304 2 220 1 98 1 44 2 198 1 376 1 246 1 173 1 379 1 282 1 130 2 148 1 380 1 
90 1 74 1 93 1 237 1 303 2 30 1 220 1 277 1 304 2 49 2 259 2 186 1 282 2 
141 1 315 1 91 1 74 1 237 1 303 1 355 1 30 1 304 1 49 4 307 1 259 4 282 4 
341 1 74 1 238 1 93 1 237 1 240 1 303 2 304 1 49 2 259 2 282 2 284 1 283 1 276 1 
340 1 49 1 279 1 259 1 74 1 343 1 303 1 282 1 355 1 244 1 
253 1 74 1 237 1 302 1 303 1 30 1 304 1 49 2 259 2 104 1 282 2 
141 1 315 1 341 1 74 2 237 2 302 1 303 2 355 1 30 1 304 3 307 1 49 4 10 1 259 5 326 1 282 5 
87 1 141 1 315 1 341 1 74 2 237 2 302 1 303 2 355 1 30 1 304 3 307 1 49 4 10 1 259 5 282 5 
177 1 190 1 228 1 372 1 204 2 74 1 237 1 93 1 303 1 94 1 304 1 355 1 134 1 156 1 79 2 49 1 259 1 282 1 
90 1 341 1 74 1 16 1 93 1 237 1 240 1 303 2 304 1 49 1 259 1 282 1 276 1 
177 1 57 1 210 1 160 1 4 1 
177 1 203 1 57 2 132 2 39 1 191 1 342 2 26 1 63 1 47 1 4 1 221 1 81 1 198 1 246 1 210 2 160 2 211 1 71 1 
57 1 372 1 204 1 4 1 345 1 205 1 79 1 210 1 201 1 
203 1 211 1 4 1 
286 1 371 1 146 1 176 1 
286 1 371 1 146 1 327 1 227 1 155 1 381 1 
69 1 327 1 153 1 
286 1 131 1 371 1 214 1 155 1 8 1 9 2 172 1 146 1 327 3 227 3 381 1 
286 1 249 1 371 1 146 1 327 2 297 1 227 2 155 1 381 1 
340 1 80 1 131 1 371 1 279 1 229 1 327 1 77 1 227 1 155 1 381 1 
286 1 131 1 371 1 327 1 227 1 155 1 381 1 
286 2 131 1 146 1 327 1 227 1 155 1 381 1 
286 1 313 1 144 1 131 1 371 1 327 2 227 2 243 1 155 2 381 2 
286 1 131 1 371 2 155 1 122 1 80 1 128 1 146 1 327 3 136 1 227 3 297 2 381 1 
286 1 340 2 131 1 371 1 314 1 77 1 244 1 155 1 279 1 146 1 327 2 227 2 297 1 37 1 381 1 
286 1 249 1 131 1 371 2 155 2 80 1 347 1 146 1 327 4 136 1 227 4 297 2 381 2 
286 1 131 1 371 1 146 1 327 1 227 1 155 1 381 1 
286 2 371 3 155 1 18 1 80 1 9 1 8 1 172 1 146 2 327 4 136 1 297 2 227 4 381 1 
286 1 131 1 371 1 280 1 146 1 327 2 360 1 297 1 227 2 206 1 155 1 381 1 
286 1 131 1 371 1 9 2 8 2 172 1 146 1 245 1 327 3 227 3 155 1 381 1 
65 1 107 2 371 2 138 1 
140 1 131 1 327 1 227 1 155 1 381 1 
286 1 122 1 131 1 371 1 146 1 327 2 297 1 227 2 155 1 381 1 
216 1 
286 1 131 1 371 1 146 1 327 1 227 1 155 1 381 1 
286 1 131 1 371 1 155 1 122 1 9 1 146 1 327 3 297 1 227 3 381 1 
18 1 80 1 371 1 136 1 
286 1 371 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 233 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 233 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 339 78 191 311 6 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 339 78 191 311 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
286 1 305 1 31 1 56 1 186 1 362 1 85 5 245 1 121 2 246 9 63 2 65 1 329 3 250 1 249 9 177 2 373 1 251 4 95 1 49 1 192 1 350 2 101 1 159 2 335 1 25 6 258 2 181 2 
286 1 305 1 31 1 56 1 186 1 362 1 85 5 245 1 246 9 63 2 121 2 65 1 329 3 250 1 249 9 177 2 373 1 251 4 95 1 49 1 192 1 350 2 101 1 159 2 335 1 25 6 258 2 181 2 
286 1 305 1 31 1 56 1 186 1 362 1 85 6 245 1 246 10 63 2 121 2 65 1 329 4 250 1 249 10 177 2 373 1 251 5 95 1 49 1 192 1 350 2 101 1 159 2 335 1 25 7 258 2 181 2 
286 1 305 1 31 1 56 1 186 1 362 1 85 4 245 1 246 7 63 2 121 1 65 1 329 2 250 1 249 7 177 2 251 3 95 1 49 1 192 1 350 2 101 1 159 2 335 1 25 4 258 2 181 2 
63 1 246 4 121 2 329 1 305 1 249 4 250 1 177 1 373 1 251 2 350 1 101 1 362 1 85 3 159 1 25 3 258 1 245 1 
63 1 246 2 231 1 305 1 249 2 286 1 3 1 192 1 350 1 101 1 85 1 159 1 258 1 13 1 245 1 181 1 
63 2 246 3 65 1 329 1 305 1 249 3 251 1 350 2 101 1 85 2 25 1 245 1 181 1 
302 1 305 1 31 1 186 1 362 1 85 5 245 1 246 9 63 2 121 2 17 1 65 1 329 3 249 9 250 1 177 1 251 4 373 1 350 2 101 1 159 1 25 7 258 1 181 1 
302 1 305 1 31 1 186 1 362 1 85 5 245 1 246 9 63 2 121 2 17 1 65 1 329 3 249 9 250 1 177 1 251 4 373 1 350 2 101 1 159 1 25 7 258 1 181 1 
229 1 75 1 334 1 
229 1 364 1 108 2 
265 2 68 2 187 2 168 2 204 1 213 2 161 2 340 1 
182 1 283 1 304 2 204 1 115 1 284 1 340 1 57 1 137 1 265 3 187 2 360 1 240 1 168 2 60 2 169 1 270 1 213 2 12 2 367 1 16 1 370 1 313 1 248 1 45 1 347 2 66 1 275 1 332 1 68 2 223 2 295 1 320 1 110 1 161 3 162 1 111 1 
265 1 312 1 68 1 187 1 168 1 213 1 161 1 340 1 378 1 42 1 
229 1 312 1 75 1 150 1 28 1 202 1 48 1 265 1 68 1 161 1 87 1 24 1 10 1 74 1 
229 1 312 1 75 1 150 1 28 1 202 1 48 1 265 1 68 1 187 1 168 1 213 1 161 1 10 2 24 2 
117 1 195 1 10 1 24 1 11 1 
229 1 117 1 75 1 319 1 252 1 10 2 24 2 11 1 
117 1 10 1 24 1 
312 1 340 1 265 1 68 1 187 1 168 1 310 1 213 1 161 1 24 1 10 1 11 1 378 1 42 1 
229 1 
229 1 50 1 117 1 75 1 319 1 10 2 24 2 11 1 
229 1 228 1 75 1 96 1 58 1 82 1 117 2 157 2 188 2 319 1 298 1 107 1 119 1 41 1 24 5 10 5 365 2 163 1 11 2 
334 1 204 1 
90 1 204 2 265 2 277 1 68 2 187 1 168 1 213 1 161 2 
220 1 112 1 180 1 
304 1 204 1 115 1 284 1 275 1 265 1 332 1 223 1 295 1 240 1 38 1 270 1 161 1 111 1 12 1 367 1 
44 1 304 1 115 1 284 1 275 1 20 1 332 1 265 2 68 1 223 1 295 1 240 1 168 1 270 1 213 1 161 2 111 1 112 1 367 1 12 1 
44 2 204 1 47 1 20 1 265 5 277 1 68 5 187 1 317 1 318 1 168 4 213 4 161 5 74 1 
265 2 312 1 68 2 292 1 168 2 213 2 161 2 378 1 
265 3 68 3 187 1 44 1 168 3 204 1 213 3 161 3 
265 1 312 1 68 1 168 1 213 1 161 1 378 1 
90 1 265 1 277 1 312 1 68 1 187 1 168 1 213 1 161 1 
182 1 133 1 283 1 304 1 28 1 202 1 204 1 115 1 284 1 340 1 57 1 137 1 265 4 187 2 360 1 240 1 168 3 60 1 270 1 213 3 10 1 367 1 12 1 16 1 370 1 312 1 150 1 248 1 44 1 347 2 275 1 20 1 48 1 332 1 277 1 281 1 68 3 223 1 295 1 110 1 161 4 162 1 111 1 24 1 
265 2 68 2 44 1 168 1 204 1 213 1 47 1 161 2 74 1 
229 1 312 1 150 1 44 2 28 1 202 1 48 1 20 1 277 1 265 3 68 3 281 1 187 1 168 3 213 3 161 3 10 1 24 1 216 1 
44 1 220 1 277 1 265 2 68 2 187 1 168 2 213 2 161 2 112 1 
304 1 204 1 115 1 275 1 284 1 265 1 332 1 223 1 295 1 240 1 270 1 161 1 111 1 12 1 367 1 
304 1 204 1 275 1 284 1 153 1 152 1 265 1 332 1 223 1 240 1 270 1 161 1 111 1 12 1 367 1 
182 1 283 1 235 1 339 1 57 2 137 1 269 1 60 4 169 2 8 1 147 1 248 1 122 1 330 1 347 2 218 1 253 1 97 1 220 2 99 1 110 1 162 1 112 2 180 2 
265 1 312 1 68 1 292 1 202 1 168 1 213 1 161 1 
355 1 217 1 
355 1 217 1 
184 1 129 1 
184 1 129 1 
184 1 129 1 
355 1 217 1 348 1 
355 1 217 1 348 1 
355 1 217 1 113 1 
189 1 184 1 355 2 217 2 129 1 4 1 
355 1 217 1 348 1 
238 1 355 1 217 1 
238 1 355 1 217 1 
238 1 355 1 217 1 
53 1 355 1 114 1 204 1 55 1 306 1 265 2 210 1 168 2 213 2 10 1 247 1 217 1 93 1 294 1 68 2 297 1 377 1 109 1 161 2 71 1 354 1 24 1 113 1 
229 1 53 2 165 1 271 2 247 1 355 2 328 1 217 2 114 2 55 2 263 1 4 1 193 1 84 1 106 1 297 3 354 2 24 2 10 2 
159 1 177 1 258 1 
231 1 159 1 258 1 
349 1 35 1 231 1 177 2 258 3 164 1 
349 1 231 1 177 1 172 1 258 2 164 1 
349 1 231 1 177 1 258 2 164 2 
229 2 303 1 75 1 234 2 235 1 339 1 203 1 78 1 306 1 307 1 117 1 188 1 364 1 119 1 365 1 10 5 11 4 145 1 147 1 253 1 155 2 96 2 156 2 157 1 255 1 319 1 108 3 377 1 160 1 71 1 24 5 163 3 
229 3 303 1 233 1 75 1 235 1 339 1 29 1 78 1 205 1 307 1 82 1 117 4 188 2 364 1 119 1 10 7 365 2 11 5 147 1 43 3 253 1 155 2 96 2 156 2 195 3 157 2 255 1 319 1 158 1 108 3 377 2 24 7 163 3 
229 3 75 1 234 1 235 1 339 1 203 1 78 1 307 1 82 1 188 1 364 2 365 1 10 3 11 2 147 1 253 1 96 2 155 2 156 2 157 1 255 1 377 1 108 4 160 1 24 3 163 3 
82 1 233 1 157 1 188 1 203 1 160 1 365 1 10 1 24 1 
334 1 284 1 226 1 
105 1 284 1 
77 1 
240 1 284 1 270 1 
141 1 284 1 
284 1 270 1 
240 1 357 1 324 1 284 3 270 1 226 2 
147 1 327 1 52 1 282 2 1 1 76 1 218 3 178 1 253 1 57 3 33 1 333 1 352 1 60 7 169 4 8 2 199 1 
147 1 327 1 52 1 282 2 1 1 76 1 218 3 178 1 253 1 57 3 33 1 333 1 352 1 60 7 169 4 8 2 199 1 
147 1 327 1 52 1 282 2 1 1 76 1 218 3 178 1 253 1 57 3 33 1 194 1 333 1 352 1 60 7 169 4 8 2 199 1 
147 2 52 2 282 1 235 1 339 2 18 1 218 2 78 2 81 2 253 1 314 2 57 4 191 1 208 1 352 1 6 1 60 11 169 7 8 1 311 1 199 1 
282 2 52 1 182 2 283 2 1 1 57 4 33 1 137 2 361 1 60 9 169 5 8 3 345 1 147 1 327 1 347 4 218 4 178 1 253 1 333 1 352 1 110 2 197 1 199 1 
231 1 304 1 305 1 308 1 264 1 207 1 35 1 266 1 85 1 215 1 12 1 245 1 326 1 246 2 63 1 249 2 177 1 125 1 332 1 350 1 101 1 223 1 102 1 69 1 159 1 70 1 111 1 25 1 258 2 181 1 
231 1 166 1 304 1 308 1 207 1 35 1 266 1 85 1 39 1 12 1 245 1 326 1 246 3 63 1 249 3 177 1 331 1 125 1 332 1 350 1 101 1 223 1 102 1 69 1 159 1 70 1 111 1 25 2 258 2 181 1 
231 1 304 1 308 1 35 1 266 1 85 1 39 1 12 1 245 1 326 1 246 2 249 2 177 1 331 1 125 1 332 1 101 1 223 1 102 1 159 1 70 1 111 1 25 2 258 2 181 1 
132 1 166 1 304 1 284 1 185 1 266 2 139 1 270 1 12 1 326 2 62 1 246 1 63 1 46 1 275 1 249 1 219 1 332 1 350 1 223 1 111 1 70 2 181 2 
326 1 63 1 246 1 231 1 304 1 305 1 249 1 177 1 308 1 125 1 207 1 264 1 332 1 35 1 350 1 266 1 102 1 223 1 69 1 159 1 39 1 111 1 70 1 258 2 12 1 181 1 
135 1 
304 2 202 1 262 1 307 1 117 6 265 1 309 2 211 1 270 1 119 1 10 5 9 1 12 2 14 1 273 1 312 1 19 2 275 2 68 1 223 2 319 3 72 1 225 1 24 5 74 1 26 1 229 2 132 1 230 1 75 1 28 1 284 1 237 1 358 2 138 1 290 2 188 1 364 2 144 2 365 1 87 1 150 1 46 1 151 4 48 1 96 2 332 1 100 2 157 1 196 1 376 2 108 2 161 1 111 1 163 2 
230 1 312 1 150 1 202 1 28 1 151 2 48 1 50 1 117 2 265 1 68 1 138 1 319 1 211 1 161 1 144 1 72 1 24 3 10 3 9 1 87 1 74 1 
229 1 230 1 75 1 28 1 202 1 117 1 265 1 138 1 211 1 87 1 9 1 10 3 312 1 150 1 19 1 151 3 48 1 50 1 68 1 319 1 161 1 72 1 24 3 74 1 
229 1 230 1 75 1 28 1 202 1 358 1 265 1 117 2 138 1 211 1 144 1 87 1 9 1 10 3 312 1 150 1 19 1 151 3 48 1 50 1 68 1 319 1 161 1 72 1 24 3 74 1 
0 1 202 1 201 1 265 1 117 7 211 1 309 2 119 1 10 5 9 1 312 1 273 1 19 4 67 1 68 1 319 3 72 1 24 5 74 1 26 1 229 5 230 1 75 5 28 1 358 4 138 1 188 1 290 2 364 2 144 4 87 1 365 1 150 1 151 6 48 1 94 1 96 1 50 1 100 2 157 1 375 1 376 2 161 1 163 1 
202 1 265 1 117 4 211 1 309 2 119 1 10 4 9 1 312 1 273 1 19 2 68 1 319 2 72 1 24 4 26 1 74 1 229 2 230 1 75 1 28 1 358 2 138 1 188 1 290 2 364 2 144 2 365 1 87 1 150 1 151 4 48 1 96 1 100 2 157 1 108 2 376 2 196 1 161 1 163 1 
229 1 230 1 75 1 28 1 202 1 358 2 117 4 265 1 138 1 290 2 188 1 309 2 211 1 364 2 119 1 144 2 87 1 9 1 10 4 365 1 273 1 312 1 150 1 19 2 151 4 48 1 94 1 96 1 67 1 68 1 100 2 157 1 319 2 375 1 376 2 161 1 72 1 24 4 163 1 26 1 74 1 
229 1 230 1 75 1 28 1 202 1 358 2 117 4 265 1 138 1 290 2 188 1 309 2 211 1 364 2 119 1 144 2 87 1 9 1 10 4 365 1 273 1 312 1 150 1 19 2 151 4 48 1 94 1 96 1 67 1 68 1 100 2 157 1 319 2 375 1 376 2 161 1 72 1 24 4 163 1 26 1 74 1 
229 1 230 1 75 1 28 1 202 1 236 1 358 2 117 4 265 1 138 1 188 1 309 2 211 1 291 1 119 1 144 2 243 2 87 1 9 1 10 4 365 1 273 1 312 1 92 1 150 1 19 2 151 4 48 1 96 1 67 1 68 1 100 2 157 1 104 2 319 2 108 2 161 1 72 1 24 4 163 1 74 1 
229 1 230 1 75 1 28 1 202 1 201 1 358 3 265 1 117 5 138 1 290 2 188 1 309 2 211 1 364 2 119 1 144 3 365 1 87 1 9 1 10 4 273 1 312 1 150 1 19 3 151 5 94 1 48 1 96 1 67 1 68 1 100 2 157 1 319 2 375 1 376 2 161 1 72 1 24 4 163 1 26 1 74 1 
229 1 230 1 75 1 28 1 202 1 201 1 358 3 265 1 117 5 138 1 290 2 188 1 309 2 211 1 364 2 119 1 144 3 365 1 87 1 9 1 10 4 273 1 312 1 150 1 19 3 151 5 94 1 48 1 96 1 67 1 68 1 100 2 157 1 319 2 375 1 376 2 161 1 72 1 24 4 163 1 26 1 74 1 
229 1 230 1 75 1 28 1 202 1 358 2 117 4 265 1 138 1 188 1 309 2 211 1 119 1 291 1 144 2 243 2 87 1 9 1 365 1 10 4 273 1 312 1 150 1 19 2 151 4 48 1 96 1 68 1 100 2 157 1 104 2 319 2 196 1 108 2 161 1 72 1 24 4 163 1 74 1 
282 1 182 1 283 1 1 1 204 2 33 1 57 3 137 1 60 6 169 3 8 2 327 1 147 1 248 1 347 2 218 2 178 1 253 1 220 1 99 1 333 1 334 1 110 1 162 1 112 1 180 1 
182 2 283 2 339 2 235 1 204 1 78 2 32 1 81 3 57 6 137 2 208 1 60 14 169 8 8 1 147 2 16 1 64 1 248 1 18 1 45 1 175 1 218 2 347 4 314 3 253 1 220 4 296 1 110 2 336 1 162 2 112 11 199 1 180 11 
182 1 304 1 283 1 204 1 115 1 284 1 57 1 265 2 137 1 239 1 240 1 168 1 38 1 60 2 169 1 270 1 213 1 367 1 12 1 16 1 248 1 44 1 175 1 45 1 347 2 190 1 275 1 20 1 332 1 279 1 220 1 68 1 223 1 295 1 110 1 161 2 111 1 162 1 
304 3 1 1 339 2 204 2 115 2 57 10 265 3 209 1 341 1 168 1 60 20 169 10 213 1 270 2 8 4 12 3 16 1 175 1 347 6 218 8 275 1 178 1 20 1 126 2 220 7 68 1 223 3 128 2 180 7 282 1 182 3 356 1 283 3 235 2 78 2 284 2 33 1 137 3 240 2 323 2 39 1 367 2 88 2 327 1 147 3 370 2 248 3 44 1 45 1 253 3 332 2 333 1 295 2 110 3 161 3 162 3 111 2 112 7 199 4 
182 2 132 1 337 1 304 8 283 2 284 3 57 1 265 1 137 2 268 1 168 1 60 2 169 1 39 1 213 1 270 2 215 1 12 8 171 1 89 1 368 1 16 1 313 2 248 2 44 1 45 1 347 4 46 1 275 2 332 2 99 1 68 1 223 7 353 1 110 2 161 1 111 2 162 2 51 1 
182 1 283 1 339 1 235 1 78 1 57 2 137 1 265 1 187 1 168 1 241 1 60 3 169 1 213 1 8 1 147 1 248 1 175 1 218 1 347 2 253 1 220 1 277 1 68 1 110 1 161 1 162 1 112 1 180 1 
147 1 182 1 248 1 283 1 339 1 218 1 347 2 97 1 220 1 137 1 99 1 60 2 169 2 110 1 162 1 112 1 199 1 180 1 
182 1 248 1 283 1 235 1 218 1 347 2 253 1 57 2 220 1 137 1 99 1 269 1 60 2 110 1 8 1 162 1 112 1 180 1 
182 1 283 1 339 1 235 1 78 1 57 2 137 1 60 4 169 2 8 1 147 1 248 1 347 2 218 2 253 1 220 2 99 1 110 1 162 1 112 2 180 2 199 1 
147 1 182 1 337 1 248 1 283 1 339 1 218 1 347 2 97 1 220 1 137 1 60 2 169 2 110 1 162 1 112 1 199 1 180 1 
182 1 337 1 248 1 283 1 235 1 218 1 347 2 253 1 57 2 220 1 137 1 269 1 60 2 110 1 8 1 162 1 112 1 180 1 
182 1 337 1 283 1 339 1 235 1 78 1 57 2 137 1 60 4 169 2 8 1 147 1 248 1 347 2 218 2 253 1 220 2 110 1 162 1 112 2 180 2 199 1 
182 1 283 1 339 1 235 1 78 1 57 2 137 1 60 4 169 2 8 1 147 1 248 1 347 2 218 2 253 1 220 2 110 1 162 1 112 2 180 2 199 1 
182 1 304 1 283 1 204 1 115 1 284 1 57 1 265 1 137 1 240 1 60 2 169 1 270 1 367 1 12 1 370 1 16 1 248 1 45 1 347 2 275 1 332 1 223 1 295 1 110 1 161 1 111 1 162 1 
182 1 304 1 283 1 204 1 284 1 57 1 265 1 137 1 240 1 60 2 169 1 270 1 367 1 12 1 16 1 248 1 45 1 347 2 275 1 152 1 153 1 332 1 127 1 223 1 110 1 161 1 111 1 162 1 
182 1 283 1 339 1 235 1 78 1 57 2 137 1 60 4 169 2 8 1 147 1 248 1 175 1 347 2 218 2 253 1 220 2 110 1 162 1 112 2 180 2 199 1 
182 1 304 1 283 1 235 1 339 1 115 1 78 1 284 1 57 2 265 1 137 1 240 1 60 4 323 1 169 2 270 1 8 1 215 1 367 1 12 1 147 1 370 1 248 1 218 2 347 2 253 1 220 2 332 1 223 1 295 1 110 1 161 1 111 1 162 1 112 2 199 1 180 2 
182 1 283 1 235 1 339 1 78 1 57 1 137 1 265 1 187 1 168 1 60 3 169 2 213 1 170 1 147 1 248 1 175 1 218 1 347 2 253 1 277 1 220 1 68 1 110 1 161 1 162 1 112 1 199 1 180 1 
339 4 1 1 260 1 57 21 208 1 60 41 169 20 212 1 8 4 344 4 345 1 123 1 18 3 218 8 347 6 274 1 178 1 314 4 124 1 224 1 130 1 282 1 182 3 283 3 235 4 78 4 81 3 33 1 137 3 322 1 361 1 366 1 147 5 327 1 149 1 293 1 253 5 374 1 333 1 110 3 198 1 199 4 299 2 
282 1 182 4 283 4 260 1 1 1 339 4 235 3 78 4 81 3 33 1 57 18 137 4 208 1 322 1 361 1 60 38 169 20 212 1 344 4 8 4 366 1 345 2 327 1 147 5 149 1 123 1 18 3 347 8 218 7 274 1 293 1 178 1 374 1 124 1 314 4 253 4 333 1 110 4 130 1 224 1 198 1 199 3 299 2 
282 1 182 2 283 2 260 1 1 1 339 7 235 7 78 7 81 4 33 1 57 25 137 2 208 2 322 1 361 1 60 52 169 27 212 1 344 4 8 7 366 1 345 1 327 1 147 8 149 1 123 1 18 2 347 4 218 14 274 1 293 1 178 1 124 1 314 4 253 8 333 1 110 2 130 1 224 1 336 2 199 7 299 1 
182 2 283 2 260 2 339 3 235 3 78 3 81 1 57 10 137 2 208 1 322 1 361 1 60 19 169 9 86 1 344 2 8 3 366 1 147 3 18 1 347 4 218 6 274 1 293 1 374 1 314 2 253 3 110 2 199 3 299 1 
182 3 283 3 260 1 339 3 235 2 78 3 81 2 57 12 137 3 322 1 361 1 60 26 169 14 212 1 8 2 344 4 366 1 345 2 147 3 149 1 123 1 18 2 218 4 347 6 274 1 293 2 253 2 314 2 124 1 110 3 130 1 224 1 199 2 299 2 
53 1 165 1 355 1 114 1 217 1 84 1 55 1 354 1 4 1 154 1 
109 1 113 1 
53 1 118 1 222 1 355 1 114 1 217 1 55 1 354 1 315 1 
174 1 348 1 
189 1 238 1 134 1 
229 1 53 1 165 1 271 1 247 1 355 1 328 1 217 1 114 1 55 1 4 1 193 1 84 1 106 1 297 2 24 1 10 1 354 1 
229 1 53 1 165 1 271 1 247 1 355 1 328 1 217 1 114 1 55 1 4 1 193 1 84 1 106 1 297 2 24 1 10 1 354 1 
229 1 53 1 165 1 271 1 247 1 355 1 328 1 217 1 114 1 55 1 4 1 193 1 84 1 106 1 297 2 24 1 10 1 354 1 
189 1 174 1 348 1 
189 1 174 1 348 1 
238 1 134 1 
189 1 238 1 134 1 
210 1 93 1 
53 1 355 1 114 1 261 1 204 1 55 1 306 1 265 2 210 1 168 2 213 2 10 1 11 1 271 1 217 1 93 1 294 1 193 1 68 2 297 1 377 1 109 1 161 2 71 1 24 1 354 1 113 1 
182 1 304 2 283 1 284 1 321 1 57 1 265 2 137 1 60 2 169 1 270 1 12 2 171 1 15 1 368 1 16 1 313 2 248 1 175 1 45 1 347 2 332 1 68 2 223 2 22 1 256 1 110 1 161 2 111 1 162 1 227 1 
231 1 54 1 304 2 206 1 177 1 308 1 207 1 332 1 35 1 266 1 223 2 102 1 159 1 39 1 111 1 215 1 258 2 12 2 259 1 
183 1 231 1 304 1 206 1 177 1 308 1 207 1 332 1 35 1 266 1 223 1 102 1 159 1 39 1 111 1 258 2 12 1 
132 1 54 1 304 1 46 1 284 1 275 1 332 1 266 1 223 1 36 1 139 1 270 1 111 1 12 1 
231 1 54 1 304 1 206 1 177 1 308 1 207 1 332 1 35 1 266 1 223 1 102 1 159 1 39 1 111 1 258 2 12 1 259 1 
23 1 
229 1 228 1 75 1 334 1 163 1 96 1 58 1 
229 2 75 1 117 1 290 1 188 1 364 1 119 1 365 1 10 1 96 1 157 1 319 1 108 1 376 1 24 1 163 1 26 1 
167 2 304 3 339 2 262 1 307 2 58 1 116 1 117 5 59 2 270 3 119 4 214 1 61 2 215 1 10 5 12 3 120 2 346 2 275 1 221 1 280 2 351 1 223 3 179 1 128 2 319 3 226 2 24 5 228 1 229 8 75 2 235 2 78 2 284 10 240 3 188 4 324 1 141 2 364 6 365 4 147 2 91 2 371 2 48 2 253 2 155 6 96 8 156 6 332 3 157 4 105 3 108 12 111 4 163 9 
229 5 75 2 339 2 235 2 262 1 78 2 81 1 307 1 83 1 117 1 188 2 212 1 364 3 119 2 61 1 10 1 365 2 147 2 149 1 123 1 18 1 314 1 124 1 253 2 155 5 96 5 156 5 280 2 157 2 319 1 108 6 224 1 24 1 163 8 301 1 
1 1 340 1 265 1 187 1 188 1 168 1 310 1 213 1 119 1 61 1 365 1 10 1 42 1 327 1 147 2 369 1 312 1 178 1 94 1 253 1 96 2 280 2 68 1 157 1 161 1 24 1 163 2 378 1 
228 1 229 1 75 1 58 1 96 1 157 1 188 1 119 1 365 1 163 1 
147 2 229 5 339 2 235 2 78 2 253 2 96 5 155 5 156 5 280 2 128 1 108 10 364 5 61 1 163 5 
229 1 117 1 75 1 319 1 10 1 24 1 
132 1 304 4 262 2 284 1 237 1 307 2 82 1 117 4 188 2 343 1 270 1 119 1 214 2 365 2 10 3 14 1 12 4 148 1 46 1 275 2 96 2 332 1 351 1 223 4 157 2 319 2 111 1 24 3 163 2 
182 1 283 1 304 1 204 1 115 1 284 1 340 1 57 1 137 1 265 3 187 2 360 1 168 2 240 1 60 1 213 2 270 1 12 1 367 1 16 1 370 1 248 1 347 2 275 1 332 1 68 2 223 1 295 1 110 1 161 3 111 1 162 1 
282 1 229 4 75 2 262 1 307 1 155 2 96 2 156 2 157 1 188 1 364 2 108 4 119 1 365 1 163 1 
276 1 53 1 114 1 
276 1 53 1 114 1 
53 1 232 1 114 1 84 1 93 1 
276 1 53 1 114 1 
53 1 173 1 114 1 
53 1 173 1 114 1 
53 1 173 1 114 1 
53 1 114 1 
355 1 217 1 
282 1 182 1 283 1 1 1 81 1 57 4 33 1 137 1 361 1 60 8 169 4 212 1 8 2 147 1 327 1 18 1 347 2 218 2 178 1 253 1 314 1 333 1 110 1 
282 1 182 2 283 2 1 1 339 1 78 1 81 1 33 1 57 5 287 1 137 2 208 1 361 1 60 11 169 6 212 1 8 2 327 1 147 2 18 1 347 4 218 3 178 1 253 1 314 2 333 1 110 2 199 1 
282 1 182 3 283 3 1 1 339 2 235 2 78 2 81 1 33 1 287 1 57 10 137 3 361 1 60 19 169 9 212 1 8 3 345 1 327 1 147 3 149 1 123 1 18 1 347 6 218 4 178 1 314 1 124 1 253 3 333 1 110 3 224 1 199 1 
282 1 182 3 283 3 1 1 339 2 235 1 78 2 81 1 33 1 287 1 57 7 137 3 361 1 60 17 169 10 212 1 8 3 345 1 327 1 147 3 149 1 123 1 18 1 347 6 218 5 178 1 314 1 124 1 253 2 333 1 110 3 224 1 199 2 
282 1 182 1 283 1 1 1 81 1 57 4 33 1 137 1 361 1 60 8 169 4 212 1 8 2 147 1 327 1 18 1 347 2 218 2 178 1 253 1 314 1 333 1 110 1 
182 1 283 1 339 2 235 2 78 2 81 1 57 6 137 1 361 1 60 12 169 6 212 1 8 1 147 2 149 1 123 1 18 1 347 2 218 2 314 1 124 1 253 2 110 1 224 1 199 1 
282 1 182 4 283 4 1 1 339 2 235 1 78 2 81 1 33 1 57 8 287 1 137 4 361 1 60 18 169 10 212 1 8 3 345 2 327 1 147 3 149 1 123 1 18 1 347 8 218 5 178 1 314 1 124 1 253 2 333 1 110 4 224 1 199 2 
182 4 283 4 339 3 235 2 78 3 81 1 57 7 137 4 361 1 60 16 169 9 212 1 8 3 345 2 147 3 149 1 123 1 18 1 347 8 218 6 314 1 374 1 124 1 253 2 110 4 224 1 199 3 
327 1 147 1 1 3 218 6 178 3 253 1 57 4 33 1 333 2 60 7 169 3 8 3 199 3 
282 1 182 4 283 4 1 1 339 2 235 1 78 2 81 1 33 1 57 8 137 4 361 1 60 18 169 10 212 1 8 3 345 2 327 1 147 3 149 1 123 1 18 1 347 8 218 4 178 1 314 1 374 1 124 1 253 2 333 1 110 4 224 1 199 1 
282 1 147 1 327 1 182 2 283 2 1 1 218 3 347 4 178 1 253 1 57 4 33 1 137 2 333 1 60 8 169 4 110 2 8 2 199 1 345 1 
282 1 327 1 147 1 1 1 218 2 178 1 253 1 57 3 33 1 334 1 333 1 60 6 169 3 8 2 
147 1 182 1 283 1 235 1 339 1 218 2 347 2 78 1 253 1 57 2 287 1 137 1 60 4 169 2 110 1 8 1 199 1 
147 1 235 1 18 1 339 1 218 2 78 1 81 1 253 1 314 2 57 4 208 1 60 7 169 3 8 1 199 1 
282 1 182 2 283 2 1 2 339 2 235 2 78 2 81 2 33 1 57 12 137 2 208 1 267 1 60 23 169 11 8 5 345 2 327 1 147 3 64 1 218 9 347 4 178 2 314 2 253 3 333 1 110 2 336 1 199 4 
60 1 314 1 57 1 
60 1 169 1 81 1 
147 1 182 1 283 1 339 1 235 1 347 2 218 3 78 1 253 1 287 1 57 3 137 1 128 1 60 6 169 3 110 1 8 2 199 1 
182 1 283 1 339 2 235 2 78 2 81 1 57 6 137 1 361 1 60 12 169 6 212 1 8 1 147 2 149 1 123 1 18 1 347 2 218 2 314 1 124 1 253 2 110 1 224 1 199 1 
327 1 147 1 1 1 218 2 178 1 253 1 57 3 60 6 169 3 8 1 199 1 
182 1 283 1 1 1 218 2 347 2 178 1 57 2 33 1 137 1 267 1 333 1 60 3 169 1 110 1 8 1 199 1 345 1 
327 1 147 2 182 1 369 1 283 1 1 2 347 2 218 5 178 2 253 2 57 5 137 1 361 1 60 10 169 5 110 1 8 3 199 2 
147 1 182 1 283 1 339 1 347 2 218 1 137 1 361 1 60 2 169 2 110 1 199 1 
147 1 182 1 283 1 235 1 339 1 218 2 347 2 78 1 253 1 57 2 137 1 361 1 60 4 169 2 110 1 8 1 199 1 
182 3 283 3 1 1 347 6 218 2 178 1 374 1 57 2 137 3 267 1 361 1 60 3 169 1 110 3 8 1 199 1 345 1 
147 1 182 3 283 3 339 1 18 1 347 6 78 1 81 2 374 1 314 1 287 1 57 1 191 1 137 3 361 1 60 5 169 4 110 3 311 1 
359 1 265 1 68 1 204 1 161 1 47 1 74 1 
272 1 204 1 47 1 21 1 359 1 265 1 68 1 103 1 161 1 73 1 74 1 300 1 
332 1 132 1 334 1 223 1 304 1 46 1 284 1 270 1 275 1 111 1 12 1 
44 1 304 1 204 1 115 1 284 1 275 1 265 2 332 1 68 1 223 1 240 1 168 1 270 1 213 1 161 2 111 1 367 1 12 1 
304 1 28 1 202 1 204 1 115 1 284 3 265 2 168 2 240 2 141 1 213 1 270 2 214 1 12 1 367 1 312 1 44 1 371 1 332 1 68 2 223 1 161 2 111 1 
200 1 312 1 44 1 304 2 202 1 28 1 204 1 371 1 284 3 152 1 265 2 332 1 68 2 223 2 240 2 168 2 141 1 270 2 213 1 161 2 111 1 214 1 367 1 12 2 
200 1 229 1 75 1 304 3 284 4 80 1 117 1 240 1 141 1 270 1 214 1 10 2 12 3 371 1 275 1 48 1 332 1 278 1 223 3 105 1 111 1 226 1 24 2 
200 1 229 1 91 1 75 1 304 3 371 1 275 1 284 4 48 1 117 1 332 1 223 3 240 1 105 1 141 1 270 1 111 1 214 1 24 2 10 2 226 1 12 3 
332 1 223 1 304 1 111 1 12 1 89 1 
368 1 313 1 304 7 275 2 284 3 332 2 268 1 223 6 37 1 240 1 353 1 140 1 324 1 39 1 270 2 131 1 111 3 215 1 51 1 12 7 89 1 
304 1 1 1 115 1 204 2 57 3 265 2 168 1 60 6 169 3 213 1 270 1 8 2 215 1 12 1 175 1 347 4 218 2 178 1 126 1 220 1 68 1 223 1 180 1 282 1 182 2 283 2 284 1 33 1 137 2 240 1 323 1 367 1 327 1 147 1 370 1 248 2 44 1 253 1 332 1 333 1 295 1 256 1 110 2 161 2 162 2 111 1 112 1 
229 1 228 1 75 1 304 1 167 1 284 2 58 1 117 2 188 2 119 2 365 2 10 3 11 1 12 1 120 1 91 1 346 1 275 1 48 1 96 1 223 1 351 1 157 2 105 1 319 1 24 3 226 1 163 1 
304 2 284 2 332 1 223 2 179 1 240 1 324 1 270 1 111 2 215 1 226 1 12 2 89 1 
200 1 332 1 132 1 223 4 304 4 46 1 284 1 270 1 275 1 79 1 111 1 215 1 12 4 
304 2 284 1 332 1 223 2 341 1 240 1 140 1 363 1 142 1 270 1 131 1 214 1 111 2 12 2 
332 1 231 1 223 1 304 1 159 1 275 1 111 1 258 1 12 1 308 1 
368 1 304 2 284 1 332 1 223 2 22 1 39 1 270 1 111 1 215 1 12 2 
368 1 132 1 304 5 46 1 275 1 284 3 79 1 332 2 268 1 223 4 353 1 270 2 214 1 111 2 215 1 12 5 
368 1 132 1 304 5 46 1 275 1 284 3 79 1 332 2 316 1 268 1 223 4 270 2 214 1 111 2 215 1 12 5 
44 1 304 1 204 1 284 1 275 1 152 1 265 2 332 1 68 1 223 1 240 1 168 1 270 1 213 1 161 2 111 1 367 1 12 1 
304 1 284 1 332 1 223 1 37 1 240 1 140 1 324 1 270 1 131 1 214 1 111 2 12 1 
34 1 30 1 204 1 143 1 146 1 
229 1 312 1 75 1 150 1 202 1 28 1 30 1 204 1 136 1 48 1 5 1 34 2 281 1 242 1 143 2 24 2 10 2 11 1 146 2 
265 1 68 1 30 1 161 1 321 1 143 1 227 1 15 1 146 1 
5 1 30 1 242 1 
101 1 334 1 85 1 245 1 
246 1 63 1 350 1 101 1 85 1 249 1 245 1 
326 1 246 1 181 1 
63 1 246 3 305 1 249 3 2 1 192 2 254 1 350 1 101 1 85 1 244 1 245 1 
121 1 246 2 63 1 350 1 101 1 85 1 249 2 25 1 245 1 
63 1 246 1 305 1 249 1 250 1 177 1 251 1 350 1 85 1 159 1 258 1 
246 1 63 1 350 1 85 1 249 1 305 1 245 1 
246 1 63 1 350 1 101 1 249 1 305 1 245 2 
246 2 63 2 288 1 350 2 289 1 85 1 249 2 305 1 257 1 245 1 
186 1 246 3 63 1 350 1 101 1 85 2 329 1 249 3 305 1 31 1 251 1 25 2 245 1 
63 1 246 2 231 1 305 1 249 2 285 1 177 1 350 1 35 1 101 1 85 1 159 1 25 1 258 2 245 1 
121 1 246 4 63 2 350 2 101 1 85 2 329 1 249 4 305 1 251 1 25 2 373 1 245 1 
246 1 63 1 350 1 101 1 85 1 249 1 305 1 245 1 
246 4 63 1 329 1 249 4 2 1 176 1 251 1 192 1 254 1 350 1 101 2 85 3 25 2 245 2 
63 1 246 2 17 1 305 1 249 2 98 1 350 1 101 1 85 1 7 1 25 1 245 1 
63 1 246 3 27 1 305 1 249 3 2 2 192 2 254 1 350 1 101 1 85 1 245 1 
85 2 342 1 372 1 325 2 
246 1 63 1 350 1 249 1 305 1 40 1 
246 2 63 1 350 1 101 1 85 1 249 2 305 1 31 1 25 1 245 1 
338 1 
246 1 63 1 350 1 101 1 85 1 249 1 305 1 245 1 
246 3 63 1 350 1 101 1 85 1 249 3 305 1 31 1 25 1 245 1 192 1 
85 1 329 1 176 1 251 1 
85 1 245 1 

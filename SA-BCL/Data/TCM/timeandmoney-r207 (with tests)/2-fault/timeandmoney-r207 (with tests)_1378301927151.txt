#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 360 77 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 360 77 121 218 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 55 312 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
189 1 250 2 365 1 43 1 222 1 281 2 149 1 357 1 349 3 111 3 327 2 317 1 8 1 
26 2 189 4 281 2 262 1 149 1 357 1 36 2 212 1 246 1 80 1 317 1 8 6 132 1 250 5 365 1 42 1 43 2 136 1 223 2 222 3 369 1 138 1 349 9 111 9 327 2 114 1 301 2 164 1 
26 2 189 4 281 2 262 1 149 1 357 1 36 2 212 1 246 1 80 1 317 1 8 6 132 1 250 5 365 1 42 1 43 2 136 1 223 2 222 3 369 1 138 1 349 9 111 9 327 2 114 1 301 2 164 1 
26 2 189 5 281 2 262 1 149 1 357 1 36 2 212 1 246 1 80 1 317 1 8 7 132 1 250 6 365 1 42 1 43 2 136 1 223 2 222 4 369 1 138 1 349 10 111 10 327 2 114 1 301 2 164 1 
26 2 189 3 281 2 262 1 149 1 357 1 36 1 212 1 246 1 80 1 317 1 8 4 132 1 250 4 365 1 42 1 43 2 136 1 223 2 222 2 138 1 349 7 111 7 327 2 114 1 301 2 164 1 
132 1 189 2 26 1 250 3 365 1 222 1 223 1 281 1 369 1 149 1 357 1 36 2 349 4 111 4 327 1 301 1 80 1 8 3 
250 1 365 1 43 1 136 1 223 1 262 1 281 1 149 1 357 1 349 2 111 2 276 1 327 1 336 1 101 1 301 1 
189 4 26 1 2 1 281 2 149 1 357 1 36 2 97 1 246 1 80 1 317 1 8 7 132 1 250 5 365 1 42 1 43 1 222 3 223 1 369 1 349 9 111 9 327 2 301 1 
189 4 26 1 2 1 281 2 149 1 357 1 36 2 97 1 246 1 80 1 317 1 8 7 132 1 250 5 365 1 42 1 43 1 222 3 223 1 369 1 349 9 111 9 327 2 301 1 
203 1 191 1 84 1 134 1 198 1 206 1 253 1 34 1 356 1 359 1 300 1 59 1 291 1 103 1 
271 1 
84 1 243 1 198 2 305 1 68 1 34 2 271 1 224 1 
84 2 12 2 198 5 305 2 85 1 171 1 34 5 271 1 200 1 94 1 332 1 74 2 19 1 275 1 78 1 243 1 127 2 154 1 68 1 
243 1 271 1 370 1 
180 2 271 1 208 1 
203 2 359 2 113 1 300 1 253 2 59 2 356 2 103 2 
203 2 167 2 144 1 193 1 172 1 146 1 35 1 356 3 284 1 358 1 359 2 151 1 287 1 334 1 315 1 155 1 59 2 103 2 157 2 11 1 196 1 364 2 292 1 253 3 107 1 346 1 272 1 348 2 182 1 373 1 139 2 65 1 113 1 300 1 23 1 302 1 24 1 
203 1 359 1 191 1 134 1 206 1 300 1 253 1 59 1 356 1 103 1 
329 1 191 1 32 1 198 1 253 1 4 1 34 1 271 1 356 1 359 1 243 1 298 1 299 1 186 1 
203 1 329 1 191 1 198 2 253 1 34 2 271 1 356 1 359 1 243 1 298 1 299 1 186 1 59 1 103 1 
286 1 84 1 198 1 305 1 34 1 
84 1 243 1 198 2 305 1 68 1 34 2 271 1 148 1 
198 1 305 1 34 1 
203 1 253 2 353 1 356 2 359 2 113 2 143 1 59 1 103 1 
38 1 187 1 119 1 
167 1 144 1 253 1 306 1 356 1 346 1 182 1 284 1 139 1 151 1 287 1 113 1 315 1 302 1 157 1 11 1 
113 1 370 1 
82 1 167 1 144 1 253 2 323 1 356 2 346 1 284 1 182 1 359 1 151 1 139 1 287 1 315 1 187 1 59 1 302 1 11 1 103 1 157 1 
82 2 203 1 253 5 4 1 353 1 323 1 356 5 95 1 359 5 266 1 110 1 113 1 59 4 103 4 
359 2 191 1 29 1 134 1 253 2 59 2 356 2 103 2 
203 1 82 1 359 3 113 1 253 3 59 3 356 3 103 3 
359 1 191 1 134 1 253 1 59 1 356 1 103 1 
203 1 359 1 191 1 253 1 353 1 143 1 59 1 356 1 103 1 
203 2 329 1 167 1 191 1 144 1 169 1 193 1 172 1 353 1 35 1 34 1 356 4 6 1 284 1 359 3 151 1 287 1 334 1 315 1 155 1 59 3 11 1 103 3 157 1 82 1 196 1 364 1 292 1 198 1 253 4 107 1 323 1 346 1 348 2 182 1 373 1 139 1 65 1 298 1 113 1 299 1 300 1 186 1 302 1 
82 1 359 2 110 1 113 1 253 2 4 1 59 1 356 2 103 1 
203 1 82 2 329 1 191 1 198 1 253 3 353 1 34 1 323 1 271 1 356 3 6 1 359 3 298 1 299 1 186 1 59 3 259 1 103 3 
82 1 203 1 253 2 353 1 356 2 359 2 59 2 187 1 119 1 103 2 
167 1 144 1 253 1 356 1 346 1 182 1 284 1 139 1 151 1 287 1 113 1 315 1 302 1 157 1 11 1 
167 1 144 1 253 1 207 1 356 1 346 1 284 1 37 1 139 1 151 1 287 1 113 1 315 1 302 1 157 1 
25 1 172 2 146 1 91 1 264 1 35 1 38 1 334 1 211 1 360 1 175 1 130 1 248 1 40 1 196 1 364 3 219 1 107 1 294 1 348 2 373 1 65 1 187 1 119 1 
359 1 191 1 29 1 299 1 253 1 59 1 356 1 103 1 
98 1 39 1 117 1 
174 1 133 1 153 1 98 2 3 1 117 2 
98 1 117 1 
98 1 117 1 
133 1 153 1 
133 1 153 1 
133 1 153 1 
98 1 45 1 117 1 
98 1 45 1 117 1 
98 1 45 1 117 1 
98 1 122 1 117 1 
98 1 122 1 117 1 
98 1 122 1 117 1 
232 1 237 1 34 1 173 1 356 2 209 1 359 2 267 1 308 1 98 1 215 1 362 1 39 1 59 2 268 1 103 2 198 1 253 2 270 1 321 1 161 1 113 1 20 1 117 1 
232 3 158 1 197 1 319 1 198 2 270 2 255 1 54 1 34 2 271 1 173 2 174 1 308 1 98 2 47 1 215 2 362 2 22 2 117 2 
26 1 274 1 276 1 181 2 223 2 
26 1 223 1 301 1 
276 1 223 1 301 1 
26 2 274 1 276 1 181 1 223 3 342 1 
26 1 274 1 276 1 181 1 223 2 368 1 
303 1 305 1 90 1 237 1 91 1 34 5 147 1 267 1 74 1 77 1 360 1 127 1 243 1 78 3 175 1 100 1 130 1 81 1 180 1 12 1 84 4 198 5 254 1 200 1 271 1 19 1 351 1 326 2 48 1 20 1 68 1 
27 1 303 3 305 6 90 3 91 3 34 9 147 1 94 1 286 5 74 2 56 5 77 3 360 3 243 1 127 2 78 8 175 3 216 1 130 3 180 3 84 7 12 2 198 9 106 1 61 1 254 2 108 1 200 3 271 2 273 1 19 1 20 4 48 2 68 1 
303 1 90 1 91 1 34 3 208 1 94 1 74 1 77 1 243 1 127 1 78 3 360 1 175 1 130 1 81 1 180 2 84 2 12 1 198 3 254 1 271 2 200 1 351 1 326 1 48 1 20 1 
27 1 303 2 90 2 91 2 34 4 208 1 94 1 74 1 77 2 243 1 127 1 78 5 360 2 175 2 130 2 216 1 81 1 180 3 12 1 84 3 198 4 254 1 108 1 271 2 200 2 351 1 326 2 48 1 20 2 
49 1 
302 1 296 1 370 1 
125 1 302 1 
151 1 287 1 302 1 
190 1 302 1 
151 1 302 1 
151 1 287 1 311 1 129 1 302 3 296 2 
28 1 364 4 170 1 52 1 330 1 192 2 172 1 91 1 146 3 263 1 331 1 55 1 201 1 374 1 185 1 40 3 248 2 
28 2 170 1 330 2 192 3 172 13 146 12 91 4 263 2 331 2 35 1 55 1 195 4 93 1 77 3 360 3 175 3 338 3 130 3 248 4 40 6 131 1 364 25 320 1 86 1 107 1 348 2 201 1 373 1 374 2 65 1 185 1 115 1 230 1 118 1 
28 1 170 1 330 1 192 2 172 2 91 1 146 4 35 2 263 1 331 1 55 1 75 1 248 3 40 4 131 1 364 6 221 1 107 2 348 4 373 2 201 1 374 1 65 2 
28 1 364 4 170 1 330 1 192 2 172 1 91 1 146 3 263 1 331 1 55 1 201 1 374 1 185 1 40 3 248 2 
28 1 364 4 170 1 330 1 192 2 172 1 91 1 146 3 263 1 331 1 55 1 201 1 374 1 185 1 40 3 248 2 
167 1 144 1 269 2 43 2 60 2 366 1 160 1 281 1 283 1 346 1 284 1 92 1 210 1 240 2 349 1 151 1 139 1 111 1 327 1 67 1 337 1 302 1 157 1 
26 1 167 1 51 1 144 1 239 1 281 1 284 1 240 1 244 1 57 1 342 1 157 1 249 1 269 1 365 1 105 1 60 1 43 1 223 2 349 1 139 1 111 1 276 1 327 1 87 1 301 1 
26 1 167 1 51 1 144 1 239 1 281 1 149 1 357 1 284 1 240 1 57 1 314 1 8 1 342 1 157 1 249 1 250 1 269 1 365 1 105 1 60 1 43 1 223 2 349 2 139 1 111 2 276 1 327 1 87 1 301 1 
26 1 167 1 144 1 239 1 281 1 149 1 357 1 284 1 240 1 244 1 57 1 8 2 342 1 10 1 157 1 249 1 250 1 269 1 105 1 60 1 43 1 223 2 349 3 139 1 111 3 276 1 327 1 67 1 87 1 301 1 
167 1 26 1 144 1 239 1 149 1 357 1 284 1 240 1 244 1 57 1 8 2 342 1 10 1 157 1 249 1 250 1 269 1 43 1 60 1 223 2 349 2 139 1 111 2 276 1 301 1 
322 1 
188 1 329 1 191 1 144 1 279 1 280 1 4 1 283 1 284 1 151 1 243 1 9 2 247 2 157 2 12 1 198 5 251 4 253 1 200 2 346 2 256 2 350 1 19 1 298 1 299 1 68 3 302 1 166 2 168 1 167 2 204 1 32 1 305 6 123 2 33 1 34 5 208 2 356 1 210 1 359 1 265 1 74 1 309 1 78 2 127 1 79 2 180 2 220 1 271 2 139 2 184 1 277 2 48 1 186 1 377 1 
329 1 191 1 251 2 198 3 32 1 305 2 220 1 253 1 280 1 33 1 4 1 34 3 224 1 356 1 359 1 184 1 298 1 299 1 186 1 68 1 377 1 247 1 
329 1 191 1 251 3 198 3 32 1 305 1 220 1 253 1 280 1 33 1 4 1 34 3 224 1 271 1 356 1 359 1 243 1 184 1 298 1 299 1 186 1 68 1 9 1 377 1 
329 1 191 1 32 1 305 2 280 1 4 1 33 1 123 1 34 3 356 1 359 1 243 1 9 1 247 1 198 3 251 3 253 1 220 1 224 1 271 1 298 1 184 1 299 1 186 1 68 1 377 1 
329 1 191 1 280 1 4 1 243 5 152 1 9 4 247 4 12 1 251 6 198 5 253 1 200 1 256 2 19 1 350 1 298 1 299 1 68 3 166 2 32 1 260 1 305 7 123 4 33 1 34 5 356 1 208 2 359 1 265 1 74 1 127 1 78 1 79 2 220 1 224 1 271 5 46 1 184 1 186 1 277 2 228 1 377 1 231 1 
329 1 188 1 191 1 280 1 4 1 243 1 9 2 247 2 12 1 251 4 198 4 253 1 200 1 256 2 19 1 350 1 298 1 299 1 68 2 166 2 32 1 305 4 33 1 123 2 34 4 356 1 208 2 265 1 359 1 74 1 127 1 78 1 79 2 180 2 220 1 271 2 184 1 186 1 277 2 377 1 
329 1 191 1 32 1 305 4 280 1 123 2 4 1 33 1 34 4 208 2 356 1 265 1 359 1 74 1 243 1 152 1 78 1 127 1 79 2 9 2 247 2 12 1 198 4 251 4 253 1 220 1 271 1 200 1 256 2 46 1 350 1 19 1 298 1 184 1 299 1 277 2 186 1 68 2 377 1 231 1 166 2 
329 1 191 1 32 1 305 4 280 1 123 2 4 1 33 1 34 4 208 2 356 1 265 1 359 1 74 1 243 1 152 1 78 1 127 1 79 2 9 2 247 2 12 1 198 4 251 4 253 1 220 1 271 1 200 1 256 2 46 1 350 1 19 1 298 1 184 1 299 1 277 2 186 1 68 2 377 1 231 1 166 2 
329 1 191 1 32 1 305 4 280 1 123 2 4 1 33 1 34 4 356 1 359 1 74 1 243 1 152 1 78 1 127 1 79 2 335 1 339 1 9 2 290 1 247 2 179 2 180 2 12 1 198 4 251 4 253 1 220 1 271 1 200 1 350 1 19 1 298 1 184 1 299 1 277 2 186 1 68 2 377 1 50 2 
329 1 191 1 32 1 305 5 280 1 4 1 33 1 123 3 34 4 208 2 356 1 265 1 359 1 74 1 243 1 152 1 78 1 127 1 79 2 9 3 247 3 12 1 198 4 251 5 253 1 220 1 271 1 200 1 256 2 46 1 350 1 19 1 298 1 184 1 299 1 277 2 186 1 228 1 68 2 377 1 231 1 166 2 
329 1 191 1 32 1 305 5 280 1 4 1 33 1 123 3 34 4 208 2 356 1 265 1 359 1 74 1 243 1 152 1 78 1 127 1 79 2 9 3 247 3 12 1 198 4 251 5 253 1 220 1 271 1 200 1 256 2 46 1 350 1 19 1 298 1 184 1 299 1 277 2 186 1 228 1 68 2 377 1 231 1 166 2 
188 1 329 1 191 1 32 1 305 4 280 1 123 2 4 1 33 1 34 4 356 1 359 1 74 1 243 1 78 1 127 1 79 2 339 1 9 2 247 2 179 2 180 2 12 1 198 4 251 4 220 1 253 1 271 1 200 1 350 1 19 1 184 1 298 1 299 1 277 2 186 1 68 2 377 1 50 2 
144 4 146 1 283 1 284 3 151 3 287 1 334 2 244 1 155 1 59 1 157 6 103 1 343 1 196 2 252 1 253 1 107 2 346 2 348 4 64 1 65 2 202 1 23 1 302 4 116 1 24 1 167 7 71 1 172 1 35 2 356 1 210 1 359 1 76 1 310 1 211 1 128 1 361 1 314 1 82 1 364 2 44 1 373 2 139 7 
203 1 196 1 364 2 253 1 146 2 91 1 353 1 107 1 35 1 356 1 63 1 348 2 359 1 373 1 77 1 334 1 65 1 360 1 99 1 59 1 103 1 
196 1 364 3 28 1 170 1 192 1 172 1 146 2 91 1 107 1 35 1 331 1 370 1 55 1 348 2 38 1 373 1 201 1 211 1 334 1 65 1 113 1 187 1 119 1 40 2 248 2 
172 8 146 6 91 2 35 2 195 3 38 10 334 1 77 2 288 1 242 1 360 2 99 1 289 1 175 2 338 3 130 2 155 1 40 1 248 1 196 2 364 14 107 2 348 4 373 2 65 2 113 1 115 1 142 1 187 10 230 1 23 1 119 2 
167 1 144 1 235 1 172 1 306 1 146 1 35 1 356 2 284 1 359 1 151 1 287 1 334 1 99 1 58 1 315 1 59 1 155 1 11 1 157 1 103 1 82 1 196 1 364 2 253 2 107 1 323 1 346 1 182 1 348 2 139 1 373 1 65 1 113 1 141 1 302 1 23 1 119 1 
144 2 192 1 145 2 91 3 146 7 331 1 55 1 284 2 151 2 287 2 334 3 241 2 99 1 155 1 59 1 156 1 157 1 103 1 11 2 248 4 196 3 292 2 253 3 107 3 346 1 348 6 201 1 257 2 65 3 113 1 23 1 302 2 119 5 167 1 28 1 170 1 172 8 35 3 355 1 356 3 73 2 359 1 38 5 77 2 360 2 175 2 315 2 130 2 40 4 82 1 364 15 323 1 182 2 139 1 373 3 187 5 
196 1 364 1 91 1 146 1 107 1 294 1 35 1 348 2 373 1 211 1 334 1 65 1 360 1 
196 1 364 2 219 1 172 2 107 1 35 1 348 2 38 1 373 1 211 1 334 1 65 1 175 1 130 1 187 1 119 1 40 1 248 1 
172 2 146 1 91 1 35 1 38 1 77 1 334 1 211 1 360 1 175 1 130 1 248 1 40 1 196 1 364 3 107 1 348 2 373 1 65 1 187 1 119 1 
196 1 364 1 91 1 146 1 107 1 294 1 35 1 348 2 373 1 310 1 334 1 65 1 360 1 
196 1 364 2 219 1 172 2 107 1 35 1 348 2 38 1 373 1 310 1 334 1 65 1 175 1 130 1 187 1 119 1 40 1 248 1 
172 2 146 1 91 1 35 1 38 1 77 1 334 1 310 1 360 1 175 1 130 1 248 1 40 1 196 1 364 3 107 1 348 2 373 1 65 1 187 1 119 1 
172 2 146 1 91 1 35 1 38 1 77 1 334 1 360 1 175 1 130 1 248 1 40 1 196 1 364 3 107 1 348 2 373 1 65 1 187 1 119 1 
167 1 144 1 172 1 146 1 35 1 356 1 284 1 151 1 287 1 334 1 315 1 155 1 11 1 157 1 196 1 364 2 292 1 253 1 107 1 346 1 182 1 348 2 139 1 373 1 65 1 113 1 23 1 302 1 
167 1 144 1 1 1 172 1 146 1 207 1 35 1 356 1 284 1 37 1 151 1 287 1 334 1 315 1 155 1 157 1 196 1 364 2 253 1 107 1 346 1 348 2 139 1 373 1 65 1 113 1 23 1 302 1 
172 2 146 1 91 1 35 1 38 1 77 1 334 1 360 1 99 1 175 1 130 1 248 1 40 1 196 1 364 3 107 1 348 2 373 1 65 1 187 1 119 1 
167 1 144 1 172 2 146 1 91 1 35 1 356 1 284 1 73 1 38 1 151 1 287 1 334 1 77 1 360 1 175 1 314 1 130 1 315 1 40 1 248 1 11 1 157 1 196 1 364 3 292 1 253 1 107 1 182 1 348 2 139 1 373 1 65 1 187 1 302 1 119 1 
203 1 172 1 353 1 91 1 146 1 35 1 356 1 359 1 334 1 77 1 360 1 99 1 175 1 130 1 59 1 103 1 196 1 178 1 364 2 253 1 107 1 348 2 373 1 65 1 
31 1 304 1 172 7 146 4 91 2 5 1 35 2 307 1 195 2 75 1 77 2 214 1 360 2 175 2 338 1 130 2 316 1 248 2 40 2 364 11 345 1 107 2 348 4 373 2 65 2 115 1 230 1 328 1 
234 1 121 1 31 1 89 1 172 14 146 10 91 3 5 2 35 2 307 4 195 2 75 1 96 1 77 3 360 3 175 3 130 3 338 2 316 2 131 1 40 1 248 1 218 1 364 24 345 1 107 2 372 1 348 4 373 2 65 2 227 1 230 2 328 1 
31 1 304 1 89 1 172 8 146 5 91 2 5 1 35 2 307 2 195 2 75 1 77 2 360 2 175 2 338 1 130 2 316 1 248 1 40 1 364 13 345 1 107 2 348 4 373 2 65 2 115 1 230 1 328 1 
31 1 304 1 89 1 172 8 146 5 91 2 5 1 35 2 307 2 195 2 75 1 77 2 360 2 175 2 338 1 130 2 316 1 248 1 40 1 364 13 345 1 107 2 348 4 373 2 65 2 115 1 230 1 328 1 
28 1 234 1 170 1 121 1 31 1 89 1 192 1 172 22 146 17 91 8 331 1 5 1 35 1 55 1 307 3 195 4 75 1 96 1 77 7 242 2 360 7 175 7 338 4 130 7 316 1 248 6 40 6 218 1 364 39 345 1 107 1 372 1 348 2 201 1 373 1 65 1 227 1 115 2 230 2 328 1 
174 1 225 1 98 1 47 1 215 1 362 1 270 1 255 1 173 1 117 1 
39 1 209 1 
98 1 137 1 215 1 362 1 270 1 258 1 173 1 117 1 285 1 
126 1 45 1 
122 1 162 1 3 1 
232 2 158 1 319 1 198 1 270 1 255 1 54 1 34 1 271 1 173 1 174 1 308 1 98 1 47 1 215 1 362 1 22 1 117 1 
232 2 158 1 319 1 198 1 270 1 255 1 54 1 34 1 271 1 173 1 174 1 308 1 98 1 47 1 215 1 362 1 22 1 117 1 
232 2 158 1 319 1 198 1 270 1 255 1 54 1 34 1 271 1 173 1 174 1 308 1 98 1 47 1 215 1 362 1 22 1 117 1 
126 1 3 1 45 1 
126 1 3 1 45 1 
122 1 162 1 
122 1 162 1 3 1 
161 1 268 1 
232 1 237 1 54 1 34 1 356 2 173 1 209 1 359 2 267 1 98 1 215 1 362 1 39 1 59 2 268 1 103 2 84 1 198 1 367 1 253 2 270 1 321 1 161 1 113 1 20 1 22 1 117 1 
167 2 144 1 172 1 146 1 35 1 356 2 284 1 359 2 151 1 334 1 213 1 99 1 155 1 157 2 196 1 318 1 364 2 252 1 44 1 253 2 107 1 371 1 348 2 139 2 373 1 65 1 21 1 302 1 23 1 24 2 69 1 
167 1 344 1 144 1 366 1 346 1 283 1 284 1 240 1 210 1 151 1 139 1 302 1 165 1 157 1 
26 1 167 1 344 1 249 1 144 1 105 1 223 2 194 1 239 1 284 1 240 1 139 1 276 1 244 1 301 1 342 1 157 1 41 1 
26 1 167 2 344 1 249 1 144 1 105 1 223 2 194 1 239 1 284 1 240 1 139 2 276 1 244 1 314 1 301 1 342 1 157 2 41 1 
26 1 167 1 249 1 144 1 105 1 223 2 194 1 239 1 284 1 240 1 139 1 112 1 276 1 244 1 301 1 342 1 157 1 
324 1 
12 1 85 1 171 1 200 1 271 1 74 1 19 1 127 1 243 1 78 1 
180 2 30 1 303 1 90 1 91 1 200 1 208 1 271 1 77 1 360 1 78 2 175 1 130 1 
243 1 198 1 305 1 34 1 68 1 271 1 
168 1 167 4 144 1 204 2 279 1 305 4 34 3 283 1 284 1 94 1 210 1 151 1 74 2 127 2 78 2 245 1 363 1 157 4 12 2 198 3 199 1 346 2 200 2 139 4 19 1 226 2 48 2 302 1 68 2 
78 1 243 1 85 1 171 1 271 1 200 1 370 1 
305 1 34 1 208 1 265 1 74 1 78 1 127 1 243 1 12 1 180 1 198 1 200 1 271 2 256 1 19 1 68 1 166 1 
233 1 144 2 90 4 145 2 91 2 284 1 333 2 151 1 287 1 243 1 157 1 12 3 293 2 198 5 14 1 109 2 346 1 296 2 200 5 19 3 302 6 68 3 167 1 204 1 303 4 30 2 72 2 305 5 34 5 208 4 125 3 74 3 77 2 78 8 127 3 129 1 360 2 175 2 130 2 176 2 180 8 271 5 139 1 48 2 186 2 229 1 
218 1 12 1 180 4 121 1 303 3 90 3 91 1 200 3 271 2 208 2 195 1 74 1 77 1 19 1 360 1 127 1 78 2 227 1 338 1 230 1 
12 1 28 1 30 1 198 1 91 1 34 1 331 1 200 2 55 1 46 1 74 1 19 1 312 1 78 2 127 1 130 1 
203 2 167 1 144 1 193 1 172 1 35 1 356 3 284 1 359 2 151 1 287 1 334 1 315 1 155 1 59 2 157 1 103 2 11 1 196 1 364 1 292 1 253 3 107 1 346 1 348 2 182 1 373 1 139 1 65 1 113 1 300 1 302 1 
180 4 12 1 204 1 303 2 192 1 90 2 208 2 200 2 271 4 74 1 19 1 127 1 78 1 243 2 48 1 
161 1 47 1 215 1 362 1 376 1 
0 1 215 1 362 1 
0 1 215 1 362 1 
0 1 215 1 362 1 
159 1 215 1 362 1 
159 1 215 1 362 1 
159 1 215 1 362 1 
215 1 362 1 
98 1 117 1 
28 1 364 4 172 2 91 2 146 2 331 1 263 1 55 1 312 1 130 1 248 2 40 3 
364 1 91 1 146 1 107 1 35 1 348 2 75 1 373 1 65 1 360 1 
364 3 172 2 91 1 146 1 107 1 35 1 348 2 75 1 373 1 65 1 77 1 360 1 175 1 130 1 40 1 248 1 
364 3 28 1 304 1 172 2 146 1 107 3 35 3 331 1 263 1 347 1 348 6 75 1 373 3 65 3 131 1 248 1 40 2 
28 2 170 1 304 1 192 1 172 14 146 11 91 5 263 2 331 2 35 5 55 2 195 4 93 1 75 1 77 3 360 3 175 3 338 3 130 3 131 2 248 4 40 6 364 25 107 5 86 1 347 1 348 10 201 1 373 5 65 5 297 1 115 1 230 1 118 1 
28 1 170 1 192 1 172 2 91 1 146 3 35 1 331 1 55 1 195 1 75 1 338 1 248 2 40 2 218 1 364 5 107 1 348 2 373 1 201 1 65 1 230 1 
234 1 121 1 172 11 146 7 91 4 35 2 195 2 75 1 96 1 77 4 360 4 242 1 175 4 338 2 130 4 248 3 40 3 218 1 364 18 107 2 348 4 373 2 65 2 297 1 227 1 115 1 230 1 
28 1 234 1 170 1 121 1 192 1 172 8 146 6 91 3 331 1 35 3 55 1 195 1 75 1 77 2 96 1 360 2 175 2 338 1 130 2 248 3 40 3 131 1 218 1 364 14 107 3 348 6 201 1 373 3 65 3 297 1 227 1 230 1 
234 1 121 1 172 6 146 4 91 2 35 2 195 1 75 1 77 2 96 1 360 2 175 2 338 1 130 2 248 1 40 1 218 1 364 10 107 2 348 4 373 2 65 2 297 1 227 1 230 1 
28 1 170 1 192 1 172 2 91 1 146 3 35 1 331 1 55 1 195 1 75 1 338 1 248 2 40 2 218 1 364 5 107 1 348 2 373 1 201 1 65 1 230 1 
218 1 234 1 364 10 121 1 172 6 91 2 146 4 107 1 35 1 348 2 195 1 75 1 373 1 96 1 77 2 65 1 360 2 175 2 130 2 227 1 338 1 230 1 40 1 248 1 
234 1 121 1 172 7 146 4 91 2 35 3 195 1 75 1 96 1 77 2 360 2 175 2 338 1 130 2 248 1 40 1 131 1 218 1 364 11 107 3 348 6 373 3 65 3 297 1 227 1 230 1 
234 1 121 1 304 1 172 7 146 4 91 2 35 3 195 1 75 1 96 1 77 2 360 2 175 2 338 1 130 2 248 2 40 2 131 1 218 1 364 11 107 3 348 6 373 3 65 3 227 1 230 1 
364 6 28 2 170 1 192 1 172 2 91 3 146 4 331 2 263 3 55 2 201 1 312 1 130 1 248 4 40 7 
234 1 121 1 304 1 172 7 146 4 91 2 35 3 195 1 75 1 96 1 77 2 360 2 175 2 338 1 130 2 248 1 40 1 131 1 218 1 364 11 107 3 348 6 373 3 65 3 227 1 230 1 
364 5 28 1 170 1 192 1 172 2 91 1 146 3 107 2 263 1 35 2 331 1 55 1 348 4 373 2 201 1 65 2 40 3 248 2 131 1 
201 1 364 3 28 1 170 1 192 1 172 1 146 2 91 1 331 1 370 1 55 1 40 2 248 2 
364 3 172 2 91 1 146 1 107 1 35 1 348 2 373 1 65 1 77 1 297 1 360 1 175 1 130 1 40 1 248 1 
364 6 172 4 146 2 91 1 195 2 77 1 360 1 175 1 338 1 115 1 130 1 230 1 40 1 248 1 
28 2 170 1 192 1 172 10 91 3 146 8 263 2 331 2 35 2 55 1 195 2 77 2 360 2 242 1 289 1 175 2 130 2 338 2 248 5 40 7 131 2 364 18 107 2 348 4 347 1 201 1 373 2 65 2 115 1 
364 1 172 1 195 1 
364 1 146 1 338 1 
364 5 145 1 172 3 91 1 146 2 107 1 35 1 348 2 373 1 65 1 77 1 297 1 360 1 175 1 130 1 248 2 40 2 
218 1 234 1 364 10 121 1 172 6 91 2 146 4 107 1 35 1 348 2 195 1 75 1 373 1 96 1 77 2 65 1 360 2 175 2 130 2 227 1 338 1 230 1 40 1 248 1 
364 1 146 1 91 1 55 1 
28 1 364 3 170 1 172 2 146 1 107 1 263 1 331 1 35 1 347 1 348 2 373 1 201 1 65 1 40 2 248 1 131 1 
359 1 110 1 113 1 253 1 4 1 354 1 356 1 
205 1 15 1 253 1 16 1 354 1 4 1 356 1 18 1 359 1 325 1 110 1 113 1 
167 4 104 1 70 1 144 1 346 1 283 1 284 1 210 1 139 4 151 1 314 1 302 1 157 4 
343 1 167 2 144 2 71 1 13 1 284 1 139 2 151 1 287 1 128 1 226 1 202 1 302 1 157 2 
167 1 139 1 144 1 276 1 223 1 239 1 301 1 346 1 284 1 157 1 
167 2 144 1 252 1 284 1 139 2 151 1 244 1 314 1 21 1 302 1 157 2 
167 5 104 1 144 2 252 1 283 1 346 1 284 2 210 1 64 1 139 5 151 2 226 1 314 1 302 3 116 1 157 4 
167 5 104 1 144 2 252 1 238 1 283 1 346 1 284 2 210 1 139 5 151 2 226 1 314 1 302 3 116 1 157 4 
210 1 167 1 151 1 139 1 144 1 302 1 283 1 370 1 346 1 284 1 157 1 
82 1 167 1 144 1 253 2 356 2 346 1 284 1 359 1 151 1 139 1 287 1 113 1 315 1 59 1 302 1 103 1 157 1 11 1 
329 1 167 1 190 1 191 1 144 1 356 2 284 1 359 2 151 2 287 2 315 1 59 2 11 1 157 1 103 1 82 1 253 2 183 1 139 1 113 1 226 1 299 1 302 3 
329 1 167 2 190 1 191 1 70 1 144 1 207 1 356 2 284 1 359 2 151 2 287 2 315 1 59 2 157 2 103 1 82 1 253 2 183 1 139 2 113 1 226 1 299 1 302 3 
167 3 190 1 70 1 144 1 305 1 34 2 284 1 125 1 151 1 287 1 243 1 157 3 198 2 295 1 296 1 271 1 346 1 62 1 183 1 139 3 226 1 186 1 302 4 
190 1 167 3 70 1 144 1 198 2 305 1 34 2 346 1 271 1 296 1 284 1 125 1 183 1 333 1 151 1 139 3 287 1 243 1 226 1 186 1 302 4 157 3 
167 1 139 1 144 1 361 1 284 1 157 1 
343 1 167 6 144 3 252 1 346 2 284 2 64 1 76 1 139 6 151 2 287 1 129 1 202 1 244 1 361 1 314 1 278 1 302 3 116 1 157 5 
167 1 28 1 144 1 170 1 192 1 172 1 146 2 91 1 331 1 35 2 356 2 55 1 284 1 73 1 359 1 38 1 151 1 287 1 334 2 213 1 99 1 314 1 315 1 59 1 40 2 248 2 103 1 157 1 11 1 82 1 196 2 364 3 292 1 253 2 107 2 348 4 182 1 201 1 373 2 139 1 257 1 65 2 113 1 187 1 302 1 119 1 
167 1 72 1 305 2 171 1 34 3 125 1 333 1 74 2 78 1 243 1 127 2 245 1 157 1 12 2 84 1 198 3 293 1 85 1 109 1 271 1 200 1 346 1 296 1 139 1 19 2 186 1 302 2 68 1 
167 2 151 1 233 1 139 2 144 2 287 1 129 1 361 1 314 1 302 2 296 1 284 1 157 2 
82 1 167 1 144 1 253 2 207 1 356 2 346 1 284 1 359 1 151 1 139 1 287 1 113 1 315 1 59 1 302 1 103 1 157 1 
343 1 167 1 144 2 284 1 139 1 151 1 287 1 129 1 202 1 226 1 278 1 302 1 157 1 
150 1 113 1 313 1 261 1 282 1 
329 1 217 1 191 1 84 1 198 2 261 2 282 2 34 2 271 1 6 1 124 1 150 1 243 1 298 1 113 1 299 1 313 2 186 1 352 1 
150 1 359 1 318 1 313 1 253 1 261 1 356 1 371 1 69 1 
150 1 352 1 124 1 
349 1 111 1 250 1 365 1 327 1 281 1 149 1 357 1 
189 1 250 3 236 1 222 1 262 1 281 1 149 2 357 2 349 4 111 4 327 1 163 1 8 2 177 1 
250 1 365 1 281 1 149 1 357 1 349 2 111 2 97 1 327 1 66 1 341 1 8 1 
250 1 365 1 236 2 281 1 17 1 262 2 149 1 357 1 349 3 111 3 327 1 163 1 
88 1 250 2 375 2 120 1 
349 1 83 1 111 1 365 1 327 1 281 1 
349 2 111 2 250 1 42 1 365 1 327 1 281 1 8 1 149 1 357 1 
340 1 
349 1 111 1 250 1 365 1 327 1 281 1 149 1 357 1 
250 1 370 1 149 1 357 1 
349 1 111 1 250 1 327 1 281 1 149 1 357 1 
111 1 43 1 60 1 
349 3 111 3 250 1 365 1 236 1 327 1 140 1 262 2 163 1 281 1 149 1 357 1 
349 2 111 2 250 1 327 1 281 1 8 1 149 1 357 1 36 1 
132 1 189 1 26 1 250 1 365 1 223 1 281 1 349 1 111 1 327 1 301 1 
349 1 111 1 250 1 365 1 327 1 281 1 357 1 
349 1 111 1 365 1 327 1 281 1 149 1 357 2 
349 2 111 2 250 1 365 1 327 2 53 1 281 2 7 1 102 1 357 1 
189 1 349 3 111 3 250 2 42 1 365 1 327 1 222 1 246 1 281 1 8 2 149 1 357 1 
26 1 250 1 365 1 135 1 223 2 281 1 149 1 357 1 349 2 111 2 276 1 327 1 301 1 8 1 342 1 
189 1 250 2 365 1 222 1 281 2 369 1 149 1 357 1 36 1 349 4 111 4 327 2 8 2 
349 3 111 3 250 1 42 1 365 1 327 1 262 1 281 1 8 1 149 1 357 1 
189 1 250 1 222 1 177 1 
250 1 357 1 

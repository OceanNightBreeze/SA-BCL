#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 1 75 5 103 2 76 1 44 2 240 2 143 6 188 1 272 1 218 1 342 1 277 1 361 3 172 1 89 1 12 2 14 1 230 9 351 1 15 9 257 2 201 1 94 1 66 1 203 2 39 1 139 2 140 4 
206 1 75 5 103 2 76 1 44 2 240 2 143 6 188 1 272 1 218 1 342 1 277 1 361 3 172 1 89 1 12 2 14 1 230 9 351 1 15 9 257 2 201 1 94 1 66 1 203 2 39 1 139 2 140 4 
206 1 75 6 103 2 76 1 44 2 240 2 143 7 188 1 272 1 218 1 342 1 277 1 361 4 172 1 89 1 12 2 14 1 230 10 351 1 15 10 257 2 201 1 94 1 66 1 203 2 39 1 139 2 140 5 
206 1 75 4 103 2 76 1 44 2 240 2 143 4 188 1 272 1 218 1 342 1 361 2 172 1 89 1 12 2 14 1 230 7 351 1 15 7 257 2 201 1 94 1 66 1 203 2 39 1 139 1 140 3 
75 3 103 1 44 1 76 1 240 1 143 3 12 1 230 4 257 1 15 4 351 1 272 1 342 1 66 1 361 1 277 1 139 2 140 2 
141 1 75 1 103 1 76 1 44 1 240 1 230 2 14 1 201 1 257 1 15 2 272 1 295 1 66 1 203 1 375 1 
89 1 75 2 76 1 240 2 143 1 230 3 257 2 15 3 272 1 66 1 361 1 203 1 140 1 
206 1 89 1 75 5 103 1 44 1 76 1 240 2 336 1 12 1 143 7 227 1 230 9 351 1 257 2 15 9 272 1 342 1 66 1 277 1 361 3 203 1 172 1 139 2 140 4 
206 1 89 1 75 5 103 1 44 1 76 1 240 2 336 1 12 1 143 7 227 1 230 9 351 1 257 2 15 9 272 1 342 1 66 1 277 1 361 3 203 1 172 1 139 2 140 4 
48 1 367 1 88 1 
309 1 302 2 367 1 
347 2 373 2 332 2 211 1 77 2 362 2 132 2 237 1 
209 1 337 1 168 1 211 1 77 3 29 1 214 1 79 1 191 2 249 1 111 1 362 2 132 2 221 1 151 1 345 1 253 2 347 3 348 1 196 2 326 1 350 2 158 1 327 1 63 1 303 2 304 1 182 1 232 1 118 1 373 2 353 1 332 2 310 1 20 1 237 1 122 1 
360 1 320 1 347 1 373 1 332 1 77 1 362 1 242 1 132 1 237 1 
254 1 347 1 2 1 91 1 367 1 77 1 288 1 81 1 373 1 360 1 173 1 88 1 72 1 346 1 
254 2 347 1 2 1 91 1 367 1 77 1 288 1 81 2 373 1 360 1 332 1 362 1 132 1 88 1 346 1 
254 1 81 1 37 1 83 1 117 1 
254 2 81 2 37 1 367 1 363 1 266 1 88 1 117 1 
254 1 81 1 37 1 
254 1 347 1 242 1 77 1 117 1 81 1 360 1 320 1 373 1 332 1 362 1 237 1 132 1 264 1 
367 1 
254 2 81 2 37 1 367 1 271 1 363 1 88 1 117 1 
254 5 104 2 197 1 367 1 107 1 330 1 117 2 358 1 17 1 81 5 31 1 65 1 276 1 37 2 112 2 69 1 363 1 176 2 88 1 
48 1 211 1 
347 2 366 1 77 2 211 2 373 2 332 1 362 1 132 1 195 1 
289 1 317 1 334 1 
347 1 209 1 211 1 77 1 303 1 63 1 214 1 79 1 232 1 191 1 118 1 249 1 20 1 193 1 122 1 253 1 
347 2 209 1 77 2 63 1 303 1 28 1 214 1 79 1 232 1 191 1 118 1 373 1 249 1 20 1 332 1 68 1 362 1 122 1 334 1 253 1 
347 3 373 3 332 3 211 1 77 3 362 3 132 1 28 1 
360 1 320 1 347 1 373 1 332 1 77 1 362 1 
360 1 347 1 373 1 366 1 332 1 77 1 362 1 132 1 195 1 
2 1 209 1 168 1 211 1 77 4 28 1 29 1 214 1 79 1 81 1 191 1 360 1 249 1 111 1 362 3 132 2 221 1 151 1 195 1 253 1 346 1 254 1 347 4 348 1 196 1 326 1 350 2 91 1 158 1 327 1 63 1 303 1 137 1 288 1 232 1 118 1 163 1 373 3 353 1 20 1 332 3 68 1 237 1 122 1 
5 1 347 2 373 2 332 1 211 1 77 2 362 1 28 1 72 1 
254 1 347 3 2 1 91 1 367 1 133 1 77 3 28 2 288 1 81 1 360 1 373 3 163 1 332 3 68 1 362 3 132 1 195 1 346 1 
347 2 77 2 28 1 373 2 289 1 332 2 362 2 132 1 334 1 195 1 
347 1 209 1 211 1 77 1 303 1 63 1 214 1 79 1 191 1 232 1 118 1 249 1 20 1 122 1 253 1 
347 1 115 1 209 1 211 1 77 1 303 1 63 1 214 1 191 1 232 1 118 1 249 1 20 1 56 1 253 1 
0 1 355 1 317 2 337 2 168 1 29 2 7 1 280 1 151 1 223 1 348 1 196 4 326 1 350 2 181 1 158 1 369 1 13 1 327 1 200 1 372 1 289 2 334 2 71 1 
360 1 347 1 373 1 91 1 332 1 270 1 77 1 362 1 
5 1 347 5 373 5 332 4 210 1 68 1 211 1 77 5 362 4 339 1 132 1 28 2 195 1 72 1 
360 1 320 1 347 2 373 2 270 1 332 2 77 2 362 2 
47 1 323 1 
47 1 323 1 
36 1 283 1 
36 1 283 1 
36 1 283 1 
47 1 287 1 323 1 
36 1 47 2 61 1 27 1 283 1 323 2 
47 1 175 1 323 1 
47 1 287 1 323 1 
47 1 287 1 323 1 
47 1 238 1 323 1 
47 1 238 1 323 1 
47 1 238 1 323 1 
254 2 335 1 349 1 47 2 367 1 92 2 27 1 93 2 284 1 81 2 6 2 119 2 263 3 149 2 9 1 166 1 239 1 315 1 323 2 
335 1 47 1 211 1 77 2 244 1 356 1 146 1 81 1 6 1 362 2 175 1 323 1 254 1 347 2 301 1 92 1 256 1 93 1 373 2 119 1 332 2 263 1 291 1 41 1 
103 1 44 1 12 1 
141 1 103 1 44 1 
141 1 44 3 318 1 365 1 156 1 12 2 
141 1 44 2 318 1 156 1 12 1 245 1 
141 1 44 2 318 2 12 1 156 1 
0 1 104 1 49 1 107 2 145 1 356 1 81 5 170 2 112 1 113 2 363 1 176 1 88 1 254 5 301 1 302 3 367 2 282 1 256 1 157 1 13 1 200 1 372 1 117 4 17 1 306 1 309 1 260 2 37 1 21 1 69 3 265 1 
0 3 293 1 104 2 49 2 107 6 78 1 145 3 108 1 81 9 170 6 344 5 33 1 83 5 112 2 363 1 176 2 88 1 254 9 301 4 302 9 367 5 282 2 13 3 200 3 372 3 117 7 306 1 17 1 65 1 309 3 260 6 37 6 120 1 69 8 73 1 
0 1 104 1 49 1 107 2 145 1 81 3 170 2 112 1 113 1 176 1 88 1 254 3 301 1 302 4 367 3 282 1 157 1 13 1 200 1 117 2 372 1 65 1 309 2 260 2 69 3 265 1 
0 2 293 1 104 1 49 1 107 4 78 1 145 2 81 4 170 4 112 1 113 2 176 1 88 1 254 4 301 2 302 7 367 4 282 1 157 1 13 2 200 2 117 3 372 2 65 1 309 3 260 4 69 5 265 1 73 1 
232 1 48 1 187 1 
232 1 35 1 
354 1 
232 1 63 1 
129 1 232 3 118 1 32 1 187 2 63 1 
232 1 118 1 63 1 
232 1 248 1 
59 2 325 1 196 7 269 1 181 2 337 4 106 1 200 1 29 3 372 1 130 1 110 1 296 1 171 1 331 1 22 1 280 3 
59 2 325 1 196 7 269 1 181 2 337 4 106 1 200 1 29 3 372 1 130 1 110 1 296 1 171 1 331 1 22 1 280 3 
177 1 59 2 325 1 196 7 269 1 181 2 337 4 106 1 200 1 29 3 372 1 130 1 110 1 296 1 171 1 331 1 22 1 280 3 
125 1 0 3 269 1 337 16 338 1 106 1 145 3 29 15 130 2 110 1 296 1 147 4 171 5 192 1 298 1 280 10 151 1 322 1 224 1 348 1 59 3 325 2 196 31 326 1 350 2 181 5 158 1 13 3 200 4 64 3 285 1 372 4 331 2 22 2 
269 1 337 5 338 1 106 1 29 4 357 1 130 1 110 1 297 1 171 1 280 4 151 2 348 2 59 2 196 9 325 1 326 2 350 4 181 3 158 2 200 1 372 1 331 1 22 1 
141 1 75 1 267 1 103 1 76 1 44 2 240 1 143 1 51 1 246 1 191 1 272 1 249 1 250 1 219 1 252 1 253 1 114 1 90 1 365 1 12 1 303 1 329 1 230 2 15 2 257 1 66 1 20 1 203 1 312 1 
141 1 75 1 267 1 103 1 44 2 240 1 143 2 51 1 246 1 191 1 4 1 272 1 249 1 250 1 219 1 252 1 253 1 114 1 90 1 225 1 365 1 12 1 228 1 303 1 230 3 15 3 257 1 66 1 20 1 203 1 
114 1 141 1 90 1 75 1 103 1 44 2 225 1 365 1 12 1 143 2 228 1 51 1 303 1 230 2 15 2 246 1 191 1 272 1 249 1 66 1 20 1 250 1 203 1 252 1 253 1 
114 2 90 2 240 1 255 1 128 1 63 1 303 1 230 1 257 1 15 1 214 1 246 2 232 1 4 1 191 1 307 1 249 1 20 1 84 1 203 2 165 1 174 1 253 1 
114 1 141 1 90 1 267 1 103 1 44 2 76 1 225 1 365 1 240 1 12 1 51 1 303 1 230 1 257 1 15 1 246 1 191 1 249 1 20 1 250 1 312 1 203 1 219 1 252 1 253 1 
26 1 
104 1 45 1 2 1 107 2 190 1 52 2 53 2 191 2 249 1 148 1 112 1 150 2 253 2 346 1 254 5 347 1 302 2 63 1 303 2 159 2 17 1 352 4 309 2 20 1 165 1 69 2 316 1 72 1 77 1 214 2 359 1 80 1 81 5 360 1 85 1 173 1 279 1 174 1 363 3 176 1 88 1 179 1 91 1 367 2 282 1 231 2 288 1 232 1 373 1 95 2 374 1 37 6 184 2 100 1 42 1 
254 3 179 1 347 1 2 1 91 1 77 1 271 1 231 1 288 1 81 3 360 1 373 1 352 2 374 1 37 2 148 1 173 1 279 1 363 1 316 1 346 1 72 1 
254 3 179 1 347 1 2 1 91 1 367 1 77 1 271 1 288 1 81 3 360 1 373 1 352 3 374 1 37 1 148 1 184 1 173 1 279 1 363 1 316 1 88 1 346 1 72 1 
2 1 77 1 271 1 52 1 81 3 360 1 148 1 173 1 279 1 363 1 346 1 88 1 254 3 179 1 347 1 91 1 367 1 231 1 288 1 373 1 352 3 374 1 37 2 184 1 316 1 72 1 
104 1 2 1 107 1 52 4 53 2 148 1 112 1 150 2 346 1 254 5 347 1 10 1 159 2 305 1 17 1 352 6 309 2 69 1 316 1 72 1 208 1 77 1 271 1 81 5 360 1 173 1 279 1 363 3 176 1 88 5 179 1 91 1 367 5 231 4 288 1 373 1 374 1 95 2 37 7 98 1 184 4 290 1 100 1 42 1 
104 1 2 1 107 1 52 2 190 1 53 2 148 1 112 1 150 2 346 1 254 4 347 1 302 2 159 2 17 1 352 4 309 2 69 1 316 1 72 1 77 1 81 4 360 1 173 1 279 1 363 2 176 1 88 1 179 1 91 1 367 2 231 2 288 1 373 1 374 1 95 2 37 4 184 2 100 1 42 1 
208 1 104 1 2 1 77 1 107 1 52 2 53 2 81 4 360 1 148 1 112 1 150 2 173 1 279 1 363 2 176 1 88 1 346 1 254 4 179 1 347 1 10 1 91 1 367 1 159 2 231 2 305 1 288 1 17 1 373 1 352 4 95 2 374 1 309 2 37 4 184 2 69 1 100 1 42 1 316 1 72 1 
208 1 104 1 2 1 77 1 107 1 52 2 53 2 81 4 360 1 148 1 112 1 150 2 173 1 279 1 363 2 176 1 88 1 346 1 254 4 179 1 347 1 10 1 91 1 367 1 159 2 231 2 305 1 288 1 17 1 373 1 352 4 95 2 374 1 309 2 37 4 184 2 69 1 100 1 42 1 316 1 72 1 
104 1 2 1 77 1 107 1 52 2 81 4 360 1 343 2 148 1 112 1 150 2 173 1 279 1 363 2 176 1 88 1 346 1 254 4 179 1 347 1 10 1 153 1 302 2 91 1 367 1 368 1 160 2 231 2 288 1 17 1 373 1 352 4 95 2 374 1 37 4 184 2 69 1 138 1 42 1 316 1 72 1 
208 1 104 1 2 1 77 1 107 1 52 3 53 2 81 4 360 1 148 1 112 1 150 2 173 1 279 1 363 2 176 1 88 1 346 1 254 4 179 1 347 1 10 1 91 1 367 1 159 2 231 3 305 1 17 1 288 1 373 1 352 5 95 2 374 1 309 2 37 5 184 3 69 1 100 1 290 1 42 1 316 1 72 1 
208 1 104 1 2 1 77 1 107 1 52 3 53 2 81 4 360 1 148 1 112 1 150 2 173 1 279 1 363 2 176 1 88 1 346 1 254 4 179 1 347 1 10 1 91 1 367 1 159 2 231 3 305 1 17 1 288 1 373 1 352 5 95 2 374 1 309 2 37 5 184 3 69 1 100 1 290 1 42 1 316 1 72 1 
104 1 2 1 107 1 52 2 190 1 343 2 148 1 112 1 150 2 346 1 254 4 347 1 302 2 160 2 17 1 352 4 69 1 316 1 72 1 77 1 81 4 360 1 173 1 279 1 363 2 176 1 88 1 179 1 91 1 367 1 231 2 288 1 373 1 374 1 95 2 37 4 184 2 138 1 42 1 
269 1 355 1 317 1 48 1 168 1 337 3 211 2 106 1 29 3 110 1 280 2 151 1 348 1 59 1 325 1 196 6 326 1 350 2 181 2 158 1 327 1 200 1 372 1 289 1 331 1 334 1 
123 1 317 3 168 1 337 1 211 1 169 1 29 3 360 1 147 1 278 1 87 1 299 1 151 2 348 2 196 4 326 2 350 4 158 2 327 2 64 1 353 1 334 3 23 1 
209 1 25 1 168 1 337 1 211 1 77 2 28 1 214 1 29 1 79 1 191 1 249 1 362 1 193 1 194 1 151 1 253 1 347 2 348 1 196 2 350 2 326 1 158 1 327 1 63 1 303 1 182 1 232 1 118 1 373 1 289 1 353 1 20 1 332 1 68 1 122 1 333 1 23 1 
0 2 186 1 46 1 337 10 106 1 145 2 191 3 110 1 249 2 151 3 253 3 347 3 59 1 348 3 196 20 350 6 158 3 62 1 13 2 200 3 303 3 63 2 161 2 118 2 258 2 353 1 20 2 68 1 122 2 23 1 269 1 317 7 209 2 168 3 211 2 77 3 28 1 29 10 214 1 79 2 216 2 171 4 362 1 221 2 280 8 225 1 325 1 181 4 326 3 134 2 327 3 372 3 182 1 232 2 373 1 289 7 331 1 332 1 334 7 
355 1 168 2 337 1 77 1 212 1 28 1 214 2 29 1 191 8 249 2 362 1 58 1 220 1 151 2 174 1 253 8 345 2 347 1 348 2 225 1 196 2 326 2 350 4 158 2 327 2 303 7 63 2 329 1 182 1 232 3 373 1 19 1 308 1 353 1 67 1 202 1 332 1 20 2 165 1 
74 1 0 1 317 1 168 1 337 1 77 1 145 1 29 2 362 1 132 1 280 1 151 1 195 1 347 1 348 1 196 3 181 1 326 1 350 2 158 1 327 1 13 1 200 1 372 1 373 1 289 1 332 1 334 1 23 1 
0 1 348 1 317 1 196 2 355 1 350 2 326 1 168 1 337 2 158 1 369 1 327 1 372 1 289 1 171 1 280 1 334 1 151 1 
348 1 317 1 196 2 355 1 181 1 350 2 326 1 168 1 158 1 327 1 13 1 200 1 29 2 289 1 280 1 334 1 151 1 71 1 
0 1 348 1 317 2 196 4 355 1 181 1 350 2 326 1 168 1 337 2 158 1 13 1 327 1 200 1 145 1 29 2 372 1 289 2 171 1 280 2 334 2 151 1 
0 1 348 1 317 1 196 2 350 2 326 1 168 1 337 2 158 1 369 1 327 1 372 1 289 1 308 1 171 1 280 1 334 1 151 1 
348 1 317 1 196 2 181 1 350 2 326 1 168 1 158 1 327 1 13 1 200 1 29 2 289 1 308 1 280 1 334 1 151 1 71 1 
0 1 348 1 317 2 196 4 181 1 350 2 326 1 168 1 337 2 158 1 13 1 327 1 200 1 145 1 29 2 372 1 289 2 308 1 171 1 280 2 334 2 151 1 
0 1 348 1 317 2 196 4 181 1 350 2 326 1 168 1 337 2 158 1 13 1 327 1 200 1 145 1 29 2 372 1 289 2 171 1 280 2 334 2 151 1 
209 1 337 1 168 1 211 1 77 1 214 1 29 1 79 1 191 1 249 1 221 1 151 1 253 1 347 1 348 1 196 2 350 2 326 1 158 1 327 1 63 1 303 1 182 1 232 1 118 1 353 1 20 1 122 1 
209 1 337 1 168 1 211 1 77 1 214 1 29 1 191 1 249 1 56 1 151 1 253 1 347 1 348 1 196 2 115 1 350 2 326 1 158 1 327 1 63 1 303 1 371 1 182 1 232 1 118 1 353 1 20 1 
0 1 348 1 317 2 196 4 181 1 350 2 326 1 168 1 337 2 158 1 13 1 327 1 200 1 145 1 29 2 372 1 289 2 171 1 280 2 334 2 151 1 23 1 
0 1 317 2 209 1 337 2 168 1 77 1 145 1 29 2 79 1 191 1 216 1 249 1 171 1 280 2 221 1 151 1 253 1 347 1 348 1 196 4 181 1 350 2 326 1 158 1 13 1 327 1 200 1 303 1 63 1 329 1 372 1 232 1 118 1 289 2 20 1 122 1 334 2 
0 1 317 1 168 1 337 2 77 1 145 1 29 1 171 1 362 1 132 1 280 1 151 1 195 1 347 1 348 1 196 3 326 1 350 2 158 1 13 1 327 1 200 1 372 1 373 1 259 1 289 1 332 1 334 1 23 1 
43 1 101 1 124 2 125 1 0 3 337 9 213 1 145 3 29 10 357 1 147 2 171 3 8 1 192 1 251 1 280 6 151 2 348 2 196 19 364 2 181 3 326 2 350 4 158 2 13 3 200 3 64 1 372 3 96 1 70 1 
43 1 124 1 125 2 0 3 338 2 337 14 145 3 189 1 29 12 357 1 30 1 147 2 171 2 8 1 251 2 280 4 151 3 324 1 348 3 196 26 364 4 181 2 326 3 350 6 60 1 158 3 13 2 200 2 136 1 64 2 372 3 162 1 96 2 70 1 
43 1 101 1 124 1 125 3 0 4 269 1 338 1 337 20 106 1 145 4 189 1 29 21 357 1 30 1 110 1 147 4 171 4 8 1 192 1 251 1 280 8 151 3 324 1 59 1 348 3 325 1 196 41 364 4 181 4 326 3 350 6 60 1 158 3 13 4 136 1 200 5 64 3 372 5 162 1 96 2 331 1 121 1 70 1 
43 1 101 1 124 1 125 3 0 4 269 1 338 2 337 20 106 1 145 4 189 1 29 18 357 1 30 1 110 1 147 4 171 3 8 1 192 1 251 1 280 7 151 4 324 1 59 1 348 4 325 1 196 38 364 4 181 4 326 4 350 8 60 1 158 4 13 3 136 1 200 4 64 3 372 5 162 1 96 2 331 1 121 1 70 1 
43 1 124 1 125 2 0 7 269 1 338 1 337 27 106 1 145 7 189 1 29 25 357 1 30 1 110 1 147 4 171 7 8 1 192 2 251 1 280 14 151 2 324 1 59 1 348 2 325 1 196 52 364 4 181 7 326 2 350 4 60 1 158 2 13 7 136 1 200 8 64 4 372 8 162 1 18 2 96 1 331 1 70 1 
24 1 168 1 127 1 337 1 77 2 3 1 29 1 191 2 249 1 220 1 151 1 253 2 345 2 152 1 347 2 348 1 196 2 281 1 350 2 326 1 158 1 327 1 63 1 303 2 182 1 232 1 373 2 353 1 20 1 202 1 23 1 
141 1 103 1 44 2 225 1 365 1 142 1 12 1 303 2 199 1 51 1 329 1 246 1 191 2 54 1 249 1 20 1 219 1 252 1 253 2 
141 1 103 1 44 2 225 1 365 1 12 1 303 1 51 1 246 1 191 1 294 1 54 1 249 1 20 1 219 1 252 1 253 1 
142 1 198 1 63 1 303 1 214 1 246 1 232 1 191 1 307 1 249 1 20 1 165 1 174 1 253 1 
141 1 103 1 44 2 225 1 365 1 142 1 12 1 303 1 199 1 51 1 246 1 191 1 54 1 249 1 20 1 219 1 252 1 253 1 
207 1 
276 1 48 1 367 1 107 1 69 1 88 1 330 1 
104 1 107 1 53 1 81 1 112 1 363 1 176 1 88 1 254 1 302 1 367 2 159 1 17 1 309 1 37 1 69 1 100 1 
0 2 104 4 2 2 105 2 187 2 107 8 145 2 109 1 191 3 248 2 249 4 112 4 253 3 254 5 154 2 302 12 13 2 63 3 303 3 200 2 17 4 118 3 164 2 260 6 309 6 20 3 313 1 69 9 167 1 214 1 81 5 32 1 170 6 273 1 217 2 274 2 276 1 85 1 131 2 363 3 176 4 88 2 226 2 180 2 282 2 367 8 134 2 229 1 329 1 330 1 35 3 372 2 232 10 37 5 
125 1 0 2 104 2 105 2 107 5 145 2 189 1 30 1 81 1 170 5 274 1 147 1 112 2 85 1 363 1 222 1 176 2 88 2 324 1 254 1 302 6 282 1 367 5 328 1 13 2 136 1 200 2 64 1 372 2 17 2 162 1 260 5 309 3 37 1 69 8 
208 1 104 1 105 2 77 1 242 1 107 2 81 1 360 1 320 1 110 1 274 1 112 1 362 1 132 1 176 1 254 1 347 1 325 1 200 1 372 2 17 1 373 1 331 1 332 1 236 1 237 1 69 2 264 1 
17 1 104 1 276 1 367 1 112 1 107 1 69 1 176 1 88 1 330 1 
0 2 302 10 105 2 367 5 134 1 107 5 13 2 145 2 200 2 372 2 170 5 274 1 260 5 309 5 69 5 
254 1 81 1 37 1 367 1 363 1 88 1 
104 2 45 1 107 2 214 2 359 1 341 1 191 4 81 3 55 1 249 1 112 2 85 2 363 2 174 1 176 2 253 4 254 3 282 2 63 1 303 4 17 1 232 1 65 1 37 4 20 1 165 1 313 2 69 2 167 1 
209 1 168 1 211 1 77 3 29 1 214 1 79 1 191 1 249 1 111 1 362 2 132 2 221 1 151 1 253 1 347 3 348 1 196 1 326 1 350 2 158 1 327 1 303 1 63 1 232 1 373 2 118 1 353 1 332 2 20 1 237 1 122 1 
59 1 104 1 302 4 282 1 367 4 107 2 17 1 170 2 260 2 309 2 112 1 85 1 69 1 176 1 88 2 
92 1 135 1 93 1 
155 1 92 1 93 1 284 1 41 1 
92 1 135 1 93 1 
92 1 135 1 93 1 
11 1 92 1 93 1 
11 1 92 1 93 1 
11 1 92 1 93 1 
92 1 93 1 
47 1 323 1 
59 1 348 2 196 8 269 1 325 1 181 2 350 4 326 2 337 4 338 1 158 2 106 1 200 1 29 4 372 1 110 1 171 1 331 1 280 3 151 2 
110 1 59 1 196 6 325 1 269 1 331 1 181 2 48 1 337 3 106 1 200 1 280 2 29 3 372 1 
0 1 348 1 196 4 181 1 350 2 326 1 337 2 158 1 13 1 200 1 145 1 29 2 372 1 97 1 171 1 280 2 151 1 
125 1 0 1 196 7 181 1 337 3 13 1 200 1 145 1 64 1 29 4 372 1 147 2 171 1 192 1 280 2 
123 1 269 1 338 1 337 7 106 1 29 8 110 1 147 1 171 3 278 1 280 6 151 1 348 1 196 15 325 2 350 2 326 1 181 3 158 1 200 2 64 1 372 2 331 2 236 1 
196 1 147 1 29 1 
196 1 337 1 64 1 
0 1 348 1 196 6 326 1 350 2 181 2 337 3 158 1 134 1 13 1 145 1 200 1 29 3 372 1 97 1 171 1 280 3 151 1 
125 1 0 2 337 6 145 2 29 6 189 1 357 1 30 1 147 1 171 1 280 2 151 1 324 1 348 1 196 12 326 1 350 2 181 1 158 1 13 2 136 1 200 2 64 1 372 2 162 1 
110 1 325 1 196 6 171 1 331 1 181 1 337 3 200 1 280 2 29 3 372 1 
348 1 325 1 196 3 269 1 181 1 350 2 326 1 337 1 338 1 158 1 106 1 29 2 171 1 331 1 278 1 280 2 151 1 
348 1 325 2 196 10 326 1 350 2 181 3 337 5 158 1 200 2 29 5 357 1 372 2 110 1 331 2 171 2 236 1 280 5 151 1 
0 1 348 1 196 2 350 2 326 1 337 2 158 1 357 1 372 1 171 1 280 1 151 1 
0 1 348 1 196 4 181 1 350 2 326 1 337 2 158 1 13 1 200 1 145 1 29 2 357 1 372 1 171 1 280 2 151 1 
101 1 348 3 196 3 325 1 350 6 326 3 181 1 338 1 337 1 158 3 29 2 357 1 331 1 171 1 278 1 280 2 151 3 
101 1 125 1 0 3 269 1 338 2 337 16 106 1 145 3 29 18 357 1 110 2 147 4 171 5 278 1 298 1 192 1 280 12 151 5 322 1 224 1 59 1 348 5 325 3 196 34 326 5 350 10 181 7 158 5 13 3 200 5 64 3 372 5 97 1 331 3 
125 1 269 1 337 4 106 1 29 4 357 1 30 1 110 1 147 1 280 2 151 1 59 1 348 1 196 8 325 1 326 1 350 2 181 2 158 1 200 1 64 1 372 1 331 1 
125 1 0 1 269 1 337 6 106 1 145 1 29 5 357 1 30 1 110 1 147 2 171 1 192 1 280 3 151 2 59 1 348 2 325 1 196 11 181 2 326 2 350 4 158 2 200 1 64 1 372 2 97 1 331 1 
125 1 0 2 269 1 337 9 338 1 106 1 145 2 189 1 29 10 357 1 30 1 110 1 147 1 171 1 280 4 151 3 324 1 59 1 348 3 325 1 196 19 326 3 350 6 181 3 158 3 13 2 136 1 200 3 64 1 372 3 162 1 97 1 331 1 
125 1 0 2 269 1 338 1 337 10 106 1 145 2 29 7 189 1 357 1 30 1 110 1 147 1 171 2 280 5 151 3 324 1 59 1 348 3 325 1 196 17 326 3 350 6 181 3 158 3 13 1 136 1 200 2 64 1 372 3 162 1 97 1 331 1 
125 1 269 1 337 4 106 1 29 4 357 1 30 1 110 1 147 1 280 2 151 1 59 1 348 1 196 8 325 1 326 1 350 2 181 2 158 1 200 1 64 1 372 1 331 1 
125 1 0 2 337 6 145 2 29 6 189 1 357 1 30 1 147 1 171 1 280 2 151 1 324 1 348 1 196 12 326 1 350 2 181 1 158 1 13 2 136 1 200 2 64 1 372 2 162 1 
125 1 0 2 269 1 337 10 338 2 106 1 145 2 189 1 29 8 357 1 30 1 110 1 147 1 171 2 280 5 151 4 324 1 59 1 348 4 325 1 196 18 326 4 350 8 181 3 158 4 13 1 136 1 200 2 64 1 372 3 162 1 97 1 331 1 
101 1 125 1 0 3 337 9 338 2 145 3 189 1 29 7 357 1 30 1 147 1 171 3 280 6 151 4 324 1 348 4 196 16 326 4 350 8 181 3 158 4 13 2 136 1 200 2 64 1 372 3 162 1 
196 7 269 1 325 3 181 3 337 3 106 2 200 1 29 4 372 1 110 1 331 3 171 3 280 6 
101 1 125 1 0 2 269 1 337 10 338 2 106 1 145 2 189 1 29 8 357 1 30 1 110 1 147 1 171 1 280 4 151 4 324 1 59 1 348 4 325 1 196 18 326 4 350 8 181 3 158 4 13 1 136 1 200 2 64 1 372 3 162 1 331 1 
5 1 347 1 373 1 211 1 77 1 72 1 292 1 
347 1 116 1 211 1 77 1 319 1 5 1 373 1 314 1 204 1 205 1 292 1 72 1 
232 1 191 1 249 1 20 1 48 1 165 1 63 1 303 1 174 1 253 1 214 1 
347 2 209 1 211 1 77 2 63 1 303 1 28 1 214 1 232 1 191 1 118 1 373 1 249 1 332 1 20 1 362 1 122 1 253 1 
209 1 211 1 77 2 28 1 191 1 248 1 360 1 217 1 249 1 362 1 253 1 346 1 347 2 91 1 303 1 63 2 232 3 373 2 118 2 20 1 332 2 122 1 313 1 
209 1 211 1 77 2 28 1 191 2 248 1 360 1 217 1 249 1 362 1 253 2 346 1 347 2 115 1 91 1 303 2 63 2 16 1 232 3 373 2 118 2 20 1 332 2 313 1 
254 2 2 1 367 1 187 1 63 1 303 3 214 1 35 1 16 1 248 1 81 2 191 3 232 4 118 1 233 1 217 1 249 1 37 1 20 1 99 1 313 1 253 3 88 1 
254 2 154 1 2 1 367 1 187 1 63 1 303 3 214 1 35 1 16 1 248 1 81 2 191 3 232 4 118 1 217 1 249 1 37 1 20 1 313 1 253 3 88 1 
191 1 249 1 20 1 212 1 303 1 253 1 
178 1 268 1 225 1 212 1 303 6 63 2 329 1 286 1 214 2 191 7 232 3 32 1 118 1 19 1 249 3 67 1 202 1 20 2 58 1 345 1 253 7 
317 1 269 1 209 1 337 3 168 2 211 2 77 2 106 1 28 1 29 3 3 1 79 1 191 1 110 1 216 1 249 1 362 1 280 2 221 1 151 2 253 1 347 2 59 1 348 2 196 6 325 1 181 2 350 4 326 2 158 2 327 2 200 1 63 1 303 1 329 1 372 1 161 1 232 1 118 1 373 1 289 1 331 1 20 1 332 1 122 1 334 1 23 1 
104 2 2 1 107 1 187 1 214 1 191 1 81 3 276 1 112 2 131 1 363 1 176 2 253 1 88 1 254 3 226 1 154 1 180 1 367 1 303 1 330 1 117 1 35 1 17 2 232 2 37 2 69 1 167 1 
187 1 212 1 303 2 63 1 329 1 191 2 232 2 32 1 118 1 273 1 249 2 20 1 253 2 
303 4 63 1 329 1 214 1 16 1 191 4 232 1 249 1 20 1 86 1 165 1 174 1 253 4 
268 1 62 1 303 2 63 1 286 1 191 2 232 1 118 1 261 1 249 2 311 1 20 1 313 1 253 2 
141 1 191 1 103 1 44 1 249 1 20 1 51 1 303 1 253 1 214 1 
232 1 191 2 152 1 225 1 249 1 20 1 202 1 63 1 303 2 329 1 253 2 
303 4 63 2 329 1 214 1 191 5 232 3 249 2 202 1 20 2 67 1 86 1 165 1 58 1 313 1 174 1 253 5 
370 1 303 4 63 2 329 1 214 1 191 5 232 3 249 2 202 1 20 2 67 1 86 1 165 1 313 1 174 1 253 5 
347 2 115 1 209 1 211 1 77 2 63 1 303 1 28 1 214 1 232 1 191 1 118 1 373 1 249 1 332 1 20 1 362 1 253 1 
178 1 268 1 303 1 63 1 286 1 191 1 232 1 32 1 118 1 249 2 20 1 313 1 253 1 
347 1 373 1 102 1 24 1 281 1 127 1 262 1 77 1 185 1 
102 1 38 1 241 1 
82 1 102 1 262 1 211 1 185 1 
254 2 102 1 2 1 91 1 367 1 241 1 211 1 117 1 183 1 288 1 81 2 82 2 360 1 163 1 38 1 262 2 185 2 88 1 346 1 
75 1 272 1 66 1 48 1 
75 1 272 1 66 1 240 1 230 1 15 1 257 1 
90 1 203 1 230 1 
75 1 126 1 76 1 240 1 50 1 230 3 257 1 15 3 201 2 272 1 321 1 66 1 
75 1 272 1 66 1 240 1 143 1 230 2 139 1 15 2 257 1 
75 1 103 1 44 1 76 1 240 1 12 1 230 1 140 1 351 1 15 1 257 1 
75 1 76 1 66 1 240 1 230 1 15 1 257 1 
272 1 76 1 66 2 240 1 230 1 15 1 257 1 
75 1 76 1 240 2 340 1 230 2 257 2 15 2 247 1 66 1 57 1 
206 1 75 2 76 1 240 1 143 2 230 3 257 1 15 3 272 1 66 1 361 1 172 1 140 1 
141 1 75 1 103 1 44 2 76 1 365 1 240 1 12 1 143 1 230 2 257 1 15 2 272 1 66 1 235 1 
75 2 76 1 240 2 143 2 230 4 257 2 15 4 272 1 66 1 277 1 361 1 139 1 140 1 
75 1 272 1 76 1 66 1 240 1 230 1 15 1 257 1 
75 3 240 1 143 2 50 1 230 4 201 1 15 4 257 1 215 1 272 2 321 1 66 2 361 1 140 1 
75 1 76 1 240 1 143 1 227 1 243 1 230 2 257 1 15 2 272 1 66 1 300 1 
75 1 76 1 1 1 240 1 50 1 230 3 257 1 15 3 201 2 272 1 321 2 66 1 
75 2 234 2 275 1 40 1 
76 1 240 1 144 1 230 1 15 1 257 1 
75 1 272 1 76 1 66 1 240 1 143 1 172 1 230 2 15 2 257 1 
34 1 
75 1 272 1 76 1 66 1 240 1 230 1 15 1 257 1 
75 1 76 1 240 1 143 1 230 3 257 1 15 3 201 1 272 1 66 1 172 1 
215 1 75 1 361 1 140 1 
75 1 66 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 1 329 1 186 2 162 1 251 1 252 1 189 1 25 1 364 1 78 7 283 1 107 1 234 3 34 1 237 1 320 9 223 2 239 9 153 2 377 4 297 1 97 5 381 1 247 1 
160 1 329 1 186 2 162 1 251 1 252 1 189 1 25 1 364 1 78 7 283 1 107 1 234 3 34 1 237 1 320 9 223 2 239 9 153 2 377 4 297 1 97 5 381 1 247 1 
160 2 248 1 229 1 186 2 162 2 212 1 251 1 252 2 25 1 364 2 78 6 107 1 283 1 234 3 83 1 336 1 34 1 237 1 320 9 223 2 239 9 153 2 377 4 226 1 297 1 97 5 381 1 247 1 
160 2 248 1 229 1 186 2 162 2 212 1 251 1 252 2 25 1 364 2 78 6 107 1 283 1 234 3 83 1 336 1 34 1 237 1 320 9 223 2 239 9 153 2 377 4 226 1 297 1 97 5 381 1 247 1 
160 2 248 1 229 1 186 2 162 2 212 1 251 1 252 2 25 1 364 2 78 7 107 1 283 1 234 4 83 1 336 1 34 1 237 1 320 10 223 2 239 10 153 2 377 5 226 1 297 1 97 6 381 1 247 1 
160 2 248 1 229 1 186 1 162 2 212 1 251 1 252 2 364 2 78 4 107 1 283 1 234 2 83 1 336 1 34 1 237 1 320 7 223 2 239 7 153 2 377 3 226 1 297 1 97 4 381 1 247 1 
160 1 34 1 186 2 162 1 223 1 320 4 153 1 239 4 25 1 377 2 364 1 78 3 107 1 234 1 297 1 97 3 381 1 247 1 
248 1 162 1 23 1 223 1 320 2 105 1 252 1 153 1 239 2 364 1 285 1 297 1 97 1 381 1 83 1 247 1 276 1 
237 1 223 2 320 3 252 1 153 2 239 3 377 1 78 1 234 1 297 1 97 2 381 1 247 1 
371 1 342 1 286 1 
342 1 46 1 159 2 
328 2 146 1 318 1 324 2 346 2 187 2 58 2 246 2 
328 2 358 1 207 1 1 1 49 2 346 2 187 2 305 1 50 1 361 1 138 2 253 1 257 1 56 1 57 2 80 1 82 2 58 2 216 1 146 1 318 1 92 1 171 1 37 1 65 1 173 1 273 1 126 1 13 1 341 1 202 1 178 2 324 3 355 1 181 1 246 3 227 1 
328 1 146 1 213 1 324 1 346 1 187 1 58 1 246 1 98 1 151 1 
371 1 359 1 63 1 303 1 342 1 128 1 225 1 324 1 58 1 192 1 246 1 236 1 98 1 111 1 
328 1 371 1 187 1 346 1 303 2 342 1 128 1 225 2 324 1 58 1 192 1 246 1 236 1 98 1 111 1 
100 1 88 1 79 1 225 1 303 1 
371 1 10 1 100 1 88 1 342 1 225 2 303 2 119 1 
88 1 225 1 303 1 
328 1 193 1 100 1 146 1 187 1 346 1 303 1 151 1 225 1 213 1 324 1 58 1 246 1 98 1 
342 1 
371 1 10 1 100 1 88 1 342 1 16 1 225 2 303 2 
371 1 10 1 100 2 218 1 302 1 279 1 89 2 88 2 303 5 294 2 51 1 53 1 67 1 190 1 274 2 93 1 342 1 225 5 350 1 
318 1 286 1 
328 1 132 1 318 2 187 1 346 1 115 1 324 2 58 2 246 2 
354 1 139 1 66 1 
216 1 207 1 358 1 318 1 171 1 138 1 173 1 341 1 56 1 178 1 57 1 324 1 70 1 355 1 246 1 227 1 
327 1 328 1 216 1 358 1 207 1 346 1 171 1 173 1 138 1 139 1 341 1 56 1 69 1 178 1 57 1 324 2 355 1 58 1 227 1 246 2 
327 2 328 4 47 1 132 1 63 1 318 1 346 4 187 1 26 1 124 1 69 1 324 5 58 5 246 5 
328 2 157 1 324 2 346 2 58 2 246 2 98 1 151 1 
327 1 328 3 318 1 187 1 324 3 346 3 58 3 246 3 
328 1 324 1 346 1 58 1 246 1 98 1 151 1 
328 1 132 1 324 1 346 1 187 1 115 1 58 1 246 1 98 1 
328 3 327 1 358 1 207 1 132 1 49 2 187 2 346 3 303 1 50 1 138 1 253 1 257 1 56 1 57 1 82 1 58 3 192 1 236 1 111 1 85 1 216 1 146 1 318 1 171 1 92 1 37 1 65 1 173 1 273 1 126 1 13 1 341 1 176 1 69 1 128 1 225 1 178 1 324 4 355 1 181 1 227 1 246 4 98 1 
328 1 327 1 26 1 63 1 318 1 324 2 346 1 58 2 246 2 
327 2 328 3 85 1 132 1 187 1 346 3 303 1 76 1 342 1 225 1 128 1 69 1 324 3 58 3 192 1 246 3 98 1 236 1 111 1 
327 1 328 2 132 1 187 1 346 2 354 1 139 1 324 2 58 2 246 2 
216 1 207 1 358 1 318 1 171 1 138 1 173 1 341 1 56 1 178 1 57 1 324 1 355 1 246 1 227 1 
216 1 207 1 358 1 318 1 90 1 104 1 138 1 173 1 341 1 56 1 178 1 57 1 324 1 246 1 227 1 
301 1 49 2 139 2 232 1 257 1 80 2 82 4 32 1 59 1 195 1 168 1 170 1 65 1 37 2 11 1 122 1 354 2 273 1 126 1 66 2 13 1 12 1 181 1 182 1 
328 1 157 1 324 1 346 1 58 1 246 1 98 1 236 1 
156 1 118 1 
156 1 118 1 
205 1 228 1 
205 1 228 1 
205 1 228 1 
156 1 259 1 118 1 
156 1 259 1 118 1 
156 1 374 1 118 1 
337 1 376 1 156 2 118 2 205 1 228 1 
156 1 259 1 118 1 
156 1 64 1 118 1 
156 1 64 1 118 1 
156 1 64 1 118 1 
328 2 357 1 21 1 133 1 280 1 103 1 346 2 303 1 163 1 365 1 58 2 166 1 374 1 318 1 118 1 241 1 200 1 340 1 42 1 156 1 225 1 324 2 246 2 99 1 
337 1 357 3 21 2 161 1 2 2 360 1 303 2 118 2 4 1 241 2 348 1 163 2 28 1 365 1 156 2 342 1 225 2 45 1 99 2 
160 1 364 1 162 1 
364 1 162 1 23 1 
160 2 40 1 364 3 284 1 23 1 293 1 
160 1 40 1 364 2 284 1 296 1 23 1 
160 1 40 1 364 2 284 2 23 1 
100 4 303 5 51 2 282 1 311 1 190 1 256 1 54 1 55 2 166 1 33 2 371 1 372 1 10 1 218 3 195 1 89 1 88 1 168 1 294 1 199 1 200 1 340 1 339 2 12 1 274 1 225 5 342 2 46 1 72 1 182 1 159 3 
100 7 250 1 346 1 303 9 51 6 256 1 54 2 55 6 213 1 58 1 166 4 8 1 10 1 218 8 168 3 125 1 12 3 274 2 225 9 324 1 72 2 182 3 328 1 279 1 332 1 187 1 231 5 190 1 79 5 371 1 193 1 372 3 146 1 195 3 88 6 89 2 149 1 151 1 294 2 339 6 342 5 343 1 46 3 246 1 98 1 159 9 
100 2 279 1 303 3 51 2 311 1 54 1 55 2 166 1 371 1 33 1 372 1 218 3 195 1 89 1 168 1 199 1 294 1 339 2 12 1 274 1 342 3 225 3 46 2 72 1 182 1 159 4 
100 3 279 1 250 1 303 4 51 4 311 1 54 1 55 4 166 2 371 1 33 2 8 1 372 2 218 5 195 2 89 1 168 2 294 1 199 1 125 1 339 4 12 2 274 1 342 5 225 4 46 4 72 1 182 2 159 8 
216 1 30 1 286 1 
216 1 369 1 
22 1 
216 1 358 1 56 1 
216 1 73 1 
216 1 56 1 
216 3 358 1 94 1 30 2 56 1 62 1 
7 1 195 1 20 1 301 3 168 1 281 1 37 3 11 2 271 1 242 2 155 1 334 1 80 4 325 1 191 1 82 7 110 1 
7 1 195 1 20 1 301 3 168 1 281 1 37 3 11 2 271 1 242 2 155 1 334 1 80 4 325 1 191 1 82 7 110 1 
7 1 195 1 20 1 301 3 168 1 281 1 37 3 11 2 271 1 242 2 155 1 334 1 80 4 325 1 191 1 82 7 110 1 356 1 
0 1 20 1 301 10 49 2 281 1 165 1 334 5 80 16 110 1 191 2 82 31 31 1 7 1 372 3 195 4 289 1 317 3 168 4 270 1 65 1 37 15 11 5 271 2 242 3 273 1 13 1 12 3 155 2 275 1 325 2 298 4 181 1 183 1 182 3 
0 1 20 1 301 4 49 4 281 1 362 1 334 1 80 5 82 9 110 1 191 1 262 1 195 1 168 1 65 2 37 4 11 3 271 1 273 2 242 2 13 2 155 1 325 1 181 2 
160 1 277 1 209 1 162 1 23 1 252 1 138 1 364 2 78 1 57 1 6 1 238 1 116 1 320 2 223 1 293 1 198 1 239 2 153 1 201 1 295 1 341 1 178 1 68 1 297 1 97 1 130 1 227 1 381 1 247 1 
160 1 19 1 162 1 23 1 252 1 138 1 77 1 364 2 78 2 57 1 6 1 238 1 293 1 116 1 320 3 223 1 198 1 239 3 153 1 201 1 295 1 341 1 178 1 68 1 96 1 97 1 130 1 227 1 381 1 247 1 
160 1 19 1 162 1 23 1 252 1 138 1 77 1 364 2 78 2 57 1 6 1 238 1 116 1 320 2 293 1 198 1 239 2 201 1 295 1 341 1 178 1 97 1 227 1 381 1 247 1 
216 1 60 1 316 1 207 1 238 2 223 1 320 1 116 2 252 2 310 1 153 1 239 1 138 1 201 2 240 1 341 1 56 1 178 1 96 1 57 1 379 1 227 1 300 1 
160 1 19 1 277 1 162 1 23 1 252 1 138 1 364 2 57 1 6 1 238 1 116 1 320 1 223 1 293 1 198 1 239 1 153 1 201 1 295 1 341 1 178 1 68 1 297 1 130 1 227 1 
263 1 
206 3 303 4 51 1 255 3 109 1 58 1 260 1 111 1 10 2 218 1 265 1 114 2 63 1 222 2 121 2 274 1 128 1 225 4 324 1 359 1 24 1 188 5 190 1 141 1 367 1 366 1 192 1 236 1 370 1 371 1 194 3 145 1 88 5 89 1 196 1 294 1 41 2 342 1 44 1 46 2 246 1 98 1 
206 3 359 1 303 4 24 1 188 5 51 1 255 3 190 1 141 1 366 1 367 1 109 1 58 1 192 1 260 1 236 1 111 1 370 1 371 1 10 2 194 3 145 1 218 1 114 2 265 1 89 1 88 5 196 1 63 1 222 2 121 2 294 1 41 2 274 1 342 1 225 4 128 1 324 1 44 1 46 2 246 1 98 1 
206 2 359 1 303 4 188 4 51 1 255 2 164 2 140 1 190 1 366 1 367 1 109 1 58 1 192 1 236 1 370 1 111 1 371 1 194 2 10 2 145 1 218 1 265 1 88 4 89 1 63 1 222 2 319 1 121 2 294 1 274 1 342 1 129 2 225 4 128 1 324 1 246 1 98 1 159 2 
206 2 207 2 303 5 310 1 51 2 255 2 56 1 258 1 57 2 109 1 58 1 111 1 313 1 216 1 10 3 218 2 114 2 265 1 63 1 222 2 121 2 274 1 225 5 178 2 128 1 324 1 72 1 326 1 227 1 359 1 138 2 188 4 140 1 190 1 141 1 367 1 366 1 192 1 236 1 370 1 371 1 194 2 145 1 88 6 89 1 35 1 294 1 41 2 341 1 342 2 46 2 300 1 246 1 98 1 159 2 
206 1 359 1 303 3 188 2 366 1 367 1 109 1 58 1 192 1 236 1 111 1 370 1 10 1 265 1 88 2 63 1 225 3 128 1 16 1 324 1 246 1 98 1 
359 1 303 3 188 3 366 1 367 1 109 1 58 1 192 1 236 1 111 1 370 1 371 1 194 1 10 1 265 1 88 1 63 1 225 3 128 1 342 1 16 1 324 1 246 1 98 1 
206 1 359 1 303 3 188 3 255 1 366 1 367 1 109 1 58 1 192 1 236 1 111 1 370 1 371 1 10 1 194 1 265 1 88 2 63 1 16 1 225 3 128 1 342 1 324 1 246 1 98 1 
206 4 303 5 51 1 255 4 109 1 58 1 260 1 111 1 10 3 218 1 265 1 114 2 63 1 222 2 121 2 274 1 128 1 225 5 16 1 324 1 359 1 24 1 188 6 190 1 141 1 367 1 366 1 192 1 236 1 370 1 371 5 194 4 145 1 338 1 88 7 89 1 196 1 294 1 41 2 342 5 44 1 46 2 246 1 98 1 
206 2 359 1 303 4 188 4 51 1 255 2 140 1 190 1 141 1 366 1 367 1 109 1 58 1 192 1 236 1 370 1 111 1 371 1 194 2 10 2 145 1 218 1 114 2 265 1 88 4 89 1 63 1 222 2 121 2 294 1 41 2 274 1 342 2 225 4 128 1 324 1 46 2 246 1 98 1 159 2 
206 2 359 1 303 4 24 1 188 4 51 1 255 2 190 1 141 1 366 1 367 1 109 1 58 1 192 1 260 1 236 1 111 1 370 1 371 1 194 2 10 2 145 1 218 1 114 2 265 1 88 4 89 1 196 1 63 1 222 2 121 2 294 1 41 2 274 1 342 1 225 4 128 1 324 1 46 2 246 1 98 1 
206 2 359 1 303 4 24 1 188 4 51 1 255 2 190 1 141 1 366 1 367 1 109 1 58 1 192 1 260 1 236 1 111 1 370 1 371 1 194 2 10 2 145 1 218 1 114 2 265 1 88 4 89 1 196 1 63 1 222 2 121 2 294 1 41 2 274 1 342 1 225 4 128 1 324 1 46 2 246 1 98 1 
206 2 359 1 303 4 188 4 51 1 255 2 164 2 190 1 366 1 367 1 109 1 58 1 192 1 236 1 111 1 370 1 371 1 194 2 10 2 145 1 218 1 265 1 88 4 89 1 196 1 63 1 222 2 319 1 121 2 120 1 294 1 39 1 274 1 342 1 129 2 225 4 128 1 324 1 246 1 98 1 159 2 
20 1 301 2 49 2 281 1 139 1 232 1 257 1 80 3 110 1 191 1 82 6 286 1 195 1 168 1 318 2 65 1 11 2 37 3 354 1 273 1 126 1 242 1 66 1 13 1 325 1 181 1 
1 1 301 2 49 4 139 11 253 1 165 1 257 1 334 1 235 1 80 8 81 1 82 14 31 1 144 1 372 2 195 2 317 3 318 1 168 1 169 1 11 1 37 6 65 2 354 4 273 2 126 2 66 11 13 2 12 2 175 1 298 3 181 2 182 1 
328 1 327 1 358 1 207 1 278 1 1 1 346 1 49 2 138 1 253 1 56 1 257 1 57 1 235 1 80 1 58 1 82 2 216 1 315 1 318 1 171 1 65 1 37 1 173 1 354 1 273 1 126 1 13 1 341 1 178 1 69 1 70 1 324 2 355 1 71 1 227 1 246 2 181 1 
249 1 207 1 1 1 301 8 49 6 346 1 210 2 253 1 257 3 56 2 57 3 110 1 58 1 261 2 216 2 217 1 318 2 168 3 171 2 11 4 65 3 173 2 272 2 354 7 126 3 273 3 66 7 13 3 12 2 178 3 69 1 324 3 325 1 355 2 181 3 227 2 182 2 327 1 328 1 19 1 358 2 20 1 135 2 281 1 138 3 139 7 334 4 235 1 80 10 191 1 82 20 372 2 195 3 148 1 92 2 37 10 242 1 341 2 246 3 
328 1 327 1 19 1 207 2 209 1 1 1 75 1 346 1 49 4 305 2 230 1 5 1 138 7 310 1 253 1 27 1 232 1 257 2 56 2 57 8 80 1 58 1 82 2 216 3 373 1 220 1 291 1 65 2 37 1 273 2 126 2 13 2 341 2 178 8 324 1 246 1 227 2 181 2 300 1 
328 1 132 1 301 1 187 1 49 2 346 1 139 1 257 1 235 1 80 1 58 1 82 3 372 1 195 1 147 1 168 1 11 1 65 1 37 2 354 1 66 1 273 1 126 1 13 1 12 1 324 1 181 1 246 1 182 1 
32 1 195 1 301 1 49 2 65 1 354 1 139 1 66 1 126 1 273 1 232 1 13 1 12 1 257 1 334 1 80 2 82 2 181 1 
301 1 168 1 49 2 170 1 11 1 65 1 37 2 354 1 139 1 66 1 126 1 273 1 232 1 13 1 257 1 82 2 181 1 182 1 
301 2 49 2 139 2 232 1 257 1 334 1 80 2 82 4 372 1 195 1 168 1 65 1 37 2 11 1 354 2 273 1 126 1 66 2 12 1 13 1 181 1 182 1 
32 1 195 1 301 1 49 2 230 1 65 1 354 1 139 1 66 1 126 1 273 1 13 1 12 1 257 1 334 1 80 2 82 2 181 1 
301 1 168 1 49 2 170 1 11 1 230 1 65 1 37 2 354 1 139 1 66 1 126 1 273 1 13 1 257 1 82 2 181 1 182 1 
301 2 49 2 230 1 139 2 257 1 334 1 80 2 82 4 372 1 195 1 168 1 65 1 37 2 11 1 354 2 273 1 126 1 66 2 12 1 13 1 181 1 182 1 
301 2 49 2 139 2 257 1 334 1 80 2 82 4 372 1 195 1 168 1 65 1 37 2 11 1 354 2 273 1 126 1 66 2 12 1 13 1 181 1 182 1 
358 1 207 1 1 1 49 2 138 1 253 1 56 1 257 1 57 1 80 1 82 2 216 1 318 1 171 1 92 1 65 1 37 1 173 1 126 1 273 1 13 1 341 1 178 1 324 1 355 1 227 1 246 1 181 1 
358 1 207 1 1 1 49 2 104 1 138 1 253 1 56 1 257 1 57 1 80 1 82 2 216 1 318 1 90 1 375 1 65 1 37 1 173 1 126 1 273 1 13 1 341 1 178 1 324 1 227 1 246 1 181 1 
301 2 49 2 139 2 257 1 334 1 80 2 235 1 82 4 372 1 195 1 168 1 65 1 37 2 11 1 354 2 273 1 126 1 66 2 12 1 13 1 181 1 182 1 
358 1 301 2 209 1 49 2 138 1 139 2 56 1 257 1 334 1 57 1 80 2 82 4 216 1 372 1 195 1 168 1 171 1 92 1 11 1 37 2 65 1 173 1 354 2 272 1 66 2 126 1 273 1 12 1 13 1 341 1 178 1 324 1 355 1 227 1 246 1 181 1 182 1 
328 1 132 1 301 1 102 1 187 1 49 2 346 1 139 1 257 1 334 1 235 1 80 2 58 1 82 3 372 1 195 1 168 1 37 1 65 1 354 1 273 1 126 1 66 1 13 1 12 1 324 1 181 1 246 1 182 1 
74 2 0 1 20 1 208 1 301 8 48 4 49 6 281 1 309 1 362 1 165 3 214 1 334 4 368 1 215 1 80 20 191 1 110 1 82 41 352 1 31 1 372 4 113 1 195 5 317 3 168 5 91 1 172 1 11 4 65 3 37 21 242 1 273 3 378 1 13 3 12 4 177 1 15 1 203 1 325 1 298 4 181 3 182 4 
74 2 0 2 20 1 208 1 301 7 48 4 49 8 281 1 309 1 362 1 165 3 214 1 334 3 368 1 215 1 80 20 191 1 110 1 82 38 352 1 31 1 372 4 113 1 195 5 317 3 168 4 91 1 172 1 11 4 65 4 37 18 242 1 273 4 378 1 13 4 12 4 177 1 15 1 203 1 325 1 298 4 181 4 182 3 
74 1 0 1 20 1 208 1 301 14 48 4 49 4 281 1 309 1 362 1 165 2 214 1 334 7 368 1 215 1 80 27 191 1 110 1 82 52 352 1 31 2 372 7 195 8 317 4 168 8 169 2 172 1 11 7 65 2 37 25 242 1 273 2 378 1 13 2 12 7 177 1 15 1 203 1 325 1 298 4 181 2 182 7 
74 1 301 6 48 2 49 4 362 1 165 1 334 3 215 1 80 9 82 19 352 1 31 1 372 3 113 1 195 3 167 1 317 1 168 3 11 3 65 2 37 10 273 2 13 2 12 3 177 1 15 2 203 1 298 2 181 2 182 3 
74 2 0 2 301 4 208 1 48 4 49 6 309 1 362 1 165 2 334 2 214 1 215 1 80 14 368 1 82 26 352 2 372 3 195 3 317 2 168 2 172 1 11 2 37 12 65 3 273 3 378 1 13 3 12 3 177 1 15 1 203 1 298 2 181 3 182 2 
152 1 337 1 241 1 163 1 21 1 156 1 360 1 45 1 118 1 99 1 
42 1 374 1 
241 1 163 1 21 1 156 1 290 1 197 1 118 1 137 1 99 1 
259 1 180 1 
376 1 101 1 64 1 
337 1 357 2 21 1 161 1 2 1 360 1 303 1 118 1 241 1 348 1 163 1 28 1 365 1 156 1 342 1 225 1 45 1 99 1 
337 1 357 2 21 1 161 1 2 1 360 1 303 1 118 1 241 1 348 1 163 1 28 1 365 1 156 1 342 1 225 1 45 1 99 1 
337 1 357 2 21 1 161 1 2 1 360 1 303 1 118 1 241 1 348 1 163 1 28 1 365 1 156 1 342 1 225 1 45 1 99 1 
376 1 259 1 180 1 
376 1 259 1 180 1 
101 1 64 1 
376 1 101 1 64 1 
280 1 133 1 
328 2 357 1 100 1 21 1 2 1 133 1 280 1 103 1 346 2 303 1 163 1 28 1 166 1 58 2 374 1 318 1 118 1 241 1 200 1 340 1 42 1 156 1 225 1 324 2 245 1 246 2 99 1 
1 1 75 1 49 2 305 2 138 2 253 1 56 1 108 1 257 1 57 2 351 1 235 1 80 1 58 2 82 2 112 1 216 1 291 1 36 1 65 1 37 1 273 1 126 1 13 1 341 1 154 1 178 2 324 2 227 1 246 2 181 1 
160 1 19 1 9 1 209 1 331 1 87 1 162 1 23 1 293 1 198 1 138 2 201 1 364 2 341 1 178 2 68 1 57 2 227 1 6 1 
160 1 288 1 19 1 87 1 162 1 23 1 293 1 198 1 138 1 201 1 364 2 341 1 178 1 68 1 57 1 227 1 6 1 
216 1 9 1 207 1 316 1 138 1 310 1 201 1 341 1 56 1 322 1 178 1 57 1 227 1 300 1 
160 1 19 1 9 1 331 1 87 1 162 1 23 1 293 1 198 1 138 1 201 1 364 2 341 1 178 1 68 1 57 1 227 1 6 1 
174 1 
328 2 207 1 358 1 49 2 346 2 187 2 50 1 138 1 253 1 56 1 257 1 57 1 82 1 58 2 216 1 146 1 318 1 92 1 171 1 37 1 65 1 173 1 126 1 273 1 13 1 341 1 178 1 324 3 355 1 181 1 246 3 227 1 
371 2 313 1 218 1 89 1 294 1 51 2 242 1 339 2 190 1 274 1 55 2 342 4 46 2 72 1 159 4 
371 1 51 1 53 1 218 1 302 1 342 1 286 1 
303 1 51 1 190 1 141 1 371 1 10 1 218 1 114 1 89 1 88 1 294 1 41 1 274 1 342 2 225 1 46 1 159 1 
207 1 209 1 302 1 303 5 3 1 52 2 51 8 53 1 254 1 56 3 55 6 57 3 261 2 312 2 313 1 216 10 10 3 218 9 61 1 266 2 62 1 168 2 117 1 12 2 274 4 14 2 178 3 128 2 225 5 179 1 72 2 131 2 227 3 73 2 182 2 358 3 138 3 190 4 30 2 233 2 369 3 84 2 371 2 372 2 195 2 89 4 88 5 294 4 339 6 341 4 342 8 46 6 204 2 159 12 
208 1 303 1 309 1 52 2 51 5 165 1 190 2 55 5 214 1 368 1 143 1 313 1 314 1 371 2 10 1 372 2 218 8 195 2 88 1 89 2 317 1 168 2 172 1 294 2 339 5 12 2 14 1 274 2 225 1 342 5 72 1 298 1 46 3 182 2 159 6 
328 1 187 1 346 1 303 1 24 1 281 1 52 2 51 2 190 1 213 1 191 1 58 1 193 1 218 2 195 2 146 1 89 1 168 1 151 1 294 1 14 1 274 1 225 1 324 1 325 1 380 1 246 1 98 1 
371 1 294 1 51 1 53 1 218 1 274 1 190 1 302 1 89 1 342 1 
372 2 218 5 195 2 168 2 52 2 51 5 339 5 12 2 14 1 55 5 342 5 261 1 46 5 182 2 159 10 
371 1 10 1 88 1 342 1 225 1 303 1 
207 2 279 1 303 3 308 1 138 4 310 1 51 2 190 1 56 1 258 1 57 4 313 2 216 1 10 2 218 2 61 2 89 2 88 4 35 1 294 2 341 1 274 2 178 4 225 3 179 1 299 1 72 2 227 1 300 1 
241 1 243 1 99 1 
241 1 243 1 99 1 
241 1 353 1 280 1 360 1 99 1 
241 1 243 1 99 1 
241 1 221 1 99 1 
241 1 221 1 99 1 
241 1 221 1 99 1 
241 1 99 1 
156 1 118 1 
20 1 301 2 49 2 281 1 362 1 165 1 214 1 80 4 82 8 110 1 191 1 195 1 317 1 168 1 37 4 65 1 11 2 242 1 273 1 13 1 325 1 298 1 181 1 
20 1 301 3 49 4 281 1 362 1 165 1 214 1 334 1 80 6 191 1 110 1 82 11 31 1 372 1 195 2 317 1 168 1 11 2 37 5 65 2 242 1 273 2 13 2 12 1 325 1 298 2 181 2 344 1 
0 1 20 1 208 1 301 4 49 6 281 1 309 1 362 1 165 1 334 1 214 1 80 9 368 1 191 1 110 1 82 19 372 2 195 3 317 1 168 3 172 1 37 10 65 3 11 3 242 1 273 3 13 3 12 2 325 1 298 1 181 3 344 1 182 2 
0 1 20 1 208 1 301 5 49 6 281 1 309 1 362 1 165 1 334 2 214 1 80 10 368 1 191 1 110 1 82 17 372 2 195 3 317 1 168 2 172 1 37 7 65 3 11 3 242 1 273 3 13 3 12 2 325 1 298 1 181 3 344 1 182 1 
20 1 301 2 49 2 281 1 362 1 165 1 214 1 80 4 82 8 110 1 191 1 195 1 317 1 168 1 37 4 65 1 11 2 242 1 273 1 13 1 325 1 298 1 181 1 
208 1 301 2 49 2 309 1 362 1 165 1 334 1 214 1 80 6 368 1 82 12 372 2 195 2 317 1 168 2 172 1 37 6 65 1 11 1 273 1 13 1 12 2 298 1 181 1 182 2 
0 2 20 1 208 1 301 5 49 8 281 1 309 1 362 1 165 1 334 2 214 1 80 10 368 1 191 1 110 1 82 18 372 2 195 3 317 1 168 2 172 1 37 8 65 4 11 3 242 1 273 4 13 4 12 2 325 1 298 1 181 4 344 1 182 1 
0 2 208 1 301 6 49 8 309 1 362 1 165 1 334 3 214 1 80 9 368 1 82 16 372 3 113 1 195 3 317 1 168 2 172 1 37 7 65 4 11 3 273 4 13 4 12 3 298 1 181 4 182 2 
20 2 195 1 301 6 168 1 281 1 37 4 11 3 334 3 80 3 325 3 82 7 110 1 191 3 
0 2 20 1 208 1 301 4 49 8 281 1 309 1 362 1 165 1 334 1 214 1 80 10 368 1 191 1 110 1 82 18 372 2 113 1 195 3 317 1 168 2 172 1 37 8 65 4 11 3 242 1 273 4 13 4 12 2 325 1 298 1 181 4 182 1 
0 1 195 1 20 1 301 3 168 1 49 4 281 1 37 4 11 2 65 2 242 1 273 2 13 2 334 1 80 4 325 1 82 8 110 1 191 1 181 2 
20 1 195 1 301 2 168 1 281 1 37 3 11 2 242 1 80 3 325 1 110 1 191 1 82 6 286 1 
372 1 195 1 301 2 168 1 49 2 11 1 37 2 65 1 273 1 13 1 12 1 334 1 80 2 82 4 181 1 182 1 344 1 
31 1 372 1 195 1 301 2 317 1 168 1 11 1 37 4 12 1 165 1 334 1 80 3 298 2 82 7 182 1 
0 2 330 1 20 1 301 9 49 4 281 1 334 4 80 11 191 2 110 1 82 23 31 1 372 2 195 3 317 2 168 3 169 1 37 12 11 5 65 2 242 1 273 2 12 2 13 2 175 1 325 2 298 2 181 2 182 2 
82 1 298 1 37 1 
317 1 80 1 82 1 
372 1 195 1 301 3 168 1 49 2 65 1 37 3 11 2 273 1 13 1 12 1 334 1 80 3 261 1 82 6 181 1 344 1 182 1 
208 1 301 2 49 2 309 1 362 1 165 1 334 1 214 1 80 6 368 1 82 12 372 2 195 2 317 1 168 2 172 1 37 6 65 1 11 1 273 1 13 1 12 2 298 1 181 1 182 2 
195 1 301 2 168 1 281 1 37 3 11 1 334 1 80 3 325 1 82 6 191 1 
0 1 330 1 20 1 301 2 49 2 11 1 37 2 65 1 273 1 13 1 334 1 80 1 325 1 191 1 82 3 110 1 181 1 
195 2 301 5 168 2 49 2 281 1 65 1 11 3 37 5 273 1 362 1 13 1 334 2 80 5 380 1 325 2 191 2 82 10 181 1 
195 1 301 1 49 2 65 1 362 1 273 1 13 1 12 1 334 1 80 2 82 2 181 1 
372 1 195 1 301 2 168 1 49 2 11 1 37 2 65 1 362 1 273 1 13 1 12 1 334 1 80 2 82 4 181 1 182 1 
0 1 330 1 113 1 301 2 49 6 37 2 65 3 11 1 362 1 273 3 13 3 334 1 80 1 325 1 82 3 191 1 181 3 
0 2 330 1 20 1 301 12 49 10 281 2 362 1 165 1 334 5 80 16 191 3 110 1 82 34 31 1 372 3 113 1 289 1 195 5 317 3 168 5 37 18 65 5 11 7 242 1 273 5 13 5 12 3 275 1 325 3 298 4 181 5 183 1 344 1 182 3 
26 1 63 1 244 1 318 1 324 1 58 1 246 1 
18 1 26 1 219 1 95 1 63 1 244 1 318 1 324 1 58 1 304 1 246 1 306 1 
310 1 138 1 216 1 207 1 341 1 56 1 178 1 57 1 227 1 300 1 286 1 
327 1 328 1 216 1 358 1 207 1 318 1 346 1 173 1 138 1 341 1 56 1 178 1 57 1 324 2 58 1 355 1 246 2 227 1 
327 1 328 1 216 3 358 2 61 1 318 1 346 2 173 1 138 1 341 1 56 2 178 1 57 1 324 2 131 1 192 1 58 2 355 1 73 1 246 2 227 1 98 1 236 1 
327 1 328 1 216 3 358 2 61 1 318 1 346 2 90 1 173 1 138 2 127 1 341 1 56 2 178 2 57 2 324 2 131 1 192 1 58 2 73 1 246 2 227 1 98 1 236 1 
371 1 216 4 207 1 358 1 61 1 88 1 134 1 303 2 150 1 138 3 127 1 341 1 56 1 30 1 342 1 128 1 225 2 178 3 57 3 369 1 131 1 73 1 227 1 
371 1 216 4 207 1 358 1 61 1 266 1 88 1 303 2 138 3 127 1 341 1 56 1 30 1 342 1 128 1 225 2 178 3 57 3 369 1 131 1 73 1 227 1 
138 1 27 1 341 1 178 1 57 1 227 1 
216 3 19 1 207 2 358 1 373 1 209 1 62 1 220 1 75 1 305 1 307 1 347 1 5 1 138 6 123 1 27 1 341 3 56 2 178 7 57 7 227 2 
209 1 301 2 49 4 346 1 257 2 56 1 57 1 58 1 110 1 216 1 168 1 318 2 171 1 65 2 11 2 173 1 354 1 272 1 126 2 273 2 66 1 13 2 178 1 324 2 325 1 355 1 181 2 227 1 327 1 328 1 358 1 20 1 135 1 281 1 138 1 139 1 235 1 80 3 191 1 82 6 195 1 92 1 37 3 242 1 154 1 341 1 246 2 
100 1 207 1 302 1 303 3 138 1 51 1 53 1 190 2 30 1 233 1 57 1 369 1 312 1 84 1 371 1 216 2 10 1 218 1 266 1 89 2 88 2 294 2 274 2 342 1 225 3 178 1 128 1 179 1 
216 2 358 1 209 1 62 1 117 1 138 2 27 1 341 2 30 1 56 1 178 2 57 2 227 1 
216 1 264 1 207 1 209 1 138 4 310 1 127 1 341 1 56 1 178 4 57 4 300 1 227 1 
17 1 216 1 358 1 61 1 148 1 307 1 347 1 38 1 138 2 341 2 56 1 178 2 57 2 227 1 
138 1 207 1 364 1 341 1 178 1 162 1 57 1 23 1 227 1 6 1 
216 1 19 1 209 1 75 1 138 2 341 1 108 1 56 1 178 2 57 2 227 1 
216 3 264 1 207 1 373 1 61 1 209 1 75 1 5 1 310 1 138 4 341 2 56 2 178 5 57 5 300 1 227 2 
216 3 264 1 207 1 61 1 209 1 75 1 136 1 5 1 310 1 138 4 341 2 56 2 178 5 57 5 300 1 227 2 
327 1 328 1 216 1 358 1 207 1 318 1 346 1 90 1 173 1 138 1 341 1 56 1 178 1 57 1 324 2 58 1 246 2 227 1 
216 1 358 1 61 1 62 1 307 1 347 1 138 1 123 1 341 2 56 1 178 1 57 1 227 1 
287 1 184 1 318 1 268 1 345 1 
287 2 371 1 85 1 184 2 100 1 318 1 269 1 268 2 303 2 321 1 342 1 128 1 225 2 43 1 192 1 98 1 236 1 345 1 111 1 
112 1 184 1 268 1 36 1 351 1 324 1 58 1 246 1 345 1 
43 1 321 1 345 1 
239 3 153 1 78 1 297 1 251 1 97 1 320 3 223 1 381 1 83 1 247 1 
377 1 234 1 97 1 105 1 
97 1 381 1 
97 1 286 1 381 1 247 1 
239 1 153 1 97 1 320 1 223 1 381 1 247 1 
239 1 116 1 252 1 
223 1 320 3 153 1 239 3 363 1 158 1 297 1 97 1 335 1 83 2 381 1 247 1 
239 2 153 1 78 1 186 1 97 1 320 2 223 1 381 1 247 1 
160 1 239 1 153 1 377 1 364 1 107 1 162 1 297 1 97 1 320 1 223 1 
239 1 153 1 297 1 97 1 320 1 223 1 381 1 
239 1 153 1 297 1 320 1 223 1 381 2 247 1 
239 2 153 2 349 1 185 1 29 1 297 1 97 1 320 2 223 2 381 1 
251 1 223 1 320 3 153 1 239 3 377 1 78 2 283 1 234 1 297 1 97 2 381 1 247 1 
160 1 162 1 23 1 223 1 320 2 292 1 293 1 153 1 239 2 364 2 78 1 297 1 97 1 381 1 247 1 
186 1 223 2 320 4 153 2 239 4 25 1 377 1 78 2 234 1 297 1 97 2 381 1 247 1 
239 1 153 1 297 1 97 1 320 1 223 1 381 1 247 1 
320 4 223 1 105 1 239 4 153 1 377 1 363 1 78 2 234 1 97 3 335 1 83 1 381 2 247 2 
239 2 153 1 189 1 78 1 211 1 297 1 97 1 320 2 223 1 381 1 247 1 333 1 
267 1 223 1 320 3 153 1 239 3 363 1 297 1 97 1 335 2 83 2 381 1 247 1 
106 1 86 2 323 1 97 2 
239 1 153 1 142 1 297 1 320 1 223 1 
239 2 153 1 78 1 297 1 97 1 251 1 320 2 223 1 381 1 247 1 
224 1 
239 1 153 1 297 1 97 1 320 1 223 1 381 1 247 1 

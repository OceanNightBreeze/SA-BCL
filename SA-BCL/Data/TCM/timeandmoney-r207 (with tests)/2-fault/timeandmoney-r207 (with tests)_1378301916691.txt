#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
301 9 259 1 190 1 32 3 86 1 111 1 88 1 113 6 284 1 336 2 364 5 245 2 366 1 228 1 16 2 18 1 344 2 270 2 122 9 293 4 140 1 237 1 209 1 210 1 29 1 126 2 143 1 381 2 
301 9 259 1 190 1 32 3 86 1 111 1 88 1 113 6 284 1 336 2 364 5 245 2 366 1 228 1 16 2 18 1 344 2 270 2 122 9 293 4 140 1 237 1 209 1 210 1 29 1 126 2 143 1 381 2 
301 10 259 1 190 1 32 4 86 1 111 1 88 1 113 7 284 1 336 2 364 6 245 2 366 1 228 1 16 2 18 1 344 2 270 2 122 10 293 5 140 1 237 1 209 1 210 1 29 1 126 2 143 1 381 2 
301 7 259 1 190 1 32 2 86 1 111 1 88 1 113 4 284 1 336 2 364 4 245 2 366 1 228 1 16 2 18 1 344 2 270 1 122 7 293 3 140 1 237 1 210 1 29 1 126 2 143 1 381 2 
16 1 301 4 190 1 32 1 86 1 344 1 270 2 122 4 293 2 140 1 88 1 113 3 209 1 364 3 29 1 126 1 245 1 381 1 
16 1 301 2 190 1 160 1 122 2 196 1 140 1 284 1 336 1 364 1 142 1 29 1 126 1 245 1 143 1 381 1 
140 1 301 3 16 2 113 1 190 1 32 1 336 1 210 1 364 2 122 3 29 1 245 2 293 1 
301 9 259 1 190 1 32 3 86 1 111 1 88 1 113 7 336 1 364 5 245 2 16 2 368 1 344 1 270 2 122 9 293 4 140 1 324 1 209 1 210 1 29 1 126 1 381 1 
301 9 259 1 190 1 32 3 86 1 111 1 88 1 113 7 336 1 364 5 245 2 16 2 368 1 344 1 270 2 122 9 293 4 140 1 324 1 209 1 210 1 29 1 126 1 381 1 
331 1 67 1 178 1 
39 2 67 1 124 1 
329 2 268 2 356 1 73 1 303 2 135 2 136 2 62 2 
329 3 214 1 189 1 355 1 108 2 356 1 303 3 7 1 220 1 357 1 131 1 62 3 90 2 306 1 114 1 309 1 115 1 135 2 265 2 337 1 92 1 68 1 136 3 179 1 268 2 95 1 157 1 73 1 45 1 182 2 74 2 251 1 20 2 23 1 78 1 50 2 252 1 82 1 186 1 212 2 256 1 
329 1 268 1 356 1 303 1 54 1 251 1 205 1 135 1 136 1 62 1 
329 1 278 1 159 1 303 1 148 1 251 1 62 1 82 1 177 1 67 1 178 1 313 1 186 1 154 1 
329 1 278 2 268 1 303 1 148 2 251 1 62 1 82 1 177 1 135 1 67 1 178 1 313 1 186 1 136 1 
278 1 106 1 148 1 138 1 327 1 
278 2 106 1 296 1 148 2 67 1 178 1 327 1 118 1 
278 1 106 1 148 1 
329 1 278 1 268 1 356 1 148 1 303 1 251 1 205 1 58 1 62 1 54 1 135 1 327 1 136 1 
67 1 
278 2 106 1 148 2 232 1 67 1 178 1 327 1 118 1 
278 5 156 1 106 2 158 1 107 1 148 5 219 1 75 1 110 2 320 1 234 1 372 2 334 1 49 2 91 1 67 1 178 1 327 2 118 1 
73 1 331 1 
329 2 268 1 73 2 303 2 62 2 253 1 307 1 135 1 136 1 
290 1 250 1 187 1 
329 1 95 1 108 1 73 1 19 1 74 1 182 2 303 1 251 1 357 1 20 2 62 1 131 1 23 1 78 1 252 1 82 1 186 1 337 1 265 2 136 1 212 1 
329 3 203 1 268 1 73 1 303 3 135 3 136 3 62 3 
329 1 303 1 251 1 205 1 135 1 136 1 62 1 
329 1 268 1 253 1 307 1 303 1 251 1 135 1 136 1 62 1 
329 4 214 1 278 1 108 1 356 1 303 4 148 1 7 1 220 1 357 1 131 1 62 4 198 1 90 2 114 1 309 1 115 1 177 1 135 3 265 2 337 1 313 1 68 1 69 1 136 4 179 1 203 1 95 1 268 2 73 1 45 1 182 2 74 1 251 2 20 2 78 1 23 1 50 1 51 1 252 1 253 1 82 2 186 2 212 1 256 1 
329 2 203 1 73 1 303 2 135 1 154 1 206 1 136 1 62 2 
329 3 203 2 278 1 268 1 369 1 148 1 303 3 251 1 62 3 51 1 253 1 82 1 177 1 135 3 67 1 313 1 186 1 69 1 136 3 
329 2 203 1 268 1 303 2 290 1 62 2 253 1 135 2 136 2 187 1 
329 1 95 1 108 1 73 1 74 1 182 2 303 1 251 1 357 1 20 2 62 1 131 1 23 1 78 1 252 1 82 1 186 1 337 1 265 2 136 1 212 1 
329 1 108 1 73 1 74 1 182 2 303 1 251 1 357 1 130 1 20 2 272 1 62 1 131 1 78 1 252 1 82 1 186 1 337 1 265 2 136 1 212 1 
352 1 215 1 279 1 7 1 220 1 61 1 90 2 309 1 115 1 92 2 68 2 201 1 45 1 250 2 290 2 98 1 233 1 235 1 50 4 322 1 167 1 208 1 256 1 187 2 
329 1 207 1 303 1 251 1 135 1 186 1 136 1 62 1 
329 2 108 1 303 2 357 1 62 2 131 1 135 1 337 1 265 2 136 2 203 1 95 1 74 1 182 2 290 1 251 1 20 2 23 1 78 1 51 1 252 1 82 1 186 1 212 1 
329 5 203 2 268 1 354 1 73 1 303 5 206 1 62 5 51 1 64 1 253 1 135 4 154 1 136 4 
329 2 207 1 303 2 251 1 205 1 135 2 136 2 62 2 
249 1 363 1 
249 1 363 1 
248 1 168 1 
248 1 168 1 
248 1 168 1 
249 1 363 1 373 1 
315 1 249 1 363 1 
248 1 249 2 363 2 168 1 83 1 202 1 
249 1 363 1 373 1 
249 1 363 1 373 1 
249 1 363 1 12 1 
249 1 363 1 12 1 
249 1 363 1 12 1 
242 1 367 2 278 2 72 1 249 2 341 1 148 2 221 2 46 3 346 1 139 2 87 1 377 1 185 1 363 2 134 2 83 1 67 1 93 2 
329 2 169 1 278 1 191 1 148 1 303 2 221 1 333 1 62 2 175 1 363 1 134 1 135 2 136 2 93 1 315 1 367 1 249 1 73 1 291 1 46 1 185 1 103 1 351 1 
344 1 126 1 381 1 
126 1 196 1 381 1 
299 1 52 1 344 2 121 1 126 3 196 1 
299 1 188 1 344 1 121 1 126 2 196 1 
299 2 344 1 121 1 126 2 196 1 
169 1 278 5 128 2 106 1 353 1 279 1 148 5 110 1 194 1 333 1 61 1 334 3 283 1 226 1 178 1 67 2 201 1 118 1 39 3 156 2 158 1 372 1 124 1 273 1 295 1 49 1 79 1 208 1 103 1 254 2 327 4 277 2 
169 4 278 9 128 6 106 6 353 1 279 3 4 1 148 9 110 2 194 2 358 1 61 3 334 8 9 1 283 2 310 1 226 3 178 1 67 5 201 3 118 1 39 9 204 5 156 6 119 1 158 1 75 1 138 5 372 2 124 3 49 2 208 3 28 1 254 6 327 7 
169 1 278 3 128 2 279 1 148 3 110 1 194 1 61 1 334 3 283 1 226 1 178 1 67 3 201 1 39 4 156 2 75 1 372 1 124 2 79 1 295 1 49 1 208 1 327 2 254 2 277 1 
169 2 278 4 128 4 279 2 148 4 110 1 194 1 358 1 61 2 334 5 9 1 283 1 310 1 226 2 178 1 67 4 201 2 39 7 156 4 75 1 372 1 124 3 49 1 79 1 295 1 208 2 254 4 327 3 277 2 
331 1 193 1 20 1 
20 1 59 1 
36 1 
20 1 265 1 
165 1 25 1 182 1 193 2 20 3 265 1 
182 1 20 1 265 1 
325 1 20 1 
56 1 340 1 345 1 61 1 50 7 322 2 167 3 208 1 285 2 65 1 101 1 275 1 276 1 68 3 92 4 227 1 153 1 
56 1 340 1 345 1 61 1 50 7 322 2 167 3 208 1 285 2 65 1 101 1 275 1 276 1 68 3 92 4 227 1 153 1 
56 1 330 1 340 1 345 1 61 1 50 7 322 2 167 3 208 1 285 2 65 1 101 1 275 1 276 1 68 3 92 4 227 1 153 1 
56 1 279 3 7 1 195 1 61 4 90 2 285 3 65 1 309 1 263 1 115 1 311 1 312 4 226 3 227 1 68 15 92 16 153 2 201 3 340 2 180 1 343 3 345 2 166 1 50 31 322 5 81 1 167 10 208 4 275 2 101 5 276 1 255 1 256 1 
56 1 7 2 61 1 90 4 285 2 309 2 65 1 115 2 92 5 68 4 227 1 153 1 70 1 289 1 340 1 345 1 50 9 322 3 81 1 167 4 208 1 101 1 275 1 256 2 
171 1 301 2 108 1 3 1 190 1 196 1 197 1 89 1 113 1 336 1 364 1 337 1 245 1 16 1 41 1 181 1 74 1 344 1 122 2 123 1 140 1 52 1 252 1 378 1 29 1 380 1 126 2 212 1 381 1 257 1 
171 1 301 3 108 1 3 1 190 1 196 1 197 1 34 1 359 1 89 1 113 2 336 1 364 1 337 1 245 1 16 1 41 1 44 1 74 1 344 1 122 3 52 1 252 1 378 1 29 1 380 1 126 2 212 1 381 1 257 1 
171 1 301 2 108 1 3 1 190 1 196 1 197 1 359 1 89 1 113 2 336 1 364 1 337 1 41 1 44 1 74 1 344 1 122 2 52 1 252 1 29 1 126 2 212 1 257 1 381 1 
71 1 171 2 16 1 301 1 316 1 108 1 74 1 230 1 357 1 20 1 122 1 197 2 34 1 375 1 252 1 26 1 27 1 336 2 337 1 265 1 245 1 212 1 257 2 
171 1 301 1 108 1 3 1 196 1 197 1 359 1 89 1 336 1 337 1 245 1 16 1 41 1 74 1 344 1 122 1 123 1 140 1 52 1 252 1 378 1 380 1 126 2 212 1 381 1 257 1 
308 1 
329 1 278 5 106 6 145 1 146 2 108 2 57 1 148 5 110 1 281 2 334 2 62 1 283 1 117 1 67 2 287 1 337 1 154 1 118 3 13 4 247 1 156 2 155 1 158 1 74 2 159 1 251 1 20 1 292 2 124 2 24 1 252 1 27 1 82 1 349 1 212 2 300 1 172 2 303 1 357 2 132 2 177 1 178 1 265 1 313 1 266 2 39 2 94 1 316 1 97 2 317 1 321 1 372 1 49 1 186 1 
329 1 278 3 106 2 303 1 148 3 281 1 62 1 117 1 177 1 313 1 154 1 13 2 118 1 94 1 159 1 317 1 232 1 251 1 24 1 82 1 349 1 186 1 
329 1 278 3 106 1 303 1 148 3 62 1 117 1 177 1 313 1 178 1 67 1 154 1 13 3 118 1 94 1 159 1 97 1 317 1 232 1 251 1 24 1 82 1 349 1 186 1 
329 1 278 3 106 2 303 1 148 3 281 1 62 1 117 1 177 1 313 1 178 1 67 1 154 1 118 1 13 3 266 1 94 1 159 1 97 1 317 1 232 1 251 1 24 1 82 1 349 1 186 1 
329 1 278 5 243 1 106 7 145 1 146 2 148 5 110 1 281 4 62 1 334 1 117 1 67 5 154 1 13 6 118 3 156 1 158 1 159 1 251 1 292 2 124 2 24 1 80 1 82 1 349 1 172 2 303 1 85 1 132 2 261 1 177 1 313 1 178 5 266 4 94 1 97 4 317 1 232 1 372 1 321 1 49 1 274 1 186 1 
329 1 278 4 145 1 106 4 146 2 148 4 110 1 281 2 62 1 334 1 117 1 67 2 154 1 13 4 118 2 156 1 158 1 159 1 251 1 292 2 124 2 24 1 82 1 349 1 300 1 172 2 303 1 132 2 177 1 313 1 178 1 266 2 39 2 94 1 97 2 317 1 372 1 321 1 49 1 186 1 
329 1 243 1 278 4 106 4 145 1 146 2 172 2 303 1 148 4 110 1 281 2 132 2 334 1 62 1 261 1 117 1 177 1 67 1 178 1 313 1 154 1 266 2 118 2 13 4 94 1 156 1 158 1 97 2 159 1 317 1 251 1 292 2 321 1 372 1 124 2 24 1 49 1 274 1 82 1 349 1 186 1 
329 1 243 1 278 4 106 4 145 1 146 2 172 2 303 1 148 4 110 1 281 2 132 2 334 1 62 1 261 1 117 1 177 1 67 1 178 1 313 1 154 1 266 2 118 2 13 4 94 1 156 1 158 1 97 2 159 1 317 1 251 1 292 2 321 1 372 1 124 2 24 1 49 1 274 1 82 1 349 1 186 1 
329 1 243 1 278 4 106 4 146 2 303 1 148 4 110 1 281 2 149 2 132 2 334 1 62 1 223 1 360 1 117 1 177 1 67 1 178 1 286 2 313 1 154 1 266 2 118 2 13 4 39 2 94 1 156 1 158 1 97 2 159 1 317 1 251 1 321 1 371 1 372 1 24 1 49 1 82 1 349 1 186 1 
329 1 243 1 278 4 145 1 106 5 146 2 172 2 303 1 148 4 85 1 110 1 281 3 132 2 334 1 62 1 261 1 117 1 177 1 67 1 178 1 313 1 154 1 118 2 13 5 266 3 94 1 156 1 158 1 159 1 97 3 317 1 251 1 292 2 321 1 372 1 124 2 49 1 24 1 274 1 82 1 349 1 186 1 
329 1 243 1 278 4 145 1 106 5 146 2 172 2 303 1 148 4 85 1 110 1 281 3 132 2 334 1 62 1 261 1 117 1 177 1 67 1 178 1 313 1 154 1 118 2 13 5 266 3 94 1 156 1 158 1 159 1 97 3 317 1 251 1 292 2 321 1 372 1 124 2 49 1 24 1 274 1 82 1 349 1 186 1 
329 1 278 4 106 4 146 2 148 4 110 1 281 2 149 2 62 1 334 1 117 1 286 2 67 1 154 1 13 4 118 2 156 1 158 1 159 1 251 1 24 1 82 1 349 1 300 1 303 1 132 2 177 1 313 1 178 1 266 2 39 2 94 1 97 2 317 1 371 1 372 1 321 1 49 1 186 1 
56 1 331 1 7 1 220 1 61 1 90 2 285 1 65 1 309 1 115 1 227 1 92 3 68 3 153 1 45 1 73 2 290 1 250 1 98 1 50 6 322 2 167 2 208 1 275 1 187 1 256 1 
189 1 279 2 218 1 6 1 7 2 220 2 61 1 90 4 309 2 115 2 312 3 226 2 68 6 92 8 201 1 246 1 179 1 180 1 73 1 45 1 250 11 290 11 370 1 343 3 166 1 50 14 322 1 167 2 208 2 348 1 101 1 256 2 187 4 
329 2 189 1 108 1 7 1 332 1 62 2 10 1 115 1 337 1 68 1 203 1 19 1 74 1 73 1 251 1 20 2 23 1 78 1 252 1 82 1 212 1 256 1 303 2 220 1 357 1 131 1 90 2 309 1 135 1 265 2 92 1 136 2 179 1 95 1 45 1 182 2 370 1 50 2 51 1 239 1 186 1 187 1 
329 3 56 1 0 1 189 1 108 3 279 2 7 3 192 2 61 3 62 3 285 1 65 1 115 3 337 2 68 10 153 1 201 2 288 2 203 1 17 2 73 2 74 3 250 7 290 7 251 2 20 4 23 2 78 2 167 8 252 2 208 3 82 2 212 3 256 3 214 2 129 1 303 3 357 1 220 3 131 2 359 1 90 6 35 2 309 3 226 2 135 1 265 4 227 1 92 10 136 3 179 1 95 2 45 3 182 4 231 1 370 1 50 20 322 4 51 1 275 1 101 4 186 2 187 7 
329 1 189 1 108 8 303 1 7 2 357 2 220 2 62 1 199 1 200 1 359 1 63 1 90 4 306 2 152 1 309 2 115 2 135 1 337 2 265 2 92 1 68 1 136 1 203 1 179 1 316 1 181 1 74 7 45 2 98 1 20 3 100 1 50 2 236 1 252 2 27 1 212 8 240 1 256 2 
329 1 279 1 303 1 7 1 220 1 61 1 62 1 90 2 224 1 309 1 115 1 226 1 135 1 92 1 68 2 136 1 201 1 268 1 45 1 290 1 250 1 370 1 50 3 322 1 167 1 253 1 208 1 187 1 256 1 
215 1 279 1 45 1 290 1 250 1 7 1 98 1 220 1 50 2 90 2 167 1 208 1 309 1 101 1 115 1 92 2 187 1 256 1 
45 1 290 1 250 1 7 1 98 1 220 1 61 1 235 1 50 2 90 2 322 1 167 1 309 1 115 1 68 2 201 1 187 1 256 1 
279 1 7 1 220 1 61 1 90 2 309 1 115 1 226 1 92 2 68 2 201 1 45 1 250 2 290 2 98 1 50 4 322 1 167 2 208 1 101 1 256 1 187 2 
215 1 279 1 45 1 290 1 250 1 7 1 220 1 50 2 236 1 90 2 167 1 208 1 309 1 101 1 115 1 92 2 187 1 256 1 
45 1 290 1 250 1 7 1 220 1 61 1 235 1 50 2 236 1 90 2 322 1 167 1 309 1 115 1 68 2 201 1 187 1 256 1 
279 1 7 1 220 1 61 1 90 2 309 1 115 1 226 1 92 2 68 2 201 1 45 1 250 2 290 2 50 4 236 1 322 1 167 2 208 1 101 1 256 1 187 2 
279 1 7 1 220 1 61 1 90 2 309 1 115 1 226 1 92 2 68 2 201 1 45 1 250 2 290 2 50 4 322 1 167 2 208 1 101 1 256 1 187 2 
329 1 214 1 189 1 108 1 303 1 7 1 357 1 220 1 131 1 62 1 90 2 309 1 115 1 265 2 337 1 92 1 68 1 136 1 179 1 95 1 73 1 182 2 74 1 45 1 251 1 20 2 78 1 23 1 50 2 252 1 82 1 186 1 212 1 256 1 
329 1 189 1 108 1 303 1 7 1 357 1 220 1 130 1 131 1 62 1 90 2 309 1 115 1 265 2 337 1 92 1 68 1 136 1 179 1 73 1 182 2 74 1 45 1 251 1 20 2 272 1 78 1 50 2 252 1 82 1 186 1 212 1 256 1 241 1 
279 1 7 1 220 1 61 1 90 2 309 1 115 1 226 1 92 2 68 2 201 1 45 1 250 2 290 2 370 1 50 4 322 1 167 2 208 1 101 1 256 1 187 2 
329 1 214 1 279 1 108 1 303 1 7 1 220 1 192 1 61 1 131 1 62 1 90 2 309 1 115 1 226 1 337 1 265 2 68 2 92 2 201 1 136 1 95 1 181 1 182 2 74 1 45 1 290 2 250 2 251 1 20 2 78 1 23 1 50 4 322 1 167 2 252 1 208 1 101 1 82 1 186 1 212 1 187 2 256 1 
329 1 279 1 303 1 7 1 220 1 61 1 62 1 90 2 309 1 115 1 226 1 135 1 68 1 92 2 201 1 136 1 268 1 45 1 250 1 290 1 370 1 99 1 50 3 167 1 253 1 208 1 101 1 256 1 187 1 
144 1 56 1 279 4 7 3 61 5 60 1 151 1 285 1 65 1 115 3 68 21 201 4 153 1 289 1 343 3 162 1 347 1 77 1 166 3 81 1 167 8 208 5 298 1 256 3 170 2 302 1 174 1 90 6 225 1 309 3 226 4 312 4 92 20 227 1 180 1 319 1 50 41 322 4 141 1 101 4 275 1 55 4 328 1 
56 1 144 1 170 2 279 4 302 1 7 4 60 1 61 4 174 1 90 8 225 1 151 1 285 1 65 1 309 4 115 4 312 4 226 4 227 1 68 18 92 20 153 1 201 3 289 1 180 1 343 3 319 1 162 1 347 1 77 1 166 3 50 38 81 2 322 4 167 7 141 1 208 5 275 1 101 3 298 1 55 4 328 1 256 4 
56 1 144 1 170 1 279 7 302 1 218 2 7 2 60 1 61 8 90 4 225 1 151 1 285 1 65 1 309 2 115 2 312 4 226 7 227 1 68 25 92 27 153 1 201 7 289 1 180 2 343 4 319 1 162 1 77 1 166 2 50 52 81 1 322 7 167 14 141 1 208 8 275 1 101 7 298 1 55 4 328 1 256 2 
170 1 279 3 7 2 61 3 90 4 225 1 151 1 309 2 115 2 312 2 226 3 68 10 92 9 201 3 365 1 289 1 180 1 343 1 347 1 77 2 166 1 50 19 322 3 167 6 208 3 101 3 298 1 55 2 328 1 256 2 
144 1 170 2 279 3 302 1 7 3 60 1 61 2 90 6 225 1 151 1 309 3 115 3 312 2 226 3 68 12 92 14 201 2 289 1 343 2 319 1 162 1 77 1 50 26 166 2 81 2 322 2 167 4 141 1 208 3 101 2 298 1 55 4 328 2 256 3 
84 1 87 1 367 1 249 1 341 1 363 1 134 1 221 1 83 1 93 1 
315 1 175 1 
267 1 367 1 249 1 216 1 363 1 134 1 221 1 76 1 93 1 
242 1 278 1 367 1 72 1 249 1 341 1 148 1 221 1 46 2 346 1 139 1 87 1 185 1 363 1 134 1 83 1 67 1 93 1 
242 1 278 1 367 1 72 1 249 1 341 1 148 1 221 1 46 2 346 1 139 1 87 1 185 1 363 1 134 1 83 1 67 1 93 1 
242 1 278 1 367 1 72 1 249 1 341 1 148 1 221 1 46 2 346 1 139 1 87 1 185 1 363 1 134 1 83 1 67 1 93 1 
125 1 202 1 373 1 
125 1 202 1 373 1 
40 1 12 1 
40 1 12 1 202 1 
291 1 351 1 
329 2 169 1 278 1 191 1 303 2 148 1 221 1 333 1 62 2 175 1 363 1 134 1 135 2 136 2 93 1 315 1 367 1 249 1 73 1 291 1 161 1 346 1 46 1 139 1 103 1 327 1 351 1 
125 1 373 1 
40 1 12 1 202 1 
329 2 189 1 108 2 303 2 7 1 220 1 62 2 199 1 262 1 244 1 150 1 90 2 306 2 309 1 115 1 337 1 265 1 92 1 68 1 179 1 45 1 74 2 370 1 20 1 22 1 100 1 50 2 252 1 102 1 212 2 256 1 
41 1 108 2 181 1 74 2 344 1 196 1 197 1 260 1 374 1 359 1 89 1 52 1 252 1 238 1 378 1 337 1 126 2 212 2 381 1 
41 1 108 1 74 1 344 1 196 1 197 1 260 1 112 1 359 1 89 1 52 1 252 1 378 1 337 1 126 2 212 1 381 1 
316 1 108 1 74 1 357 1 20 1 197 1 374 1 252 1 26 1 27 1 66 1 337 1 265 1 212 1 
41 1 108 1 74 1 344 1 196 1 197 1 260 1 374 1 359 1 89 1 52 1 252 1 238 1 378 1 337 1 126 2 212 1 381 1 
350 1 
156 1 91 1 331 1 67 1 178 1 234 1 334 1 
278 1 145 1 106 1 172 1 148 1 110 1 334 1 67 2 178 1 118 1 39 1 156 1 158 1 292 1 372 1 124 1 49 1 
278 5 2 1 106 5 108 3 279 2 57 1 148 5 5 2 110 4 193 2 59 3 61 2 334 9 8 2 283 2 337 3 67 8 288 2 201 2 118 3 14 2 339 1 156 8 158 4 74 3 20 10 124 6 164 2 25 1 252 4 208 2 254 6 212 3 213 2 128 6 357 1 131 2 91 1 362 2 177 2 226 2 178 2 265 3 39 12 96 1 181 1 182 3 137 1 234 1 372 4 49 4 325 2 326 2 379 1 
144 1 278 1 106 1 128 5 279 2 57 1 302 1 148 1 110 2 61 2 334 8 283 1 264 1 11 1 312 1 226 2 67 5 178 2 201 2 14 1 118 1 39 6 156 5 158 2 343 1 319 1 162 1 372 2 124 3 49 2 166 1 141 1 208 2 254 5 213 2 
329 1 56 1 278 1 356 1 303 1 148 1 110 1 58 1 61 1 334 2 62 1 135 1 153 1 136 1 14 1 156 2 268 1 158 1 251 1 205 1 372 1 48 1 49 1 274 1 208 2 54 1 275 1 213 2 
156 1 158 1 110 1 234 1 372 1 334 1 49 1 91 1 178 1 67 1 
39 10 156 5 128 5 279 2 61 2 124 5 334 5 208 2 226 2 254 5 67 5 288 1 201 2 14 1 213 2 
278 1 106 1 148 1 67 1 178 1 118 1 
278 3 106 4 108 4 57 2 147 1 148 3 110 2 357 2 334 2 283 2 337 1 265 1 287 1 118 2 247 1 156 2 158 1 316 1 74 4 137 1 75 1 20 1 271 1 372 2 49 2 252 1 27 1 379 2 212 4 
329 3 214 1 108 1 356 1 303 3 7 1 220 1 357 1 131 1 62 3 90 2 114 1 309 1 115 1 135 2 337 1 265 2 68 1 136 3 179 1 268 2 95 1 73 1 45 1 74 1 182 2 251 1 20 2 23 1 78 1 50 1 252 1 82 1 186 1 212 1 256 1 
39 4 128 2 156 2 158 1 57 1 110 1 372 1 124 2 334 1 49 1 283 1 285 1 254 2 178 2 67 4 
367 1 109 1 221 1 
367 1 341 1 291 1 318 1 221 1 
367 1 109 1 221 1 
367 1 109 1 221 1 
367 1 376 1 221 1 
367 1 376 1 221 1 
367 1 376 1 221 1 
367 1 221 1 
249 1 363 1 
56 1 7 1 61 1 90 2 285 1 309 1 65 1 115 1 312 1 68 4 92 4 227 1 153 1 289 1 343 1 162 1 50 8 166 1 322 2 167 2 208 1 275 1 256 1 
56 1 279 1 7 2 61 1 90 4 285 1 335 1 65 1 309 2 115 2 312 2 226 1 227 1 68 5 92 6 153 1 289 1 180 1 343 1 162 1 50 11 166 1 322 2 167 3 208 2 275 1 101 1 256 2 
56 1 144 1 279 2 302 1 7 3 61 3 90 6 285 1 335 1 65 1 309 3 115 3 312 1 226 2 227 1 68 10 92 9 153 1 201 2 289 1 343 1 319 1 162 1 50 19 166 1 322 3 81 1 167 4 141 1 208 3 275 1 101 1 256 3 
56 1 144 1 279 2 302 1 7 3 61 2 90 6 285 1 335 1 65 1 309 3 115 3 312 1 226 2 227 1 68 7 92 10 153 1 201 1 289 1 343 1 319 1 162 1 50 17 166 1 81 1 322 3 167 5 141 1 208 3 275 1 101 2 256 3 
56 1 7 1 61 1 90 2 285 1 309 1 65 1 115 1 312 1 68 4 92 4 227 1 153 1 289 1 343 1 162 1 50 8 166 1 322 2 167 2 208 1 275 1 256 1 
144 1 279 2 302 1 7 1 61 2 90 2 309 1 115 1 312 1 226 2 68 6 92 6 201 2 289 1 343 1 319 1 162 1 50 12 166 1 322 1 167 2 141 1 208 2 101 1 256 1 
56 1 144 1 279 2 302 1 7 4 61 2 90 8 285 1 335 1 65 1 309 4 115 4 312 1 226 2 227 1 68 8 92 10 153 1 201 1 289 1 343 1 319 1 162 1 50 18 166 1 322 3 81 2 167 5 141 1 208 3 275 1 101 2 256 4 
144 1 279 3 302 1 7 4 61 2 90 8 309 4 115 4 312 1 226 3 68 7 92 9 201 2 289 1 343 1 319 1 162 1 347 1 50 16 166 1 322 3 81 2 167 6 141 1 208 3 101 3 256 4 
56 1 61 1 50 7 322 3 167 6 208 1 65 2 275 3 101 3 68 4 227 1 92 3 153 3 
56 1 144 1 279 2 302 1 7 4 61 2 90 8 285 1 65 1 309 4 115 4 312 1 226 2 227 1 68 8 92 10 153 1 201 1 289 1 343 1 319 1 162 1 347 1 50 18 166 1 322 3 81 2 167 4 141 1 208 3 275 1 101 1 256 4 
56 1 7 2 61 1 50 8 90 4 322 2 81 1 167 3 285 1 208 1 309 2 65 1 101 1 115 2 275 1 68 4 92 4 227 1 153 1 256 2 
56 1 331 1 61 1 50 6 322 2 167 2 285 1 208 1 65 1 275 1 68 3 227 1 92 3 153 1 
279 1 7 1 61 1 50 4 90 2 322 1 167 2 335 1 208 1 309 1 115 1 101 1 226 1 68 2 92 2 201 1 256 1 
180 1 279 1 343 1 61 1 166 1 50 7 322 1 167 2 208 1 101 1 312 2 226 1 68 4 92 3 201 1 
56 1 279 2 218 1 6 1 7 2 282 1 61 3 90 4 285 1 65 1 309 2 115 2 226 2 312 2 227 1 92 11 68 12 153 2 201 2 180 1 343 2 50 23 322 5 81 2 167 9 208 3 275 2 101 4 256 2 
50 1 312 1 68 1 
50 1 343 1 92 1 
279 1 7 1 61 1 50 6 90 2 322 2 167 3 335 1 208 1 309 1 115 1 101 1 226 1 68 3 92 3 288 1 201 1 256 1 
144 1 279 2 302 1 7 1 61 2 90 2 309 1 115 1 312 1 226 2 68 6 92 6 201 2 289 1 343 1 319 1 162 1 50 12 166 1 322 1 167 2 141 1 208 2 101 1 256 1 
56 1 61 1 50 6 322 1 167 2 208 1 275 1 101 1 92 3 68 3 153 1 
7 1 282 1 50 3 90 2 322 1 81 1 167 2 65 1 309 1 101 1 275 1 115 1 92 1 68 2 227 1 153 1 256 1 
56 1 289 1 7 1 61 2 48 1 50 10 90 2 322 3 167 5 208 2 309 1 115 1 275 2 101 2 92 5 68 5 153 2 256 1 
289 1 279 1 7 1 50 2 90 2 167 1 208 1 309 1 115 1 101 1 92 2 256 1 
289 1 279 1 7 1 61 1 50 4 90 2 322 1 167 2 208 1 309 1 115 1 101 1 226 1 68 2 92 2 201 1 256 1 
289 1 7 3 282 1 347 1 50 3 90 6 81 1 322 1 167 2 309 3 115 3 275 1 101 1 68 2 92 1 153 1 256 3 
56 2 279 3 7 5 282 1 195 1 61 5 90 10 285 1 335 1 65 1 263 1 309 5 115 5 312 4 226 3 227 1 68 18 92 16 153 3 201 3 289 1 180 1 343 3 347 1 166 1 50 34 81 2 322 7 167 12 208 5 275 3 101 5 255 1 256 5 
329 1 73 1 303 1 297 1 154 1 206 1 62 1 
329 1 73 1 303 1 120 1 206 1 62 1 305 1 176 1 297 1 211 1 37 1 154 1 
316 1 108 1 252 1 331 1 74 1 27 1 357 1 337 1 20 1 265 1 212 1 
329 2 203 1 95 1 108 1 73 1 182 2 74 1 303 2 251 1 357 1 20 2 131 1 62 2 78 1 252 1 82 1 135 1 186 1 265 2 337 1 136 2 212 1 
329 2 203 1 95 1 108 1 73 1 182 1 74 1 303 2 251 1 20 1 62 1 78 1 252 1 135 1 265 1 379 1 337 1 38 1 136 1 212 1 
329 2 203 1 108 1 73 1 182 1 74 1 303 2 251 1 20 1 272 1 62 1 78 1 252 1 135 1 265 1 379 1 337 1 38 1 136 1 212 1 
278 2 106 1 108 3 31 1 148 2 357 1 193 1 59 1 131 1 177 1 337 1 265 1 178 1 67 1 15 1 338 1 74 3 182 1 20 4 252 1 325 1 379 1 212 3 
15 1 278 2 106 1 108 3 182 1 74 3 148 2 357 1 193 1 20 4 59 1 131 1 164 1 252 1 325 1 177 1 67 1 178 1 265 1 379 1 337 1 212 3 
200 1 108 1 252 1 74 1 337 1 212 1 
127 1 181 1 43 1 108 7 342 1 74 6 182 1 357 2 20 3 199 1 200 1 359 1 63 1 306 1 25 1 252 3 152 1 265 2 337 2 212 7 240 1 
329 2 56 1 108 1 7 2 192 1 61 1 62 2 150 1 285 1 65 1 115 2 337 1 68 3 153 1 203 1 73 2 74 1 290 1 250 1 251 1 20 2 23 1 78 1 252 1 167 2 208 1 82 1 212 1 256 2 214 1 303 2 220 2 131 1 90 4 35 1 309 2 135 1 265 2 227 1 92 3 136 2 95 1 181 1 45 2 182 2 370 1 50 6 322 2 275 1 186 1 187 1 
278 3 106 2 108 1 148 3 357 1 110 2 193 1 59 1 334 1 91 1 8 1 362 1 177 1 67 1 178 1 118 1 156 1 158 2 74 1 137 1 20 2 234 1 372 2 164 1 49 2 326 1 327 1 212 1 
2 1 181 1 108 2 74 2 182 1 193 1 20 2 200 1 25 1 252 2 265 1 337 1 212 2 
15 1 316 1 181 1 108 4 252 1 74 4 27 1 116 1 357 1 337 1 20 1 265 1 212 4 
127 1 43 1 108 2 74 2 182 1 231 1 173 1 20 1 323 1 252 2 379 1 265 1 337 1 212 2 
41 1 108 1 252 1 74 1 357 1 337 1 126 1 196 1 212 1 381 1 
199 1 22 1 359 1 108 2 181 1 252 1 74 2 337 1 20 1 265 1 212 2 
316 1 108 5 181 1 74 4 357 1 20 3 199 1 63 1 252 2 27 1 116 1 379 1 265 2 337 2 212 5 240 1 
316 1 108 5 181 1 74 4 304 1 357 1 20 3 199 1 252 2 27 1 116 1 379 1 265 2 337 2 212 5 240 1 
329 2 203 1 108 1 73 1 182 2 74 1 303 2 251 1 357 1 20 2 272 1 131 1 62 2 78 1 252 1 82 1 135 1 186 1 265 2 337 1 136 2 212 1 
127 1 43 1 108 1 342 1 74 1 182 1 20 1 25 1 252 2 379 1 265 1 337 1 212 1 
329 1 217 1 303 1 62 1 244 1 262 1 133 1 102 1 104 1 
53 1 269 1 104 1 
133 1 217 1 73 1 33 1 104 1 
278 2 269 1 217 2 73 1 148 2 251 1 33 2 21 1 133 2 53 1 82 1 177 1 67 1 178 1 186 1 327 1 313 1 69 1 104 1 
190 1 331 1 364 1 29 1 
301 1 16 1 190 1 364 1 122 1 29 1 245 1 
301 1 336 1 257 1 
16 1 301 3 190 1 183 1 122 3 47 1 140 1 184 1 284 2 364 1 29 1 245 1 
301 2 16 1 113 1 190 1 364 1 270 1 122 2 29 1 245 1 
140 1 301 1 16 1 344 1 86 1 364 1 122 1 126 1 245 1 381 1 293 1 
140 1 301 1 16 1 364 1 122 1 29 1 245 1 
140 1 301 1 16 1 190 1 122 1 29 2 245 1 
1 1 16 1 301 1 229 1 122 1 140 1 245 1 
16 1 301 3 259 1 190 1 32 1 122 3 111 1 293 1 140 1 113 2 364 2 29 1 245 1 
30 1 16 1 301 2 190 1 344 1 122 2 196 1 140 1 113 1 52 1 364 1 29 1 126 2 245 1 381 1 
140 1 301 4 16 2 113 2 190 1 209 1 32 1 364 2 270 1 122 4 29 1 245 2 293 1 
140 1 301 1 16 1 190 1 364 1 122 1 29 1 245 1 
301 4 16 1 190 2 32 1 122 4 47 1 293 1 294 1 184 1 113 2 284 1 364 3 29 2 245 1 
140 1 301 2 16 1 113 1 368 1 190 1 280 1 364 1 122 2 29 1 163 1 245 1 
16 1 301 3 190 1 122 3 47 1 140 1 184 2 284 2 361 1 364 1 29 1 245 1 
105 1 364 2 222 2 314 1 
140 1 301 1 16 1 42 1 122 1 245 1 
140 1 301 2 16 1 113 1 259 1 190 1 364 1 122 2 29 1 245 1 
258 1 
140 1 301 1 16 1 190 1 364 1 122 1 29 1 245 1 
16 1 301 3 259 1 190 1 122 3 140 1 113 1 284 1 364 1 29 1 245 1 
294 1 32 1 364 1 293 1 
364 1 29 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (37,311) 208 (169,185) (169,185) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (37,311) 208 (169,185) (169,185) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (37,311) 208 (169,185) (169,185) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (37,311) 208 (169,185) (169,185) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
37 1 284 1 8 1 257 1 185 1 208 1 343 1 169 1 17 1 351 1 103 1 
37 1 284 1 8 1 257 1 185 1 208 1 343 1 169 1 17 1 351 1 103 1 
37 1 284 1 8 1 257 1 185 1 208 1 343 1 169 1 17 1 351 1 103 1 
37 1 284 1 8 1 257 1 185 1 208 1 343 1 169 1 17 1 351 1 103 1 
255 2 82 1 61 1 258 3 244 1 17 1 270 2 51 1 156 3 181 1 212 1 284 1 8 1 308 1 101 1 103 4 351 4 289 1 
354 1 353 1 82 1 257 1 61 1 258 1 244 1 343 1 17 1 119 1 284 1 8 1 308 1 48 1 103 2 351 2 
255 1 82 1 258 2 244 1 311 1 343 1 17 1 51 1 156 1 284 2 8 2 103 3 351 3 
255 4 50 1 258 5 343 1 51 3 156 7 181 1 282 1 284 2 212 1 8 2 308 1 101 1 351 9 103 9 289 1 82 1 356 1 61 1 244 1 311 1 17 1 270 2 143 1 
255 4 50 1 258 5 343 1 51 3 156 7 181 1 282 1 284 2 212 1 8 2 308 1 101 1 351 9 103 9 289 1 82 1 356 1 61 1 244 1 311 1 17 1 270 2 143 1 
372 1 65 1 146 1 
372 1 334 2 275 1 
201 2 29 2 26 1 138 1 107 2 335 2 66 2 248 2 
149 2 276 1 25 1 201 2 26 1 5 1 279 1 367 1 371 1 306 2 307 1 29 3 30 1 104 1 81 1 220 1 39 1 295 1 40 2 376 1 310 1 14 1 138 1 190 1 107 3 66 2 248 2 108 1 170 1 314 1 225 1 332 1 319 1 90 1 335 2 91 2 92 2 
252 1 201 1 174 1 29 1 138 1 107 1 335 1 66 1 118 1 248 1 
290 1 178 1 117 1 137 1 65 1 107 1 118 1 322 1 372 1 29 1 20 1 114 1 335 1 325 1 
290 1 178 2 201 1 137 1 65 1 66 1 107 1 118 1 248 1 322 2 372 1 29 1 20 1 335 1 325 1 
322 1 178 1 75 1 125 1 16 1 
322 2 178 2 293 1 372 1 125 1 16 1 176 1 65 1 
322 1 178 1 16 1 
252 1 178 1 201 1 138 1 66 1 107 1 118 1 248 1 322 1 369 1 174 1 29 1 125 1 335 1 
372 1 
322 2 178 2 293 1 372 1 125 1 164 1 16 1 65 1 
177 1 178 5 12 2 293 1 241 2 267 1 268 1 207 1 16 2 65 1 85 1 231 1 322 5 123 1 372 1 173 1 125 2 100 1 274 2 
26 1 146 1 
201 1 26 2 107 2 66 1 248 1 234 1 29 2 335 2 127 1 
23 1 374 1 131 1 
220 1 295 1 40 1 14 1 26 1 190 1 107 1 367 1 328 1 108 1 306 1 307 1 29 1 332 1 30 1 91 1 
220 1 295 1 201 1 40 1 365 1 14 1 190 1 66 1 107 2 367 1 108 1 306 1 307 1 316 1 332 1 29 2 30 1 335 1 91 1 131 1 
117 1 201 4 365 2 26 1 278 1 165 1 66 4 107 5 248 1 234 1 316 1 29 5 335 5 266 1 
211 1 201 2 174 1 29 2 107 2 335 2 66 2 118 1 
201 3 365 1 29 3 26 1 107 3 335 3 66 3 248 1 
201 1 174 1 29 1 107 1 335 1 66 1 118 1 
234 1 201 1 29 1 107 1 335 1 66 1 118 1 127 1 248 1 
0 1 149 1 276 1 178 1 25 1 201 3 365 1 26 1 5 1 118 1 367 1 322 1 371 1 234 1 306 1 307 1 29 4 30 1 9 1 325 1 104 1 290 1 220 1 39 1 295 1 40 1 376 1 14 1 137 1 190 1 138 1 107 4 66 3 108 1 248 2 170 1 225 1 316 1 332 1 20 1 319 1 335 3 91 1 92 2 
117 1 201 1 29 2 365 1 26 1 278 1 107 2 335 2 66 1 
290 1 178 1 201 3 365 2 137 1 66 3 107 3 118 1 192 1 248 1 322 1 234 1 316 1 372 1 29 3 20 1 9 1 335 3 325 1 
23 1 201 2 365 1 66 2 107 2 248 1 234 1 29 2 335 2 131 1 
220 1 295 1 40 1 14 1 26 1 190 1 107 1 108 1 367 1 306 1 307 1 29 1 332 1 30 1 91 1 
220 1 295 1 40 1 106 1 14 1 26 1 107 1 367 1 283 1 306 1 307 1 29 1 332 1 30 1 91 1 
149 4 276 1 23 2 256 1 24 1 25 1 27 1 345 1 52 1 371 1 96 1 131 2 218 1 374 2 39 1 376 1 168 1 359 1 314 2 225 1 319 2 89 1 197 1 92 2 
290 1 211 1 201 1 29 1 107 1 335 1 66 1 118 1 
262 1 71 1 
262 1 71 1 
140 1 109 1 
140 1 109 1 
140 1 109 1 
262 1 71 1 239 1 
162 1 262 1 71 1 
140 1 109 1 262 2 77 1 56 1 71 2 
262 1 71 1 239 1 
262 1 71 1 239 1 
262 1 63 1 71 1 
262 1 63 1 71 1 
262 1 63 1 71 1 
178 1 201 2 26 1 322 1 210 1 213 1 29 2 262 1 162 1 219 1 242 1 312 1 246 1 247 1 66 2 107 2 360 1 42 1 250 1 144 1 88 1 335 2 71 1 147 1 
292 1 219 1 178 2 242 2 322 2 360 2 87 1 6 1 54 1 250 2 213 3 372 1 262 2 144 2 309 1 318 1 56 1 323 2 71 2 
61 1 308 1 289 1 
119 1 61 1 308 1 
119 1 141 1 83 1 308 3 160 1 289 2 
119 1 83 1 308 2 285 1 160 1 289 1 
119 1 83 2 308 2 160 1 289 1 
178 5 203 1 260 1 231 1 52 1 322 5 96 1 123 3 372 2 125 4 98 2 128 1 11 1 12 1 241 1 293 1 296 1 312 1 16 1 168 1 65 1 358 1 85 2 313 1 88 1 274 1 334 3 333 2 197 1 275 1 199 2 147 1 
178 9 179 1 231 1 52 3 322 9 96 3 123 8 97 1 75 5 372 5 125 7 98 6 128 1 36 1 38 1 59 1 12 2 293 1 241 2 267 1 296 2 16 6 168 3 65 1 358 2 85 6 313 3 139 1 172 5 274 2 334 9 197 3 275 3 199 6 147 4 
178 3 203 1 52 1 322 3 96 1 123 3 372 3 125 2 98 2 11 1 12 1 241 1 267 1 296 1 65 1 358 1 168 1 313 1 85 2 274 1 333 1 334 4 197 1 275 2 147 1 199 2 
178 4 179 1 203 1 52 2 322 4 96 2 123 5 97 1 372 4 125 3 98 4 11 1 12 1 241 1 267 1 296 1 65 1 358 1 168 2 313 2 85 4 139 1 274 1 334 7 333 2 197 2 275 3 199 4 147 2 
146 1 337 1 367 1 
298 1 367 1 
254 1 
14 1 30 1 367 1 
342 1 367 1 
14 1 367 1 
214 1 14 1 30 1 259 1 337 2 367 3 
240 1 149 7 363 1 256 2 105 1 243 1 303 2 168 1 223 1 52 1 236 1 314 4 142 1 319 3 89 3 161 1 324 1 
240 1 149 7 363 1 256 2 105 1 243 1 303 2 168 1 223 1 52 1 236 1 314 4 142 1 319 3 89 3 161 1 324 1 
240 1 149 7 363 1 256 2 105 1 243 1 303 2 168 1 223 1 41 1 52 1 236 1 314 4 142 1 319 3 89 3 161 1 324 1 
149 6 276 1 363 1 256 1 2 1 25 1 303 1 346 1 368 1 124 1 216 1 33 1 102 1 324 1 240 1 105 1 376 1 243 1 223 2 314 3 225 1 319 3 89 2 92 2 
240 1 149 9 363 1 276 2 256 3 25 2 376 2 243 1 303 2 168 1 223 1 180 1 52 1 194 1 236 1 142 1 314 5 225 2 33 1 89 4 319 4 161 1 324 1 92 4 
341 1 258 1 343 1 206 1 156 1 119 1 53 1 284 1 122 1 8 1 306 1 74 1 307 1 308 2 80 1 351 2 103 2 289 1 82 1 61 1 40 1 84 1 244 1 64 1 17 1 224 1 141 1 69 1 332 1 91 1 
258 1 343 1 206 1 156 2 119 1 53 1 28 1 284 1 122 1 8 1 306 1 74 1 307 1 308 2 287 1 351 3 103 3 35 1 289 1 82 1 61 1 40 1 84 1 244 1 64 1 224 1 141 1 69 1 332 1 91 1 
82 1 61 1 40 1 84 1 258 1 244 1 206 1 343 1 156 2 119 1 53 1 141 1 28 1 122 1 306 1 307 1 74 1 332 1 69 1 308 2 287 1 91 1 103 2 351 2 289 1 
343 2 367 1 284 1 8 1 306 1 307 1 74 2 351 1 103 1 35 1 58 1 295 1 40 1 84 2 14 1 377 1 18 1 43 1 69 2 113 1 332 1 195 1 91 1 
341 1 343 1 206 1 119 1 53 1 28 1 284 1 122 1 8 1 306 1 74 1 307 1 308 2 351 1 103 1 289 1 61 1 40 1 84 1 64 1 17 1 224 1 141 1 69 1 332 1 91 1 
129 1 
49 1 344 1 261 1 155 2 306 2 307 1 264 2 12 1 60 1 14 1 16 6 65 1 107 1 110 2 19 1 20 1 229 1 274 1 114 1 275 2 72 2 178 5 117 1 118 1 231 1 367 1 322 5 280 1 370 1 233 2 123 2 372 2 29 1 79 1 325 1 290 1 135 2 293 3 241 1 295 2 136 1 40 2 296 1 137 1 191 1 378 2 377 1 85 2 332 1 44 4 334 2 195 1 335 1 336 1 91 2 
290 1 178 3 293 1 136 1 60 1 117 1 137 1 164 1 16 2 107 1 118 1 322 3 280 1 110 1 29 1 20 1 229 1 44 2 79 1 114 1 335 1 325 1 
290 1 178 3 293 1 136 1 60 1 117 1 137 1 164 1 16 1 65 1 107 1 118 1 155 1 322 3 280 1 372 1 29 1 20 1 229 1 44 3 79 1 114 1 335 1 325 1 
178 3 117 1 118 1 155 1 280 1 322 3 29 1 372 1 79 1 325 1 290 1 135 1 293 1 60 1 136 1 137 1 164 1 16 2 107 1 65 1 110 1 20 1 44 3 229 1 114 1 335 1 
72 2 339 1 321 1 178 5 117 1 3 1 118 1 231 1 155 4 280 1 322 5 233 2 123 1 372 5 29 1 126 1 264 2 79 1 130 1 325 1 290 1 12 1 135 4 241 1 60 1 136 1 293 3 137 1 164 1 16 7 65 5 107 1 378 2 85 1 110 4 19 1 20 1 44 6 229 1 274 1 114 1 335 1 336 1 275 2 
49 1 155 2 264 2 12 1 60 1 16 4 107 1 65 1 110 2 19 1 20 1 229 1 274 1 114 1 275 2 72 2 178 4 117 1 118 1 231 1 322 4 280 1 123 1 233 2 29 1 372 2 79 1 325 1 290 1 135 2 241 1 136 1 293 2 137 1 378 2 85 1 44 4 334 2 335 1 336 1 
72 2 339 1 178 4 117 1 3 1 118 1 155 2 231 1 280 1 322 4 233 2 123 1 372 1 29 1 264 2 79 1 130 1 325 1 290 1 12 1 135 2 293 2 60 1 136 1 241 1 137 1 16 4 65 1 107 1 378 2 85 1 110 2 19 1 20 1 44 4 229 1 274 1 114 1 335 1 336 1 275 2 
72 2 339 1 178 4 117 1 3 1 118 1 155 2 231 1 280 1 322 4 233 2 123 1 372 1 29 1 264 2 79 1 130 1 325 1 290 1 12 1 135 2 293 2 60 1 136 1 241 1 137 1 16 4 65 1 107 1 378 2 85 1 110 2 19 1 20 1 44 4 229 1 274 1 114 1 335 1 336 1 275 2 
178 4 117 1 230 1 118 1 155 2 231 1 280 1 322 4 281 1 123 1 372 1 29 1 264 2 79 1 130 1 325 1 290 1 12 1 135 2 355 2 293 2 60 1 136 1 241 1 137 1 16 4 65 1 107 1 378 2 85 1 329 1 110 2 361 2 20 1 44 4 229 1 274 1 334 2 114 1 335 1 336 1 
72 2 339 1 178 4 117 1 3 1 118 1 231 1 155 3 280 1 322 4 233 2 123 1 372 1 29 1 126 1 264 2 79 1 130 1 325 1 290 1 12 1 135 3 293 2 241 1 60 1 136 1 137 1 16 5 65 1 107 1 378 2 85 1 110 3 19 1 20 1 44 5 229 1 274 1 114 1 335 1 336 1 275 2 
72 2 339 1 178 4 117 1 3 1 118 1 231 1 155 3 280 1 322 4 233 2 123 1 372 1 29 1 126 1 264 2 79 1 130 1 325 1 290 1 12 1 135 3 293 2 241 1 60 1 136 1 137 1 16 5 65 1 107 1 378 2 85 1 110 3 19 1 20 1 44 5 229 1 274 1 114 1 335 1 336 1 275 2 
49 1 155 2 264 2 12 1 355 2 60 1 16 4 107 1 65 1 110 2 361 2 20 1 229 1 274 1 114 1 178 4 117 1 118 1 231 1 322 4 280 1 123 1 29 1 372 1 79 1 325 1 290 1 135 2 241 1 136 1 293 2 137 1 378 2 85 1 329 1 44 4 334 2 335 1 336 1 
149 6 23 1 276 1 363 1 256 2 25 1 303 1 26 2 27 1 52 1 371 1 236 1 161 1 131 1 240 1 374 1 39 1 376 1 168 1 142 1 314 3 225 1 89 2 319 3 146 1 92 2 
1 1 149 11 276 2 23 3 256 1 25 2 202 1 26 1 154 1 5 1 118 1 94 1 52 1 371 1 96 1 215 1 99 1 216 2 102 2 131 8 374 8 39 2 376 2 243 1 168 2 313 2 314 6 225 2 89 2 319 5 197 2 380 1 92 4 
1 1 149 2 23 1 276 1 201 1 25 1 365 1 26 1 5 1 367 1 121 1 371 1 306 1 307 1 29 2 76 1 30 1 81 1 220 1 295 1 39 1 40 1 376 1 62 1 14 1 190 1 107 2 66 1 108 1 328 1 314 1 225 1 316 1 332 1 319 1 335 1 91 1 92 2 
1 1 149 20 256 4 201 1 303 1 5 1 52 3 96 2 306 3 307 2 159 1 161 1 57 1 104 2 220 2 14 2 221 2 66 1 107 3 168 3 313 2 108 2 314 10 225 3 316 1 319 10 320 2 363 1 276 3 23 7 25 3 365 1 73 2 26 2 367 2 28 1 371 3 236 1 29 3 30 2 32 2 131 7 240 1 81 1 374 7 295 1 39 3 40 3 376 3 243 4 190 2 142 1 332 2 89 8 46 1 335 1 197 2 91 3 92 6 
149 2 276 2 201 1 25 2 365 1 277 1 4 1 5 1 27 1 367 3 28 1 371 2 235 1 306 8 307 2 29 1 80 1 133 1 81 1 375 1 295 2 39 2 163 1 40 7 376 2 14 2 107 1 66 1 377 1 314 1 225 2 226 1 332 2 319 1 195 1 335 1 90 2 91 8 92 4 
1 1 149 3 23 1 276 1 256 1 25 1 201 1 52 1 371 1 234 1 96 1 29 1 131 1 187 1 374 1 39 1 376 1 66 1 107 1 168 1 313 1 248 1 314 1 225 1 89 1 319 2 335 1 197 1 92 2 
149 2 23 1 276 1 374 1 39 1 25 1 376 1 243 1 168 1 27 1 345 1 371 1 314 2 225 1 89 1 197 1 92 2 131 1 
218 1 149 2 23 1 276 1 374 1 256 1 39 1 25 1 376 1 27 1 52 1 371 1 96 1 225 1 89 1 319 2 92 2 131 1 
149 4 276 1 23 2 256 1 25 1 27 1 52 1 371 1 96 1 131 2 374 2 39 1 376 1 243 1 168 1 313 1 314 2 225 1 89 2 319 2 197 1 92 2 
149 2 23 1 276 1 374 1 163 1 39 1 25 1 376 1 243 1 168 1 345 1 371 1 314 2 225 1 89 1 197 1 92 2 131 1 
218 1 149 2 23 1 276 1 374 1 256 1 163 1 39 1 25 1 376 1 52 1 371 1 96 1 225 1 89 1 319 2 92 2 131 1 
149 4 276 1 23 2 256 1 25 1 52 1 371 1 96 1 131 2 374 2 39 1 163 1 376 1 243 1 168 1 313 1 314 2 225 1 89 2 319 2 197 1 92 2 
149 4 276 1 23 2 256 1 25 1 52 1 371 1 96 1 131 2 374 2 39 1 376 1 243 1 168 1 313 1 314 2 225 1 89 2 319 2 197 1 92 2 
149 2 276 1 25 1 26 1 5 1 367 1 371 1 306 1 307 1 29 1 30 1 104 1 81 1 220 1 295 1 39 1 40 1 376 1 14 1 190 1 107 1 108 1 314 1 225 1 332 1 319 1 91 1 92 2 
149 2 276 1 25 1 26 1 5 1 367 1 371 1 283 1 306 1 307 1 29 1 30 1 81 1 220 1 295 1 39 1 106 1 40 1 376 1 14 1 107 1 314 1 225 1 332 1 70 1 319 1 91 1 92 2 
1 1 149 4 276 1 23 2 256 1 25 1 52 1 371 1 96 1 131 2 374 2 39 1 376 1 243 1 168 1 313 1 314 2 225 1 89 2 319 2 197 1 92 2 
149 4 23 2 276 1 256 1 25 1 73 1 52 1 367 1 371 1 96 1 306 1 307 1 29 1 30 1 80 1 131 2 104 1 374 2 220 1 39 1 40 1 376 1 243 1 14 1 190 1 168 1 107 1 313 1 108 1 314 2 225 1 332 1 319 2 89 2 197 1 91 1 92 2 
1 1 149 3 276 1 23 1 25 1 201 1 52 1 371 1 96 1 234 1 29 1 238 1 131 1 374 1 39 1 376 1 243 1 66 1 107 1 168 1 313 1 248 1 314 2 225 1 319 1 89 1 335 1 197 1 92 2 
338 1 149 33 116 1 363 1 276 4 256 3 2 2 25 4 303 1 151 1 205 1 304 1 52 4 96 3 236 1 7 1 237 1 216 2 33 2 349 1 161 1 102 2 240 1 10 1 376 4 243 3 297 1 168 4 313 3 272 3 194 1 142 1 314 17 225 4 175 1 89 6 319 16 251 1 299 1 197 3 92 8 
149 26 116 1 276 3 256 2 2 2 25 3 151 1 205 1 232 1 304 1 52 2 96 2 7 1 237 1 216 2 33 2 349 1 102 2 10 2 376 3 243 2 168 3 313 3 272 4 194 1 314 14 225 3 175 1 89 4 319 12 251 1 299 2 197 3 92 6 
149 37 116 1 363 1 276 4 256 3 2 3 25 4 303 1 151 1 205 1 232 1 304 1 52 4 96 3 236 1 7 1 237 1 216 3 34 1 33 2 349 1 161 1 102 3 240 1 10 2 376 4 243 4 297 1 168 4 313 3 272 4 194 1 142 1 314 19 225 4 175 1 89 7 319 18 251 1 299 1 197 3 92 8 
149 35 116 1 363 1 276 4 256 2 2 2 25 4 303 1 151 1 205 1 232 1 304 1 52 4 96 3 236 1 7 1 237 1 216 2 33 2 349 1 161 1 102 2 240 1 10 1 376 4 243 3 297 1 168 4 313 3 272 4 194 1 142 1 314 18 225 4 175 1 89 5 319 17 251 1 299 1 197 3 92 8 
149 28 116 1 276 3 256 3 2 2 25 3 151 1 205 1 232 1 304 1 52 3 96 3 7 1 237 1 216 2 33 2 349 1 102 2 10 1 376 3 243 3 168 3 313 3 272 4 194 1 314 14 225 3 175 1 89 6 319 14 251 1 299 1 197 3 92 6 
182 1 292 1 360 1 250 1 262 1 242 1 144 1 318 1 56 1 71 1 
162 1 247 1 
364 1 200 1 360 1 111 1 250 1 262 1 242 1 144 1 71 1 
330 1 239 1 
77 1 63 1 326 1 
292 1 219 1 178 1 242 1 322 1 360 1 6 1 54 1 250 1 213 2 372 1 262 1 144 1 309 1 318 1 56 1 323 1 71 1 
292 1 219 1 178 1 242 1 322 1 360 1 6 1 54 1 250 1 213 2 372 1 262 1 144 1 309 1 318 1 56 1 323 1 71 1 
292 1 219 1 178 1 242 1 322 1 360 1 6 1 54 1 250 1 213 2 372 1 262 1 144 1 309 1 318 1 56 1 323 1 71 1 
330 1 77 1 239 1 
330 1 77 1 239 1 
63 1 326 1 
77 1 63 1 326 1 
210 1 42 1 
178 1 201 2 26 1 322 1 95 1 210 1 213 1 29 2 125 1 262 1 309 1 323 1 162 1 242 1 312 1 246 1 247 1 107 2 66 2 360 1 42 1 250 1 144 1 88 1 335 2 71 1 147 1 
1 1 149 2 276 1 25 1 277 1 5 1 367 1 371 1 235 1 306 2 307 1 29 2 265 1 31 1 81 1 39 1 40 2 376 1 14 1 107 2 193 1 314 1 225 1 332 1 228 1 319 1 335 2 90 2 91 2 92 2 22 1 
13 1 61 1 40 2 302 1 204 1 64 1 206 1 119 1 141 1 28 1 122 1 306 2 307 1 74 1 332 1 308 2 80 1 91 2 289 1 
61 1 40 1 302 1 64 1 206 1 119 1 141 1 28 1 68 1 122 1 306 1 74 1 307 1 332 1 308 2 91 1 289 1 
295 1 150 1 40 1 14 1 204 1 377 1 367 1 18 1 306 1 307 1 74 1 332 1 195 1 91 1 
13 1 61 1 40 1 302 1 204 1 64 1 206 1 119 1 141 1 28 1 122 1 306 1 307 1 74 1 332 1 308 2 91 1 289 1 
379 1 
123 1 372 1 173 1 100 1 65 1 146 1 85 1 
72 1 178 1 231 1 322 1 123 1 233 1 372 2 12 1 241 1 293 1 16 1 65 1 85 1 19 1 274 1 334 1 275 1 
253 2 340 1 300 2 342 2 93 1 152 2 52 2 96 2 306 3 307 4 214 1 98 6 100 1 12 4 14 3 221 2 16 5 357 2 65 2 168 2 313 2 362 2 173 1 112 2 274 4 275 6 178 5 231 4 367 10 322 5 123 9 183 1 372 8 30 3 80 1 134 2 241 4 295 1 293 3 40 3 296 2 137 2 245 1 191 1 85 8 298 3 86 1 332 3 334 12 197 2 91 3 145 2 337 2 199 6 
178 1 300 2 2 1 231 2 304 1 52 2 322 1 123 8 96 2 372 5 98 5 237 1 216 1 349 1 102 1 350 1 12 2 293 1 241 2 296 1 191 1 357 1 16 1 168 2 65 2 85 5 313 2 331 1 175 1 274 2 334 6 251 1 197 2 199 5 275 3 
252 1 339 1 363 1 178 1 300 2 201 1 153 1 118 1 231 1 52 1 322 1 369 1 123 2 236 1 29 1 240 1 12 1 241 1 357 1 138 1 107 1 168 2 66 1 85 2 248 1 174 1 274 1 335 1 
12 1 241 1 65 1 231 1 85 1 123 1 173 1 372 1 100 1 274 1 
300 2 221 1 357 1 168 2 313 2 85 5 52 2 96 2 123 5 372 5 98 5 334 10 197 2 199 5 275 5 
322 1 178 1 293 1 372 1 16 1 65 1 
340 2 178 3 93 1 344 1 261 1 231 1 367 1 322 3 123 2 157 1 306 4 307 1 12 2 241 2 295 2 293 2 267 1 40 4 296 2 14 1 16 4 191 2 377 1 85 2 273 1 332 1 274 2 195 1 91 4 
149 1 276 1 25 1 201 2 26 1 5 1 367 1 371 1 306 1 307 1 29 3 30 1 104 1 220 1 295 1 39 1 40 1 376 1 14 1 138 1 190 1 107 3 66 2 248 2 108 1 170 1 225 1 332 1 319 1 335 2 91 1 92 2 
12 1 241 1 296 1 303 1 191 1 65 2 85 2 231 1 123 1 372 4 98 2 274 1 334 4 199 2 275 2 
250 1 144 1 271 1 
292 1 42 1 250 1 144 1 348 1 
250 1 144 1 271 1 
250 1 144 1 271 1 
305 1 250 1 144 1 
305 1 250 1 144 1 
305 1 250 1 144 1 
250 1 144 1 
262 1 71 1 
240 1 149 8 276 2 363 1 256 2 25 2 376 2 303 1 243 1 168 1 52 1 236 1 314 4 142 1 225 2 319 4 89 3 33 1 161 1 92 4 
240 1 149 6 363 1 256 2 303 1 168 1 52 1 142 1 236 1 314 3 319 3 89 2 161 1 146 1 
149 4 276 1 256 1 25 1 376 1 243 1 167 1 168 1 313 1 52 1 96 1 314 2 225 1 319 2 89 2 197 1 92 2 
149 2 314 1 2 1 216 1 319 1 102 1 
149 25 363 2 276 1 256 4 25 1 202 1 303 1 153 1 52 5 96 2 236 2 215 1 216 2 99 1 33 1 161 1 102 2 240 2 376 1 243 4 168 5 313 2 314 13 142 1 225 1 319 12 89 8 197 2 92 2 
149 1 216 1 319 1 
149 1 314 1 102 1 
149 6 276 1 256 2 25 1 376 1 243 1 221 1 167 1 168 1 313 1 52 1 96 1 314 3 225 1 319 3 89 3 197 1 92 2 
149 12 276 1 256 1 2 1 25 1 52 2 304 1 96 2 237 1 216 1 349 1 102 1 376 1 243 1 168 2 313 2 194 1 314 6 225 1 175 1 319 6 251 1 89 2 197 2 92 2 
240 1 149 6 363 1 256 1 243 1 168 1 52 1 236 1 314 3 319 3 89 2 
240 1 149 3 363 1 276 1 256 1 25 1 376 1 243 1 314 1 142 1 225 1 124 1 89 2 319 2 33 1 161 1 92 2 
240 2 149 10 276 1 363 2 256 3 25 1 376 1 243 2 153 1 168 2 52 2 194 1 314 5 236 1 225 1 89 5 319 5 92 2 
149 2 276 1 25 1 376 1 243 1 168 1 194 1 314 2 225 1 89 1 197 1 92 2 
149 4 276 1 256 1 25 1 376 1 243 1 168 1 313 1 52 1 96 1 194 1 314 2 225 1 319 2 89 2 197 1 92 2 
240 1 149 3 276 3 363 1 256 1 25 3 376 3 243 1 297 1 194 1 314 1 225 3 124 1 33 1 319 2 89 2 92 6 
149 15 276 4 363 2 256 3 2 1 25 4 153 1 346 1 52 2 236 1 124 1 216 1 33 1 102 1 161 1 240 2 376 4 243 3 168 2 167 1 297 1 194 1 314 7 142 1 225 4 89 6 319 8 92 8 
149 24 363 2 276 2 256 5 2 1 25 2 303 1 153 1 52 4 304 1 96 1 236 2 237 1 216 1 33 1 349 1 161 1 102 1 240 2 376 2 243 4 168 5 313 2 194 1 142 1 314 14 225 2 175 1 319 10 251 1 89 9 197 2 92 4 
149 17 363 1 276 3 256 3 2 1 25 3 303 1 304 1 52 2 96 1 236 1 237 1 216 1 33 1 349 1 161 1 102 1 240 1 376 3 243 1 167 1 168 3 313 2 194 1 142 1 314 10 225 3 175 1 319 7 251 1 89 4 197 2 92 6 
149 19 363 1 276 3 256 3 2 1 25 3 303 1 304 1 52 3 96 2 236 1 237 1 216 1 349 1 33 1 161 1 102 1 240 1 376 3 243 1 167 1 168 3 313 2 194 1 142 1 314 9 225 3 175 1 319 10 251 1 89 4 197 2 92 6 
149 17 363 1 276 3 256 3 2 1 25 3 303 1 52 2 304 1 96 1 236 1 237 1 216 1 33 1 349 1 161 1 102 1 240 1 376 3 243 2 167 1 168 3 313 2 194 1 142 1 314 10 225 3 175 1 319 7 251 1 89 5 197 2 92 6 
149 24 363 2 276 2 256 5 2 1 25 2 303 1 153 1 52 4 304 1 96 1 236 2 237 1 216 1 33 1 349 1 161 1 102 1 240 2 376 2 243 4 168 5 313 2 194 1 142 1 314 14 225 2 175 1 319 10 251 1 89 9 197 2 92 4 
149 12 276 1 256 1 2 1 25 1 52 2 304 1 96 2 237 1 216 1 349 1 102 1 376 1 243 1 168 2 313 2 194 1 314 6 225 1 175 1 319 6 251 1 89 2 197 2 92 2 
149 18 363 1 276 4 256 3 2 1 25 4 303 1 304 1 52 2 96 1 236 1 237 1 216 1 349 1 33 2 161 1 102 1 240 1 376 4 243 2 167 1 168 3 313 2 194 1 142 1 314 10 225 4 175 1 319 8 251 1 89 5 197 2 92 8 
149 16 276 4 256 3 2 1 25 4 304 1 52 2 96 2 237 1 216 1 349 1 33 2 102 1 376 4 243 3 297 1 168 3 313 3 194 1 314 9 225 4 175 1 319 7 251 1 89 6 197 3 92 8 
240 3 149 7 363 3 256 3 243 3 168 1 52 1 142 1 236 1 314 3 319 4 89 6 161 2 
149 18 363 1 276 4 256 3 2 1 25 4 303 1 304 1 52 2 96 1 236 1 237 1 216 1 349 1 33 2 161 1 102 1 240 1 376 4 243 1 297 1 168 3 313 2 194 1 142 1 314 10 225 4 175 1 319 8 251 1 89 4 197 2 92 8 
117 1 29 1 26 1 373 1 278 1 107 1 335 1 
188 1 189 1 117 1 26 1 278 1 107 1 29 1 373 1 47 1 335 1 21 1 198 1 
306 1 295 1 307 1 40 1 332 1 14 1 195 1 377 1 146 1 91 1 367 1 
220 1 295 1 201 1 40 1 365 1 14 1 26 1 66 1 107 2 367 1 108 1 306 1 307 1 29 2 332 1 30 1 335 1 91 1 
290 1 340 1 220 1 201 2 40 1 342 1 365 1 14 2 26 1 152 1 66 1 107 2 118 1 367 3 108 1 306 1 307 1 29 2 332 1 30 2 335 2 91 1 325 1 
290 1 340 1 220 1 294 1 201 2 40 2 342 1 365 1 14 2 26 1 152 1 66 1 107 2 118 1 367 3 283 1 306 2 307 1 29 2 332 1 30 2 335 2 91 2 325 1 
340 1 178 2 342 1 152 1 367 4 322 2 306 3 307 1 372 1 30 1 132 1 291 1 294 1 295 1 40 3 14 1 137 1 16 1 65 1 298 1 332 1 91 3 337 1 
340 1 178 2 294 1 295 1 40 3 342 1 137 1 14 1 152 1 16 1 65 1 367 4 322 2 298 1 306 3 307 1 372 1 332 1 30 1 91 3 145 1 337 1 
306 1 307 1 40 1 332 1 4 1 91 1 
133 1 375 1 295 2 301 1 40 6 14 2 166 1 4 1 367 3 28 1 235 1 306 7 226 1 214 1 307 3 332 2 45 1 30 1 80 1 90 1 91 7 
1 1 149 6 256 2 201 1 303 1 52 1 306 1 307 1 161 1 104 1 220 1 14 1 66 1 107 2 168 1 108 1 314 3 225 2 319 3 23 1 276 2 363 1 25 2 73 1 365 1 26 2 367 1 371 2 236 1 29 2 30 1 32 1 80 1 31 1 131 1 240 1 374 1 39 2 40 1 376 2 190 1 142 1 332 1 89 2 335 1 91 1 92 4 
253 1 178 3 93 1 231 2 367 2 322 3 123 1 306 1 372 1 125 1 100 1 12 2 295 1 241 2 293 1 40 1 137 1 16 2 65 1 85 1 298 1 362 1 173 1 112 1 274 2 91 1 145 1 337 1 
183 1 306 2 307 2 214 1 40 2 332 1 14 1 30 1 80 1 4 1 91 2 337 1 367 2 
294 1 295 1 40 4 14 1 377 1 67 1 367 1 306 4 307 1 332 1 80 1 195 1 91 4 
340 1 301 1 40 2 14 1 166 1 367 1 315 1 306 2 307 2 332 1 30 1 46 1 91 2 115 1 
119 1 122 1 306 1 295 1 61 1 307 1 40 1 332 1 308 1 91 1 
40 2 14 1 367 1 28 1 235 1 306 2 307 1 332 1 80 1 265 1 91 2 
340 1 375 1 295 1 40 4 14 2 377 1 67 1 367 3 235 1 306 5 307 2 226 1 332 2 80 1 195 1 91 5 
340 1 295 1 40 4 14 2 222 1 377 1 67 1 367 3 235 1 306 5 307 2 226 1 332 2 80 1 195 1 91 5 
220 1 295 1 201 1 40 1 365 1 14 1 26 1 66 1 107 2 367 1 283 1 306 1 307 1 29 2 332 1 30 1 335 1 91 1 
340 1 301 1 40 1 14 1 166 1 367 1 306 1 214 1 307 2 332 1 45 1 30 1 91 1 
249 1 26 1 317 1 15 1 55 1 
148 1 290 1 178 2 137 1 26 1 15 2 65 1 118 1 209 1 322 2 249 2 372 1 20 1 125 1 317 1 263 1 55 2 9 1 325 1 
249 1 29 1 228 1 317 1 55 1 107 1 335 1 193 1 22 1 
148 1 317 1 209 1 
82 1 258 1 244 1 146 1 
284 1 82 1 8 1 258 1 244 1 351 1 103 1 
69 1 343 1 351 1 
354 2 82 1 258 1 244 1 17 1 284 1 8 1 158 1 286 1 196 1 103 3 351 3 
284 1 82 1 8 1 258 1 244 1 270 1 156 1 351 2 103 2 
255 1 284 1 8 1 61 1 258 1 308 1 101 1 17 1 351 1 103 1 289 1 
284 1 82 1 8 1 258 1 17 1 351 1 103 1 
284 1 82 2 8 1 244 1 17 1 351 1 103 1 
82 1 258 1 17 1 284 2 8 2 171 1 78 1 103 2 351 2 217 1 
255 1 82 1 356 1 258 2 244 1 17 1 156 2 51 1 284 1 8 1 143 1 103 3 351 3 
82 1 61 1 258 1 244 1 17 1 156 1 119 1 141 1 284 1 8 1 184 1 308 2 103 2 351 2 289 1 
255 1 82 1 258 2 244 1 17 1 270 1 156 2 51 1 284 2 212 1 8 2 103 4 351 4 
284 1 82 1 8 1 258 1 244 1 17 1 351 1 103 1 
354 1 255 1 82 2 258 3 244 2 156 2 51 1 284 1 8 1 227 1 196 1 286 1 103 4 351 4 
82 1 258 1 244 1 269 1 17 1 156 1 282 1 284 1 8 1 288 1 103 2 351 2 
354 2 82 1 258 1 366 1 244 1 17 1 284 1 8 1 286 1 196 2 103 3 351 3 
352 2 120 1 258 2 186 1 
284 1 8 1 327 1 17 1 351 1 103 1 
284 1 82 1 8 1 258 1 143 1 244 1 17 1 156 1 351 2 103 2 
347 1 
284 1 82 1 8 1 258 1 244 1 17 1 351 1 103 1 
354 1 82 1 258 1 244 1 17 1 156 1 284 1 8 1 143 1 103 3 351 3 
255 1 227 1 258 1 51 1 
82 1 258 1 

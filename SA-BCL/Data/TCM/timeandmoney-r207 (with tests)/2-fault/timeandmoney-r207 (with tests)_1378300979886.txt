#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (179,185) (179,185) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (179,185) (179,185) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (179,185) (179,185) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (179,185) (179,185) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
9 1 179 1 275 1 185 1 376 1 186 1 279 1 341 1 219 1 
9 1 179 1 275 1 185 1 376 1 186 1 279 1 341 1 219 1 
9 1 179 1 275 1 185 1 376 1 186 1 279 1 341 1 219 1 
9 1 179 1 275 1 185 1 376 1 186 1 279 1 341 1 219 1 
215 1 241 1 9 4 156 3 186 1 61 2 13 1 108 2 334 1 266 1 95 1 279 4 173 1 98 1 116 1 298 3 376 1 341 1 
156 1 9 2 105 1 275 1 186 1 13 1 334 1 279 2 46 1 219 1 87 1 116 1 98 1 376 1 341 1 365 1 
9 3 156 2 275 1 186 1 13 1 108 1 334 1 266 1 279 3 298 1 376 2 260 1 341 2 
215 1 241 1 334 1 266 3 95 1 173 1 74 1 126 1 298 7 98 1 341 2 9 9 156 5 135 1 275 1 186 1 61 2 13 1 108 4 279 9 112 1 116 1 376 2 260 1 
215 1 241 1 334 1 266 3 95 1 173 1 74 1 126 1 298 7 98 1 341 2 9 9 156 5 135 1 275 1 186 1 61 2 13 1 108 4 279 9 112 1 116 1 376 2 260 1 
106 1 42 1 103 1 
324 1 264 2 42 1 
309 2 55 2 342 1 255 2 101 1 155 2 96 2 133 2 
214 1 330 1 19 1 267 1 335 1 337 1 150 2 96 2 24 1 270 1 202 2 7 1 309 3 153 1 55 3 342 1 250 2 310 1 311 1 100 1 101 1 155 2 133 2 315 1 58 1 349 2 30 1 110 1 373 1 32 1 255 2 280 1 258 2 211 1 67 1 145 1 212 1 
104 1 309 1 55 1 342 1 312 1 255 1 102 1 155 1 96 1 133 1 
169 1 274 1 224 1 42 1 230 1 166 1 259 1 309 1 55 1 183 1 285 1 102 1 103 1 155 1 
169 1 224 1 42 1 255 1 230 2 96 1 259 2 309 1 55 1 183 1 285 1 102 1 103 1 133 1 155 1 
259 1 82 1 90 1 4 1 230 1 
319 1 259 2 143 1 42 1 90 1 4 1 230 2 103 1 
259 1 4 1 230 1 
104 1 255 1 230 1 96 1 353 1 259 1 309 1 90 1 342 1 55 1 312 1 102 1 133 1 155 1 
42 1 
319 1 259 2 42 1 90 1 4 1 230 2 84 1 103 1 
286 2 319 1 217 1 42 1 161 1 44 1 321 1 230 5 4 2 127 1 271 2 283 2 259 5 99 1 181 1 340 1 90 2 191 1 103 1 
106 1 101 1 
138 1 255 1 96 1 361 1 309 2 55 2 101 2 155 2 133 1 
152 1 175 1 238 1 
214 1 19 1 349 1 30 1 335 1 32 1 49 1 258 1 24 1 270 1 309 1 55 1 250 1 145 1 310 1 101 1 
309 3 38 1 55 3 255 1 101 1 155 3 96 3 133 3 
309 1 55 1 312 1 102 1 155 1 96 1 133 1 
361 1 309 1 138 1 55 1 255 1 102 1 155 1 96 1 133 1 
214 1 169 1 19 1 267 1 335 1 337 1 150 1 96 3 24 1 270 1 361 1 202 2 7 1 309 4 153 1 310 1 55 4 342 1 250 1 311 1 100 1 183 1 101 1 102 1 155 3 133 3 59 1 224 1 349 1 30 1 110 1 373 1 32 1 255 2 280 1 230 1 258 1 259 1 88 1 38 1 145 1 212 1 285 1 195 1 
309 2 63 1 38 1 55 2 101 1 166 1 155 2 96 1 133 1 
169 1 224 1 42 1 255 1 230 1 96 3 269 1 361 1 259 1 309 3 88 1 38 2 55 3 183 1 285 1 102 1 195 1 133 3 155 3 
361 1 309 2 38 1 55 2 255 1 175 1 238 1 155 2 96 2 133 2 
214 1 19 1 349 1 30 1 335 1 32 1 258 1 24 1 270 1 309 1 55 1 250 1 145 1 310 1 101 1 
214 1 118 1 349 1 30 1 335 1 32 1 246 1 258 1 24 1 270 1 309 1 55 1 250 1 310 1 101 1 
330 2 265 1 175 2 23 1 150 4 202 2 152 2 7 1 153 2 8 1 311 1 132 1 368 1 79 1 320 1 110 1 373 1 280 1 14 1 233 1 144 1 192 1 212 1 238 2 
169 1 309 1 55 1 102 1 176 1 155 1 96 1 133 1 
214 1 19 1 349 1 30 1 335 1 32 1 96 1 258 1 24 1 270 1 309 2 88 1 38 1 310 1 55 2 250 1 145 1 238 1 133 1 155 1 
63 1 255 1 166 1 96 4 113 1 361 1 309 5 88 1 38 2 55 5 101 1 273 1 133 4 155 5 
309 2 55 2 312 1 176 1 102 1 155 2 96 2 133 2 
359 1 346 1 
359 1 346 1 
18 1 232 1 
18 1 232 1 
18 1 232 1 
359 1 346 1 281 1 
359 1 346 1 281 1 
359 1 346 1 281 1 
359 1 0 1 346 1 
359 2 18 1 346 2 288 1 232 1 374 1 
359 1 346 1 157 1 
359 1 346 1 157 1 
359 1 346 1 157 1 
346 2 20 1 42 1 350 2 65 1 268 1 308 1 164 2 230 2 295 1 374 1 359 2 114 1 259 2 200 3 362 2 236 1 56 2 57 2 
0 1 317 1 205 1 346 1 196 1 158 1 350 1 307 1 94 1 164 1 230 1 96 2 359 1 259 1 200 1 309 2 362 1 55 2 236 1 354 1 101 1 155 2 57 1 133 2 
98 1 116 1 95 1 
98 1 116 1 365 1 
116 3 149 1 278 1 95 2 365 1 91 1 
254 1 116 2 149 1 95 1 365 1 91 1 
116 2 149 1 95 1 365 1 91 2 
286 1 196 1 264 3 42 2 94 1 265 1 44 2 4 1 127 3 248 1 271 1 25 1 132 1 103 1 77 1 27 2 205 1 319 1 31 1 321 1 230 5 14 1 324 1 282 2 283 1 259 5 36 1 210 2 377 1 303 1 144 1 90 4 
286 2 242 1 72 1 264 9 42 5 94 4 265 3 44 6 4 6 127 8 248 3 271 2 99 1 25 1 132 3 103 1 223 5 319 1 82 5 107 1 160 1 137 1 321 1 230 9 14 3 324 3 282 6 283 2 259 9 36 2 210 6 377 2 144 3 90 7 304 1 
286 1 264 4 42 3 94 1 265 1 44 2 127 3 248 1 271 1 99 1 132 1 103 1 77 1 27 1 31 1 230 3 14 1 324 2 282 2 283 1 259 3 36 1 377 1 210 2 144 1 90 2 
286 1 72 1 264 7 42 4 94 2 265 2 44 4 127 5 248 2 271 1 99 1 132 2 103 1 77 1 27 2 137 1 31 1 230 4 14 2 324 3 282 4 283 1 259 4 36 1 210 4 377 1 144 2 90 3 304 1 
24 1 106 1 60 1 
24 1 22 1 
52 1 
24 1 30 1 
214 1 24 3 60 2 30 1 371 1 262 1 
214 1 24 1 30 1 
24 1 296 1 
253 1 330 4 70 2 11 1 218 1 265 1 162 1 198 1 256 1 150 7 352 1 220 1 153 3 8 3 233 2 144 1 146 1 
253 1 330 4 70 2 11 1 218 1 265 1 162 1 198 1 256 1 150 7 352 1 220 1 153 3 8 3 233 2 144 1 146 1 
253 1 302 1 330 4 11 1 70 2 218 1 265 1 162 1 198 1 256 1 150 7 352 1 220 1 153 3 8 3 233 2 144 1 146 1 
330 16 70 3 218 1 265 4 292 1 198 5 48 1 150 31 220 1 248 3 202 2 201 1 7 1 153 15 8 10 132 3 253 2 345 4 344 1 318 3 222 1 11 1 110 1 162 1 373 1 280 1 256 2 14 3 352 2 86 1 233 5 144 4 146 2 92 1 
69 1 330 5 70 2 218 1 265 1 198 1 150 9 202 4 7 2 153 4 8 4 363 1 253 1 222 1 11 1 110 2 162 1 373 2 280 2 256 1 352 1 233 3 144 1 146 1 
239 1 119 1 290 1 334 1 95 1 247 1 298 1 98 1 53 1 270 1 249 1 75 1 250 1 341 1 310 1 365 1 156 1 9 2 275 1 186 1 349 1 206 1 13 1 278 1 279 2 208 1 33 1 258 1 116 2 376 1 
239 1 119 1 290 1 334 1 95 1 247 1 98 1 221 1 298 2 270 1 249 1 75 1 250 1 341 1 310 1 365 1 156 1 9 3 275 1 12 1 349 1 206 1 13 1 278 1 279 3 33 1 258 1 116 2 376 1 147 1 
239 1 290 1 334 1 95 1 247 1 298 2 270 1 98 1 249 1 75 1 250 1 310 1 365 1 156 1 9 2 275 1 12 1 349 1 13 1 278 1 279 2 33 1 258 1 116 2 147 1 
71 1 24 1 247 2 270 1 221 1 249 2 250 1 341 1 310 1 184 1 252 1 9 1 78 1 275 2 81 1 349 1 30 1 279 1 32 1 33 2 258 1 376 1 190 1 
239 1 119 1 290 1 95 1 247 1 98 1 53 1 270 1 249 1 75 1 250 1 341 1 310 1 365 1 9 1 275 1 186 1 349 1 206 1 278 1 279 1 33 1 258 1 116 2 376 1 147 1 
329 1 
286 1 3 1 44 2 4 2 336 1 297 1 203 1 250 2 55 1 102 1 155 1 349 2 165 1 15 1 258 2 166 1 259 3 213 1 355 1 169 1 171 1 122 1 358 1 127 2 24 1 271 1 270 1 309 1 310 1 184 1 183 1 366 1 78 1 274 1 319 1 224 1 30 1 227 1 321 1 32 2 230 3 140 1 85 2 283 1 36 1 285 1 
169 1 274 1 319 1 224 1 3 1 227 1 4 2 336 1 230 3 84 1 15 1 85 2 166 1 297 1 129 1 259 3 309 1 55 1 183 1 285 1 102 1 155 1 
169 1 42 1 3 1 4 1 336 1 199 1 297 1 309 1 55 1 183 1 102 1 155 1 103 1 274 1 319 1 224 1 227 1 230 3 15 1 84 1 166 1 85 3 259 3 285 1 
169 1 42 1 3 1 336 1 245 1 4 2 199 1 297 1 129 1 309 1 55 1 183 1 102 1 155 1 103 1 274 1 319 1 224 1 227 1 230 3 84 1 15 1 166 1 85 3 259 3 285 1 
286 1 42 1 3 1 44 1 245 2 336 1 4 3 96 1 297 1 342 1 55 2 102 2 155 2 103 1 104 1 207 1 255 1 165 2 15 1 166 1 353 1 259 3 213 1 68 1 169 1 171 1 358 2 127 1 271 1 129 2 309 2 131 1 312 1 183 1 314 1 133 1 274 1 319 1 224 1 227 1 321 1 139 1 230 3 84 1 85 2 283 1 285 1 
169 1 286 1 171 1 3 1 44 1 122 1 358 1 336 1 127 1 297 1 271 1 309 1 55 1 183 1 102 1 155 1 274 1 224 1 227 1 321 1 165 1 230 2 15 1 166 1 85 2 283 1 259 2 213 1 285 1 
169 1 286 1 171 1 42 1 3 1 44 1 358 2 336 1 96 1 127 1 297 1 271 1 309 2 131 1 342 1 55 2 312 1 183 1 102 2 133 1 103 1 155 2 104 1 274 1 224 1 207 1 227 1 321 1 255 1 165 2 139 1 230 2 15 1 166 1 85 2 353 1 283 1 259 2 213 1 285 1 
169 1 286 1 171 1 42 1 3 1 44 1 358 2 336 1 96 1 127 1 297 1 271 1 309 2 131 1 342 1 55 2 312 1 183 1 102 2 133 1 103 1 155 2 104 1 274 1 224 1 207 1 227 1 321 1 255 1 165 2 139 1 230 2 15 1 166 1 85 2 353 1 283 1 259 2 213 1 285 1 
168 1 169 1 286 1 171 1 42 1 3 1 44 1 358 2 336 1 96 1 127 1 297 1 271 1 309 2 342 1 55 2 312 1 183 1 102 2 133 1 103 1 155 2 104 1 274 1 224 1 207 1 370 1 227 1 321 1 255 1 165 2 230 2 15 1 166 1 85 2 353 1 283 1 259 2 234 1 285 1 
286 1 42 1 3 1 44 1 4 1 245 1 336 1 96 1 199 1 297 1 342 1 55 2 102 2 155 2 103 1 104 1 207 1 255 1 165 2 15 1 166 1 353 1 259 2 213 1 169 1 171 1 358 2 127 1 271 1 129 1 309 2 131 1 312 1 183 1 314 1 133 1 274 1 224 1 227 1 321 1 139 1 230 2 85 3 283 1 285 1 
286 1 42 1 3 1 44 1 4 1 245 1 336 1 96 1 199 1 297 1 342 1 55 2 102 2 155 2 103 1 104 1 207 1 255 1 165 2 15 1 166 1 353 1 259 2 213 1 169 1 171 1 358 2 127 1 271 1 129 1 309 2 131 1 312 1 183 1 314 1 133 1 274 1 224 1 227 1 321 1 139 1 230 2 85 3 283 1 285 1 
169 1 168 1 286 1 171 1 3 1 44 1 122 1 358 1 336 1 127 1 297 1 271 1 309 1 55 1 183 1 102 1 155 1 274 1 224 1 227 1 321 1 165 1 230 2 15 1 166 1 85 2 283 1 259 2 285 1 
330 3 70 1 218 1 265 1 175 1 150 6 202 2 152 1 7 1 8 2 153 3 311 1 101 2 368 1 11 1 106 1 110 1 162 1 373 1 280 1 352 1 233 2 144 1 212 1 146 1 238 1 
330 8 265 2 267 1 292 1 198 1 175 4 48 1 150 14 248 2 202 4 152 11 7 2 8 2 153 6 311 1 101 1 132 2 345 3 10 1 58 1 318 3 28 1 225 1 110 2 373 2 280 2 14 1 141 1 233 1 144 1 212 2 238 11 167 1 
214 1 330 1 19 1 335 1 267 1 175 1 49 1 96 1 150 2 24 1 270 1 202 2 7 1 309 2 153 1 310 1 250 1 55 2 311 1 101 1 155 1 133 1 58 1 349 1 30 1 225 1 110 1 32 1 373 1 280 1 258 1 323 1 66 1 88 1 38 1 145 1 212 1 16 1 
330 10 291 1 335 2 198 4 293 2 96 1 150 20 50 2 248 2 202 6 152 7 7 3 153 10 154 1 8 8 250 3 55 3 100 2 101 2 155 1 58 1 11 1 348 2 349 3 110 3 162 1 14 2 258 3 352 1 212 3 263 1 214 2 70 1 19 2 218 1 265 3 267 1 175 7 178 2 24 2 270 2 309 3 310 2 311 3 132 2 133 1 225 1 30 2 32 1 373 3 280 3 233 4 144 3 88 1 38 1 145 2 147 1 146 1 238 7 
305 1 330 1 289 1 267 1 357 1 96 1 150 2 24 3 270 2 202 4 309 1 7 2 300 1 153 1 55 1 310 2 250 8 311 2 184 1 155 1 133 1 368 1 78 1 58 1 349 8 83 1 30 2 110 2 111 1 208 1 32 2 373 2 280 2 258 7 34 1 211 2 38 1 212 2 147 1 
330 1 265 1 175 1 96 1 150 3 248 1 361 1 152 1 202 2 7 1 309 1 8 1 153 2 55 1 311 1 132 1 133 1 155 1 80 1 225 1 110 1 373 1 255 1 280 1 14 1 233 1 144 1 212 1 238 1 
368 1 330 2 79 1 110 1 265 1 198 1 373 1 175 1 280 1 150 2 152 1 202 2 7 1 8 1 311 1 212 1 132 1 238 1 
368 1 110 1 373 1 175 1 280 1 23 1 14 1 150 2 152 1 202 2 7 1 8 1 233 1 153 2 144 1 311 1 212 1 238 1 
368 1 330 2 110 1 265 1 198 1 373 1 175 2 280 1 14 1 150 4 248 1 152 2 202 2 7 1 233 1 153 2 8 2 144 1 311 1 212 1 132 1 238 2 
330 2 79 1 83 1 110 1 265 1 198 1 373 1 175 1 280 1 150 2 152 1 202 2 7 1 8 1 311 1 212 1 132 1 238 1 
83 1 110 1 373 1 175 1 280 1 23 1 14 1 150 2 152 1 202 2 7 1 8 1 233 1 153 2 144 1 311 1 212 1 238 1 
330 2 265 1 198 1 175 2 150 4 248 1 202 2 152 2 7 1 8 2 153 2 311 1 132 1 83 1 110 1 373 1 280 1 14 1 233 1 144 1 212 1 238 2 
330 2 110 1 265 1 198 1 373 1 175 2 280 1 14 1 150 4 248 1 152 2 202 2 7 1 233 1 153 2 8 2 144 1 311 1 212 1 132 1 238 2 
214 1 330 1 19 1 335 1 267 1 150 2 24 1 270 1 202 2 309 1 7 1 153 1 310 1 250 1 55 1 100 1 311 1 101 1 58 1 349 1 30 1 110 1 32 1 373 1 280 1 258 1 145 1 212 1 
214 1 330 1 118 1 331 1 335 1 267 1 246 1 150 2 24 1 270 1 202 2 309 1 7 1 153 1 310 1 250 1 55 1 311 1 101 1 58 1 349 1 30 1 110 1 32 1 373 1 280 1 258 1 212 1 
330 2 265 1 198 1 175 2 150 4 248 1 202 2 152 2 7 1 8 2 153 2 311 1 132 1 225 1 110 1 373 1 280 1 14 1 233 1 144 1 212 1 238 2 
214 1 330 2 19 1 265 1 335 1 198 1 175 2 150 4 50 1 24 1 248 1 270 1 152 2 202 2 309 1 7 1 153 2 8 2 310 1 250 1 55 1 100 1 311 1 132 1 349 1 30 1 110 1 208 1 373 1 280 1 14 1 258 1 233 1 144 1 145 1 212 1 238 2 
330 2 265 1 198 1 175 1 96 1 150 3 248 1 361 1 202 2 152 1 7 1 309 1 153 1 8 1 55 1 311 1 132 1 133 1 155 1 225 1 110 1 373 1 255 1 280 1 14 1 325 1 144 1 212 1 238 1 
69 1 330 9 356 2 120 1 265 3 172 1 292 1 174 1 198 3 48 1 150 19 97 1 248 3 202 4 54 1 7 2 153 10 8 6 26 2 132 3 301 1 345 2 318 1 110 2 373 2 280 2 14 3 115 1 233 3 144 3 
69 1 287 1 330 14 356 4 197 1 265 3 172 1 198 2 294 1 48 2 150 26 97 2 248 3 202 6 54 2 7 3 8 4 153 12 26 1 132 3 301 1 367 1 343 1 345 2 222 2 318 2 110 3 373 3 280 3 14 2 115 1 233 2 261 1 144 2 
330 20 287 1 197 1 292 1 198 4 294 1 48 3 150 41 97 2 248 4 202 6 7 3 54 1 8 8 153 21 301 1 343 1 345 4 11 1 110 3 162 1 14 4 352 1 115 1 261 1 69 1 70 1 356 4 218 1 120 1 265 5 172 1 26 1 132 4 367 1 318 3 222 1 187 1 373 3 280 3 233 4 144 5 146 1 
69 1 287 1 330 20 70 1 356 4 120 1 218 1 197 1 265 5 172 1 292 1 198 3 294 1 48 3 150 38 97 2 248 4 202 8 54 1 7 4 153 18 8 7 26 1 132 4 301 1 367 1 343 1 345 4 222 2 318 3 11 1 187 1 110 4 162 1 373 4 280 4 14 3 352 1 115 1 261 1 233 4 144 4 146 1 
69 1 287 1 330 27 70 1 356 4 218 1 197 1 265 8 172 1 292 2 198 7 294 1 48 2 150 52 97 1 248 7 202 4 54 1 7 2 153 25 8 14 26 1 132 7 301 1 367 1 343 1 345 4 222 1 318 4 11 1 28 2 110 2 162 1 373 2 280 2 14 7 352 1 115 1 261 1 233 7 144 8 146 1 
359 1 346 1 20 1 350 1 362 1 364 1 268 1 164 1 374 1 57 1 
0 1 354 1 
359 1 346 1 136 1 189 1 350 1 362 1 164 1 257 1 57 1 
346 1 20 1 42 1 350 1 65 1 268 1 308 1 164 1 230 1 374 1 359 1 114 1 259 1 200 2 362 1 236 1 56 1 57 1 
346 1 20 1 42 1 350 1 65 1 268 1 308 1 164 1 230 1 374 1 359 1 114 1 259 1 200 2 362 1 236 1 56 1 57 1 
346 1 20 1 42 1 350 1 65 1 268 1 308 1 164 1 230 1 374 1 359 1 114 1 259 1 200 2 362 1 236 1 56 1 57 1 
288 1 2 1 281 1 
288 1 2 1 281 1 
157 1 37 1 
288 1 157 1 37 1 
158 1 307 1 
0 1 196 1 94 1 307 1 96 2 359 1 200 1 309 2 362 1 55 2 56 1 101 1 57 1 133 2 155 2 317 1 346 1 205 1 276 1 350 1 158 1 164 1 230 1 114 1 259 1 90 1 354 1 
2 1 281 1 
288 1 157 1 37 1 
330 1 289 1 267 1 177 1 150 2 24 1 270 1 202 2 309 2 7 1 300 1 130 1 153 1 310 1 250 2 55 2 311 1 204 1 155 2 58 1 349 2 30 1 225 1 110 1 163 1 373 1 280 1 258 2 375 1 211 2 212 1 
332 1 349 2 206 1 290 1 278 1 95 1 208 1 33 1 229 1 258 2 98 1 116 2 270 1 75 1 365 1 310 1 250 2 327 1 147 1 
62 1 349 1 206 1 290 1 278 1 95 1 33 1 229 1 258 1 98 1 116 2 270 1 75 1 365 1 250 1 310 1 147 1 
78 1 332 1 349 1 30 1 32 1 33 1 258 1 24 1 51 1 270 1 310 1 250 1 184 1 252 1 
332 1 349 1 206 1 290 1 278 1 95 1 33 1 229 1 258 1 98 1 116 2 270 1 75 1 365 1 250 1 327 1 310 1 147 1 
188 1 
127 1 106 1 42 1 340 1 161 1 44 1 103 1 
240 1 286 1 319 1 264 1 42 2 44 1 321 1 230 1 4 1 47 1 127 1 324 1 271 1 283 1 259 1 213 1 103 1 
286 4 42 8 44 8 4 5 296 2 338 2 248 2 339 2 340 1 250 3 103 2 60 2 349 3 159 1 161 1 109 2 208 1 14 2 258 3 259 5 210 6 214 3 264 12 22 3 265 2 121 2 178 2 127 9 24 10 270 4 271 4 310 3 183 2 313 2 132 2 319 3 369 1 277 2 29 2 30 3 371 1 321 4 32 1 322 1 230 5 140 1 282 6 324 6 284 1 283 4 36 2 326 2 144 2 193 1 
286 2 287 1 264 6 42 5 197 1 265 2 44 5 4 1 294 1 48 1 127 8 248 2 271 2 132 2 103 2 343 1 345 1 318 1 319 1 277 1 109 2 321 2 230 1 140 1 14 2 282 5 324 3 209 1 283 2 259 1 36 1 210 5 261 1 144 2 89 1 
286 1 218 1 265 2 44 2 96 1 125 1 127 2 271 1 309 1 55 1 342 1 312 1 102 1 133 1 155 1 104 1 277 1 109 2 321 1 139 1 255 1 230 1 352 1 353 1 283 1 259 1 144 1 146 1 
286 1 42 1 161 1 44 1 321 1 127 1 271 1 283 1 340 1 103 1 
264 10 277 1 42 5 109 2 265 2 44 5 14 2 178 1 127 5 248 2 282 5 324 5 210 5 144 2 132 2 
319 1 259 1 42 1 230 1 4 1 103 1 
286 2 44 2 4 4 24 1 127 2 270 1 271 2 99 1 310 1 250 4 184 1 366 1 78 1 319 2 349 4 159 2 30 1 321 1 32 2 322 1 230 3 140 2 258 4 283 2 35 1 259 3 36 2 328 1 355 1 
214 1 19 1 267 1 335 1 337 1 150 1 96 2 24 1 270 1 202 2 7 1 309 3 153 1 250 1 55 3 342 1 310 1 100 1 311 1 101 1 155 2 133 2 349 1 30 1 110 1 373 1 32 1 255 2 280 1 258 1 145 1 212 1 
286 1 70 1 264 4 42 4 44 2 321 1 140 1 127 1 282 2 324 2 271 1 283 1 36 1 210 2 103 2 
73 1 350 1 362 1 
73 1 350 1 362 1 
73 1 350 1 362 1 
93 1 20 1 158 1 350 1 362 1 
347 1 350 1 362 1 
347 1 350 1 362 1 
347 1 350 1 362 1 
350 1 362 1 
359 1 346 1 
330 4 222 1 70 1 11 1 218 1 265 1 110 2 162 1 198 1 373 2 280 2 150 8 352 1 202 4 7 2 153 4 8 3 233 2 144 1 146 1 
330 3 70 1 11 1 106 1 218 1 265 1 162 1 150 6 352 1 153 3 233 2 8 2 144 1 146 1 
330 2 306 1 110 1 265 1 373 1 198 1 280 1 14 1 150 4 248 1 202 2 7 1 233 1 153 2 8 2 144 1 132 1 
345 2 318 1 330 3 265 1 292 1 198 1 14 1 48 1 150 7 248 1 233 1 153 4 8 2 144 1 132 1 
330 11 70 1 218 1 265 3 292 1 198 4 150 23 248 2 202 4 7 2 8 9 153 12 132 2 345 2 318 2 222 2 11 1 28 1 110 2 162 1 373 2 280 2 14 2 142 1 352 2 233 5 144 3 146 2 167 1 
345 1 153 1 150 1 
330 1 318 1 150 1 
330 3 306 1 110 1 265 1 373 1 198 1 280 1 14 1 178 1 150 6 248 1 202 2 7 1 153 3 8 3 233 2 144 1 132 1 
69 1 330 6 287 1 197 1 265 2 198 1 294 1 48 1 150 12 248 2 202 2 7 1 153 6 8 2 132 2 343 1 345 1 318 1 110 1 373 1 280 1 14 2 261 1 233 1 144 2 
330 3 218 1 265 1 198 1 150 6 352 1 153 3 233 1 8 2 144 1 146 1 
330 1 222 1 11 1 110 1 162 1 198 1 373 1 280 1 150 3 142 1 352 1 202 2 7 1 8 2 233 1 153 2 146 1 
69 1 330 5 218 1 110 1 265 2 373 1 198 2 280 1 150 10 125 1 352 2 202 2 7 1 233 3 8 5 153 5 144 2 146 2 
69 1 330 2 110 1 265 1 373 1 198 1 280 1 150 2 202 2 7 1 8 1 132 1 
69 1 330 2 110 1 265 1 373 1 198 1 280 1 14 1 150 4 248 1 202 2 7 1 233 1 153 2 8 2 144 1 132 1 
69 1 222 1 330 1 120 1 110 3 373 3 198 1 280 3 150 3 142 1 352 1 202 6 7 3 153 2 233 1 8 2 146 1 
69 1 330 16 70 1 218 2 306 1 120 1 265 5 292 1 198 5 48 1 150 34 248 3 201 1 202 10 7 5 153 18 8 12 132 3 344 1 345 4 222 2 318 3 11 1 110 5 162 1 373 5 280 5 14 3 142 1 352 3 233 7 144 5 146 3 92 1 
69 1 330 4 70 1 218 1 265 1 48 1 150 8 202 2 7 1 153 4 8 2 345 1 318 1 11 1 110 1 162 1 373 1 280 1 352 1 261 1 233 2 144 1 146 1 
69 1 330 6 70 1 218 1 306 1 265 2 292 1 198 1 48 1 150 11 248 1 202 4 7 2 153 5 8 3 132 1 345 2 318 1 11 1 110 2 162 1 373 2 280 2 352 1 233 2 261 1 144 1 146 1 
69 1 330 9 287 1 70 1 218 1 306 1 197 1 265 3 198 1 294 1 48 1 150 19 248 2 202 6 7 3 153 10 8 4 132 2 343 1 345 1 318 1 222 1 11 1 110 3 162 1 373 3 280 3 14 2 352 1 261 1 233 3 144 3 146 1 
69 1 330 10 287 1 70 1 218 1 306 1 197 1 265 3 198 2 294 1 48 1 150 17 248 2 202 6 7 3 153 7 8 5 132 2 343 1 345 1 222 1 318 1 11 1 110 3 162 1 373 3 280 3 14 1 352 1 261 1 233 3 144 2 146 1 
69 1 330 4 70 1 218 1 265 1 48 1 150 8 202 2 7 1 153 4 8 2 345 1 318 1 11 1 110 1 162 1 373 1 280 1 352 1 261 1 233 2 144 1 146 1 
69 1 330 6 287 1 197 1 265 2 198 1 294 1 48 1 150 12 248 2 202 2 7 1 153 6 8 2 132 2 343 1 345 1 318 1 110 1 373 1 280 1 14 2 261 1 233 1 144 2 
69 1 287 1 330 10 70 1 218 1 306 1 197 1 265 3 198 2 294 1 48 1 150 18 248 2 202 8 7 4 153 8 8 5 132 2 343 1 345 1 318 1 222 2 11 1 110 4 162 1 373 4 280 4 14 1 352 1 261 1 233 3 144 2 146 1 
69 1 287 1 330 9 120 1 197 1 265 3 198 3 294 1 48 1 150 16 248 3 202 8 7 4 153 7 8 6 132 3 343 1 345 1 318 1 222 2 110 4 373 4 280 4 14 2 261 1 233 3 144 2 
330 3 11 2 218 1 265 1 162 1 198 3 150 7 352 3 153 4 233 3 8 6 144 1 146 3 
69 1 287 1 330 10 70 1 218 1 120 1 197 1 265 3 198 1 294 1 48 1 150 18 248 2 202 8 7 4 153 8 8 4 132 2 343 1 345 1 318 1 222 2 11 1 110 4 162 1 373 4 280 4 14 1 352 1 261 1 233 3 144 2 146 1 
309 1 63 1 55 1 101 1 194 1 155 1 166 1 
17 1 63 1 45 1 166 1 151 1 309 1 55 1 41 1 101 1 194 1 237 1 155 1 
24 1 78 1 270 1 106 1 349 1 30 1 310 1 250 1 184 1 32 1 258 1 
214 1 19 1 349 1 30 1 335 1 32 1 96 1 258 1 24 1 270 1 309 2 38 1 55 2 250 1 310 1 101 1 133 1 155 1 
169 1 214 2 19 1 224 1 349 1 30 2 159 1 335 1 296 1 96 2 258 1 338 1 24 3 270 1 309 2 38 1 55 2 250 1 310 1 101 1 102 1 133 1 155 2 
214 2 169 1 335 1 244 1 246 1 296 1 96 2 338 1 24 3 270 1 309 2 310 1 250 2 55 2 101 1 102 1 155 2 133 1 224 1 349 2 159 1 30 2 258 2 38 1 
214 1 42 1 22 1 244 1 4 1 296 1 338 1 24 4 270 1 310 1 250 3 183 1 251 1 103 1 134 1 60 1 349 3 159 1 30 1 32 1 230 2 258 3 259 2 
214 1 60 1 42 1 349 3 30 1 159 1 22 1 244 1 32 1 230 2 4 1 296 1 258 3 338 1 24 4 270 1 259 2 326 1 250 3 310 1 183 1 103 1 
34 1 270 1 349 1 310 1 250 1 258 1 
214 1 305 1 333 1 349 7 30 2 371 1 111 1 208 1 228 1 32 2 357 1 258 6 24 3 34 1 270 3 300 1 211 1 235 1 250 7 310 2 147 1 
214 1 330 3 70 1 19 1 218 1 265 1 335 1 175 1 150 6 96 1 50 1 24 1 270 1 152 1 202 4 7 2 309 2 153 3 8 2 310 1 55 2 250 1 311 2 100 1 101 2 155 1 133 1 11 1 348 1 349 1 30 1 225 1 110 2 162 1 373 2 208 1 280 2 258 1 352 1 375 1 233 2 144 1 38 1 145 1 212 2 146 1 238 1 
286 2 42 1 22 1 44 1 121 1 4 2 127 1 24 2 271 2 339 1 340 1 250 1 183 1 103 1 319 1 60 1 349 1 29 1 161 1 32 1 321 2 322 1 230 3 258 1 283 2 259 3 326 1 90 1 
214 1 60 1 349 2 30 1 371 1 208 1 258 2 24 2 34 1 270 2 250 2 310 1 193 1 
78 1 243 1 349 4 30 1 244 1 32 1 208 1 258 4 24 1 270 1 250 4 310 1 184 1 
214 1 349 2 159 1 291 1 30 1 228 1 258 2 123 1 24 1 270 2 182 1 235 1 250 2 310 1 
98 1 116 1 270 1 290 1 349 1 365 1 310 1 250 1 32 1 258 1 
349 2 30 1 208 1 258 2 177 1 24 1 270 1 300 1 250 2 310 1 147 1 
78 1 305 1 243 1 349 5 159 1 30 2 32 1 208 1 111 1 258 4 24 3 270 2 300 1 250 5 310 2 184 1 
78 1 243 1 349 5 159 1 30 2 32 1 208 1 111 1 258 4 24 3 299 1 270 2 300 1 250 5 310 2 184 1 
214 1 349 1 30 1 335 1 32 1 246 1 96 1 258 1 24 1 270 1 309 2 38 1 55 2 250 1 310 1 101 1 133 1 155 1 
214 1 333 1 349 1 159 1 30 1 371 1 228 1 258 1 24 1 270 2 235 1 250 1 310 1 
1 1 148 1 309 1 130 1 55 1 226 1 204 1 163 1 155 1 
1 1 39 1 124 1 
148 1 1 1 226 1 101 1 5 1 
169 1 224 1 1 1 148 2 42 1 226 2 230 2 5 2 124 1 6 1 259 2 90 1 39 1 183 1 101 1 285 1 102 1 195 1 103 1 
156 1 106 1 13 1 334 1 
156 1 9 1 376 1 13 1 334 1 279 1 341 1 
9 1 247 1 275 1 
156 1 9 3 186 1 21 1 351 1 13 1 334 1 279 3 46 2 376 1 341 1 272 1 
156 1 9 2 298 1 376 1 61 1 13 1 334 1 279 2 341 1 
156 1 9 1 98 1 116 1 376 1 186 1 108 1 95 1 173 1 279 1 341 1 
156 1 9 1 376 1 186 1 334 1 279 1 341 1 
9 1 376 1 186 1 13 1 334 2 279 1 341 1 
156 1 9 2 170 1 186 1 334 1 279 2 360 1 376 2 76 1 341 2 
9 3 135 1 156 2 186 1 13 1 108 1 334 1 266 1 279 3 112 1 298 2 376 1 341 1 
156 1 9 2 216 1 186 1 13 1 278 1 334 1 95 1 279 2 116 2 98 1 298 1 376 1 365 1 341 1 
9 4 241 1 156 2 186 1 61 1 13 1 108 1 334 1 266 1 279 4 298 2 376 2 341 2 
156 1 9 1 376 1 186 1 13 1 334 1 279 1 341 1 
9 4 156 3 21 1 351 1 13 2 108 1 334 2 266 1 279 4 46 1 128 1 298 2 376 1 341 1 
156 1 9 2 316 1 186 1 13 1 334 1 279 2 126 1 298 1 376 1 180 1 341 1 
156 1 9 3 186 1 21 1 351 2 13 1 334 1 279 3 46 2 376 1 117 1 341 1 
156 2 231 2 43 1 64 1 
9 1 376 1 186 1 279 1 341 1 40 1 
156 1 9 2 298 1 376 1 186 1 13 1 334 1 279 2 341 1 112 1 
372 1 
156 1 9 1 376 1 186 1 13 1 334 1 279 1 341 1 
156 1 9 3 298 1 376 1 186 1 13 1 334 1 279 3 341 1 46 1 112 1 
156 1 128 1 108 1 266 1 
156 1 334 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 87 (173,273) (173,273) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 87 (173,273) (173,273) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 87 (173,273) (173,273) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 87 (173,273) (173,273) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
193 1 173 1 350 1 284 1 378 1 374 1 196 1 273 1 230 1 87 1 306 1 303 1 377 1 
193 1 173 1 350 1 284 1 378 1 374 1 196 1 273 1 230 1 87 1 306 1 303 1 377 1 
193 1 173 1 350 1 284 1 378 1 374 1 196 1 273 1 230 1 87 1 306 1 303 1 377 1 
193 1 173 1 350 1 284 1 378 1 374 1 196 1 273 1 230 1 87 1 306 1 303 1 377 1 
315 1 260 1 350 1 374 1 9 1 230 1 357 3 377 1 306 4 161 2 103 1 311 1 378 1 345 2 211 1 347 3 87 1 303 4 
350 1 374 1 230 1 357 1 377 1 306 2 128 1 193 1 80 1 103 1 15 1 311 1 196 1 57 1 87 1 303 2 
189 1 103 1 311 1 374 1 196 1 345 1 9 1 230 2 357 2 347 1 306 3 303 3 377 2 
189 1 315 1 260 1 263 1 161 2 196 1 345 4 97 1 347 7 303 9 350 1 374 1 9 3 230 2 357 5 306 9 377 2 103 1 34 1 311 1 233 1 378 1 211 1 87 1 
189 1 315 1 260 1 263 1 161 2 196 1 345 4 97 1 347 7 303 9 350 1 374 1 9 3 230 2 357 5 306 9 377 2 103 1 34 1 311 1 233 1 378 1 211 1 87 1 
314 1 42 1 312 1 
124 1 312 1 301 2 
14 2 332 1 324 2 337 1 356 2 48 2 223 2 225 2 
130 2 108 1 190 1 318 1 239 1 337 1 135 1 48 3 137 1 54 1 324 3 274 1 302 1 223 2 225 2 278 2 328 2 249 1 252 1 351 1 28 1 375 1 356 2 358 1 231 1 359 2 129 1 32 1 79 1 14 2 16 1 332 1 183 2 286 1 210 1 259 1 237 1 
257 1 271 1 14 1 332 1 324 1 356 1 48 1 223 1 120 1 225 1 
42 1 30 1 48 1 136 1 35 1 36 1 37 1 324 1 312 1 362 1 223 1 288 1 106 1 120 1 
42 1 30 2 356 1 48 1 136 1 14 1 35 2 37 1 324 1 312 1 362 1 223 1 106 1 120 1 225 1 
198 1 35 1 30 1 31 1 266 1 
198 1 279 1 42 1 35 2 30 2 147 1 312 1 266 1 
35 1 30 1 266 1 
198 1 30 1 356 1 48 1 293 1 257 1 271 1 14 1 35 1 332 1 324 1 223 1 120 1 225 1 
312 1 
198 1 93 1 42 1 35 2 30 2 147 1 312 1 266 1 
198 2 213 1 202 1 42 1 30 5 100 2 147 1 47 1 266 2 162 1 163 1 35 5 94 1 81 1 285 2 312 1 72 2 86 1 248 1 
249 1 328 1 28 1 239 1 48 2 280 1 231 1 359 1 129 1 296 1 137 1 79 1 14 1 210 1 324 2 274 1 223 1 325 1 225 1 278 1 
314 1 337 1 
148 1 356 1 337 2 48 2 14 1 324 2 223 2 313 1 225 1 
296 1 134 1 127 1 
328 1 249 1 28 1 239 1 337 1 177 1 48 1 359 1 231 1 129 1 79 1 137 1 210 1 324 1 274 1 278 1 
14 3 324 3 356 1 337 1 48 3 223 3 325 1 225 3 
271 1 14 1 324 1 48 1 223 1 120 1 225 1 
14 1 148 1 324 1 356 1 48 1 223 1 120 1 225 1 313 1 
130 1 190 1 318 1 239 1 337 1 135 1 48 4 136 1 137 1 324 4 274 1 223 3 120 1 325 1 225 3 278 1 249 1 328 1 252 1 351 1 28 1 30 1 375 1 145 1 356 2 358 1 256 1 280 1 231 1 359 1 129 1 79 1 14 3 16 1 35 1 332 1 183 2 286 1 210 1 37 1 259 1 362 1 106 1 313 1 
14 1 324 2 337 1 48 2 223 2 288 1 157 1 325 1 225 1 
30 1 145 1 356 1 48 3 280 1 136 1 14 3 35 1 37 1 324 3 312 1 362 1 223 3 120 1 106 1 325 2 313 1 225 3 19 1 
134 1 356 1 48 2 296 1 14 2 324 2 223 2 325 1 313 1 225 2 
328 1 249 1 28 1 239 1 337 1 48 1 359 1 231 1 129 1 79 1 137 1 210 1 324 1 274 1 278 1 
328 1 28 1 239 1 337 1 48 1 359 1 231 1 79 1 137 1 210 1 324 1 64 1 274 1 278 1 246 1 
130 4 190 1 290 1 90 1 135 1 134 2 367 1 22 1 241 1 321 1 296 2 369 1 252 1 229 1 10 1 358 1 281 1 127 2 207 1 16 1 183 2 286 2 259 1 237 2 
188 1 14 1 37 1 324 1 48 1 223 1 120 1 225 1 
354 1 356 1 337 1 48 5 157 1 280 1 23 1 14 4 324 5 223 5 288 1 325 2 225 4 313 1 
188 1 271 1 14 2 324 2 48 2 223 2 120 1 225 2 
26 1 40 1 
26 1 40 1 
372 1 175 1 
372 1 175 1 
372 1 175 1 
26 1 371 1 40 1 
26 1 371 1 40 1 
215 1 26 1 40 1 
372 1 175 1 26 2 192 1 40 2 206 1 
26 1 371 1 40 1 
20 1 26 1 40 1 
20 1 26 1 40 1 
20 1 26 1 40 1 
251 2 59 1 26 2 132 1 30 2 21 1 111 2 206 1 180 1 160 1 78 1 35 2 222 3 18 2 38 1 312 1 169 2 235 2 40 2 
215 1 110 1 337 1 111 1 48 2 295 1 52 1 4 1 222 1 221 1 95 1 324 2 169 1 223 2 225 2 26 1 30 1 255 1 78 1 14 2 35 1 18 1 235 1 40 1 
350 1 378 1 87 1 
350 1 80 1 87 1 
309 1 350 3 80 1 378 2 264 1 364 1 
309 1 350 2 80 1 353 1 378 1 264 1 
309 2 350 2 80 1 378 1 264 1 
42 1 110 1 266 1 52 1 92 1 4 1 162 1 341 1 369 1 301 3 72 1 248 3 198 4 199 2 202 2 100 1 30 5 124 1 62 1 147 1 10 1 12 1 281 1 126 1 310 1 33 2 331 2 207 1 35 5 285 1 312 2 65 1 
42 1 110 4 45 1 266 6 162 1 341 2 369 3 344 1 301 9 72 2 247 1 248 8 198 7 202 6 203 5 30 9 100 2 124 3 62 1 147 1 10 3 149 1 31 5 281 3 126 3 308 1 33 6 331 6 207 3 35 9 285 2 17 1 312 5 65 2 86 1 
42 1 110 1 341 1 369 1 72 1 301 4 248 3 198 2 199 1 202 2 100 1 30 3 124 2 10 1 12 1 281 1 126 1 310 1 33 2 35 3 207 1 331 2 285 1 312 3 65 1 86 1 
42 1 110 2 45 1 341 1 369 2 301 7 72 1 248 5 198 3 199 2 202 4 100 1 30 4 124 3 10 2 12 1 281 2 126 2 308 1 310 1 33 4 331 4 35 4 207 2 285 1 17 1 312 4 65 1 86 1 
314 1 239 1 346 1 
239 1 178 1 
164 1 
28 1 239 1 
28 1 239 3 346 2 170 1 231 1 236 1 
28 1 239 1 231 1 
214 1 239 1 
187 1 140 1 130 7 27 2 373 1 290 3 122 1 281 1 241 2 182 1 207 1 208 1 343 1 286 3 258 1 335 1 237 4 
187 1 140 1 130 7 27 2 373 1 290 3 122 1 281 1 241 2 182 1 207 1 208 1 343 1 286 3 258 1 335 1 237 4 
187 1 140 1 130 7 27 2 373 1 290 3 122 1 281 1 241 2 182 1 207 1 208 1 343 1 286 3 258 1 118 1 335 1 237 4 
187 2 88 1 130 31 190 1 290 10 91 1 241 5 369 3 117 1 343 2 139 1 168 1 275 4 140 2 27 3 373 1 29 1 122 5 7 1 10 3 358 1 126 3 281 4 181 3 182 1 16 1 207 4 208 1 183 2 286 15 258 2 259 1 335 1 237 16 
187 1 130 9 190 2 290 4 294 1 241 3 343 1 140 1 27 2 373 1 122 1 7 1 358 2 281 1 182 1 207 1 333 1 16 2 183 4 286 4 258 1 259 2 237 5 335 1 
319 1 68 1 113 1 137 1 196 1 274 1 347 1 171 1 278 1 276 1 303 2 328 1 350 2 374 1 305 1 376 1 230 1 357 1 359 1 306 2 377 1 13 1 329 1 80 1 103 1 311 1 378 1 39 1 364 1 87 1 
66 1 319 1 68 1 113 1 340 1 3 1 137 1 196 1 274 1 171 1 347 2 278 1 276 1 303 3 328 1 350 2 305 1 376 1 230 1 357 1 359 1 306 3 377 1 329 1 80 1 103 1 311 1 378 1 364 1 87 1 
328 1 350 2 68 1 376 1 357 1 359 1 113 1 306 2 3 1 340 1 137 1 329 1 80 1 103 1 311 1 378 1 196 1 274 1 364 1 347 2 171 1 87 1 276 1 278 1 303 2 
66 1 317 1 238 1 239 1 338 1 113 2 137 1 196 2 274 1 171 2 278 1 303 1 328 1 28 1 230 1 359 1 306 1 377 1 329 2 79 1 283 1 151 1 152 1 
319 1 68 1 113 1 340 1 137 1 196 1 274 1 171 1 278 1 276 1 303 1 328 1 350 2 374 1 305 1 376 1 230 1 359 1 306 1 377 1 13 1 329 1 80 1 378 1 364 1 87 1 
186 1 
289 2 41 2 42 1 239 1 48 1 339 1 136 1 137 1 341 1 301 2 96 2 248 2 253 1 202 2 6 1 100 1 147 3 359 2 307 1 151 1 209 1 312 2 362 1 363 2 106 1 261 4 317 1 156 2 266 6 162 1 269 1 115 1 323 1 370 1 324 1 72 1 274 1 223 1 120 1 278 2 328 2 73 1 28 1 30 5 124 2 74 1 232 1 79 2 330 2 35 5 285 1 36 1 37 1 287 2 288 1 
261 2 253 1 6 1 30 3 147 1 74 1 48 1 266 2 136 1 339 1 307 1 330 1 93 1 35 3 36 1 37 1 324 1 362 1 223 1 120 1 106 1 288 1 
261 3 41 1 42 1 48 1 266 1 339 1 136 1 93 1 324 1 223 1 120 1 253 1 6 1 30 3 74 1 147 1 307 1 35 3 36 1 37 1 362 1 312 1 288 1 106 1 
261 3 41 1 42 1 48 1 339 1 136 1 266 2 93 1 324 1 223 1 120 1 253 1 6 1 30 3 147 1 74 1 307 1 330 1 35 3 36 1 37 1 362 1 312 1 288 1 106 1 363 1 
289 2 41 4 42 5 133 1 48 1 136 1 339 1 298 1 93 1 96 2 248 1 253 1 202 1 6 1 142 1 100 1 147 3 307 1 102 1 362 1 312 5 363 4 106 1 261 6 156 2 266 7 162 1 115 1 324 1 72 1 223 1 120 1 174 1 73 1 30 5 124 2 74 1 330 4 35 5 36 1 285 1 37 1 287 2 288 1 
289 2 261 4 41 2 42 1 48 1 156 2 266 4 339 1 136 1 162 1 115 1 324 1 301 2 72 1 96 2 223 1 120 1 248 1 73 1 253 1 202 1 6 1 100 1 30 4 124 2 147 2 74 1 307 1 330 2 35 4 209 1 36 1 285 1 37 1 287 2 312 2 362 1 363 2 288 1 106 1 
289 2 261 4 41 2 42 1 133 1 48 1 156 2 266 4 339 1 136 1 162 1 115 1 324 1 72 1 96 2 223 1 120 1 248 1 73 1 174 1 253 1 202 1 6 1 30 4 100 1 124 2 147 2 74 1 307 1 102 1 330 2 35 4 36 1 285 1 37 1 287 2 312 1 362 1 363 2 288 1 106 1 
289 2 261 4 41 2 42 1 133 1 48 1 156 2 266 4 339 1 136 1 162 1 115 1 324 1 72 1 96 2 223 1 120 1 248 1 73 1 174 1 253 1 202 1 6 1 30 4 100 1 124 2 147 2 74 1 307 1 102 1 330 2 35 4 36 1 285 1 37 1 287 2 312 1 362 1 363 2 288 1 106 1 
261 4 41 2 109 2 42 1 0 2 48 1 266 4 339 1 136 1 162 1 272 1 324 1 301 2 72 1 96 2 223 1 120 1 248 1 24 1 349 1 73 1 253 1 202 1 6 1 30 4 100 1 147 2 74 1 307 1 102 1 330 2 35 4 36 1 285 1 37 1 287 2 312 1 362 1 363 2 288 1 106 1 
289 2 261 5 41 3 42 1 133 1 48 1 156 2 339 1 136 1 266 5 162 1 115 1 324 1 72 1 96 2 223 1 120 1 248 1 73 1 174 1 253 1 202 1 6 1 100 1 30 4 142 1 124 2 147 2 74 1 307 1 102 1 330 3 35 4 285 1 36 1 37 1 287 2 312 1 362 1 288 1 106 1 363 3 
289 2 261 5 41 3 42 1 133 1 48 1 156 2 339 1 136 1 266 5 162 1 115 1 324 1 72 1 96 2 223 1 120 1 248 1 73 1 174 1 253 1 202 1 6 1 100 1 30 4 142 1 124 2 147 2 74 1 307 1 102 1 330 3 35 4 285 1 36 1 37 1 287 2 312 1 362 1 288 1 106 1 363 3 
261 4 41 2 109 2 42 1 0 2 48 1 266 4 339 1 136 1 162 1 324 1 301 2 72 1 96 2 223 1 120 1 248 1 24 1 73 1 253 1 202 1 6 1 100 1 30 4 147 2 74 1 307 1 330 2 35 4 209 1 36 1 285 1 37 1 287 2 312 1 362 1 363 2 288 1 106 1 
314 1 187 1 130 6 190 1 290 2 134 1 135 1 337 2 241 2 321 1 296 1 140 1 252 1 27 1 373 1 358 1 281 1 127 1 182 1 16 1 207 1 183 2 286 3 259 1 335 1 237 3 
130 14 108 1 131 1 190 2 318 1 290 2 216 1 337 1 135 2 134 4 112 1 241 1 296 11 116 1 5 1 369 2 117 1 275 3 252 1 29 1 122 1 10 1 358 2 126 2 281 1 127 11 181 3 16 2 207 2 183 4 286 6 259 2 237 8 
130 2 108 1 190 1 318 1 216 1 239 1 337 1 134 1 135 1 48 2 137 1 324 2 274 1 223 1 325 1 278 1 226 1 225 1 249 1 328 1 252 1 28 1 177 1 358 1 280 1 231 1 359 1 129 1 63 1 79 1 14 1 16 1 183 2 210 1 185 1 286 1 259 1 237 1 
187 1 130 20 190 3 290 8 239 2 337 2 135 3 134 7 48 3 50 2 241 4 340 1 137 2 296 7 138 1 299 1 140 1 249 2 252 3 351 2 355 2 10 2 358 3 359 3 14 1 16 3 207 3 210 2 259 3 316 1 108 1 318 1 216 1 369 2 324 3 274 2 223 1 325 1 278 3 225 1 328 3 25 2 27 1 373 1 28 2 122 4 280 1 281 3 231 2 126 2 127 7 282 2 129 2 79 1 182 1 183 6 286 10 335 1 237 10 
130 2 89 1 108 1 317 1 190 2 318 1 44 1 239 3 135 2 48 1 321 1 340 1 268 1 137 2 322 1 195 1 324 1 274 2 223 1 302 2 325 1 225 1 278 7 250 1 328 8 252 2 28 2 358 2 359 8 79 2 14 1 16 2 151 1 183 4 286 1 84 1 259 2 39 1 237 1 
130 3 190 1 290 1 216 1 134 1 135 1 48 1 241 1 296 1 369 1 324 1 223 1 225 1 252 1 356 1 10 1 358 1 126 1 281 1 127 1 14 1 16 1 207 1 183 2 184 1 286 2 259 1 313 1 237 1 
130 2 252 1 190 1 290 1 122 1 90 1 134 1 135 1 358 1 127 1 321 1 296 1 369 1 16 1 207 1 183 2 259 1 237 2 
130 2 252 1 190 1 290 1 229 1 134 1 135 1 10 1 358 1 281 1 241 1 127 1 321 1 296 1 16 1 183 2 286 2 259 1 
130 4 190 1 290 2 135 1 134 2 241 1 321 1 296 2 369 1 252 1 122 1 10 1 358 1 126 1 281 1 127 2 207 1 16 1 183 2 286 2 259 1 237 2 
130 2 252 1 190 1 290 1 122 1 90 1 134 1 135 1 358 1 127 1 296 1 369 1 195 1 16 1 207 1 183 2 259 1 237 2 
130 2 252 1 190 1 290 1 229 1 134 1 135 1 10 1 358 1 281 1 241 1 127 1 296 1 195 1 16 1 183 2 286 2 259 1 
130 4 190 1 290 2 135 1 134 2 241 1 296 2 369 1 195 1 252 1 122 1 10 1 358 1 126 1 281 1 127 2 207 1 16 1 183 2 286 2 259 1 237 2 
130 4 190 1 290 2 135 1 134 2 241 1 296 2 369 1 252 1 122 1 10 1 358 1 126 1 281 1 127 2 207 1 16 1 183 2 286 2 259 1 237 2 
130 2 108 1 190 1 318 1 239 1 337 1 135 1 48 1 137 1 324 1 274 1 278 1 249 1 328 1 252 1 351 1 28 1 358 1 231 1 359 1 129 1 79 1 16 1 183 2 210 1 286 1 259 1 237 1 
130 1 328 1 252 1 190 1 318 1 337 1 135 1 76 1 358 1 359 1 79 1 53 1 16 1 183 2 286 1 259 1 120 1 278 1 
130 4 190 1 290 2 216 1 135 1 134 2 241 1 296 2 369 1 252 1 122 1 10 1 358 1 126 1 281 1 127 2 207 1 16 1 183 2 286 2 259 1 237 2 
130 4 190 1 290 2 239 1 134 2 135 1 48 1 241 1 296 2 137 1 369 1 324 1 274 1 278 1 249 1 328 1 252 1 351 1 122 1 28 1 10 1 358 1 281 1 231 1 359 1 126 1 127 2 282 1 129 1 207 1 16 1 183 2 286 2 210 1 259 1 39 1 237 2 
130 3 190 1 290 1 216 1 135 1 134 1 48 1 296 1 369 1 324 1 223 1 225 1 252 1 122 1 356 1 10 1 358 1 281 1 126 1 127 1 14 1 16 1 207 1 183 2 286 1 259 1 380 1 313 1 237 2 
130 19 190 2 290 6 218 1 294 1 241 3 51 1 194 2 369 3 117 1 275 2 99 1 29 1 122 3 204 1 8 1 10 3 11 2 358 2 126 3 281 3 181 1 16 2 207 3 183 4 286 10 259 2 234 1 381 1 237 9 
130 26 190 3 290 4 294 1 241 2 267 1 51 2 194 1 369 3 220 1 166 1 275 2 99 1 60 1 122 2 29 2 7 2 204 1 146 1 10 2 11 4 358 3 281 2 126 3 181 2 16 3 207 3 183 6 286 12 379 1 259 3 234 2 381 1 237 14 
187 1 130 41 190 3 290 8 218 1 294 1 241 4 267 1 51 2 194 1 369 4 117 1 220 1 166 1 119 1 275 4 140 1 27 1 373 1 60 1 99 1 29 3 122 4 7 1 204 1 146 1 10 4 11 4 358 3 126 4 281 5 181 3 182 1 16 3 207 5 183 6 379 1 286 21 259 3 234 1 381 1 335 1 237 20 
187 1 130 38 190 4 290 7 218 1 294 1 241 4 267 1 51 2 194 1 369 4 117 1 220 1 166 1 119 1 275 4 140 1 27 1 373 1 60 1 99 1 29 3 122 3 7 2 204 1 146 1 10 3 11 4 358 4 126 4 281 4 181 3 182 1 16 4 207 5 183 8 379 1 286 18 259 4 234 1 381 1 335 1 237 20 
187 1 130 52 131 2 190 2 290 14 294 1 241 7 267 1 51 1 194 1 369 7 117 2 220 1 166 1 275 4 140 1 27 1 373 1 60 1 99 1 29 2 122 7 7 1 204 1 146 1 10 7 11 4 358 2 126 7 281 8 181 4 182 1 16 2 207 8 183 4 379 1 286 25 259 2 234 1 381 1 335 1 237 27 
26 1 132 1 21 1 292 1 18 1 111 1 235 1 169 1 40 1 206 1 
215 1 221 1 
58 1 26 1 334 1 18 1 111 1 235 1 169 1 40 1 114 1 
251 1 59 1 26 1 132 1 30 1 21 1 111 1 206 1 180 1 78 1 35 1 222 2 18 1 38 1 312 1 169 1 235 1 40 1 
251 1 59 1 26 1 132 1 30 1 21 1 111 1 206 1 180 1 78 1 35 1 222 2 18 1 38 1 312 1 169 1 235 1 40 1 
251 1 59 1 26 1 132 1 30 1 21 1 111 1 206 1 180 1 78 1 35 1 222 2 18 1 38 1 312 1 169 1 235 1 40 1 
291 1 192 1 371 1 
291 1 192 1 371 1 
20 1 197 1 
20 1 192 1 197 1 
255 1 295 1 
215 1 110 1 337 1 111 1 48 2 295 1 52 1 69 1 4 1 222 1 221 1 95 1 324 2 169 1 223 2 225 2 198 1 251 1 26 1 30 1 255 1 14 2 35 1 38 1 18 1 235 1 40 1 
291 1 371 1 
20 1 192 1 197 1 
130 2 108 1 190 1 318 1 216 1 239 1 154 1 135 1 48 2 137 1 322 1 70 1 324 2 274 1 223 2 302 2 278 2 98 1 328 2 252 1 28 1 123 1 358 1 359 2 16 1 183 2 286 1 84 1 259 1 365 1 237 1 
328 2 141 1 200 1 350 2 319 1 376 1 68 1 359 2 340 1 137 1 297 1 80 1 378 1 274 1 39 1 364 1 171 1 87 1 278 2 
328 1 141 1 350 2 262 1 319 1 376 1 68 1 359 1 340 1 137 1 80 1 378 1 274 1 364 1 171 1 87 1 278 1 
328 1 200 1 317 1 238 1 28 1 144 1 239 1 359 1 137 1 79 1 151 1 274 1 171 1 278 1 
328 1 141 1 200 1 350 2 319 1 376 1 68 1 359 1 340 1 137 1 297 1 80 1 378 1 274 1 364 1 171 1 87 1 278 1 
159 1 
314 1 202 1 163 1 42 1 94 1 312 1 248 1 
289 1 202 1 42 1 30 1 100 1 124 1 147 1 156 1 266 1 162 1 115 1 35 1 285 1 312 2 301 1 72 1 248 1 
336 1 42 2 239 10 136 2 137 4 341 2 342 2 242 2 94 1 55 1 301 12 346 2 248 9 304 2 202 8 100 4 355 2 147 3 101 2 254 2 10 2 205 2 359 3 150 2 207 2 312 8 366 1 214 2 266 5 162 4 163 1 369 2 274 3 72 4 278 3 121 1 328 3 172 2 28 3 30 5 124 6 178 3 231 3 126 2 281 2 232 1 79 1 33 6 35 5 331 6 285 4 83 1 39 1 236 1 
42 2 266 1 267 1 162 2 341 1 369 2 220 1 166 1 301 6 72 2 275 1 327 1 248 8 60 1 202 5 30 1 29 1 100 2 143 1 124 3 147 1 254 1 10 2 205 2 126 2 281 2 232 1 181 1 33 5 35 1 331 5 207 2 285 2 379 1 312 5 
187 1 48 1 293 1 162 1 271 1 324 1 71 1 72 1 223 1 120 1 225 1 248 2 140 1 174 1 202 2 100 1 30 1 254 1 356 1 205 2 281 1 257 1 14 1 35 1 207 2 332 1 285 1 335 1 
202 1 42 1 100 1 162 1 163 1 94 1 285 1 72 1 312 1 248 1 
202 5 355 1 124 5 254 1 10 2 205 2 126 2 281 2 369 2 33 5 207 2 331 5 301 10 312 5 248 5 
42 1 35 1 30 1 147 1 312 1 266 1 
317 1 217 1 239 1 266 4 137 1 162 1 341 2 323 1 370 1 300 1 55 2 274 1 72 2 278 4 248 2 121 1 328 4 202 2 28 1 100 2 30 3 147 2 359 4 232 2 79 2 35 3 151 1 285 2 86 1 
130 1 190 1 318 1 239 1 337 1 135 1 48 3 137 1 324 3 274 1 223 2 278 1 225 2 328 1 249 1 252 1 351 1 28 1 375 1 356 2 358 1 359 1 231 1 129 1 79 1 14 2 16 1 332 1 183 2 286 1 210 1 259 1 
27 1 202 2 42 2 100 1 124 2 232 1 162 1 341 1 33 2 331 2 285 1 301 4 72 1 312 4 248 1 
352 1 18 1 235 1 
352 1 18 1 235 1 
21 1 18 1 235 1 179 1 295 1 
352 1 18 1 235 1 
361 1 18 1 235 1 
361 1 18 1 235 1 
361 1 18 1 235 1 
18 1 235 1 
26 1 40 1 
187 1 130 8 140 1 27 1 190 2 373 1 290 3 122 1 7 1 358 2 281 1 241 2 182 1 207 1 16 2 183 4 286 4 259 2 335 1 237 4 
187 1 314 1 130 6 140 1 27 1 182 1 373 1 207 1 290 2 286 3 281 1 237 3 335 1 241 2 
130 4 190 1 290 2 122 1 10 1 358 1 281 1 126 1 241 1 369 1 16 1 207 1 183 2 286 2 167 1 259 1 237 2 
130 7 290 2 29 1 122 1 10 1 281 1 126 1 241 1 181 1 369 1 117 1 207 1 286 4 275 2 237 3 
187 2 130 23 131 1 190 2 153 1 290 9 112 1 241 5 369 2 117 1 275 2 140 2 27 1 373 1 122 4 7 2 10 2 358 2 126 2 281 3 181 2 182 1 207 3 16 2 183 4 286 12 259 2 335 1 237 11 
130 1 286 1 275 1 
130 1 181 1 237 1 
130 6 190 1 290 3 122 1 355 1 10 1 358 1 126 1 281 1 241 2 369 1 16 1 207 1 183 2 167 1 286 3 259 1 237 3 
130 12 190 1 290 2 294 1 241 1 267 1 369 2 220 1 166 1 275 1 60 1 122 1 29 1 10 2 358 1 126 2 281 2 181 1 16 1 207 2 183 2 286 6 379 1 259 1 237 6 
187 1 130 6 140 1 290 2 122 1 281 1 241 1 207 1 286 3 335 1 237 3 
187 1 140 1 130 3 153 1 190 1 373 1 290 2 122 1 7 1 358 1 241 1 182 1 16 1 183 2 286 2 259 1 237 1 
187 2 140 2 130 10 190 1 290 5 122 2 358 1 294 1 281 2 241 3 16 1 207 2 183 2 286 5 71 1 259 1 237 5 335 1 
130 2 190 1 290 1 122 1 358 1 294 1 369 1 16 1 207 1 183 2 259 1 237 2 
130 4 190 1 290 2 122 1 10 1 358 1 281 1 294 1 126 1 241 1 369 1 16 1 207 1 183 2 286 2 259 1 237 2 
187 1 130 3 140 1 153 1 190 3 290 2 122 1 7 1 218 1 358 3 294 1 241 1 16 3 183 6 286 2 259 3 237 1 
187 3 88 1 130 34 153 1 190 5 290 12 218 1 91 1 294 1 241 7 369 3 117 1 139 1 167 1 275 4 140 3 27 1 373 1 29 1 122 5 7 2 10 3 358 5 126 3 281 5 181 3 182 1 16 5 207 5 183 10 286 18 259 5 335 2 237 16 
187 1 130 8 190 1 290 2 294 1 241 2 275 1 140 1 27 1 60 1 373 1 29 1 358 1 281 1 181 1 182 1 207 1 16 1 183 2 286 4 259 1 237 4 335 1 
187 1 130 11 190 2 290 3 294 1 241 2 369 1 117 1 167 1 275 2 140 1 27 1 373 1 60 1 29 1 122 1 358 2 281 1 126 1 181 1 182 1 16 2 207 2 183 4 286 5 259 2 335 1 237 6 
187 1 130 19 190 3 290 4 294 1 241 3 267 1 369 2 220 1 167 1 166 1 275 1 140 1 27 1 373 1 60 1 122 1 29 1 7 1 10 2 358 3 126 2 281 3 181 1 182 1 16 3 207 3 183 6 286 10 379 1 259 3 335 1 237 9 
187 1 130 17 190 3 290 5 294 1 241 3 267 1 369 2 220 1 167 1 166 1 275 1 140 1 27 1 373 1 60 1 122 2 29 1 7 1 10 1 358 3 126 2 281 2 181 1 182 1 16 3 207 3 183 6 286 7 379 1 259 3 335 1 237 10 
187 1 130 8 190 1 290 2 294 1 241 2 275 1 140 1 27 1 60 1 373 1 29 1 358 1 281 1 181 1 182 1 207 1 16 1 183 2 286 4 259 1 237 4 335 1 
130 12 190 1 290 2 294 1 241 1 267 1 369 2 220 1 166 1 275 1 60 1 122 1 29 1 10 2 358 1 126 2 281 2 181 1 16 1 207 2 183 2 286 6 379 1 259 1 237 6 
187 1 130 18 190 4 290 5 294 1 241 3 267 1 369 2 220 1 166 1 167 1 275 1 140 1 27 1 373 1 60 1 122 2 29 1 7 2 10 1 358 4 126 2 281 2 181 1 182 1 16 4 207 3 183 8 286 8 379 1 259 4 335 1 237 10 
130 16 190 4 290 6 218 1 294 1 241 3 267 1 369 3 220 1 166 1 275 1 60 1 122 3 29 1 7 2 10 2 358 4 126 3 281 2 181 1 16 4 207 3 183 8 286 7 379 1 259 4 237 9 
187 3 130 7 140 3 373 1 290 6 122 3 281 1 241 3 182 2 207 1 286 4 335 1 237 3 
187 1 130 18 190 4 290 4 218 1 294 1 241 3 267 1 369 2 220 1 166 1 275 1 140 1 27 1 373 1 60 1 122 1 29 1 7 2 10 1 358 4 126 2 281 2 181 1 182 1 16 4 207 3 183 8 286 8 379 1 259 4 335 1 237 10 
244 1 324 1 337 1 48 1 223 1 288 1 157 1 
191 1 176 1 337 1 265 1 48 1 75 1 157 1 104 1 244 1 324 1 223 1 288 1 
314 1 328 1 137 1 79 1 317 1 28 1 151 1 239 1 274 1 359 1 278 1 
328 1 249 1 28 1 239 1 337 1 48 2 231 1 359 1 137 1 79 1 14 1 210 1 324 2 274 1 223 1 325 1 225 1 278 1 
328 1 249 1 214 1 28 2 239 3 337 1 48 2 231 2 359 1 137 1 242 1 14 2 37 1 210 1 324 2 55 1 274 1 223 2 120 1 106 1 325 1 225 1 278 1 
214 1 239 3 337 1 48 2 137 1 242 1 55 1 324 2 274 1 223 2 120 1 224 1 325 1 278 2 225 1 328 2 28 2 359 2 231 2 14 2 210 1 37 1 64 1 106 1 
328 3 214 1 42 1 28 1 30 2 239 4 178 1 231 1 359 3 136 1 266 1 79 1 137 1 242 1 35 2 55 1 312 1 85 1 274 1 346 1 245 1 224 1 278 3 
328 3 172 1 214 1 42 1 28 1 30 2 239 4 178 1 231 1 359 3 136 1 266 1 79 1 137 1 242 1 35 2 55 1 312 1 274 1 346 1 224 1 278 3 
328 1 137 1 89 1 274 1 359 1 278 1 
250 1 328 7 89 1 67 1 28 2 44 1 239 3 359 7 231 1 340 1 268 1 77 1 79 2 137 3 82 1 84 1 274 2 302 1 39 1 278 6 236 1 
187 1 130 6 190 2 290 2 239 1 134 1 135 2 337 2 48 2 241 2 137 1 296 1 98 1 249 1 140 1 252 2 351 1 358 2 359 1 14 1 16 2 207 1 210 1 259 2 216 1 324 2 274 1 223 1 325 1 278 1 225 1 25 1 328 1 27 1 373 1 28 1 231 1 281 1 127 1 282 1 129 1 182 1 183 4 286 3 39 1 335 1 237 3 
42 1 239 2 266 2 136 1 162 2 163 1 342 1 94 1 72 2 346 1 278 1 248 1 198 1 121 1 328 1 172 1 304 1 202 1 100 2 30 3 147 1 178 1 359 1 79 1 150 1 35 3 285 2 312 1 
328 2 89 1 336 1 28 1 239 2 359 2 231 1 137 2 274 1 39 1 346 1 278 2 236 1 
328 4 317 1 28 1 239 1 359 4 137 1 79 1 270 1 151 1 274 1 39 1 224 1 278 4 
328 2 316 1 228 1 28 1 239 1 359 2 231 1 77 1 137 2 82 1 165 1 55 1 274 1 278 2 
328 1 137 1 79 1 350 1 80 1 68 1 274 1 87 1 359 1 278 1 
340 1 328 2 137 1 28 1 239 1 84 1 274 1 154 1 39 1 359 2 278 2 
328 5 250 1 317 1 28 2 239 3 44 1 359 5 79 1 137 2 270 1 151 1 55 1 84 1 274 2 39 1 278 4 
328 5 317 1 28 2 239 3 44 1 368 1 359 5 79 1 137 2 270 1 151 1 55 1 84 1 274 2 39 1 278 4 
328 1 28 1 239 1 337 1 48 2 231 1 359 1 137 1 79 1 14 1 210 1 324 2 64 1 274 1 223 1 325 1 225 1 278 1 
328 1 67 1 28 1 239 1 359 1 231 1 77 1 137 2 82 1 55 1 274 1 278 1 236 1 
212 1 70 1 123 1 324 1 48 1 223 1 1 1 365 1 2 1 
243 1 320 1 2 1 
212 1 125 1 337 1 1 1 2 1 
198 1 212 2 42 1 30 2 320 1 125 2 145 1 337 1 1 2 136 1 2 1 219 1 35 2 37 1 243 1 312 1 362 1 120 1 106 1 
314 1 103 1 311 1 357 1 
103 1 311 1 230 1 357 1 306 1 303 1 377 1 
329 1 196 1 306 1 
128 2 201 1 103 1 311 1 227 1 374 1 230 1 357 1 277 1 306 3 303 3 377 1 
161 1 103 1 311 1 230 1 357 1 347 1 306 2 303 2 377 1 
260 1 350 1 378 1 374 1 345 1 230 1 357 1 87 1 306 1 303 1 377 1 
103 1 374 1 230 1 357 1 306 1 303 1 377 1 
103 2 311 1 374 1 230 1 306 1 303 1 377 1 
43 1 61 1 374 1 230 2 357 1 155 1 377 2 306 2 103 1 303 2 
374 1 230 1 9 1 357 2 377 1 306 3 103 1 311 1 233 1 345 1 97 1 347 2 303 3 
350 2 80 1 103 1 311 1 378 1 374 1 230 1 357 1 347 1 364 1 87 1 360 1 306 2 303 2 377 1 
161 1 103 1 311 1 374 1 345 1 9 1 230 2 357 2 211 1 347 2 306 4 303 4 377 2 
103 1 311 1 374 1 230 1 357 1 306 1 303 1 377 1 
201 1 227 1 230 1 9 1 357 3 306 4 377 1 128 1 103 2 311 2 345 1 56 1 347 2 303 4 
374 1 46 1 230 1 357 1 377 1 306 2 103 1 34 1 311 1 347 1 348 1 303 2 
201 2 227 1 374 1 230 1 357 1 377 1 306 3 128 2 103 1 311 1 326 1 303 3 
105 1 357 2 49 2 240 1 
374 1 230 1 158 1 306 1 303 1 377 1 
103 1 311 1 374 1 230 1 357 1 97 1 347 1 306 2 303 2 377 1 
107 1 
103 1 311 1 374 1 230 1 357 1 306 1 303 1 377 1 
128 1 103 1 311 1 374 1 230 1 97 1 357 1 347 1 306 3 303 3 377 1 
345 1 56 1 9 1 357 1 
103 1 357 1 

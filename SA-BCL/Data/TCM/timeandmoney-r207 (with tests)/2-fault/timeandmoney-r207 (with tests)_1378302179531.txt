#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 326 10 89 203 110 353 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (14,170) 224 326 10 89 42 39 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 326 10 89 203 67 96 324 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 326 10 89 203 67 96 324 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 326 10 89 203 67 96 324 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 326 10 89 203 67 96 324 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 326 10 89 203 48 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 326 10 89 203 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 326 10 89 42 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 326 10 89 203 110 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 2 243 1 41 2 90 1 91 3 43 2 116 1 117 2 267 5 312 1 6 1 164 9 68 2 274 4 100 1 49 1 33 1 196 1 197 9 297 1 56 2 78 1 299 1 130 6 371 2 205 1 181 1 84 1 
22 2 243 1 41 2 90 1 91 3 43 2 116 1 267 5 117 2 312 1 6 1 164 9 68 2 274 4 100 1 49 1 33 1 196 1 197 9 297 1 56 2 78 1 299 1 130 6 371 2 205 1 181 1 84 1 
22 2 243 1 41 2 90 1 91 4 43 2 116 1 267 6 117 2 312 1 6 1 164 10 68 2 274 5 100 1 49 1 33 1 196 1 197 10 297 1 56 2 78 1 299 1 130 7 371 2 205 1 181 1 84 1 
22 2 243 1 41 2 90 1 91 2 43 2 116 1 267 4 117 1 312 1 6 1 164 7 68 2 274 3 100 1 49 1 33 1 196 1 197 7 297 1 56 2 78 1 130 4 371 2 205 1 181 1 84 1 
22 1 243 1 41 1 91 1 90 1 43 1 197 4 117 2 267 3 56 1 164 4 68 1 78 1 299 1 130 3 205 1 274 2 181 1 
22 1 41 1 363 1 90 1 217 1 43 1 116 1 197 2 267 1 105 1 6 1 164 2 68 1 371 1 205 1 181 1 
22 2 90 1 91 1 43 2 196 1 197 3 267 2 164 3 130 1 371 1 205 1 274 1 181 1 
22 2 243 1 41 1 91 3 90 1 43 2 184 1 267 5 117 2 312 1 164 9 68 1 274 4 196 1 197 9 297 1 56 1 58 1 78 1 130 7 299 1 371 1 205 1 181 1 
22 2 243 1 41 1 91 3 90 1 43 2 184 1 267 5 117 2 312 1 164 9 68 1 274 4 196 1 197 9 297 1 56 1 58 1 78 1 130 7 299 1 371 1 205 1 181 1 
11 1 26 1 72 1 
26 1 261 1 223 2 
171 2 320 2 288 1 321 2 311 2 338 1 357 2 141 2 
63 1 113 1 183 1 215 2 160 1 114 1 88 1 136 1 139 1 306 1 309 1 336 1 310 2 311 3 338 1 357 3 141 2 28 1 169 1 122 2 171 2 320 2 321 2 257 1 232 1 323 2 74 1 75 2 176 1 366 1 328 1 37 1 369 1 18 1 288 1 351 1 303 1 
171 1 182 1 229 1 320 1 61 1 288 1 321 1 311 1 357 1 141 1 
171 1 11 1 265 1 278 1 229 1 355 1 311 1 357 1 258 1 26 1 271 1 189 1 29 1 330 1 
171 1 11 1 278 2 229 1 320 1 355 1 321 1 311 1 141 1 357 1 258 1 26 1 189 1 29 2 330 1 
259 1 278 1 177 1 3 1 29 1 
240 1 11 1 26 1 278 2 177 1 335 1 3 1 29 2 
278 1 3 1 29 1 
171 1 182 1 278 1 229 1 320 1 321 1 311 1 141 1 357 1 177 1 61 1 29 1 288 1 377 1 
26 1 
11 1 26 1 278 2 177 1 335 1 79 1 3 1 29 2 
211 1 11 1 277 1 278 5 335 1 1 1 3 2 356 1 4 2 246 2 128 1 248 1 26 1 327 2 177 2 8 1 19 1 29 5 207 1 
63 1 171 1 333 1 12 1 183 1 88 1 136 1 139 1 321 1 257 1 311 2 141 1 357 2 323 1 75 1 176 1 369 1 169 1 122 1 170 1 
72 1 338 1 
171 2 118 1 320 1 321 1 146 1 311 2 338 2 141 1 357 2 
224 1 190 1 170 1 
226 1 63 1 183 1 88 1 136 1 139 1 257 1 311 1 338 1 357 1 323 1 75 1 176 1 369 1 169 1 122 1 
171 3 333 1 320 1 321 3 311 3 338 1 357 3 141 3 
171 1 182 1 229 1 321 1 311 1 357 1 141 1 
171 1 118 1 229 1 320 1 321 1 311 1 146 1 357 1 141 1 
63 1 333 1 113 1 183 1 215 1 160 1 114 1 88 1 136 1 139 1 290 1 306 1 336 1 355 1 309 1 310 2 311 4 338 1 357 4 141 3 7 1 189 1 29 1 169 1 146 1 122 1 171 3 12 1 278 1 229 1 320 2 257 1 321 3 232 1 323 1 258 1 75 1 176 1 366 1 369 1 18 1 288 1 303 1 330 1 
171 2 333 1 265 1 194 1 321 1 311 2 338 1 357 2 141 1 
171 3 333 2 12 1 278 1 229 1 231 1 320 1 355 1 321 3 311 3 141 3 357 3 258 1 26 1 7 1 189 1 29 1 146 1 330 1 
171 2 333 1 320 1 321 2 311 2 141 2 357 2 146 1 190 1 170 1 
63 1 183 1 136 1 88 1 139 1 257 1 311 1 338 1 357 1 323 1 75 1 176 1 369 1 169 1 122 1 
63 1 183 1 88 1 139 1 311 1 338 1 357 1 323 1 34 1 234 1 75 1 176 1 369 1 169 1 122 1 
113 1 215 4 160 1 306 1 92 1 310 2 162 1 272 1 145 1 224 2 123 1 170 2 190 2 173 1 232 1 326 1 298 1 36 1 366 1 14 1 37 2 131 1 18 2 303 1 
171 1 229 1 321 1 311 1 357 1 141 1 258 1 264 1 
171 5 333 2 265 1 12 1 289 1 256 1 320 1 194 1 321 4 311 5 141 4 357 5 338 1 146 1 
171 2 182 1 229 1 321 2 311 2 357 2 141 2 264 1 
339 1 220 1 
339 1 220 1 
235 1 329 1 
235 1 329 1 
235 1 329 1 
339 1 220 1 165 1 
339 1 220 1 165 1 
339 1 25 1 220 1 
339 2 227 1 235 1 220 2 329 1 375 1 
339 1 220 1 165 1 
339 1 220 1 285 1 
339 1 220 1 285 1 
339 1 220 1 285 1 
253 2 276 1 227 1 212 1 304 1 87 1 278 2 337 1 52 2 339 2 220 2 142 1 200 2 26 1 186 2 367 3 301 2 29 2 69 1 
214 1 137 1 311 2 338 1 141 2 357 2 268 1 339 1 25 1 220 1 186 1 29 1 69 1 344 1 253 1 171 2 294 1 278 1 321 2 52 1 367 1 301 1 204 1 82 1 
56 1 68 1 41 1 
68 1 41 1 363 1 
56 2 68 3 104 1 363 1 250 1 31 1 
56 1 77 1 68 2 104 1 363 1 250 1 
56 1 68 2 104 2 363 1 250 1 
335 1 2 2 3 1 92 1 4 1 246 1 268 1 248 2 26 2 121 1 8 1 272 1 29 5 223 3 70 1 10 1 11 1 278 5 319 1 51 2 54 1 149 2 128 3 326 1 281 1 327 1 177 4 261 1 131 1 204 1 82 1 85 1 
158 1 335 1 2 6 3 6 356 1 92 3 4 2 66 1 246 2 248 6 161 5 26 5 270 1 8 1 272 3 29 9 223 9 70 2 10 3 11 1 278 9 101 1 319 2 149 6 259 5 128 8 326 3 281 1 327 2 177 7 38 1 261 3 131 3 204 4 17 1 
2 2 356 1 92 1 4 1 246 1 248 2 26 3 272 1 29 3 223 4 70 1 10 1 11 1 278 3 319 1 51 1 54 1 128 3 149 2 326 1 327 1 177 2 261 2 204 1 131 1 85 1 
158 1 2 4 356 1 92 2 4 1 246 1 248 4 26 4 270 1 272 2 29 4 223 7 70 1 10 2 11 1 278 4 319 1 51 2 54 1 149 4 128 5 326 2 327 1 177 3 261 3 38 1 204 2 131 2 85 1 
88 1 72 1 81 1 
88 1 230 1 
286 1 
176 1 88 1 
63 1 176 1 88 3 154 1 81 2 102 1 
63 1 176 1 88 1 
88 1 191 1 
157 1 64 1 173 3 215 7 334 1 255 1 92 1 198 1 298 2 120 1 37 4 131 1 260 1 18 3 370 1 238 1 62 2 
157 1 64 1 173 3 215 7 334 1 255 1 92 1 198 1 298 2 120 1 37 4 131 1 260 1 18 3 370 1 238 1 62 2 
157 1 172 1 64 1 173 3 215 7 334 1 255 1 92 1 198 1 298 2 120 1 37 4 131 1 260 1 18 3 370 1 238 1 62 2 
10 1 215 5 255 2 362 1 89 1 326 1 37 4 203 1 131 1 260 1 18 1 110 1 353 1 156 1 62 1 
113 2 64 1 215 9 160 2 334 1 306 2 92 1 310 4 94 1 120 1 148 1 173 4 255 1 198 1 298 3 366 2 37 5 131 1 260 1 18 4 370 1 208 1 238 1 62 2 
22 1 40 1 354 1 41 1 90 1 43 1 267 1 164 2 68 2 30 1 169 1 122 1 31 1 98 1 192 1 363 1 195 1 364 1 197 2 323 1 75 1 56 1 76 1 369 1 130 1 372 1 371 1 205 1 20 1 181 1 
22 1 40 1 354 1 41 1 43 1 267 1 164 3 68 2 30 1 169 1 122 1 31 1 363 1 195 1 364 1 197 3 127 1 323 1 75 1 56 1 76 1 59 1 369 1 130 2 372 1 371 1 205 1 263 1 20 1 181 1 
354 1 41 1 267 1 164 2 68 2 30 1 169 1 122 1 31 1 363 1 195 1 197 2 323 1 75 1 56 1 76 1 59 1 369 1 130 2 371 1 372 1 205 1 263 1 20 1 181 1 
22 1 183 1 354 2 88 1 71 1 244 1 308 1 195 2 43 1 127 1 197 1 323 1 75 1 176 1 340 1 164 1 369 1 371 2 372 2 262 1 169 1 342 1 122 1 
98 1 22 1 40 1 354 1 41 1 363 1 90 1 43 1 195 1 364 1 197 1 323 1 75 1 56 1 76 1 164 1 68 2 369 1 371 1 372 1 169 1 30 1 263 1 122 1 31 1 20 1 
352 1 
183 2 88 1 335 3 3 6 4 1 246 1 248 2 340 1 8 1 189 1 47 1 11 1 147 1 99 1 296 1 348 2 258 1 201 1 261 2 206 2 265 1 305 4 307 1 308 1 355 1 266 2 311 1 357 1 26 2 271 1 29 5 168 1 223 2 169 1 122 2 32 1 275 1 171 1 278 5 229 1 125 1 319 1 323 2 128 2 75 2 176 1 327 1 283 1 129 2 178 2 369 1 134 1 376 2 239 2 330 1 
171 1 99 1 265 1 278 3 335 1 305 2 229 1 307 1 3 2 355 1 311 1 357 1 258 1 283 1 79 1 271 1 189 1 29 3 134 1 376 1 330 1 47 1 
265 1 305 3 335 1 307 1 3 1 355 1 311 1 357 1 26 1 271 1 189 1 29 3 47 1 171 1 99 1 11 1 278 3 229 1 348 1 258 1 283 1 79 1 134 1 330 1 
265 1 335 1 305 3 307 1 355 1 3 2 311 1 357 1 26 1 271 1 189 1 29 3 47 1 171 1 99 1 11 1 278 3 229 1 348 1 258 1 283 1 178 1 79 1 134 1 330 1 376 1 
335 3 3 7 4 1 246 1 248 1 8 1 189 1 251 1 47 1 99 1 11 5 296 1 348 4 258 1 13 1 202 1 261 2 206 2 111 1 265 1 305 6 307 1 355 1 266 2 311 1 357 1 26 5 222 1 271 1 29 5 168 1 171 1 278 5 229 1 128 1 327 1 283 1 129 2 178 4 79 1 134 1 376 4 330 1 239 2 
335 2 3 4 4 1 246 1 248 1 8 1 189 1 47 1 99 1 11 1 296 1 348 2 258 1 261 2 206 2 265 1 305 4 307 1 355 1 266 2 311 1 357 1 26 2 271 1 168 1 29 4 223 2 32 1 171 1 278 4 229 1 128 1 327 1 283 1 129 2 178 2 134 1 330 1 239 2 376 2 
265 1 335 2 305 4 307 1 3 4 355 1 266 2 4 1 311 1 357 1 246 1 248 1 26 1 8 1 271 1 189 1 168 1 29 4 47 1 171 1 11 1 99 1 278 4 296 1 229 1 348 2 258 1 128 1 327 1 283 1 129 2 202 1 13 1 178 2 261 2 206 2 134 1 376 2 239 2 330 1 111 1 
265 1 335 2 305 4 307 1 3 4 355 1 266 2 4 1 311 1 357 1 246 1 248 1 26 1 8 1 271 1 189 1 168 1 29 4 47 1 171 1 11 1 99 1 278 4 296 1 229 1 348 2 258 1 128 1 327 1 283 1 129 2 202 1 13 1 178 2 261 2 206 2 134 1 376 2 239 2 330 1 111 1 
265 1 335 2 305 4 307 1 3 4 355 1 266 2 4 1 311 1 357 1 246 1 248 1 26 1 188 1 8 1 271 1 189 1 29 4 223 2 47 1 171 1 11 1 99 1 278 4 50 2 296 1 229 1 348 2 258 1 128 1 199 1 327 1 283 1 202 1 178 2 155 2 179 1 134 1 376 2 239 2 330 1 
265 1 335 2 305 5 307 1 355 1 3 5 266 2 4 1 311 1 246 1 357 1 248 1 26 1 8 1 271 1 189 1 168 1 29 4 251 1 47 1 171 1 11 1 99 1 278 4 296 1 229 1 348 3 258 1 128 1 327 1 283 1 129 2 202 1 13 1 178 3 261 2 206 2 134 1 239 2 330 1 376 3 111 1 
265 1 335 2 305 5 307 1 355 1 3 5 266 2 4 1 311 1 246 1 357 1 248 1 26 1 8 1 271 1 189 1 168 1 29 4 251 1 47 1 171 1 11 1 99 1 278 4 296 1 229 1 348 3 258 1 128 1 327 1 283 1 129 2 202 1 13 1 178 3 261 2 206 2 134 1 239 2 330 1 376 3 111 1 
335 2 3 4 4 1 246 1 248 1 8 1 189 1 47 1 99 1 11 1 296 1 50 2 348 2 258 1 199 1 155 2 265 1 305 4 307 1 355 1 266 2 311 1 357 1 26 1 271 1 29 4 223 2 32 1 171 1 278 4 229 1 128 1 327 1 283 1 178 2 134 1 330 1 239 2 376 2 
64 1 113 1 215 6 160 1 334 1 306 1 310 2 92 1 338 2 120 1 224 1 190 1 170 1 123 1 173 2 72 1 232 1 198 1 298 2 366 1 37 3 131 1 18 3 303 1 238 1 62 1 
10 1 113 1 215 4 160 1 362 1 89 1 306 1 42 1 310 2 232 1 326 1 366 1 37 3 131 1 18 1 109 1 224 4 303 1 39 1 170 4 156 1 
63 1 333 1 183 1 113 1 215 2 160 1 88 1 136 1 114 1 139 1 306 1 310 2 311 2 338 1 357 2 141 1 169 1 122 1 190 1 226 1 171 1 12 1 257 1 321 1 232 1 323 1 75 1 349 1 176 1 366 1 369 1 37 1 16 1 18 1 109 1 351 1 303 1 83 1 
333 1 183 1 334 1 136 2 88 2 139 2 336 2 92 3 338 2 141 1 95 2 190 7 10 2 12 1 103 2 193 1 257 2 198 1 298 4 18 10 109 1 351 1 303 3 62 1 63 2 64 1 113 3 215 20 160 3 114 1 306 3 310 6 311 3 357 3 120 1 272 2 314 1 169 2 122 1 224 7 170 7 171 1 173 5 321 1 232 3 323 1 75 1 176 2 326 2 366 3 236 2 369 2 37 10 131 3 370 1 373 2 238 1 
21 1 112 1 333 1 183 2 113 2 215 2 160 2 88 3 114 1 306 2 308 1 310 4 311 1 357 1 141 1 340 1 169 2 122 8 123 1 171 1 293 1 360 1 192 1 321 1 232 2 323 8 75 7 35 1 74 2 176 2 366 2 369 2 37 1 300 1 287 1 18 1 263 1 351 1 303 2 
113 1 215 3 160 1 306 1 310 2 92 1 311 1 141 1 357 1 272 1 224 1 146 1 9 1 190 1 170 1 171 1 10 1 173 1 320 1 321 1 232 1 326 1 298 1 366 1 37 1 131 1 18 2 109 1 303 1 
113 1 173 1 215 2 160 1 306 1 310 2 232 1 326 1 36 1 366 1 37 2 131 1 370 1 224 1 303 1 190 1 170 1 123 1 
113 1 173 1 215 2 160 1 306 1 310 2 92 1 232 1 298 1 162 1 366 1 272 1 18 2 224 1 303 1 190 1 170 1 123 1 
113 1 215 4 160 1 306 1 310 2 92 1 272 1 224 2 123 1 170 2 190 2 10 1 173 2 232 1 326 1 298 1 366 1 37 2 131 1 370 1 18 2 303 1 
113 1 173 1 215 2 160 1 306 1 310 2 232 1 35 1 326 1 36 1 366 1 37 2 131 1 370 1 224 1 303 1 190 1 170 1 
113 1 173 1 215 2 160 1 306 1 310 2 92 1 232 1 35 1 298 1 162 1 366 1 272 1 18 2 224 1 303 1 190 1 170 1 
113 1 215 4 160 1 306 1 310 2 92 1 272 1 224 2 170 2 190 2 10 1 173 2 232 1 35 1 326 1 298 1 366 1 37 2 131 1 370 1 18 2 303 1 
113 1 215 4 160 1 306 1 310 2 92 1 272 1 224 2 170 2 190 2 10 1 173 2 232 1 326 1 298 1 366 1 37 2 131 1 370 1 18 2 303 1 
63 1 183 1 113 1 215 2 160 1 136 1 88 1 114 1 139 1 306 1 336 1 310 2 311 1 338 1 357 1 169 1 122 1 257 1 232 1 323 1 75 1 176 1 366 1 37 1 369 1 18 1 351 1 303 1 
63 1 183 1 113 1 215 2 160 1 88 1 114 1 139 1 306 1 310 2 311 1 338 1 357 1 169 1 343 1 122 1 232 1 34 1 323 1 234 1 75 1 176 1 366 1 37 1 369 1 18 1 351 1 303 1 
113 1 215 4 160 1 306 1 310 2 92 1 272 1 224 2 170 2 190 2 10 1 173 2 232 1 326 1 298 1 366 1 37 2 131 1 370 1 18 2 109 1 303 1 
63 1 113 1 215 4 160 1 136 1 88 1 139 1 306 1 336 1 92 1 310 2 311 1 357 1 272 1 169 1 224 2 122 1 190 2 170 2 10 1 173 2 192 1 257 1 232 1 323 1 75 1 326 1 176 1 298 1 366 1 236 1 37 2 369 1 131 1 18 2 370 1 303 1 
113 1 215 3 160 1 306 1 92 1 310 2 311 1 141 1 357 1 119 1 272 1 146 1 224 1 170 1 190 1 171 1 10 1 173 1 320 1 321 1 232 1 326 1 366 1 37 2 131 1 18 1 370 1 109 1 303 1 
10 1 113 2 159 1 215 6 160 2 135 1 362 1 216 1 89 1 306 2 310 4 67 1 324 1 326 1 366 2 37 4 203 1 131 1 96 1 18 2 208 1 156 1 
10 1 113 2 159 1 215 6 160 2 135 1 362 1 216 1 89 1 306 2 310 4 67 1 324 1 326 1 366 2 37 4 203 1 131 1 96 1 18 2 208 1 156 1 
113 1 64 1 215 11 160 1 334 1 135 1 216 1 306 1 89 1 92 1 310 2 67 1 120 1 96 1 10 1 173 1 362 1 198 1 324 1 326 1 298 1 366 1 37 7 203 1 131 2 18 4 208 1 156 1 238 1 62 1 
10 1 113 2 159 1 215 6 160 2 135 1 362 1 216 1 89 1 306 2 310 4 67 1 324 1 326 1 366 2 37 4 203 1 131 1 96 1 18 2 208 1 156 1 
113 3 215 26 160 3 135 4 23 1 216 1 306 3 92 2 310 6 245 1 94 2 67 2 166 1 96 2 272 2 48 1 10 3 173 4 362 2 322 1 324 1 280 1 326 3 298 2 366 3 37 14 80 1 203 2 131 3 370 2 18 12 374 1 208 1 156 2 
253 1 339 1 227 1 212 1 57 1 220 1 87 1 186 1 301 1 52 1 
25 1 214 1 
253 1 339 1 295 1 220 1 186 1 301 1 65 1 52 1 209 1 
253 1 227 1 212 1 304 1 87 1 278 1 337 1 52 1 339 1 220 1 142 1 200 1 26 1 186 1 367 2 301 1 29 1 69 1 
253 1 227 1 212 1 304 1 87 1 278 1 337 1 52 1 339 1 220 1 142 1 200 1 26 1 186 1 367 2 301 1 29 1 69 1 
253 1 227 1 212 1 304 1 87 1 278 1 337 1 52 1 339 1 220 1 142 1 200 1 26 1 186 1 367 2 301 1 29 1 69 1 
165 1 5 1 375 1 
165 1 5 1 375 1 
107 1 285 1 
107 1 285 1 375 1 
137 1 344 1 
214 1 137 1 311 2 338 1 357 2 141 2 268 1 339 1 25 1 142 1 220 1 186 1 29 1 344 1 253 1 171 2 294 1 278 1 345 1 321 2 52 1 200 1 367 1 177 1 301 1 204 1 82 1 
165 1 5 1 
107 1 285 1 375 1 
112 1 113 1 215 2 160 1 88 1 114 1 306 1 44 1 310 2 311 2 357 2 358 1 341 1 169 1 122 2 171 2 232 1 323 2 74 2 75 2 176 1 153 1 366 1 369 1 37 1 287 1 60 1 18 1 109 1 351 1 303 1 
40 1 192 1 41 1 175 1 363 1 195 1 323 2 75 2 56 1 76 1 68 2 368 1 369 1 169 1 263 1 122 2 31 1 252 1 20 1 
40 1 41 1 363 1 195 1 323 1 75 1 56 1 76 1 68 2 369 1 263 1 169 1 122 1 31 1 252 1 20 1 331 1 
183 1 88 1 175 1 244 1 308 1 195 1 323 1 75 1 176 1 340 1 369 1 169 1 122 1 273 1 
40 1 41 1 175 1 363 1 195 1 323 1 75 1 56 1 76 1 68 2 368 1 369 1 263 1 169 1 122 1 31 1 252 1 20 1 
225 1 
128 1 248 1 211 1 11 1 26 1 72 1 19 1 
11 1 278 1 335 1 3 1 4 1 246 1 128 1 248 1 26 2 327 1 129 1 8 1 261 1 29 1 168 1 223 1 206 1 
183 1 242 1 241 2 88 10 138 2 335 3 2 6 3 5 4 4 92 2 246 4 248 8 187 2 8 4 191 2 10 2 11 2 192 1 149 6 150 2 154 1 108 2 350 1 261 6 19 1 211 1 63 3 163 1 26 8 27 2 272 2 29 5 169 3 223 12 122 3 316 1 174 2 278 5 125 1 230 3 319 2 279 1 323 3 128 9 75 3 176 3 326 2 327 4 369 4 81 2 131 2 132 3 373 2 330 2 
241 2 335 1 2 5 3 1 4 2 245 1 92 2 246 2 248 5 26 5 166 1 8 2 272 2 29 1 144 1 223 6 48 1 10 2 11 2 278 1 362 1 125 1 319 1 53 1 322 1 280 1 149 5 128 8 326 2 327 2 203 1 261 3 131 2 132 1 156 1 
182 1 64 1 241 2 334 1 4 1 92 1 311 1 357 1 246 1 141 1 248 2 8 1 29 1 171 1 278 1 229 1 320 1 321 1 198 1 128 2 327 1 13 1 15 1 131 2 132 1 61 1 288 1 377 1 
211 1 11 1 4 1 246 1 248 1 128 1 327 1 26 1 8 1 19 1 
10 2 241 2 2 5 92 2 248 5 149 5 128 5 326 2 26 5 131 2 261 5 132 1 272 2 223 10 373 1 
11 1 26 1 278 1 335 1 3 1 29 1 
183 2 242 2 88 1 335 2 0 1 3 4 308 1 356 1 4 2 246 2 248 2 163 1 340 1 8 1 29 3 169 1 122 4 275 1 147 1 278 3 125 2 319 2 323 4 325 1 75 4 128 2 176 1 327 2 369 1 
63 1 113 1 183 1 215 1 160 1 114 1 136 1 88 1 139 1 306 1 309 1 336 1 310 2 311 3 338 1 357 3 141 2 169 1 122 1 171 2 320 2 321 2 257 1 232 1 323 1 75 1 176 1 366 1 369 1 18 1 288 1 303 1 
11 2 125 1 2 2 319 1 4 1 246 1 149 2 248 2 128 1 327 1 26 4 8 1 261 2 223 4 62 1 
253 1 301 1 237 1 
253 1 301 1 237 1 
253 1 87 1 301 1 115 1 344 1 
253 1 301 1 237 1 
253 1 143 1 301 1 
253 1 143 1 301 1 
253 1 143 1 301 1 
253 1 301 1 
339 1 220 1 
113 1 64 1 215 8 160 1 334 1 306 1 92 1 310 2 120 1 48 1 173 2 362 1 198 1 298 2 366 1 37 4 203 1 131 1 18 4 208 1 156 1 238 1 62 1 
10 1 113 2 215 4 160 2 362 1 89 1 306 2 310 4 326 1 366 2 37 3 203 1 131 1 18 1 208 1 210 1 156 1 48 1 
64 1 113 3 215 19 160 3 334 1 306 3 310 6 245 1 92 3 94 1 120 1 166 1 272 2 48 1 10 2 173 4 362 1 198 1 322 1 280 1 326 2 298 3 366 3 37 9 203 1 131 3 370 1 18 10 208 1 210 1 238 1 156 1 62 1 
64 1 113 3 215 17 160 3 334 1 306 3 310 6 245 1 92 2 94 1 120 1 166 1 272 1 48 1 10 2 173 5 362 1 198 1 322 1 280 1 326 2 298 3 366 3 37 10 203 1 131 3 370 2 18 7 208 1 210 1 238 1 156 1 62 1 
113 1 64 1 215 8 160 1 334 1 306 1 92 1 310 2 120 1 48 1 173 2 362 1 198 1 298 2 366 1 37 4 203 1 131 1 18 4 208 1 156 1 238 1 62 1 
113 1 215 12 160 1 306 1 310 2 245 1 92 2 166 1 272 2 48 1 10 2 173 2 362 1 322 1 280 1 326 2 298 1 366 1 37 6 203 1 131 2 370 1 18 6 208 1 156 1 
64 1 113 4 215 18 160 4 334 1 306 4 310 8 245 1 92 2 94 2 120 1 166 1 272 1 48 1 10 2 173 5 362 1 198 1 322 1 280 1 326 2 298 3 366 4 37 10 203 1 131 3 370 2 18 8 208 1 210 1 238 1 156 1 62 1 
113 4 215 16 159 1 160 4 306 4 310 8 245 1 92 2 94 2 166 1 272 2 48 1 10 3 173 6 362 1 322 1 280 1 326 3 298 3 366 4 37 9 203 1 131 3 370 3 18 7 208 1 156 1 
64 3 215 7 173 6 334 3 92 1 198 1 298 3 120 1 37 3 131 1 18 4 370 3 238 2 
64 1 113 4 215 18 159 1 160 4 334 1 306 4 310 8 245 1 92 2 94 2 120 1 166 1 272 1 48 1 10 2 173 4 362 1 198 1 322 1 280 1 326 2 298 3 366 4 37 10 203 1 131 3 370 1 18 8 208 1 238 1 156 1 62 1 
113 2 64 1 215 8 173 3 160 2 334 1 306 2 92 1 310 4 94 1 198 1 298 2 366 2 120 1 37 4 131 1 18 4 370 1 238 1 62 1 
298 2 64 1 215 6 173 2 120 1 334 1 37 3 72 1 131 1 18 3 92 1 198 1 238 1 62 1 
10 1 113 1 173 2 215 4 160 1 306 1 92 1 310 2 326 1 298 1 366 1 37 2 131 1 18 2 272 1 370 1 210 1 
10 1 326 1 215 4 362 1 37 3 203 1 131 1 89 1 18 1 156 1 
10 1 326 1 215 4 362 1 37 3 131 1 89 1 18 1 42 1 156 1 
215 1 18 1 156 1 
215 1 362 1 37 1 
10 1 113 1 215 6 173 4 160 1 306 1 310 2 92 1 326 1 298 2 366 1 37 3 131 1 18 3 370 2 272 1 373 1 210 1 
113 1 215 12 160 1 306 1 310 2 245 1 92 2 166 1 272 2 48 1 10 2 173 2 362 1 322 1 280 1 326 2 298 1 366 1 37 6 203 1 131 2 370 1 18 6 208 1 156 1 
64 1 215 6 173 2 334 1 92 1 198 1 298 1 37 3 131 1 18 3 370 1 
64 1 113 1 173 2 215 3 160 1 334 1 306 1 310 2 94 1 298 1 366 1 120 1 37 1 370 1 18 2 317 1 238 1 
113 1 64 2 173 5 215 10 160 1 334 2 306 1 310 2 92 2 198 1 298 3 366 1 37 5 15 1 131 2 370 2 18 5 208 1 
113 1 215 2 173 1 160 1 306 1 310 2 326 1 366 1 37 2 131 1 370 1 208 1 
10 1 113 1 173 2 215 4 160 1 306 1 92 1 310 2 326 1 298 1 366 1 37 2 131 1 18 2 272 1 370 1 208 1 
113 3 64 1 159 1 215 3 173 2 160 3 334 1 306 3 310 6 94 1 298 1 366 3 37 1 18 2 370 1 208 1 317 1 
64 1 113 4 159 1 215 24 160 4 334 1 306 4 89 1 310 8 92 3 94 1 219 1 120 1 272 2 10 3 228 1 173 5 362 3 198 1 326 3 298 3 366 4 37 13 203 1 131 4 18 11 370 2 110 1 208 1 210 1 238 1 156 3 62 1 
171 1 265 1 194 1 311 1 338 1 357 1 247 1 
171 1 265 1 194 1 311 1 338 1 357 1 233 1 247 1 152 1 106 1 249 1 133 1 
75 1 176 1 183 1 340 1 88 1 369 1 72 1 308 1 169 1 122 1 323 1 
63 1 171 1 333 1 183 1 88 1 136 1 139 1 321 1 311 2 338 1 141 1 357 2 323 1 75 1 176 1 369 1 169 1 122 1 
63 2 333 1 242 1 136 1 88 3 139 1 311 2 338 1 357 2 141 2 187 1 189 1 169 1 122 1 191 1 171 2 229 1 321 1 323 1 258 1 75 1 176 2 369 1 
63 2 333 1 242 1 88 3 139 1 311 2 218 1 338 1 357 2 141 2 187 1 189 1 169 1 122 2 191 1 171 2 229 1 321 1 323 2 234 1 258 1 75 2 176 2 369 1 
63 1 183 1 242 1 88 4 3 1 218 1 26 1 187 1 29 2 169 1 122 3 292 1 191 1 11 1 278 2 230 1 73 1 323 3 75 3 176 1 369 1 81 1 330 1 
63 1 11 1 183 1 242 1 278 2 174 1 88 4 230 1 3 1 218 1 323 3 75 3 176 1 26 1 187 1 369 1 81 1 29 2 169 1 122 3 330 1 191 1 
75 1 360 1 369 1 169 1 122 1 323 1 
21 1 63 1 293 1 183 2 360 1 318 1 192 1 88 3 323 7 74 1 75 6 176 2 313 1 154 1 369 3 300 1 287 1 97 1 263 1 169 2 122 7 
333 1 136 1 88 1 334 1 139 1 336 1 92 1 141 1 338 2 341 1 190 1 192 1 103 1 257 1 198 1 298 2 18 3 109 1 303 2 62 1 63 1 113 2 64 1 215 6 160 2 306 2 310 4 311 2 357 2 120 1 169 1 122 1 224 1 170 1 171 1 173 2 321 1 232 2 323 1 75 1 176 1 366 2 236 1 369 1 37 3 131 1 238 1 
211 1 183 1 88 2 138 1 335 1 3 2 4 2 246 2 248 1 163 1 26 1 27 1 8 2 29 3 122 1 11 1 278 3 174 1 230 1 323 1 128 1 75 1 150 1 327 2 177 1 81 1 19 1 330 1 
63 1 360 1 192 1 88 2 323 2 75 2 176 1 154 1 369 2 81 1 350 1 169 1 122 2 
332 1 183 1 192 1 88 1 308 1 218 1 323 4 75 4 176 1 340 1 369 1 169 1 122 4 
63 1 213 1 86 1 242 1 88 1 323 2 45 1 75 2 176 1 313 1 369 2 97 1 169 1 122 2 
75 1 183 1 76 1 68 1 41 1 369 1 363 1 169 1 122 1 323 1 
192 1 88 1 323 2 75 2 176 1 369 1 60 1 287 1 263 1 169 1 122 2 
332 1 21 1 183 1 242 1 192 1 88 3 308 1 323 5 75 4 176 2 340 1 369 2 300 1 287 1 169 2 122 5 
332 1 183 1 242 1 192 1 88 3 308 1 126 1 323 5 75 4 176 2 340 1 369 2 300 1 287 1 169 2 122 5 
63 1 171 1 333 1 183 1 88 1 139 1 321 1 311 2 338 1 141 1 357 2 323 1 234 1 75 1 176 1 369 1 169 1 122 1 
63 1 242 1 318 1 88 1 323 1 75 1 176 1 313 1 154 1 369 2 97 1 169 1 122 1 
171 1 44 1 311 1 357 1 358 1 291 1 153 1 284 1 359 1 
284 1 315 1 185 1 
291 1 284 1 359 1 338 1 180 1 
11 1 278 2 229 1 355 1 185 1 338 1 258 1 55 1 26 1 291 2 7 1 284 1 177 1 359 2 189 1 29 2 315 1 330 1 180 2 
72 1 205 1 267 1 181 1 
22 1 164 1 43 1 205 1 197 1 267 1 181 1 
164 1 354 1 371 1 
6 2 22 1 164 3 124 1 167 1 90 1 43 1 205 1 24 1 197 3 267 1 181 1 
22 1 164 2 130 1 43 1 205 1 197 2 267 1 117 1 181 1 
56 1 22 1 164 1 68 1 243 1 41 1 90 1 43 1 274 1 197 1 267 1 
22 1 164 1 90 1 43 1 205 1 197 1 267 1 
22 1 164 1 90 1 43 1 205 2 197 1 181 1 
46 1 22 2 282 1 164 2 346 1 90 1 43 2 205 1 197 2 267 1 
22 1 90 1 91 1 43 1 197 3 267 2 297 1 312 1 164 3 130 2 205 1 274 1 181 1 
22 1 41 1 363 1 90 1 43 1 197 2 267 1 56 1 164 2 68 2 130 1 302 1 205 1 31 1 181 1 
22 2 90 1 91 1 43 2 197 4 117 1 267 2 164 4 299 1 130 2 205 1 274 1 181 1 
22 1 164 1 90 1 43 1 205 1 197 1 267 1 181 1 
22 1 91 1 43 1 24 1 365 1 197 4 267 3 6 1 164 4 130 2 167 1 205 2 274 1 181 2 
22 1 164 2 130 1 90 1 43 1 205 1 184 1 347 1 197 2 267 1 181 1 269 1 
22 1 90 1 140 1 43 1 24 1 197 3 267 1 6 2 164 3 167 2 205 1 181 1 
254 2 361 1 93 1 267 2 
22 1 151 1 164 1 90 1 43 1 197 1 
22 1 164 2 130 1 90 1 43 1 205 1 197 2 267 1 181 1 297 1 
221 1 
22 1 164 1 90 1 43 1 205 1 197 1 267 1 181 1 
6 1 22 1 164 3 130 1 90 1 43 1 205 1 197 3 267 1 297 1 181 1 
91 1 365 1 274 1 267 1 
205 1 267 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 236 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
191 5 243 1 292 1 194 1 30 2 318 2 319 9 137 1 57 1 61 2 202 1 11 1 345 1 368 3 370 1 13 1 142 2 253 6 208 1 15 1 159 2 108 2 143 9 45 1 259 1 133 4 284 2 46 1 
191 5 243 1 292 1 194 1 30 2 318 2 319 9 137 1 57 1 61 2 202 1 11 1 345 1 368 3 370 1 13 1 142 2 253 6 208 1 15 1 159 2 108 2 143 9 45 1 259 1 133 4 284 2 46 1 
191 6 243 1 292 1 194 1 30 2 318 2 319 10 137 1 57 1 61 2 202 1 11 1 345 1 368 4 370 1 13 1 142 2 253 7 208 1 15 1 159 2 108 2 143 10 45 1 259 1 133 5 284 2 46 1 
191 4 243 1 292 1 194 1 30 2 318 2 319 7 137 1 57 1 61 1 202 1 11 1 345 1 368 2 370 1 13 1 142 2 253 4 208 1 15 1 159 2 108 2 143 7 259 1 133 3 284 2 46 1 
191 3 292 1 253 3 159 1 30 1 318 1 319 4 143 4 45 1 61 2 133 2 284 1 202 1 11 1 345 1 368 1 370 1 142 1 
191 1 104 1 243 1 292 1 159 1 30 1 108 1 319 2 143 2 46 1 284 1 113 1 345 1 168 1 370 1 142 1 
191 2 292 1 253 1 159 2 108 1 319 3 143 3 137 1 133 1 284 2 345 1 368 1 370 1 
191 5 292 1 194 1 30 1 318 1 319 9 137 1 61 2 202 1 11 1 345 1 368 3 370 1 142 1 253 7 208 1 159 2 108 1 143 9 45 1 133 4 78 1 81 1 284 2 
191 5 292 1 194 1 30 1 318 1 319 9 137 1 61 2 202 1 11 1 345 1 368 3 370 1 142 1 253 7 208 1 159 2 108 1 143 9 45 1 133 4 78 1 81 1 284 2 
248 1 47 1 329 1 
248 1 14 2 231 1 
249 2 245 1 8 1 224 2 101 2 140 2 84 2 24 2 
192 1 315 1 245 1 224 2 121 2 227 1 198 1 339 1 33 1 249 2 37 1 8 1 273 1 344 1 204 1 154 1 101 3 140 3 300 1 141 1 303 1 69 1 372 1 307 1 348 2 71 1 350 2 374 1 129 1 131 1 309 1 132 1 214 2 333 1 84 2 24 2 314 2 
249 1 357 1 8 1 341 1 224 1 120 1 101 1 140 1 84 1 24 1 
147 1 193 1 44 1 74 1 329 1 211 1 162 1 248 1 165 1 341 1 84 1 140 1 101 1 290 1 
147 1 193 2 224 1 74 1 329 1 211 1 162 2 248 1 249 1 341 1 84 1 140 1 101 1 24 1 290 1 
282 1 193 1 107 1 265 1 162 1 
248 1 282 1 106 1 193 2 324 1 265 1 329 1 162 2 
282 1 193 1 162 1 
193 1 357 1 268 1 224 1 120 1 162 1 249 1 8 1 341 1 265 1 84 1 140 1 101 1 24 1 
248 1 
248 1 282 1 260 1 193 2 324 1 265 1 329 1 162 2 
51 1 184 1 173 1 277 2 53 2 193 5 356 1 43 1 256 2 279 1 329 1 162 5 248 1 340 1 282 2 343 1 324 1 265 2 114 1 
245 1 47 1 
245 2 4 1 224 1 144 1 249 1 84 2 140 2 101 2 24 1 
213 1 92 1 322 1 
372 1 245 1 121 1 71 1 339 1 129 1 309 1 33 1 132 1 214 1 216 1 101 1 140 1 314 1 300 1 141 1 
372 1 71 1 121 1 247 1 213 1 129 1 339 1 270 1 309 1 33 1 132 1 249 1 214 1 84 1 140 2 101 2 300 1 24 1 314 1 141 1 
0 1 245 1 223 1 4 1 224 1 247 2 270 1 165 1 249 4 217 1 84 5 140 5 101 5 24 4 
249 2 341 1 98 1 120 1 101 2 140 2 84 2 24 2 
249 3 245 1 224 1 101 3 140 3 84 3 24 3 247 1 
249 1 341 1 120 1 101 1 140 1 84 1 24 1 
249 1 341 1 224 1 4 1 101 1 140 1 84 1 24 1 144 1 
147 1 245 1 193 1 224 2 4 1 121 1 198 1 247 1 339 1 270 1 33 1 249 3 37 1 8 1 341 1 344 1 204 1 154 1 101 4 140 4 300 1 141 1 303 1 69 1 372 1 348 2 71 1 350 1 374 1 74 1 211 1 162 1 129 1 131 1 309 1 132 1 214 1 21 1 333 1 84 3 24 3 314 1 170 1 290 1 
165 1 249 1 245 1 223 1 101 2 140 2 84 2 24 1 247 1 
147 1 193 1 224 1 4 1 74 1 162 1 247 2 211 1 270 1 248 1 249 3 21 1 341 1 84 3 140 3 101 3 24 3 289 1 290 1 
4 1 224 1 247 1 213 1 249 2 322 1 84 2 140 2 101 2 24 2 
372 1 245 1 121 1 71 1 339 1 129 1 33 1 309 1 132 1 214 1 101 1 140 1 314 1 300 1 141 1 
372 1 245 1 121 1 360 1 71 1 339 1 129 1 309 1 214 1 151 1 101 1 140 1 314 1 300 1 141 1 
315 2 32 1 198 1 320 1 92 2 365 1 37 1 229 1 322 2 66 1 204 1 154 1 303 2 233 1 126 1 348 2 160 1 17 1 350 4 213 2 131 1 333 1 313 1 172 1 
249 1 341 1 98 1 101 1 140 1 84 1 24 1 290 1 
271 1 254 1 
271 1 254 1 
316 1 375 1 
316 1 375 1 
316 1 375 1 
271 1 337 1 254 1 
271 1 337 1 254 1 
125 1 271 1 254 1 
271 2 35 1 254 2 316 1 145 1 375 1 
271 1 337 1 254 1 
58 1 271 1 254 1 
58 1 271 1 254 1 
58 1 271 1 254 1 
27 1 245 1 193 1 119 1 29 1 91 1 249 2 271 1 99 1 140 2 101 2 125 1 252 1 301 1 41 1 254 1 278 1 306 1 162 1 332 1 262 1 264 1 84 2 24 2 
103 1 252 2 278 2 254 2 193 2 177 1 29 1 16 1 162 2 308 1 248 1 362 2 271 2 34 1 122 1 332 2 262 3 145 1 99 2 
30 1 318 1 142 1 
113 1 30 1 142 1 
2 1 305 1 113 1 30 3 318 2 327 1 
2 1 113 1 30 2 318 1 327 1 171 1 
2 2 113 1 30 2 318 1 327 1 
51 1 53 1 336 1 193 5 357 1 224 1 268 1 120 1 293 1 248 1 249 1 365 1 8 1 341 1 343 2 324 1 101 1 140 1 183 1 328 2 184 1 301 1 277 1 14 1 256 1 160 1 373 1 161 1 280 1 237 1 162 5 329 1 282 1 287 1 265 4 84 1 24 1 
51 1 53 1 336 1 193 5 357 1 268 1 224 1 120 1 248 1 249 1 365 1 8 1 341 1 343 2 324 1 299 1 101 1 140 1 183 1 184 1 301 1 277 1 14 1 107 2 234 1 256 1 160 1 373 1 161 1 280 1 110 2 162 5 329 1 282 3 287 1 265 4 84 1 24 1 
53 1 193 3 336 2 293 1 248 3 365 1 229 1 343 2 231 2 328 1 183 1 184 3 301 1 277 1 14 4 43 1 256 1 126 1 373 1 160 1 161 1 329 1 237 1 162 3 280 2 265 2 
53 1 336 4 193 4 293 1 248 4 363 1 365 2 229 2 343 4 231 3 328 2 183 2 184 5 301 2 277 1 14 7 43 1 187 1 256 1 126 2 373 1 160 2 161 1 329 1 280 4 162 4 237 1 240 1 265 3 
309 1 244 1 47 1 
309 1 109 1 
156 1 
129 1 309 1 71 1 
309 1 321 1 
129 1 309 1 
129 1 309 3 244 2 367 1 71 1 288 1 
303 3 233 3 315 4 128 1 350 7 130 1 365 1 229 1 10 1 342 1 23 1 298 1 180 2 274 1 313 2 115 1 86 1 
303 3 233 3 315 4 128 1 350 7 130 1 365 1 229 1 10 1 342 1 23 1 298 1 180 2 274 1 313 2 115 1 86 1 
303 3 233 3 315 4 128 1 350 7 330 1 130 1 365 1 229 1 10 1 342 1 23 1 298 1 274 1 180 2 313 2 115 1 86 1 
315 16 178 1 269 1 198 1 90 1 138 1 365 4 37 1 229 4 342 1 97 3 10 2 274 1 180 3 298 5 204 1 325 1 183 3 303 15 233 10 348 2 160 3 126 3 128 1 350 31 131 1 130 2 215 1 218 4 23 2 115 2 313 5 86 1 50 1 
315 5 198 2 365 1 37 2 229 1 96 1 10 1 180 2 298 1 274 1 204 2 303 4 233 4 348 4 350 9 128 1 131 2 130 1 20 1 23 1 313 3 115 1 50 1 86 1 
191 1 292 1 335 1 54 1 30 2 318 1 121 1 319 2 195 1 339 1 323 1 345 1 181 1 153 1 300 1 370 1 142 1 253 1 305 1 159 1 108 1 143 2 111 1 214 1 283 1 284 1 113 1 311 1 314 1 377 1 
191 1 292 1 335 1 54 1 30 2 318 1 121 1 319 3 196 1 195 1 339 1 323 1 345 1 181 1 300 1 205 1 142 1 253 2 305 1 159 1 108 1 143 3 111 1 214 1 261 1 284 1 113 1 311 1 314 1 377 1 
191 1 292 1 335 1 54 1 30 2 318 1 121 1 319 2 196 1 195 1 339 1 323 1 345 1 181 1 300 1 205 1 142 1 253 2 305 1 108 1 143 2 214 1 113 1 311 1 314 1 
1 1 335 2 54 2 121 1 319 1 339 1 94 1 150 1 230 1 181 2 300 1 67 1 372 1 159 1 108 2 143 1 129 1 309 1 214 1 261 1 284 1 314 1 353 1 
335 1 305 1 159 1 30 2 54 1 318 1 108 1 195 1 319 1 121 1 143 1 339 1 111 1 214 1 283 1 113 1 284 1 311 1 323 1 181 1 300 1 377 1 314 1 370 1 205 1 142 1 
73 1 
1 1 51 1 147 1 53 1 193 5 121 2 339 1 248 2 200 2 63 2 150 1 9 1 341 1 343 2 300 1 12 1 251 4 157 2 68 1 14 2 256 1 161 1 74 1 162 5 211 1 212 2 129 1 309 1 165 1 214 2 79 1 84 1 314 2 220 2 28 1 266 1 359 1 93 2 364 1 366 2 179 1 324 3 231 2 140 1 101 1 275 1 184 2 277 1 372 2 44 1 329 1 282 6 241 1 334 1 290 1 
147 1 28 1 266 1 193 3 63 1 179 1 341 1 324 1 101 1 140 1 275 1 12 1 251 2 44 1 74 1 162 3 211 1 165 1 282 2 260 1 84 1 290 1 
147 1 28 1 266 1 193 3 248 1 200 1 179 1 341 1 324 1 101 1 140 1 275 1 12 1 251 3 44 1 74 1 162 3 211 1 329 1 165 1 282 1 260 1 84 1 290 1 
147 1 28 1 266 1 193 3 248 1 200 1 63 1 179 1 341 1 324 1 101 1 140 1 275 1 12 1 251 3 44 1 74 1 162 3 211 1 329 1 212 1 165 1 282 2 260 1 84 1 290 1 
51 1 147 1 53 1 193 5 248 5 59 1 200 4 63 4 341 1 9 1 343 1 12 1 251 6 157 2 256 1 74 1 211 1 162 5 163 1 212 4 165 1 260 1 263 1 219 1 84 1 220 2 28 1 266 1 93 2 366 2 179 1 324 3 101 1 140 1 231 2 275 1 184 1 277 1 44 1 329 5 282 7 241 1 146 1 290 1 
51 1 147 1 53 1 193 4 248 2 200 2 63 2 341 1 9 1 343 1 12 1 251 4 157 2 14 2 256 1 74 1 211 1 162 4 212 2 165 1 84 1 220 2 28 1 266 1 93 2 364 1 366 2 179 1 324 2 101 1 140 1 231 2 275 1 184 1 277 1 44 1 329 1 282 4 241 1 290 1 
51 1 220 2 147 1 53 1 28 1 266 1 193 4 93 2 248 1 59 1 200 2 63 2 366 2 9 1 179 1 341 1 324 2 343 1 231 2 101 1 140 1 275 1 12 1 251 4 157 2 184 1 277 1 256 1 44 1 74 1 329 1 162 4 211 1 212 2 165 1 282 4 241 1 219 1 84 1 146 1 290 1 
51 1 220 2 147 1 53 1 28 1 266 1 193 4 93 2 248 1 59 1 200 2 63 2 366 2 9 1 179 1 341 1 324 2 343 1 231 2 101 1 140 1 275 1 12 1 251 4 157 2 184 1 277 1 256 1 44 1 74 1 329 1 162 4 211 1 212 2 165 1 282 4 241 1 219 1 84 1 146 1 290 1 
51 1 147 1 53 1 28 1 174 1 266 1 193 4 225 2 197 1 93 2 248 1 59 1 200 2 63 2 9 1 179 1 341 1 324 2 343 1 101 1 140 1 275 1 12 1 251 4 157 2 184 1 277 1 14 2 256 1 209 2 44 1 74 1 329 1 162 4 211 1 212 2 165 1 282 4 84 1 290 1 169 1 
51 1 220 2 147 1 53 1 28 1 266 1 193 4 93 2 248 1 59 1 200 3 366 2 63 3 9 1 179 1 341 1 324 2 343 1 231 2 101 1 140 1 275 1 12 1 251 5 157 2 184 1 277 1 256 1 44 1 74 1 329 1 162 4 211 1 163 1 212 3 165 1 282 5 241 1 219 1 84 1 146 1 290 1 
51 1 220 2 147 1 53 1 28 1 266 1 193 4 93 2 248 1 59 1 200 3 366 2 63 3 9 1 179 1 341 1 324 2 343 1 231 2 101 1 140 1 275 1 12 1 251 5 157 2 184 1 277 1 256 1 44 1 74 1 329 1 162 4 211 1 163 1 212 3 165 1 282 5 241 1 219 1 84 1 146 1 290 1 
51 1 147 1 53 1 193 4 248 1 200 2 63 2 341 1 9 1 343 1 12 1 251 4 157 2 14 2 256 1 209 2 74 1 211 1 162 4 212 2 165 1 84 1 28 1 174 1 266 1 225 2 93 2 364 1 179 1 324 2 101 1 140 1 275 1 184 1 277 1 44 1 329 1 282 4 290 1 
315 3 245 2 198 1 92 1 365 1 37 1 229 1 322 1 274 1 180 1 204 1 154 1 233 2 303 3 348 2 17 1 128 1 350 6 213 1 131 1 333 1 23 1 47 1 115 1 313 2 86 1 
222 1 245 1 315 8 88 1 148 1 178 1 198 2 90 1 92 11 365 2 37 2 229 1 97 3 322 4 298 1 204 2 154 2 183 2 233 2 303 6 307 1 348 4 160 2 126 1 210 1 374 1 350 14 213 11 131 2 80 1 218 3 333 1 313 1 
222 1 245 1 315 1 358 1 121 1 198 1 247 1 339 1 270 1 33 1 249 1 37 1 65 1 322 1 204 1 154 1 101 2 140 2 300 1 141 1 303 1 372 1 307 1 348 2 71 1 374 1 350 2 129 1 309 1 131 1 132 1 214 1 310 1 216 1 333 1 84 1 314 1 24 1 
52 1 245 2 121 3 5 1 247 1 198 3 339 2 249 1 344 2 298 4 154 3 204 3 300 2 205 1 303 10 307 1 348 6 160 2 126 2 71 2 128 1 350 20 76 2 129 2 213 7 131 3 309 2 132 2 214 3 23 1 84 1 313 4 314 3 24 1 86 1 222 1 315 10 31 1 89 2 270 1 92 7 33 2 36 2 365 3 37 3 229 3 272 2 322 7 180 1 274 1 140 3 101 3 141 2 183 2 233 8 372 1 374 1 333 3 115 1 
1 1 315 1 246 1 121 7 227 2 247 1 198 2 339 2 249 1 37 2 150 1 153 1 101 1 140 1 204 2 154 2 300 2 205 1 232 1 207 1 303 1 372 2 70 1 307 1 348 4 17 1 350 2 374 1 189 1 129 2 309 3 131 2 214 8 286 1 333 2 84 1 116 1 24 1 314 8 
222 1 315 1 224 1 4 1 198 1 92 1 249 1 365 1 37 1 229 1 322 1 204 1 154 1 140 1 101 1 183 1 233 1 303 2 348 2 160 1 126 1 350 3 213 1 131 1 82 1 333 1 84 1 313 1 24 1 
233 1 315 2 348 2 160 1 17 1 350 2 198 1 213 1 92 1 131 1 365 1 37 1 322 1 333 1 298 1 154 1 204 1 172 1 
233 1 303 2 348 2 126 1 17 1 350 2 198 1 320 1 213 1 92 1 131 1 37 1 229 1 322 1 333 1 154 1 204 1 313 1 
183 1 303 2 233 2 315 2 126 1 348 2 160 1 17 1 350 4 198 1 213 2 92 2 131 1 365 1 37 1 229 1 322 2 333 1 298 1 154 1 204 1 313 1 
232 1 233 1 315 2 348 2 160 1 350 2 198 1 213 1 92 1 131 1 365 1 37 1 322 1 333 1 298 1 154 1 204 1 172 1 
232 1 233 1 303 2 348 2 126 1 350 2 198 1 320 1 213 1 92 1 131 1 37 1 229 1 322 1 333 1 154 1 204 1 313 1 
183 1 232 1 303 2 233 2 315 2 126 1 348 2 160 1 350 4 198 1 213 2 92 2 131 1 365 1 37 1 229 1 322 2 333 1 298 1 154 1 204 1 313 1 
183 1 303 2 233 2 315 2 126 1 348 2 160 1 350 4 198 1 213 2 92 2 131 1 365 1 37 1 229 1 322 2 333 1 298 1 154 1 204 1 313 1 
315 1 245 1 121 1 198 1 339 1 33 1 37 1 344 1 140 1 101 1 154 1 204 1 300 1 141 1 303 1 372 1 307 1 348 2 71 1 350 2 374 1 129 1 309 1 131 1 132 1 214 1 333 1 314 1 
315 1 245 1 360 1 121 1 198 1 339 1 37 1 151 1 140 1 101 1 154 1 204 1 300 1 141 1 369 1 303 1 372 1 307 1 348 2 71 1 350 2 374 1 129 1 309 1 131 1 214 1 333 1 314 1 
183 1 303 2 233 2 222 1 315 2 126 1 348 2 160 1 350 4 198 1 213 2 92 2 131 1 365 1 37 1 229 1 322 2 333 1 298 1 154 1 204 1 313 1 
315 2 121 1 198 1 92 2 339 1 33 1 365 1 36 1 37 1 229 1 322 2 344 1 298 1 153 1 140 1 101 1 154 1 204 1 300 1 141 1 183 1 303 2 233 2 126 1 160 1 348 2 71 1 350 4 213 2 129 1 309 1 131 1 132 1 214 1 333 1 313 1 314 1 
222 1 315 2 224 1 4 1 198 1 92 1 249 1 365 1 37 1 229 1 322 1 298 1 204 1 154 1 140 1 101 1 183 1 303 1 233 1 126 1 348 2 160 1 235 1 350 3 213 1 131 1 333 1 84 1 24 1 
315 9 338 1 178 1 198 2 90 1 7 1 199 1 201 1 365 3 37 2 229 3 96 1 97 1 298 3 204 2 102 2 155 1 183 3 371 2 158 1 303 10 233 6 348 4 160 3 126 3 350 19 131 2 218 2 83 1 313 3 
118 1 221 1 315 14 198 3 90 2 228 1 7 1 199 2 62 1 201 2 365 3 37 3 229 2 96 1 97 2 298 2 204 3 102 4 155 1 183 3 371 1 233 4 303 12 186 1 348 6 160 3 126 2 350 26 131 3 331 1 83 1 218 2 313 2 50 2 
118 1 221 1 315 20 338 1 178 1 198 3 228 1 90 3 7 1 199 1 294 1 62 1 201 2 365 5 37 3 229 5 96 1 97 3 180 1 274 1 298 4 204 3 102 4 155 1 183 4 371 1 303 21 233 8 186 1 348 6 160 4 126 4 128 1 350 41 131 3 331 1 218 4 83 1 23 1 115 1 313 4 86 1 50 1 
118 1 221 1 315 20 338 1 178 1 198 4 228 1 90 3 7 1 199 1 294 1 62 1 201 2 365 5 37 4 229 4 96 1 97 3 180 1 274 1 298 3 204 4 102 4 155 1 183 4 371 1 303 18 233 7 186 1 348 8 160 4 126 3 128 1 350 38 131 4 331 1 218 4 83 1 23 1 115 1 313 4 86 1 50 2 
118 1 221 1 315 27 178 2 198 2 228 1 90 2 7 1 199 1 62 1 201 1 365 8 37 2 229 8 96 1 97 4 180 1 274 1 298 7 204 2 102 4 155 1 183 7 371 1 303 25 233 14 186 1 348 4 160 7 126 7 128 1 350 52 131 2 331 1 80 2 218 4 83 1 23 1 115 1 313 7 86 1 50 1 
252 1 19 1 271 1 34 1 254 1 278 1 332 1 145 1 16 1 99 1 
125 1 41 1 
252 1 271 1 254 1 278 1 332 1 40 1 167 1 99 1 85 1 
337 1 295 1 
58 1 346 1 35 1 
103 1 252 1 193 1 278 1 254 1 29 1 16 1 162 1 308 1 248 1 362 1 271 1 34 1 122 1 332 1 262 2 145 1 99 1 
103 1 252 1 193 1 278 1 254 1 29 1 16 1 162 1 308 1 248 1 362 1 271 1 34 1 122 1 332 1 262 2 145 1 99 1 
103 1 252 1 193 1 278 1 254 1 29 1 16 1 162 1 308 1 248 1 362 1 271 1 34 1 122 1 332 1 262 2 145 1 99 1 
35 1 337 1 295 1 
35 1 337 1 295 1 
58 1 346 1 
58 1 346 1 35 1 
306 1 91 1 
27 1 245 1 193 1 119 1 91 1 362 1 271 1 249 2 99 1 101 2 140 2 125 1 252 1 301 1 41 1 254 1 278 1 306 1 308 1 162 1 332 1 262 1 264 1 265 1 84 2 48 1 24 2 
26 1 222 1 315 1 246 1 226 1 121 2 227 2 198 1 339 1 37 1 154 1 101 2 140 2 204 1 300 1 303 1 307 1 348 2 127 1 72 1 350 2 374 1 129 1 164 1 189 1 309 1 131 1 214 2 333 1 84 2 314 2 
335 1 267 1 347 1 135 1 305 1 30 2 318 1 121 2 195 1 339 1 214 2 113 1 323 1 153 1 300 1 314 2 377 1 205 1 142 1 
335 1 267 1 305 1 30 2 318 1 121 1 195 1 339 1 214 1 113 1 323 1 314 1 377 1 300 1 205 1 142 1 87 1 
1 1 372 1 335 1 347 1 121 1 339 1 129 1 309 1 214 1 94 1 150 1 39 1 300 1 314 1 
335 1 267 1 347 1 135 1 305 1 30 2 318 1 121 1 195 1 339 1 214 1 113 1 323 1 300 1 314 1 377 1 205 1 142 1 
25 1 
184 1 248 1 340 1 356 1 343 1 47 1 329 1 
51 1 220 1 53 1 193 1 248 2 366 1 343 1 324 1 231 1 184 1 277 1 14 1 256 1 162 1 329 1 282 1 241 1 
51 4 147 2 53 4 244 2 193 5 336 6 121 3 339 1 340 1 248 8 343 8 153 1 300 2 14 12 256 4 160 2 126 2 161 2 71 1 162 5 76 2 77 2 129 1 309 6 214 3 79 1 134 1 312 2 314 3 352 2 356 1 365 2 229 2 324 3 231 6 326 1 182 1 183 2 184 9 105 2 277 4 372 1 109 3 236 1 329 2 280 6 188 2 112 1 282 5 285 2 288 1 49 2 
51 2 118 1 221 1 53 2 193 1 336 5 90 1 228 1 248 5 62 1 365 2 229 2 97 1 324 1 343 5 231 3 183 2 184 8 277 2 14 6 255 1 256 2 160 2 126 2 161 1 162 1 280 5 329 2 188 1 282 1 331 1 79 1 285 2 218 1 354 1 
51 1 53 1 193 1 357 1 268 1 224 1 120 1 249 1 149 1 365 2 229 1 8 1 341 1 343 2 101 1 140 1 184 2 277 1 256 1 128 1 162 1 188 1 285 2 23 1 84 1 115 1 24 1 146 1 
51 1 184 1 277 1 53 1 356 1 256 1 329 1 340 1 248 1 343 1 
183 2 184 5 14 10 336 5 160 2 126 2 76 1 280 5 188 1 248 5 365 2 229 2 285 2 343 5 231 5 
248 1 282 1 193 1 324 1 329 1 162 1 
51 1 1 1 53 2 193 3 55 1 121 4 339 1 150 1 343 2 324 2 300 1 182 2 276 1 68 1 184 2 277 2 372 2 43 1 256 2 161 2 162 3 129 1 309 1 112 1 214 4 282 4 79 2 334 1 314 4 
245 1 224 2 121 1 198 1 339 1 33 1 249 2 37 1 8 1 344 1 204 1 101 3 140 3 154 1 300 1 141 1 303 1 69 1 372 1 348 2 71 1 350 1 374 1 129 1 131 1 309 1 132 1 214 1 333 1 84 2 314 1 24 2 
51 1 184 1 277 1 14 4 53 1 336 2 256 1 161 1 280 2 329 2 248 4 79 1 343 2 180 1 231 2 
332 1 123 1 99 1 
332 1 123 1 99 1 
117 1 332 1 306 1 16 1 99 1 
332 1 123 1 99 1 
332 1 99 1 361 1 
332 1 99 1 361 1 
332 1 99 1 361 1 
332 1 99 1 
271 1 254 1 
303 4 233 3 315 4 348 4 128 1 350 8 198 2 131 2 365 1 37 2 229 1 23 1 180 1 298 1 274 1 204 2 313 2 115 1 50 1 86 1 
303 3 233 2 315 3 128 1 350 6 365 1 229 1 23 1 180 1 47 1 274 1 115 1 313 2 86 1 
183 1 303 2 233 2 315 2 126 1 348 2 160 1 350 4 198 1 131 1 258 1 365 1 37 1 229 1 298 1 204 1 313 1 
183 1 303 4 233 2 315 3 126 1 160 1 178 1 350 7 90 1 365 1 229 1 218 2 97 1 298 1 313 1 
315 11 88 1 178 1 198 2 365 3 37 2 229 3 97 2 180 1 274 1 298 4 204 2 183 2 233 9 303 12 160 2 126 2 348 4 128 1 350 23 131 2 80 1 218 2 23 2 22 1 115 2 313 5 86 1 50 2 
303 1 218 1 350 1 
315 1 97 1 350 1 
183 1 303 3 233 3 315 3 348 2 160 1 126 1 350 6 198 1 76 1 131 1 258 1 365 1 37 1 229 1 298 1 204 1 313 2 
118 1 221 1 315 6 198 1 90 1 228 1 365 2 62 1 37 1 229 2 97 1 96 1 298 1 204 1 183 2 303 6 233 2 348 2 160 2 126 2 350 12 131 1 331 1 218 1 313 1 
303 3 233 2 315 3 128 1 350 6 365 1 229 1 23 1 298 1 115 1 313 1 
233 2 303 2 315 1 348 2 350 3 198 1 131 1 37 1 23 1 22 1 298 1 274 1 204 1 313 1 115 1 50 1 86 1 
233 5 303 5 315 5 348 2 350 10 128 1 198 1 131 1 149 1 365 2 37 1 229 2 96 1 23 2 298 2 204 1 115 2 313 3 
233 1 315 2 348 2 160 1 350 2 198 1 131 1 365 1 37 1 96 1 298 1 204 1 
183 1 303 2 233 2 315 2 126 1 348 2 160 1 350 4 198 1 131 1 365 1 37 1 229 1 96 1 298 1 204 1 313 1 
303 2 233 2 315 1 338 1 348 6 350 3 198 3 131 3 37 3 96 1 22 1 23 1 298 1 204 3 115 1 313 1 50 1 
315 16 338 1 178 1 269 1 198 5 90 1 365 5 37 5 229 5 96 1 97 3 180 1 274 1 298 5 325 1 204 5 183 3 303 18 233 12 348 10 160 3 126 3 128 2 350 34 131 5 258 1 215 1 218 4 23 3 22 1 115 3 313 7 86 1 50 2 
118 1 315 4 198 1 90 1 365 1 37 1 229 1 97 1 96 1 180 1 274 1 204 1 303 4 233 2 348 2 350 8 128 1 131 1 218 1 23 1 115 1 313 2 86 1 
118 1 315 6 178 1 198 2 90 1 365 2 37 2 229 1 96 1 97 1 180 1 274 1 298 1 204 2 183 1 303 5 233 3 348 4 160 1 128 1 350 11 131 2 258 1 218 2 23 1 313 2 115 1 86 1 
118 1 221 1 315 9 198 3 90 1 228 1 365 3 62 1 37 3 229 3 97 1 96 1 180 1 274 1 298 1 204 3 183 2 303 10 233 4 348 6 160 2 126 2 128 1 350 19 131 3 258 1 331 1 218 1 23 1 115 1 313 3 86 1 50 1 
118 1 221 1 315 10 198 3 90 1 228 1 365 3 62 1 37 3 229 2 97 1 96 1 180 1 274 1 298 2 204 3 183 2 303 7 233 5 348 6 160 2 126 1 128 1 350 17 131 3 258 1 331 1 218 1 23 1 115 1 313 3 86 1 50 1 
118 1 315 4 198 1 90 1 365 1 37 1 229 1 97 1 96 1 180 1 274 1 204 1 303 4 233 2 348 2 350 8 128 1 131 1 218 1 23 1 115 1 313 2 86 1 
118 1 221 1 315 6 198 1 90 1 228 1 365 2 62 1 37 1 229 2 97 1 96 1 298 1 204 1 183 2 303 6 233 2 348 2 160 2 126 2 350 12 131 1 331 1 218 1 313 1 
118 1 221 1 315 10 198 4 90 1 228 1 62 1 365 3 37 4 229 2 96 1 97 1 180 1 274 1 298 2 204 4 183 2 303 8 233 5 348 8 160 2 126 1 128 1 350 18 131 4 258 1 331 1 218 1 23 1 115 1 313 3 86 1 50 2 
118 1 221 1 315 9 338 1 198 4 90 1 228 1 62 1 365 3 37 4 229 2 96 1 97 1 298 3 204 4 183 3 303 7 233 6 348 8 160 3 126 2 350 16 131 4 331 1 218 1 313 3 50 2 
303 4 233 6 315 3 350 7 128 1 365 1 229 1 23 3 274 2 298 3 115 3 313 3 86 1 
118 1 221 1 315 10 338 1 198 4 90 1 228 1 62 1 365 3 37 4 229 2 96 1 97 1 180 1 274 1 298 1 204 4 183 2 303 8 233 4 348 8 160 2 126 1 128 1 350 18 131 4 331 1 218 1 23 1 115 1 313 3 86 1 50 2 
165 1 245 1 304 1 223 1 101 1 140 1 84 1 
3 1 245 1 304 1 257 1 223 1 165 1 281 1 95 1 84 1 140 1 101 1 242 1 
339 1 129 1 1 1 309 1 214 1 372 1 150 1 47 1 121 1 300 1 314 1 
372 1 245 1 71 1 121 1 247 1 129 1 339 1 309 1 33 1 249 1 214 1 84 1 140 2 101 2 300 1 24 1 314 1 141 1 
245 1 71 2 121 1 211 1 247 1 6 1 129 2 339 1 321 1 309 3 33 1 249 1 214 1 341 1 84 2 140 2 101 2 300 1 24 2 314 1 141 1 182 1 290 1 
302 1 245 1 71 2 121 2 360 1 211 1 247 1 6 1 129 2 339 1 321 1 309 3 249 1 214 2 341 1 84 2 140 2 101 2 300 1 24 2 314 2 141 1 182 1 290 1 
193 1 357 1 268 1 224 1 120 1 121 1 248 1 249 1 8 1 341 1 140 1 101 1 182 1 109 1 18 1 329 1 162 1 309 1 214 1 84 1 314 1 24 1 
193 1 357 1 268 1 224 1 120 1 121 1 248 1 249 1 8 1 341 1 140 1 101 1 182 1 109 1 329 1 162 1 309 1 214 1 84 1 49 1 314 1 24 1 
339 1 214 1 286 1 121 1 300 1 314 1 
185 1 207 1 372 2 42 1 70 1 175 1 246 1 121 6 71 1 227 1 129 2 339 2 309 3 214 7 286 1 153 1 116 1 314 7 288 1 300 3 205 1 
245 2 121 1 247 1 198 2 339 1 249 1 344 1 153 1 154 2 204 2 300 1 303 3 348 4 71 1 128 1 350 6 129 1 213 1 131 2 309 1 132 1 214 1 23 1 84 1 314 1 24 1 313 2 86 1 222 1 315 3 226 1 92 1 33 1 36 1 365 1 37 2 229 1 322 1 272 1 274 1 180 1 140 2 101 2 141 1 233 2 333 2 115 1 
51 2 147 1 53 2 244 1 193 3 356 1 121 1 248 1 340 1 343 1 324 1 184 1 277 2 105 1 372 1 256 2 109 1 329 1 162 3 77 1 309 2 214 1 112 1 282 2 265 1 314 1 352 1 49 1 
244 1 121 2 71 1 129 1 339 1 309 2 214 2 286 1 134 1 153 1 314 2 288 1 300 2 
1 1 302 1 372 1 121 4 129 1 339 1 309 1 214 4 150 1 152 1 153 1 300 1 314 4 
185 1 175 1 121 2 71 1 5 1 129 1 339 1 309 1 214 2 376 1 314 2 300 2 182 1 378 1 
339 1 214 1 372 1 113 1 30 1 323 1 121 1 300 1 314 1 142 1 
339 1 129 1 309 1 214 2 246 1 127 1 121 2 153 1 300 1 314 2 205 1 
1 1 372 1 70 1 246 1 121 4 129 2 339 2 309 3 214 5 150 1 152 1 153 1 314 5 116 1 300 2 182 1 
1 1 372 1 70 1 246 1 121 4 129 2 339 2 309 3 214 5 150 1 139 1 152 1 153 1 314 5 300 2 182 1 
372 1 245 1 71 1 121 1 360 1 247 1 129 1 339 1 309 1 249 1 214 1 84 1 140 2 101 2 300 1 24 1 314 1 141 1 
185 1 42 1 175 1 121 1 71 1 129 1 339 1 309 1 214 1 314 1 288 1 300 2 182 1 
238 1 245 1 64 1 136 1 56 1 
206 1 147 1 245 1 193 2 136 2 75 1 56 2 74 1 329 1 211 1 162 2 238 2 248 1 21 1 64 1 341 1 203 1 265 1 290 1 
26 1 136 1 56 1 72 1 164 1 64 1 84 1 140 1 101 1 
206 1 64 1 75 1 
191 1 292 1 345 1 47 1 
191 1 292 1 284 1 159 1 345 1 319 1 143 1 
108 1 181 1 143 1 
191 1 292 1 176 1 159 1 319 3 143 3 296 1 284 1 46 2 250 1 345 1 370 1 
191 1 292 1 253 1 61 1 284 1 159 1 345 1 319 2 143 2 
191 1 133 1 284 1 202 1 159 1 30 1 318 1 319 1 143 1 370 1 142 1 
191 1 284 1 159 1 345 1 319 1 143 1 370 1 
292 1 284 1 159 1 345 2 319 1 143 1 370 1 
191 1 284 2 317 1 159 2 166 1 345 1 319 2 190 1 143 2 370 1 
191 2 292 1 253 2 208 1 194 1 159 1 319 3 143 3 133 1 284 1 345 1 368 1 370 1 
191 1 292 1 253 1 305 1 159 1 30 2 318 1 319 2 143 2 239 1 113 1 284 1 345 1 370 1 142 1 
191 2 292 1 253 2 159 2 319 4 143 4 45 1 61 1 133 1 284 2 345 1 368 1 370 1 
191 1 292 1 284 1 159 1 345 1 319 1 143 1 370 1 
191 3 292 2 253 2 176 1 159 1 319 4 143 4 60 1 133 1 46 1 284 1 250 1 345 2 368 1 
191 1 253 1 292 1 159 1 319 2 143 2 351 1 81 1 284 1 345 1 100 1 370 1 
191 1 291 1 292 1 176 1 46 2 284 1 159 1 250 2 345 1 319 3 143 3 370 1 
191 2 355 2 297 1 349 1 
284 1 38 1 159 1 319 1 143 1 370 1 
191 1 292 1 253 1 194 1 284 1 159 1 345 1 319 2 143 2 370 1 
124 1 
191 1 292 1 284 1 159 1 345 1 319 1 143 1 370 1 
191 1 253 1 292 1 194 1 159 1 319 3 143 3 284 1 46 1 345 1 370 1 
191 1 60 1 133 1 368 1 
191 1 345 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 1 67 1 329 1 74 1 121 1 372 1 
226 1 67 1 329 1 74 1 121 1 372 1 
226 1 67 1 329 1 74 1 121 1 372 1 
226 1 67 1 329 1 74 1 121 1 372 1 
226 1 121 4 75 1 4 1 88 1 219 1 372 4 365 1 67 1 310 1 329 1 199 3 53 1 165 2 253 2 254 1 58 3 61 1 
226 1 121 2 233 1 4 1 88 1 219 1 372 2 365 1 67 1 329 1 328 1 108 1 200 1 98 1 275 1 58 1 
226 2 121 3 75 1 88 1 219 1 372 3 67 1 92 1 329 2 108 1 199 1 165 1 58 2 
100 1 121 9 75 3 4 1 219 1 365 1 310 1 108 1 199 7 53 1 54 1 253 2 254 1 58 5 61 1 226 2 88 1 372 9 350 1 40 1 92 1 67 1 329 2 165 4 
100 1 121 9 75 3 4 1 219 1 365 1 310 1 108 1 199 7 53 1 54 1 253 2 254 1 58 5 61 1 226 2 88 1 372 9 350 1 40 1 92 1 67 1 329 2 165 4 
333 1 
157 1 337 2 177 1 
305 1 77 2 201 1 209 2 103 2 18 2 302 2 19 2 
239 1 72 1 338 1 305 1 172 1 141 2 339 1 103 2 217 1 28 1 346 1 148 1 52 1 29 2 77 3 201 1 311 1 317 1 205 1 348 1 84 1 63 1 18 2 155 2 19 2 351 2 115 1 373 1 41 1 25 1 97 1 42 1 209 2 375 1 376 1 356 2 302 3 
107 1 213 1 305 1 77 1 209 1 103 1 18 1 234 1 302 1 19 1 
45 1 34 1 18 1 342 1 324 1 107 1 20 1 177 1 117 1 190 1 77 1 166 1 149 1 302 1 
45 1 34 2 103 1 18 1 342 2 19 1 107 1 20 1 177 1 117 1 190 1 77 1 166 1 209 1 302 1 
335 1 6 1 34 1 342 1 364 1 
45 1 6 1 39 1 162 1 177 1 34 2 342 2 364 1 
34 1 342 1 364 1 
213 1 305 1 34 1 154 1 103 1 18 1 234 1 342 1 19 1 107 1 6 1 77 1 209 1 302 1 
177 1 
45 1 6 1 39 1 177 1 34 2 297 1 342 2 364 1 
45 1 303 1 256 2 269 1 243 1 34 5 185 1 359 1 321 2 3 2 342 5 364 2 220 1 6 2 39 1 177 1 300 1 223 1 237 1 
333 1 
340 1 103 1 18 2 19 1 51 1 77 2 201 2 209 1 302 2 
150 1 361 1 129 1 
72 1 205 1 63 1 172 1 141 1 28 1 148 1 290 1 29 1 77 1 41 1 201 1 311 1 375 1 356 1 302 1 
316 1 103 1 18 5 19 4 247 1 324 1 51 1 77 5 201 1 71 2 209 4 302 5 268 1 81 1 
107 1 82 1 77 2 209 2 18 2 234 1 302 2 19 2 
72 1 205 1 63 1 172 1 141 1 18 1 129 1 19 1 28 1 247 1 148 1 29 1 41 1 77 2 311 1 71 1 209 1 375 1 356 1 302 2 
77 3 201 1 103 1 71 1 209 3 18 3 302 3 19 3 
107 1 77 1 209 1 18 1 234 1 302 1 19 1 
107 1 51 1 77 1 340 1 209 1 103 1 18 1 302 1 19 1 
239 1 72 1 338 1 172 1 305 1 118 1 141 1 339 1 103 2 342 1 28 1 247 1 51 1 107 1 346 1 148 1 29 1 77 4 201 1 311 1 317 1 205 1 84 1 63 1 206 1 34 1 18 3 155 2 19 3 351 1 115 1 20 1 373 1 117 1 190 1 41 1 97 1 166 1 42 1 375 1 209 3 71 1 356 1 302 4 
324 1 77 2 201 1 209 1 71 1 18 2 302 2 81 1 19 1 
34 1 118 1 103 1 245 1 18 3 342 1 19 3 247 1 51 1 107 1 20 1 177 1 117 1 190 1 77 3 166 1 71 2 209 3 302 3 
361 1 103 1 18 2 129 1 19 2 51 1 77 2 71 1 209 2 302 2 
205 1 72 1 63 1 172 1 141 1 28 1 148 1 29 1 77 1 41 1 201 1 311 1 375 1 356 1 302 1 
151 1 205 1 72 1 63 1 358 1 172 1 141 1 28 1 29 1 77 1 41 1 201 1 311 1 356 1 302 1 
136 1 239 1 338 1 140 1 339 1 361 2 102 1 217 2 150 2 317 1 181 1 204 1 155 2 129 2 351 4 160 1 159 1 115 2 353 1 373 1 301 1 69 1 42 1 210 1 
107 1 82 1 117 1 77 1 209 1 18 1 302 1 19 1 
273 1 135 1 
273 1 135 1 
78 1 278 1 
78 1 278 1 
78 1 278 1 
273 1 249 1 135 1 
273 1 249 1 135 1 
273 1 227 1 135 1 
273 2 194 1 164 1 78 1 135 2 278 1 
273 1 249 1 135 1 
273 1 235 1 135 1 
273 1 235 1 135 1 
273 1 235 1 135 1 
0 1 169 1 281 1 242 1 342 1 77 2 201 1 80 1 79 1 227 1 34 1 153 1 18 2 130 1 19 2 323 1 38 1 273 1 374 1 96 1 209 2 135 1 302 2 357 1 
0 2 194 1 137 1 336 2 281 3 228 1 171 1 34 2 17 1 130 2 342 2 323 2 273 2 177 1 374 1 332 1 80 2 135 2 192 1 
365 1 310 1 4 1 
365 1 233 1 4 1 
325 1 310 2 170 1 276 1 233 1 4 3 
325 1 310 1 276 1 233 1 59 1 4 2 
325 1 310 1 276 2 233 1 4 2 
303 1 45 1 195 1 169 1 337 3 140 1 143 2 341 2 3 1 342 5 364 1 76 1 6 4 309 1 177 2 223 3 9 1 256 1 181 1 204 1 153 1 34 5 185 2 321 1 294 1 156 2 157 1 160 1 39 1 163 1 357 1 378 1 
45 1 303 1 304 1 195 3 169 4 335 5 337 9 140 3 120 1 341 6 2 1 3 2 342 9 364 6 345 1 76 1 6 7 177 5 223 8 10 1 256 2 181 3 269 1 204 3 34 9 185 6 259 5 321 2 156 6 157 3 160 3 39 1 163 2 355 1 378 2 
45 1 169 1 195 1 337 4 140 1 143 1 341 2 3 1 342 3 6 2 177 3 223 3 9 1 256 1 181 1 269 1 204 1 34 3 185 2 294 1 321 1 156 2 157 2 160 1 163 1 378 1 
45 1 304 1 169 2 195 2 337 7 140 2 143 2 341 4 3 1 342 4 345 1 6 3 177 4 223 5 9 1 10 1 256 1 181 2 269 1 204 2 34 4 185 4 321 1 294 1 156 4 157 3 160 2 163 1 378 1 
333 1 
72 1 285 1 
14 1 
28 1 72 1 41 1 
72 1 139 1 
72 1 41 1 
28 1 72 3 252 1 23 2 41 1 113 1 
111 1 204 1 140 1 27 1 257 2 217 4 260 1 351 7 115 3 298 1 68 1 368 1 301 3 69 2 70 1 274 1 225 1 
111 1 204 1 140 1 27 1 257 2 217 4 260 1 351 7 115 3 298 1 68 1 368 1 301 3 69 2 70 1 274 1 225 1 
111 1 204 1 140 1 27 1 257 2 217 4 260 1 351 7 115 3 298 1 222 1 68 1 368 1 301 3 69 2 70 1 274 1 225 1 
195 3 338 1 240 1 27 1 140 4 339 1 265 1 217 16 175 3 176 4 7 1 368 5 225 1 315 1 111 2 317 1 181 3 204 4 257 3 260 1 155 2 114 1 351 31 272 1 115 15 298 2 160 3 208 1 373 1 68 2 301 10 69 5 70 1 274 2 
338 2 140 1 27 1 339 2 217 5 7 1 368 1 124 1 225 1 111 1 317 2 204 1 257 2 155 4 351 9 298 1 115 4 373 2 68 1 301 4 69 3 70 1 274 1 168 1 
280 1 196 1 170 1 141 1 73 1 121 2 104 1 284 1 4 2 219 1 362 1 365 1 310 1 199 1 29 1 108 1 58 1 226 1 205 1 63 1 233 1 88 1 372 2 66 1 67 1 329 1 133 1 24 1 356 1 43 1 
170 1 26 1 141 1 73 1 360 1 121 3 104 1 284 1 4 2 219 1 362 1 365 1 310 1 29 1 108 1 199 2 58 1 226 1 205 1 63 1 233 1 88 1 372 3 186 1 66 1 329 1 133 1 24 1 356 1 43 1 
170 1 141 1 73 1 360 1 121 2 104 1 284 1 4 2 219 1 365 1 310 1 108 1 29 1 199 2 58 1 205 1 63 1 233 1 88 1 372 2 186 1 66 1 133 1 24 1 356 1 
72 1 26 1 197 1 141 1 73 2 121 1 104 2 29 1 108 2 311 1 314 1 370 1 226 1 205 1 33 1 319 1 63 1 372 1 66 2 189 1 329 1 41 1 356 1 
280 1 170 1 141 1 73 1 121 1 104 1 284 1 4 2 362 1 365 1 310 1 29 1 108 1 226 1 205 1 63 1 233 1 372 1 186 1 66 1 67 1 329 1 133 1 24 1 356 1 43 1 
94 1 
45 1 337 2 197 1 141 2 3 1 343 1 342 5 107 1 248 2 145 1 147 1 288 1 55 2 149 1 256 1 13 1 292 2 205 1 63 1 349 1 18 1 157 2 352 1 20 1 163 1 299 1 117 1 166 1 356 2 302 1 303 1 72 1 214 2 306 1 174 2 215 1 364 6 29 2 177 2 123 4 77 1 223 2 311 2 314 1 34 5 185 2 321 1 324 1 39 3 327 1 190 1 41 1 238 1 277 2 377 2 
215 1 342 3 364 2 107 1 248 1 288 1 123 2 77 1 149 1 349 1 34 3 297 1 18 1 324 1 20 1 352 1 327 1 39 1 117 1 190 1 166 1 302 1 
45 1 215 1 342 3 364 1 107 1 288 1 123 3 177 1 77 1 149 1 349 1 34 3 297 1 18 1 324 1 20 1 352 1 327 1 39 1 117 1 190 1 166 1 277 1 302 1 
45 1 215 1 342 3 364 2 107 1 248 1 288 1 123 3 177 1 77 1 149 1 349 1 34 3 297 1 18 1 324 1 20 1 352 1 39 1 327 1 117 1 190 1 166 1 277 1 302 1 377 1 
303 1 45 5 214 2 174 2 216 1 215 1 3 1 342 5 364 7 107 1 147 1 248 4 288 1 287 1 177 5 123 6 77 1 55 2 223 1 149 1 224 1 256 1 347 1 13 1 292 2 349 1 34 5 185 1 321 1 297 1 18 1 157 2 324 1 352 1 20 1 327 1 39 3 117 1 190 1 166 1 167 1 277 4 302 1 377 4 
45 1 337 2 3 1 342 4 107 1 147 1 248 2 288 1 55 2 149 1 256 1 13 1 292 2 349 1 18 1 157 2 20 1 352 1 117 1 166 1 302 1 303 1 214 2 174 2 215 1 364 4 123 4 177 2 77 1 223 1 34 4 185 1 321 1 324 1 327 1 39 2 190 1 277 2 238 1 377 2 
45 1 303 1 214 2 174 2 215 1 216 1 3 1 342 4 364 4 107 1 248 2 147 1 288 1 177 1 123 4 77 1 55 2 223 1 149 1 256 1 347 1 13 1 292 2 349 1 34 4 185 1 321 1 18 1 157 2 324 1 20 1 352 1 39 2 327 1 117 1 190 1 166 1 167 1 277 2 377 2 302 1 
45 1 303 1 214 2 174 2 215 1 216 1 3 1 342 4 364 4 107 1 248 2 147 1 288 1 177 1 123 4 77 1 55 2 223 1 149 1 256 1 347 1 13 1 292 2 349 1 34 4 185 1 321 1 18 1 157 2 324 1 20 1 352 1 39 2 327 1 117 1 190 1 166 1 167 1 277 2 377 2 302 1 
45 1 264 2 303 1 337 2 214 2 215 1 3 1 342 4 364 4 107 1 248 2 288 1 177 1 123 4 30 1 77 1 223 1 149 1 256 1 13 1 292 2 64 2 349 1 34 4 85 1 185 1 321 1 207 1 18 1 324 1 20 1 352 1 39 2 327 1 117 1 190 1 166 1 167 1 277 2 377 2 302 1 
45 1 303 1 214 2 174 2 216 1 215 1 3 1 342 4 364 5 107 1 147 1 248 3 288 1 177 1 123 5 77 1 55 2 223 1 149 1 224 1 256 1 347 1 13 1 292 2 349 1 34 4 185 1 321 1 18 1 157 2 324 1 20 1 352 1 39 2 327 1 117 1 190 1 166 1 167 1 277 3 302 1 377 3 
45 1 303 1 214 2 174 2 216 1 215 1 3 1 342 4 364 5 107 1 147 1 248 3 288 1 177 1 123 5 77 1 55 2 223 1 149 1 224 1 256 1 347 1 13 1 292 2 349 1 34 4 185 1 321 1 18 1 157 2 324 1 20 1 352 1 39 2 327 1 117 1 190 1 166 1 167 1 277 3 302 1 377 3 
45 1 337 2 3 1 342 4 107 1 248 2 288 1 149 1 256 1 13 1 292 2 349 1 64 2 207 1 18 1 20 1 352 1 117 1 166 1 302 1 303 1 264 2 214 2 215 1 364 4 123 4 177 1 77 1 223 1 34 4 185 1 321 1 324 1 327 1 39 2 190 1 277 2 238 1 377 2 
317 1 239 1 338 1 373 1 339 1 42 1 210 1 333 1 155 2 
239 1 195 2 338 2 140 1 339 2 361 4 265 1 217 8 175 3 346 1 176 3 368 1 369 1 201 1 315 1 150 11 317 2 181 2 204 2 318 1 155 4 129 11 351 14 115 6 160 1 326 1 373 2 301 2 69 1 95 1 42 2 376 1 263 1 
239 1 72 1 338 1 241 1 172 1 141 1 361 1 339 1 217 1 344 1 28 1 247 1 148 1 346 1 198 1 290 1 29 1 77 2 201 1 311 1 317 1 205 1 63 1 18 1 155 2 19 1 351 2 115 1 373 1 41 1 42 1 375 1 209 1 71 1 356 1 376 1 302 2 263 1 
239 3 195 2 338 3 140 3 141 3 339 3 105 2 247 1 346 1 148 2 251 1 201 2 111 1 150 7 205 2 204 3 63 2 257 1 18 1 155 6 19 1 351 20 115 10 160 2 301 8 69 4 70 1 71 1 209 1 356 3 302 3 261 2 263 1 211 2 72 2 27 1 172 2 173 1 361 7 307 2 217 10 28 2 29 3 368 4 77 3 311 1 312 1 225 1 317 3 181 2 129 7 186 1 373 3 41 2 97 2 42 3 274 1 375 2 376 1 
239 2 196 1 72 3 338 2 197 1 141 7 339 2 217 1 346 1 250 1 29 8 77 1 311 2 32 1 314 1 11 1 317 2 182 1 205 2 348 2 63 2 232 1 18 1 155 4 19 1 186 1 132 1 351 2 115 1 354 1 373 2 41 2 42 2 209 1 71 1 210 1 356 8 376 1 302 1 
239 1 195 1 338 1 140 1 361 1 339 1 103 1 217 1 51 1 77 1 150 1 317 1 181 1 204 1 18 1 129 1 155 2 19 1 351 3 160 1 115 2 22 1 373 1 301 1 69 1 42 1 209 1 302 1 263 1 
150 1 239 1 317 1 181 1 204 1 338 1 361 1 339 1 217 2 129 1 155 2 351 2 353 1 373 1 301 1 368 1 42 1 210 1 
150 1 239 1 317 1 338 1 140 1 361 1 339 1 129 1 155 2 351 2 159 1 160 1 115 2 373 1 301 1 69 1 42 1 210 1 
150 2 239 1 317 1 195 1 181 1 204 1 338 1 140 1 361 2 339 1 217 2 129 2 155 2 351 4 115 2 160 1 373 1 301 2 368 1 69 1 42 1 210 1 
150 1 239 1 317 1 181 1 182 1 204 1 338 1 361 1 339 1 217 2 129 1 155 2 351 2 353 1 373 1 301 1 368 1 42 1 
150 1 239 1 317 1 182 1 338 1 140 1 361 1 339 1 129 1 155 2 351 2 159 1 160 1 115 2 373 1 301 1 69 1 42 1 
150 2 239 1 317 1 195 1 181 1 182 1 204 1 338 1 140 1 361 2 339 1 217 2 129 2 155 2 351 4 115 2 160 1 373 1 301 2 368 1 69 1 42 1 
150 2 239 1 317 1 195 1 181 1 204 1 338 1 140 1 361 2 339 1 217 2 129 2 155 2 351 4 115 2 160 1 373 1 301 2 368 1 69 1 42 1 
239 1 72 1 338 1 172 1 141 1 339 1 217 1 28 1 148 1 346 1 29 1 77 1 201 1 311 1 317 1 205 1 63 1 155 2 351 2 115 1 373 1 41 1 97 1 42 1 375 1 376 1 356 1 302 1 
239 1 72 1 338 1 172 1 358 1 141 1 339 1 217 1 218 1 28 1 346 1 29 1 77 1 201 1 311 1 317 1 151 1 205 1 63 1 155 2 351 2 115 1 373 1 41 1 42 1 376 1 356 1 302 1 
150 2 239 1 317 1 195 1 181 1 204 1 338 1 140 1 361 2 339 1 217 2 129 2 155 2 351 4 115 2 160 1 373 1 301 2 368 1 69 1 42 1 263 1 
239 1 195 1 211 1 196 1 72 1 338 1 140 1 172 1 141 1 361 2 339 1 217 2 28 1 148 1 29 1 368 1 77 1 150 2 181 1 317 1 204 1 205 1 63 1 129 2 155 2 351 4 115 2 160 1 373 1 301 2 69 1 41 1 97 1 42 1 375 1 356 1 302 1 
239 1 195 1 338 1 140 1 339 1 361 1 103 1 217 2 51 1 368 1 77 1 150 1 317 1 181 1 204 1 18 1 155 2 129 1 19 1 89 1 351 3 115 1 160 1 373 1 301 1 42 1 209 1 302 1 263 1 
44 1 47 1 195 3 101 2 48 1 338 2 140 3 339 2 265 1 217 9 175 1 286 1 176 2 368 3 315 1 317 2 125 1 181 3 204 3 155 4 37 2 351 19 115 10 160 3 93 1 373 2 301 6 69 3 191 1 168 1 
44 2 195 3 212 1 101 1 48 1 338 3 140 2 339 3 265 2 217 14 175 2 286 1 176 2 367 1 7 2 368 2 56 1 317 3 125 1 181 3 204 3 155 6 37 4 351 26 115 12 160 2 161 1 93 2 373 3 330 1 301 4 69 2 134 1 168 1 
44 1 47 1 195 4 101 1 338 3 48 1 140 5 339 3 106 1 286 1 7 1 56 1 111 1 204 5 257 1 155 6 351 41 160 4 115 21 161 1 301 8 69 4 70 1 168 1 212 1 27 1 265 3 217 20 175 3 176 4 367 1 368 4 315 1 225 1 181 4 125 1 317 3 37 4 93 2 373 3 330 1 134 1 274 1 
44 1 47 1 195 4 212 1 101 1 48 1 338 4 27 1 140 4 339 4 265 3 217 20 175 3 106 1 286 1 176 4 367 1 7 2 368 3 56 1 225 1 315 1 111 1 317 4 125 1 181 4 204 5 257 1 155 8 37 4 351 38 115 18 160 3 161 1 93 2 373 4 330 1 301 7 69 4 134 1 70 1 274 1 168 1 
44 1 195 7 212 1 101 1 48 1 338 2 27 1 140 8 339 2 265 2 217 27 175 4 286 1 176 4 367 1 7 1 369 2 368 7 56 1 225 1 315 2 111 1 317 2 125 1 181 7 204 8 257 1 155 4 37 4 351 52 115 25 160 7 161 1 93 1 373 2 330 1 301 14 69 7 134 1 70 1 274 1 168 1 
323 1 0 1 273 1 194 1 282 1 332 1 135 1 80 1 192 1 130 1 
227 1 96 1 
323 1 0 1 273 1 91 1 289 1 258 1 135 1 80 1 130 1 
12 1 249 1 
235 1 164 1 244 1 
0 1 194 1 137 1 336 1 281 2 228 1 171 1 34 1 342 1 130 1 323 1 273 1 177 1 374 1 332 1 80 1 135 1 192 1 
0 1 194 1 137 1 336 1 281 2 228 1 171 1 34 1 342 1 130 1 323 1 273 1 177 1 374 1 332 1 80 1 135 1 192 1 
0 1 194 1 137 1 336 1 281 2 228 1 171 1 34 1 342 1 130 1 323 1 273 1 177 1 374 1 332 1 80 1 135 1 192 1 
12 1 249 1 164 1 
12 1 249 1 164 1 
235 1 244 1 
235 1 164 1 244 1 
242 1 79 1 
0 1 336 1 169 1 281 1 242 1 342 1 6 1 77 2 201 1 80 1 79 1 227 1 228 1 34 1 153 1 36 1 18 2 130 1 19 2 323 1 38 1 273 1 96 1 135 1 209 2 302 2 357 1 
239 1 72 1 338 1 141 2 339 1 217 1 5 1 346 1 29 2 291 1 77 2 11 1 317 1 205 1 348 2 63 1 232 1 296 1 371 1 18 2 155 2 351 2 115 1 21 1 373 1 41 1 42 1 356 2 376 1 302 2 263 1 
170 1 205 1 196 1 63 1 141 2 1 1 73 1 86 1 233 1 4 2 284 1 186 1 146 1 365 1 310 1 29 2 24 1 356 2 43 1 
170 1 205 1 63 1 141 1 73 1 86 1 233 1 4 2 284 1 186 1 365 1 310 1 29 1 24 1 356 1 110 1 43 1 
205 1 72 1 63 1 319 1 197 1 141 1 1 1 73 1 29 1 41 1 311 1 356 1 57 1 314 1 
170 1 205 1 63 1 141 1 1 1 73 1 86 1 233 1 4 2 284 1 186 1 146 1 365 1 310 1 29 1 24 1 356 1 43 1 
180 1 
333 1 
45 1 303 1 256 1 337 1 34 1 185 1 174 1 321 1 3 1 342 1 364 1 157 1 147 1 39 1 177 2 223 1 55 1 
45 2 195 2 196 1 337 12 283 1 243 1 139 2 140 2 141 3 341 6 3 4 343 1 342 5 285 3 105 2 256 4 15 1 112 2 205 4 204 2 63 3 113 1 156 6 157 6 160 2 163 2 23 2 300 1 166 2 356 3 262 2 303 4 72 10 119 2 308 1 363 2 364 5 28 3 122 2 29 3 177 8 223 9 311 1 267 2 181 2 183 2 229 1 127 2 34 5 185 8 271 1 321 4 39 3 41 3 
303 2 45 2 195 2 212 1 337 6 140 2 119 1 341 5 265 1 246 1 3 2 343 1 342 1 364 1 363 2 175 1 176 1 266 1 177 5 223 8 56 1 256 2 181 2 204 2 34 1 185 5 321 2 156 5 157 3 160 2 39 1 161 1 163 1 330 1 134 1 
303 1 213 1 140 1 305 1 119 1 216 1 103 1 3 1 342 1 363 2 107 1 77 1 223 2 225 1 111 1 256 1 204 2 184 1 34 1 185 2 154 1 321 1 18 1 234 1 19 1 274 1 209 1 302 1 
303 1 256 1 45 1 243 1 185 1 321 1 3 1 177 1 300 1 223 1 
195 2 181 2 204 2 337 10 140 2 119 1 185 5 341 5 156 5 105 1 363 2 157 5 160 2 177 5 223 5 
45 1 39 1 177 1 34 1 342 1 364 1 
303 1 193 1 72 1 197 1 141 4 306 1 3 2 308 1 343 2 342 3 364 4 145 1 29 4 311 2 223 2 314 1 256 2 269 1 205 1 63 1 128 1 34 3 185 2 271 2 321 2 39 2 163 2 41 1 356 4 
239 1 72 1 338 1 305 1 172 1 141 1 339 1 103 2 28 1 346 1 148 1 29 1 77 3 201 1 311 1 317 1 205 1 84 1 63 1 18 2 155 2 19 2 351 1 115 1 373 1 41 1 97 1 42 1 209 2 375 1 356 1 302 3 
303 1 256 1 45 2 337 4 257 1 185 2 341 2 321 1 3 1 156 2 343 1 157 2 163 1 177 4 223 1 
323 1 116 1 130 1 
323 1 116 1 130 1 
46 1 323 1 242 1 332 1 130 1 
323 1 116 1 130 1 
323 1 221 1 130 1 
323 1 221 1 130 1 
323 1 221 1 130 1 
323 1 130 1 
273 1 135 1 
111 1 317 2 204 1 338 2 140 1 27 1 257 1 339 2 217 4 155 4 351 8 115 4 373 2 7 1 368 1 301 3 69 2 70 1 274 1 225 1 
333 1 
317 1 195 1 181 1 204 1 338 1 140 1 339 1 50 1 217 2 155 2 351 4 115 2 160 1 373 1 301 2 368 1 69 1 
195 1 181 1 204 1 140 1 265 1 217 3 175 1 351 7 160 1 115 4 176 2 368 1 301 2 69 1 315 1 
195 2 338 2 27 1 140 3 339 2 217 11 175 2 176 2 7 2 8 1 368 4 369 1 225 1 315 1 111 2 181 2 317 2 204 3 257 1 155 4 351 23 115 12 160 2 373 2 301 9 69 5 95 1 70 1 274 2 
351 1 115 1 176 1 
351 1 217 1 175 1 
317 1 195 1 181 1 204 1 338 1 140 1 339 1 50 1 217 3 155 2 105 1 351 6 115 3 160 1 373 1 368 1 301 3 69 2 
195 2 212 1 338 1 140 2 339 1 265 1 217 6 175 1 176 1 368 1 56 1 317 1 181 2 204 2 155 2 351 12 115 6 160 2 161 1 373 1 330 1 301 2 69 1 134 1 168 1 
111 1 204 1 140 1 217 3 351 6 115 3 301 2 368 1 69 1 274 1 225 1 
111 1 317 1 338 1 27 1 339 1 217 1 155 2 351 3 115 2 373 1 8 1 7 1 368 1 301 2 69 1 70 1 274 1 
111 2 317 1 204 2 338 1 184 1 140 2 339 1 217 5 155 2 351 10 115 5 373 1 301 5 368 2 69 3 274 2 168 1 225 1 
317 1 181 1 204 1 338 1 339 1 217 2 155 2 351 2 373 1 368 1 301 1 168 1 
317 1 195 1 181 1 204 1 338 1 140 1 339 1 217 2 155 2 351 4 115 2 160 1 373 1 301 2 368 1 69 1 168 1 
111 1 47 1 317 3 338 3 339 3 217 1 155 6 351 3 115 2 373 3 7 1 8 1 301 2 368 1 69 1 274 1 168 1 
47 1 195 3 240 1 338 5 27 1 140 5 339 5 50 1 265 1 217 16 175 3 176 4 8 1 7 2 368 5 225 2 315 1 111 3 317 5 181 3 204 5 257 1 155 10 272 1 114 1 351 34 115 18 160 3 373 5 301 12 69 7 70 1 274 3 168 1 
338 1 140 1 27 1 339 1 265 1 217 4 175 1 176 1 56 1 225 1 111 1 317 1 204 1 257 1 155 2 351 8 115 4 373 1 301 2 69 2 70 1 274 1 168 1 
195 1 338 2 140 1 27 1 339 2 50 1 265 1 217 6 175 1 176 2 368 1 56 1 225 1 315 1 111 1 317 2 181 1 204 2 257 1 155 4 351 11 115 5 373 2 301 3 69 2 70 1 274 1 168 1 
195 2 212 1 338 3 27 1 140 3 339 3 50 1 265 1 217 9 175 1 176 1 7 1 368 1 56 1 225 1 111 1 317 3 181 2 204 3 257 1 155 6 351 19 115 10 160 2 161 1 373 3 330 1 301 4 69 3 134 1 70 1 274 1 168 1 
195 2 212 1 338 3 27 1 140 2 339 3 50 1 265 1 217 10 175 1 176 1 7 1 368 2 56 1 225 1 111 1 317 3 181 2 204 3 257 1 155 6 351 17 115 7 160 1 161 1 373 3 330 1 301 5 69 3 134 1 70 1 274 1 168 1 
338 1 140 1 27 1 339 1 265 1 217 4 175 1 176 1 56 1 225 1 111 1 317 1 204 1 257 1 155 2 351 8 115 4 373 1 301 2 69 2 70 1 274 1 168 1 
195 2 212 1 338 1 140 2 339 1 265 1 217 6 175 1 176 1 368 1 56 1 317 1 181 2 204 2 155 2 351 12 115 6 160 2 161 1 373 1 330 1 301 2 69 1 134 1 168 1 
195 2 212 1 338 4 27 1 140 2 339 4 50 1 265 1 217 10 175 1 176 1 7 2 368 2 56 1 225 1 111 1 317 4 181 2 204 3 257 1 155 8 351 18 115 8 160 1 161 1 373 4 330 1 301 5 69 3 134 1 70 1 274 1 168 1 
47 1 195 3 212 1 338 4 140 2 339 4 265 1 217 9 175 1 176 1 7 2 368 3 56 1 317 4 181 3 204 3 155 8 351 16 115 7 160 2 161 1 373 4 330 1 301 6 69 3 134 1 168 1 
111 3 204 1 140 1 27 2 217 3 351 7 115 4 301 6 368 3 69 3 70 1 274 3 225 1 
47 1 195 2 212 1 338 4 27 1 140 2 339 4 265 1 217 10 175 1 176 1 7 2 368 1 56 1 225 1 111 1 317 4 181 2 204 3 257 1 155 8 351 18 115 8 160 1 161 1 373 4 330 1 301 4 69 3 134 1 70 1 274 1 168 1 
202 1 324 1 77 1 201 1 18 1 302 1 81 1 
202 1 158 1 324 1 366 1 109 1 320 1 77 1 201 1 18 1 302 1 81 1 131 1 
29 1 141 1 311 1 356 1 333 1 
72 1 205 1 63 1 172 1 141 1 18 1 19 1 28 1 148 1 29 1 41 1 77 2 201 1 311 1 71 1 209 1 356 1 302 2 
72 3 205 1 63 1 139 1 127 1 172 1 141 1 271 1 18 2 19 2 28 2 107 1 148 1 29 1 117 1 190 1 41 2 77 2 201 1 71 1 209 1 356 1 302 2 
151 1 72 3 205 1 63 1 139 1 127 1 172 1 141 2 231 1 271 1 18 2 19 2 28 2 107 1 29 2 117 1 190 1 41 2 77 2 201 1 71 1 209 1 356 2 302 2 
45 1 279 1 205 1 72 4 63 1 139 1 127 1 142 1 34 2 141 3 231 1 271 1 342 2 285 1 364 1 28 1 29 3 177 1 23 1 41 1 311 1 166 1 356 3 
45 1 112 1 205 1 72 4 63 1 139 1 127 1 34 2 141 3 231 1 271 1 342 2 285 1 364 1 28 1 29 3 177 1 23 1 41 1 311 1 166 1 356 3 
205 1 63 1 29 1 354 1 141 1 356 1 
196 1 72 3 205 3 348 1 152 1 270 1 126 1 63 2 141 6 232 1 113 1 186 1 132 1 28 1 250 1 354 1 29 7 41 2 311 2 356 7 32 1 
239 2 196 1 338 2 140 1 141 1 339 2 5 1 148 1 201 2 111 1 150 1 205 1 204 1 63 1 257 1 18 1 155 4 19 1 351 6 115 3 301 2 69 2 70 1 71 1 209 1 356 1 302 2 263 1 211 1 72 1 172 1 27 1 361 1 307 1 217 3 28 1 29 1 77 2 225 1 317 2 129 1 373 2 41 1 97 1 42 2 375 1 274 1 
45 1 303 2 72 2 243 1 141 1 3 2 308 1 342 3 285 1 364 2 122 1 6 1 29 1 177 1 223 1 311 1 256 2 112 1 183 1 34 3 185 1 321 2 39 1 23 1 300 1 166 1 356 1 262 1 
15 1 196 1 72 2 205 2 63 1 141 2 113 1 28 1 354 1 29 2 23 1 41 1 356 2 
205 1 196 1 72 1 63 1 197 1 141 4 231 1 187 1 29 4 41 1 311 1 356 4 314 1 
83 1 72 1 205 2 152 1 126 1 63 1 141 2 173 1 271 1 322 1 28 1 29 2 41 1 356 2 
365 1 205 1 63 1 29 1 141 1 24 1 311 1 233 1 356 1 4 1 
196 1 72 1 205 1 63 1 141 2 232 1 296 1 186 1 29 2 41 1 356 2 
196 1 72 3 205 2 63 2 197 1 141 4 271 1 232 1 187 1 132 1 29 5 41 2 311 1 356 5 314 1 32 1 
203 1 196 1 72 3 205 2 63 2 197 1 141 4 271 1 232 1 187 1 132 1 29 5 41 2 311 1 356 5 314 1 
151 1 72 1 205 1 63 1 172 1 141 1 18 1 19 1 28 1 29 1 41 1 77 2 201 1 311 1 71 1 209 1 356 1 302 2 
72 1 205 2 152 1 270 1 126 1 63 1 141 1 271 1 113 1 28 1 29 1 41 1 356 1 
90 1 188 1 236 1 201 1 255 1 
45 1 34 2 118 1 295 1 342 2 90 2 107 1 188 2 6 1 20 1 177 1 117 1 236 1 190 1 201 1 166 1 178 1 255 2 62 1 
90 1 188 1 21 1 291 1 236 1 77 1 371 1 18 1 302 1 
236 1 178 1 295 1 
333 1 
226 1 329 1 121 1 58 1 88 1 219 1 372 1 
108 1 121 1 104 1 
226 1 121 3 144 1 87 1 372 3 219 1 88 1 67 1 329 1 179 1 98 2 58 1 
226 1 199 1 329 1 253 1 121 2 58 1 88 1 219 1 372 2 
226 1 365 1 310 1 67 1 329 1 165 1 121 1 4 1 58 1 61 1 372 1 
226 1 67 1 329 1 121 1 58 1 88 1 372 1 
226 1 67 1 329 1 121 1 88 2 219 1 372 1 
226 2 138 1 49 1 121 2 88 1 372 2 67 1 329 2 331 1 58 1 
226 1 121 3 75 1 88 1 219 1 372 3 350 1 40 1 67 1 329 1 199 2 165 1 58 2 
226 1 170 1 121 2 233 1 4 2 88 1 219 1 372 2 365 1 67 1 310 1 329 1 199 1 58 1 99 1 
226 2 121 4 75 1 88 1 219 1 372 4 67 1 329 2 199 2 53 1 165 1 253 1 58 2 
226 1 67 1 329 1 121 1 58 1 88 1 219 1 372 1 
334 1 226 1 121 4 144 1 75 1 87 1 88 2 219 2 372 4 199 2 329 1 165 1 98 1 58 3 
100 1 226 1 230 1 293 1 121 2 88 1 372 2 219 1 67 1 329 1 199 1 58 1 
226 1 121 3 144 2 87 1 372 3 219 1 88 1 67 1 329 1 98 2 31 1 58 1 
16 1 65 2 58 2 60 1 
226 1 67 1 329 1 121 1 313 1 372 1 
226 1 40 1 67 1 199 1 329 1 121 2 58 1 88 1 219 1 372 2 
35 1 
226 1 67 1 329 1 121 1 58 1 88 1 219 1 372 1 
226 1 121 3 372 3 219 1 88 1 40 1 67 1 199 1 329 1 98 1 58 1 
334 1 165 1 75 1 58 1 
58 1 88 1 

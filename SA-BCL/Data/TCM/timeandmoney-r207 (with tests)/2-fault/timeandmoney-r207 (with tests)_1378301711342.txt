#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
288 2 111 1 267 2 133 2 321 1 365 1 154 6 292 1 38 2 62 9 346 1 89 1 369 2 371 5 185 4 374 3 92 2 13 1 283 1 238 9 191 1 303 1 17 2 50 1 241 1 332 1 23 1 357 1 
288 2 111 1 267 2 133 2 321 1 365 1 154 6 292 1 38 2 62 9 346 1 89 1 369 2 371 5 185 4 374 3 92 2 13 1 283 1 238 9 191 1 303 1 17 2 50 1 241 1 332 1 23 1 357 1 
288 2 111 1 267 2 133 2 321 1 365 1 154 7 292 1 38 2 62 10 346 1 89 1 369 2 371 6 185 5 374 4 92 2 13 1 283 1 238 10 191 1 303 1 17 2 50 1 241 1 332 1 23 1 357 1 
288 2 111 1 267 2 133 1 321 1 365 1 154 4 292 1 38 2 62 7 346 1 89 1 369 2 371 4 185 3 374 2 92 2 13 1 283 1 238 7 191 1 303 1 17 2 50 1 241 1 332 1 357 1 
185 2 374 1 92 1 111 1 267 1 133 2 283 1 321 1 238 4 154 3 292 1 17 1 38 1 62 4 332 1 23 1 369 1 371 3 
125 1 288 1 92 1 110 1 267 1 283 1 13 1 238 2 292 1 17 1 346 1 62 2 274 1 332 1 369 1 371 1 
185 1 288 1 374 1 92 2 283 1 238 3 154 1 292 1 62 3 241 1 332 1 369 2 371 2 
288 1 111 1 267 1 133 2 321 1 154 7 292 1 38 1 272 1 62 9 369 2 371 5 185 4 374 3 92 2 282 1 283 1 238 9 303 1 17 1 50 1 241 1 332 1 23 1 
288 1 111 1 267 1 133 2 321 1 154 7 292 1 38 1 272 1 62 9 369 2 371 5 185 4 374 3 92 2 282 1 283 1 238 9 303 1 17 1 50 1 241 1 332 1 23 1 
204 1 171 1 381 1 
215 1 24 2 171 1 
201 2 39 2 94 1 271 2 68 2 305 2 52 2 327 1 
263 2 79 1 201 3 336 1 108 1 175 1 0 1 205 1 82 2 206 1 232 1 293 1 39 2 294 1 271 2 159 1 88 1 327 1 90 1 91 1 140 1 163 1 141 1 94 1 68 2 354 1 99 1 255 2 376 1 145 1 128 2 219 1 356 1 49 2 305 2 52 3 224 1 
201 1 39 1 94 1 193 1 271 1 68 1 305 1 52 1 43 1 269 1 
201 1 31 1 313 1 315 1 204 1 231 1 147 1 271 1 193 1 151 1 52 1 260 1 171 1 74 1 
201 1 313 1 315 1 204 1 231 2 68 1 39 1 147 1 271 1 193 1 305 1 52 1 260 1 171 1 74 2 
59 1 335 1 231 1 254 1 74 1 
59 1 265 1 335 1 117 1 204 1 231 2 171 1 74 2 
59 1 231 1 74 1 
201 1 335 1 94 1 231 1 68 1 269 1 157 1 39 1 193 1 271 1 305 1 52 1 43 1 74 1 
171 1 
59 1 335 1 117 1 80 1 204 1 231 2 171 1 74 2 
106 1 335 2 187 1 57 1 32 2 204 1 231 5 319 2 96 1 35 2 114 1 59 2 117 1 344 1 170 1 307 1 171 1 277 1 74 5 
327 1 381 1 
66 1 201 2 107 1 68 1 39 1 271 2 305 1 52 2 327 2 
350 1 309 1 291 1 
140 1 263 1 141 1 201 1 336 1 279 1 108 1 175 1 255 1 206 1 99 1 145 1 128 1 159 1 52 1 327 1 
350 1 140 1 141 1 311 1 263 1 126 1 201 2 336 1 108 1 175 1 99 1 206 1 255 1 145 1 128 1 39 1 271 1 159 1 305 1 52 2 
66 1 311 1 126 2 201 5 31 1 362 1 68 1 330 1 39 4 51 1 271 5 305 4 52 5 327 1 
201 2 340 1 39 2 193 1 271 2 305 2 52 2 43 1 
126 1 201 3 39 3 271 3 68 1 305 3 52 3 327 1 
201 1 39 1 193 1 271 1 305 1 52 1 43 1 
66 1 201 1 107 1 39 1 193 1 271 1 68 1 305 1 52 1 
311 1 263 1 79 1 201 4 336 1 108 1 313 1 175 1 315 1 0 1 231 1 205 1 82 2 206 1 232 1 293 1 1 1 39 3 342 1 271 3 159 1 88 1 327 1 91 1 140 1 163 1 141 1 66 1 126 1 94 1 68 2 99 1 255 1 145 1 128 1 356 1 219 1 49 1 147 1 193 1 305 3 52 4 260 1 74 1 
330 1 201 2 126 1 39 1 31 1 271 2 305 1 52 2 327 1 
66 1 311 1 126 2 201 3 313 1 315 1 68 1 231 1 100 1 39 3 1 1 147 1 193 1 271 3 305 3 260 1 52 3 171 1 74 1 
350 1 66 1 126 1 201 2 68 1 39 2 271 2 305 2 52 2 309 1 
140 1 263 1 141 1 201 1 336 1 108 1 175 1 255 1 206 1 99 1 145 1 128 1 159 1 52 1 327 1 
140 1 263 1 124 1 141 1 201 1 336 1 175 1 255 1 206 1 99 1 145 1 128 1 119 1 52 1 327 1 
26 1 262 1 79 1 0 1 82 2 205 2 291 2 86 1 293 1 273 1 88 1 91 1 214 1 350 2 163 1 376 2 47 1 331 1 167 1 102 1 49 4 22 1 308 1 309 2 
201 1 39 1 340 1 193 1 315 1 271 1 305 1 52 1 
299 1 36 1 
299 1 36 1 
212 1 70 1 
212 1 70 1 
212 1 70 1 
299 1 71 1 36 1 
299 1 71 1 36 1 
299 1 71 1 36 1 
355 1 299 1 36 1 
299 2 212 1 268 1 160 1 70 1 36 2 
299 1 11 1 36 1 
299 1 11 1 36 1 
299 1 11 1 36 1 
152 1 328 1 201 2 56 1 299 1 231 1 177 1 153 1 189 1 36 1 355 1 39 2 284 1 182 1 271 2 259 1 323 1 380 1 234 1 305 2 52 2 327 1 285 1 74 1 
77 1 299 2 268 1 177 2 231 2 322 1 36 2 115 1 256 1 284 2 182 2 323 2 63 1 325 1 380 3 234 1 225 2 171 1 74 2 
17 1 38 1 267 1 
17 1 267 1 274 1 
221 1 247 1 38 2 267 3 12 1 274 1 
221 1 247 1 38 1 312 1 267 2 274 1 
38 1 247 1 221 2 267 2 274 1 
27 1 262 1 264 1 335 4 32 1 176 1 178 1 231 5 204 1 319 1 153 1 134 1 35 1 179 1 114 3 207 2 59 1 117 1 139 2 277 1 214 1 215 1 10 1 47 1 130 2 259 1 170 2 24 3 285 1 308 1 171 2 74 5 
262 3 264 2 335 7 32 2 176 1 178 3 231 9 204 1 320 1 319 2 134 2 35 2 114 8 207 6 208 1 59 6 117 1 40 1 344 1 276 1 277 1 214 3 215 3 254 5 378 1 47 3 130 6 259 4 379 1 170 6 24 9 308 3 171 5 310 5 74 9 
262 1 264 1 335 2 32 1 204 1 231 3 178 1 319 1 134 1 179 1 35 1 114 3 207 2 344 1 139 1 214 1 215 2 10 1 47 1 259 1 130 2 170 2 24 4 308 1 171 3 74 3 
262 2 264 1 335 3 32 1 204 1 231 4 178 2 320 1 319 1 134 1 35 1 179 1 114 5 207 4 40 1 344 1 139 2 276 1 214 2 215 3 10 1 47 2 130 4 259 2 170 4 24 7 308 2 171 4 74 4 
140 1 275 1 381 1 
140 1 290 1 
337 1 
140 1 141 1 99 1 
140 1 2 1 
140 1 141 1 
140 3 141 1 368 1 345 1 99 1 275 2 
262 1 216 2 188 1 242 1 329 1 205 3 98 1 376 4 47 1 331 2 166 1 102 3 49 7 248 1 21 1 249 1 4 1 
262 1 216 2 188 1 242 1 329 1 205 3 98 1 376 4 47 1 331 2 166 1 102 3 49 7 248 1 21 1 249 1 4 1 
262 1 216 2 300 1 188 1 242 1 329 1 205 3 98 1 376 4 47 1 331 2 166 1 102 3 49 7 248 1 21 1 249 1 4 1 
262 4 79 1 242 2 0 1 178 3 82 2 205 15 83 1 248 1 295 3 88 1 138 4 249 2 121 1 4 1 214 3 163 1 216 3 375 1 188 1 329 2 98 2 45 1 376 16 166 1 47 4 331 5 102 10 49 31 21 5 306 1 333 1 308 3 287 1 
262 1 79 2 58 1 0 2 242 1 82 4 205 4 248 1 88 2 249 1 4 1 163 2 6 1 216 2 188 1 329 1 98 1 376 5 47 1 331 3 102 4 49 9 21 1 333 1 
172 1 263 1 288 1 132 1 30 1 267 2 81 1 154 1 206 1 245 1 289 1 292 1 38 1 62 2 42 1 274 1 369 1 371 1 5 1 92 1 12 1 283 1 255 1 238 2 145 1 17 1 128 1 220 1 146 1 332 1 
263 1 288 1 132 1 30 1 267 2 81 1 154 2 206 1 245 1 289 1 292 1 38 1 211 1 41 1 62 3 274 1 369 1 371 1 5 1 92 1 12 1 218 1 255 1 238 3 145 1 17 1 128 1 220 1 146 1 332 1 
288 1 263 1 132 1 30 1 267 2 81 1 154 2 206 1 292 1 38 1 211 1 62 2 274 1 371 1 5 1 12 1 218 1 255 1 238 2 145 1 128 1 17 1 220 1 146 1 332 1 
140 1 5 2 141 1 288 2 263 1 92 1 352 1 175 1 314 1 81 2 206 1 238 1 255 1 84 1 145 1 128 1 158 1 220 2 41 1 62 1 296 1 72 1 369 1 
172 1 263 1 288 1 132 1 30 1 267 2 81 1 206 1 245 1 289 1 38 1 211 1 62 1 274 1 369 1 5 1 92 1 12 1 283 1 255 1 238 1 145 1 17 1 128 1 220 1 146 1 
55 1 
334 1 201 1 204 1 112 2 206 1 114 2 59 6 117 3 61 1 343 1 296 1 65 1 123 1 349 1 215 2 255 2 128 2 170 2 260 1 24 2 226 2 171 2 261 2 227 1 74 5 263 2 264 1 173 2 31 1 32 1 175 2 313 1 230 1 315 1 317 2 231 5 319 1 363 1 35 1 84 1 136 1 37 1 271 1 277 1 140 1 141 1 93 2 280 1 95 4 145 1 147 1 193 1 151 1 52 1 196 2 
334 1 201 1 80 1 31 1 313 1 315 1 95 2 231 3 363 1 136 1 59 2 117 1 61 1 147 1 193 1 271 1 260 1 151 1 52 1 196 1 123 1 74 3 
334 1 201 1 80 1 31 1 313 1 315 1 317 1 204 1 95 3 231 3 363 1 136 1 59 1 117 1 61 1 147 1 193 1 271 1 260 1 151 1 52 1 171 1 123 1 74 3 
334 1 201 1 80 1 31 1 313 1 315 1 317 1 231 3 204 1 363 1 136 1 59 2 117 1 61 1 271 1 123 1 95 3 147 1 193 1 52 1 151 1 260 1 196 1 226 1 171 1 74 3 
334 1 201 1 173 2 31 1 80 1 32 1 313 1 315 1 317 4 318 1 204 5 231 5 319 1 363 1 112 2 35 1 155 1 114 1 136 1 209 1 37 1 59 7 61 1 117 3 271 1 123 1 277 1 235 1 349 1 215 2 93 2 217 1 95 6 147 1 193 1 170 1 151 1 52 1 260 1 196 4 226 4 261 2 171 5 74 5 
334 1 201 1 204 1 112 2 114 1 59 4 61 1 117 2 343 1 123 1 349 1 215 2 170 1 260 1 24 2 226 2 261 2 171 2 74 4 31 1 173 2 313 1 32 1 315 1 317 2 231 4 319 1 363 1 35 1 136 1 37 1 271 1 277 1 93 2 95 4 147 1 193 1 52 1 151 1 196 2 
334 1 201 1 173 2 31 1 313 1 32 1 315 1 317 2 204 1 231 4 318 1 319 1 363 1 112 2 35 1 114 1 136 1 209 1 59 4 37 1 117 2 61 1 271 1 123 1 277 1 349 1 215 2 93 2 217 1 95 4 147 1 193 1 170 1 52 1 151 1 260 1 196 2 226 2 171 1 261 2 74 4 
334 1 201 1 173 2 31 1 313 1 32 1 315 1 317 2 204 1 231 4 318 1 319 1 363 1 112 2 35 1 114 1 136 1 209 1 59 4 37 1 117 2 61 1 271 1 123 1 277 1 349 1 215 2 93 2 217 1 95 4 147 1 193 1 170 1 52 1 151 1 260 1 196 2 226 2 171 1 261 2 74 4 
334 1 201 1 31 1 313 1 32 1 316 1 315 1 317 2 204 1 231 4 364 2 319 1 363 1 112 2 35 1 114 1 136 1 59 4 37 1 117 2 61 1 271 1 250 2 123 1 277 1 217 1 95 4 69 1 18 1 147 1 193 1 170 1 52 1 151 1 260 1 196 2 24 2 226 2 171 1 261 2 74 4 
334 1 201 1 173 2 31 1 32 1 313 1 315 1 317 3 204 1 231 4 318 1 319 1 363 1 112 2 35 1 155 1 114 1 136 1 209 1 37 1 59 5 117 2 61 1 271 1 123 1 277 1 349 1 215 2 93 2 217 1 95 5 147 1 193 1 170 1 52 1 151 1 260 1 196 3 226 3 171 1 261 2 74 4 
334 1 201 1 173 2 31 1 32 1 313 1 315 1 317 3 204 1 231 4 318 1 319 1 363 1 112 2 35 1 155 1 114 1 136 1 209 1 37 1 59 5 117 2 61 1 271 1 123 1 277 1 349 1 215 2 93 2 217 1 95 5 147 1 193 1 170 1 52 1 151 1 260 1 196 3 226 3 171 1 261 2 74 4 
334 1 201 1 31 1 32 1 313 1 315 1 316 1 317 2 204 1 231 4 364 2 363 1 319 1 112 2 35 1 114 1 136 1 59 4 37 1 117 2 61 1 343 1 271 1 250 2 123 1 277 1 95 4 147 1 193 1 170 1 151 1 52 1 260 1 196 2 24 2 226 2 171 1 261 2 74 4 
26 1 262 1 79 1 242 1 0 1 82 2 205 3 291 1 293 1 248 1 88 1 249 1 327 2 4 1 91 1 350 1 163 1 216 1 188 1 376 3 331 2 47 1 102 2 49 6 309 1 381 1 
76 1 262 2 79 2 109 1 0 2 178 2 205 6 82 4 291 11 232 1 293 1 270 1 181 1 295 3 88 2 138 3 327 1 90 1 91 2 214 2 350 11 163 2 45 1 376 8 240 1 331 1 47 1 102 2 49 14 21 1 306 1 308 1 309 4 
198 1 263 1 311 1 79 1 201 2 336 1 108 1 175 1 0 1 82 2 205 1 206 1 293 1 270 1 232 1 39 1 271 1 159 1 88 1 327 1 91 1 90 1 140 1 141 1 163 1 373 1 126 1 279 1 99 1 255 1 376 1 145 1 128 1 49 2 305 1 52 2 309 1 104 1 
201 3 336 2 108 2 242 1 0 3 205 10 338 2 206 2 156 1 291 7 293 3 248 1 211 1 159 2 249 1 4 1 214 2 350 7 216 1 163 3 126 1 8 2 255 3 128 3 356 2 223 1 305 1 21 4 308 2 309 7 263 3 311 1 262 3 79 3 228 1 175 1 178 2 82 6 232 1 270 1 39 1 271 1 88 3 327 2 90 1 91 3 140 2 141 2 188 1 44 2 99 2 376 10 145 2 331 4 47 3 102 8 49 20 52 3 197 2 
26 1 263 7 201 1 79 2 175 2 0 2 82 4 205 1 244 1 206 2 84 1 293 2 232 1 39 1 211 1 271 1 88 2 296 1 42 1 347 1 91 2 90 1 140 3 163 2 141 2 126 1 9 1 301 1 302 1 127 1 354 2 255 8 376 1 190 1 145 2 128 8 49 2 305 1 52 1 
262 1 79 1 201 1 0 1 178 1 82 2 205 2 291 1 293 1 270 1 39 1 271 1 88 1 91 1 214 1 350 1 66 1 163 1 68 1 376 1 331 1 47 1 102 1 49 3 305 1 52 1 73 1 308 1 309 1 
91 1 214 1 350 1 26 1 163 1 262 1 79 1 0 1 82 2 376 2 291 1 293 1 102 1 49 2 273 1 88 1 21 1 309 1 
91 1 350 1 26 1 163 1 79 1 0 1 82 2 205 2 291 1 331 1 293 1 47 1 102 1 167 1 49 2 88 1 308 1 309 1 
26 1 262 1 79 1 178 1 0 1 82 2 205 2 291 2 293 1 88 1 214 1 91 1 350 2 163 1 376 2 47 1 331 1 102 2 49 4 21 1 308 1 309 2 
91 1 214 1 350 1 163 1 262 1 79 1 0 1 127 1 82 2 376 2 291 1 293 1 102 1 49 2 273 1 88 1 21 1 309 1 
91 1 350 1 163 1 79 1 0 1 127 1 82 2 205 2 291 1 331 1 293 1 47 1 102 1 167 1 49 2 88 1 308 1 309 1 
262 1 79 1 178 1 0 1 82 2 205 2 291 2 293 1 88 1 214 1 91 1 350 2 163 1 127 1 376 2 47 1 331 1 102 2 49 4 21 1 308 1 309 2 
262 1 79 1 178 1 0 1 82 2 205 2 291 2 293 1 88 1 214 1 91 1 350 2 163 1 376 2 47 1 331 1 102 2 49 4 21 1 308 1 309 2 
263 1 201 1 79 1 336 1 108 1 175 1 0 1 82 2 205 1 206 1 293 1 232 1 159 1 88 1 327 1 90 1 91 1 140 1 141 1 163 1 99 1 255 1 376 1 145 1 128 1 356 1 49 2 52 1 
358 1 263 1 201 1 79 1 336 1 175 1 0 1 82 2 205 1 206 1 293 1 232 1 119 1 88 1 327 1 90 1 91 1 140 1 141 1 124 1 163 1 99 1 255 1 376 1 145 1 128 1 49 2 52 1 
262 1 79 1 178 1 0 1 82 2 205 2 291 2 293 1 270 1 88 1 214 1 91 1 350 2 163 1 376 2 47 1 331 1 102 2 49 4 21 1 308 1 309 2 
262 1 263 1 201 1 79 1 336 1 108 1 0 1 178 1 205 2 82 2 206 1 291 2 293 1 159 1 88 1 42 1 214 1 91 1 350 2 140 1 141 1 163 1 8 1 99 1 255 1 376 2 145 1 128 1 331 1 47 1 356 1 102 2 49 4 21 1 52 1 308 1 309 2 
262 1 79 1 201 1 0 1 178 1 205 1 82 2 291 1 293 1 270 1 339 1 39 1 271 1 88 1 91 1 214 1 350 1 66 1 163 1 68 1 376 2 47 1 102 1 49 3 21 1 305 1 52 1 308 1 309 1 
262 3 79 2 361 1 0 2 178 3 34 1 82 4 205 10 295 1 88 2 138 2 120 1 161 1 348 2 214 3 163 2 6 1 45 1 376 9 377 1 331 3 47 3 102 6 304 1 49 19 20 1 21 3 306 1 286 2 308 3 
262 3 79 3 361 2 0 3 178 3 205 12 82 6 295 2 183 1 88 3 138 2 161 1 348 4 214 3 163 3 6 1 45 2 376 14 377 1 165 1 16 1 331 2 47 2 102 4 304 2 222 1 49 26 194 1 20 1 21 2 150 1 333 2 286 1 308 2 
262 5 79 3 361 1 242 1 0 3 178 4 34 1 82 6 205 21 248 1 295 3 183 1 88 3 138 4 249 1 161 1 4 1 348 4 214 4 216 1 163 3 6 1 188 1 14 1 45 3 376 20 377 1 165 1 16 1 331 4 47 5 102 8 222 1 304 2 49 41 194 1 20 1 150 1 21 4 306 1 333 1 286 1 308 4 
262 5 79 4 361 1 242 1 0 4 178 4 34 1 82 8 205 18 248 1 295 3 183 1 88 4 138 4 249 1 161 1 4 1 348 4 214 4 216 1 163 4 6 1 188 1 14 1 45 3 376 20 377 1 165 1 16 1 331 4 47 4 102 7 222 1 304 2 49 38 194 1 20 1 150 1 21 3 306 1 333 2 286 1 308 3 
262 8 79 2 361 1 109 2 242 1 0 2 178 7 82 4 205 25 248 1 295 4 183 1 88 2 138 4 249 1 161 1 4 1 348 4 214 7 216 1 163 2 6 1 188 1 45 2 376 27 377 1 165 1 16 1 331 7 47 8 102 14 222 1 304 1 49 52 194 1 20 1 150 1 21 7 306 2 333 1 286 1 308 7 
115 1 366 1 284 1 182 1 299 1 323 1 268 1 177 1 322 1 36 1 
328 1 355 1 
180 1 284 1 182 1 299 1 323 1 177 1 97 1 3 1 36 1 
71 1 251 1 
203 1 11 1 160 1 
77 1 299 1 268 1 231 1 177 1 322 1 36 1 115 1 284 1 182 1 323 1 63 1 325 1 380 2 234 1 225 1 171 1 74 1 
77 1 299 1 268 1 231 1 177 1 322 1 36 1 115 1 284 1 182 1 323 1 63 1 325 1 380 2 234 1 225 1 171 1 74 1 
77 1 299 1 268 1 231 1 177 1 322 1 36 1 115 1 284 1 182 1 323 1 63 1 325 1 380 2 234 1 225 1 171 1 74 1 
160 1 71 1 251 1 
160 1 71 1 251 1 
203 1 11 1 
203 1 11 1 160 1 
152 1 56 1 
152 1 201 2 77 1 335 1 56 1 231 1 177 1 153 1 36 1 39 2 182 1 271 2 323 1 64 1 327 1 328 1 299 1 189 1 355 1 284 1 259 1 380 1 305 2 52 2 225 1 285 1 74 1 
75 1 263 2 201 2 78 1 79 1 0 1 82 2 205 1 206 1 293 1 270 1 232 1 271 2 88 1 91 1 90 1 140 1 141 1 7 1 163 1 143 1 9 1 354 2 255 2 164 1 376 1 190 1 145 1 128 2 49 2 52 2 
5 1 263 2 30 1 267 2 12 1 206 1 255 2 289 1 145 1 101 1 17 1 128 2 146 1 38 1 211 1 324 1 213 1 274 1 42 1 
5 1 263 1 30 1 267 2 12 1 255 1 206 1 289 1 46 1 101 1 145 1 17 1 128 1 146 1 38 1 211 1 274 1 
140 1 5 1 141 1 263 1 175 1 206 1 255 1 239 1 84 1 145 1 128 1 158 1 213 1 296 1 
5 1 263 1 30 1 267 2 12 1 255 1 206 1 289 1 145 1 101 1 17 1 128 1 146 1 38 1 211 1 324 1 213 1 274 1 
298 1 
106 1 204 1 170 1 96 1 171 1 114 1 381 1 
349 1 215 1 173 1 93 1 32 1 204 1 231 1 319 1 35 1 114 1 59 1 117 1 170 1 24 1 171 2 74 1 277 1 
199 2 106 1 204 2 206 3 114 9 290 3 207 6 116 2 59 5 2 2 341 1 117 3 345 1 65 1 214 2 215 6 253 2 353 2 255 3 128 3 168 1 130 6 170 8 260 2 24 12 171 8 308 2 74 5 25 1 263 3 262 2 264 2 266 2 32 4 175 1 33 2 231 5 178 2 319 4 35 4 42 1 275 2 277 4 372 2 236 2 140 10 141 3 237 1 96 1 99 3 145 4 47 2 103 1 197 2 
199 1 262 2 264 1 32 2 231 1 178 2 204 2 319 2 35 2 85 1 114 8 207 5 59 1 117 1 295 1 138 1 65 1 277 2 214 2 215 3 253 2 45 1 165 1 16 1 47 2 222 1 194 1 130 5 170 5 150 1 53 1 24 6 171 5 308 2 74 1 
199 1 262 2 201 1 359 1 32 1 242 1 231 1 319 1 35 1 269 1 114 2 157 1 209 1 39 1 271 1 43 1 249 1 277 1 253 2 94 1 188 1 68 1 47 1 193 1 170 2 305 1 52 1 74 1 
106 1 32 1 204 1 319 1 96 1 35 1 114 1 170 1 171 1 277 1 
214 2 199 1 262 2 215 5 253 2 178 2 114 5 207 5 47 2 130 5 170 5 197 1 24 10 171 5 308 2 
59 1 117 1 204 1 231 1 171 1 74 1 
25 2 263 4 200 1 264 2 32 2 175 2 231 3 319 2 206 1 35 2 84 1 114 2 59 4 341 1 117 2 344 1 296 1 65 2 277 1 140 1 141 1 280 1 255 4 145 1 128 4 148 1 170 2 227 1 74 3 
263 1 79 1 201 3 336 1 108 1 175 1 0 1 205 1 82 2 206 1 232 1 293 1 39 2 271 2 159 1 88 1 327 1 91 1 140 1 163 1 141 1 94 1 68 2 255 1 99 1 145 1 128 1 219 1 356 1 49 1 305 2 52 3 
216 1 215 2 264 1 32 1 204 2 319 1 35 1 114 1 207 2 130 2 170 2 24 4 171 4 65 1 277 1 
351 1 182 1 177 1 
351 1 182 1 177 1 
351 1 182 1 177 1 
152 1 182 1 367 1 177 1 322 1 
182 1 137 1 177 1 
182 1 137 1 177 1 
182 1 137 1 177 1 
182 1 177 1 
299 1 36 1 
216 1 262 1 163 2 79 2 188 1 0 2 242 1 205 4 82 4 376 4 47 1 331 2 102 3 49 8 248 1 88 2 21 1 249 1 333 1 4 1 
216 1 262 1 242 1 188 1 205 3 376 3 331 2 47 1 102 2 248 1 49 6 249 1 381 1 4 1 
214 1 163 1 262 1 79 1 0 1 178 1 205 2 82 2 376 2 331 1 47 1 102 2 60 1 49 4 88 1 21 1 308 1 
214 1 262 1 178 1 205 4 45 1 376 3 331 1 47 1 102 2 49 7 295 1 138 2 21 1 306 1 308 1 
262 3 76 1 79 2 109 1 242 2 178 2 0 2 205 12 82 4 248 1 295 2 88 2 138 2 249 2 4 1 214 2 216 1 163 2 297 1 188 1 376 11 47 3 331 5 102 9 49 23 21 4 306 1 333 2 308 2 
49 1 138 1 205 1 
49 1 295 1 376 1 
214 1 163 1 262 1 79 1 0 1 178 1 82 2 205 3 376 3 47 1 331 2 60 1 102 3 49 6 88 1 21 1 197 1 308 1 
262 2 79 1 0 1 178 2 205 6 82 2 295 1 88 1 138 1 214 2 163 1 6 1 45 1 376 6 165 1 16 1 47 2 331 1 102 2 222 1 49 12 194 1 21 1 150 1 308 2 
262 1 188 1 242 1 205 3 376 3 47 1 331 1 102 2 49 6 21 1 249 1 
163 1 79 1 297 1 242 1 0 1 205 2 82 2 376 1 331 1 102 2 49 3 248 1 88 1 21 1 249 1 333 1 4 1 
163 1 6 1 262 2 79 1 359 1 0 1 242 2 188 1 82 2 205 5 376 5 331 3 47 2 102 5 49 10 88 1 21 2 249 2 
214 1 6 1 163 1 262 1 79 1 0 1 82 2 376 2 102 1 49 2 88 1 21 1 
214 1 6 1 163 1 262 1 79 1 0 1 178 1 205 2 82 2 376 2 331 1 47 1 102 2 49 4 88 1 21 1 308 1 
6 1 163 3 79 3 297 1 0 3 242 1 34 1 205 2 82 6 376 1 331 1 102 2 49 3 88 3 21 1 249 1 333 1 
262 5 79 5 242 3 0 5 178 3 205 18 34 1 82 10 83 1 60 1 248 1 295 3 88 5 138 4 249 3 121 1 4 1 214 3 216 1 163 5 6 1 297 1 188 2 45 1 376 16 47 5 331 7 102 12 49 34 21 5 306 1 333 2 308 3 287 1 
262 1 79 1 0 1 242 1 205 4 82 2 248 1 295 1 88 1 138 1 249 1 4 1 216 1 163 1 6 1 188 1 45 1 376 4 165 1 47 1 331 2 102 2 49 8 
262 2 79 2 242 1 0 2 178 1 205 5 82 4 60 1 248 1 295 1 88 2 138 2 249 1 4 1 214 1 216 1 6 1 163 2 188 1 45 1 376 6 165 1 47 1 331 2 102 3 49 11 21 1 306 1 
262 3 79 3 242 1 0 3 178 2 205 10 82 6 60 1 248 1 295 1 88 3 138 1 249 1 4 1 214 2 216 1 163 3 6 1 188 1 45 1 376 9 165 1 16 1 47 3 331 3 102 4 222 1 49 19 194 1 21 1 150 1 333 1 308 2 
262 3 79 3 242 1 0 3 178 2 205 7 82 6 60 1 248 1 295 1 88 3 138 1 249 1 4 1 214 2 216 1 163 3 6 1 188 1 45 1 376 10 165 1 16 1 47 2 331 3 102 5 222 1 49 17 194 1 21 2 150 1 333 1 308 1 
262 1 79 1 0 1 242 1 205 4 82 2 248 1 295 1 88 1 138 1 249 1 4 1 216 1 163 1 6 1 188 1 45 1 376 4 165 1 47 1 331 2 102 2 49 8 
262 2 79 1 0 1 178 2 205 6 82 2 295 1 88 1 138 1 214 2 163 1 6 1 45 1 376 6 165 1 16 1 47 2 331 1 102 2 222 1 49 12 194 1 21 1 150 1 308 2 
262 3 79 4 242 1 0 4 178 2 205 8 82 8 60 1 248 1 295 1 88 4 138 1 249 1 4 1 214 2 216 1 163 4 6 1 188 1 45 1 376 10 165 1 16 1 47 2 331 3 102 5 222 1 49 18 194 1 21 2 150 1 333 2 308 1 
262 3 79 4 0 4 178 3 205 7 82 8 34 1 295 1 88 4 138 1 214 3 6 1 163 4 45 1 376 9 165 1 16 1 47 2 331 3 102 6 222 1 49 16 194 1 21 3 150 1 333 2 308 2 
262 1 242 3 188 1 205 4 376 3 47 1 331 3 102 6 49 7 248 1 21 3 249 3 4 2 
262 3 79 4 242 1 0 4 178 2 205 8 82 8 34 1 248 1 295 1 88 4 138 1 249 1 4 1 214 2 216 1 6 1 163 4 188 1 45 1 376 10 165 1 16 1 47 2 331 3 102 4 222 1 49 18 194 1 21 1 150 1 333 2 308 1 
330 1 201 1 31 1 67 1 271 1 52 1 327 1 
201 1 229 1 67 1 31 1 113 1 330 1 48 1 271 1 195 1 52 1 327 1 122 1 
145 1 140 1 141 1 128 1 263 1 175 1 296 1 206 1 255 1 84 1 381 1 
140 1 141 1 263 1 126 1 201 2 336 1 108 1 175 1 99 1 255 1 206 1 145 1 128 1 39 1 271 1 305 1 52 2 327 1 
236 1 25 1 140 3 141 2 263 1 126 1 201 2 336 1 108 1 315 1 99 2 255 1 206 1 145 1 128 1 2 1 39 2 147 1 193 1 271 2 305 1 52 2 327 1 
25 1 54 1 263 2 201 2 336 1 315 1 206 1 39 2 2 1 271 2 327 1 236 1 140 3 124 1 141 2 126 1 255 2 99 2 145 1 128 2 147 1 193 1 305 1 52 2 
25 1 54 1 263 3 29 1 175 1 231 2 204 1 206 1 290 1 59 1 2 1 275 1 236 1 140 4 141 1 255 3 99 1 145 1 128 3 131 1 260 1 171 1 74 2 
236 1 25 1 54 1 140 4 141 1 263 3 266 1 175 1 204 1 231 2 99 1 255 3 206 1 290 1 145 1 128 3 59 1 2 1 260 1 171 1 275 1 74 2 
145 1 128 1 263 1 206 1 255 1 244 1 
140 3 263 6 141 2 9 1 301 1 175 2 354 1 302 1 244 1 255 7 99 1 206 2 210 1 145 3 128 7 211 1 345 1 169 1 42 1 370 1 347 1 
262 1 263 1 79 2 201 2 336 1 108 1 242 1 0 2 205 3 82 4 338 1 206 1 291 1 293 2 270 1 39 1 248 1 271 1 159 1 88 2 42 1 327 2 249 1 4 1 91 2 350 1 140 1 216 1 141 1 163 2 126 1 8 1 188 1 99 1 164 1 255 1 376 3 145 1 128 1 47 1 331 2 356 1 102 2 49 6 305 1 52 2 309 1 
263 1 106 1 335 1 266 1 175 1 32 2 33 1 204 1 231 3 319 2 35 2 114 1 290 1 116 1 59 2 341 1 117 1 275 1 277 2 140 2 353 1 96 1 255 1 128 1 170 1 260 1 171 1 74 3 
140 2 263 2 141 1 237 1 244 1 255 2 99 1 206 1 145 2 128 2 345 1 42 1 275 1 
54 1 140 1 263 4 141 1 175 1 255 4 206 1 84 1 145 1 128 4 258 1 296 1 42 1 
25 1 140 1 263 2 141 1 202 1 255 2 99 1 206 1 156 1 145 2 128 2 149 1 169 1 370 1 
145 1 17 1 128 1 263 1 30 1 175 1 267 1 274 1 206 1 255 1 
145 1 140 1 141 1 128 2 263 2 143 1 9 1 211 1 42 1 206 1 255 2 
25 1 145 2 140 3 141 2 128 5 263 4 9 1 258 1 175 1 296 1 302 1 42 1 206 2 255 5 84 1 347 1 
25 1 145 2 140 3 141 2 128 5 263 4 9 1 258 1 175 1 296 1 302 1 326 1 42 1 206 2 255 5 84 1 
140 1 141 1 263 1 124 1 126 1 201 2 336 1 175 1 99 1 255 1 206 1 145 1 128 1 39 1 271 1 305 1 52 2 327 1 
25 1 140 1 263 1 141 1 255 1 99 1 206 1 210 1 145 2 128 1 345 1 169 1 370 1 
142 1 19 1 281 1 327 1 15 1 
142 2 335 1 28 1 313 1 315 1 144 1 204 1 281 1 231 2 135 1 15 2 1 1 147 1 193 1 19 2 260 1 327 1 171 1 74 2 
75 1 7 1 78 1 201 1 281 1 15 1 19 1 271 1 52 1 
28 1 281 1 135 1 
292 1 332 1 371 1 381 1 
292 1 92 1 62 1 332 1 369 1 371 1 238 1 
288 1 220 1 238 1 
92 1 243 1 283 1 238 3 292 1 192 1 62 3 346 2 369 1 332 1 371 1 252 1 
292 1 92 1 62 2 133 1 332 1 369 1 371 1 154 1 238 2 
185 1 17 1 38 1 92 1 267 1 62 1 321 1 369 1 283 1 371 1 238 1 
292 1 92 1 62 1 369 1 283 1 371 1 238 1 
292 2 92 1 62 1 332 1 369 1 283 1 238 1 
105 1 92 2 174 1 283 1 238 2 292 1 87 1 62 2 369 2 371 1 
185 1 374 1 92 1 283 1 238 3 154 2 292 1 303 1 50 1 62 3 332 1 369 1 371 2 
92 1 267 2 12 1 283 1 238 2 154 1 292 1 17 1 38 1 62 2 274 1 332 1 369 1 371 1 184 1 
185 1 374 1 92 2 133 1 283 1 238 4 154 2 292 1 62 4 332 1 369 2 23 1 371 2 
292 1 92 1 62 1 332 1 369 1 283 1 371 1 238 1 
185 1 374 1 92 1 243 1 154 2 238 4 292 2 129 1 192 1 346 1 62 4 332 2 369 1 371 3 
92 1 283 1 238 2 154 1 292 1 118 1 233 1 272 1 62 2 369 1 332 1 371 1 
186 1 92 1 243 1 283 1 238 3 292 1 192 2 62 3 346 2 369 1 332 1 371 1 
246 1 278 2 162 1 371 2 
360 1 92 1 62 1 369 1 283 1 238 1 
292 1 92 1 50 1 62 2 332 1 369 1 283 1 371 1 154 1 238 2 
257 1 
292 1 92 1 62 1 332 1 369 1 283 1 371 1 238 1 
92 1 283 1 154 1 238 3 292 1 50 1 62 3 346 1 369 1 332 1 371 1 
185 1 374 1 129 1 371 1 
292 1 371 1 

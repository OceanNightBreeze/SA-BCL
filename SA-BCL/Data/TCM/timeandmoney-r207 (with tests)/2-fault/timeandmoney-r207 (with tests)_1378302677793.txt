#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 219 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
72 1 307 1 308 2 7 1 9 1 139 2 140 1 314 1 364 1 241 3 285 5 315 6 243 1 195 9 319 1 245 2 171 4 296 9 126 1 23 1 203 2 301 1 129 1 328 2 130 1 330 1 90 2 278 2 
72 1 307 1 308 2 7 1 9 1 139 2 140 1 314 1 364 1 241 3 285 5 315 6 243 1 195 9 319 1 245 2 171 4 296 9 126 1 23 1 203 2 301 1 129 1 328 2 130 1 330 1 90 2 278 2 
72 1 307 1 308 2 7 1 9 1 139 2 140 1 314 1 364 1 241 4 285 6 315 7 243 1 195 10 319 1 245 2 171 5 296 10 126 1 23 1 203 2 301 1 129 1 328 2 130 1 330 1 90 2 278 2 
72 1 307 1 308 2 7 1 9 1 139 2 140 1 314 1 364 1 241 2 285 4 315 4 243 1 195 7 319 1 245 2 171 3 296 7 126 1 203 1 301 1 129 1 328 2 130 1 330 1 90 2 278 2 
319 1 245 1 171 2 308 1 7 1 296 4 9 1 139 1 23 1 140 1 203 2 241 1 285 3 315 3 328 1 243 1 90 1 195 4 
319 1 308 1 7 1 296 2 9 1 139 1 75 1 285 1 301 1 50 1 130 1 328 1 90 1 357 1 195 2 278 1 
319 1 171 1 307 1 7 1 296 3 9 1 241 1 285 2 315 1 328 2 90 2 195 3 278 1 
307 1 308 1 7 1 9 1 363 1 139 1 140 1 241 3 285 5 315 7 365 1 243 1 195 9 319 1 245 1 171 4 296 9 126 1 23 1 203 2 328 2 330 1 90 2 278 1 
307 1 308 1 7 1 9 1 363 1 139 1 140 1 241 3 285 5 315 7 365 1 243 1 195 9 319 1 245 1 171 4 296 9 126 1 23 1 203 2 328 2 330 1 90 2 278 1 
230 1 263 1 375 1 
230 1 342 2 119 1 
347 2 266 2 149 1 93 1 108 2 199 2 131 2 74 2 
257 1 207 1 93 1 337 1 35 1 74 2 238 1 340 2 144 2 242 1 266 2 42 1 193 1 117 1 291 1 20 1 249 1 44 1 347 2 321 1 149 1 45 1 199 2 201 1 24 1 226 1 105 1 107 2 252 1 108 3 182 1 109 1 131 3 255 2 303 1 52 2 158 1 
123 1 347 1 266 1 149 1 108 1 199 1 94 1 131 1 218 1 74 1 
135 1 370 1 260 1 199 1 263 1 128 1 59 1 108 1 230 1 354 1 131 1 317 1 218 1 380 1 
135 1 347 1 370 1 260 1 199 1 263 1 74 1 59 2 266 1 108 1 230 1 131 1 317 2 218 1 380 1 
59 1 232 1 271 1 211 1 317 1 
179 1 325 1 59 2 232 1 271 1 230 1 263 1 317 2 
59 1 271 1 317 1 
123 1 232 1 347 1 149 1 199 1 94 1 74 1 352 1 59 1 266 1 108 1 317 1 131 1 218 1 
230 1 
325 1 103 1 59 2 232 1 271 1 230 1 263 1 317 2 
121 1 147 1 124 1 232 2 172 1 271 2 48 1 263 1 310 2 116 1 325 1 59 5 216 2 316 1 230 1 317 5 289 1 355 2 29 1 
93 1 375 1 
282 1 347 1 199 2 93 2 190 1 74 1 266 1 108 2 131 2 
80 1 188 1 22 1 
20 1 113 1 321 1 93 1 337 1 201 1 35 1 105 1 340 1 144 1 193 1 108 1 109 1 182 1 131 1 52 1 
53 1 20 1 321 1 199 1 337 1 22 1 201 1 35 1 82 1 74 1 105 1 340 1 144 1 266 1 193 1 108 2 182 1 109 1 131 2 52 1 
53 2 282 1 347 1 199 5 93 1 82 1 350 1 74 4 264 1 266 4 108 5 354 1 131 5 244 1 
266 2 61 1 108 2 199 2 94 1 131 2 218 1 74 2 
53 1 347 1 266 3 93 1 108 3 199 3 131 3 74 3 
266 1 108 1 199 1 94 1 131 1 218 1 74 1 
347 1 282 1 266 1 108 1 199 1 190 1 131 1 218 1 74 1 
53 1 135 1 282 1 260 1 93 1 337 1 35 1 74 3 57 1 340 1 59 1 144 1 242 1 266 3 193 1 42 1 117 1 317 1 218 1 291 1 20 1 249 1 44 1 321 1 347 2 370 1 149 1 45 1 199 3 201 1 82 1 226 1 180 1 105 1 107 2 252 1 108 4 182 1 109 1 131 4 255 1 52 1 158 1 380 1 
264 1 53 1 266 1 93 1 108 2 199 2 354 1 131 2 74 1 
53 2 135 1 347 1 282 1 370 1 260 1 199 3 223 1 82 1 74 3 180 1 59 1 266 3 108 3 230 1 317 1 131 3 218 1 380 1 
53 1 282 1 347 1 188 1 199 2 22 1 74 2 266 2 108 2 131 2 
20 1 321 1 93 1 337 1 35 1 201 1 105 1 340 1 144 1 193 1 108 1 109 1 182 1 131 1 52 1 
159 1 20 1 93 1 337 1 35 1 201 1 105 1 340 1 144 1 327 1 108 1 109 1 182 1 131 1 52 1 
305 1 188 2 166 1 37 1 238 2 242 1 99 1 117 1 194 1 344 1 269 1 249 1 44 1 80 2 45 1 22 2 226 1 107 2 252 2 253 1 254 1 28 1 255 4 360 1 
135 1 266 1 108 1 199 1 61 1 131 1 218 1 74 1 
300 1 276 1 
300 1 276 1 
259 1 146 1 
259 1 146 1 
259 1 146 1 
300 1 258 1 276 1 
300 1 276 1 204 1 
49 1 300 2 259 1 276 2 115 1 146 1 
300 1 258 1 276 1 
300 1 258 1 276 1 
300 1 302 1 276 1 
300 1 302 1 276 1 
300 1 302 1 276 1 
134 1 33 1 93 1 309 1 54 1 165 1 261 1 235 1 362 1 74 2 59 1 266 2 79 1 317 1 199 2 200 1 25 1 178 1 300 1 108 2 181 1 276 1 204 1 131 2 
320 1 346 1 134 3 294 2 33 2 309 1 261 2 235 2 115 1 177 1 38 1 300 2 59 2 230 1 276 2 205 1 79 2 317 2 333 1 
245 1 308 1 139 1 
75 1 308 1 139 1 
75 1 245 2 286 1 21 1 377 1 139 3 
75 1 245 1 143 1 286 1 21 1 139 2 
75 1 245 1 286 2 21 1 139 2 
232 4 305 1 136 1 166 1 263 1 310 1 362 1 284 1 96 1 97 2 216 1 59 5 60 2 99 1 317 5 342 3 343 1 119 1 269 1 290 1 124 2 247 2 172 1 271 1 48 3 200 1 25 1 325 1 376 1 230 2 355 1 31 1 
280 1 232 7 305 3 136 2 166 3 263 1 362 4 211 5 310 2 14 1 96 1 97 6 59 9 216 2 60 6 99 3 289 1 317 9 342 9 119 3 369 1 269 3 290 3 122 1 124 6 271 6 172 1 48 8 81 5 325 1 26 1 229 1 230 5 355 2 31 2 
232 2 305 1 136 1 166 1 263 1 310 1 362 1 284 1 97 2 216 1 59 3 60 2 99 1 317 3 289 1 343 1 342 4 119 2 290 1 269 1 247 1 124 2 48 3 230 3 355 1 31 1 
280 1 232 3 305 2 136 1 166 2 263 1 310 1 362 2 14 1 284 1 97 4 216 1 59 4 60 4 99 2 317 4 289 1 342 7 343 1 119 3 290 2 269 2 247 2 124 4 48 5 229 1 230 4 355 1 31 1 
201 1 237 1 375 1 
162 1 201 1 
306 1 
182 1 337 1 201 1 
156 1 201 1 
182 1 201 1 
335 1 182 1 337 1 201 3 237 2 120 1 
269 1 32 1 221 2 64 1 13 1 298 1 56 1 238 4 351 1 98 1 252 3 99 1 28 3 254 2 255 7 184 1 277 1 
269 1 32 1 221 2 64 1 13 1 298 1 56 1 238 4 351 1 98 1 252 3 99 1 28 3 254 2 255 7 184 1 277 1 
269 1 32 1 221 2 262 1 64 1 13 1 298 1 56 1 238 4 351 1 98 1 252 3 99 1 28 3 254 2 255 7 184 1 277 1 
32 5 208 1 305 3 164 4 166 3 336 1 10 1 13 2 56 1 238 16 98 2 242 1 99 4 117 1 17 1 168 1 290 3 269 4 249 1 221 3 45 1 64 2 298 2 351 1 107 2 71 1 252 15 28 10 254 5 133 3 255 31 184 1 277 1 111 1 
32 1 186 1 55 1 13 1 56 1 238 8 95 1 98 2 242 1 99 3 117 1 269 3 249 1 221 2 45 1 64 1 298 2 107 2 252 6 254 3 28 4 255 14 184 2 277 1 
279 1 161 1 308 1 7 1 9 1 236 1 35 1 139 2 75 1 340 1 285 1 144 1 77 1 315 1 288 1 195 2 319 1 245 1 196 1 295 1 296 2 374 1 106 1 328 1 27 1 109 1 377 1 90 1 52 1 278 1 
279 1 308 1 7 1 236 1 35 1 12 1 139 2 75 1 340 1 285 1 144 1 77 1 315 2 288 1 195 3 319 1 245 1 295 1 296 3 374 1 106 1 328 1 27 1 109 1 377 1 331 1 90 1 52 1 30 1 278 1 
279 1 308 1 7 1 236 1 35 1 12 1 139 2 75 1 340 1 285 1 144 1 315 2 288 1 195 2 319 1 245 1 295 1 296 2 374 1 106 1 109 1 331 1 377 1 52 1 278 1 
185 1 209 1 35 1 340 1 144 1 268 1 195 1 293 1 246 1 295 2 296 1 272 1 201 1 374 2 105 1 106 2 328 1 182 1 109 1 90 1 52 1 30 1 278 2 
279 1 308 1 9 1 236 1 35 1 12 1 139 2 75 1 340 1 144 1 77 1 288 1 195 1 245 1 196 1 295 1 296 1 374 1 106 1 328 1 27 1 109 1 377 1 90 1 52 1 278 1 
372 1 
0 1 1 2 135 1 136 1 234 1 340 2 59 5 144 2 341 1 342 2 19 2 345 1 246 1 199 1 201 1 299 1 105 2 108 1 109 1 354 1 110 1 355 1 256 1 361 1 260 1 263 1 212 2 310 1 35 1 213 4 39 2 217 2 216 1 167 1 317 5 268 1 218 1 119 2 124 2 271 6 172 1 370 1 174 1 48 2 128 1 324 1 83 2 325 3 84 1 230 2 182 1 131 1 231 2 52 2 380 1 
0 1 135 1 260 1 234 1 213 2 39 1 59 3 341 1 317 3 218 1 103 1 370 1 271 2 199 1 128 1 84 1 325 1 108 1 354 1 110 1 131 1 380 1 
0 1 135 1 260 1 234 1 263 1 213 3 59 3 341 1 317 3 218 1 103 1 271 1 370 1 199 1 128 1 83 1 84 1 325 1 108 1 230 1 354 1 110 1 131 1 380 1 
0 1 135 1 260 1 234 1 263 1 212 1 213 3 39 1 59 3 341 1 317 3 218 1 103 1 370 1 271 2 199 1 128 1 83 1 325 1 84 1 108 1 230 1 354 1 110 1 131 1 380 1 
0 1 1 2 135 1 234 1 59 5 341 1 19 2 103 1 199 1 66 1 299 1 108 1 110 1 354 1 355 1 163 1 260 1 263 5 212 4 310 1 311 1 213 6 39 4 216 1 217 2 317 5 218 1 119 2 124 1 370 1 271 7 172 1 174 1 48 1 128 1 83 4 325 3 84 1 326 1 230 5 131 1 231 2 380 1 334 1 
0 1 1 2 135 1 234 1 59 4 341 1 342 2 19 2 199 1 299 1 108 1 110 1 354 1 355 1 260 1 263 1 310 1 212 2 213 4 39 2 216 1 217 2 317 4 218 1 119 2 124 1 370 1 172 1 271 4 174 1 48 1 128 1 83 2 324 1 84 1 325 2 230 2 131 1 231 2 380 1 
0 1 1 2 135 1 163 1 260 1 234 1 263 1 212 2 310 1 213 4 39 2 217 2 216 1 59 4 341 1 317 4 218 1 119 2 19 2 124 1 271 4 370 1 172 1 174 1 199 1 48 1 66 1 128 1 83 2 299 1 325 2 84 1 326 1 108 1 230 1 354 1 110 1 131 1 355 1 231 2 380 1 
0 1 1 2 135 1 163 1 260 1 234 1 263 1 212 2 310 1 213 4 39 2 217 2 216 1 59 4 341 1 317 4 218 1 119 2 19 2 124 1 271 4 370 1 172 1 174 1 199 1 48 1 66 1 128 1 83 2 299 1 325 2 84 1 326 1 108 1 230 1 354 1 110 1 131 1 355 1 231 2 380 1 
0 1 1 2 91 1 135 1 260 1 234 1 263 1 212 2 310 1 213 4 39 2 216 1 59 4 240 1 341 1 317 4 218 1 342 2 19 2 124 1 271 4 370 1 172 1 174 1 199 1 48 1 128 1 83 2 104 2 325 2 84 1 326 1 108 1 230 1 86 2 354 1 110 1 131 1 355 1 379 1 380 1 
0 1 1 2 135 1 163 1 260 1 234 1 263 1 310 1 212 3 213 5 39 3 217 2 216 1 59 4 341 1 317 4 218 1 119 2 19 2 124 1 172 1 370 1 271 5 174 1 199 1 48 1 66 1 128 1 83 3 299 1 325 2 84 1 326 1 108 1 230 1 354 1 110 1 355 1 131 1 231 2 380 1 334 1 
0 1 1 2 135 1 163 1 260 1 234 1 263 1 310 1 212 3 213 5 39 3 217 2 216 1 59 4 341 1 317 4 218 1 119 2 19 2 124 1 172 1 370 1 271 5 174 1 199 1 48 1 66 1 128 1 83 3 299 1 325 2 84 1 326 1 108 1 230 1 354 1 110 1 355 1 131 1 231 2 380 1 334 1 
0 1 1 2 91 1 135 1 234 1 59 4 341 1 342 2 19 2 199 1 104 2 108 1 110 1 354 1 355 1 260 1 263 1 310 1 212 2 213 4 39 2 216 1 317 4 218 1 124 1 370 1 172 1 271 4 174 1 48 1 128 1 83 2 324 1 84 1 325 2 86 2 230 1 131 1 380 1 
188 1 93 2 56 1 238 3 98 1 242 1 99 1 117 1 269 1 249 1 44 1 221 1 80 1 45 1 22 1 375 1 298 1 226 1 107 2 252 3 254 2 28 2 255 6 184 1 277 1 360 1 
207 1 32 1 305 2 164 3 93 1 188 4 166 1 238 8 191 1 242 2 99 1 117 2 366 1 168 1 290 2 269 2 169 1 102 1 249 2 44 2 80 11 45 2 22 11 69 1 226 1 107 4 71 1 252 6 28 2 254 1 255 14 133 3 158 1 
207 1 53 1 113 1 93 1 188 1 114 1 337 1 35 1 74 1 238 1 340 1 191 1 144 1 266 1 242 1 193 1 117 1 118 1 20 1 321 1 249 1 44 1 45 1 199 1 201 1 82 1 226 1 105 1 107 2 252 1 108 2 182 1 109 1 131 2 255 2 52 1 359 1 158 1 
53 1 93 2 188 7 337 2 12 1 56 1 238 10 340 3 98 1 191 1 144 3 242 3 193 2 99 3 290 2 291 2 20 2 249 3 199 1 201 2 22 7 152 1 298 1 153 2 105 1 107 6 252 10 108 3 109 2 254 4 28 8 255 20 158 1 207 1 32 4 305 2 166 2 35 2 74 1 266 1 117 3 368 1 269 3 219 2 170 1 221 1 44 3 321 2 80 7 45 3 82 1 226 3 182 2 131 3 378 2 183 2 184 1 52 3 277 1 
161 1 207 1 53 1 35 2 12 1 74 1 214 1 238 1 239 1 215 1 340 7 144 8 192 1 266 1 242 2 117 2 268 1 246 1 249 2 44 2 199 1 45 2 201 3 251 1 226 2 105 2 154 1 107 4 252 1 108 1 109 2 182 2 131 1 206 1 255 2 52 8 303 2 360 1 158 1 
282 1 305 1 188 1 34 1 166 1 74 1 238 1 191 1 266 1 242 1 99 1 117 1 290 1 269 1 347 1 249 1 44 1 80 1 45 1 199 1 22 1 226 1 107 2 252 2 108 1 28 1 254 1 131 1 255 3 
269 1 32 1 44 1 249 1 305 1 80 1 188 1 45 1 22 1 238 2 226 1 107 2 242 1 117 1 194 1 28 1 255 2 360 1 
44 1 249 1 80 1 188 1 45 1 166 1 22 1 226 1 107 2 242 1 252 2 99 1 117 1 253 1 28 1 254 1 255 2 360 1 
32 1 305 1 188 2 166 1 238 2 242 1 99 1 117 1 269 1 290 1 249 1 44 1 80 2 45 1 22 2 226 1 107 2 252 2 28 2 254 1 255 4 360 1 
269 1 32 1 44 1 249 1 305 1 80 1 188 1 45 1 22 1 251 1 238 2 226 1 107 2 242 1 117 1 194 1 28 1 255 2 
44 1 249 1 80 1 188 1 45 1 166 1 22 1 251 1 226 1 107 2 242 1 252 2 99 1 117 1 253 1 28 1 254 1 255 2 
32 1 305 1 188 2 166 1 238 2 242 1 99 1 117 1 269 1 290 1 249 1 44 1 80 2 45 1 251 1 22 2 226 1 107 2 252 2 28 2 254 1 255 4 
32 1 305 1 188 2 166 1 238 2 242 1 99 1 117 1 269 1 290 1 249 1 44 1 80 2 45 1 22 2 226 1 107 2 252 2 28 2 254 1 255 4 
207 1 93 1 337 1 35 1 238 1 340 1 144 1 242 1 193 1 117 1 291 1 20 1 321 1 44 1 249 1 45 1 201 1 226 1 105 1 107 2 252 1 108 1 182 1 109 1 131 1 255 2 52 1 158 1 
159 1 207 1 93 1 337 1 35 1 238 1 340 1 144 1 242 1 117 1 270 1 20 1 44 1 249 1 45 1 201 1 226 1 105 1 107 2 327 1 252 1 108 1 182 1 109 1 131 1 255 2 52 1 158 1 
32 1 305 1 188 2 166 1 238 2 191 1 242 1 99 1 117 1 269 1 290 1 249 1 44 1 80 2 45 1 22 2 226 1 107 2 252 2 28 2 254 1 255 4 
161 1 32 1 305 1 188 2 166 1 337 1 35 1 238 2 340 1 144 1 242 1 193 1 99 1 117 1 269 1 290 1 291 1 20 1 321 1 44 1 249 1 80 2 45 1 22 2 201 1 226 1 107 2 252 2 108 1 109 1 182 1 254 1 28 2 131 1 255 4 183 1 52 1 
32 1 282 1 305 1 188 1 166 1 74 1 238 2 191 1 266 1 242 1 99 1 117 1 290 1 269 1 347 1 249 1 44 1 80 1 45 1 199 1 349 1 22 1 226 1 107 2 252 1 108 1 28 1 131 1 255 3 
186 1 32 3 92 2 305 3 164 2 189 1 5 1 166 3 313 1 238 9 339 1 41 2 242 2 287 1 99 3 117 2 168 1 290 3 269 3 249 2 45 2 225 1 107 4 71 1 252 10 87 1 254 3 28 6 255 19 133 1 
160 1 32 2 186 1 208 2 92 1 305 3 164 2 3 1 189 1 166 2 313 1 238 14 339 1 41 4 242 3 99 2 117 3 267 1 168 2 290 3 269 3 249 3 45 3 68 1 225 2 107 6 252 12 87 2 157 1 132 1 28 4 254 2 255 26 133 2 
160 1 186 1 32 4 208 1 92 1 305 4 3 1 164 4 189 1 5 1 166 4 56 1 313 1 238 20 339 1 41 4 98 1 265 1 242 3 99 5 117 3 267 1 168 3 290 4 269 5 221 1 249 3 45 3 68 1 225 1 298 1 107 6 71 1 252 21 87 2 157 1 132 1 254 4 28 8 255 41 133 3 184 1 277 1 
160 1 186 1 32 3 208 2 92 1 305 4 3 1 164 4 189 1 5 1 166 3 56 1 313 1 238 20 339 1 41 4 98 1 265 1 242 4 99 4 117 4 267 1 168 3 290 4 269 5 221 1 249 4 45 4 68 1 225 1 298 1 107 8 71 1 252 18 87 2 157 1 132 1 254 4 28 7 255 38 133 3 184 1 277 1 
160 1 186 1 32 7 208 1 92 1 305 7 3 1 164 4 189 1 166 7 56 1 313 1 238 27 339 1 41 4 98 1 242 2 99 8 117 2 267 1 168 2 290 7 269 8 102 2 221 1 249 2 45 2 68 1 225 1 298 1 107 4 71 2 252 25 87 1 157 1 132 1 254 7 28 14 255 52 133 4 184 1 277 1 
38 1 300 1 33 1 276 1 261 1 235 1 79 1 115 1 177 1 338 1 
181 1 204 1 
300 1 227 1 33 1 73 1 276 1 261 1 65 1 235 1 79 1 
281 1 258 1 
49 1 302 1 101 1 
346 1 134 2 294 1 33 1 309 1 261 1 235 1 115 1 177 1 38 1 300 1 59 1 230 1 276 1 205 1 79 1 317 1 333 1 
346 1 134 2 294 1 33 1 309 1 261 1 235 1 115 1 177 1 38 1 300 1 59 1 230 1 276 1 205 1 79 1 317 1 333 1 
346 1 134 2 294 1 33 1 309 1 261 1 235 1 115 1 177 1 38 1 300 1 59 1 230 1 276 1 205 1 79 1 317 1 333 1 
49 1 281 1 258 1 
49 1 281 1 258 1 
302 1 101 1 
49 1 302 1 101 1 
178 1 165 1 
134 1 232 1 33 1 93 1 54 1 165 1 261 1 235 1 362 1 74 2 59 1 266 2 79 1 317 1 294 1 197 1 199 2 200 1 25 1 178 1 300 1 108 2 181 1 276 1 204 1 131 2 333 1 
207 1 35 1 238 1 141 1 58 1 340 2 191 1 144 2 192 1 242 1 117 1 44 1 249 1 45 1 199 2 323 1 201 1 226 1 154 1 107 2 252 1 228 1 51 1 108 2 109 1 182 1 131 2 255 2 52 2 303 2 158 1 
161 1 245 1 308 1 35 1 236 1 139 2 12 1 75 1 340 2 106 1 155 1 275 1 144 2 77 1 88 1 109 1 377 1 288 1 52 2 
245 1 2 1 308 1 236 1 35 1 139 2 12 1 75 1 340 1 106 1 275 1 144 1 77 1 109 1 377 1 288 1 52 1 
246 1 209 1 35 1 201 1 11 1 105 1 340 1 106 1 144 1 88 1 109 1 182 1 268 1 52 1 
245 1 308 1 35 1 236 1 139 2 12 1 75 1 340 1 106 1 155 1 275 1 144 1 77 1 88 1 109 1 377 1 288 1 52 1 
15 1 
121 1 116 1 124 1 230 1 48 1 263 1 375 1 
124 1 271 1 172 1 263 1 48 1 310 1 299 1 59 1 325 1 216 1 217 1 230 2 317 1 355 1 231 1 342 1 119 1 
219 1 162 1 172 1 210 1 175 1 48 1 337 1 35 2 201 2 310 1 105 1 340 1 216 1 144 1 109 1 182 1 145 1 355 1 52 1 120 1 
160 1 305 2 136 1 164 1 3 1 166 2 263 2 310 2 36 1 97 5 59 1 216 2 60 5 99 2 317 1 267 1 18 2 342 6 168 1 119 3 290 2 269 2 345 1 124 5 271 1 172 2 48 8 373 1 68 1 325 1 230 5 132 1 355 2 358 1 133 1 
163 1 94 1 310 1 36 1 74 1 95 1 98 1 216 1 59 1 266 1 99 1 317 1 218 1 18 2 269 2 123 1 124 2 172 1 347 1 149 1 199 1 48 2 298 1 352 1 108 1 131 1 355 1 184 1 
121 1 116 1 124 1 216 1 172 1 230 1 48 1 263 1 355 1 310 1 
290 2 269 2 219 1 124 5 305 2 166 2 48 5 36 1 97 5 60 5 230 5 99 2 18 2 342 10 119 5 
59 1 325 1 271 1 230 1 263 1 317 1 
361 1 136 2 35 1 310 2 283 1 40 2 340 4 216 2 59 3 144 4 167 1 289 1 317 3 268 1 345 2 246 1 124 2 172 1 271 4 47 1 48 2 201 1 273 1 105 2 325 2 109 1 182 1 355 2 52 4 
93 1 337 1 35 1 74 2 340 1 144 1 242 1 266 2 42 1 193 1 117 1 291 1 20 1 249 1 347 2 321 1 44 1 149 1 199 2 45 1 201 1 226 1 105 1 107 2 252 1 108 3 109 1 182 1 131 3 255 1 52 1 158 1 
345 1 124 2 221 1 172 1 136 1 48 1 263 2 310 1 97 2 216 1 60 2 230 4 355 1 342 4 119 2 
367 1 235 1 79 1 
165 1 8 1 235 1 79 1 177 1 
367 1 235 1 79 1 
367 1 235 1 79 1 
6 1 235 1 79 1 
6 1 235 1 79 1 
6 1 235 1 79 1 
235 1 79 1 
300 1 276 1 
269 1 32 1 208 1 221 1 249 2 45 2 56 1 298 1 238 4 107 4 98 1 242 2 252 4 99 1 117 2 28 3 254 2 255 8 184 1 277 1 
238 3 269 1 98 1 221 1 252 3 99 1 28 2 254 2 255 6 184 1 298 1 277 1 56 1 375 1 
290 1 269 1 32 1 249 1 305 1 45 1 166 1 238 2 142 1 107 2 242 1 252 2 99 1 117 1 254 1 28 2 255 4 
290 1 269 1 32 1 305 1 164 2 166 1 238 3 71 1 252 4 99 1 254 1 28 2 255 7 133 1 168 1 
32 4 208 2 305 2 164 2 166 2 56 1 238 11 98 2 242 2 99 3 117 2 366 1 269 3 290 2 102 1 221 1 249 2 45 2 297 1 298 2 71 1 107 4 252 12 28 9 254 5 133 2 255 23 184 1 277 1 
252 1 164 1 255 1 
238 1 255 1 133 1 
290 1 269 1 219 1 32 1 249 1 305 1 45 1 166 1 238 3 107 2 142 1 242 1 252 3 99 1 117 1 28 3 254 2 255 6 
160 1 32 1 186 1 305 2 164 1 3 1 166 2 238 6 242 1 99 2 117 1 267 1 168 1 290 2 269 2 249 1 45 1 68 1 107 2 252 6 254 1 28 2 132 1 133 1 255 12 
269 1 32 1 298 1 238 3 98 1 252 3 99 1 254 1 28 2 255 6 184 1 
32 1 208 1 249 1 45 1 297 1 298 1 56 1 238 1 98 1 107 2 242 1 252 2 117 1 28 2 254 1 255 3 277 1 
269 2 186 1 32 2 249 1 45 1 298 2 238 5 95 1 107 2 98 2 242 1 252 5 99 2 117 1 254 3 28 5 255 10 184 1 
269 1 186 1 32 1 249 1 305 1 45 1 238 2 107 2 242 1 117 1 28 1 255 2 
290 1 269 1 186 1 32 1 249 1 305 1 45 1 166 1 238 2 107 2 242 1 252 2 99 1 117 1 254 1 28 2 255 4 
186 1 32 1 208 1 249 3 45 3 5 1 297 1 298 1 238 1 107 6 98 1 242 3 252 2 117 3 254 1 28 2 255 3 
186 1 32 5 208 2 305 3 164 4 5 1 336 1 166 3 56 1 238 16 98 3 142 1 242 5 99 5 17 1 117 5 168 1 290 3 269 5 221 1 249 5 45 5 297 1 298 3 107 10 71 1 252 18 28 12 254 7 255 34 133 3 184 2 277 1 111 1 
160 1 186 1 164 1 56 1 238 4 98 1 242 1 99 1 117 1 168 1 269 1 221 1 249 1 45 1 298 1 107 2 252 4 254 2 28 2 133 1 255 8 184 1 277 1 
160 1 186 1 32 1 305 1 164 2 56 1 238 6 98 1 142 1 242 2 99 1 117 2 168 1 290 1 269 2 221 1 249 2 45 2 298 1 107 4 71 1 252 5 254 2 28 3 255 11 133 1 184 1 277 1 
160 1 32 1 186 1 208 1 305 2 164 1 3 1 166 2 56 1 238 9 98 1 142 1 242 3 99 3 117 3 267 1 168 1 290 2 269 3 221 1 249 3 45 3 68 1 298 1 107 6 252 10 132 1 254 3 28 4 133 1 255 19 184 1 277 1 
160 1 32 2 186 1 208 1 305 2 164 1 3 1 166 1 56 1 238 10 98 1 142 1 242 3 99 2 117 3 267 1 168 1 290 2 269 3 221 1 249 3 45 3 68 1 298 1 107 6 252 7 254 3 28 5 132 1 133 1 255 17 184 1 277 1 
160 1 186 1 164 1 56 1 238 4 98 1 242 1 99 1 117 1 168 1 269 1 221 1 249 1 45 1 298 1 107 2 252 4 254 2 28 2 133 1 255 8 184 1 277 1 
160 1 32 1 186 1 305 2 164 1 3 1 166 2 238 6 242 1 99 2 117 1 267 1 168 1 290 2 269 2 249 1 45 1 68 1 107 2 252 6 254 1 28 2 132 1 133 1 255 12 
160 1 32 2 186 1 208 2 305 2 164 1 3 1 166 1 56 1 238 10 98 1 142 1 242 4 99 2 117 4 267 1 168 1 290 2 269 3 221 1 249 4 45 4 68 1 298 1 107 8 252 8 132 1 254 3 28 5 255 18 133 1 184 1 277 1 
160 1 32 3 186 1 208 2 305 3 164 1 3 1 5 1 166 2 238 9 242 4 99 2 117 4 267 1 168 1 290 3 269 3 249 4 45 4 68 1 107 8 252 7 132 1 254 3 28 6 255 16 133 1 
269 1 32 3 56 1 298 3 238 3 98 3 252 4 99 1 254 3 28 6 255 7 184 1 277 2 
160 1 32 1 186 1 208 2 305 2 164 1 3 1 5 1 166 1 56 1 238 10 98 1 242 4 99 2 117 4 267 1 168 1 290 2 269 3 221 1 249 4 45 4 68 1 298 1 107 8 252 8 132 1 254 3 28 4 255 18 133 1 184 1 277 1 
264 1 93 1 108 1 199 1 150 1 354 1 131 1 
233 1 248 1 198 1 93 1 199 1 150 1 138 1 151 1 264 1 108 1 354 1 131 1 
246 1 340 1 105 1 144 1 109 1 182 1 35 1 201 1 268 1 52 1 375 1 
53 1 20 1 321 1 93 1 199 1 337 1 201 1 35 1 74 1 105 1 340 1 144 1 266 1 108 2 182 1 109 1 131 2 52 1 
53 1 135 1 93 1 337 2 35 1 74 2 40 1 340 1 144 1 266 1 218 1 20 1 321 1 370 1 322 1 199 2 201 3 156 1 108 2 109 1 182 2 131 2 52 1 
159 1 304 1 53 1 135 1 93 1 337 2 35 1 74 2 40 1 340 2 144 2 266 1 218 1 20 1 370 1 322 1 199 2 201 3 156 1 108 2 109 1 182 2 131 2 52 2 
304 1 162 1 322 1 271 1 250 1 263 1 337 1 35 1 201 4 237 1 40 1 105 1 340 3 59 2 156 1 144 3 230 1 182 1 109 1 317 2 52 3 380 1 63 1 
304 1 162 1 322 1 271 1 173 1 263 1 337 1 35 1 201 4 237 1 40 1 105 1 340 3 59 2 156 1 144 3 230 1 182 1 109 1 317 2 52 3 380 1 
340 1 215 1 144 1 109 1 35 1 52 1 
161 1 43 1 4 1 46 1 337 1 201 3 35 3 12 1 214 1 239 1 215 1 105 2 340 6 144 7 192 1 182 2 109 2 206 1 303 1 52 7 120 1 
53 1 188 1 93 2 337 1 56 1 238 3 340 1 191 1 98 1 144 1 242 2 193 1 99 1 291 1 20 1 249 2 199 1 201 1 22 1 298 1 107 4 252 3 108 2 109 1 254 2 28 2 255 6 161 1 35 1 74 1 266 1 117 2 269 1 321 1 44 2 221 1 80 1 45 2 226 2 51 1 182 1 378 1 131 2 183 1 52 1 184 1 277 1 
162 1 232 1 263 1 310 2 237 1 116 1 340 1 216 2 59 3 144 1 16 1 78 1 317 3 121 1 124 1 172 2 271 2 173 1 48 1 47 1 201 2 105 1 325 1 230 1 89 1 355 2 52 1 380 1 
161 1 337 1 201 2 35 2 237 1 215 1 340 2 144 2 182 1 109 1 145 1 52 2 120 1 
161 1 304 1 246 1 35 1 201 1 105 1 340 4 144 4 85 1 182 1 109 1 268 1 52 4 
4 1 46 1 337 1 201 1 35 2 40 1 340 2 144 2 353 1 182 1 109 1 329 1 368 1 52 2 
75 1 340 1 105 1 144 1 308 1 109 1 35 1 288 1 139 1 52 1 
161 1 340 2 144 2 192 1 228 1 109 1 182 1 35 1 201 1 12 1 52 2 
161 1 246 1 201 3 35 2 239 1 40 1 105 1 340 4 144 5 192 1 85 1 182 2 109 2 268 1 206 1 52 5 
161 1 246 1 187 1 201 3 35 2 40 1 105 1 340 4 144 5 192 1 85 1 182 2 109 2 268 1 206 1 52 5 
159 1 53 1 20 1 93 1 199 1 337 1 201 1 35 1 74 1 105 1 340 1 144 1 266 1 108 2 182 1 109 1 131 2 52 1 
43 1 4 1 46 1 337 1 201 1 35 2 40 1 340 1 144 1 182 1 109 1 52 1 120 1 
292 1 76 1 93 1 137 1 67 1 
292 2 112 1 135 1 232 1 370 1 260 1 93 1 137 2 263 1 67 1 312 1 76 2 180 1 59 2 230 1 317 2 218 1 332 1 380 1 
76 1 141 1 58 1 108 1 199 1 137 1 323 1 131 1 67 1 
112 1 67 1 312 1 
319 1 285 1 7 1 375 1 
319 1 285 1 7 1 296 1 328 1 90 1 195 1 
295 1 278 1 195 1 
319 1 148 1 296 3 7 1 9 1 202 1 70 1 285 1 328 1 130 2 90 1 195 3 
319 1 203 1 285 1 315 1 7 1 296 2 328 1 90 1 195 2 
140 1 245 1 285 1 171 1 308 1 296 1 328 1 9 1 90 1 139 1 195 1 
319 1 285 1 296 1 328 1 9 1 90 1 195 1 
319 2 7 1 296 1 328 1 9 1 90 1 195 1 
319 1 285 1 296 2 328 2 9 1 356 1 274 1 90 2 195 2 62 1 
319 1 171 1 7 1 296 3 9 1 126 1 241 1 285 2 315 2 328 1 330 1 90 1 195 3 
319 1 245 1 308 1 7 1 296 2 9 1 176 1 139 2 75 1 285 1 315 1 328 1 377 1 90 1 195 2 
319 1 171 1 7 1 296 4 9 1 23 1 203 1 241 1 285 2 315 2 328 2 90 2 195 4 
319 1 285 1 7 1 296 1 328 1 9 1 90 1 195 1 
319 2 171 1 348 1 148 1 7 2 296 4 202 1 241 1 285 3 315 2 130 1 328 1 90 1 195 4 
319 1 285 1 315 1 365 1 7 1 296 2 328 1 9 1 100 1 127 1 90 1 195 2 
319 1 148 1 296 3 7 1 9 1 202 2 224 1 285 1 328 1 130 2 90 1 195 3 
318 1 285 2 125 2 222 1 
220 1 296 1 328 1 9 1 90 1 195 1 
319 1 285 1 315 1 7 1 296 2 328 1 9 1 330 1 90 1 195 2 
371 1 
319 1 285 1 7 1 296 1 328 1 9 1 90 1 195 1 
319 1 296 3 7 1 9 1 285 1 315 1 328 1 130 1 330 1 90 1 195 3 
285 1 171 1 241 1 348 1 
319 1 285 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 67 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 67 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 67 111 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 193 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
304 7 324 1 58 1 3 4 82 1 203 1 61 2 112 9 279 1 114 1 258 9 40 1 42 1 157 1 344 1 285 1 149 2 21 2 22 5 225 1 126 1 25 3 351 1 268 1 
304 7 324 1 58 1 3 4 82 1 203 1 61 2 112 9 279 1 114 1 258 9 40 1 42 1 157 1 344 1 285 1 149 2 21 2 22 5 225 1 126 1 25 3 351 1 268 1 
304 6 324 1 3 4 155 1 60 1 203 1 61 2 112 9 279 2 114 1 258 9 40 1 42 2 157 2 344 1 119 1 285 1 149 2 348 1 98 1 21 2 22 5 225 1 126 2 25 3 351 1 189 1 268 1 
304 6 324 1 3 4 155 1 60 1 203 1 61 2 112 9 279 2 114 1 258 9 40 1 42 2 157 2 344 1 119 1 285 1 149 2 348 1 98 1 21 2 22 5 225 1 126 2 25 3 351 1 189 1 268 1 
304 7 324 1 3 5 155 1 60 1 203 1 61 2 112 10 279 2 114 1 258 10 40 1 42 2 157 2 344 1 119 1 285 1 149 2 348 1 98 1 21 2 22 6 225 1 126 2 25 4 351 1 189 1 268 1 
304 4 324 1 3 3 155 1 60 1 203 1 61 1 112 7 279 2 114 1 258 7 42 2 157 2 344 1 119 1 285 1 149 2 348 1 98 1 21 2 22 4 225 1 126 2 25 2 351 1 189 1 268 1 
304 3 324 1 3 2 149 1 21 1 225 1 22 3 203 1 25 1 61 2 279 1 112 4 114 1 258 4 40 1 157 1 268 1 42 1 
324 1 120 1 29 1 149 1 98 1 21 1 60 1 22 1 203 1 126 1 112 2 279 1 114 1 258 2 152 1 157 1 
304 1 324 1 3 1 149 2 21 2 22 2 203 1 126 1 25 1 112 3 351 1 114 1 258 3 
193 1 139 1 237 1 
132 1 78 2 237 1 
45 2 374 2 207 2 249 2 70 1 190 2 224 2 238 1 
191 1 249 3 195 1 106 2 31 1 252 1 8 1 254 1 218 1 88 1 361 1 311 2 204 1 336 1 12 1 313 1 257 1 115 1 66 1 238 1 207 2 92 1 70 1 260 1 290 1 371 1 244 2 224 2 74 1 45 2 374 3 264 2 188 1 128 1 56 2 190 2 215 1 
45 1 374 1 207 1 331 1 249 1 137 1 190 1 342 1 224 1 238 1 
147 1 249 1 163 1 224 1 275 1 374 1 47 1 139 1 331 1 51 1 237 1 301 1 267 1 14 1 
207 1 147 1 249 1 163 1 224 1 275 2 45 1 374 1 139 1 331 1 237 1 301 1 267 2 190 1 14 1 
275 1 17 1 250 1 267 1 118 1 
275 2 139 1 345 1 17 1 237 1 376 1 267 2 118 1 
275 1 267 1 118 1 
207 1 17 1 249 1 137 1 224 1 275 1 45 1 374 1 331 1 267 1 377 1 190 1 342 1 238 1 
237 1 
275 2 139 1 345 1 17 1 359 1 237 1 267 2 118 1 
249 1 133 1 198 1 327 4 107 1 137 1 275 5 139 1 331 1 334 1 237 1 142 1 342 1 118 2 238 1 15 1 343 1 221 2 207 1 345 1 17 2 346 1 181 4 97 1 165 1 224 1 45 1 374 1 263 1 23 2 130 1 377 1 267 5 190 1 102 1 28 2 
249 2 106 1 260 1 371 1 252 1 224 1 74 1 8 1 45 1 374 2 264 1 255 1 88 1 256 1 257 1 128 1 129 1 56 1 215 1 190 1 
193 1 70 1 
207 1 249 2 70 2 33 1 224 2 45 1 374 2 65 1 190 1 
192 1 289 1 129 1 
249 1 106 1 70 1 260 1 371 1 252 1 8 1 74 1 374 1 264 1 88 1 128 1 257 1 56 1 215 1 365 1 
45 3 207 1 374 3 255 1 249 3 70 1 190 3 224 3 
45 1 374 1 331 1 249 1 137 1 190 1 224 1 
45 1 374 1 207 1 331 1 249 1 190 1 65 1 33 1 224 1 
249 4 106 1 252 1 8 1 275 1 254 1 218 1 88 1 255 1 361 1 311 2 331 1 204 1 12 1 256 1 313 1 257 1 115 1 315 1 65 1 14 1 238 1 284 1 207 2 92 1 147 1 70 1 260 1 290 1 371 1 163 1 244 1 224 3 74 1 45 3 374 4 264 1 188 1 128 1 301 1 56 1 267 1 215 1 190 3 
45 1 374 2 47 1 255 1 249 2 70 1 247 1 190 1 224 2 
284 1 207 1 147 1 249 3 163 1 224 3 275 1 45 3 374 3 255 2 331 1 11 1 256 1 237 1 301 1 267 1 65 1 14 1 190 3 
45 2 374 2 207 1 255 1 249 2 289 1 129 1 190 2 65 1 224 2 
249 1 106 1 70 1 260 1 371 1 252 1 8 1 74 1 374 1 264 1 88 1 128 1 257 1 56 1 215 1 
249 1 106 1 70 1 260 1 371 1 349 1 252 1 8 1 74 1 374 1 264 1 128 1 257 1 56 1 214 1 
191 2 192 2 199 1 9 1 34 1 254 1 218 1 361 1 311 2 282 1 115 1 341 1 92 1 289 2 290 2 71 1 244 4 320 1 23 1 46 1 24 1 188 1 129 2 28 1 
45 1 276 1 374 1 331 1 249 1 301 1 190 1 224 1 
207 1 93 1 249 5 70 1 210 1 224 5 45 4 374 5 47 1 255 2 256 1 247 1 190 4 65 1 
276 1 45 2 374 2 331 1 249 2 137 1 190 2 224 2 
335 1 174 1 
335 1 174 1 
64 1 219 1 
64 1 219 1 
64 1 219 1 
148 1 335 1 174 1 
148 1 335 1 174 1 
335 1 121 1 174 1 
335 2 64 1 340 1 123 1 219 1 174 2 
148 1 335 1 174 1 
194 1 335 1 174 1 
194 1 335 1 174 1 
194 1 335 1 174 1 
239 1 103 2 2 2 216 1 162 1 174 2 150 2 275 2 87 1 77 1 297 2 63 1 335 2 50 3 141 1 237 1 267 2 340 1 220 2 
103 1 355 1 357 1 249 2 229 1 216 1 70 1 121 1 224 2 174 1 150 1 275 1 45 2 99 1 374 2 127 1 297 1 151 1 335 1 50 1 171 1 267 1 190 2 220 1 
279 1 157 1 42 1 
279 1 120 1 157 1 
43 1 279 3 120 1 18 1 42 2 291 1 
279 2 120 1 18 1 42 1 200 1 291 1 
279 2 120 1 18 2 42 1 291 1 
132 1 197 1 229 1 198 1 308 1 327 3 273 2 275 5 139 1 140 1 113 1 237 2 118 1 67 1 345 1 17 4 181 2 373 2 97 1 99 1 320 1 263 1 23 1 46 1 127 1 296 2 78 3 245 1 267 5 28 1 102 1 131 1 
0 1 133 1 132 1 197 1 229 2 250 3 198 1 327 3 273 2 275 7 139 1 38 1 113 1 338 3 237 3 118 4 67 1 17 5 345 1 181 2 69 1 373 2 97 1 320 1 263 1 23 1 46 1 78 3 245 1 267 7 28 1 102 1 
275 2 17 1 133 1 308 1 267 2 67 1 131 1 
275 1 111 1 133 1 308 1 267 1 67 1 131 1 
193 1 252 1 110 1 
307 1 252 1 
156 1 
74 1 252 1 
74 1 212 1 138 1 257 1 252 3 110 2 
74 1 257 1 252 1 
252 1 80 1 
191 4 154 1 290 3 71 2 244 7 86 1 262 1 319 1 292 1 175 1 35 2 23 1 142 1 130 1 28 1 341 3 343 1 
191 4 154 1 290 3 71 2 244 7 86 1 262 1 319 1 292 1 175 1 35 2 23 1 142 1 130 1 28 1 341 3 343 1 
191 4 154 1 290 3 71 2 244 7 86 1 262 1 319 1 175 1 292 1 35 2 23 1 295 1 142 1 130 1 28 1 341 3 343 1 
191 16 154 5 135 4 173 1 309 1 86 1 175 1 254 1 35 3 361 1 311 2 312 1 113 3 142 1 339 1 341 10 343 2 366 3 92 1 370 1 290 15 71 5 262 1 244 31 319 2 292 2 320 3 321 1 46 3 23 4 265 1 188 1 130 2 28 4 
191 5 154 1 175 1 254 2 35 2 361 2 311 4 312 1 142 1 341 4 343 1 92 2 290 4 71 3 244 9 262 1 319 1 292 1 23 1 186 1 188 2 130 1 322 1 28 1 
304 1 324 1 134 1 106 1 6 1 230 1 231 1 253 1 203 1 112 2 279 2 89 1 114 1 258 2 206 1 157 1 42 1 120 1 43 1 149 1 371 1 21 1 22 1 264 1 48 1 126 1 128 1 56 1 101 1 354 1 
304 2 134 1 106 1 326 1 6 1 230 1 253 1 203 1 362 1 112 3 279 2 89 1 114 1 258 3 206 1 157 1 42 1 43 1 120 1 222 1 149 1 371 1 21 1 22 1 264 1 48 1 126 1 128 1 56 1 354 1 
304 2 134 1 106 1 326 1 230 1 203 1 362 1 112 2 279 2 89 1 114 1 258 2 206 1 42 1 157 1 120 1 43 1 371 1 22 1 264 1 48 1 126 1 128 1 56 1 354 1 
106 1 252 1 330 1 277 1 112 1 89 2 314 1 258 1 364 1 146 1 260 1 222 1 371 1 149 1 21 1 74 1 264 1 48 2 126 2 128 1 56 1 354 2 323 1 
324 1 134 1 106 1 6 1 230 1 231 1 253 1 362 1 112 1 279 2 89 1 258 1 206 1 157 1 42 1 120 1 43 1 149 1 371 1 21 1 264 1 48 1 126 1 128 1 56 1 354 1 
241 1 
153 3 132 2 249 1 198 1 83 1 327 1 328 1 275 4 37 2 139 1 176 1 331 1 278 3 13 2 237 1 144 1 14 1 316 1 118 5 345 2 147 1 181 1 347 1 368 2 288 1 209 2 163 1 97 1 44 1 224 1 263 1 374 1 47 1 49 1 51 1 55 1 301 1 267 4 302 3 102 1 303 5 226 1 
153 3 132 2 249 1 198 1 83 1 327 1 328 1 275 4 37 2 139 1 176 1 331 1 278 3 13 2 237 1 144 1 14 1 316 1 118 5 345 2 147 1 181 1 347 1 368 2 288 1 209 2 163 1 97 1 44 1 224 1 263 1 374 1 47 1 49 1 51 1 301 1 55 1 267 4 302 3 102 1 303 5 226 1 
153 2 198 1 328 1 275 4 233 2 331 1 278 2 13 2 237 1 14 1 118 4 345 2 163 1 78 2 301 1 302 2 303 4 249 1 83 1 37 2 176 1 139 1 363 1 144 1 91 2 147 1 181 1 97 1 44 1 224 1 374 1 263 1 100 1 47 1 49 1 51 1 267 4 102 1 
153 2 106 2 5 1 198 1 327 2 328 1 232 1 330 1 275 5 331 1 278 2 13 2 237 2 14 1 118 6 345 3 209 2 163 1 74 1 293 1 78 2 245 1 128 1 301 1 302 2 303 4 132 2 249 1 83 1 252 1 310 1 37 2 139 1 176 1 144 1 364 1 316 1 147 1 181 2 368 2 260 2 371 1 97 1 44 1 224 1 100 1 263 1 264 2 374 1 47 1 49 1 51 1 56 2 267 5 102 1 
345 1 147 1 249 1 359 1 83 1 328 1 163 1 224 1 275 3 374 1 47 1 176 1 331 1 49 1 51 1 301 1 302 1 267 3 303 2 14 1 144 1 118 2 
345 1 147 1 249 1 359 1 83 1 328 1 163 1 224 1 275 3 374 1 47 1 139 1 176 1 331 1 49 1 278 1 51 1 237 1 301 1 267 3 303 3 14 1 144 1 118 1 
153 1 249 1 359 1 83 1 328 1 275 3 176 1 139 1 331 1 278 1 237 1 144 1 14 1 118 2 345 1 147 1 163 1 224 1 374 1 47 1 49 1 51 1 301 1 267 3 302 1 303 3 
153 4 198 1 328 1 327 1 275 5 331 1 278 4 333 1 13 2 237 5 14 1 118 7 345 3 347 1 288 1 163 1 209 2 301 1 302 4 303 6 249 1 132 2 83 1 359 1 37 2 176 1 139 5 144 1 316 1 147 1 181 1 368 2 97 1 44 1 224 1 374 1 263 1 47 1 49 1 51 1 55 1 267 5 102 1 226 1 
153 2 198 1 328 1 327 1 275 4 331 1 278 2 13 2 237 2 14 1 118 4 345 2 163 1 209 2 78 2 301 1 302 2 303 4 249 1 132 2 83 1 37 2 176 1 139 1 144 1 316 1 147 1 181 1 368 2 97 1 44 1 224 1 374 1 263 1 100 1 47 1 49 1 51 1 267 4 102 1 
153 2 132 2 249 1 83 1 198 1 327 1 328 1 275 4 37 2 139 1 176 1 331 1 278 2 13 2 237 1 144 1 14 1 118 4 316 1 345 2 147 1 181 1 368 2 288 1 209 2 163 1 97 1 44 1 224 1 374 1 263 1 47 1 49 1 51 1 301 1 55 1 302 2 267 4 102 1 303 4 226 1 
153 2 132 2 249 1 83 1 198 1 327 1 328 1 275 4 37 2 139 1 176 1 331 1 278 2 13 2 237 1 144 1 14 1 118 4 316 1 345 2 147 1 181 1 368 2 288 1 209 2 163 1 97 1 44 1 224 1 374 1 263 1 47 1 49 1 51 1 301 1 55 1 302 2 267 4 102 1 303 4 226 1 
153 2 249 1 83 1 198 1 172 1 84 1 328 1 275 4 233 2 37 2 139 1 176 1 331 1 278 2 363 1 13 2 237 1 144 1 14 1 118 4 91 2 345 2 147 1 181 1 288 1 163 1 97 1 44 1 224 1 374 1 263 1 47 1 49 1 78 2 51 1 301 1 302 2 267 4 102 1 303 4 
191 3 192 1 193 1 175 1 254 1 35 1 218 1 361 1 311 2 282 1 142 1 115 1 341 2 343 1 92 1 70 2 289 1 71 2 290 3 262 1 244 6 23 1 188 1 129 1 130 1 28 1 
192 11 191 8 325 1 154 1 306 1 135 3 173 1 272 1 7 1 254 2 218 1 361 2 311 4 113 2 313 1 115 2 341 2 66 1 366 3 92 2 370 1 369 1 70 1 289 4 71 1 290 6 244 14 320 1 46 2 23 1 188 2 129 11 28 2 
191 1 249 2 106 1 306 1 252 1 8 1 254 1 88 1 218 1 255 1 311 2 361 1 256 1 313 1 257 1 115 1 365 1 66 1 283 1 92 1 70 1 260 1 161 1 289 1 371 1 290 1 244 2 224 1 74 1 45 1 264 1 374 2 188 1 128 1 300 1 56 1 215 1 190 1 
192 7 191 10 154 4 106 3 108 1 202 2 8 2 113 2 12 2 115 3 341 8 66 1 343 1 70 2 289 7 71 4 290 10 73 1 244 20 74 2 23 3 124 2 128 2 130 1 129 7 215 2 28 3 248 1 249 3 306 1 252 2 175 1 35 1 254 3 255 1 218 3 88 2 362 1 361 3 311 6 256 1 313 1 257 2 142 1 92 3 260 1 371 2 372 2 262 1 224 1 45 1 264 3 374 3 320 2 46 2 188 3 187 2 56 3 190 1 
191 1 249 1 195 2 106 8 30 1 252 3 330 1 201 1 254 2 255 1 218 2 362 1 361 2 311 4 313 1 282 1 115 2 66 1 364 1 180 1 92 2 158 1 286 1 260 2 371 2 290 1 244 2 224 1 45 1 74 2 374 1 264 7 188 2 352 1 26 1 128 2 101 1 56 8 190 1 
192 1 191 1 249 1 306 1 254 1 218 1 361 1 311 2 113 1 281 1 115 1 341 1 65 1 207 1 92 1 289 1 71 1 290 2 244 3 224 1 45 1 374 1 320 1 46 1 23 1 188 1 129 1 190 1 28 1 
192 1 191 2 92 1 154 1 289 1 244 2 9 1 254 1 218 1 46 1 311 2 361 1 188 1 282 1 129 1 115 1 341 1 28 1 
192 1 92 1 289 1 71 1 290 2 244 2 254 1 320 1 218 1 23 1 311 2 361 1 188 1 24 1 282 1 129 1 115 1 341 1 
191 2 192 2 154 1 254 1 218 1 361 1 311 2 113 1 282 1 115 1 341 2 92 1 289 2 290 2 71 1 244 4 320 1 46 1 23 1 188 1 129 2 28 1 
192 1 191 2 92 1 154 1 286 1 289 1 244 2 9 1 254 1 218 1 46 1 311 2 361 1 188 1 129 1 115 1 341 1 28 1 
192 1 92 1 286 1 289 1 71 1 290 2 244 2 254 1 320 1 218 1 23 1 311 2 361 1 188 1 24 1 129 1 115 1 341 1 
191 2 192 2 154 1 254 1 218 1 361 1 311 2 113 1 115 1 341 2 92 1 286 1 289 2 290 2 71 1 244 4 320 1 46 1 23 1 188 1 129 2 28 1 
191 2 192 2 154 1 254 1 218 1 361 1 311 2 113 1 115 1 341 2 92 1 289 2 290 2 71 1 244 4 320 1 46 1 23 1 188 1 129 2 28 1 
191 1 249 1 106 1 252 1 8 1 254 1 88 1 218 1 311 2 361 1 12 1 313 1 257 1 115 1 66 1 92 1 70 1 260 1 371 1 290 1 244 2 74 1 264 1 374 1 188 1 128 1 56 1 215 1 
191 1 271 1 249 1 106 1 252 1 8 1 254 1 218 1 311 2 361 1 313 1 257 1 115 1 66 1 92 1 70 1 260 1 371 1 290 1 349 1 244 2 74 1 264 1 374 1 188 1 128 1 56 1 214 1 
191 2 192 2 154 1 306 1 254 1 218 1 361 1 311 2 113 1 115 1 341 2 92 1 289 2 290 2 71 1 244 4 320 1 46 1 23 1 188 1 129 2 28 1 
192 2 191 2 154 1 249 1 106 1 252 1 8 1 202 1 254 1 88 1 218 1 311 2 361 1 113 1 12 1 257 1 115 1 341 2 92 1 289 2 71 1 290 2 371 1 244 4 74 1 320 1 264 1 374 1 23 1 46 1 188 1 128 1 129 2 56 1 101 1 28 1 215 1 
191 2 192 1 154 1 249 1 306 1 254 1 218 1 361 1 311 2 113 1 115 1 341 1 65 1 207 1 92 1 289 1 290 1 244 3 224 1 45 1 320 1 374 1 23 1 46 1 188 1 170 1 129 1 190 1 28 1 
191 20 154 4 105 1 109 1 113 4 341 8 343 1 160 1 290 21 72 1 71 4 122 1 244 41 75 1 166 1 23 5 168 1 130 1 28 5 135 4 173 1 136 1 175 1 254 3 35 1 311 6 361 3 312 1 177 1 178 2 90 1 142 1 41 1 366 3 145 4 92 3 370 3 96 1 262 1 320 4 46 4 188 3 322 1 
191 20 154 3 105 1 135 4 173 1 136 1 109 1 175 1 35 1 254 4 177 1 312 2 361 4 311 8 113 4 178 2 142 1 90 1 41 1 341 7 343 1 366 3 145 4 92 4 160 1 370 3 122 1 96 1 71 4 72 1 290 18 262 1 244 38 75 1 166 1 320 3 46 4 23 4 168 1 188 4 130 1 322 1 28 5 
191 27 154 7 105 1 135 4 173 2 272 2 136 1 175 1 35 1 254 2 312 1 361 2 311 4 113 7 178 1 142 1 90 1 41 1 341 14 343 1 366 4 145 4 92 2 160 1 370 2 122 1 96 1 71 7 72 1 290 25 262 1 244 52 75 1 166 1 320 7 46 7 23 8 168 1 188 2 130 1 322 1 28 8 
191 9 154 3 105 2 135 2 173 1 136 1 109 1 254 2 361 2 311 4 113 3 178 1 41 1 341 6 366 1 145 2 92 2 370 1 122 1 71 3 72 1 290 10 244 19 320 3 46 3 23 3 188 2 350 1 322 1 28 3 
191 14 154 2 105 1 135 2 136 1 254 3 312 2 361 3 311 6 113 3 178 2 90 1 41 1 341 4 366 2 145 4 92 3 160 1 370 2 122 1 96 1 71 2 290 12 72 2 244 26 75 1 166 1 320 2 23 2 46 3 168 1 188 3 322 1 28 3 
294 1 239 1 103 1 297 1 63 1 335 1 340 1 150 1 220 1 174 1 
121 1 171 1 
103 1 234 1 297 1 79 1 335 1 95 1 150 1 220 1 174 1 
239 1 103 1 2 1 216 1 162 1 174 1 150 1 275 1 77 1 297 1 63 1 335 1 50 2 141 1 237 1 267 1 340 1 220 1 
239 1 103 1 2 1 216 1 162 1 174 1 150 1 275 1 77 1 297 1 63 1 335 1 50 2 141 1 237 1 267 1 340 1 220 1 
239 1 103 1 2 1 216 1 162 1 174 1 150 1 275 1 77 1 297 1 63 1 335 1 50 2 141 1 237 1 267 1 340 1 220 1 
148 1 211 1 123 1 
148 1 211 1 123 1 
194 1 143 1 
194 1 143 1 123 1 
355 1 151 1 
103 1 2 1 357 1 355 1 249 2 4 1 229 1 174 1 275 1 335 1 220 1 17 1 70 1 121 1 150 1 224 2 45 2 374 2 99 1 77 1 127 1 297 1 50 1 151 1 171 1 267 1 190 2 
148 1 211 1 
194 1 143 1 123 1 
191 1 249 2 195 2 106 2 306 1 30 1 252 1 254 1 218 1 235 1 311 2 361 1 313 1 337 1 115 1 66 1 92 1 367 1 371 1 290 1 242 1 244 2 224 2 74 1 374 2 264 2 167 1 188 1 26 1 128 1 56 2 
134 1 43 1 120 1 106 2 159 1 371 1 253 1 264 2 362 1 10 1 279 2 27 1 128 1 56 2 101 1 206 1 157 1 42 1 354 1 
134 1 43 1 120 1 106 1 159 1 371 1 253 1 264 1 362 1 279 2 53 1 128 1 56 1 206 1 157 1 42 1 354 1 
1 1 106 1 260 1 371 1 252 1 330 1 74 1 264 1 277 1 27 1 128 1 56 1 354 1 364 1 
134 1 43 1 120 1 106 1 159 1 371 1 253 1 264 1 362 1 10 1 279 2 27 1 128 1 56 1 206 1 157 1 42 1 354 1 
183 1 
249 3 106 1 252 1 8 1 254 1 88 1 218 1 361 1 311 2 204 1 12 1 313 1 257 1 115 1 238 1 207 2 92 1 70 1 260 1 290 1 371 1 244 1 224 2 45 2 74 1 264 1 374 3 188 1 128 1 56 1 190 2 215 1 
132 2 181 2 198 1 327 1 373 2 97 1 232 1 273 2 35 1 263 1 139 2 78 4 245 1 237 4 102 1 
193 1 
132 1 198 1 327 1 275 1 139 1 237 2 316 1 118 1 345 1 181 1 368 1 209 1 97 1 263 1 78 1 267 1 102 1 
270 1 104 2 106 3 198 4 327 9 232 1 329 2 274 2 273 6 110 2 275 5 62 2 113 2 237 8 14 2 118 5 345 3 346 2 20 1 74 3 212 1 124 2 23 2 78 12 245 2 128 3 28 2 80 2 132 6 81 2 307 3 251 1 32 1 252 10 139 2 257 3 179 1 221 2 94 1 181 8 260 1 261 1 371 4 97 4 373 6 263 4 264 3 320 2 46 2 54 2 101 1 56 3 267 5 102 4 
132 3 198 2 135 1 327 8 232 1 273 5 275 1 139 2 113 2 236 1 90 1 237 5 118 1 221 2 366 1 345 1 346 1 160 1 181 5 370 1 373 5 97 2 75 1 263 2 166 1 320 2 46 2 23 2 168 1 78 6 245 1 267 1 353 1 102 2 28 2 
249 1 198 1 327 2 137 1 275 1 331 1 142 1 342 1 343 1 15 1 238 1 221 2 207 1 346 1 181 2 97 1 224 1 45 1 374 1 263 1 23 1 130 1 267 1 377 1 102 1 28 2 190 1 226 1 
263 1 198 1 97 1 102 1 
275 1 139 1 345 1 237 1 267 1 118 1 
133 1 106 2 5 1 198 1 327 1 252 1 232 1 330 1 275 2 118 2 364 1 345 1 94 1 181 1 260 2 371 1 97 1 74 1 293 1 263 1 264 2 245 1 128 1 56 2 267 2 102 1 
169 1 150 1 220 1 
169 1 150 1 220 1 
355 1 63 1 228 1 150 1 220 1 
169 1 150 1 220 1 
246 1 150 1 220 1 
246 1 150 1 220 1 
246 1 150 1 220 1 
150 1 220 1 
335 1 174 1 
191 4 135 1 175 1 35 1 254 1 361 1 311 2 142 1 341 2 343 1 366 1 92 1 370 1 290 4 71 2 244 8 262 1 75 1 23 1 188 1 130 1 322 1 28 1 
191 6 154 1 135 2 173 1 175 1 35 1 254 2 361 2 311 4 113 1 39 1 142 1 341 3 343 1 366 1 92 2 370 1 71 2 290 5 262 1 244 11 75 1 23 1 46 1 188 2 130 1 322 1 28 2 
191 9 154 1 135 1 175 1 35 1 254 3 361 3 311 6 312 1 113 2 39 1 142 1 90 1 341 4 343 1 366 1 92 3 160 1 370 1 290 10 71 3 262 1 244 19 75 1 166 1 320 2 46 2 23 3 168 1 188 3 130 1 322 1 28 3 
191 10 154 2 135 1 175 1 35 1 254 3 312 1 361 3 311 6 113 2 39 1 142 1 90 1 341 5 343 1 366 1 92 3 160 1 370 1 290 7 71 3 262 1 244 17 75 1 166 1 320 1 46 2 23 2 168 1 188 3 130 1 322 1 28 3 
191 4 135 1 175 1 35 1 254 1 361 1 311 2 142 1 341 2 343 1 366 1 92 1 370 1 290 4 71 2 244 8 262 1 75 1 23 1 188 1 130 1 322 1 28 1 
191 6 154 1 135 1 254 1 361 1 311 2 113 2 90 1 341 2 366 1 92 1 160 1 370 1 290 6 71 1 244 12 75 1 166 1 320 2 46 2 23 2 168 1 188 1 322 1 28 2 
191 10 154 2 135 1 175 1 35 1 254 4 361 4 311 8 312 2 113 2 39 1 142 1 90 1 341 5 343 1 366 1 92 4 160 1 370 1 290 8 71 3 262 1 244 18 75 1 166 1 320 1 46 2 23 2 168 1 188 4 130 1 322 1 28 3 
191 9 154 3 135 1 109 1 254 4 361 4 311 8 312 2 113 3 90 1 341 6 366 1 92 4 160 1 370 1 290 7 71 3 244 16 75 1 166 1 320 2 46 3 23 2 168 1 188 4 322 1 28 3 
191 3 154 3 290 4 71 3 244 7 262 1 175 2 23 1 130 3 142 1 341 6 28 1 343 3 
191 10 154 1 135 1 109 1 175 1 35 1 254 4 361 4 311 8 312 2 113 2 142 1 90 1 341 4 343 1 366 1 92 4 160 1 370 1 290 8 71 3 262 1 244 18 75 1 166 1 320 1 46 2 23 2 168 1 188 4 130 1 322 1 28 3 
191 4 92 2 154 1 290 4 71 2 244 8 262 1 175 1 35 1 254 2 23 1 311 4 361 2 312 1 188 2 142 1 130 1 28 1 341 3 343 1 
191 3 193 1 290 3 71 2 262 1 244 6 175 1 35 1 23 1 130 1 142 1 341 2 28 1 343 1 
191 2 92 1 154 1 71 1 290 2 244 4 320 1 254 1 23 1 46 1 311 2 361 1 188 1 113 1 39 1 341 2 28 1 
366 1 191 3 154 1 370 1 135 2 71 1 290 4 173 1 244 7 320 1 23 1 46 1 113 1 28 1 341 2 
191 11 154 4 135 2 173 1 272 1 175 1 35 1 254 2 312 2 311 4 361 2 113 2 142 1 341 9 343 2 366 2 92 2 369 1 290 12 71 5 262 1 244 23 318 1 320 2 46 2 23 3 188 2 130 2 28 3 
135 1 290 1 244 1 
191 1 366 1 244 1 
191 3 92 1 154 1 290 3 71 2 244 6 254 1 320 1 124 1 46 1 23 1 361 1 311 2 188 1 113 1 39 1 28 1 341 3 
191 6 154 1 135 1 254 1 361 1 311 2 113 2 90 1 341 2 366 1 92 1 160 1 370 1 290 6 71 1 244 12 75 1 166 1 320 2 46 2 23 2 168 1 188 1 322 1 28 2 
191 3 154 1 290 3 71 1 244 6 23 1 142 1 130 1 28 1 341 2 343 1 
191 1 92 1 154 1 71 1 290 2 318 1 244 3 262 1 175 1 254 1 312 1 311 2 361 1 188 1 130 1 341 2 343 1 
191 5 92 1 154 2 71 3 290 5 244 10 254 1 23 2 361 1 311 2 188 1 130 2 142 1 322 1 341 5 28 2 15 1 343 2 
191 2 92 1 154 1 244 2 254 1 46 1 311 2 361 1 188 1 322 1 28 1 341 1 
191 2 92 1 154 1 71 1 290 2 244 4 320 1 254 1 23 1 46 1 311 2 361 1 188 1 113 1 322 1 341 2 28 1 
191 1 92 3 154 1 290 2 71 1 318 1 109 1 244 3 254 3 312 1 311 6 361 3 188 3 130 1 322 1 341 2 343 1 
191 16 154 5 135 4 173 1 309 1 109 1 175 1 35 1 254 5 312 2 361 5 311 10 113 3 39 1 142 2 341 12 343 3 366 3 92 5 370 1 290 18 71 7 262 1 318 1 244 34 320 3 265 1 321 1 46 3 23 5 188 5 130 3 322 1 28 5 
374 1 47 1 249 1 240 1 70 1 247 1 224 1 
249 1 240 1 182 1 70 1 223 1 185 1 224 1 374 1 47 1 332 1 213 1 247 1 
74 1 193 1 264 1 106 1 260 1 371 1 128 1 56 1 252 1 330 1 364 1 
249 2 106 1 70 1 260 1 371 1 252 1 224 1 74 1 8 1 45 1 374 2 264 1 255 1 257 1 128 1 56 1 190 1 215 1 
147 1 249 2 81 1 106 1 70 1 371 1 252 3 20 1 224 2 74 2 8 1 45 1 374 2 264 1 255 1 331 1 257 2 128 1 301 1 56 1 190 2 215 1 80 1 
249 2 106 2 81 1 252 3 8 1 255 1 331 1 257 2 117 1 147 1 70 1 371 1 349 1 20 1 224 2 45 1 74 2 264 2 374 2 128 1 56 2 301 1 190 2 80 1 
106 3 81 1 307 1 252 4 110 1 275 2 36 1 139 1 257 1 237 1 14 1 117 1 118 1 260 1 371 1 20 1 74 1 264 3 52 1 128 1 56 3 267 2 80 1 
81 1 106 3 307 1 260 1 371 1 252 4 20 1 110 1 74 1 275 2 264 3 139 1 62 1 257 1 128 1 237 1 56 3 267 2 14 1 117 1 80 1 118 1 
264 1 180 1 106 1 371 1 128 1 56 1 
16 1 180 1 158 1 195 1 106 7 196 1 260 2 30 1 371 3 184 1 252 3 201 1 212 1 74 2 264 6 362 1 352 1 257 1 128 2 101 1 56 7 
192 1 191 3 249 2 306 1 106 1 252 1 175 1 8 1 202 1 35 1 254 2 218 2 255 1 88 1 311 4 361 2 12 1 257 1 142 1 115 2 341 2 343 1 92 2 70 2 289 1 290 3 71 2 371 1 244 6 262 1 224 1 74 1 45 1 374 2 264 1 23 1 167 1 188 2 187 1 128 1 129 1 130 1 101 1 56 1 28 1 190 1 215 1 
106 1 307 1 198 2 327 1 32 1 329 1 252 2 274 1 110 1 275 3 139 1 62 1 237 1 14 1 118 2 179 1 17 1 345 1 94 1 181 1 260 1 97 2 264 1 263 2 54 1 56 1 267 3 102 2 
180 1 106 2 371 2 251 1 252 2 110 1 212 1 74 1 264 2 257 1 128 1 101 1 56 2 
356 1 106 4 260 1 371 1 252 1 330 1 74 1 264 4 128 1 56 4 101 1 117 1 364 1 
106 2 196 1 208 1 371 2 184 1 252 1 73 1 20 1 74 1 264 2 76 1 257 1 128 1 56 2 
264 1 134 1 279 1 120 1 106 1 260 1 371 1 128 1 56 1 157 1 
106 2 30 1 371 1 252 1 74 1 264 2 362 1 337 1 128 1 101 1 56 2 
356 1 106 5 260 1 30 1 371 2 252 3 330 1 20 1 201 1 74 2 264 4 352 1 128 2 56 5 101 1 364 1 
356 1 68 1 106 5 260 1 30 1 371 2 252 3 330 1 20 1 74 2 264 4 352 1 128 2 56 5 101 1 364 1 
249 2 106 1 70 1 260 1 371 1 252 1 349 1 224 1 74 1 8 1 45 1 374 2 264 1 255 1 257 1 128 1 56 1 190 1 
16 1 106 1 196 1 371 2 184 1 252 1 20 1 212 1 74 1 264 1 257 1 128 1 56 1 
266 1 70 1 259 1 360 1 59 1 
284 1 147 1 17 1 227 1 70 1 259 2 163 1 59 1 360 2 275 2 139 1 266 2 331 1 280 1 237 1 301 1 267 2 14 1 57 1 
374 1 249 1 235 1 367 1 259 1 242 1 59 1 360 1 224 1 
227 1 59 1 57 1 
304 1 324 1 285 1 149 1 98 1 21 1 22 1 203 1 112 3 114 1 258 3 
22 1 3 1 25 1 243 1 
22 1 114 1 
22 1 193 1 203 1 114 1 
21 1 22 1 203 1 112 1 114 1 258 1 149 1 
48 1 126 1 112 1 
324 1 149 1 164 1 98 2 21 1 217 1 22 1 203 1 299 1 112 3 114 1 258 3 
304 1 21 1 22 1 203 1 61 1 112 2 114 1 258 2 149 1 
21 1 22 1 324 1 3 1 279 1 112 1 258 1 149 1 157 1 42 1 268 1 
21 1 22 1 324 1 112 1 114 1 258 1 149 1 
21 1 324 1 203 1 112 1 114 2 258 1 149 1 
324 1 149 2 19 1 21 2 22 1 125 1 112 2 375 1 114 1 258 2 
304 2 21 1 22 2 344 1 324 1 203 1 3 1 25 1 112 3 285 1 114 1 258 3 149 1 
304 1 324 1 120 1 43 1 149 1 21 1 22 1 203 1 298 1 279 2 112 2 114 1 258 2 42 1 157 1 
304 2 21 2 22 2 324 1 203 1 3 1 25 1 61 1 112 4 114 1 258 4 149 2 40 1 
21 1 22 1 324 1 203 1 112 1 114 1 258 1 149 1 
304 2 3 1 149 1 243 1 98 1 217 1 21 1 22 3 203 2 299 1 25 1 112 4 114 2 258 4 
269 1 304 1 324 1 82 1 149 1 21 1 22 1 203 1 112 2 114 1 258 2 116 1 
324 1 149 1 98 2 21 1 217 2 22 1 203 1 299 1 205 1 112 3 114 1 258 3 
22 2 305 1 358 2 85 1 
21 1 324 1 112 1 287 1 258 1 149 1 
304 1 21 1 22 1 324 1 203 1 112 2 285 1 114 1 258 2 149 1 
317 1 
21 1 22 1 324 1 203 1 112 1 114 1 258 1 149 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 1 91 1 0 1 360 1 46 1 214 3 29 1 70 1 337 4 101 9 71 2 32 1 282 1 230 1 283 1 201 9 110 5 231 7 179 1 57 1 349 2 222 1 17 1 166 2 
186 1 91 1 0 1 360 1 46 1 214 3 29 1 70 1 337 4 101 9 71 2 32 1 282 1 230 1 283 1 201 9 110 5 231 7 179 1 57 1 349 2 222 1 17 1 166 2 
186 1 0 2 91 1 360 1 46 1 214 3 29 2 70 1 337 4 101 9 71 2 128 1 32 2 200 1 75 1 282 1 230 1 201 9 81 1 110 5 231 6 179 1 57 1 349 2 222 2 376 1 120 1 166 2 
186 1 0 2 91 1 360 1 46 1 214 3 29 2 70 1 337 4 101 9 71 2 128 1 32 2 200 1 75 1 282 1 230 1 201 9 81 1 110 5 231 6 179 1 57 1 349 2 222 2 376 1 120 1 166 2 
186 1 0 2 91 1 360 1 46 1 214 4 29 2 70 1 337 5 101 10 71 2 128 1 32 2 200 1 75 1 282 1 230 1 201 10 81 1 110 6 231 7 179 1 57 1 349 2 222 2 376 1 120 1 166 2 
186 1 0 2 91 1 46 1 214 2 29 2 70 1 337 3 101 7 71 2 128 1 32 2 200 1 75 1 282 1 230 1 201 7 81 1 110 4 231 4 179 1 57 1 349 1 222 2 376 1 120 1 166 2 
201 4 110 3 0 1 91 1 231 3 179 1 360 1 46 1 214 1 349 2 70 1 222 1 337 2 71 1 101 4 32 1 282 1 166 1 
201 2 110 1 81 1 0 1 234 1 46 1 151 1 29 1 70 1 222 1 376 1 71 1 101 2 130 1 282 1 166 1 
201 3 110 2 231 1 46 1 214 1 29 1 70 1 337 1 71 2 101 3 282 1 166 2 230 1 
195 1 60 1 129 1 
60 1 53 2 253 1 
49 1 375 2 299 2 50 2 80 1 140 2 279 2 289 2 
41 1 66 1 299 2 268 2 169 2 359 1 361 1 28 2 153 1 249 2 96 1 97 1 49 1 275 1 50 2 127 1 310 1 154 1 99 1 366 1 279 2 340 2 176 1 315 1 76 1 80 1 7 1 345 1 204 1 289 3 290 1 236 1 237 1 375 2 140 3 263 1 144 1 
375 1 299 1 50 1 292 1 80 1 140 1 285 1 279 1 180 1 289 1 
299 1 284 1 157 1 60 1 335 1 289 1 292 1 140 1 209 1 210 1 195 1 196 1 88 1 64 1 
284 2 299 1 157 1 60 1 289 1 375 1 50 1 292 1 140 1 209 1 210 2 195 1 279 1 196 1 88 1 
284 1 9 1 210 1 191 1 3 1 
284 2 9 1 357 1 210 2 195 1 60 1 3 1 156 1 
284 1 9 1 210 1 
284 1 299 1 80 1 285 1 303 1 3 1 180 1 289 1 375 1 50 1 292 1 140 1 210 1 279 1 
60 1 
284 2 9 1 357 1 210 2 195 1 60 1 3 1 27 1 
33 2 78 1 132 1 284 5 224 1 357 1 245 1 9 2 213 1 60 1 190 1 3 2 162 1 273 1 210 5 278 1 195 1 218 2 341 2 
49 1 129 1 
299 2 266 1 36 1 289 2 375 1 49 2 50 1 140 2 279 1 
95 1 287 1 19 1 
41 1 268 1 254 1 169 1 345 1 359 1 289 1 96 1 290 1 49 1 127 1 140 1 340 1 315 1 76 1 144 1 
41 1 299 1 268 1 345 1 169 1 359 1 325 1 289 2 96 1 290 1 375 1 127 1 140 2 279 1 165 1 340 1 19 1 315 1 144 1 76 1 
299 5 266 1 172 1 325 2 289 5 375 4 49 1 50 1 140 5 279 4 165 1 64 1 220 1 131 1 
375 2 299 2 292 1 22 1 140 2 285 1 279 2 289 2 
49 1 375 3 50 1 299 3 140 3 279 3 325 1 289 3 
375 1 299 1 292 1 140 1 285 1 279 1 289 1 
375 1 299 1 50 1 266 1 292 1 140 1 279 1 36 1 289 1 
41 1 66 1 266 1 299 3 268 1 301 1 169 1 359 1 270 1 361 1 28 1 153 1 249 2 96 1 49 1 275 1 127 1 50 2 99 1 366 1 279 3 196 1 340 1 176 1 315 1 76 1 284 1 7 1 80 1 345 1 157 1 325 1 204 1 289 4 290 1 236 1 375 3 292 1 140 4 209 1 210 1 165 1 88 1 144 1 
49 1 375 1 299 2 140 2 279 1 172 1 325 1 64 1 289 2 
266 1 284 1 299 3 270 1 157 1 60 1 325 2 289 3 375 3 50 1 292 1 140 3 209 1 210 1 279 3 165 1 196 1 175 1 88 1 
266 1 299 2 325 1 287 1 289 2 375 2 50 1 140 2 279 2 19 1 
41 1 268 1 169 1 345 1 359 1 289 1 290 1 96 1 49 1 127 1 140 1 340 1 315 1 76 1 144 1 
41 1 268 1 169 1 359 1 24 1 289 1 290 1 96 1 49 1 262 1 140 1 340 1 315 1 76 1 144 1 
66 1 92 1 171 1 153 1 249 2 28 4 95 2 275 1 366 1 176 2 318 1 371 1 58 1 158 1 136 1 204 1 287 2 35 1 236 1 86 1 263 2 183 1 380 1 19 2 
375 1 299 1 292 1 140 1 22 1 279 1 196 1 289 1 
243 1 235 1 
243 1 235 1 
330 1 104 1 
330 1 104 1 
330 1 104 1 
243 1 73 1 235 1 
243 1 73 1 235 1 
243 1 16 1 235 1 
320 1 243 2 14 1 330 1 104 1 235 2 
243 1 73 1 235 1 
261 1 243 1 235 1 
261 1 243 1 235 1 
261 1 243 1 235 1 
21 1 243 1 299 2 302 1 45 1 94 1 49 1 364 1 252 1 279 2 284 1 255 1 324 1 82 1 113 1 235 1 289 2 116 1 375 2 140 2 210 1 16 1 20 1 145 1 
21 2 320 1 243 2 284 2 255 2 302 2 324 2 45 3 94 1 60 1 348 1 235 2 327 1 83 1 210 2 5 1 117 2 240 1 241 1 
222 1 0 1 32 1 
222 1 0 1 130 1 
79 1 251 1 222 3 18 1 32 2 130 1 
251 1 222 2 18 1 32 1 367 1 130 1 
251 1 222 2 18 2 32 1 130 1 
40 1 331 2 224 2 357 1 150 1 271 2 190 3 48 2 3 4 363 1 364 1 250 1 278 1 195 1 218 1 53 3 341 1 253 1 33 1 284 5 109 1 9 1 136 1 60 2 35 1 291 1 116 1 210 5 183 1 380 1 142 1 145 1 
40 2 331 6 168 5 224 6 1 1 357 1 150 1 213 1 190 8 48 6 191 5 3 7 363 2 278 1 102 1 195 1 218 2 53 9 341 2 253 3 33 2 342 1 284 9 9 6 232 1 372 1 136 3 60 5 35 3 374 1 116 4 210 9 183 3 380 3 142 3 
40 1 331 2 224 2 213 1 271 1 190 3 3 2 48 2 363 1 250 1 195 1 218 1 341 1 53 4 253 2 33 1 284 3 109 1 136 1 60 3 35 1 116 1 210 3 183 1 380 1 142 1 
40 1 331 4 224 4 213 1 271 2 190 5 48 4 3 3 363 1 250 1 195 1 102 1 218 1 53 7 341 1 253 3 33 1 284 4 109 1 372 1 136 2 60 4 35 2 374 1 116 2 210 4 183 2 380 2 142 2 
96 1 72 1 129 1 
96 1 182 1 
378 1 
96 1 359 1 315 1 
96 1 98 1 
96 1 315 1 
96 3 359 1 72 2 194 1 68 1 315 1 
318 3 178 1 265 1 55 1 92 2 136 1 256 1 28 7 206 1 115 2 181 1 174 1 263 4 183 1 198 1 119 1 176 3 
318 3 178 1 265 1 55 1 92 2 136 1 256 1 28 7 206 1 115 2 181 1 174 1 263 4 183 1 198 1 119 1 176 3 
318 3 178 1 265 1 55 1 92 2 246 1 136 1 256 1 206 1 28 7 115 2 181 1 174 1 263 4 183 1 198 1 119 1 176 3 
265 1 92 5 333 4 307 1 153 1 249 2 28 31 248 1 275 1 174 2 198 1 176 15 318 10 178 2 55 5 233 1 347 3 256 1 136 4 204 1 35 3 206 1 115 3 181 2 236 1 208 1 351 1 263 16 352 1 183 4 119 2 380 3 142 3 242 1 
92 3 93 1 153 2 249 4 28 9 275 2 174 1 198 1 176 4 318 4 178 1 55 1 136 1 256 1 204 2 206 1 115 2 236 2 181 1 351 1 263 5 183 1 119 1 143 1 
41 1 356 1 268 1 0 1 169 1 46 1 25 1 173 1 125 1 29 1 227 1 215 1 70 1 277 1 101 2 71 1 340 1 52 1 32 1 199 1 130 1 282 1 76 1 201 2 79 1 54 1 110 1 231 1 222 2 166 1 
212 1 41 1 268 1 0 1 169 1 46 1 25 1 173 1 125 1 29 1 309 1 227 1 70 1 277 1 101 3 71 1 340 1 52 1 32 1 199 1 130 1 76 1 79 1 201 3 54 1 110 1 231 2 222 2 85 1 166 1 
41 1 268 1 0 1 169 1 46 1 25 1 173 1 125 1 29 1 309 1 227 1 70 1 101 2 340 1 32 1 199 1 130 1 76 1 201 2 79 1 54 1 110 1 231 2 222 2 85 1 
41 1 212 1 268 1 169 1 25 2 152 1 226 1 125 2 173 2 29 2 96 1 101 1 71 1 340 1 315 1 76 1 77 1 201 1 343 1 290 1 62 1 163 1 166 1 
41 1 79 1 201 1 54 1 268 1 0 1 169 1 25 1 125 1 173 1 29 1 227 1 309 1 215 1 222 2 277 1 71 1 101 1 52 1 340 1 32 1 130 1 199 1 282 1 76 1 166 1 
133 1 
89 1 65 1 299 1 267 1 357 2 224 1 122 1 225 3 305 1 190 1 335 1 124 3 278 1 195 1 281 1 228 1 218 1 196 1 31 1 229 1 341 1 253 2 33 1 284 4 9 5 157 1 60 1 203 2 289 1 350 5 139 1 292 1 238 3 140 1 209 1 84 1 210 4 353 2 354 2 264 2 88 1 64 1 
65 1 89 1 299 1 267 1 357 2 224 1 122 1 225 3 305 1 190 1 335 1 124 3 278 1 195 1 281 1 228 1 218 1 196 1 31 1 229 1 341 1 253 2 33 1 284 4 9 5 157 1 60 1 203 2 289 1 350 5 139 1 292 1 238 3 140 1 209 1 84 1 210 4 353 2 354 2 264 2 88 1 64 1 
267 1 224 1 225 2 335 1 190 1 278 1 195 1 281 1 196 1 229 1 51 2 341 1 53 2 202 1 284 4 9 4 157 1 60 1 203 2 289 1 350 4 292 1 238 2 209 1 210 4 354 2 64 1 65 1 299 1 122 1 357 2 124 2 218 1 219 1 314 2 33 1 140 1 84 1 88 1 
41 1 42 1 268 2 267 1 224 2 188 1 225 2 189 1 190 2 335 1 96 1 278 1 195 1 281 1 196 1 340 2 229 1 53 2 341 1 284 5 9 6 157 1 60 2 203 2 289 1 290 2 350 4 238 2 292 1 209 1 163 1 210 5 353 2 354 2 64 1 65 1 299 1 357 3 169 2 122 1 124 2 363 1 218 1 219 1 315 1 253 2 76 1 77 1 33 1 322 1 139 1 140 1 84 1 264 2 88 1 
65 1 299 1 267 1 122 1 357 1 335 1 124 1 27 1 196 1 229 1 284 3 9 2 157 1 289 1 350 2 292 1 140 1 209 1 84 1 210 3 88 1 64 1 
65 1 299 1 267 1 122 1 357 1 335 1 27 1 195 1 196 1 229 1 284 3 9 1 157 1 60 1 289 1 350 3 292 1 238 1 140 1 209 1 84 1 210 3 88 1 64 1 
65 1 299 1 267 1 357 1 122 1 225 1 335 1 124 1 27 1 195 1 196 1 229 1 284 3 9 2 157 1 60 1 289 1 350 3 292 1 238 1 140 1 209 1 84 1 210 3 88 1 64 1 
89 1 267 1 224 1 225 4 335 1 190 1 278 1 195 5 228 1 281 1 196 1 229 1 108 1 341 1 284 5 9 7 157 1 60 5 203 2 289 1 350 6 292 1 238 4 209 1 210 5 354 2 353 2 64 1 65 1 299 1 357 3 122 1 305 1 124 4 27 1 31 1 218 1 253 2 33 1 139 1 140 1 84 1 264 2 88 1 
267 1 224 1 225 2 335 1 190 1 278 1 195 1 281 1 196 1 229 1 341 1 53 2 284 4 9 4 157 1 60 2 203 2 289 1 350 4 292 1 238 2 209 1 210 4 354 2 353 2 64 1 65 1 299 1 122 1 357 2 124 2 218 1 219 1 253 2 33 1 139 1 140 1 84 1 264 2 88 1 
65 1 89 1 299 1 267 1 357 2 224 1 122 1 225 2 305 1 190 1 335 1 124 2 278 1 195 1 281 1 228 1 196 1 218 1 229 1 341 1 253 2 33 1 284 4 9 4 157 1 60 1 203 2 289 1 350 4 238 2 139 1 292 1 140 1 209 1 84 1 210 4 353 2 354 2 264 2 88 1 64 1 
65 1 89 1 299 1 267 1 357 2 224 1 122 1 225 2 305 1 190 1 335 1 124 2 278 1 195 1 281 1 228 1 196 1 218 1 229 1 341 1 253 2 33 1 284 4 9 4 157 1 60 1 203 2 289 1 350 4 238 2 139 1 292 1 140 1 209 1 84 1 210 4 353 2 354 2 264 2 88 1 64 1 
65 1 299 1 267 1 357 2 224 1 122 1 149 1 225 2 305 1 190 1 335 1 124 2 278 1 195 1 281 1 196 1 218 1 51 2 229 1 53 2 314 2 341 1 33 1 202 1 284 4 134 1 9 4 157 1 60 1 203 2 289 1 350 4 238 2 292 1 140 1 209 1 84 1 210 4 354 2 88 1 64 1 
66 1 92 2 171 1 153 1 249 2 28 6 95 1 49 2 275 1 366 1 129 1 198 1 176 3 318 2 256 1 136 1 287 1 204 1 206 1 115 1 181 1 236 1 263 3 183 1 119 1 19 1 
66 1 92 1 358 1 361 1 333 3 26 1 153 2 249 4 28 14 95 11 49 1 275 2 310 1 366 2 176 6 106 1 318 2 368 1 55 1 233 1 347 3 136 2 204 2 287 4 35 1 236 2 118 1 263 8 352 1 183 1 380 2 19 11 142 2 
41 1 66 1 299 1 268 1 169 1 359 1 361 1 26 1 249 2 153 1 28 2 96 1 49 1 127 1 275 1 310 1 155 1 366 1 279 1 340 1 176 1 315 1 76 1 319 1 345 1 254 1 325 1 287 1 204 1 137 1 289 2 290 1 375 1 236 1 140 2 263 1 165 1 144 1 
41 2 268 3 43 2 269 1 92 4 47 2 153 3 96 2 95 7 49 2 275 3 99 2 279 1 340 3 198 1 345 2 55 4 10 2 204 3 287 7 206 1 289 3 115 1 290 1 236 3 165 1 119 1 19 7 66 3 299 1 169 3 359 2 361 1 26 1 249 6 28 20 309 1 127 2 310 1 216 1 366 3 176 10 315 2 76 2 317 2 318 8 256 1 136 3 325 1 35 2 181 1 375 1 140 3 263 10 183 3 184 1 380 2 142 2 144 2 
41 2 66 2 356 1 299 1 268 8 169 8 361 1 171 1 247 1 153 2 249 4 28 2 96 3 309 1 275 2 310 1 193 1 279 1 366 2 30 1 340 7 105 1 176 1 315 2 76 2 77 1 286 1 325 1 204 2 161 1 289 1 290 2 375 1 236 2 237 2 140 1 163 1 293 1 263 1 
66 1 266 1 299 1 92 1 26 1 153 1 249 2 28 3 95 1 50 1 275 1 366 1 279 1 313 1 176 2 318 1 136 1 287 1 204 1 35 1 289 1 375 1 236 1 140 1 263 1 183 1 380 1 19 1 142 1 
318 1 66 1 55 1 171 1 136 1 287 1 204 1 28 2 249 2 153 1 95 1 236 1 275 1 86 1 263 2 366 1 380 1 19 1 
318 1 66 1 371 1 92 1 171 1 287 1 204 1 35 1 28 2 249 2 153 1 95 1 236 1 275 1 366 1 183 1 19 1 176 2 
318 2 66 1 55 1 92 1 171 1 136 1 287 2 204 1 35 1 28 4 249 2 153 1 95 2 236 1 275 1 263 2 366 1 183 1 380 1 176 2 19 2 142 1 
318 1 66 1 55 1 136 1 287 1 204 1 28 2 249 2 153 1 95 1 236 1 275 1 86 1 263 2 30 1 366 1 380 1 19 1 
318 1 66 1 371 1 92 1 287 1 204 1 35 1 28 2 249 2 153 1 95 1 236 1 275 1 30 1 366 1 183 1 19 1 176 2 
318 2 66 1 55 1 92 1 136 1 287 2 204 1 35 1 28 4 249 2 153 1 95 2 236 1 275 1 263 2 30 1 366 1 183 1 380 1 176 2 19 2 142 1 
318 2 66 1 55 1 92 1 136 1 287 2 204 1 35 1 249 2 153 1 28 4 95 2 236 1 275 1 263 2 366 1 183 1 380 1 176 2 19 2 142 1 
41 1 66 1 268 1 169 1 359 1 361 1 28 2 249 2 153 1 96 1 49 1 127 1 275 1 310 1 99 1 366 1 340 1 176 1 315 1 76 1 345 1 204 1 289 1 290 1 236 1 140 1 263 1 144 1 
41 1 66 1 268 1 169 1 359 1 361 1 334 1 24 1 28 2 249 2 153 1 96 1 49 1 275 1 310 1 366 1 340 1 176 1 315 1 76 1 204 1 289 1 290 1 236 1 262 1 140 1 263 1 144 1 
318 2 66 1 55 1 92 1 136 1 287 2 204 1 35 1 26 1 28 4 249 2 153 1 95 2 236 1 275 1 263 2 366 1 183 1 380 1 176 2 19 2 142 1 
41 1 66 1 356 1 268 1 169 1 92 1 359 1 28 4 249 2 153 1 95 2 96 1 127 1 275 1 99 1 366 1 340 1 176 2 315 1 76 1 318 2 55 1 345 1 10 1 136 1 287 2 204 1 35 1 289 1 236 1 140 1 263 2 183 1 380 1 19 2 142 1 144 1 
66 1 266 1 299 1 26 1 153 1 249 2 28 3 95 1 50 1 275 1 366 1 279 1 176 1 318 1 55 1 136 1 204 1 287 1 35 1 289 1 375 1 236 1 140 1 15 1 263 2 183 1 380 1 142 1 19 1 
92 4 44 1 333 4 153 3 274 1 275 3 276 1 339 1 198 1 55 4 233 3 347 3 11 1 204 3 288 1 206 1 207 4 115 1 236 3 351 1 352 1 294 2 119 1 296 1 23 1 28 41 249 6 176 21 318 8 321 1 136 5 256 1 35 4 326 1 181 1 329 1 328 1 263 20 183 5 380 4 87 1 142 4 143 1 
44 1 92 4 333 4 23 1 153 4 249 8 28 38 274 1 275 4 276 1 339 1 198 1 176 18 318 7 321 1 55 3 233 3 11 1 347 3 256 1 136 5 204 4 288 1 35 3 206 1 326 1 115 1 207 4 181 1 236 4 328 1 351 2 329 1 263 20 294 2 352 1 183 4 87 1 119 1 380 4 296 1 142 4 143 1 
92 7 333 4 23 1 153 2 249 4 28 52 274 1 275 2 276 1 339 1 198 1 176 25 318 14 368 2 321 1 55 7 233 2 11 1 347 4 256 1 136 8 204 2 288 1 35 7 206 1 115 1 207 4 181 1 236 2 328 1 351 1 329 1 263 27 294 1 352 2 183 8 87 1 119 1 380 7 296 1 142 7 143 1 
44 1 92 3 333 2 153 2 249 4 28 19 275 2 339 1 176 10 318 6 55 3 233 1 347 1 136 3 204 2 35 3 207 2 236 2 328 1 329 1 263 9 294 1 352 1 183 3 87 2 185 1 380 3 296 1 142 3 143 1 
92 2 333 2 23 1 153 3 249 6 28 26 274 1 275 3 276 1 339 1 176 12 318 4 321 1 55 2 233 2 11 1 347 2 136 3 204 3 288 1 35 2 207 4 236 3 328 1 351 2 329 1 263 14 294 2 183 2 87 1 380 3 296 2 142 3 143 1 
21 1 320 1 243 1 83 1 255 1 324 1 302 1 235 1 241 1 272 1 
252 1 16 1 
21 1 243 1 255 1 324 1 302 1 103 1 160 1 235 1 223 1 
346 1 73 1 
261 1 14 1 56 1 
21 1 320 1 284 1 243 1 255 1 302 1 324 1 45 2 94 1 60 1 348 1 235 1 83 1 210 1 5 1 117 1 240 1 241 1 
21 1 320 1 284 1 243 1 255 1 302 1 324 1 45 2 94 1 60 1 348 1 235 1 83 1 210 1 5 1 117 1 240 1 241 1 
21 1 320 1 284 1 243 1 255 1 302 1 324 1 45 2 94 1 60 1 348 1 235 1 83 1 210 1 5 1 117 1 240 1 241 1 
14 1 346 1 73 1 
14 1 346 1 73 1 
261 1 56 1 
261 1 14 1 56 1 
113 1 20 1 
21 1 243 1 299 2 302 1 45 1 306 1 3 1 49 1 364 1 252 1 279 2 284 1 255 1 324 1 82 1 113 1 235 1 289 2 116 1 375 2 140 2 210 1 117 1 16 1 240 1 20 1 145 1 
41 1 66 1 299 2 268 2 169 2 361 1 26 1 249 2 153 1 28 2 96 1 275 1 310 1 366 1 340 2 105 1 176 1 315 1 76 1 8 1 59 1 204 1 205 1 289 2 236 1 237 2 13 1 140 2 293 1 164 1 263 1 
41 1 79 1 356 1 268 2 0 1 169 2 114 1 173 1 309 1 227 1 222 2 239 1 340 2 74 1 52 1 32 1 130 1 199 1 76 1 
41 1 79 1 268 1 0 1 169 1 173 1 309 1 227 1 222 2 280 1 340 1 74 1 52 1 32 1 130 1 199 1 76 1 
41 1 77 1 268 1 169 1 173 1 96 1 290 1 62 1 163 1 239 1 217 1 340 1 315 1 76 1 
41 1 79 1 268 1 0 1 169 1 114 1 173 1 309 1 227 1 222 2 239 1 340 1 74 1 52 1 32 1 130 1 199 1 76 1 
257 1 
41 1 66 1 299 2 268 1 169 1 359 1 361 1 28 1 153 1 249 2 96 1 49 1 50 2 127 1 275 1 99 1 279 2 366 1 340 1 176 1 315 1 76 1 80 1 7 1 345 1 204 1 289 3 290 1 236 1 375 2 140 3 144 1 
33 1 331 2 322 1 224 2 60 4 190 1 48 2 115 1 363 1 278 1 195 2 218 1 53 4 341 1 253 2 
132 1 224 1 195 1 60 1 129 1 190 1 162 1 
224 1 357 1 190 1 278 1 195 1 218 1 341 1 53 1 253 1 33 1 284 1 9 1 60 2 139 1 210 1 353 1 264 1 
41 4 331 6 90 1 268 3 224 8 190 9 48 6 96 10 98 2 278 4 195 2 194 1 340 3 341 4 53 12 284 5 111 2 9 5 60 8 162 1 290 1 63 2 210 5 355 2 297 2 356 1 244 2 169 3 67 2 357 3 359 3 308 1 363 2 72 2 218 4 315 3 316 2 76 3 253 6 33 4 317 2 132 1 322 1 370 1 323 1 136 2 373 1 35 2 259 2 182 3 183 2 380 2 88 2 142 2 
331 5 357 1 224 5 333 1 190 8 192 1 48 5 363 1 274 1 276 1 278 2 195 2 218 2 53 6 341 2 253 3 33 2 284 1 322 1 321 1 111 1 9 1 233 1 11 1 347 1 136 2 60 5 288 1 35 2 63 2 210 1 183 2 380 2 142 2 146 1 
299 1 224 2 303 1 2 1 190 2 50 1 278 1 279 1 228 1 218 1 198 1 341 1 33 1 284 1 80 1 111 1 285 1 136 2 180 1 289 1 181 1 375 1 292 1 140 1 63 2 210 1 183 1 119 1 
33 1 132 1 224 1 60 1 190 1 162 1 278 1 195 1 218 1 341 1 
317 1 331 5 111 1 224 5 136 2 60 5 190 5 48 5 35 2 63 2 183 2 380 2 142 2 53 10 253 5 
284 1 210 1 9 1 357 1 195 1 60 1 
41 1 268 4 169 4 224 2 357 2 188 1 213 1 189 1 304 1 190 2 96 1 363 2 278 1 218 2 340 4 315 1 341 2 76 1 33 2 77 1 284 3 322 2 370 2 9 4 373 1 260 1 290 2 210 3 163 1 
21 1 255 1 211 1 
21 1 255 1 211 1 
21 1 177 1 255 1 113 1 241 1 
21 1 255 1 211 1 
21 1 255 1 107 1 
21 1 255 1 107 1 
21 1 255 1 107 1 
21 1 255 1 
243 1 235 1 
92 2 333 1 28 8 153 1 249 2 274 1 275 1 198 1 176 4 318 2 233 1 347 1 136 1 256 1 204 1 206 1 115 1 236 1 181 1 263 4 183 1 119 1 143 1 
92 2 333 2 28 11 153 2 249 4 274 1 275 2 198 1 176 5 318 3 369 1 55 1 233 1 347 1 256 1 136 2 204 2 206 1 115 1 181 1 236 2 263 6 352 1 183 1 119 1 380 1 142 1 143 1 
92 3 333 1 28 19 153 3 249 6 274 1 275 3 276 1 198 1 176 10 318 4 369 1 321 1 55 1 233 1 347 1 11 1 256 1 136 3 204 3 288 1 35 2 206 1 115 1 181 1 236 3 351 1 263 9 183 3 119 1 380 2 142 2 143 1 
92 3 333 1 28 17 153 3 249 6 274 1 275 3 276 1 198 1 176 7 318 5 369 1 321 1 55 2 233 1 347 1 11 1 256 1 136 3 204 3 288 1 35 1 206 1 115 1 181 1 236 3 351 1 263 10 183 2 119 1 380 2 142 2 143 1 
92 2 333 1 28 8 153 1 249 2 274 1 275 1 198 1 176 4 318 2 233 1 347 1 136 1 256 1 204 1 206 1 115 1 236 1 181 1 263 4 183 1 119 1 143 1 
92 1 333 1 28 12 153 1 249 2 274 1 275 1 276 1 176 6 318 2 321 1 55 1 233 1 347 1 11 1 136 2 204 1 288 1 35 2 236 1 263 6 183 2 380 2 142 2 143 1 
92 3 333 1 28 18 153 4 249 8 274 1 275 4 276 1 198 1 176 8 318 5 321 1 369 1 55 2 233 1 11 1 347 1 256 1 136 3 204 4 288 1 35 1 206 1 115 1 181 1 236 4 351 2 263 10 183 2 119 1 380 2 142 2 143 1 
44 1 92 3 333 1 28 16 153 4 249 8 274 1 275 4 276 1 176 7 318 6 321 1 55 3 233 1 11 1 347 1 136 3 204 4 288 1 35 2 236 4 351 2 263 9 183 2 380 3 142 3 143 1 
318 6 55 3 92 3 256 1 136 1 28 7 206 2 181 3 263 3 183 1 119 3 198 1 176 4 
44 1 92 3 333 1 28 18 153 4 249 8 274 1 275 4 276 1 198 1 176 8 318 4 321 1 55 1 233 1 11 1 347 1 256 1 136 3 204 4 288 1 35 1 206 1 115 1 181 1 236 4 351 2 263 10 183 2 119 1 380 2 142 2 143 1 
318 3 55 1 92 2 136 1 256 1 204 2 28 8 249 4 153 2 206 1 115 1 236 2 181 1 275 2 351 1 263 4 183 1 198 1 119 1 176 4 
318 2 92 2 256 1 136 1 206 1 28 6 115 1 181 1 263 3 129 1 183 1 119 1 198 1 176 3 
318 2 369 1 55 1 92 1 136 1 204 1 35 1 249 2 153 1 28 4 236 1 275 1 263 2 183 1 380 1 176 2 142 1 
318 2 55 1 92 1 233 1 347 1 136 1 333 2 35 1 28 7 263 3 352 1 183 1 380 1 176 4 142 1 
358 1 92 5 333 2 28 23 249 4 153 2 275 2 338 1 198 1 176 12 318 9 368 1 55 4 347 2 256 1 136 3 204 2 35 2 206 1 115 1 181 2 236 2 351 2 263 11 352 1 183 3 119 2 380 2 142 2 
333 1 176 1 28 1 
263 1 347 1 28 1 
317 1 318 3 369 1 55 1 92 2 136 1 204 1 35 1 153 1 249 2 28 6 236 1 275 1 263 3 183 1 380 1 176 3 142 1 
92 1 333 1 28 12 153 1 249 2 274 1 275 1 276 1 176 6 318 2 321 1 55 1 233 1 347 1 11 1 136 2 204 1 288 1 35 2 236 1 263 6 183 2 380 2 142 2 143 1 
318 2 55 1 92 1 136 1 28 6 181 1 263 3 183 1 198 1 119 1 176 3 
318 2 55 1 92 1 256 1 204 1 206 1 28 3 249 2 153 1 181 1 236 1 275 1 338 1 351 1 263 1 119 1 176 2 
318 5 55 2 92 3 2 1 136 2 204 1 153 1 249 2 28 10 236 1 181 2 275 1 263 5 183 2 119 2 198 1 176 5 143 1 
318 1 55 1 136 1 204 1 249 2 153 1 28 2 236 1 275 1 263 2 380 1 143 1 
318 2 55 1 92 1 136 1 204 1 35 1 249 2 153 1 28 4 236 1 275 1 263 2 183 1 380 1 176 2 142 1 143 1 
318 2 55 1 44 1 92 1 204 3 28 3 249 6 153 3 236 3 181 1 275 3 338 1 351 1 263 1 119 1 176 2 143 1 
44 1 92 7 333 4 307 1 248 1 153 5 249 10 28 34 275 5 338 1 198 2 176 18 318 12 369 1 55 5 233 1 347 3 256 1 136 5 204 5 35 3 206 1 115 1 181 3 236 5 351 2 263 16 352 1 183 5 119 3 380 3 142 3 242 1 143 1 
49 1 187 1 299 1 140 1 172 1 64 1 289 1 
147 1 187 1 299 1 170 1 172 1 289 1 49 1 336 1 140 1 38 1 121 1 64 1 
41 1 96 1 77 1 290 1 268 1 163 1 169 1 129 1 340 1 315 1 76 1 
41 1 299 1 268 1 169 1 345 1 359 1 325 1 289 2 96 1 290 1 49 1 375 1 140 2 279 1 340 1 315 1 144 1 76 1 
41 1 299 2 268 1 169 1 359 2 96 3 49 1 98 1 279 2 196 1 340 1 315 2 76 1 345 1 370 1 325 1 289 2 259 1 375 1 292 1 140 2 209 1 144 1 
41 1 299 2 268 2 169 2 359 2 24 1 96 3 49 1 98 1 279 2 196 1 340 2 315 2 76 1 370 1 135 1 325 1 289 2 259 1 375 1 292 1 140 2 209 1 144 1 
41 1 284 2 268 3 370 1 169 3 9 1 359 1 135 1 60 1 259 1 290 1 96 4 98 1 210 2 182 1 100 1 195 1 72 1 312 1 340 3 88 1 315 1 76 1 
41 1 284 2 268 3 370 1 169 3 67 1 9 1 359 1 135 1 60 1 259 1 290 1 96 4 98 1 210 2 182 1 195 1 72 1 340 3 88 1 315 1 76 1 
41 1 268 1 169 1 286 1 340 1 76 1 
41 3 356 1 268 7 169 7 359 1 286 1 159 1 247 1 161 1 290 2 96 3 237 1 309 1 193 1 6 1 194 1 340 6 197 1 105 1 315 2 76 2 
41 1 268 1 92 2 47 1 153 2 96 1 95 1 49 2 275 2 99 1 279 1 340 1 198 1 345 1 10 1 59 1 287 1 204 2 289 2 206 1 115 1 236 2 119 1 19 1 66 2 356 1 299 1 169 1 359 1 26 1 249 4 28 6 127 1 366 2 176 3 315 1 76 1 318 2 256 1 136 1 325 1 375 1 181 1 140 2 263 3 183 1 144 1 
268 1 224 1 169 1 67 1 357 1 190 1 3 1 96 2 278 2 195 1 72 1 218 2 340 1 341 2 316 1 33 2 132 1 284 3 9 2 60 1 162 1 373 1 290 1 210 3 182 1 355 1 88 1 297 1 
41 2 356 1 268 2 169 2 359 1 286 1 308 1 96 2 72 1 194 1 340 2 315 1 76 1 
41 1 77 1 356 1 268 4 169 4 135 1 290 1 96 1 377 1 163 1 340 4 315 1 76 1 
41 2 268 2 370 1 169 2 359 1 159 1 126 1 96 1 365 1 216 1 6 1 340 2 315 1 76 1 
41 1 290 1 227 1 222 1 268 1 0 1 169 1 340 1 130 1 76 1 
41 1 96 1 309 1 356 1 268 2 8 1 169 2 340 2 105 1 315 1 76 1 
77 1 41 2 356 1 268 5 370 1 169 5 247 1 290 1 96 3 377 1 163 1 193 1 340 4 105 1 315 2 76 2 
77 1 41 2 356 1 268 5 148 1 370 1 169 5 247 1 290 1 96 3 377 1 163 1 340 4 105 1 315 2 76 2 
41 1 299 1 268 1 169 1 359 1 325 1 24 1 289 2 96 1 290 1 49 1 375 1 140 2 279 1 340 1 315 1 144 1 76 1 
41 2 268 1 370 1 169 1 359 1 159 1 96 1 6 1 194 1 340 1 197 1 315 1 76 1 
49 1 37 1 300 1 332 1 141 1 
298 1 284 2 300 2 270 1 157 1 332 2 60 1 3 1 49 1 37 1 138 1 292 1 209 1 4 1 210 2 195 1 196 1 141 2 88 1 
299 1 332 1 205 1 289 1 37 1 13 1 140 1 164 1 141 1 
37 1 138 1 4 1 
186 1 201 3 110 1 70 1 376 1 231 1 101 3 71 1 46 1 282 1 166 1 
110 1 337 1 214 1 379 1 
110 1 70 1 
110 1 70 1 46 1 129 1 
201 1 110 1 70 1 101 1 71 1 46 1 166 1 
29 1 101 1 25 1 
201 3 110 1 123 1 46 1 12 1 70 1 311 1 376 2 71 1 101 3 282 1 166 1 
349 1 201 2 110 1 70 1 231 1 101 2 71 1 46 1 166 1 
201 1 222 1 110 1 0 1 337 1 179 1 101 1 71 1 32 1 282 1 166 1 
201 1 110 1 70 1 101 1 71 1 282 1 166 1 
201 1 70 2 101 1 71 1 46 1 282 1 166 1 
201 2 110 1 221 1 70 1 71 2 101 2 295 1 282 1 166 2 39 1 
186 1 201 3 110 2 231 2 57 1 46 1 214 1 70 1 337 1 71 1 101 3 282 1 166 1 
201 2 79 1 110 1 0 1 231 1 46 1 34 1 70 1 222 2 71 1 101 2 32 1 130 1 282 1 166 1 
201 4 110 2 231 2 360 1 46 1 214 1 349 1 70 1 337 1 71 2 101 4 282 1 166 2 
201 1 110 1 70 1 101 1 71 1 46 1 282 1 166 1 
201 4 110 3 231 2 123 1 46 2 214 1 12 1 70 2 376 1 337 1 101 4 71 1 379 1 166 1 
201 2 110 1 231 1 46 1 61 1 258 1 70 1 71 1 101 2 17 1 282 1 166 1 
201 3 110 1 123 2 46 1 362 1 12 1 70 1 376 2 71 1 101 3 282 1 166 1 
167 1 110 1 112 1 
201 1 344 1 101 1 71 1 282 1 166 1 
186 1 201 2 110 1 70 1 231 1 101 2 71 1 46 1 282 1 166 1 
69 1 
201 1 110 1 70 1 101 1 71 1 46 1 282 1 166 1 

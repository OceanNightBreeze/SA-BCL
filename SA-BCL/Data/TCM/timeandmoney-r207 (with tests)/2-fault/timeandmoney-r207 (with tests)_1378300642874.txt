#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 321 71 76 181 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 321 71 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 321 71 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 321 53 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 321 71 76 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 321 71 76 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
279 1 234 1 138 2 327 3 274 1 201 1 251 3 42 2 26 2 253 1 204 1 239 1 44 1 
279 4 29 1 234 1 55 1 187 1 304 1 238 1 60 1 42 2 213 2 109 1 239 3 44 6 111 1 241 1 67 2 351 1 138 5 327 9 274 1 201 1 251 9 253 2 26 2 297 1 75 2 204 1 276 2 
279 4 29 1 234 1 55 1 187 1 304 1 238 1 60 1 42 2 213 2 109 1 239 3 44 6 111 1 241 1 67 2 351 1 138 5 327 9 274 1 201 1 251 9 253 2 26 2 297 1 75 2 204 1 276 2 
279 5 29 1 234 1 55 1 187 1 304 1 238 1 60 1 42 2 213 2 109 1 239 4 44 7 111 1 241 1 67 2 351 1 138 6 327 10 274 1 201 1 251 10 253 2 26 2 297 1 75 2 204 1 276 2 
279 3 29 1 234 1 55 1 187 1 304 1 238 1 60 1 42 2 213 2 109 1 239 2 44 4 241 1 67 1 351 1 138 4 327 7 274 1 201 1 251 7 253 2 26 2 297 1 75 2 204 1 276 2 
111 1 279 2 67 2 138 3 327 4 55 1 274 1 201 1 60 1 251 4 42 1 26 1 213 1 75 1 204 1 239 1 44 3 276 1 
138 1 327 2 274 1 8 1 201 1 238 1 251 2 88 1 42 1 26 1 253 1 213 1 109 1 204 1 63 1 276 1 
279 4 234 1 54 1 55 1 60 1 42 2 213 1 239 3 44 7 111 1 67 2 351 1 138 5 327 9 274 1 201 1 251 9 253 1 26 2 297 1 75 1 204 1 99 1 276 1 
279 4 234 1 54 1 55 1 60 1 42 2 213 1 239 3 44 7 111 1 67 2 351 1 138 5 327 9 274 1 201 1 251 9 253 1 26 2 297 1 75 1 204 1 99 1 276 1 
79 1 227 1 148 1 125 1 259 1 21 1 184 1 339 1 319 1 142 1 191 1 122 1 107 1 91 1 
328 1 
339 1 206 1 79 2 127 1 308 1 328 1 333 1 191 2 
206 1 359 2 79 5 31 1 333 2 350 1 198 1 34 1 185 2 272 1 339 2 9 1 127 1 328 1 269 1 191 5 252 1 255 1 13 2 
206 1 189 1 328 1 
328 1 335 1 298 2 
319 2 65 1 227 2 142 2 107 2 122 1 91 2 184 2 
277 1 299 1 227 2 80 2 283 1 233 2 184 3 319 2 363 1 188 1 266 1 107 3 322 1 12 2 156 1 91 2 158 1 291 1 65 1 17 1 309 1 115 1 139 1 171 1 220 1 175 2 374 1 356 1 23 1 72 1 358 2 142 2 295 1 313 1 177 1 122 1 179 1 
319 1 227 1 142 1 125 1 259 1 107 1 122 1 21 1 91 1 184 1 
214 1 206 1 366 1 79 1 259 1 184 1 151 1 328 1 237 1 41 1 107 1 191 1 91 1 223 1 
214 1 206 1 79 2 227 1 259 1 184 1 319 1 151 1 142 1 328 1 41 1 107 1 191 2 91 1 223 1 
339 1 79 1 333 1 191 1 354 1 
339 1 206 1 79 2 127 1 328 1 333 1 289 1 191 2 
79 1 333 1 191 1 
65 2 78 1 227 1 184 2 319 1 142 1 107 2 144 1 91 2 
317 1 87 1 250 1 
65 1 80 1 17 1 233 1 115 1 184 1 171 1 188 1 313 1 266 1 107 1 322 1 12 1 156 1 203 1 158 1 
65 1 189 1 
319 3 65 1 227 1 142 3 19 1 107 3 91 3 184 3 
319 1 142 1 125 1 259 1 107 1 91 1 184 1 
319 1 78 1 227 1 142 1 259 1 107 1 144 1 91 1 184 1 
227 2 79 1 80 1 259 1 233 1 184 4 363 1 319 3 151 1 188 1 266 1 41 1 322 1 107 4 191 1 156 1 12 1 91 3 158 1 214 1 291 1 65 1 17 1 19 1 115 1 139 1 171 1 220 1 175 1 374 1 356 1 23 1 72 1 358 2 142 3 313 1 177 1 98 1 122 1 144 1 49 1 179 1 205 1 223 1 
319 1 65 1 366 1 164 1 142 1 19 1 107 2 91 2 184 2 
214 1 227 1 79 1 19 2 259 1 184 3 319 3 151 1 142 3 328 1 25 1 41 1 191 1 107 3 98 1 144 1 49 1 91 3 223 1 
227 1 19 1 184 2 319 2 87 1 250 1 142 2 107 2 144 1 91 2 
65 1 80 1 17 1 233 1 115 1 184 1 171 1 188 1 313 1 266 1 107 1 322 1 12 1 156 1 158 1 
65 1 80 1 17 1 233 1 115 1 184 1 171 1 261 1 59 1 188 1 266 1 107 1 12 1 156 1 158 1 
277 2 145 1 317 2 334 1 285 1 87 2 342 1 108 1 291 1 216 1 166 1 242 1 310 1 353 1 139 1 220 1 356 1 175 4 72 1 358 2 250 2 177 2 376 1 179 1 
319 1 142 1 257 1 259 1 41 1 107 1 91 1 184 1 
366 1 65 1 227 1 164 1 19 2 184 5 319 4 142 4 331 1 107 5 144 1 290 1 91 5 49 1 
319 2 142 2 257 1 125 1 259 1 107 2 91 2 184 2 
80 1 17 1 19 1 233 1 115 1 184 2 171 1 319 1 188 1 87 1 142 1 313 1 266 1 322 1 107 2 156 1 12 1 49 1 91 1 158 1 
35 1 267 1 218 1 
35 2 161 1 96 1 230 1 329 1 267 2 
35 1 267 1 
35 1 267 1 
96 1 329 1 
96 1 329 1 
96 1 329 1 
35 1 267 1 370 1 
35 1 267 1 370 1 
35 1 267 1 370 1 
35 1 215 1 267 1 
35 1 215 1 267 1 
35 1 215 1 267 1 
79 2 161 1 368 1 16 2 30 2 293 1 137 1 371 3 35 2 248 1 302 2 153 1 328 1 364 1 190 2 267 2 314 2 119 1 191 2 
79 1 30 1 362 1 184 2 319 2 35 1 6 1 190 1 267 1 89 1 191 1 107 2 91 2 343 1 65 1 16 1 293 1 247 1 371 1 218 1 170 1 142 2 314 1 296 1 
316 1 57 2 8 1 75 1 276 2 
213 1 75 1 276 1 
8 1 213 1 276 1 
316 1 57 1 226 1 8 1 75 2 276 3 
316 1 180 1 57 1 8 1 75 1 276 2 
145 1 206 1 359 1 79 5 334 1 333 1 335 1 362 1 285 1 34 3 185 1 339 4 6 1 209 1 103 1 301 2 9 2 127 1 211 1 191 5 270 2 365 1 13 1 306 2 112 1 242 1 325 1 272 1 328 2 296 1 298 3 77 1 
145 3 206 1 359 2 228 5 79 9 334 3 333 6 335 3 285 3 34 8 185 2 339 7 6 4 209 3 301 6 9 6 127 1 211 2 212 1 191 9 270 6 365 1 13 2 18 1 242 3 354 5 272 1 172 1 70 1 24 1 328 5 121 1 255 1 298 9 77 2 
145 1 206 1 359 1 79 3 334 1 335 2 285 1 34 3 185 1 339 2 6 1 209 1 301 2 211 1 9 2 191 3 270 2 13 1 306 1 112 1 242 1 325 1 328 3 255 1 77 1 298 4 
145 2 206 1 359 1 79 4 334 2 335 3 285 2 34 5 185 1 339 3 6 2 209 2 301 4 211 1 9 4 212 1 191 4 270 4 13 1 306 2 112 1 18 1 242 2 325 1 70 1 328 4 255 1 298 7 77 1 
47 1 
171 1 189 1 68 1 
171 1 66 1 
171 1 17 1 
171 3 188 1 200 1 17 1 68 2 22 1 
171 1 188 1 17 1 
171 1 37 1 
145 1 277 4 280 2 183 1 318 1 194 1 334 1 284 1 52 1 199 1 104 1 174 1 175 7 177 3 43 1 108 3 342 2 27 1 
277 16 145 4 280 3 183 2 318 2 334 4 3 3 285 3 52 1 337 1 101 1 85 1 209 3 104 2 43 1 61 1 108 10 342 5 323 1 131 1 307 4 194 2 242 3 139 1 199 1 174 1 175 31 356 1 72 1 375 1 358 2 177 15 179 1 27 5 
145 2 224 1 277 5 280 1 318 1 183 1 334 2 102 1 104 1 43 1 342 2 108 3 194 1 139 1 199 1 174 1 221 1 356 1 175 9 72 1 358 2 177 4 27 1 179 1 
145 1 277 4 280 2 183 1 318 1 194 1 334 1 52 1 199 1 104 1 174 1 175 7 177 3 43 1 108 3 342 2 27 1 
145 1 277 4 280 2 183 1 318 1 194 1 334 1 52 1 199 1 104 1 174 1 175 7 177 3 43 1 108 3 342 2 27 1 
110 1 80 1 17 1 281 2 207 1 233 1 115 1 327 1 46 2 171 1 150 1 38 1 97 1 266 1 251 1 253 2 11 2 42 1 26 1 178 1 12 1 222 1 158 1 
226 1 80 1 182 1 281 1 233 1 33 1 263 1 8 1 11 1 42 1 130 1 213 1 12 1 62 1 158 1 345 1 243 1 115 1 46 1 327 1 201 1 251 1 26 1 253 1 75 1 276 2 
226 1 80 1 182 1 281 1 233 1 336 1 33 1 8 1 11 1 42 1 130 1 213 1 12 1 44 1 62 1 158 1 345 1 243 1 115 1 138 1 46 1 327 2 274 1 201 1 251 2 26 1 253 1 75 1 204 1 276 2 
226 1 80 1 182 1 281 1 124 1 233 1 33 1 263 1 8 1 11 1 42 1 130 1 213 1 12 1 44 2 62 1 158 1 243 1 115 1 138 1 46 1 327 3 274 1 251 3 26 1 253 1 75 1 178 1 204 1 276 2 
226 1 80 1 182 1 281 1 124 1 233 1 263 1 8 1 11 1 12 1 213 1 44 2 62 1 158 1 243 1 115 1 138 1 46 1 327 2 274 1 251 2 253 1 75 1 204 1 276 2 
278 1 
333 2 259 1 300 1 152 1 151 1 9 2 154 1 266 2 107 1 12 2 13 1 158 1 159 1 110 1 214 1 162 2 17 1 113 1 116 1 115 1 272 1 171 1 118 1 223 1 77 1 359 1 79 3 80 2 229 1 282 1 231 1 233 2 34 2 185 1 184 1 286 1 127 1 237 1 41 1 191 3 91 1 366 1 97 1 
79 3 282 1 333 2 259 1 184 1 300 1 151 1 152 1 127 1 237 1 41 1 107 1 191 3 91 1 159 1 214 1 366 1 162 2 308 1 140 1 118 1 223 1 
50 1 206 1 79 3 333 1 282 1 259 1 184 1 300 1 151 1 152 1 127 1 237 1 41 1 107 1 191 3 91 1 159 1 214 1 366 1 162 3 308 1 118 1 328 1 223 1 
50 1 206 1 79 3 282 1 333 2 259 1 184 1 300 1 151 1 152 1 127 1 237 1 41 1 107 1 191 3 91 1 159 1 214 1 366 1 308 1 162 3 140 1 118 1 328 1 143 1 223 1 
359 1 79 3 181 1 333 3 282 1 231 1 259 1 34 1 185 1 184 1 300 1 56 1 286 1 152 1 151 1 9 1 127 1 237 1 321 1 41 1 191 3 107 1 91 1 13 1 159 1 214 1 366 1 308 1 162 2 272 1 140 2 118 1 71 1 143 2 223 1 76 1 
359 1 79 2 282 1 231 1 259 1 34 1 185 1 184 1 300 1 286 1 152 1 151 1 9 1 237 1 41 1 191 2 107 1 91 1 159 1 13 1 214 1 366 1 162 2 272 1 118 1 223 1 
359 1 79 2 282 1 231 1 259 1 34 1 184 1 185 1 300 1 56 1 286 1 151 1 152 1 9 1 237 1 321 1 41 1 107 1 191 2 91 1 13 1 159 1 214 1 366 1 162 2 272 1 118 1 71 1 223 1 
359 1 79 2 282 1 231 1 259 1 34 1 184 1 185 1 300 1 56 1 286 1 151 1 152 1 9 1 237 1 321 1 41 1 107 1 191 2 91 1 13 1 159 1 214 1 366 1 162 2 272 1 118 1 71 1 223 1 
359 1 79 2 282 1 231 1 259 1 34 1 184 1 53 1 185 1 300 1 151 1 152 1 9 1 237 1 321 1 41 1 107 1 191 2 91 1 13 1 159 1 214 1 366 1 367 1 162 2 195 1 272 1 118 1 223 1 
50 1 359 1 79 2 282 1 333 1 231 1 259 1 34 1 185 1 184 1 300 1 56 1 286 1 151 1 152 1 9 1 237 1 321 1 41 1 107 1 191 2 91 1 13 1 159 1 214 1 366 1 162 3 272 1 140 1 118 1 71 1 143 1 223 1 76 1 
50 1 359 1 79 2 282 1 333 1 231 1 259 1 34 1 185 1 184 1 300 1 56 1 286 1 151 1 152 1 9 1 237 1 321 1 41 1 107 1 191 2 91 1 13 1 159 1 214 1 366 1 162 3 272 1 140 1 118 1 71 1 143 1 223 1 76 1 
359 1 79 2 282 1 231 1 259 1 34 1 185 1 184 1 300 1 152 1 151 1 9 1 237 1 41 1 191 2 107 1 91 1 159 1 13 1 214 1 366 1 162 2 195 1 272 1 118 1 223 1 
277 1 299 2 80 8 2 1 283 1 336 1 233 8 83 1 184 1 319 1 303 1 263 1 266 2 107 1 12 7 192 1 91 1 157 1 158 2 110 1 291 2 17 2 19 1 115 2 69 1 353 1 171 3 139 2 219 1 220 2 356 2 175 2 374 1 72 2 142 1 358 4 97 1 177 1 179 2 
277 1 145 1 317 1 227 1 334 1 285 1 184 1 319 1 209 1 87 1 90 1 107 1 108 1 342 1 91 1 291 1 242 1 139 1 220 1 356 1 117 1 175 3 72 1 250 1 358 2 142 1 177 2 144 1 179 1 
277 3 145 1 317 1 280 1 183 1 334 1 189 1 87 1 43 1 342 2 108 2 291 1 65 2 194 1 353 1 139 1 199 1 174 1 220 1 356 1 175 6 72 1 250 1 358 2 177 3 179 1 
277 8 145 1 317 11 283 1 334 2 3 3 285 1 337 1 58 1 209 2 87 11 90 1 108 2 342 1 323 1 291 1 65 1 307 3 242 2 167 1 372 1 139 2 220 2 374 1 356 2 175 14 72 2 358 4 250 4 177 6 254 1 27 1 179 2 
277 1 80 1 283 1 233 1 51 1 184 2 319 1 188 1 266 1 322 1 90 1 107 2 156 1 12 1 91 1 158 1 291 1 65 1 17 1 369 1 19 1 244 1 115 1 171 1 139 1 220 1 356 1 374 1 175 2 72 1 250 1 142 1 358 2 313 1 177 1 203 1 49 1 179 1 
145 3 334 3 209 2 210 2 263 1 266 1 107 3 12 3 156 2 342 4 108 8 158 2 15 1 65 2 17 2 19 1 115 2 273 1 171 2 174 1 220 3 356 3 175 20 72 3 358 6 313 2 177 10 179 3 27 4 277 10 317 7 80 3 280 1 183 1 283 1 233 3 285 2 184 3 84 1 319 1 363 2 188 2 87 7 90 1 322 2 43 1 91 1 291 3 132 2 133 2 194 1 242 2 139 3 199 1 374 1 142 1 250 7 330 2 49 1 
277 2 317 1 291 1 242 1 334 1 353 1 139 1 220 1 175 2 356 1 87 1 72 1 250 1 358 2 376 1 108 1 27 1 179 1 
145 1 317 1 291 1 285 1 353 1 310 1 139 1 220 1 175 2 356 1 87 1 72 1 250 1 358 2 177 2 108 1 342 1 179 1 
277 2 145 1 317 2 334 1 285 1 209 1 87 2 108 2 342 1 291 1 242 1 353 1 139 1 220 1 356 1 175 4 72 1 358 2 250 2 177 2 179 1 27 1 
277 2 317 1 291 1 242 1 334 1 69 1 139 1 220 1 175 2 356 1 87 1 72 1 250 1 358 2 376 1 108 1 27 1 179 1 
145 1 317 1 291 1 285 1 69 1 310 1 139 1 220 1 175 2 356 1 87 1 72 1 250 1 358 2 177 2 108 1 342 1 179 1 
277 2 145 1 317 2 334 1 285 1 209 1 87 2 108 2 342 1 291 1 242 1 69 1 139 1 220 1 356 1 175 4 72 1 358 2 250 2 177 2 179 1 27 1 
145 1 277 2 317 2 291 1 242 1 334 1 285 1 139 1 209 1 220 1 356 1 175 4 87 2 72 1 250 2 358 2 177 2 342 1 108 2 27 1 179 1 
277 1 80 1 283 1 233 1 184 1 363 1 188 1 266 1 322 1 107 1 156 1 12 1 158 1 291 1 65 1 17 1 115 1 171 1 139 1 220 1 175 2 356 1 374 1 72 1 358 2 313 1 177 1 179 1 
277 1 80 1 283 1 233 1 184 1 261 1 7 1 188 1 59 1 266 1 107 1 156 1 12 1 158 1 291 1 65 1 17 1 115 1 171 1 139 1 220 1 175 2 356 1 374 1 72 1 358 2 177 1 179 1 
277 2 145 1 317 2 334 1 285 1 209 1 87 2 90 1 108 2 342 1 291 1 242 1 139 1 220 1 356 1 175 4 72 1 358 2 250 2 177 2 179 1 27 1 
145 1 277 2 317 2 80 1 334 1 285 1 233 1 336 1 184 1 363 1 209 1 188 1 87 2 322 1 107 1 156 1 12 1 342 1 108 2 158 1 132 1 291 1 17 1 242 1 115 1 171 1 139 1 220 1 175 4 356 1 72 1 250 2 358 2 313 1 177 2 27 1 179 1 
145 1 277 2 317 1 227 1 334 1 285 1 184 1 319 1 209 1 87 1 39 1 90 1 107 1 108 1 91 1 291 1 242 1 139 1 220 1 356 1 175 3 72 1 358 2 142 1 250 1 177 1 144 1 27 1 179 1 
277 9 145 3 28 2 334 3 3 1 232 1 285 3 337 1 102 1 209 3 129 1 342 3 108 6 64 1 323 1 347 1 307 2 163 1 242 3 139 2 373 1 356 2 175 19 72 2 358 4 177 10 202 1 332 2 179 2 27 3 
145 2 277 14 146 1 28 1 147 1 334 3 3 2 285 2 337 2 102 1 209 3 129 1 287 1 268 1 341 1 108 4 342 2 64 1 347 2 307 2 94 1 163 2 242 3 139 3 373 1 356 3 175 26 375 2 72 3 358 6 177 12 27 2 332 4 179 3 
277 20 145 5 146 1 28 1 147 1 280 1 183 1 334 5 3 3 285 4 337 3 102 1 209 4 129 1 287 1 268 1 341 1 43 1 342 4 108 8 64 1 323 1 240 1 347 2 307 4 94 1 163 1 194 1 242 4 139 3 373 1 199 1 174 1 356 3 175 41 375 1 72 3 358 6 177 21 202 1 332 4 179 3 27 4 
277 20 145 4 146 1 28 1 147 1 280 1 183 1 334 5 3 3 285 3 337 3 102 1 209 4 129 1 287 1 268 1 341 1 43 1 342 4 108 7 64 1 323 1 240 1 347 2 307 4 94 1 163 1 194 1 242 4 139 4 373 1 199 1 174 1 356 4 175 38 375 2 72 4 358 8 177 18 202 1 332 4 179 4 27 3 
277 27 145 8 146 1 28 1 147 1 280 1 183 1 334 8 3 4 285 7 337 2 102 1 209 7 129 1 287 1 268 1 341 1 43 1 342 7 108 14 64 1 323 2 347 1 307 4 94 1 163 1 194 1 242 7 139 2 373 1 199 1 174 1 356 2 175 52 375 1 72 2 358 4 177 25 254 2 332 4 179 2 27 7 
35 1 248 1 161 1 16 1 30 1 190 1 267 1 314 1 137 1 352 1 
170 1 218 1 
35 1 236 1 105 1 16 1 30 1 190 1 267 1 314 1 93 1 
79 1 161 1 368 1 16 1 293 1 30 1 137 1 371 2 35 1 248 1 302 1 153 1 328 1 364 1 190 1 267 1 314 1 191 1 
79 1 161 1 368 1 16 1 293 1 30 1 137 1 371 2 35 1 248 1 302 1 153 1 328 1 364 1 190 1 267 1 314 1 191 1 
79 1 161 1 368 1 16 1 293 1 30 1 137 1 371 2 35 1 248 1 302 1 153 1 328 1 364 1 190 1 267 1 314 1 191 1 
230 1 370 1 260 1 
230 1 370 1 260 1 
344 1 215 1 
344 1 215 1 230 1 
247 1 89 1 
79 1 30 1 362 1 184 2 339 1 340 1 35 1 6 1 319 2 302 1 364 1 190 1 267 1 89 1 107 2 191 1 91 2 343 1 65 1 16 1 247 1 371 1 218 1 170 1 142 2 314 1 296 1 
370 1 260 1 
344 1 215 1 230 1 
277 1 299 2 80 2 283 1 258 1 233 2 184 2 303 1 90 1 107 2 12 2 91 2 158 1 291 1 17 1 135 1 246 1 115 1 171 1 139 1 219 1 220 1 356 1 294 1 175 2 374 1 357 1 72 1 358 2 177 1 179 1 
110 1 80 1 17 1 233 1 115 1 168 1 171 1 262 1 97 1 266 1 11 1 12 1 222 1 158 1 
226 1 80 1 193 1 182 1 243 1 233 1 33 1 115 1 168 1 169 1 8 1 263 1 11 1 213 1 75 1 12 1 158 1 276 2 
226 1 80 2 193 1 182 1 243 1 233 2 336 1 33 1 115 1 168 1 169 1 8 1 263 1 11 1 213 1 75 1 12 2 158 1 276 2 
226 1 80 1 182 1 243 1 233 1 33 1 115 1 169 1 86 1 8 1 263 1 11 1 213 1 75 1 12 1 158 1 276 2 
176 1 
206 1 359 1 31 1 34 1 185 1 272 1 9 1 328 1 269 1 13 1 
145 2 348 1 242 2 334 2 335 5 285 2 34 5 209 2 210 1 301 5 9 5 328 5 305 2 270 5 298 10 
206 1 79 1 127 1 328 1 333 1 191 1 
359 2 123 1 80 4 79 3 333 4 233 4 34 2 185 2 9 2 127 2 154 1 288 2 266 2 191 3 12 4 158 1 13 2 110 1 324 1 17 1 113 2 292 1 115 1 116 1 171 1 272 1 97 1 255 1 77 2 
206 1 189 1 9 1 328 1 31 1 269 1 34 1 
206 1 359 1 79 1 333 1 335 1 34 1 185 1 286 1 9 1 127 1 191 1 13 1 271 1 272 1 328 2 275 1 298 1 
145 2 206 2 0 1 333 5 334 2 100 2 335 6 336 1 209 2 210 2 301 6 9 8 266 1 10 2 269 1 305 2 106 1 12 3 270 6 158 4 13 4 113 1 17 3 348 2 66 3 68 2 115 3 22 1 311 2 171 10 272 4 73 1 223 2 77 2 359 4 80 3 79 5 31 1 233 3 285 2 34 9 185 4 186 2 320 2 188 3 37 2 127 3 288 1 191 5 292 1 242 2 328 8 48 2 298 12 
145 2 146 1 206 2 147 1 359 2 79 1 333 1 334 2 335 3 3 1 285 2 34 8 337 1 185 2 209 2 301 5 127 1 9 5 40 1 287 1 341 1 305 2 191 1 270 5 13 2 160 1 307 1 94 1 113 1 348 1 242 2 272 2 328 5 77 1 298 6 
145 1 359 1 79 1 227 1 148 1 183 1 334 2 125 1 259 1 34 2 184 1 185 1 56 1 319 1 9 2 305 2 107 1 191 1 43 1 91 1 13 1 348 1 194 1 21 1 272 1 221 1 142 1 122 1 
80 1 227 2 233 1 184 3 319 2 363 1 188 1 266 1 107 3 322 1 12 1 156 1 91 2 158 1 291 1 65 1 17 1 115 1 139 1 171 1 220 1 175 1 374 1 23 1 356 1 72 1 358 2 142 2 313 1 177 1 122 1 179 1 
206 2 359 1 280 1 113 1 335 2 34 1 185 1 272 1 301 2 9 2 328 4 270 2 13 1 298 4 77 1 
248 1 30 1 247 1 314 1 149 1 
141 1 30 1 314 1 
141 1 30 1 314 1 
141 1 30 1 314 1 
30 1 314 1 4 1 
30 1 314 1 4 1 
30 1 314 1 4 1 
30 1 314 1 
35 1 267 1 
277 5 145 2 183 2 194 2 334 2 139 1 102 1 221 1 356 1 175 10 72 1 358 2 177 5 43 1 342 3 108 5 179 1 27 2 
277 2 242 1 334 1 139 1 102 1 356 1 175 2 72 1 358 2 108 1 179 1 27 1 
145 1 277 2 242 1 334 1 285 1 139 1 102 1 209 1 356 1 175 4 72 1 358 2 177 2 342 1 108 2 179 1 27 1 
277 1 183 1 194 1 139 3 102 1 175 3 356 3 375 1 72 3 358 6 264 1 177 2 202 1 342 1 108 2 179 3 27 1 
277 16 145 5 280 1 183 3 334 5 3 3 285 3 337 1 101 1 102 1 209 3 264 1 43 2 61 1 108 12 342 7 323 1 131 1 307 4 194 3 165 1 242 3 139 5 199 1 174 1 356 5 175 34 375 2 72 5 358 10 177 18 202 1 179 5 27 5 
145 1 277 4 280 1 183 1 334 1 3 1 337 1 102 1 287 1 43 1 342 2 108 2 307 1 194 1 139 1 199 1 174 1 175 8 356 1 72 1 358 2 177 4 179 1 
145 1 277 6 280 1 183 1 334 2 3 1 337 1 102 1 209 1 287 1 43 1 342 2 108 3 323 1 307 2 194 1 165 1 242 1 139 2 199 1 174 1 175 11 356 2 72 2 358 4 177 5 179 2 27 1 
277 9 145 3 146 1 147 1 280 1 183 1 334 3 3 1 285 2 337 1 102 1 209 2 287 1 341 1 43 1 342 3 108 4 307 1 94 1 194 1 165 1 242 2 139 3 199 1 174 1 175 19 356 3 72 3 375 1 358 6 177 10 27 1 179 3 
277 10 145 2 146 1 147 1 280 1 183 1 334 3 3 1 285 1 337 1 102 1 209 2 287 1 341 1 43 1 342 3 108 5 307 1 94 1 194 1 165 1 242 2 139 3 199 1 174 1 175 17 356 3 375 1 72 3 358 6 177 7 27 2 179 3 
145 1 277 4 280 1 183 1 334 1 3 1 337 1 102 1 287 1 43 1 342 2 108 2 307 1 194 1 139 1 199 1 174 1 175 8 356 1 72 1 358 2 177 4 179 1 
277 6 145 2 146 1 147 1 334 2 3 1 285 2 337 1 102 1 209 2 287 1 341 1 342 1 108 2 307 1 94 1 242 2 139 1 175 12 356 1 72 1 358 2 177 6 27 1 179 1 
277 10 145 2 146 1 147 1 280 1 183 1 334 3 3 1 285 1 337 1 102 1 209 2 287 1 341 1 43 1 342 3 108 5 307 1 94 1 194 1 165 1 242 2 139 4 199 1 174 1 175 18 356 4 72 4 375 2 358 8 177 8 27 2 179 4 
277 9 145 2 146 1 147 1 334 3 3 1 285 2 337 1 102 1 209 3 287 1 341 1 342 3 108 6 307 1 94 1 242 3 139 4 175 16 356 4 72 4 375 2 358 8 177 7 202 1 27 3 179 4 
145 1 277 3 183 3 194 3 334 1 199 2 174 1 175 7 177 4 43 1 342 3 108 6 27 3 
277 10 145 2 146 1 147 1 280 1 183 1 334 3 3 1 285 1 337 1 102 1 209 2 287 1 341 1 43 1 342 3 108 4 307 1 94 1 194 1 242 2 139 4 199 1 174 1 175 18 356 4 72 4 375 2 358 8 177 8 202 1 27 1 179 4 
145 1 277 4 280 1 183 1 194 1 334 1 139 2 199 1 174 1 175 8 356 2 72 2 375 1 358 4 177 4 43 1 108 3 342 2 27 1 179 2 
277 3 145 1 280 1 183 1 194 1 334 1 199 1 174 1 189 1 175 6 177 3 43 1 342 2 108 2 
145 1 277 2 165 1 242 1 334 1 285 1 139 1 209 1 356 1 175 4 72 1 358 2 177 2 342 1 108 2 179 1 27 1 
145 1 277 3 307 2 242 1 334 1 3 1 285 1 337 1 209 1 175 7 177 4 342 1 108 2 27 1 323 1 
277 11 145 3 280 1 183 2 334 3 3 2 285 2 209 2 58 1 264 1 43 1 108 9 342 5 323 1 307 2 194 2 242 2 139 2 199 1 174 1 175 23 356 2 375 2 72 2 358 4 177 12 254 1 27 4 179 2 
307 1 175 1 177 1 
277 1 175 1 3 1 
277 3 145 1 165 1 242 1 334 1 285 1 139 1 209 1 210 1 356 1 175 6 72 1 358 2 177 3 108 3 342 2 179 1 27 1 
277 6 145 2 146 1 147 1 334 2 3 1 285 2 337 1 102 1 209 2 287 1 341 1 342 1 108 2 307 1 94 1 242 2 139 1 175 12 356 1 72 1 358 2 177 6 27 1 179 1 
277 3 145 1 183 1 194 1 334 1 175 6 177 3 43 1 342 1 108 2 27 1 
277 1 183 1 194 1 139 1 199 1 174 1 175 3 356 1 375 1 72 1 358 2 264 1 177 2 108 2 342 1 27 1 179 1 
65 1 366 1 164 1 136 1 107 1 91 1 184 1 
65 1 366 1 81 1 164 1 196 1 136 1 338 1 184 1 5 1 355 1 107 1 91 1 
110 1 80 4 17 1 233 4 336 1 115 1 171 1 97 1 266 1 155 1 12 4 14 1 158 1 
15 1 80 2 1 1 17 1 134 1 233 2 115 1 217 1 171 1 188 1 288 1 74 1 12 2 158 2 
80 1 8 1 243 1 266 1 233 1 213 1 115 1 12 1 158 1 276 1 
171 1 80 2 303 1 263 1 17 1 258 1 233 2 336 1 115 1 12 2 158 1 
110 1 80 5 17 2 2 1 233 5 336 1 115 2 171 3 303 1 97 1 288 1 266 1 12 4 14 1 157 1 158 2 
110 1 80 5 17 2 2 1 208 1 233 5 336 1 115 2 171 3 303 1 97 1 288 1 266 1 12 4 14 1 158 2 
171 1 110 1 80 1 189 1 17 1 97 1 266 1 233 1 115 1 12 1 158 1 
65 1 80 1 17 1 19 1 233 1 115 1 184 2 171 1 319 1 188 1 142 1 266 1 107 2 322 1 156 1 12 1 91 1 158 1 
214 1 65 1 80 1 17 2 19 1 259 1 233 1 115 1 184 2 171 3 186 1 319 1 37 1 188 2 142 2 288 1 41 1 107 2 322 1 156 1 12 1 91 2 158 1 
80 2 259 1 233 2 184 2 319 1 186 1 59 1 188 2 37 1 288 1 155 1 41 1 107 2 12 2 156 1 91 2 158 1 214 1 65 1 17 2 19 1 115 1 171 3 142 2 
206 1 79 2 80 3 17 1 333 1 66 1 95 1 233 3 68 1 115 1 171 4 186 1 36 1 37 1 188 1 328 1 266 1 288 1 155 1 191 2 12 3 223 1 158 1 
206 1 79 2 80 3 17 1 333 1 66 1 233 3 68 1 115 1 171 4 186 1 37 1 188 1 328 1 266 1 288 1 10 1 155 1 191 2 12 3 223 1 158 1 
80 1 233 1 115 1 12 1 83 1 158 1 
299 1 80 7 1 1 2 1 17 2 134 1 336 1 233 7 83 1 115 2 22 1 171 3 173 1 303 1 188 1 263 1 266 2 12 6 192 1 157 1 158 3 
145 1 334 1 336 1 107 2 12 1 156 1 342 2 108 2 158 1 65 2 17 1 19 1 115 1 171 1 220 2 174 1 356 2 175 6 72 2 358 4 313 1 177 3 179 2 277 3 317 1 80 1 280 1 183 1 233 1 184 2 363 1 319 1 188 1 87 1 322 1 90 1 43 1 91 1 132 1 291 2 194 1 246 1 139 2 199 1 250 1 142 1 330 1 
206 1 359 2 79 3 80 1 31 1 333 2 100 1 233 1 34 1 185 2 339 1 320 1 9 1 127 1 266 1 10 1 269 1 191 3 12 1 13 2 292 1 66 1 68 1 272 2 311 1 171 2 328 1 223 1 
80 2 17 1 336 1 68 1 233 2 83 1 115 1 22 1 171 2 188 1 106 1 12 2 158 2 
65 1 80 1 17 1 19 1 233 1 115 1 184 2 171 1 319 1 188 1 59 1 142 1 266 1 107 2 156 1 12 1 91 1 158 1 
80 1 1 1 17 1 134 1 233 1 115 1 22 1 171 1 173 1 188 1 288 1 12 1 158 2 
346 1 294 1 357 1 361 1 135 1 32 1 107 1 91 1 184 1 
346 1 249 1 360 1 
65 1 346 1 312 1 361 1 32 1 
214 1 206 1 65 1 346 1 256 1 79 2 360 1 361 2 259 1 32 2 339 1 249 1 151 1 312 2 328 1 41 1 191 2 98 1 223 1 
274 1 201 1 251 1 26 1 42 1 138 1 204 1 327 1 
279 1 114 1 138 3 327 4 235 1 274 2 128 1 251 4 42 1 26 1 109 1 204 2 44 2 239 1 
197 1 45 1 138 1 327 2 54 1 274 1 201 1 251 2 42 1 26 1 204 1 44 1 
114 1 138 1 327 3 235 2 274 1 265 1 201 1 251 3 42 1 26 1 109 2 204 1 
225 1 20 2 82 1 138 2 
201 1 326 1 251 1 26 1 42 1 327 1 
274 1 201 1 251 2 351 1 26 1 42 1 138 1 204 1 44 1 327 2 
245 1 
274 1 201 1 251 1 26 1 42 1 138 1 204 1 327 1 
274 1 189 1 138 1 204 1 
274 1 251 1 26 1 42 1 138 1 204 1 327 1 
253 1 46 1 327 1 
114 1 138 1 327 3 235 1 274 1 201 1 251 3 42 1 26 1 109 2 204 1 92 1 
274 1 67 1 251 2 26 1 42 1 138 1 204 1 44 1 327 2 
279 1 138 1 327 1 55 1 201 1 251 1 42 1 26 1 75 1 213 1 276 1 
201 1 251 1 26 1 42 1 138 1 204 1 327 1 
274 1 201 1 251 1 26 1 42 1 204 2 327 1 
349 1 138 1 327 2 201 1 251 2 42 2 26 2 120 1 204 1 315 1 
279 1 351 1 138 2 327 3 274 1 201 1 251 3 42 1 26 1 297 1 204 1 44 2 239 1 
226 1 138 1 327 2 274 1 126 1 8 1 201 1 251 2 42 1 26 1 75 1 213 1 204 1 44 1 276 2 
111 1 279 1 67 1 138 2 327 4 274 1 201 1 251 4 42 2 26 2 204 1 44 2 239 1 
351 1 138 1 327 3 274 1 201 1 251 3 42 1 26 1 109 1 44 1 204 1 
279 1 128 1 138 1 239 1 
138 1 204 1 

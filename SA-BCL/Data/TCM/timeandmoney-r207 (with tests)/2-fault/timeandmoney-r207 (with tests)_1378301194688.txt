#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 226 (150,328) (150,328) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 226 (150,328) (150,328) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 226 (150,328) (150,328) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 226 (150,328) (150,328) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 226 (140,160) (140,160) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 81 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 347 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 347 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 1 328 1 216 1 150 1 
226 1 328 1 216 1 150 1 
226 1 328 1 216 1 150 1 
226 1 328 1 216 1 150 1 
361 1 216 1 
226 1 61 1 140 1 160 1 216 1 276 1 
216 1 81 1 
216 1 347 1 
216 1 347 1 
105 1 52 1 332 1 
277 2 26 1 332 1 
341 2 135 2 318 2 215 2 290 1 56 2 324 1 340 2 
341 2 214 2 18 1 20 1 120 1 215 2 53 1 290 1 56 2 270 1 293 1 247 2 128 1 104 1 318 3 295 1 106 1 321 1 131 1 221 1 80 1 324 1 201 1 173 1 367 2 135 3 330 1 205 1 279 1 183 1 208 2 89 1 162 1 305 1 338 2 47 1 340 2 
341 1 178 1 252 1 135 1 318 1 215 1 290 1 56 1 292 1 340 1 
228 1 135 1 181 1 67 1 332 1 292 1 116 1 248 1 28 1 105 1 318 1 320 1 307 1 340 1 
341 1 228 2 135 1 215 1 181 1 67 1 56 1 332 1 292 1 116 2 105 1 318 1 320 1 307 1 340 1 
116 1 228 1 153 1 122 1 281 1 
116 2 228 2 51 1 105 1 122 1 281 1 332 1 40 1 
116 1 228 1 122 1 
341 1 116 1 178 1 228 1 252 1 135 1 318 1 215 1 290 1 56 1 291 1 281 1 292 1 340 1 
332 1 
316 1 116 2 228 2 105 1 122 1 281 1 332 1 40 1 
35 1 228 5 310 1 311 1 312 2 258 1 122 2 281 2 332 1 40 1 219 1 116 5 105 1 43 2 44 1 73 1 13 1 82 1 142 2 
341 3 262 1 135 3 318 3 215 3 56 1 324 1 340 3 
341 1 252 1 135 1 318 1 215 1 292 1 340 1 
341 1 135 1 249 1 318 1 215 1 56 1 292 1 34 1 340 1 
341 3 214 2 18 1 120 1 53 1 215 3 290 1 56 2 270 1 292 1 293 1 247 1 128 1 249 1 318 4 106 1 320 1 321 1 80 1 221 1 131 1 324 1 173 1 109 1 367 1 228 1 135 4 330 1 205 1 279 1 181 1 67 1 183 1 208 1 162 1 116 1 305 1 262 1 188 1 286 1 338 1 307 1 47 1 340 3 
341 1 248 1 262 1 135 2 318 2 215 1 64 1 324 1 340 2 
341 3 228 1 135 3 215 3 67 1 181 1 56 1 332 1 292 1 116 1 102 1 262 2 249 1 188 1 318 3 286 1 320 1 307 1 340 3 
341 2 135 2 215 2 56 1 246 1 169 1 262 1 249 1 318 2 340 2 
367 1 120 1 135 1 53 1 205 1 208 1 293 1 162 1 247 1 318 1 131 1 221 1 80 1 324 1 173 1 
367 1 135 1 53 1 205 1 78 1 208 1 293 1 139 1 162 1 247 1 318 1 131 1 80 1 324 1 173 1 
214 2 18 1 246 2 169 2 128 1 130 1 295 2 106 1 32 1 297 1 321 2 86 2 204 1 330 1 260 1 183 1 207 1 352 1 41 1 92 1 237 1 338 4 47 1 238 1 
341 1 177 1 135 1 318 1 215 1 181 1 292 1 340 1 
52 1 324 1 
341 1 135 2 215 1 56 1 249 1 318 2 324 2 34 1 340 2 
246 1 169 1 86 1 
367 1 120 1 135 1 53 1 205 1 208 1 293 1 162 1 247 1 318 1 131 1 221 1 80 1 324 1 357 1 173 1 
341 1 367 1 120 1 135 2 53 1 215 1 205 1 293 1 208 1 162 1 169 1 247 1 262 1 188 1 318 2 80 1 131 1 221 1 173 1 340 1 
341 4 77 1 135 5 215 4 56 1 248 1 262 2 249 1 188 1 318 5 64 1 324 1 15 1 340 5 
341 2 177 1 252 1 135 2 318 2 215 2 292 1 340 2 
365 1 72 1 298 1 
146 1 72 1 298 1 
146 1 72 1 298 1 
146 1 72 1 298 1 
72 1 298 1 
72 1 298 1 
317 1 308 1 
317 1 308 1 
317 1 308 1 
365 1 72 1 298 1 
365 1 72 1 298 1 
171 1 72 1 298 1 
76 1 317 1 134 1 72 2 298 2 308 1 
76 1 16 1 349 2 228 2 4 2 38 1 217 1 368 1 280 2 244 1 332 1 116 2 69 3 284 1 234 2 72 2 298 2 156 1 158 2 
341 2 215 2 289 1 244 1 1 1 152 1 274 1 318 2 33 1 171 1 298 1 324 1 322 1 349 1 228 1 4 1 135 2 280 1 302 1 116 1 69 1 234 1 72 1 340 2 
61 1 39 1 223 1 
61 1 276 1 223 1 
61 3 42 1 243 1 39 2 276 1 196 1 
61 2 42 1 129 1 39 1 276 1 196 1 
61 2 42 2 39 1 276 1 196 1 
360 2 22 2 312 1 121 1 311 3 122 1 26 1 219 2 125 1 130 1 105 1 33 1 322 1 84 1 277 3 228 5 299 1 204 1 281 4 332 2 302 1 260 1 40 1 353 1 116 5 92 1 285 2 43 1 73 1 165 1 118 1 142 1 
22 6 312 2 121 2 311 8 122 6 26 3 194 5 219 6 27 1 153 5 130 3 29 1 105 1 33 4 277 9 348 1 36 1 228 9 299 2 204 3 7 1 281 7 332 5 260 3 40 1 353 3 116 9 92 3 285 6 71 1 43 2 73 1 13 1 118 1 142 2 
360 1 312 1 121 1 311 3 22 2 26 2 125 1 219 2 105 1 130 1 33 1 277 4 228 3 299 1 204 1 281 2 332 3 260 1 353 1 116 3 92 1 285 2 43 1 165 1 13 1 142 1 
360 2 22 4 312 1 121 1 311 5 26 3 125 1 219 4 27 1 105 1 130 2 33 2 277 7 348 1 36 1 228 4 299 1 204 2 281 3 332 4 260 2 353 2 116 4 92 2 285 4 43 1 13 1 165 1 142 1 
162 1 173 1 
162 1 21 1 362 2 205 1 339 1 173 3 
52 1 362 1 173 1 
11 1 173 1 
315 1 
162 1 205 1 173 1 
282 1 173 1 
268 1 231 1 124 1 260 1 207 3 352 2 59 1 60 1 117 2 92 1 275 1 189 1 295 4 12 1 321 3 338 7 14 1 
268 1 231 1 124 1 260 1 207 3 352 2 59 1 60 1 117 2 92 1 275 1 189 1 295 4 12 1 321 3 338 7 14 1 
268 1 231 1 232 1 124 1 260 1 207 3 352 2 59 1 60 1 117 2 92 1 275 1 189 1 295 4 12 1 321 3 338 7 14 1 
268 2 214 2 240 1 124 2 59 1 60 5 273 1 128 1 275 1 130 3 106 1 295 16 321 15 2 1 222 4 6 1 204 3 180 1 231 2 183 1 207 10 260 4 352 5 353 3 210 3 117 3 92 4 12 1 189 2 236 1 338 31 47 1 14 1 359 1 
268 1 214 4 124 1 59 1 60 1 273 1 128 2 220 1 106 2 295 5 321 4 231 1 260 1 183 2 207 4 352 3 117 2 92 1 12 1 189 1 192 1 338 9 47 2 14 1 
367 1 247 1 216 1 190 1 371 1 208 1 
17 1 242 1 243 1 293 1 245 1 127 1 247 1 61 2 200 1 63 1 250 1 276 1 80 1 155 1 223 1 326 1 367 1 108 1 5 1 112 3 159 1 39 1 136 2 334 1 333 1 208 1 141 1 190 1 358 3 212 1 
17 1 242 1 243 1 293 1 245 1 127 1 247 1 61 2 200 1 63 1 276 1 80 1 223 1 367 1 5 1 112 2 159 1 39 1 136 2 334 1 333 1 208 1 190 1 358 2 212 1 
241 1 242 2 293 1 127 2 247 1 250 1 80 1 131 1 173 1 367 1 108 1 66 1 112 1 334 2 208 1 162 1 141 1 336 1 306 1 190 2 265 1 358 1 309 1 
367 1 247 1 200 1 216 1 190 1 208 1 
239 1 
292 1 293 1 197 2 199 1 247 2 248 1 105 1 3 1 66 1 299 1 203 2 254 2 8 1 67 1 206 1 208 2 303 1 209 2 162 1 116 5 264 1 355 1 73 1 265 1 307 1 311 2 312 1 122 6 26 2 123 1 219 2 28 1 318 1 320 1 131 2 80 1 325 2 323 1 173 1 277 2 367 2 228 5 85 1 135 1 181 1 331 4 332 2 40 3 91 1 233 2 43 1 370 1 49 2 142 1 340 1 
122 2 292 1 316 1 199 1 248 1 28 1 318 1 320 1 323 1 228 3 135 1 254 1 8 1 181 1 67 1 331 2 206 1 40 1 116 3 91 1 307 1 340 1 
122 1 292 1 316 1 199 1 248 1 28 1 318 1 105 1 320 1 323 1 228 3 135 1 8 1 181 1 67 1 331 3 206 1 332 1 40 1 116 3 91 1 233 1 307 1 340 1 
122 2 292 1 316 1 199 1 248 1 28 1 318 1 105 1 320 1 323 1 228 3 135 1 254 1 8 1 181 1 67 1 331 3 206 1 332 1 40 1 209 1 116 3 91 1 233 1 307 1 340 1 
292 1 197 2 199 1 248 1 105 5 203 2 254 4 257 1 67 1 8 1 206 1 303 1 209 4 116 5 73 1 307 1 312 1 311 1 122 7 26 2 316 1 219 1 28 1 318 1 320 1 323 1 325 2 228 5 229 1 135 1 331 6 181 1 332 5 88 1 40 3 90 1 91 1 233 4 43 1 370 1 287 1 49 2 142 1 340 1 
292 1 197 2 199 1 248 1 105 1 203 2 254 2 67 1 8 1 206 1 303 1 209 2 116 4 355 1 73 1 307 1 312 1 311 1 122 4 26 2 219 1 28 1 318 1 320 1 323 1 325 2 277 2 228 4 135 1 331 4 181 1 332 2 40 2 91 1 233 2 43 1 370 1 49 2 142 1 340 1 
311 1 312 1 122 4 26 2 292 1 219 1 197 2 199 1 248 1 28 1 105 1 318 1 320 1 325 2 323 1 228 4 203 2 135 1 254 2 257 1 8 1 181 1 67 1 331 4 332 1 206 1 88 1 303 1 40 2 209 2 116 4 91 1 233 2 43 1 370 1 73 1 307 1 287 1 49 2 142 1 340 1 
311 1 312 1 122 4 26 2 292 1 219 1 197 2 199 1 248 1 28 1 105 1 318 1 320 1 325 2 323 1 228 4 203 2 135 1 254 2 257 1 8 1 181 1 67 1 331 4 332 1 206 1 88 1 303 1 40 2 209 2 116 4 91 1 233 2 43 1 370 1 73 1 307 1 287 1 49 2 142 1 340 1 
311 1 313 1 312 1 122 4 24 1 292 1 219 1 197 2 199 1 248 1 28 1 105 1 318 1 320 1 323 1 277 2 228 4 135 1 254 2 230 2 8 1 181 1 67 1 331 4 114 2 332 1 206 1 137 1 40 2 209 2 116 4 91 1 233 2 43 1 370 1 73 1 307 1 287 1 49 2 142 1 340 1 
311 1 312 1 122 5 26 2 292 1 219 1 197 2 199 1 248 1 28 1 105 1 318 1 320 1 325 2 323 1 228 4 203 2 135 1 254 3 257 1 8 1 181 1 67 1 331 5 332 1 206 1 88 1 303 1 40 2 209 3 116 4 90 1 91 1 233 3 43 1 370 1 73 1 307 1 287 1 49 2 142 1 340 1 
311 1 312 1 122 5 26 2 292 1 219 1 197 2 199 1 248 1 28 1 105 1 318 1 320 1 325 2 323 1 228 4 203 2 135 1 254 3 257 1 8 1 181 1 67 1 331 5 332 1 206 1 88 1 303 1 40 2 209 3 116 4 90 1 91 1 233 3 43 1 370 1 73 1 307 1 287 1 49 2 142 1 340 1 
292 1 197 2 199 1 248 1 105 1 254 2 67 1 8 1 114 2 206 1 209 2 116 4 355 1 73 1 307 1 312 1 311 1 122 4 219 1 28 1 318 1 320 1 323 1 277 2 228 4 135 1 230 2 331 4 181 1 332 1 137 1 40 2 91 1 233 2 43 1 370 1 49 2 142 1 340 1 
18 1 214 2 86 1 204 1 330 1 207 1 183 1 246 1 60 1 169 1 92 1 128 1 106 1 295 2 237 1 338 2 238 1 47 1 
18 1 214 2 86 1 330 1 207 1 183 1 260 1 352 1 246 1 169 1 128 1 130 1 106 1 32 1 338 2 321 2 238 1 47 1 
214 2 18 1 246 2 169 2 60 1 128 1 130 1 295 2 106 1 321 2 86 2 204 1 330 1 183 1 207 2 260 1 352 1 353 1 92 1 338 4 47 1 238 1 
18 1 214 2 86 1 204 1 330 1 207 1 183 1 246 1 60 1 169 1 92 1 128 1 106 1 295 2 237 1 338 2 47 1 74 1 
18 1 214 2 86 1 330 1 207 1 183 1 260 1 352 1 246 1 169 1 128 1 130 1 106 1 32 1 338 2 321 2 47 1 74 1 
214 2 18 1 246 2 169 2 60 1 128 1 130 1 295 2 106 1 321 2 86 2 204 1 330 1 183 1 207 2 260 1 352 1 353 1 92 1 338 4 47 1 74 1 
214 2 18 1 246 2 169 2 60 1 128 1 130 1 295 2 106 1 321 2 86 2 204 1 330 1 183 1 207 2 260 1 352 1 353 1 92 1 338 4 47 1 
18 1 214 2 120 1 53 1 293 1 247 1 128 1 318 1 295 1 106 1 321 1 80 1 221 1 131 1 324 1 173 1 367 1 135 1 205 1 279 1 330 1 208 1 183 1 89 1 162 1 305 1 338 2 47 1 
18 1 214 2 53 1 364 1 78 1 293 1 247 1 128 1 318 1 295 1 106 1 321 1 80 1 131 1 324 1 173 1 367 1 135 1 205 1 330 1 208 1 183 1 89 1 162 1 139 1 305 1 338 2 47 1 
214 2 18 1 246 2 169 2 60 1 128 1 130 1 295 2 106 1 321 2 225 1 86 2 204 1 330 1 183 1 207 2 260 1 352 1 353 1 92 1 338 4 47 1 
18 1 214 2 120 1 53 1 293 1 246 2 60 1 169 2 247 1 128 1 130 1 318 1 295 2 106 1 321 2 80 1 221 1 173 1 367 1 86 2 278 1 135 1 204 1 205 1 279 1 330 1 260 1 207 2 208 1 183 1 352 1 353 1 162 1 92 1 338 4 371 1 47 1 
341 1 214 2 18 1 147 1 215 1 56 1 246 1 60 1 169 1 249 1 128 1 130 1 318 1 106 1 295 2 321 1 225 1 135 1 86 1 204 1 330 1 260 1 207 1 183 1 353 1 92 1 338 3 47 1 340 1 
214 2 18 1 52 1 124 1 246 1 59 1 169 1 128 1 106 1 295 3 321 3 324 2 86 1 330 1 183 1 207 2 260 1 352 2 117 1 92 1 189 1 12 1 338 6 47 1 238 1 14 1 
214 4 18 2 246 4 60 1 169 11 103 1 128 2 30 1 130 1 106 2 295 8 2 1 154 1 321 6 324 1 222 3 202 1 225 1 86 11 6 1 204 2 330 1 207 2 183 2 260 1 89 1 352 1 353 2 210 3 92 2 305 1 338 14 47 2 
341 1 18 1 214 2 120 1 53 1 215 1 149 1 293 1 246 1 272 1 247 1 128 1 318 2 106 1 295 1 321 1 80 1 221 1 131 1 324 1 173 1 225 1 367 1 135 2 205 1 330 1 208 1 183 1 89 1 138 1 162 1 262 1 305 1 188 1 338 2 357 1 47 1 340 1 
341 1 343 1 53 2 293 2 59 1 246 7 60 4 247 3 200 1 106 3 295 10 157 1 113 1 204 2 205 2 260 3 208 3 207 8 352 4 353 2 162 2 117 1 305 1 262 1 12 1 14 1 214 6 18 3 120 2 215 1 269 2 124 1 79 2 169 7 128 3 318 3 130 2 321 10 131 1 221 2 80 2 324 2 173 2 225 1 367 3 135 3 278 2 329 2 86 7 330 3 279 2 183 3 89 1 92 3 188 1 189 1 338 20 47 3 340 1 
341 1 214 4 18 2 215 1 25 1 293 2 247 8 128 2 200 1 318 1 106 2 295 1 321 1 80 2 131 2 201 2 173 3 367 7 66 1 111 1 327 1 135 1 330 2 300 1 351 1 304 1 208 8 183 2 89 1 162 2 262 1 305 1 338 2 265 1 371 1 238 1 47 2 74 1 340 1 
341 1 214 2 18 1 215 1 56 1 246 1 169 1 249 1 128 1 318 1 130 1 106 1 295 1 321 2 172 1 225 1 86 1 135 1 204 1 330 1 207 1 183 1 260 1 352 1 353 1 92 1 338 3 47 1 340 1 
0 1 145 1 99 1 100 1 55 4 59 1 60 4 346 2 295 20 106 3 2 3 204 4 6 1 256 1 161 1 260 5 207 8 352 4 353 4 210 3 117 1 12 1 14 1 214 6 19 1 124 1 314 1 126 1 273 1 128 3 220 1 130 4 321 21 366 1 222 4 176 1 87 1 183 3 92 5 189 1 338 41 191 1 47 3 
0 1 19 1 214 8 145 1 99 1 100 1 55 4 124 1 314 1 126 1 59 1 60 3 273 2 346 2 128 4 220 1 130 3 106 4 295 20 2 3 366 1 321 18 222 4 176 1 87 1 6 1 204 4 256 1 161 1 183 4 207 7 260 4 352 4 353 4 117 1 210 3 92 5 189 1 12 1 191 1 338 38 47 4 14 1 
0 1 19 1 214 4 145 1 100 1 55 4 124 1 314 1 126 1 59 1 60 7 273 1 346 1 128 2 220 1 130 7 106 2 295 27 154 2 2 2 366 1 321 25 222 4 176 1 87 1 6 2 204 7 256 1 161 1 183 2 207 14 260 8 352 7 353 7 117 1 210 4 92 8 189 1 12 1 338 52 47 2 14 1 
214 4 99 1 100 1 55 2 126 1 60 3 346 1 128 2 220 1 130 3 31 1 106 2 295 9 2 1 366 1 321 10 222 2 6 1 204 3 256 2 161 1 183 2 207 6 260 3 352 3 353 3 210 1 92 3 338 19 47 2 
0 1 19 1 214 6 145 1 100 2 55 4 314 1 126 1 60 2 273 2 346 2 128 3 220 1 130 2 106 3 295 14 321 12 366 1 2 2 222 2 176 1 87 1 204 3 256 1 161 1 207 4 260 2 183 3 352 2 353 3 210 2 92 3 338 26 47 3 
76 1 16 1 349 1 228 1 4 1 217 1 368 1 280 1 244 1 332 1 116 1 69 2 284 1 234 1 72 1 298 1 156 1 158 1 
76 1 16 1 349 1 228 1 4 1 217 1 368 1 280 1 244 1 332 1 116 1 69 2 284 1 234 1 72 1 298 1 156 1 158 1 
76 1 16 1 349 1 228 1 4 1 217 1 368 1 280 1 244 1 332 1 116 1 69 2 284 1 234 1 72 1 298 1 156 1 158 1 
134 1 365 1 344 1 
134 1 365 1 344 1 
146 1 50 1 
134 1 146 1 50 1 
1 1 289 1 
341 2 215 2 289 1 1 1 152 1 274 1 318 2 33 1 171 1 298 1 324 1 322 1 158 1 349 1 228 1 4 1 135 2 368 1 280 1 281 1 302 1 116 1 69 1 234 1 72 1 48 1 340 2 
76 1 349 1 284 1 4 1 234 1 217 1 72 1 251 1 280 1 298 1 
152 1 171 1 
133 1 349 1 4 1 234 1 337 1 72 1 148 1 280 1 298 1 
365 1 344 1 
134 1 146 1 50 1 
18 1 214 2 57 1 293 1 151 1 247 2 128 1 318 2 106 1 295 1 296 1 321 1 80 1 201 2 173 1 225 1 367 2 135 2 330 1 300 1 304 1 208 2 183 1 89 1 185 1 162 1 305 1 163 1 338 2 47 1 340 2 
367 2 17 1 227 1 243 1 39 1 333 1 293 1 208 2 58 1 127 1 247 2 61 2 200 1 276 1 80 1 371 1 155 1 223 1 75 1 
367 1 17 1 243 1 39 1 333 1 208 1 293 1 58 1 127 1 247 1 61 2 200 1 276 1 80 1 97 1 155 1 223 1 
367 1 227 1 66 1 293 1 208 1 162 1 127 1 247 1 306 1 80 1 131 1 265 1 83 1 173 1 
367 1 17 1 227 1 243 1 39 1 333 1 208 1 293 1 58 1 127 1 247 1 61 2 200 1 276 1 80 1 155 1 223 1 75 1 
235 1 
219 1 310 1 311 1 105 1 52 1 258 1 332 1 
311 1 312 1 122 1 26 1 219 1 105 1 325 1 277 1 228 1 203 1 332 2 303 1 40 1 116 1 43 1 73 1 142 1 
144 2 54 2 293 3 247 3 105 2 107 1 299 2 204 2 258 1 205 3 67 2 208 3 260 2 9 1 353 2 162 3 261 1 116 5 11 3 354 1 356 1 73 4 267 2 310 1 311 9 312 4 22 6 362 2 122 5 123 1 26 6 219 8 130 2 80 4 131 1 173 10 132 2 277 12 367 3 228 5 329 2 37 2 282 2 332 8 335 2 40 3 186 2 92 2 285 6 43 4 46 2 371 1 339 1 142 4 
0 1 19 1 144 2 145 1 22 5 311 8 312 2 122 1 123 1 26 3 314 1 219 5 130 2 105 2 2 1 222 1 277 6 228 1 299 1 87 1 204 2 332 5 260 2 40 1 353 2 116 1 186 1 210 1 92 2 285 5 93 1 43 2 73 2 142 2 372 1 
341 1 144 2 342 1 312 1 311 2 215 1 290 1 124 1 56 1 291 1 292 1 219 2 59 1 318 1 228 1 178 1 252 1 135 1 257 1 260 1 116 1 186 1 92 2 43 1 189 1 73 1 142 1 340 1 
310 1 312 1 311 1 258 1 332 1 219 1 43 1 105 1 73 1 142 1 
277 10 144 2 329 1 204 2 22 5 311 5 26 5 332 5 260 2 353 2 219 5 186 1 92 2 285 5 130 2 
116 1 228 1 105 1 122 1 332 1 40 1 
119 1 312 2 311 2 122 4 123 2 293 1 219 2 247 4 80 1 131 2 173 1 3 1 367 4 228 3 66 1 299 2 208 4 40 2 283 1 162 1 116 3 264 1 43 2 354 2 356 1 73 1 265 1 13 1 142 2 
341 2 214 2 18 1 120 1 215 2 53 1 290 1 56 2 270 1 293 1 247 1 128 1 318 3 106 1 321 1 131 1 221 1 80 1 324 1 173 1 367 1 135 3 279 1 205 1 330 1 183 1 208 1 162 1 305 1 338 1 47 1 340 2 
277 4 299 1 22 2 312 1 311 1 26 2 123 1 332 4 219 2 117 1 285 2 43 1 105 2 73 1 142 1 
349 1 369 1 280 1 
349 1 263 1 280 1 
349 1 263 1 280 1 
349 1 263 1 280 1 
349 1 280 1 
72 1 298 1 
349 1 369 1 280 1 
349 1 369 1 280 1 
174 1 349 1 1 1 284 1 280 1 
214 2 145 1 124 1 59 1 128 1 220 1 106 1 295 4 321 4 2 1 222 1 260 1 183 1 207 2 352 2 117 1 210 1 92 1 12 1 189 1 338 8 47 1 14 1 
214 4 145 1 363 1 124 1 59 1 60 1 128 2 220 1 106 2 295 6 321 5 2 1 222 2 6 1 204 1 260 1 183 2 207 3 352 2 353 1 117 1 210 1 92 2 189 1 12 1 338 11 47 2 14 1 
0 1 19 1 214 6 145 1 363 1 124 1 314 1 59 1 60 1 273 1 128 3 220 1 130 2 106 3 295 9 321 10 2 1 222 1 87 1 204 2 183 3 260 3 207 4 352 3 353 2 117 1 210 1 92 3 189 1 12 1 338 19 47 3 14 1 
0 1 214 6 19 1 145 1 363 1 124 1 314 1 59 1 60 2 273 1 128 3 220 1 130 1 106 3 295 10 321 7 2 1 222 1 87 1 204 2 183 3 260 2 207 5 352 3 353 2 117 1 210 1 92 3 189 1 12 1 338 17 47 3 14 1 
214 2 145 1 124 1 59 1 128 1 220 1 106 1 295 4 321 4 2 1 222 1 260 1 183 1 207 2 352 2 117 1 210 1 92 1 12 1 189 1 338 8 47 1 14 1 
0 1 214 2 19 1 145 1 314 1 60 1 128 1 220 1 130 2 106 1 295 6 321 6 2 1 222 1 87 1 204 2 183 1 260 2 207 2 352 1 353 2 210 1 92 2 338 12 47 1 
0 1 19 1 214 8 145 1 363 1 124 1 314 1 59 1 60 2 273 2 128 4 220 1 130 1 106 4 295 10 321 8 2 1 222 1 87 1 204 2 183 4 260 2 207 5 352 3 353 2 117 1 210 1 92 3 189 1 12 1 338 18 47 4 14 1 
0 1 19 1 214 8 145 1 99 1 314 1 60 3 273 2 128 4 220 1 130 2 106 4 295 9 321 7 2 1 222 1 87 1 204 3 183 4 260 2 207 6 352 3 353 3 210 1 92 3 338 16 47 4 
124 3 260 1 207 6 352 3 59 1 60 3 92 1 12 1 189 3 295 3 321 4 338 7 14 2 
0 1 19 1 214 8 145 1 99 1 124 1 314 1 59 1 60 1 273 2 128 4 220 1 130 1 106 4 295 10 321 8 2 1 222 1 87 1 204 2 183 4 260 2 207 4 352 3 353 2 117 1 210 1 92 3 189 1 12 1 338 18 47 4 14 1 
214 4 124 1 260 1 207 3 183 2 352 2 59 1 117 1 60 1 92 1 273 1 128 2 295 4 106 2 12 1 189 1 321 4 338 8 47 2 14 1 
52 1 124 1 207 2 260 1 352 2 59 1 117 1 92 1 12 1 189 1 295 3 321 3 338 6 14 1 
214 2 204 1 363 1 260 1 207 2 183 1 352 1 353 1 60 1 92 1 128 1 130 1 106 1 295 2 321 2 338 4 47 1 
6 1 204 1 260 1 207 2 352 1 353 1 210 1 60 1 92 1 130 1 295 3 2 1 321 4 338 7 222 2 
214 4 124 2 59 1 60 4 273 2 103 1 128 2 130 2 295 11 106 2 321 12 154 1 222 2 204 2 6 1 207 9 260 3 183 2 352 5 353 2 115 1 117 1 210 2 92 3 189 2 12 1 338 23 47 2 14 1 
338 1 321 1 222 1 
210 1 295 1 338 1 
214 2 329 1 204 1 363 1 183 1 207 3 260 1 352 2 353 1 60 1 92 1 128 1 130 1 106 1 295 3 321 3 338 6 47 1 
0 1 214 2 19 1 145 1 314 1 60 1 128 1 220 1 130 2 106 1 295 6 321 6 2 1 222 1 87 1 204 2 183 1 260 2 207 2 352 1 353 2 210 1 92 2 338 12 47 1 
124 1 260 1 207 2 352 1 59 1 60 1 92 1 295 3 189 1 338 6 321 3 
214 2 124 1 207 2 183 1 352 1 115 1 60 1 273 1 128 1 295 1 189 1 106 1 12 1 321 2 338 3 47 1 14 1 
214 2 342 1 124 2 183 1 207 5 260 2 352 3 59 1 60 2 92 2 128 1 220 1 106 1 189 2 295 5 338 10 321 5 47 1 
214 2 204 1 183 1 207 1 60 1 92 1 128 1 220 1 106 1 295 2 338 2 47 1 
214 2 204 1 260 1 207 2 183 1 352 1 353 1 60 1 92 1 128 1 220 1 130 1 106 1 295 2 321 2 338 4 47 1 
214 6 99 1 124 1 183 3 207 2 352 1 115 1 60 1 273 1 128 3 220 1 106 3 189 1 295 1 321 2 338 3 47 3 
214 10 99 1 363 1 124 3 59 2 60 5 273 2 128 5 220 1 130 3 106 5 295 16 321 18 2 1 222 4 6 1 204 3 180 1 183 5 207 12 260 5 352 7 353 3 115 1 117 1 210 3 92 5 189 3 12 1 236 1 338 34 47 5 14 1 359 1 
248 1 135 1 318 1 64 1 324 1 340 1 213 1 
167 1 345 1 170 1 248 1 135 1 318 1 64 1 96 1 324 1 224 1 340 1 213 1 
162 1 367 1 66 1 247 1 52 1 80 1 265 1 131 1 293 1 173 1 208 1 
341 1 367 1 120 1 135 2 53 1 215 1 205 1 208 1 293 1 162 1 247 1 262 1 318 2 80 1 131 1 324 1 173 1 340 1 
341 1 367 1 120 1 135 2 53 1 215 2 54 1 205 2 181 1 282 1 292 1 208 1 293 1 162 2 247 1 262 1 318 2 354 1 320 1 80 1 324 1 173 3 340 2 
341 1 215 2 53 1 54 1 218 1 78 1 292 1 293 1 247 2 318 2 320 1 80 1 324 1 173 3 367 2 135 2 205 2 181 1 282 1 208 2 162 2 262 1 354 1 340 2 
367 3 228 2 362 1 205 1 54 1 67 1 122 1 218 1 332 1 282 1 208 3 293 1 162 1 116 2 198 1 247 3 11 1 105 1 94 1 354 1 131 1 80 1 173 4 
367 3 228 2 37 1 362 1 205 1 54 1 67 1 122 1 218 1 332 1 282 1 208 3 293 1 162 1 116 2 247 3 11 1 105 1 354 1 131 1 80 1 173 4 
367 1 247 1 327 1 80 1 293 1 208 1 
367 6 110 1 111 1 327 1 205 1 25 1 351 1 304 1 208 7 293 2 162 2 68 1 247 7 200 1 95 1 131 2 80 3 371 1 339 1 201 1 173 3 
341 1 53 1 293 1 246 1 59 1 247 1 106 2 295 3 205 1 208 1 207 2 260 1 352 2 162 1 117 1 262 1 12 1 163 1 14 1 214 4 18 2 120 1 215 1 269 1 124 1 169 1 128 2 318 2 321 3 221 1 80 1 324 2 173 1 225 1 367 1 278 1 135 2 86 1 279 1 330 2 183 2 92 1 189 1 338 6 371 1 47 2 340 1 
310 1 311 1 312 2 362 1 122 2 219 1 247 1 105 1 131 1 173 2 132 1 367 1 228 3 37 1 258 1 67 1 281 1 332 1 208 1 335 1 40 1 116 3 11 1 43 2 356 1 73 2 46 1 142 2 
367 2 327 1 362 1 205 1 208 2 293 1 261 1 162 1 247 2 80 2 371 1 339 1 173 2 
367 4 66 1 218 1 208 4 293 1 162 1 247 4 294 1 80 1 131 1 265 1 371 1 173 1 
367 2 343 1 205 1 208 2 182 1 293 1 162 1 68 1 247 2 62 1 354 1 95 1 80 2 173 1 
17 1 367 1 247 1 61 1 276 1 80 1 131 1 223 1 293 1 208 1 
185 1 162 1 367 2 247 2 200 1 80 1 371 1 293 1 173 1 304 1 208 2 
367 4 66 1 111 1 351 1 208 5 304 1 293 2 162 2 247 5 294 1 354 1 265 1 131 1 80 2 371 1 173 3 
367 4 66 1 111 1 168 1 208 5 304 1 293 2 162 2 247 5 294 1 354 1 265 1 131 1 80 2 371 1 173 3 
341 1 367 1 135 2 53 1 215 1 205 1 78 1 208 1 293 1 162 1 247 1 262 1 318 2 80 1 131 1 324 1 173 1 340 1 
367 1 110 1 205 1 208 1 293 1 162 1 68 1 247 1 354 1 95 1 80 2 339 1 173 1 
151 1 135 1 318 1 296 1 57 1 65 1 266 1 340 1 184 1 
288 1 45 1 65 1 
65 1 324 1 195 1 266 1 184 1 
228 2 288 1 67 1 181 1 281 1 332 1 292 1 195 2 184 2 10 1 116 2 105 1 286 1 320 1 45 1 65 1 307 1 324 1 266 2 
5 1 159 1 63 1 52 1 
5 1 112 1 159 1 141 1 63 1 250 1 358 1 
242 1 358 1 334 1 
253 1 112 1 216 1 255 1 301 1 164 1 358 1 
5 1 112 2 159 1 211 1 141 1 63 1 250 1 136 1 358 2 
216 1 
216 1 
216 1 
179 1 216 1 
175 1 112 2 159 1 193 1 216 1 136 2 70 1 164 1 358 2 143 1 
61 1 216 1 276 1 
175 1 112 2 159 1 216 1 136 2 211 1 319 1 164 1 358 2 143 1 
216 1 164 1 
175 1 253 1 5 2 112 4 159 3 255 1 136 2 301 1 141 1 63 2 250 1 164 1 358 4 143 1 
112 1 216 1 136 1 271 1 187 1 164 1 358 1 166 1 
98 1 253 1 112 1 216 1 301 1 164 1 358 1 
159 2 259 2 350 1 101 1 
216 1 
112 1 193 1 216 1 164 1 136 1 358 1 
23 1 
216 1 
112 1 216 1 164 1 358 1 301 1 
175 1 159 1 164 1 143 1 
159 1 63 1 

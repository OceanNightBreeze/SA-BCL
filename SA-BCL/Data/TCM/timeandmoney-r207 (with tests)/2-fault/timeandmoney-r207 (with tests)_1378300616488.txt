#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 (83,190) 258 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 168 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 (83,190) 258 107 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 331 328 144 (170,223) 40 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 340 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 46 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 331 328 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 5 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 331 328 358 220 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 331 257 33 (162,297) (128,184) (128,184) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 331 257 33 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 168 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 (83,190) (83,190) (224,314) 198 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 331 257 33 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 (83,190) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 331 328 144 (170,223) 40 267 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 (83,190) (83,190) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 331 8 39 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 331 257 33 (162,297) (162,297) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 331 328 358 172 204 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 331 257 33 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 (83,190) 258 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 340 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 331 328 144 (170,223) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 46 (170,223) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 46 (286,296) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 331 328 358 154 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 331 328 144 (286,296) 34 (83,190) (83,190) (224,314) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 46 (286,296) 25 336 (224,314) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 331 328 358 172 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 331 257 33 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 331 328 65 308 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 331 8 39 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 331 8 72 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 331 8 194 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 331 328 144 (170,223) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 331 328 358 154 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 14 (2,354) (2,354) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
29 2 2 1 97 6 4 2 251 1 61 1 148 1 150 3 153 1 351 1 14 4 105 4 70 9 85 1 219 1 353 1 354 1 49 1 21 2 312 9 288 2 269 2 138 2 91 1 163 1 243 1 339 1 364 2 
29 2 2 1 97 6 4 2 251 1 61 1 148 1 150 3 153 1 351 1 14 4 105 4 70 9 85 1 219 1 353 1 354 1 49 1 21 2 312 9 288 2 269 2 138 2 91 1 163 1 243 1 339 1 364 2 
29 2 2 1 97 7 4 2 251 1 61 1 148 1 150 4 153 1 351 1 14 5 105 5 70 10 85 1 219 1 353 1 354 1 49 1 21 2 312 10 288 2 269 2 138 2 91 1 163 1 243 1 339 1 364 2 
29 2 2 1 97 4 4 2 251 1 61 1 148 1 150 2 153 1 351 1 14 3 105 3 70 7 85 1 219 1 353 1 354 1 49 1 21 2 312 7 288 2 269 2 138 2 163 1 243 1 339 1 364 1 
29 1 14 2 105 2 2 1 70 4 97 3 4 1 354 1 21 1 150 1 312 4 288 1 138 1 91 1 243 1 339 1 163 1 364 2 
29 1 2 1 70 2 4 1 353 1 310 1 354 1 160 1 148 1 312 2 114 1 288 1 269 1 138 1 243 1 
14 1 105 1 2 1 150 1 312 3 70 3 97 1 269 1 4 2 138 2 243 1 61 1 354 1 
29 1 14 4 105 4 2 1 70 9 97 7 251 1 4 2 61 1 354 1 21 1 312 9 150 3 288 1 269 1 362 1 337 1 153 1 138 2 91 1 163 1 339 1 243 1 364 2 
29 1 14 4 105 4 2 1 70 9 97 7 251 1 4 2 61 1 354 1 21 1 312 9 150 3 288 1 269 1 362 1 337 1 153 1 138 2 91 1 163 1 339 1 243 1 364 2 
340 1 133 1 66 1 
229 2 142 1 66 1 
132 2 35 2 44 2 330 1 313 1 250 2 217 2 318 2 
328 1 141 2 132 1 247 1 179 1 330 1 44 1 15 1 217 1 250 1 318 1 331 1 144 1 296 1 222 2 47 1 333 1 190 1 34 1 258 1 35 1 349 2 197 1 
132 1 35 1 44 1 330 1 250 1 217 1 318 1 36 1 182 1 118 1 
176 1 191 1 100 1 133 1 234 1 35 1 250 1 318 1 36 1 87 1 27 1 66 1 309 1 232 1 
176 1 132 1 133 1 234 1 44 1 217 1 250 1 318 1 87 1 191 2 35 1 36 1 27 1 66 1 232 2 
275 1 191 1 268 1 280 1 232 1 
341 1 191 2 133 1 316 1 268 1 66 1 280 1 232 2 
191 1 280 1 232 1 
132 1 31 1 330 1 44 1 217 1 250 1 318 1 182 1 191 1 35 1 268 1 36 1 118 1 232 1 
66 1 
191 2 133 1 316 1 58 1 268 1 66 1 280 1 232 2 
175 1 42 1 140 1 165 2 133 1 248 2 295 1 316 1 280 2 191 5 192 1 268 2 231 1 213 1 64 1 66 1 92 2 232 5 244 1 
340 1 313 1 
132 1 44 1 250 2 217 1 318 2 76 1 35 2 313 2 90 1 
262 1 52 1 109 1 
328 1 34 1 141 1 247 1 15 1 349 1 331 1 144 1 296 1 222 1 197 1 168 1 
328 1 132 1 141 1 247 1 157 1 211 1 15 1 217 1 250 1 318 1 331 1 144 1 296 1 222 1 34 1 35 1 349 1 197 1 
132 4 157 2 211 1 44 1 217 4 250 5 318 5 18 1 300 1 100 1 76 1 35 5 313 1 24 1 
132 2 35 2 250 2 217 2 318 2 36 1 196 1 118 1 
132 3 157 1 44 1 35 3 313 1 250 3 217 3 318 3 
132 1 35 1 250 1 217 1 318 1 36 1 118 1 
132 1 76 1 35 1 44 1 250 1 217 1 318 1 36 1 90 1 
141 1 247 1 211 1 250 3 318 3 144 1 296 1 190 1 34 1 191 1 258 1 35 3 349 1 36 1 197 1 232 1 328 1 176 1 132 3 157 1 107 1 234 1 44 2 330 1 15 1 217 3 331 1 87 1 222 1 76 1 27 1 315 1 
100 1 132 1 157 1 35 2 313 1 250 2 217 1 318 2 18 1 
176 1 132 3 157 2 234 1 211 1 106 1 44 1 217 3 250 3 318 3 87 1 191 1 76 1 35 3 36 1 27 1 66 1 315 1 232 1 
262 1 132 2 157 1 44 1 217 2 250 2 318 2 109 1 76 1 35 2 
328 1 34 1 141 1 247 1 15 1 349 1 331 1 144 1 296 1 222 1 197 1 
328 1 141 1 247 1 223 1 15 1 349 1 331 1 144 1 40 1 222 1 197 1 
57 2 245 1 96 1 6 1 298 1 320 1 145 1 255 1 123 1 104 1 11 1 174 1 233 1 262 2 43 1 235 1 236 1 332 1 159 2 109 2 73 4 186 1 89 2 52 2 
132 1 35 1 250 1 217 1 318 1 36 1 87 1 196 1 
13 1 294 1 
13 1 294 1 
51 1 121 1 
51 1 121 1 
51 1 121 1 
13 1 246 1 294 1 
13 1 246 1 294 1 
13 1 294 1 129 1 
13 2 294 2 51 1 10 1 59 1 121 1 
13 1 246 1 294 1 
13 1 23 1 294 1 
13 1 23 1 294 1 
13 1 23 1 294 1 
41 1 13 1 178 1 132 2 294 1 45 1 250 2 217 2 318 2 181 1 16 1 212 1 191 1 126 1 125 1 35 2 313 1 348 1 230 1 129 1 290 1 164 1 130 1 232 1 
41 2 13 2 294 2 206 1 59 1 16 1 81 1 355 1 191 2 161 1 346 1 125 2 230 3 270 2 66 1 290 2 350 1 164 2 232 2 
29 1 21 1 288 1 
29 1 288 1 114 1 
29 3 291 1 50 1 21 2 114 1 80 1 
29 2 291 1 50 1 21 1 114 1 321 1 
29 2 291 2 21 1 50 1 114 1 
245 1 140 2 165 1 248 1 277 1 142 1 316 1 317 1 119 1 280 1 169 1 229 3 191 5 126 1 151 2 192 3 348 1 213 1 104 1 66 2 232 5 130 1 156 1 43 1 133 1 84 1 86 2 332 1 22 1 268 4 92 1 55 2 
275 5 245 3 140 6 165 2 248 2 295 1 277 1 142 3 316 1 317 2 119 2 280 6 229 9 191 9 151 6 192 8 213 1 260 1 104 3 66 5 37 5 214 1 82 1 130 4 232 9 43 3 133 1 86 6 332 3 110 1 22 3 268 7 207 1 360 1 92 2 
245 1 165 1 140 2 248 1 295 1 142 2 317 1 119 1 229 4 191 3 151 2 192 3 66 3 104 1 232 3 130 1 156 1 133 1 43 1 84 1 86 2 332 1 22 1 268 2 92 1 55 1 
245 2 165 1 140 4 248 1 295 1 142 3 317 1 119 1 229 7 191 4 151 4 192 5 260 1 66 4 104 2 82 1 232 4 130 2 156 1 133 1 43 2 84 1 86 4 332 2 22 2 268 3 207 1 92 1 55 2 
340 1 115 1 
46 1 
199 1 
328 1 331 1 
5 1 
331 1 
328 1 358 1 331 1 220 1 
43 1 278 1 159 3 281 1 120 1 298 3 73 7 253 1 324 1 89 4 136 1 239 1 127 1 104 1 11 2 116 2 365 1 
43 1 278 1 159 3 281 1 120 1 298 3 73 7 253 1 324 1 89 4 136 1 239 1 127 1 104 1 11 2 116 2 365 1 
43 1 278 1 159 3 281 1 120 1 298 3 322 1 73 7 253 1 324 1 89 4 136 1 239 1 127 1 104 1 11 2 116 2 365 1 
57 2 245 3 30 1 96 1 278 2 281 5 120 1 166 1 298 10 63 1 253 1 255 1 324 1 127 2 104 4 11 5 195 1 174 1 285 1 155 4 43 4 216 1 159 15 332 3 221 3 73 31 186 1 89 16 136 2 22 3 239 1 208 1 116 3 365 2 
57 4 77 1 96 2 278 1 281 1 120 1 298 4 255 2 324 1 9 1 127 1 104 1 11 3 195 1 174 2 43 1 159 4 73 9 186 2 89 5 136 1 239 1 116 2 365 1 
29 2 2 1 141 1 293 1 247 1 97 1 4 1 99 1 80 1 122 1 349 1 302 1 70 2 15 1 180 1 108 1 88 1 222 1 354 1 21 1 311 1 113 1 312 2 288 1 114 1 269 1 54 1 138 1 243 1 
29 2 2 1 141 1 293 1 247 1 342 1 97 2 4 1 99 1 80 1 122 1 349 1 302 1 173 1 70 3 15 1 88 1 222 1 354 1 21 1 311 1 113 1 312 3 288 1 114 1 289 1 269 1 54 1 138 1 
29 2 2 1 141 1 293 1 247 1 97 2 99 1 80 1 122 1 349 1 302 1 173 1 70 2 15 1 222 1 354 1 21 1 311 1 113 1 312 2 114 1 288 1 289 1 269 1 
141 1 202 1 70 1 342 1 4 1 331 1 297 1 184 1 222 1 257 1 33 1 311 2 312 1 113 2 128 1 269 2 349 1 302 2 138 1 197 1 
29 2 141 1 293 1 247 1 4 1 99 1 80 1 122 1 349 1 302 1 70 1 15 1 180 1 88 1 222 1 21 1 311 1 113 1 312 1 288 1 114 1 289 1 269 1 54 1 138 1 243 1 
209 1 
12 1 140 1 165 1 141 2 248 1 316 1 317 1 331 1 280 2 222 2 74 1 257 1 33 1 191 2 192 1 213 1 349 2 92 1 197 2 67 1 232 2 
56 1 316 1 58 1 250 1 318 1 78 1 280 2 146 1 100 1 191 3 35 1 36 1 327 1 232 3 329 1 176 1 307 2 234 1 87 1 71 1 309 1 27 1 
56 1 58 1 316 1 250 1 318 1 78 1 280 1 100 1 191 3 35 1 36 1 66 1 327 1 232 3 176 1 329 1 307 3 133 1 234 1 87 1 71 1 309 1 27 1 242 1 
56 1 316 1 58 1 250 1 318 1 78 1 280 2 146 1 100 1 191 3 35 1 36 1 284 1 66 1 327 1 232 3 176 1 329 1 307 3 133 1 234 1 87 1 71 1 309 1 27 1 242 1 
210 1 56 1 140 1 165 1 188 1 248 1 142 2 228 2 316 3 58 1 250 1 318 1 78 1 280 7 60 1 146 4 299 1 100 1 191 5 35 1 192 1 213 1 36 1 284 4 66 5 325 1 327 1 232 5 329 1 176 1 200 2 307 6 133 5 234 1 87 1 205 1 71 1 287 2 309 1 334 2 238 1 27 1 242 4 92 1 
56 1 140 1 228 2 142 2 316 2 318 1 280 4 146 2 229 2 100 1 191 4 102 1 192 1 284 2 66 2 325 1 327 1 232 4 329 1 200 2 234 1 71 1 287 2 334 2 27 1 242 2 210 1 165 1 248 1 250 1 78 1 35 1 213 1 36 1 176 1 307 4 133 1 87 1 309 1 92 1 
210 1 56 1 140 1 165 1 188 1 248 1 316 2 142 2 228 2 250 1 318 1 78 1 280 4 146 2 299 1 100 1 191 4 35 1 192 1 213 1 284 2 36 1 66 1 325 1 327 1 232 4 176 1 329 1 200 2 307 4 133 1 234 1 87 1 71 1 205 1 287 2 309 1 334 2 27 1 242 2 92 1 
210 1 56 1 140 1 165 1 188 1 248 1 316 2 142 2 228 2 250 1 318 1 78 1 280 4 146 2 299 1 100 1 191 4 35 1 192 1 213 1 284 2 36 1 66 1 325 1 327 1 232 4 176 1 329 1 200 2 307 4 133 1 234 1 87 1 71 1 205 1 287 2 309 1 334 2 27 1 242 2 92 1 
210 1 56 1 140 1 165 1 188 1 248 1 316 2 228 2 250 1 318 1 78 1 280 4 323 2 146 2 229 2 100 1 191 4 35 1 192 1 193 2 213 1 284 2 36 1 66 1 327 1 232 4 176 1 329 1 307 4 133 1 234 1 87 1 71 1 309 1 185 1 334 2 356 1 359 1 27 1 242 2 92 1 
210 1 56 1 140 1 165 1 188 1 248 1 316 2 142 2 228 2 250 1 318 1 78 1 280 5 146 3 299 1 100 1 191 4 35 1 192 1 213 1 36 1 284 3 66 1 325 1 327 1 232 4 176 1 329 1 200 2 307 5 133 1 234 1 87 1 71 1 205 1 287 2 309 1 334 2 238 1 27 1 242 3 92 1 
210 1 56 1 140 1 165 1 188 1 248 1 316 2 142 2 228 2 250 1 318 1 78 1 280 5 146 3 299 1 100 1 191 4 35 1 192 1 213 1 36 1 284 3 66 1 325 1 327 1 232 4 176 1 329 1 200 2 307 5 133 1 234 1 87 1 71 1 205 1 287 2 309 1 334 2 238 1 27 1 242 3 92 1 
56 1 140 1 228 2 316 2 318 1 280 4 323 2 146 2 229 2 100 1 191 4 102 1 192 1 193 2 284 2 66 1 327 1 232 4 329 1 234 1 71 1 334 2 27 1 242 2 210 1 165 1 248 1 250 1 78 1 35 1 213 1 36 1 176 1 307 4 133 1 87 1 309 1 359 1 92 1 
57 2 340 1 96 1 6 1 120 1 298 2 145 1 255 1 324 1 127 1 11 2 104 1 174 1 262 1 43 1 235 1 109 1 159 3 73 6 186 1 89 3 136 1 239 1 313 2 52 1 116 1 
57 4 245 2 96 2 344 1 6 2 281 1 298 2 145 1 255 2 103 1 152 1 11 1 104 2 174 2 285 1 155 3 262 4 43 1 263 1 216 1 265 1 159 6 109 11 332 1 221 3 73 14 186 2 89 8 22 2 313 1 52 11 26 1 363 1 
57 2 141 1 247 1 211 1 95 1 96 1 250 1 318 1 6 1 344 1 144 1 296 1 145 1 168 1 255 1 34 1 35 1 171 1 349 1 152 1 174 1 303 1 197 1 328 1 262 1 132 1 157 1 15 1 217 1 331 1 265 1 159 1 222 1 73 2 186 1 89 1 
57 2 141 1 247 1 211 1 96 1 250 1 318 1 6 1 144 1 296 1 145 1 255 1 190 1 34 1 35 1 349 1 152 1 174 1 197 1 328 1 198 1 132 1 157 1 83 1 15 1 217 1 331 1 265 1 159 1 222 1 73 1 186 1 224 1 
57 2 141 2 96 1 331 1 344 1 6 1 159 1 17 1 145 1 222 2 47 1 73 2 255 1 257 1 186 1 33 1 89 1 149 1 349 2 152 1 174 1 197 1 
57 2 245 1 96 1 250 1 318 1 6 1 298 1 145 1 255 1 35 1 11 1 104 1 174 1 262 1 132 1 43 1 44 1 217 1 158 1 265 1 109 1 332 1 159 2 73 3 186 1 89 1 76 1 22 1 52 1 
57 2 245 1 262 1 235 1 96 1 6 1 281 1 109 1 298 1 320 1 145 1 73 2 255 1 186 1 89 2 52 1 104 1 174 1 
57 2 262 1 43 1 235 1 96 1 6 1 109 1 332 1 159 2 298 1 145 1 73 2 255 1 186 1 123 1 52 1 11 1 174 1 
245 1 57 2 96 1 6 1 281 1 298 2 145 1 255 1 104 1 11 1 174 1 262 2 43 1 235 1 109 2 332 1 159 2 73 4 186 1 89 2 22 1 52 2 
57 2 245 1 262 1 96 1 6 1 281 1 109 1 298 1 320 1 145 1 73 2 255 1 186 1 149 1 89 2 52 1 104 1 174 1 
57 2 262 1 43 1 96 1 6 1 109 1 332 1 159 2 298 1 145 1 73 2 255 1 186 1 149 1 123 1 52 1 11 1 174 1 
245 1 57 2 96 1 6 1 281 1 298 2 145 1 255 1 149 1 104 1 11 1 174 1 262 2 43 1 109 2 332 1 159 2 73 4 186 1 89 2 22 1 52 2 
245 1 57 2 96 1 6 1 281 1 298 2 145 1 255 1 104 1 11 1 174 1 262 2 43 1 109 2 332 1 159 2 73 4 186 1 89 2 22 1 52 2 
328 1 190 1 34 1 141 1 247 1 15 1 349 1 331 1 144 1 296 1 222 1 197 1 
328 1 141 1 247 1 223 1 267 1 15 1 349 1 331 1 144 1 40 1 222 1 197 1 
245 1 57 2 96 1 6 1 281 1 298 2 145 1 255 1 104 1 11 1 174 1 262 2 43 1 265 1 109 2 332 1 159 2 73 4 186 1 89 2 22 1 52 2 
328 1 190 1 34 1 141 1 247 1 83 1 15 1 349 1 331 1 144 1 108 1 296 1 222 1 
57 2 245 1 96 1 250 1 318 1 6 1 281 1 298 1 145 1 62 1 255 1 35 1 104 1 174 1 132 1 262 1 43 1 44 1 217 1 265 1 159 1 332 1 109 1 73 3 186 1 89 2 76 1 22 1 52 1 
57 4 245 3 292 1 249 1 96 2 281 3 298 6 345 1 255 2 189 1 9 1 11 3 104 3 174 2 306 1 285 1 155 2 43 3 216 1 159 10 332 3 221 1 266 1 73 19 186 2 20 1 89 9 22 3 274 2 28 2 
57 6 245 3 96 3 252 1 281 2 298 4 345 1 255 3 189 1 9 1 259 1 195 2 11 2 104 3 174 3 306 1 261 1 215 1 155 2 43 2 216 2 237 1 159 12 332 2 221 2 266 2 73 26 186 3 20 2 89 14 22 3 361 1 274 1 28 4 
57 6 96 3 281 4 189 1 324 1 9 1 104 5 11 4 195 1 285 1 155 4 237 1 332 4 159 21 73 41 20 1 22 4 239 1 116 1 28 4 245 4 249 1 252 1 120 1 298 8 345 1 255 3 127 1 259 1 174 3 306 1 261 1 215 1 43 5 216 3 134 1 221 3 266 2 186 3 89 20 136 1 361 1 274 1 
57 8 245 4 249 1 96 4 252 1 281 3 120 1 298 7 345 1 255 4 189 1 324 1 9 1 127 1 259 1 195 2 11 4 104 5 174 4 261 1 306 1 285 1 215 1 155 4 43 4 216 3 134 1 237 1 159 18 332 3 221 3 266 2 73 38 186 4 20 1 89 20 136 1 22 4 239 1 361 1 274 1 116 1 28 4 
57 4 245 7 96 2 252 1 281 7 120 1 298 14 345 1 255 2 189 1 324 1 9 1 127 1 259 1 195 1 11 7 104 8 174 2 261 1 306 1 285 2 215 1 155 4 43 8 216 2 237 1 159 25 332 7 221 4 266 1 73 52 186 2 20 1 89 27 136 1 22 7 239 1 361 1 363 2 274 1 116 1 28 4 
13 1 41 1 355 1 276 1 346 1 125 1 294 1 59 1 290 1 164 1 
178 1 129 1 
13 1 41 1 131 1 125 1 294 1 183 1 167 1 290 1 164 1 
246 1 32 1 
124 1 23 1 10 1 
41 1 13 1 294 1 59 1 16 1 81 1 355 1 191 1 161 1 346 1 125 1 230 2 270 1 66 1 290 1 350 1 164 1 232 1 
41 1 13 1 294 1 59 1 16 1 81 1 355 1 191 1 161 1 346 1 125 1 230 2 270 1 66 1 290 1 350 1 164 1 232 1 
41 1 13 1 294 1 59 1 16 1 81 1 355 1 191 1 161 1 346 1 125 1 230 2 270 1 66 1 290 1 350 1 164 1 232 1 
246 1 32 1 10 1 
246 1 32 1 10 1 
124 1 23 1 
124 1 23 1 10 1 
212 1 45 1 
294 1 250 2 318 2 212 1 191 1 125 1 126 1 35 2 230 1 348 1 129 1 232 1 130 1 13 1 41 1 178 1 132 2 45 1 217 2 264 1 181 1 161 1 313 1 268 1 270 1 290 1 164 1 
57 2 141 2 3 1 96 1 343 1 250 2 318 2 6 1 344 1 8 1 145 1 255 1 35 2 349 2 152 1 39 1 174 1 305 1 177 1 331 1 265 1 159 1 17 1 222 2 73 2 47 2 186 1 89 1 
29 2 141 2 247 1 15 1 218 1 108 1 88 1 99 1 80 1 222 2 48 1 122 1 21 1 311 1 288 1 114 1 289 1 349 2 304 1 
29 2 141 1 247 1 15 1 88 1 99 1 80 1 111 1 222 1 48 1 122 1 21 1 311 1 288 1 114 1 289 1 349 1 
141 1 331 1 218 1 297 1 222 1 257 1 33 1 162 1 311 1 349 1 197 1 
29 2 141 1 247 1 15 1 218 1 88 1 99 1 80 1 222 1 48 1 122 1 21 1 311 1 288 1 114 1 289 1 349 1 304 1 
98 1 
42 1 140 1 340 1 133 1 192 1 231 1 66 1 
140 1 165 1 248 1 142 1 316 1 280 1 229 1 191 1 192 1 213 1 66 2 325 1 232 1 200 1 133 1 287 1 92 1 
328 1 165 1 141 1 248 1 358 1 172 1 204 1 349 1 213 1 331 1 92 1 222 1 197 1 
225 1 245 2 165 2 140 5 248 2 317 1 316 1 142 3 252 1 280 1 229 6 147 1 191 1 151 5 192 8 259 1 213 2 66 5 104 2 67 1 68 1 232 1 261 1 215 1 155 1 43 2 133 2 216 1 86 5 332 2 112 2 221 1 22 2 361 1 92 2 
165 1 140 2 248 1 31 1 250 1 318 1 7 1 120 1 299 1 191 1 35 1 127 1 192 2 213 1 36 1 104 2 68 1 232 1 132 1 43 1 330 1 44 1 217 1 182 1 112 2 136 1 92 1 118 1 
42 1 165 1 140 1 248 1 133 1 192 1 231 1 213 1 66 1 92 1 
245 2 140 5 43 2 227 1 142 5 86 5 332 2 112 2 229 10 22 2 151 5 192 5 104 2 66 5 68 1 
191 1 133 1 316 1 66 1 280 1 232 1 
12 1 140 1 165 1 141 2 248 1 94 1 316 1 317 1 331 1 280 2 222 2 74 1 257 1 33 1 191 1 192 1 349 2 213 1 92 1 197 2 232 1 67 1 
328 1 132 1 141 1 247 1 330 1 44 1 15 1 217 1 250 1 318 1 331 1 144 1 296 1 222 1 190 1 34 1 258 1 35 1 349 1 197 1 
140 2 165 1 248 1 133 2 142 2 317 1 86 2 229 4 151 2 192 1 213 1 66 4 92 1 116 1 67 1 
125 1 53 1 290 1 
125 1 53 1 290 1 
346 1 226 1 125 1 45 1 290 1 
125 1 53 1 290 1 
125 1 38 1 290 1 
125 1 38 1 290 1 
125 1 38 1 290 1 
125 1 290 1 
13 1 294 1 
57 4 43 1 96 2 159 4 281 1 120 1 298 3 73 8 255 2 186 2 324 1 89 4 136 1 239 1 127 1 104 1 11 2 195 1 174 2 116 1 
340 1 43 1 159 3 120 1 298 2 73 6 324 1 89 3 136 1 239 1 127 1 11 2 104 1 116 1 
57 2 245 1 43 1 96 1 159 2 332 1 281 1 298 2 73 4 255 1 186 1 89 2 22 1 11 1 104 1 272 1 174 1 
285 1 245 1 155 2 43 1 216 1 332 1 159 4 281 1 298 2 221 1 73 7 89 3 22 1 11 1 104 1 
245 2 57 4 96 2 281 4 120 1 298 9 255 2 324 1 127 2 104 3 11 5 195 2 174 2 285 1 155 2 43 3 263 1 159 12 332 2 221 2 73 23 186 2 89 11 357 1 136 2 22 2 239 1 363 1 116 1 
155 1 159 1 73 1 
89 1 221 1 73 1 
57 2 245 1 43 1 96 1 227 1 159 3 281 1 332 1 298 3 73 6 255 1 186 1 89 3 22 1 104 1 11 2 174 1 272 1 
57 2 245 2 96 1 252 1 281 1 298 2 255 1 9 1 259 1 104 2 11 1 174 1 261 1 155 1 215 1 43 2 216 1 159 6 332 2 221 1 73 12 186 1 89 6 22 2 361 1 
43 1 159 3 281 1 120 1 298 2 73 6 89 3 136 1 127 1 104 1 11 1 
57 2 96 1 281 1 159 2 298 2 73 3 255 1 324 1 186 1 89 1 357 1 136 1 239 1 127 1 11 1 195 1 174 1 
57 2 43 2 96 1 281 2 159 5 7 1 120 1 298 5 73 10 255 1 186 1 89 5 136 2 9 1 127 2 11 3 104 2 174 1 
57 2 245 1 96 1 281 1 298 1 73 2 255 1 186 1 89 2 9 1 104 1 174 1 
57 2 245 1 43 1 96 1 159 2 332 1 281 1 298 2 73 4 255 1 186 1 89 2 9 1 22 1 11 1 104 1 174 1 
57 6 249 1 96 3 159 2 281 1 298 2 73 3 255 3 186 3 357 1 89 1 136 1 9 1 127 1 195 1 11 1 174 3 
57 10 245 3 30 1 249 1 96 5 281 5 120 2 298 12 63 1 255 5 324 1 9 1 127 3 195 2 104 5 11 7 174 5 285 1 155 4 43 5 216 1 159 18 332 3 221 3 73 34 186 5 357 1 89 16 136 3 22 3 239 1 208 1 272 1 116 1 
57 2 96 1 120 1 298 2 255 1 324 1 9 1 127 1 104 1 11 2 174 1 155 1 43 1 216 1 159 4 221 1 73 8 186 1 89 4 136 1 239 1 361 1 116 1 
57 4 245 1 96 2 281 1 120 1 298 3 255 2 324 1 9 1 127 1 11 2 104 2 174 2 285 1 155 2 43 1 216 1 159 5 221 1 73 11 186 2 89 6 136 1 22 1 239 1 361 1 272 1 116 1 
57 6 245 2 96 3 252 1 281 1 120 1 298 4 255 3 324 1 9 1 127 1 259 1 104 3 11 3 195 1 174 3 261 1 155 1 215 1 43 3 216 1 159 10 332 2 221 1 73 19 186 3 89 9 136 1 22 2 239 1 361 1 272 1 116 1 
57 6 245 2 96 3 252 1 281 2 120 1 298 5 255 3 324 1 9 1 127 1 259 1 195 1 104 3 11 3 174 3 261 1 155 1 215 1 43 2 216 1 159 7 332 1 221 1 73 17 186 3 89 10 136 1 22 2 239 1 361 1 272 1 116 1 
57 2 96 1 120 1 298 2 255 1 324 1 9 1 127 1 104 1 11 2 174 1 155 1 43 1 216 1 159 4 221 1 73 8 186 1 89 4 136 1 239 1 361 1 116 1 
57 2 245 2 96 1 252 1 281 1 298 2 255 1 9 1 259 1 104 2 11 1 174 1 261 1 155 1 215 1 43 2 216 1 159 6 332 2 221 1 73 12 186 1 89 6 22 2 361 1 
57 8 245 2 96 4 252 1 281 2 120 1 298 5 255 4 324 1 9 1 127 1 259 1 104 3 11 3 195 2 174 4 261 1 215 1 155 1 43 2 216 1 159 8 332 1 221 1 73 18 186 4 89 10 136 1 22 2 239 1 361 1 272 1 116 1 
57 8 245 3 96 4 249 1 252 1 281 3 298 6 255 4 9 1 259 1 104 3 11 3 195 2 174 4 261 1 215 1 155 1 43 2 216 1 159 7 332 2 221 1 73 16 186 4 89 9 22 3 361 1 
43 1 159 4 281 3 120 1 298 6 73 7 324 2 89 3 136 3 239 1 127 3 11 3 104 1 
57 8 245 2 96 4 249 1 252 1 281 1 120 1 298 4 255 4 324 1 9 1 127 1 259 1 104 3 11 3 195 2 174 4 261 1 215 1 155 1 43 2 216 1 159 8 332 1 221 1 73 18 186 4 89 10 136 1 22 2 239 1 361 1 116 1 
100 1 75 1 35 1 313 1 250 1 318 1 18 1 
0 1 201 1 250 1 318 1 18 1 254 1 135 1 75 1 100 1 283 1 35 1 313 1 
257 1 340 1 33 1 141 1 349 1 331 1 222 1 197 1 
328 1 132 1 141 1 157 1 247 1 15 1 217 1 250 1 318 1 331 1 144 1 296 1 222 1 35 1 349 1 197 1 
328 1 132 1 141 1 157 1 247 1 15 1 217 1 250 1 318 1 331 1 144 1 296 1 222 1 35 1 347 1 349 1 
328 1 132 1 141 1 157 1 247 1 15 1 217 1 250 1 318 1 331 1 144 1 222 1 223 1 35 1 347 1 349 1 
170 1 141 1 191 1 347 1 349 1 46 1 222 1 232 1 
286 1 141 1 191 1 347 1 349 1 46 1 222 1 232 1 
141 1 247 1 15 1 349 1 79 1 222 1 
328 1 141 1 358 1 349 1 331 1 154 1 222 1 197 1 
57 2 141 1 247 1 3 1 96 1 250 1 318 1 6 1 144 1 296 1 145 1 255 1 190 1 34 1 35 1 349 1 174 1 328 1 132 1 157 1 83 1 15 1 217 1 331 1 265 1 108 1 222 1 186 1 224 1 
286 1 165 1 141 1 248 1 94 1 46 1 222 1 191 1 268 1 25 1 336 1 314 1 213 1 349 1 92 1 197 1 232 1 
328 1 141 1 358 1 172 1 349 1 331 1 79 1 222 1 
257 1 33 1 141 2 349 2 331 1 108 1 222 2 197 1 
328 1 352 1 141 1 308 1 349 1 331 1 65 1 222 1 
29 1 141 1 247 1 288 1 114 1 15 1 349 1 99 1 222 1 197 1 
141 2 289 1 349 2 331 1 108 1 39 1 8 1 222 2 
141 2 349 2 331 1 108 1 72 1 8 1 222 2 197 1 
141 2 349 2 331 1 194 1 108 1 8 1 222 2 197 1 
328 1 132 1 141 1 157 1 247 1 15 1 217 1 250 1 318 1 331 1 144 1 222 1 223 1 35 1 349 1 197 1 
328 1 141 1 358 1 347 1 349 1 331 1 154 1 222 1 
313 1 143 1 271 1 319 1 117 1 
176 1 133 1 234 1 143 2 87 1 319 2 19 1 256 1 191 2 301 1 313 1 268 1 36 1 271 1 27 1 66 1 315 1 117 2 232 2 
177 1 35 1 250 1 343 1 318 1 271 1 319 1 305 1 117 1 
256 1 301 1 271 1 
340 1 2 1 354 1 
2 1 312 1 70 1 4 1 138 1 354 1 
312 1 269 1 302 1 
2 1 70 3 4 1 353 2 354 1 335 1 312 3 137 1 241 1 138 1 243 1 
2 1 312 2 70 2 97 1 4 1 138 1 354 1 364 1 
29 1 14 1 105 1 70 1 4 1 21 1 312 1 288 1 138 1 243 1 163 1 
312 1 70 1 4 1 138 1 243 1 354 1 
14 1 2 1 312 1 70 1 4 1 138 1 243 1 354 1 
312 2 70 2 4 2 279 1 138 2 338 1 139 1 243 1 354 1 
14 1 105 1 2 1 150 1 312 3 70 3 97 2 251 1 4 1 153 1 138 1 243 1 354 1 
29 2 2 1 69 1 70 2 97 1 4 1 80 1 354 1 21 1 312 2 114 1 288 1 138 1 243 1 
14 1 105 1 2 1 70 4 97 2 4 2 354 1 312 4 150 1 138 2 243 1 91 1 364 1 
2 1 312 1 70 1 4 1 138 1 243 1 354 1 
14 1 105 1 2 2 70 4 97 2 4 1 353 1 354 2 335 1 101 1 312 4 150 1 241 1 138 1 
282 1 2 1 1 1 312 2 70 2 97 1 4 1 337 1 138 1 243 1 354 1 
93 1 2 1 70 3 4 1 353 2 354 1 335 1 312 3 241 2 138 1 243 1 
14 2 203 1 240 2 326 1 
312 1 70 1 4 1 138 1 273 1 243 1 
2 1 312 2 70 2 97 1 4 1 153 1 138 1 243 1 354 1 
187 1 
2 1 312 1 70 1 4 1 138 1 243 1 354 1 
2 1 312 3 70 3 97 1 4 1 153 1 353 1 138 1 243 1 354 1 
14 1 105 1 101 1 150 1 
354 1 

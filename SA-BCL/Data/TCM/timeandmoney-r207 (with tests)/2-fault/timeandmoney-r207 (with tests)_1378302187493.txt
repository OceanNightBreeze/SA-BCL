#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 22 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 1 248 2 5 1 6 5 269 2 99 1 289 1 172 1 292 1 196 1 174 1 177 2 31 6 82 2 277 1 60 1 156 1 134 1 180 1 237 3 303 9 305 1 355 2 187 2 189 1 190 2 380 9 165 4 
42 1 248 2 5 1 6 5 269 2 99 1 289 1 172 1 292 1 196 1 174 1 177 2 31 6 82 2 277 1 60 1 156 1 134 1 180 1 237 3 303 9 305 1 355 2 187 2 189 1 190 2 380 9 165 4 
42 1 248 2 5 1 6 6 269 2 99 1 289 1 172 1 292 1 196 1 174 1 177 2 31 7 82 2 277 1 60 1 156 1 134 1 180 1 237 4 303 10 305 1 355 2 187 2 189 1 190 2 380 10 165 5 
42 1 248 2 5 1 6 4 269 2 99 1 289 1 172 1 292 1 196 1 174 1 177 2 31 4 82 2 277 1 60 1 156 1 134 1 180 1 237 2 303 7 355 1 187 2 189 1 190 2 380 7 165 3 
60 1 248 1 156 1 6 3 237 1 99 1 303 4 305 1 292 1 355 2 187 1 177 1 189 1 190 1 380 4 31 3 165 2 82 1 
60 1 42 1 248 1 215 1 6 1 269 1 99 1 303 2 292 1 66 1 187 1 177 1 190 1 81 1 380 2 277 1 
60 1 248 2 134 1 6 2 269 1 237 1 99 1 303 3 292 1 190 2 380 3 31 1 165 1 
60 1 248 2 156 1 180 1 336 1 134 1 6 5 349 1 269 1 237 3 99 1 303 9 305 1 292 1 355 2 187 1 174 1 177 1 189 1 190 2 380 9 31 7 82 1 165 4 
60 1 248 2 156 1 180 1 336 1 134 1 6 5 349 1 269 1 237 3 99 1 303 9 305 1 292 1 355 2 187 1 174 1 177 1 189 1 190 2 380 9 31 7 82 1 165 4 
34 1 108 1 117 1 
321 2 308 1 108 1 
10 1 185 2 179 2 115 1 62 2 195 2 314 2 120 2 
214 1 334 1 95 1 141 1 317 1 268 2 122 1 195 3 10 1 272 1 254 1 368 1 80 1 344 1 102 2 179 2 35 1 375 2 62 2 109 1 17 1 377 1 138 1 261 1 87 1 304 1 264 2 307 1 114 1 185 3 281 1 115 1 379 2 332 1 357 1 314 2 120 2 
246 1 10 1 222 1 185 1 179 1 169 1 62 1 195 1 314 1 120 1 
83 1 335 1 61 1 108 1 169 1 195 1 88 1 306 1 185 1 282 1 117 1 163 1 120 1 151 1 
83 2 61 1 179 1 108 1 169 1 62 1 195 1 88 1 185 1 282 1 117 1 163 2 314 1 120 1 151 1 
83 1 132 1 21 1 163 1 15 1 
83 2 132 1 166 1 108 1 117 1 369 1 163 2 15 1 
83 1 132 1 163 1 
246 1 83 1 121 1 179 1 169 1 15 1 62 1 195 1 10 1 222 1 185 1 163 1 314 1 120 1 
108 1 
83 2 132 1 278 1 108 1 117 1 369 1 163 2 15 1 
178 1 153 2 83 5 132 2 33 2 298 1 233 1 108 1 15 2 376 1 240 2 160 1 161 1 117 1 369 1 163 5 67 1 313 1 68 1 
34 1 115 1 
179 1 62 1 195 2 353 1 185 2 115 2 94 1 314 1 120 2 
74 1 79 1 64 1 
334 1 214 1 84 1 95 1 268 1 122 1 195 1 87 1 264 1 185 1 114 1 115 1 379 1 332 1 368 1 357 1 
214 1 334 1 95 1 179 1 268 1 122 1 62 1 195 2 87 1 264 1 274 1 114 1 185 2 368 1 332 1 379 1 79 1 357 1 23 1 120 1 
0 1 335 1 179 4 374 1 62 4 195 5 274 1 185 5 115 1 176 1 94 1 23 2 314 1 120 5 
222 1 185 2 179 2 249 1 169 1 62 2 195 2 120 2 
185 3 179 3 115 1 62 3 23 1 195 3 314 1 120 3 
222 1 185 1 179 1 169 1 62 1 195 1 120 1 
185 1 179 1 169 1 94 1 62 1 195 1 314 1 353 1 120 1 
214 1 334 1 95 1 317 1 361 1 268 1 122 1 169 1 195 4 10 1 272 1 146 1 274 1 254 1 368 1 80 1 102 2 151 1 83 1 61 1 179 3 375 1 62 3 17 1 377 1 138 1 261 1 87 1 304 1 88 1 264 1 307 1 114 1 185 4 282 1 115 1 332 1 163 1 379 1 94 1 357 1 23 1 314 2 120 3 
335 1 185 2 179 1 115 1 176 1 62 1 195 2 23 1 120 2 
83 1 61 1 179 3 108 1 169 1 62 3 195 3 63 1 88 1 274 1 146 1 185 3 282 1 163 1 94 1 23 2 314 1 151 1 120 3 
179 2 62 2 195 2 74 1 185 2 94 1 79 1 23 1 314 1 120 2 
334 1 214 1 95 1 268 1 122 1 195 1 87 1 264 1 185 1 114 1 115 1 379 1 332 1 368 1 357 1 
214 1 95 1 268 1 122 1 195 1 87 1 19 1 264 1 185 1 114 1 115 1 379 1 332 1 368 1 197 1 
317 2 45 1 74 2 272 1 254 1 80 1 79 2 59 1 102 2 258 1 373 1 279 1 235 1 375 4 238 1 17 1 329 1 261 1 64 2 242 1 307 1 281 2 309 1 188 1 
88 1 185 1 179 1 249 1 169 1 62 1 195 1 120 1 
29 1 312 1 
29 1 312 1 
366 1 211 1 
366 1 211 1 
366 1 211 1 
46 1 29 1 312 1 
136 1 29 1 312 1 
339 1 366 1 211 1 164 1 29 2 312 2 
46 1 29 1 312 1 
46 1 29 1 312 1 
37 1 29 1 312 1 
37 1 29 1 312 1 
37 1 29 1 312 1 
96 1 194 1 25 1 195 2 220 1 224 1 29 1 78 1 324 1 227 1 297 1 83 1 179 2 136 1 62 2 205 1 206 1 111 1 185 2 91 1 115 1 163 1 312 1 120 2 
83 2 193 1 4 1 108 1 96 2 25 1 205 3 206 2 243 1 252 1 339 1 91 2 148 2 341 1 224 2 163 2 29 2 312 2 103 1 
187 1 177 1 82 1 
187 1 177 1 81 1 
13 1 217 1 275 1 177 3 81 1 82 2 
359 1 13 1 217 1 177 2 81 1 82 1 
13 2 217 1 177 2 81 1 82 1 
45 1 144 1 271 2 220 1 321 3 253 1 100 1 150 1 369 1 255 1 324 1 227 1 153 1 83 5 258 1 132 1 33 1 298 3 233 2 203 2 235 1 108 2 158 1 327 2 15 4 240 1 242 1 308 1 163 5 117 1 67 1 284 1 
315 1 45 3 144 3 271 6 321 9 253 1 369 1 30 1 227 4 153 2 83 9 258 3 132 6 33 2 299 1 298 8 233 6 235 3 108 5 158 2 327 6 15 7 239 5 240 2 242 3 184 1 330 1 161 1 308 3 21 5 163 9 117 1 67 1 284 2 333 1 
45 1 144 1 271 2 321 4 255 1 150 1 227 1 153 1 83 3 258 1 33 1 298 3 203 1 233 2 235 1 108 3 158 1 327 2 15 2 240 1 242 1 308 2 161 1 117 1 163 3 284 1 
45 2 144 2 271 4 321 7 255 1 150 1 227 2 153 1 83 4 258 2 33 1 299 1 298 5 203 2 233 4 235 2 108 4 158 1 327 4 15 3 240 1 242 2 184 1 308 3 161 1 117 1 163 4 284 1 333 1 
34 1 173 1 122 1 
192 1 122 1 
90 1 
214 1 114 1 122 1 
162 1 122 1 
114 1 122 1 
214 1 360 1 114 1 173 2 122 3 124 1 
286 1 258 1 317 3 155 1 229 1 45 1 47 1 350 1 375 7 329 2 338 1 281 4 20 1 175 1 188 3 131 1 245 2 
286 1 258 1 317 3 155 1 229 1 45 1 47 1 350 1 375 7 329 2 338 1 281 4 20 1 175 1 188 3 131 1 245 2 
286 1 258 1 12 1 317 3 155 1 229 1 45 1 47 1 350 1 375 7 329 2 338 1 281 4 20 1 175 1 188 3 131 1 245 2 
286 2 316 4 317 15 45 4 47 1 123 1 97 3 7 1 338 2 144 3 319 1 272 1 101 1 254 1 323 1 77 1 175 1 80 1 102 2 131 2 154 1 258 4 229 1 155 5 235 3 350 2 375 31 329 5 242 3 307 1 281 16 20 1 188 10 245 3 
286 1 258 1 229 1 155 1 317 4 45 1 47 1 350 1 375 9 329 3 8 1 338 1 319 1 270 1 272 2 307 2 281 5 254 2 175 1 188 4 80 2 102 4 131 1 245 2 
266 1 248 1 268 1 6 1 269 1 143 1 49 1 99 1 292 1 149 1 177 2 275 1 294 1 81 1 31 1 82 1 60 1 200 1 231 1 303 2 87 1 264 1 354 1 89 1 187 1 379 1 332 1 190 1 380 2 213 1 
248 1 268 1 6 1 269 1 49 1 291 1 292 1 149 1 275 1 177 2 294 1 81 1 31 2 82 1 60 1 133 1 200 1 231 1 236 1 303 3 87 1 264 1 354 1 89 1 187 1 379 1 332 1 190 1 380 3 213 1 
60 1 200 1 133 1 268 1 6 1 269 1 236 1 49 1 303 2 87 1 264 1 354 1 89 1 292 1 187 1 332 1 379 1 275 1 177 2 294 1 81 1 213 1 31 2 380 2 82 1 
95 1 248 1 218 1 268 1 122 1 269 2 49 2 291 1 28 1 294 2 14 1 135 1 260 1 303 1 86 1 87 1 264 1 89 2 114 1 332 1 379 1 190 1 380 1 
248 1 268 1 269 1 143 1 49 1 99 1 149 1 177 2 275 1 294 1 81 1 82 1 133 1 200 1 231 1 303 1 87 1 264 1 354 1 89 1 187 1 379 1 332 1 190 1 380 1 213 1 
76 1 
95 2 335 1 44 1 2 4 195 1 9 1 340 1 151 1 153 1 104 2 347 1 61 1 202 1 298 2 108 2 158 1 264 2 306 1 114 1 308 2 117 1 163 5 67 1 120 1 69 2 362 2 218 1 268 2 122 1 169 1 365 2 321 2 129 1 27 2 28 1 369 3 276 1 83 5 372 1 132 6 33 1 36 1 234 2 233 2 137 1 240 1 87 1 39 1 88 1 185 1 282 1 283 1 93 2 379 2 332 1 
335 1 2 2 169 1 195 1 129 1 340 1 369 1 151 1 372 1 83 3 132 2 61 1 278 1 234 1 137 1 39 1 88 1 306 1 185 1 282 1 163 3 120 1 
335 1 2 3 169 1 365 1 195 1 129 1 340 1 369 1 151 1 372 1 83 3 132 1 61 1 278 1 108 1 137 1 39 1 88 1 306 1 185 1 282 1 163 3 117 1 120 1 
335 1 2 3 169 1 365 1 195 1 129 1 340 1 27 1 369 1 151 1 372 1 83 3 132 2 61 1 278 1 234 1 108 1 137 1 39 1 88 1 306 1 185 1 282 1 163 3 117 1 120 1 
335 1 44 1 1 1 2 6 195 1 340 1 151 1 153 1 104 2 61 1 202 1 298 1 108 5 159 1 306 1 65 1 308 2 163 5 117 5 67 1 120 1 69 2 71 1 362 2 169 1 365 4 127 1 129 1 27 4 369 3 83 5 372 1 132 7 278 1 33 1 234 4 233 1 137 1 240 1 39 1 88 1 185 1 282 1 93 2 
335 1 44 1 2 4 195 1 340 1 151 1 153 1 104 2 61 1 202 1 298 1 108 2 306 1 308 2 163 4 117 1 67 1 120 1 69 2 362 2 169 1 365 2 321 2 129 1 27 2 369 2 83 4 372 1 132 4 33 1 233 1 234 2 36 1 137 1 240 1 39 1 88 1 185 1 282 1 93 2 
69 2 335 1 362 2 44 1 1 1 2 4 169 1 365 2 195 1 127 1 129 1 340 1 27 2 369 2 151 1 153 1 104 2 372 1 83 4 132 4 61 1 202 1 33 1 298 1 234 2 233 1 108 1 137 1 240 1 39 1 88 1 306 1 65 1 185 1 308 2 282 1 93 2 117 1 163 4 67 1 120 1 
69 2 335 1 362 2 44 1 1 1 2 4 169 1 365 2 195 1 127 1 129 1 340 1 27 2 369 2 151 1 153 1 104 2 372 1 83 4 132 4 61 1 202 1 33 1 298 1 234 2 233 1 108 1 137 1 240 1 39 1 88 1 306 1 65 1 185 1 308 2 282 1 93 2 117 1 163 4 67 1 120 1 
83 2 372 1 335 1 61 1 2 2 137 1 169 1 195 1 39 1 88 1 306 1 129 1 185 1 340 1 282 1 22 1 163 2 151 1 120 1 
69 2 335 1 362 2 44 1 1 1 2 5 169 1 365 3 195 1 127 1 129 1 340 1 27 3 369 2 151 1 153 1 104 2 372 1 83 4 132 5 61 1 202 1 33 1 298 1 233 1 234 3 108 1 137 1 159 1 240 1 39 1 88 1 306 1 65 1 185 1 308 2 282 1 93 2 117 1 163 4 67 1 120 1 
69 2 335 1 362 2 44 1 1 1 2 5 169 1 365 3 195 1 127 1 129 1 340 1 27 3 369 2 151 1 153 1 104 2 372 1 83 4 132 5 61 1 202 1 33 1 298 1 233 1 234 3 108 1 137 1 159 1 240 1 39 1 88 1 306 1 65 1 185 1 308 2 282 1 93 2 117 1 163 4 67 1 120 1 
335 1 2 4 195 1 147 1 340 1 151 1 153 1 61 1 202 1 298 1 108 1 306 1 163 4 117 1 67 1 120 1 362 2 169 1 365 2 321 2 129 1 27 2 369 2 130 2 83 4 372 1 132 4 33 1 233 1 234 2 36 1 137 1 240 1 39 1 88 1 185 1 282 1 93 2 285 2 
286 1 317 3 45 1 47 1 74 1 272 1 254 1 175 1 79 1 80 1 102 2 258 1 229 1 34 1 350 1 375 6 17 1 329 2 261 1 64 1 307 1 281 3 309 1 115 2 188 2 245 1 
316 3 141 1 317 6 45 1 364 1 97 3 250 1 144 2 74 4 272 2 101 1 254 2 323 1 80 2 79 11 102 4 258 2 155 1 232 1 259 1 235 1 375 14 329 1 17 1 138 1 261 2 64 11 242 2 208 1 307 2 281 8 115 1 188 2 
214 1 334 1 95 1 317 1 141 1 268 1 122 1 195 2 74 1 272 1 274 1 254 1 368 1 80 1 102 2 84 1 230 1 106 1 179 1 232 1 375 2 62 1 17 1 87 1 261 1 138 1 139 1 264 1 114 1 307 1 185 2 281 1 115 1 332 1 379 1 357 1 23 1 120 1 
334 2 286 1 95 1 141 1 45 3 47 1 195 3 51 2 144 2 11 1 254 3 102 6 258 3 155 4 301 2 350 1 62 1 17 3 352 1 261 3 64 7 263 2 264 3 307 3 114 2 115 2 357 2 23 1 120 1 214 2 317 10 268 3 122 2 74 7 272 3 274 1 175 1 368 2 80 3 79 7 326 2 133 1 229 1 179 1 232 1 235 2 375 20 329 4 241 1 377 2 138 1 87 2 242 2 185 3 281 10 379 3 332 2 188 8 245 1 
266 1 95 2 141 1 317 1 218 1 268 8 122 3 219 1 195 1 221 1 272 2 55 1 254 2 28 1 256 1 80 2 102 4 228 1 133 1 179 1 35 2 375 2 302 1 62 1 17 2 87 2 261 2 138 1 264 7 185 1 307 2 114 2 281 1 309 1 140 1 332 2 379 8 23 1 120 1 
317 2 45 1 73 1 195 1 144 1 74 1 272 1 254 1 79 1 80 1 102 2 258 1 179 1 232 1 235 1 375 3 62 1 329 1 17 1 64 1 261 1 242 1 307 1 185 1 281 1 188 1 94 1 314 1 120 1 
258 1 155 1 373 1 375 2 17 1 64 1 261 1 74 1 242 1 272 1 307 1 281 2 309 1 254 1 188 1 79 1 80 1 102 2 
317 2 45 1 235 1 375 2 329 1 17 1 64 1 261 1 74 1 272 1 307 1 309 1 254 1 188 1 79 1 80 1 59 1 102 2 
317 2 45 1 144 1 74 2 272 1 254 1 80 1 79 2 102 2 258 1 155 1 235 1 375 4 17 1 329 1 261 1 64 2 242 1 307 1 281 2 309 1 188 2 
258 1 155 1 373 1 375 2 17 1 64 1 261 1 74 1 242 1 272 1 307 1 281 2 140 1 254 1 188 1 79 1 80 1 102 2 
317 2 45 1 235 1 375 2 329 1 17 1 64 1 261 1 74 1 272 1 307 1 140 1 254 1 188 1 79 1 80 1 59 1 102 2 
317 2 45 1 144 1 74 2 272 1 254 1 80 1 79 2 102 2 258 1 155 1 235 1 375 4 17 1 329 1 261 1 64 2 242 1 307 1 281 2 140 1 188 2 
317 2 45 1 144 1 74 2 272 1 254 1 80 1 79 2 102 2 258 1 155 1 235 1 375 4 17 1 329 1 261 1 64 2 242 1 307 1 281 2 188 2 
214 1 334 1 95 1 141 1 317 1 268 1 122 1 195 1 272 1 254 1 368 1 80 1 102 2 375 2 17 1 377 1 87 1 261 1 138 1 264 1 114 1 185 1 307 1 281 1 115 1 332 1 379 1 357 1 
214 1 95 1 141 1 317 1 48 1 268 1 122 1 195 1 272 1 254 1 368 1 197 1 80 1 102 2 375 2 17 1 87 1 261 1 138 1 19 1 264 1 114 1 185 1 307 1 281 1 115 1 332 1 379 1 
317 2 45 1 144 1 74 2 272 1 254 1 80 1 79 2 102 2 258 1 155 1 232 1 235 1 375 4 17 1 329 1 261 1 64 2 242 1 307 1 281 2 188 2 
214 1 334 1 266 1 317 2 45 1 268 1 122 1 51 1 195 1 144 1 74 2 272 1 254 1 368 1 79 2 80 1 102 2 258 1 155 1 235 1 375 4 329 1 17 1 377 1 64 2 87 1 261 1 242 1 264 1 114 1 185 1 307 1 281 2 188 2 332 1 379 1 357 1 
317 1 45 1 195 1 144 1 74 1 272 1 254 1 80 1 58 1 79 1 102 2 258 1 155 1 179 1 232 1 235 1 375 3 62 1 17 1 261 1 64 1 242 1 307 1 185 1 281 2 188 1 94 1 314 1 120 1 
191 1 316 2 317 10 45 3 168 1 98 1 97 1 337 1 144 3 270 1 272 2 101 1 254 2 323 1 367 2 80 2 102 4 258 3 155 3 235 3 375 19 16 1 329 3 242 3 112 2 307 2 281 9 356 1 41 1 188 6 
191 1 316 2 317 12 45 2 167 1 168 1 98 2 97 2 144 3 319 2 270 1 75 1 272 3 101 2 254 3 367 4 80 3 102 6 258 3 155 2 235 2 375 26 351 1 329 2 242 3 112 1 307 3 281 14 40 1 188 4 356 2 41 1 118 1 119 1 
191 1 286 1 45 5 47 1 97 3 98 2 144 4 337 1 101 3 254 3 102 6 258 5 155 4 350 1 351 1 112 1 307 3 356 1 118 1 119 1 316 4 317 21 167 1 168 1 270 1 319 1 75 1 272 3 323 1 367 4 175 1 80 3 229 1 235 4 375 41 329 4 242 4 182 1 281 20 40 1 188 8 41 1 245 1 
191 1 286 1 316 4 317 18 45 4 47 1 167 1 168 1 98 2 97 3 337 1 144 4 319 2 270 1 75 1 272 4 101 3 254 4 323 1 175 1 367 4 80 4 102 8 258 5 229 1 155 3 235 3 350 1 375 38 351 1 329 4 242 4 112 1 182 1 307 4 281 20 40 1 356 1 41 1 188 7 118 1 119 1 245 1 
191 1 286 1 316 4 317 25 45 8 47 1 167 1 168 1 98 1 97 4 144 7 319 1 270 1 75 1 272 2 101 2 254 2 323 2 175 1 367 4 80 2 102 4 258 8 229 1 155 7 235 7 350 1 375 52 351 1 329 7 242 7 112 1 208 2 307 2 281 27 40 1 356 1 41 1 188 14 118 1 119 1 245 1 
348 1 339 1 91 1 4 1 96 1 224 1 29 1 312 1 103 1 206 1 
136 1 111 1 
322 1 157 1 91 1 96 1 288 1 224 1 29 1 312 1 206 1 
126 1 46 1 
128 1 164 1 37 1 
83 1 193 1 4 1 108 1 96 1 25 1 205 2 206 1 243 1 339 1 91 1 148 1 341 1 163 1 224 1 29 1 312 1 103 1 
83 1 193 1 4 1 108 1 96 1 25 1 205 2 206 1 243 1 339 1 91 1 148 1 341 1 163 1 224 1 29 1 312 1 103 1 
83 1 193 1 4 1 108 1 96 1 25 1 205 2 206 1 243 1 339 1 91 1 148 1 341 1 163 1 224 1 29 1 312 1 103 1 
126 1 46 1 164 1 
126 1 46 1 164 1 
128 1 37 1 
128 1 164 1 37 1 
297 1 194 1 
318 1 96 1 194 1 195 2 220 1 148 1 224 1 29 1 78 1 324 1 227 1 297 1 83 1 179 2 136 1 15 1 62 2 205 1 206 1 111 1 243 1 185 2 91 1 115 1 163 1 312 1 120 2 
141 1 317 1 268 2 122 1 195 2 26 1 272 1 273 1 254 1 80 1 102 2 325 1 228 1 232 1 35 2 375 2 302 1 17 1 110 1 87 1 261 1 138 1 264 2 114 1 185 2 307 1 265 1 281 1 332 1 379 2 120 2 
266 1 43 1 133 1 231 1 268 2 87 1 264 2 290 1 354 1 378 1 187 1 332 1 379 2 275 1 177 2 294 1 81 1 213 1 82 1 
133 1 216 1 231 1 268 1 87 1 264 1 354 1 378 1 187 1 379 1 332 1 275 1 177 2 294 1 81 1 213 1 82 1 
95 1 218 1 268 1 122 1 86 1 87 1 264 1 290 1 320 1 114 1 332 1 379 1 28 1 294 1 
43 1 133 1 231 1 268 1 87 1 264 1 290 1 354 1 378 1 187 1 332 1 379 1 275 1 177 2 294 1 81 1 213 1 82 1 
18 1 
178 1 34 1 298 1 233 1 108 1 117 1 376 1 
69 1 44 1 321 1 369 1 153 1 104 1 83 1 132 1 33 1 298 1 233 1 108 2 240 1 308 1 163 1 117 1 67 1 
247 1 192 3 95 1 45 2 144 2 57 1 257 1 151 2 153 4 346 2 347 1 258 2 107 1 298 9 158 2 108 8 264 3 114 3 308 6 209 2 210 2 162 2 117 2 116 2 163 5 67 4 266 1 214 3 70 2 268 3 122 10 24 2 124 1 125 2 171 2 271 6 321 12 173 2 369 3 178 1 326 2 83 5 132 5 33 4 85 1 233 8 235 2 327 6 376 1 240 4 87 3 242 2 332 4 379 3 
316 1 45 2 142 1 167 1 97 1 125 2 144 2 271 5 321 6 101 1 369 1 226 1 153 2 83 1 347 1 132 1 258 2 33 2 298 8 233 5 158 1 108 5 235 2 327 5 351 1 240 2 242 2 209 1 308 3 40 1 163 1 117 2 118 1 67 2 119 1 
246 1 286 1 121 1 45 1 1 1 169 1 195 1 125 2 10 1 222 1 175 1 152 1 153 1 83 1 258 2 33 1 179 1 298 2 233 2 350 1 62 1 240 1 185 1 209 1 163 1 67 1 314 1 120 1 
153 1 178 1 33 1 298 1 233 1 108 1 376 1 240 1 117 1 67 1 
326 1 258 2 45 2 298 5 233 5 108 5 235 2 327 5 125 2 144 2 242 2 271 5 321 10 209 1 308 5 
83 1 132 1 108 1 117 1 163 1 369 1 
214 1 95 2 218 1 268 4 122 2 9 1 57 2 369 2 28 1 225 1 295 1 370 1 153 2 83 3 132 4 347 2 105 1 33 2 85 1 298 2 233 2 158 2 328 1 240 2 87 2 264 4 114 2 161 1 331 1 283 1 332 3 379 4 163 3 67 1 
334 1 214 1 95 1 317 1 268 1 122 1 195 3 10 1 272 1 254 1 368 1 80 1 102 2 179 2 375 1 62 2 17 1 377 1 138 1 87 1 261 1 304 1 264 1 307 1 185 3 114 1 115 1 379 1 332 1 357 1 314 2 120 2 
153 1 347 1 33 1 298 1 233 2 158 1 108 4 327 2 240 1 271 2 321 4 308 2 117 2 67 1 245 1 
92 1 96 1 224 1 
297 1 56 1 96 1 224 1 103 1 
92 1 96 1 224 1 
92 1 96 1 224 1 
198 1 96 1 224 1 
198 1 96 1 224 1 
198 1 96 1 224 1 
96 1 224 1 
29 1 312 1 
286 1 258 1 317 4 155 1 229 1 45 1 47 1 375 8 350 1 329 2 319 1 272 2 307 2 281 4 254 2 175 1 188 3 80 2 102 4 245 1 
286 1 258 1 317 3 229 1 45 1 34 1 47 1 350 1 375 6 329 2 281 3 188 2 175 1 245 1 
258 1 317 2 155 1 45 1 235 1 375 4 329 1 144 1 242 1 272 1 307 1 281 2 254 1 188 2 310 1 80 1 102 2 
258 1 316 2 317 4 155 1 45 1 235 1 375 7 329 1 97 1 144 1 242 1 101 1 281 3 323 1 188 2 
286 2 316 2 317 12 45 3 47 1 97 2 144 2 250 1 319 2 272 2 254 2 323 1 175 1 80 2 102 4 258 3 229 1 155 4 235 2 350 2 375 23 329 5 242 2 208 1 307 2 281 11 186 1 188 9 245 1 
316 1 317 1 375 1 
281 1 375 1 97 1 
326 1 258 1 317 3 155 1 45 1 235 1 375 6 329 2 144 1 242 1 272 1 307 1 281 3 254 1 310 1 188 3 80 1 102 2 
316 1 317 6 45 2 167 1 97 1 144 2 270 1 272 1 101 1 254 1 80 1 102 2 258 2 155 1 235 2 375 12 351 1 329 1 242 2 307 1 281 6 40 1 188 2 118 1 119 1 
286 1 258 1 155 1 317 3 45 1 281 3 188 2 350 1 375 6 175 1 329 1 
286 1 155 1 229 1 317 2 47 1 350 1 375 3 329 1 319 1 272 1 307 1 281 1 254 1 186 1 188 2 80 1 102 2 
152 1 286 2 258 2 155 2 317 5 45 2 350 2 375 10 329 3 270 1 272 1 307 1 281 5 254 1 188 5 175 1 80 1 102 2 
258 1 155 1 375 2 270 1 242 1 272 1 307 1 281 2 254 1 188 1 80 1 102 2 
258 1 317 2 155 1 45 1 235 1 375 4 329 1 144 1 270 1 242 1 272 1 307 1 281 2 254 1 188 2 80 1 102 2 
286 1 317 2 155 1 375 3 350 1 329 1 337 1 319 1 270 1 272 3 307 3 281 1 254 3 186 1 188 2 80 3 102 6 
286 3 316 4 317 18 45 5 47 1 123 1 7 1 97 3 337 1 144 3 319 2 270 1 272 5 101 1 254 5 77 1 323 1 175 2 80 5 102 10 258 5 229 1 155 5 235 3 350 3 375 34 329 7 242 3 307 5 281 16 186 1 310 1 188 12 245 1 
286 1 258 1 316 1 229 1 317 4 45 1 47 1 350 1 375 8 329 2 97 1 270 1 272 1 307 1 281 4 101 1 254 1 175 1 188 2 80 1 118 1 102 2 245 1 
286 1 316 2 317 5 45 1 47 1 97 1 144 1 270 1 272 2 101 1 254 2 323 1 175 1 80 2 102 4 258 2 229 1 155 1 350 1 375 11 329 2 242 1 307 2 281 6 310 1 188 3 118 1 245 1 
286 1 316 1 317 10 45 3 47 1 167 1 97 1 144 2 270 1 319 1 272 3 101 1 254 3 175 1 80 3 102 6 258 3 229 1 155 1 235 2 350 1 375 19 351 1 329 3 242 2 307 3 281 9 40 1 310 1 188 4 118 1 119 1 245 1 
286 1 316 1 317 7 45 2 47 1 167 1 97 1 144 2 319 1 270 1 272 3 101 1 254 3 175 1 80 3 102 6 258 3 229 1 155 2 235 1 350 1 375 17 351 1 329 3 242 2 307 3 281 10 40 1 310 1 188 5 118 1 119 1 245 1 
286 1 258 1 316 1 229 1 317 4 45 1 47 1 350 1 375 8 329 2 97 1 270 1 272 1 307 1 281 4 101 1 254 1 175 1 188 2 80 1 118 1 102 2 245 1 
316 1 317 6 45 2 167 1 97 1 144 2 270 1 272 1 101 1 254 1 80 1 102 2 258 2 155 1 235 2 375 12 351 1 329 1 242 2 307 1 281 6 40 1 188 2 118 1 119 1 
286 1 316 1 317 8 45 2 47 1 167 1 97 1 144 2 270 1 319 2 272 4 101 1 254 4 175 1 80 4 102 8 258 3 229 1 155 2 235 1 350 1 375 18 351 1 329 3 242 2 307 4 281 10 40 1 310 1 188 5 118 1 119 1 245 1 
316 1 317 7 45 2 167 1 97 1 337 1 144 3 270 1 319 2 272 4 101 1 254 4 80 4 102 8 258 3 155 3 235 2 375 16 351 1 329 3 242 3 307 4 281 9 40 1 188 6 118 1 119 1 
286 3 258 1 317 4 229 2 155 3 45 1 47 1 375 7 350 3 329 3 281 3 188 6 175 1 
286 1 316 1 317 8 45 2 47 1 167 1 97 1 337 1 144 2 270 1 319 2 272 4 101 1 254 4 175 1 80 4 102 8 258 3 229 1 155 1 235 1 350 1 375 18 351 1 329 3 242 2 307 4 281 10 40 1 188 4 118 1 119 1 245 1 
335 1 54 1 185 1 115 1 176 1 195 1 120 1 
32 1 335 1 267 1 38 1 195 1 170 1 207 1 54 1 185 1 115 1 176 1 120 1 
264 1 95 1 114 1 218 1 34 1 268 1 122 1 332 1 28 1 379 1 87 1 
214 1 334 1 95 1 179 1 268 1 122 1 62 1 195 2 87 1 264 1 114 1 185 2 115 1 368 1 332 1 379 1 23 1 120 1 
70 1 214 2 334 1 61 1 179 2 268 1 122 3 169 1 62 1 195 2 87 1 88 1 264 1 114 2 185 2 162 1 57 1 115 1 368 1 332 1 379 1 23 1 120 2 
214 2 70 1 268 2 122 3 169 1 195 2 57 1 368 1 199 1 61 1 179 2 62 1 87 1 19 1 88 1 264 2 185 2 114 2 162 1 115 1 379 2 332 1 23 1 120 2 
214 1 70 1 83 2 95 1 192 1 132 1 199 1 268 3 300 1 108 1 122 4 280 1 87 1 264 3 114 1 162 1 57 1 173 1 117 1 332 1 163 2 379 3 151 1 
214 1 70 1 83 2 95 1 192 1 132 1 199 1 268 3 108 1 122 4 24 1 87 1 264 3 114 1 162 1 57 1 173 1 117 1 332 1 163 2 379 3 151 1 
264 1 268 1 332 1 379 1 219 1 87 1 
228 1 266 1 214 1 95 2 133 1 35 1 268 7 122 3 219 1 328 1 124 1 87 2 221 1 264 6 114 2 55 1 379 7 332 3 256 1 370 1 358 1 
214 1 266 1 334 1 286 1 317 3 45 1 47 1 268 1 122 1 195 2 51 1 74 1 272 2 254 2 175 1 368 1 79 1 80 2 102 4 325 1 258 1 229 1 179 1 232 1 375 6 350 1 62 1 329 2 17 2 377 1 64 1 87 1 261 2 263 1 264 1 114 1 307 2 185 2 281 3 115 2 188 2 332 1 379 1 357 1 23 1 245 1 120 1 
95 1 192 1 268 1 122 2 24 1 171 1 173 1 369 1 151 1 178 1 153 2 83 3 132 2 33 2 298 1 85 1 233 1 108 1 15 1 376 1 240 2 264 1 210 1 117 1 163 3 379 1 116 1 67 2 
266 1 214 1 107 1 268 2 122 2 219 1 124 1 87 1 264 2 114 1 173 1 379 2 332 2 
266 1 95 1 199 1 218 1 268 4 122 1 87 1 264 4 114 1 332 1 379 4 28 1 371 1 
214 1 105 1 268 2 122 1 328 1 352 1 87 1 264 2 114 1 57 1 379 2 332 2 225 1 370 1 
264 1 95 1 354 1 268 1 187 1 332 1 379 1 177 1 81 1 87 1 
266 1 228 1 133 1 268 2 122 1 87 1 26 1 264 2 114 1 379 2 332 1 
266 1 228 1 95 1 218 1 268 5 122 3 87 2 264 4 114 2 55 1 57 1 28 1 379 5 332 2 256 1 371 1 
266 1 228 1 95 1 218 1 268 5 122 3 87 2 264 4 114 2 57 1 28 1 379 5 332 2 342 1 256 1 371 1 
214 1 95 1 179 1 268 1 122 1 62 1 195 2 87 1 19 1 264 1 114 1 185 2 115 1 368 1 332 1 379 1 23 1 120 1 
214 1 268 1 122 1 328 1 124 1 87 1 264 1 114 1 57 1 379 1 332 2 370 1 358 1 
273 1 185 1 265 1 363 1 204 1 181 1 195 1 110 1 120 1 
262 1 204 1 244 1 
52 1 363 1 115 1 204 1 181 1 
83 2 61 1 363 2 204 1 108 1 169 1 15 1 181 2 262 1 88 1 52 2 146 1 282 1 115 1 117 1 163 2 343 1 244 1 151 1 
60 1 34 1 292 1 6 1 
60 1 248 1 292 1 6 1 190 1 303 1 380 1 
89 1 269 1 303 1 
60 1 248 1 3 1 292 1 6 1 311 1 190 1 99 1 303 3 380 3 277 2 345 1 
60 1 248 1 292 1 6 1 355 1 190 1 31 1 303 2 380 2 
248 1 156 1 6 1 99 1 303 1 187 1 177 1 190 1 380 1 165 1 82 1 
248 1 292 1 6 1 190 1 99 1 303 1 380 1 
60 1 248 1 292 2 190 1 99 1 303 1 380 1 
248 2 201 1 6 1 99 1 303 2 292 1 223 1 190 2 212 1 380 2 
60 1 248 1 180 1 6 2 237 1 99 1 303 3 292 1 174 1 190 1 380 3 31 2 165 1 
60 1 248 1 6 1 99 1 303 2 292 1 293 1 187 1 177 2 275 1 81 1 190 1 380 2 31 1 82 1 
60 1 305 1 248 2 292 1 6 2 355 1 237 1 190 2 99 1 31 2 303 4 380 4 165 1 
60 1 248 1 292 1 6 1 190 1 99 1 303 1 380 1 
60 2 248 1 3 1 6 3 237 1 303 4 145 1 292 2 190 1 31 2 380 4 277 1 345 1 165 1 
60 1 287 1 248 1 6 1 349 1 99 1 303 2 292 1 190 1 380 2 31 1 296 1 
60 1 248 1 53 1 3 1 292 1 6 1 190 1 99 1 303 3 380 3 277 2 345 2 
113 2 183 1 6 2 50 1 
248 1 251 1 190 1 99 1 303 1 380 1 
60 1 248 1 292 1 6 1 174 1 190 1 99 1 31 1 303 2 380 2 
72 1 
60 1 248 1 292 1 6 1 190 1 99 1 303 1 380 1 
60 1 248 1 6 1 99 1 303 3 292 1 174 1 190 1 31 1 380 3 277 1 
145 1 6 1 237 1 165 1 
292 1 6 1 

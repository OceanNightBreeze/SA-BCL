#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 303 110 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 303 110 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 303 110 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 303 110 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 303 110 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 6 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 300 98 342 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 300 98 342 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 342 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 6 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 303 (143,377) (143,377) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 2 99 1 192 1 360 2 24 9 330 4 50 2 51 2 289 6 127 1 264 5 370 2 369 1 28 1 267 2 59 1 155 1 133 1 60 1 351 1 134 1 189 3 218 1 297 1 119 1 172 2 206 9 221 1 
74 2 99 1 192 1 360 2 24 9 330 4 51 2 50 2 289 6 127 1 264 5 370 2 369 1 28 1 267 2 59 1 155 1 133 1 60 1 351 1 134 1 189 3 218 1 297 1 119 1 172 2 206 9 221 1 
74 2 99 1 192 1 360 2 24 10 330 5 51 2 50 2 289 7 127 1 264 6 370 2 369 1 28 1 267 2 59 1 155 1 133 1 60 1 351 1 134 1 189 4 218 1 297 1 119 1 172 2 206 10 221 1 
74 2 99 1 192 1 360 1 24 7 330 3 51 2 50 2 289 4 127 1 264 4 370 2 369 1 28 1 267 2 59 1 155 1 133 1 60 1 351 1 134 1 189 2 218 1 119 1 172 2 206 7 221 1 
74 1 133 1 192 1 360 2 24 4 330 2 51 1 189 1 297 1 289 3 119 1 264 3 370 1 172 1 206 4 221 1 267 1 59 1 
74 1 99 1 133 1 192 1 158 1 24 2 50 1 190 1 127 1 264 1 370 1 172 1 197 1 206 2 221 1 267 1 
74 2 133 1 192 1 24 3 330 1 50 1 189 1 289 1 264 2 369 1 206 3 221 1 267 2 
74 2 133 1 192 1 360 2 351 1 24 9 330 4 51 1 50 1 189 3 67 1 218 1 105 1 297 1 119 1 289 7 264 5 370 1 369 1 172 1 206 9 221 1 59 1 267 2 
74 2 133 1 192 1 360 2 351 1 24 9 330 4 51 1 50 1 189 3 67 1 218 1 105 1 297 1 119 1 289 7 264 5 370 1 369 1 172 1 206 9 221 1 59 1 267 2 
305 1 73 1 6 1 
346 1 305 1 137 2 
215 2 3 1 362 1 251 2 200 2 17 2 302 2 87 2 
174 1 124 2 3 1 144 1 362 1 258 1 176 1 260 1 308 1 211 1 104 1 284 1 364 1 366 1 265 1 232 2 290 2 213 1 86 1 87 3 182 1 215 2 184 1 40 1 135 1 200 3 17 2 92 1 138 1 20 1 376 1 247 1 250 1 251 2 302 2 280 2 281 2 
112 1 37 1 320 1 215 1 362 1 251 1 200 1 17 1 302 1 87 1 
305 1 362 1 336 1 53 1 371 1 154 1 58 1 87 2 37 1 112 2 157 1 215 1 186 1 200 2 17 1 19 1 320 1 204 1 251 1 73 1 302 2 
37 1 112 2 215 2 305 1 186 1 362 1 200 2 17 2 19 1 320 1 336 2 204 1 53 1 251 2 73 1 58 1 302 2 154 2 87 2 
8 1 336 1 179 1 340 1 154 1 
8 1 80 1 336 2 95 1 305 1 340 1 73 1 154 2 
336 1 340 1 154 1 
112 1 37 1 215 1 362 1 200 1 17 1 8 1 320 1 336 1 251 1 154 1 58 1 302 1 87 1 
305 1 
8 1 336 2 95 1 305 1 84 1 340 1 73 1 154 2 
156 1 268 2 305 1 125 1 64 1 331 1 103 1 52 1 8 2 336 5 95 1 81 2 323 2 235 1 56 1 55 1 340 2 73 1 154 5 
182 1 215 1 124 1 260 1 176 1 200 2 211 1 92 1 364 1 335 1 138 1 232 1 290 1 250 1 251 1 86 1 107 1 343 1 302 1 87 2 
3 1 6 1 
215 1 3 2 200 2 17 1 295 1 82 1 251 1 302 2 87 2 
36 1 256 1 107 1 
182 1 124 1 3 1 200 1 176 1 260 1 211 1 92 1 354 1 138 1 364 1 232 1 290 1 250 1 86 1 87 1 
215 3 3 1 251 3 200 3 17 1 343 1 302 3 87 3 
112 1 37 1 215 1 251 1 200 1 302 1 87 1 
295 1 112 1 215 1 82 1 251 1 200 1 17 1 302 1 87 1 
174 1 124 1 210 1 3 1 362 1 4 1 258 1 260 1 176 1 308 1 211 1 284 1 364 1 335 1 336 1 53 1 232 1 290 1 213 1 86 1 343 1 154 1 87 4 182 1 112 2 215 3 184 1 40 1 186 1 200 4 242 1 17 2 92 1 295 1 19 1 138 1 20 1 204 1 376 1 247 1 250 1 251 3 302 3 280 1 281 2 
157 1 123 1 215 1 3 1 251 1 200 2 302 2 343 1 87 2 
112 1 215 3 305 1 186 1 200 3 17 1 242 1 295 1 19 1 335 1 336 1 204 1 53 1 251 3 140 1 154 1 343 2 302 3 87 3 
36 1 215 2 200 2 17 1 295 1 251 2 343 1 302 2 107 1 87 2 
182 1 124 1 3 1 200 1 176 1 260 1 211 1 92 1 138 1 364 1 232 1 290 1 250 1 86 1 87 1 
182 1 124 1 3 1 200 1 318 1 176 1 260 1 92 1 138 1 364 1 231 1 232 1 290 1 86 1 87 1 
174 1 1 1 256 2 227 1 308 2 312 1 284 1 334 1 366 2 213 1 107 2 292 1 131 1 109 1 36 2 184 1 40 1 63 1 136 1 247 1 328 1 121 1 281 2 280 4 
112 1 215 1 204 1 251 1 200 1 302 1 87 1 253 1 
157 1 123 1 23 1 215 4 3 1 200 5 17 1 295 1 335 1 251 4 279 1 343 2 302 5 87 5 
112 1 37 1 215 2 251 2 200 2 302 2 253 1 87 2 
337 1 34 1 
337 1 34 1 
348 1 241 1 
348 1 241 1 
348 1 241 1 
337 1 277 1 34 1 
337 1 277 1 34 1 
337 1 32 1 34 1 
0 1 142 1 337 2 348 1 241 1 34 2 
337 1 277 1 34 1 
337 1 352 1 34 1 
337 1 352 1 34 1 
337 1 352 1 34 1 
88 1 0 1 100 2 350 1 216 2 114 1 305 1 185 2 117 1 240 1 166 3 202 1 337 2 336 2 9 1 273 2 83 2 34 2 154 2 
100 1 361 1 3 1 78 1 26 1 337 1 336 1 83 1 130 1 32 1 34 1 154 1 87 2 88 1 215 2 216 1 185 1 116 1 187 1 199 1 166 1 200 2 251 2 302 2 
370 1 51 1 172 1 
190 1 370 1 172 1 
190 1 101 1 51 2 325 1 172 3 222 1 
190 1 293 1 101 1 51 1 172 2 222 1 
190 1 101 2 51 1 172 2 222 1 
361 1 305 2 146 2 227 1 331 1 312 1 26 1 8 4 336 5 228 1 81 1 128 1 106 1 130 1 30 2 56 2 340 1 235 3 154 5 131 1 109 1 346 1 214 1 268 1 137 3 245 1 95 1 139 2 323 1 120 1 278 1 73 1 
358 1 305 5 146 6 282 1 363 5 283 1 227 3 331 1 212 1 312 3 8 7 336 9 228 1 81 2 179 5 128 2 130 4 56 6 340 6 235 8 154 9 131 3 156 1 109 3 346 3 214 2 183 1 268 2 137 9 245 3 246 1 95 1 139 6 323 2 73 1 
305 3 146 2 227 1 312 1 8 2 336 3 81 1 128 1 106 1 130 1 30 1 235 3 56 2 154 3 131 1 109 1 156 1 346 2 214 1 268 1 137 4 245 1 120 1 323 1 139 2 73 1 
358 1 305 4 146 4 282 1 227 2 312 2 8 3 336 4 81 1 128 1 106 1 130 2 30 2 235 5 56 4 154 4 131 2 109 2 156 1 346 3 214 1 183 1 268 1 137 7 245 2 139 4 323 1 120 1 73 1 
159 1 6 1 92 1 
92 1 236 1 
148 1 
182 1 92 1 
182 1 12 1 25 1 159 2 86 1 92 3 
182 1 86 1 92 1 
92 1 329 1 
110 1 366 1 115 1 280 1 303 1 
110 1 366 1 115 1 280 1 303 1 
110 1 366 1 338 1 115 1 280 1 303 1 
110 1 366 1 115 1 280 1 303 1 
110 1 366 1 115 1 280 1 303 1 
74 1 192 1 124 1 24 2 51 1 50 1 176 1 196 1 364 1 289 1 177 1 264 1 232 1 367 1 178 1 290 1 370 1 314 1 372 1 267 1 133 1 38 1 347 1 353 1 190 1 205 1 325 1 172 2 206 2 221 1 
74 1 124 1 24 3 51 1 50 1 176 1 196 1 364 1 289 2 264 1 232 1 27 1 367 1 178 1 290 1 370 1 372 1 267 1 133 1 38 1 347 1 353 1 319 1 69 1 190 1 205 1 325 1 172 2 206 3 221 1 
124 1 24 2 50 1 51 1 176 1 196 1 364 1 289 2 264 1 232 1 367 1 178 1 290 1 370 1 133 1 38 1 353 1 319 1 69 1 190 1 205 1 325 1 172 2 206 2 221 1 
182 1 74 1 237 1 38 2 124 1 24 1 42 1 50 2 164 1 176 1 92 1 364 1 138 1 313 1 27 1 232 1 367 2 290 1 178 2 274 1 327 1 206 1 267 1 
74 1 192 1 124 1 24 1 51 1 50 1 176 1 196 1 364 1 232 1 367 1 178 1 290 1 370 1 314 1 372 1 267 1 38 1 347 1 353 1 319 1 190 1 205 1 325 1 172 2 206 1 
169 1 
47 2 48 1 225 2 331 1 288 1 336 5 232 2 53 1 290 2 152 1 56 2 340 6 235 2 154 5 345 1 111 2 346 2 157 1 112 1 113 1 13 1 165 1 200 1 201 2 19 1 204 1 252 1 73 2 302 1 208 1 124 2 305 3 176 1 364 1 263 2 81 1 128 1 371 1 266 1 33 1 87 1 182 1 268 1 89 4 374 2 42 1 186 1 316 1 137 2 92 1 138 2 321 2 95 3 323 1 327 1 
48 1 305 2 336 3 263 1 53 1 371 1 84 1 340 2 154 3 87 1 345 1 157 1 112 1 113 1 89 2 186 1 316 1 165 1 200 1 19 1 95 1 204 1 73 2 302 1 
345 1 112 1 157 1 48 1 113 1 89 3 305 2 186 1 165 1 316 1 200 1 19 1 336 2 321 1 204 1 53 1 371 1 73 2 154 2 302 1 87 1 
47 1 48 1 305 2 336 3 263 1 53 1 371 1 84 1 340 2 154 3 87 1 345 1 157 1 112 1 113 1 89 3 186 1 316 1 165 1 200 1 19 1 95 1 204 1 321 1 73 2 302 1 
47 4 48 1 225 2 331 1 285 1 336 5 53 1 152 1 340 7 235 1 56 1 58 1 154 5 345 1 112 2 157 1 346 2 111 2 113 1 198 1 165 1 200 2 17 1 201 2 19 1 204 1 251 1 73 4 302 2 305 4 362 1 310 1 79 1 263 4 81 1 371 1 84 1 33 1 87 2 37 1 215 1 89 5 268 1 186 1 374 2 217 1 316 1 320 1 95 3 321 3 323 1 
47 2 48 1 225 2 331 1 336 4 53 1 152 1 235 1 56 1 340 4 154 4 345 1 112 1 157 1 346 2 111 2 113 1 165 1 200 1 201 2 19 1 204 1 73 3 302 1 208 1 305 4 81 1 263 2 371 1 33 1 87 1 89 4 268 1 186 1 374 2 316 1 137 2 95 2 321 2 323 1 
47 2 48 1 305 3 225 2 331 1 310 1 79 1 336 4 263 2 81 1 53 1 371 1 152 1 340 4 56 1 235 1 33 1 154 4 87 1 345 1 111 2 346 2 157 1 112 1 113 1 268 1 89 4 374 2 186 1 217 1 316 1 165 1 200 1 201 2 19 1 321 2 95 2 204 1 323 1 73 3 302 1 
47 2 48 1 305 3 225 2 331 1 310 1 79 1 336 4 263 2 81 1 53 1 371 1 152 1 340 4 56 1 235 1 33 1 154 4 87 1 345 1 111 2 346 2 157 1 112 1 113 1 268 1 89 4 374 2 186 1 217 1 316 1 165 1 200 1 201 2 19 1 321 2 95 2 204 1 323 1 73 3 302 1 
47 2 224 1 48 1 175 1 305 3 255 2 225 2 331 1 310 1 336 4 263 2 81 1 53 1 371 1 340 4 235 1 56 1 33 1 154 4 87 1 345 1 157 1 112 1 113 1 268 1 89 4 186 1 316 1 165 1 200 1 137 2 45 2 201 2 19 1 321 2 95 2 204 1 323 1 357 1 73 3 302 1 
47 3 48 1 305 3 225 2 331 1 310 1 285 1 79 1 336 4 81 1 263 3 53 1 371 1 152 1 56 1 235 1 340 5 33 1 154 4 87 1 345 1 111 2 346 2 157 1 112 1 113 1 268 1 89 5 374 2 186 1 217 1 316 1 165 1 200 1 201 2 19 1 95 2 321 3 204 1 323 1 73 3 302 1 
47 3 48 1 305 3 225 2 331 1 310 1 285 1 79 1 336 4 81 1 263 3 53 1 371 1 152 1 56 1 235 1 340 5 33 1 154 4 87 1 345 1 111 2 346 2 157 1 112 1 113 1 268 1 89 5 374 2 186 1 217 1 316 1 165 1 200 1 201 2 19 1 95 2 321 3 204 1 323 1 73 3 302 1 
47 2 48 1 224 1 225 2 331 1 336 4 53 1 56 1 235 1 340 4 154 4 345 1 112 1 157 1 113 1 165 1 200 1 201 2 19 1 204 1 73 3 302 1 208 1 305 3 255 2 81 1 263 2 371 1 33 1 87 1 89 4 268 1 186 1 316 1 45 2 137 2 95 2 321 2 323 1 
174 1 143 1 3 1 5 1 6 1 308 2 312 1 284 1 334 1 366 3 213 1 292 1 131 1 315 1 184 1 40 1 136 1 296 1 377 1 247 1 281 2 280 5 303 1 
174 2 126 3 3 1 145 1 256 11 227 2 308 6 104 1 312 1 284 2 366 8 213 2 292 2 107 11 181 1 373 1 131 2 36 4 109 1 132 1 184 2 40 1 91 1 15 3 136 1 68 1 294 1 18 1 245 2 376 1 247 2 281 4 280 14 
174 1 124 1 3 1 260 1 176 1 211 1 309 1 308 1 104 1 284 1 364 1 335 1 366 1 232 1 290 1 86 1 213 1 343 1 87 2 182 1 36 1 132 1 215 1 184 1 239 1 40 1 200 2 188 1 92 1 354 1 138 1 376 1 247 1 250 1 251 1 302 1 281 2 280 2 
143 1 3 1 226 1 5 1 227 2 104 1 284 3 195 2 335 1 287 2 232 1 290 1 292 3 343 1 107 6 109 2 238 2 200 3 296 1 245 2 247 3 250 2 251 1 302 1 303 1 174 3 124 1 256 6 258 2 176 2 260 2 308 9 211 2 312 3 77 2 364 2 366 10 213 3 86 2 87 3 131 3 182 2 36 6 132 1 215 1 315 1 184 3 40 3 136 3 92 2 272 1 138 1 376 1 377 1 281 6 280 19 
174 2 124 8 144 2 176 2 308 1 104 1 334 1 284 2 364 2 366 1 177 1 232 8 290 7 213 2 343 1 87 1 182 2 215 1 160 1 184 2 40 2 42 1 65 1 200 1 92 3 319 1 138 2 376 1 247 2 251 1 171 1 324 1 72 1 301 1 327 1 378 1 302 1 281 4 280 2 
174 1 256 1 227 1 308 2 312 1 284 1 366 1 213 1 292 1 107 1 87 1 131 1 36 1 109 1 132 1 215 1 184 1 40 1 270 1 200 1 136 1 17 1 295 1 245 1 247 1 251 1 302 1 281 2 280 3 
36 1 174 1 184 1 40 1 256 1 227 1 334 1 284 1 366 2 247 1 328 1 213 1 292 1 107 1 181 1 280 2 281 2 131 1 
36 1 109 1 174 1 184 1 40 1 256 1 63 1 136 1 308 2 312 1 334 1 284 1 247 1 213 1 292 1 107 1 280 2 281 2 
174 1 256 2 227 1 308 2 312 1 284 1 334 1 366 2 213 1 107 2 292 2 131 1 181 1 36 2 109 1 184 1 40 1 136 1 245 1 247 1 281 2 280 4 
36 1 174 1 184 1 40 1 256 1 227 1 284 1 366 2 247 1 171 1 328 1 213 1 292 1 107 1 181 1 280 2 281 2 131 1 
36 1 109 1 174 1 184 1 40 1 256 1 63 1 136 1 308 2 312 1 284 1 247 1 171 1 213 1 292 1 107 1 280 2 281 2 
174 1 256 2 227 1 308 2 312 1 284 1 366 2 213 1 107 2 292 2 131 1 181 1 36 2 109 1 184 1 40 1 136 1 245 1 247 1 171 1 281 2 280 4 
109 1 36 2 174 1 184 1 40 1 256 2 227 1 136 1 308 2 312 1 284 1 245 1 366 2 247 1 213 1 292 2 107 2 181 1 281 2 131 1 280 4 
174 1 124 1 3 1 258 1 260 1 176 1 211 1 308 1 104 1 284 1 364 1 366 1 232 1 290 1 86 1 213 1 87 1 182 1 184 1 40 1 200 1 92 1 138 1 376 1 247 1 250 1 280 2 281 2 
174 1 124 1 3 1 260 1 176 1 308 1 104 1 284 1 364 1 366 1 231 1 232 1 290 1 86 1 213 1 87 1 182 1 184 1 40 1 318 1 200 1 92 1 138 1 356 1 376 1 247 1 280 2 281 2 
174 1 256 2 227 1 308 2 312 1 284 1 366 2 213 1 107 2 292 2 131 1 181 1 36 2 109 1 132 1 184 1 40 1 136 1 245 1 247 1 281 2 280 4 
174 1 124 1 256 2 258 1 227 1 260 1 176 1 308 2 211 1 312 1 77 1 284 1 364 1 366 2 177 1 232 1 290 1 86 1 213 1 292 2 107 2 181 1 131 1 87 1 109 1 36 2 182 1 184 1 40 1 200 1 136 1 92 1 245 1 247 1 250 1 280 4 281 2 
174 1 256 1 227 1 308 1 312 1 284 1 262 1 366 2 213 1 292 1 107 1 181 1 87 1 131 1 109 1 36 1 132 1 215 1 184 1 40 1 200 1 17 1 295 1 245 1 247 1 251 1 302 1 281 2 280 3 
98 1 223 1 174 3 143 1 126 4 5 1 227 4 308 21 312 5 366 20 149 1 339 1 342 1 213 3 292 7 131 5 181 4 109 4 315 1 184 3 14 1 91 3 162 1 15 3 317 1 44 1 136 3 94 2 18 1 296 1 245 4 170 1 21 1 377 1 191 1 247 3 300 1 275 1 326 4 141 1 303 1 281 6 280 41 
98 1 223 1 174 4 143 1 126 4 5 1 227 4 308 18 312 4 366 20 149 1 339 1 342 1 213 4 292 7 131 5 181 3 109 3 315 1 184 4 14 1 91 3 162 1 15 3 317 1 44 1 136 4 94 2 18 1 296 1 245 4 170 2 21 1 377 1 191 1 247 4 300 1 275 1 326 4 141 1 303 1 281 8 280 38 
98 1 174 1 143 1 126 1 5 1 308 4 312 1 366 5 342 1 213 1 292 1 131 1 315 1 184 1 14 1 91 1 162 1 15 1 136 1 94 1 296 1 377 1 247 1 326 1 303 1 281 2 280 9 
22 1 98 1 174 2 126 2 227 3 308 10 312 3 366 9 342 1 213 2 292 6 131 3 181 3 109 3 184 2 14 1 91 1 162 1 15 1 317 1 136 3 94 1 18 1 245 3 21 1 247 2 326 2 141 2 281 4 280 19 
98 2 223 1 174 3 126 2 227 3 308 12 312 2 366 14 149 1 339 1 342 1 213 3 292 4 181 2 131 3 109 2 184 3 14 1 91 2 162 1 15 2 317 1 136 2 44 1 94 2 245 3 170 2 247 3 300 1 326 4 275 1 141 1 281 6 280 26 
0 1 100 1 337 1 9 1 216 1 114 1 185 1 248 1 83 1 34 1 
32 1 187 1 
304 1 100 1 337 1 216 1 185 1 233 1 83 1 54 1 34 1 
88 1 0 1 100 1 350 1 216 1 114 1 305 1 185 1 240 1 166 2 202 1 336 1 337 1 9 1 273 1 83 1 154 1 34 1 
88 1 0 1 100 1 350 1 216 1 114 1 305 1 185 1 240 1 166 2 202 1 336 1 337 1 9 1 273 1 83 1 154 1 34 1 
88 1 0 1 100 1 350 1 216 1 114 1 305 1 185 1 240 1 166 2 202 1 336 1 337 1 9 1 273 1 83 1 154 1 34 1 
359 1 142 1 277 1 
359 1 142 1 277 1 
298 1 352 1 
142 1 298 1 352 1 
78 1 199 1 
100 1 361 1 3 1 78 1 8 1 26 1 336 1 337 1 83 1 130 1 32 1 154 1 34 1 87 2 215 2 216 1 185 1 116 1 269 1 240 1 187 1 199 1 200 2 166 1 273 1 251 2 302 2 
359 1 277 1 
142 1 298 1 352 1 
174 1 124 2 144 2 176 1 307 1 308 1 104 1 284 1 364 1 366 1 229 1 150 1 232 2 290 2 213 1 87 2 182 1 132 1 184 1 40 1 41 1 200 2 92 1 375 1 376 1 247 1 324 1 378 1 302 2 281 2 280 2 
124 2 51 1 176 1 261 1 196 1 190 1 364 1 319 1 177 1 232 2 299 1 290 2 367 1 370 1 205 1 325 1 172 2 85 1 372 1 
124 1 193 1 51 1 176 1 196 1 190 1 319 1 364 1 232 1 290 1 367 1 370 1 205 1 325 1 172 2 85 1 372 1 
182 1 124 1 254 1 42 1 176 1 92 1 261 1 364 1 138 1 232 1 290 1 367 1 274 1 327 1 
124 1 51 1 176 1 261 1 196 1 190 1 319 1 364 1 232 1 299 1 290 1 367 1 370 1 205 1 325 1 172 2 85 1 372 1 
332 1 
305 1 125 1 235 1 56 1 73 1 103 1 6 1 
305 2 331 1 336 1 81 1 152 1 56 1 235 1 340 1 154 1 346 1 111 1 268 1 374 1 137 1 95 1 323 1 73 1 
49 1 146 3 147 1 331 2 227 1 336 2 232 1 10 1 290 1 235 4 340 2 56 3 236 2 154 2 109 1 12 1 346 3 238 1 159 1 16 1 167 1 19 1 245 1 76 1 124 1 305 3 176 2 312 1 364 1 365 1 81 2 128 1 31 1 86 1 131 1 182 1 268 2 92 4 137 6 138 1 95 1 323 2 139 3 
223 1 76 2 102 1 305 5 126 1 146 5 331 2 227 2 312 2 286 1 336 1 149 1 81 2 128 1 339 1 340 1 235 8 56 5 154 1 131 2 109 2 346 3 268 2 13 1 91 1 15 1 44 1 137 6 245 2 95 1 139 5 323 2 275 1 276 1 73 2 
76 2 362 1 5 1 331 1 311 1 312 1 79 1 336 1 81 1 56 2 235 2 154 1 58 1 87 1 131 2 112 1 37 1 268 1 215 1 315 1 200 1 17 1 296 1 320 1 323 1 251 1 276 1 302 1 
268 1 125 1 305 1 331 1 103 1 81 1 323 1 56 1 235 1 73 1 
109 2 346 5 238 1 76 2 305 5 146 5 227 2 137 10 312 2 245 2 139 5 276 1 56 5 235 5 131 2 
336 1 95 1 305 1 340 1 73 1 154 1 
124 4 176 1 331 1 364 1 288 1 336 3 81 2 232 4 290 4 129 1 128 2 235 2 340 4 56 2 154 3 156 1 182 1 268 2 13 2 90 1 42 1 92 1 138 2 70 1 95 2 96 2 323 2 252 1 327 1 
174 1 124 1 3 1 362 1 258 1 176 1 260 1 308 1 211 1 284 1 364 1 232 1 290 1 213 1 86 1 87 3 182 1 215 2 184 1 40 1 200 3 17 2 92 1 138 1 20 1 376 1 247 1 250 1 251 2 302 2 280 1 281 2 
346 1 268 1 13 1 305 2 146 1 331 1 137 2 81 1 139 1 323 1 128 1 56 2 235 1 73 1 303 1 
219 1 100 1 216 1 
219 1 100 1 216 1 
78 1 100 1 9 1 216 1 271 1 
219 1 100 1 216 1 
100 1 216 1 93 1 
100 1 216 1 93 1 
100 1 216 1 93 1 
100 1 216 1 
337 1 34 1 
174 1 143 1 126 1 5 1 308 3 312 1 366 4 339 1 213 1 292 1 131 1 315 1 184 1 91 1 15 1 162 1 136 1 296 1 377 1 247 1 303 1 280 7 281 2 
174 2 143 1 126 2 5 1 227 1 308 4 312 1 366 6 230 1 339 1 213 2 292 2 131 2 181 1 315 1 184 2 91 1 162 1 15 1 136 1 18 1 296 1 245 1 377 1 247 2 303 1 280 10 281 4 
223 1 174 3 143 1 126 1 5 1 227 2 308 9 312 3 366 9 230 1 149 1 339 1 213 3 292 3 181 1 131 3 109 2 315 1 184 3 91 1 15 1 162 1 44 1 136 2 296 1 245 2 170 1 377 1 247 3 275 1 303 1 280 18 281 6 
174 3 223 1 143 1 126 1 5 1 227 2 308 6 312 2 366 10 230 1 149 1 339 1 213 3 292 4 181 2 131 3 109 1 315 1 184 3 91 1 15 1 162 1 44 1 136 2 296 1 245 2 170 1 377 1 247 3 275 1 303 1 280 16 281 6 
174 1 143 1 126 1 5 1 308 3 312 1 366 4 339 1 213 1 292 1 131 1 315 1 184 1 91 1 15 1 162 1 136 1 296 1 377 1 247 1 303 1 280 7 281 2 
174 1 223 1 126 1 227 2 308 6 312 2 366 6 149 1 339 1 213 1 292 2 181 1 131 2 109 2 184 1 91 1 15 1 162 1 44 1 136 1 245 2 247 1 275 1 280 12 281 2 
223 1 174 4 143 1 126 1 5 1 227 2 308 7 312 2 366 10 149 1 230 1 339 1 213 4 292 3 181 1 131 3 109 1 315 1 184 4 91 1 162 1 15 1 44 1 136 2 296 1 245 2 170 2 377 1 247 4 275 1 303 1 280 17 281 8 
223 1 174 4 126 1 227 3 308 7 312 2 366 9 149 1 339 1 213 4 292 6 181 3 131 3 109 2 184 4 91 1 162 1 15 1 44 1 136 3 245 3 170 2 21 1 247 4 275 1 280 16 281 8 
143 2 315 3 5 1 308 4 136 3 312 1 296 3 366 3 377 1 292 6 280 7 181 3 131 1 
223 1 174 4 143 1 126 1 5 1 227 2 308 7 312 2 366 10 149 1 339 1 213 4 292 3 181 1 131 3 109 1 315 1 184 4 91 1 162 1 15 1 44 1 136 2 296 1 245 2 170 2 21 1 377 1 247 4 275 1 303 1 280 17 281 8 
174 2 143 1 315 1 184 2 5 1 308 3 136 1 312 1 296 1 366 4 170 1 377 1 247 2 213 2 292 2 303 1 131 1 280 7 181 1 281 4 
143 1 315 1 5 1 308 2 6 1 136 1 312 1 296 1 366 3 377 1 292 1 303 1 131 1 280 5 
109 1 174 1 184 1 227 1 136 1 308 2 312 1 245 1 366 2 230 1 247 1 213 1 292 2 281 2 131 1 280 4 181 1 
109 1 126 2 91 1 15 1 227 1 136 1 308 4 312 1 18 1 245 1 366 3 292 2 280 7 131 1 181 1 
174 1 143 1 126 2 5 1 227 2 308 8 312 3 366 9 213 1 292 3 131 3 373 1 181 1 109 2 315 1 184 1 15 2 136 2 68 1 18 1 296 1 245 2 170 1 377 1 247 1 303 1 280 17 281 2 
126 1 308 1 280 1 
366 1 15 1 280 1 
109 1 174 1 238 1 184 1 227 1 308 3 136 2 312 1 245 1 366 3 230 1 247 1 213 1 292 3 281 2 280 6 131 1 181 1 
174 1 223 1 126 1 227 2 308 6 312 2 366 6 149 1 339 1 213 1 292 2 181 1 131 2 109 2 184 1 91 1 15 1 162 1 44 1 136 1 245 2 247 1 275 1 280 12 281 2 
315 1 5 1 308 3 136 1 312 1 296 1 366 3 292 2 131 1 280 6 181 1 
174 1 143 1 315 1 184 1 136 1 308 2 296 1 168 1 366 1 170 1 377 1 247 1 213 1 292 2 181 1 280 3 281 2 
174 1 315 2 184 1 162 1 5 1 136 3 308 5 311 1 312 2 296 2 366 5 247 1 213 1 292 5 281 2 181 2 280 10 131 2 
174 1 184 1 162 1 227 1 366 2 247 1 213 1 292 1 281 2 131 1 280 2 181 1 
109 1 174 1 184 1 162 1 227 1 136 1 308 2 312 1 245 1 366 2 247 1 213 1 292 2 281 2 131 1 280 4 181 1 
174 3 315 1 184 3 162 1 308 2 136 1 168 1 296 1 366 1 170 1 21 1 247 3 213 3 292 2 280 3 281 6 181 1 
174 4 143 1 126 3 5 1 227 2 308 10 312 3 366 11 230 1 213 4 292 4 131 3 181 2 109 2 315 1 349 1 184 4 91 1 162 1 15 3 136 2 296 1 355 1 245 2 170 1 21 1 377 1 247 4 97 1 303 1 281 8 280 21 
157 1 123 1 3 1 2 1 200 1 302 1 87 1 
35 1 157 1 123 1 3 1 2 1 200 1 244 1 234 1 11 1 122 1 302 1 87 1 
182 1 364 1 138 1 124 1 232 1 42 1 290 1 327 1 176 1 6 1 92 1 
182 1 215 1 124 1 3 1 260 1 176 1 200 2 211 1 92 1 138 1 364 1 232 1 290 1 251 1 86 1 343 1 302 1 87 2 
182 2 112 1 61 1 215 2 124 1 186 1 3 1 260 1 176 1 200 2 211 1 92 3 364 1 204 1 96 1 232 1 290 1 251 1 86 2 329 1 343 1 302 2 87 2 
182 2 112 1 61 1 215 2 124 2 186 1 3 1 260 1 176 1 200 2 318 1 92 3 364 1 118 1 204 1 96 1 232 2 290 2 251 1 86 2 329 1 343 1 302 2 87 2 
124 1 305 1 362 1 176 1 364 1 336 2 232 1 290 1 340 1 86 1 58 1 236 1 154 2 87 1 182 1 112 1 37 1 215 1 61 1 159 1 43 1 200 1 17 1 92 4 19 1 320 1 96 1 322 1 251 1 73 1 302 1 329 1 
124 1 305 1 362 1 176 1 364 1 336 2 232 1 290 1 340 1 86 1 58 1 236 1 154 2 87 1 182 1 112 1 37 1 215 1 61 1 159 1 200 1 17 1 167 1 92 4 19 1 320 1 96 1 251 1 73 1 302 1 329 1 
364 1 124 1 160 1 232 1 290 1 176 1 
182 2 12 1 124 7 160 1 144 1 257 1 65 1 176 3 92 3 319 1 138 2 364 2 177 1 203 1 232 7 290 6 151 1 72 1 301 1 378 1 86 1 
174 2 143 1 124 1 3 1 258 1 5 1 260 1 176 1 307 1 308 2 211 1 312 1 284 2 195 1 77 1 364 1 366 3 177 1 232 1 290 1 86 1 213 2 292 1 343 1 131 1 87 2 182 1 132 1 215 1 315 1 184 2 40 2 200 2 136 1 92 1 296 1 377 1 247 2 250 1 251 1 302 1 303 1 280 5 281 4 
49 1 147 1 5 1 331 2 103 1 8 1 336 3 232 1 290 1 340 2 56 5 235 4 236 1 154 3 58 1 112 1 159 1 200 1 167 1 17 1 19 1 296 1 251 1 73 2 302 1 76 2 124 1 125 1 305 2 362 1 311 1 312 2 81 2 129 1 31 1 131 2 87 1 37 1 268 2 215 1 315 1 92 2 138 1 320 1 95 1 323 2 276 1 
182 1 12 1 159 1 124 2 160 1 176 2 92 2 364 1 177 1 232 2 10 1 290 2 86 1 
182 1 364 1 138 1 118 1 177 1 124 4 232 4 42 1 290 4 327 1 176 1 7 1 92 1 
182 1 124 2 194 1 62 1 176 2 46 1 92 1 364 1 203 1 96 1 232 2 290 2 151 1 86 1 
190 1 364 1 138 1 124 1 232 1 290 1 370 1 205 1 172 1 176 1 
182 1 364 1 319 1 375 1 124 2 177 1 232 2 290 2 176 1 378 1 92 1 
182 2 124 5 42 1 176 2 7 1 92 3 138 1 364 2 177 1 96 1 232 5 290 4 301 1 72 1 327 1 378 1 
182 2 124 5 39 1 42 1 176 2 7 1 92 3 138 1 364 2 177 1 96 1 232 5 290 4 72 1 327 1 378 1 
182 1 215 1 124 1 3 1 260 1 176 1 200 2 318 1 92 1 138 1 364 1 232 1 290 1 251 1 86 1 343 1 302 1 87 2 
182 1 12 1 124 1 257 1 176 2 92 1 364 1 203 1 96 1 232 1 290 1 151 1 86 1 
306 1 3 1 220 1 207 1 57 1 
75 1 305 1 306 1 362 1 259 1 8 1 336 2 53 1 57 1 154 2 58 1 87 1 37 1 112 2 215 1 186 1 200 1 17 1 242 1 66 1 19 1 320 1 204 1 251 1 220 1 207 1 73 1 302 1 
306 1 41 1 200 1 229 1 150 1 220 1 207 1 302 1 87 1 
220 1 259 1 66 1 
133 1 264 1 6 1 221 1 
74 1 133 1 264 1 24 1 206 1 221 1 267 1 
38 1 24 1 50 1 
74 1 99 2 133 1 192 1 24 3 264 1 71 1 291 1 206 3 221 1 344 1 267 1 
74 1 133 1 289 1 360 1 264 1 24 2 206 2 221 1 267 1 
74 1 192 1 24 1 330 1 51 1 119 1 264 1 370 1 172 1 206 1 267 1 
74 1 192 1 264 1 24 1 206 1 221 1 267 1 
74 1 133 1 192 1 24 1 206 1 221 2 267 1 
74 2 192 1 24 2 243 1 264 1 249 1 341 1 206 2 221 1 267 2 
74 1 133 1 192 1 351 1 24 3 330 1 189 1 218 1 289 2 264 2 206 3 221 1 267 1 
74 1 133 1 192 1 24 2 51 1 163 1 190 1 289 1 264 1 370 1 325 1 172 2 206 2 221 1 267 1 
74 2 133 1 192 1 360 1 24 4 330 1 189 1 297 1 289 2 264 2 206 4 221 1 267 2 
74 1 133 1 192 1 264 1 24 1 206 1 221 1 267 1 
74 1 99 1 133 2 24 4 330 1 189 1 289 2 264 3 71 1 291 1 206 4 221 2 173 1 267 1 
74 1 133 1 192 1 24 2 105 1 289 1 264 1 180 1 206 2 221 1 267 1 108 1 
74 1 99 2 133 1 192 1 24 3 264 1 368 1 71 1 291 2 206 3 221 1 267 1 
333 1 209 1 264 2 29 2 
74 1 192 1 161 1 24 1 206 1 267 1 
218 1 74 1 133 1 192 1 289 1 264 1 24 2 206 2 221 1 267 1 
153 1 
74 1 133 1 192 1 264 1 24 1 206 1 221 1 267 1 
218 1 74 1 99 1 133 1 192 1 289 1 264 1 24 3 206 3 221 1 267 1 
264 1 330 1 173 1 189 1 
264 1 221 1 

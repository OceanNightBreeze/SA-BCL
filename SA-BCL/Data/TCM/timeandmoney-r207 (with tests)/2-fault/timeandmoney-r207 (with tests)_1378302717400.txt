#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 120 1 69 1 352 3 255 1 247 2 28 1 340 1 59 5 238 1 94 9 242 7 81 4 303 1 211 1 153 1 200 1 185 9 325 1 378 1 101 2 179 2 103 1 382 1 
0 1 120 1 69 1 352 3 255 1 247 2 28 1 340 1 59 5 238 1 94 9 242 7 81 4 303 1 211 1 153 1 200 1 185 9 325 1 378 1 101 2 179 2 103 1 382 1 
46 1 120 2 69 1 352 3 247 2 255 2 28 1 59 5 340 2 238 1 239 1 228 1 280 1 94 9 242 6 81 4 303 1 151 1 200 1 153 2 185 9 325 1 378 1 101 2 179 2 87 1 103 1 382 1 
46 1 120 2 69 1 352 3 247 2 255 2 28 1 59 5 340 2 238 1 239 1 228 1 280 1 94 9 242 6 81 4 303 1 151 1 200 1 153 2 185 9 325 1 378 1 101 2 179 2 87 1 103 1 382 1 
46 1 120 2 69 1 352 4 247 2 255 2 28 1 59 6 340 2 238 1 239 1 228 1 280 1 94 10 242 7 81 5 303 1 151 1 200 1 153 2 185 10 325 1 378 1 101 2 179 2 87 1 103 1 382 1 
46 1 120 2 69 1 352 2 247 2 255 2 28 1 59 4 340 2 238 1 239 1 228 1 280 1 94 7 242 4 81 3 151 1 200 1 153 2 185 7 325 1 378 1 101 1 179 2 87 1 103 1 382 1 
69 1 352 1 247 1 255 1 28 1 340 1 238 1 59 3 94 4 242 3 81 2 303 1 153 1 185 4 101 2 179 1 103 1 382 1 
120 1 69 1 247 1 59 1 238 1 340 1 228 1 219 1 94 2 79 1 96 1 153 1 185 2 179 1 87 1 382 1 
120 1 69 1 352 1 247 2 238 1 59 2 94 3 242 1 81 1 200 1 185 3 179 2 382 1 
290 1 178 1 263 1 
169 2 263 1 354 1 
318 2 125 2 161 2 357 2 126 2 141 2 291 1 347 1 
161 3 306 1 2 1 131 1 133 2 309 1 113 1 210 1 357 2 51 1 184 1 291 1 358 1 33 1 187 2 252 1 335 1 317 1 89 1 318 3 253 1 366 1 141 2 319 1 237 1 60 1 171 1 298 1 300 1 282 1 125 2 223 1 194 1 126 2 149 1 174 2 347 1 324 2 264 2 
318 1 125 1 161 1 204 1 357 1 126 1 366 1 141 1 291 1 155 1 
318 1 161 1 191 1 216 1 366 1 267 1 369 1 125 1 271 1 167 1 178 1 102 1 263 1 203 1 
318 1 161 1 191 1 216 2 141 1 366 1 125 1 271 2 357 1 126 1 167 1 178 1 102 1 263 1 203 1 
271 1 216 1 323 1 240 1 330 1 
45 1 271 2 216 2 199 1 178 1 263 1 240 1 330 1 
271 1 216 1 330 1 
318 1 204 1 161 1 216 1 366 1 141 1 144 1 240 1 125 1 271 1 357 1 126 1 291 1 155 1 
263 1 
45 1 271 2 7 1 216 2 178 1 263 1 240 1 330 1 
45 1 90 2 365 1 216 5 70 1 308 1 74 1 240 2 330 2 182 2 271 5 197 2 30 1 292 1 275 1 178 1 202 1 263 1 158 1 
290 1 347 1 
318 2 161 2 27 1 141 1 125 2 172 1 357 1 126 1 347 2 
311 1 206 1 91 1 
318 1 161 1 319 1 131 1 60 1 133 1 113 1 210 1 82 1 223 1 51 1 174 1 347 1 317 1 89 1 264 1 
318 2 161 2 319 1 141 1 131 1 60 1 133 1 113 1 311 1 210 1 125 1 223 1 51 1 261 1 357 1 174 1 116 1 317 1 89 1 264 1 
318 3 125 3 161 3 357 3 126 1 141 3 347 1 116 1 
318 1 125 1 161 1 357 1 366 1 141 1 155 1 
318 1 125 1 161 1 172 1 357 1 126 1 366 1 27 1 141 1 
161 4 306 1 131 1 268 1 133 1 309 1 113 1 210 1 51 1 357 3 271 1 184 1 291 1 187 1 167 1 252 1 335 1 317 1 116 1 89 1 318 4 253 1 191 1 216 1 319 1 141 3 366 1 217 1 237 1 60 1 282 1 125 3 223 1 172 1 194 1 261 1 126 2 149 1 174 1 347 1 324 2 102 1 203 1 264 1 
318 2 125 2 161 2 357 1 141 1 347 1 369 1 269 1 116 1 
318 3 161 3 191 1 216 1 366 1 141 3 217 1 125 3 172 1 271 1 261 1 357 3 126 1 152 1 167 1 116 2 102 1 263 1 203 1 
318 2 161 2 206 1 141 2 125 2 311 1 172 1 357 2 126 1 116 1 
318 1 161 1 319 1 131 1 60 1 133 1 113 1 210 1 223 1 51 1 174 1 347 1 317 1 264 1 89 1 
318 1 161 1 3 1 319 1 131 1 60 1 133 1 210 1 312 1 223 1 51 1 174 1 347 1 264 1 89 1 
206 2 306 2 227 1 328 1 49 1 75 1 230 1 311 2 313 1 184 1 334 1 187 4 361 1 252 1 335 1 253 1 91 2 237 1 171 2 62 1 260 1 282 1 175 1 324 2 
318 1 125 1 161 1 357 1 366 1 141 1 167 1 54 1 
318 5 161 5 141 4 369 1 143 1 269 1 15 1 125 5 172 1 357 4 261 1 126 1 347 1 116 2 
318 2 125 2 161 2 357 2 366 1 141 2 155 1 54 1 
278 1 241 1 
278 1 241 1 
108 1 166 1 
108 1 166 1 
108 1 166 1 
278 1 373 1 241 1 
278 1 373 1 241 1 
278 1 218 1 241 1 
355 1 376 1 278 2 108 1 166 1 241 2 
278 1 373 1 241 1 
278 1 38 1 241 1 
278 1 38 1 241 1 
278 1 38 1 241 1 
285 1 23 2 24 2 278 2 216 2 371 2 281 1 299 3 342 1 241 2 112 2 355 1 271 2 95 1 98 2 186 1 379 1 349 1 263 1 
23 1 161 2 24 1 71 1 132 1 357 2 271 1 232 1 360 1 318 2 278 1 216 1 141 2 218 1 371 1 222 1 299 1 241 1 125 2 283 1 302 1 95 1 98 1 347 1 
255 1 153 1 340 1 
96 1 153 1 340 1 
96 1 255 2 340 3 233 1 177 1 76 1 
48 1 96 1 255 1 340 2 233 1 76 1 
96 1 255 1 340 2 233 1 76 2 
45 1 70 2 71 1 328 1 288 1 132 1 308 1 75 1 354 1 330 1 182 1 6 2 313 1 271 5 138 1 11 1 276 1 295 1 90 1 216 5 365 3 169 3 257 2 222 1 240 4 260 1 197 1 127 1 20 2 178 1 350 1 263 2 
45 1 286 1 70 6 180 1 71 4 328 3 288 2 308 1 75 3 354 3 330 6 182 2 6 6 313 3 183 5 271 9 85 1 276 2 295 3 234 1 90 2 215 1 216 9 365 8 169 9 61 1 240 7 260 3 197 2 127 1 323 5 20 6 178 1 202 1 263 5 
70 2 71 1 288 1 328 1 75 1 354 2 182 1 271 3 313 1 6 2 138 1 11 1 276 1 295 1 90 1 216 3 365 3 169 4 257 1 240 2 260 1 197 1 20 2 178 1 202 1 263 3 
70 4 180 1 71 2 288 1 328 2 75 2 354 3 182 1 6 4 271 4 313 2 85 1 138 1 11 1 276 1 295 2 90 1 215 1 216 4 365 5 169 7 257 2 240 3 260 2 197 1 20 4 178 1 202 1 263 4 
290 1 89 1 16 1 
229 1 89 1 
162 1 
60 1 89 1 
223 1 343 1 262 1 60 1 16 2 89 3 
223 1 60 1 89 1 
146 1 89 1 
363 1 1 1 306 3 227 3 92 1 328 1 36 1 171 4 13 1 75 1 83 1 314 1 175 2 9 2 187 7 224 1 380 1 
363 1 1 1 306 3 227 3 92 1 328 1 36 1 171 4 13 1 75 1 83 1 314 1 175 2 9 2 187 7 224 1 380 1 
363 1 1 1 226 1 306 3 227 3 92 1 328 1 36 1 171 4 13 1 75 1 83 1 314 1 175 2 9 2 187 7 224 1 380 1 
1 2 306 15 287 1 227 10 328 4 73 1 75 4 83 2 313 3 314 1 31 1 9 3 187 31 252 1 295 3 119 1 363 5 253 1 92 1 57 3 36 2 142 1 237 1 171 16 13 1 372 4 282 1 260 3 175 5 324 2 304 1 224 1 380 2 245 1 
47 1 1 1 306 4 287 1 227 4 328 1 329 1 75 1 83 1 314 1 9 2 187 9 252 2 363 1 253 2 237 2 36 1 171 5 13 1 282 2 175 3 324 4 224 1 380 1 
326 1 69 1 225 1 247 1 165 1 133 1 353 1 210 1 185 2 118 1 120 1 255 1 319 1 59 1 238 1 124 1 340 2 94 2 242 1 19 1 345 1 96 1 153 1 244 1 174 1 65 1 177 1 179 1 382 1 264 1 
326 1 69 1 225 1 247 1 165 1 133 1 353 1 78 1 210 1 114 1 185 3 118 1 120 1 255 1 319 1 59 1 124 1 340 2 37 1 94 3 242 2 96 1 153 1 244 1 174 1 65 1 177 1 179 1 382 1 264 1 
326 1 69 1 225 1 133 1 353 1 78 1 210 1 114 1 185 2 118 1 120 1 319 1 255 1 59 1 340 2 94 2 242 2 96 1 244 1 174 1 153 1 65 1 177 1 382 1 264 1 
247 1 131 1 133 1 353 2 209 1 210 1 231 1 185 1 89 1 120 2 319 1 339 1 37 1 60 1 370 1 94 1 17 1 18 1 244 2 174 1 65 2 179 1 264 1 
326 1 225 1 247 1 165 1 133 1 353 1 78 1 210 1 185 1 118 1 120 1 255 1 319 1 238 1 124 1 340 2 94 1 345 1 96 1 153 1 244 1 174 1 65 1 177 1 179 1 264 1 
270 1 
45 2 204 1 161 2 164 2 208 1 289 1 330 5 291 1 212 3 167 1 115 1 216 4 170 2 125 2 126 1 178 1 263 1 21 1 70 1 267 1 72 1 308 1 354 2 182 1 357 1 271 4 315 1 139 1 88 2 318 2 190 1 90 1 236 2 191 1 365 1 141 1 366 2 279 2 144 1 369 1 321 4 41 3 195 1 284 1 197 1 155 1 102 1 203 1 159 1 
45 2 204 1 161 2 164 2 208 1 289 1 330 5 291 1 212 3 167 1 115 1 216 4 170 2 125 2 126 1 178 1 21 1 263 1 70 1 267 1 72 1 308 1 354 2 182 1 357 1 271 4 315 1 139 1 88 2 318 2 190 1 90 1 236 2 191 1 365 1 141 1 366 2 279 2 144 1 369 1 321 4 41 3 195 1 284 1 197 1 155 1 102 1 203 1 159 1 
45 2 204 1 161 2 208 1 330 4 291 1 212 2 167 1 115 1 122 2 216 4 169 2 170 1 125 2 126 1 178 1 263 1 70 1 267 1 72 1 308 1 310 1 182 1 357 1 271 4 315 1 88 2 318 2 90 1 236 2 191 1 365 1 141 1 366 2 144 1 369 1 321 3 41 2 284 1 197 1 155 1 43 1 102 1 203 1 159 1 160 2 
45 3 161 1 164 2 111 1 208 1 330 6 210 1 212 2 167 1 115 1 214 1 216 5 169 2 60 1 170 2 125 1 18 1 174 2 263 1 21 1 264 2 70 2 131 2 267 1 72 1 133 2 308 1 310 1 354 2 231 1 182 1 271 5 315 1 276 1 88 2 89 1 318 1 236 2 90 1 191 1 365 2 319 1 366 1 279 2 192 1 369 1 321 4 41 2 284 1 197 1 381 1 102 1 203 1 159 1 
45 1 161 1 267 1 72 1 208 1 330 2 271 3 7 1 315 1 167 1 318 1 191 1 216 3 366 1 369 1 321 2 125 1 41 1 284 1 102 1 203 1 159 1 
45 1 161 1 267 1 72 1 208 1 330 1 271 3 7 1 315 1 167 1 318 1 191 1 216 3 366 1 369 1 170 1 321 3 125 1 284 1 178 1 102 1 203 1 263 1 159 1 
318 1 161 1 191 1 216 2 366 1 267 1 369 1 72 1 321 2 208 1 330 1 125 1 41 1 271 2 284 1 315 1 212 1 167 1 102 1 203 1 159 1 
45 3 204 1 161 2 164 2 208 1 289 1 330 7 7 1 291 1 212 4 167 1 115 1 216 5 170 2 125 2 126 1 178 1 263 1 21 1 70 1 267 1 72 1 308 1 354 2 182 1 357 1 271 5 315 1 139 1 88 2 318 2 190 1 90 1 236 2 191 1 365 1 141 1 366 2 279 2 144 1 369 1 321 4 41 4 284 1 195 1 197 1 154 1 155 1 102 1 203 1 159 1 
45 1 204 1 161 2 164 1 208 1 330 2 291 1 212 1 167 1 115 1 216 3 169 2 170 1 125 2 126 1 178 1 21 1 263 3 70 1 267 1 72 1 308 1 354 2 310 1 182 1 357 1 271 3 315 1 88 2 318 2 90 1 236 2 191 1 365 1 141 1 366 2 279 2 144 1 369 1 321 3 41 1 284 1 197 1 155 1 102 1 203 1 159 1 
45 2 204 1 161 2 164 2 208 1 330 4 291 1 212 2 167 1 115 1 216 4 170 2 125 2 126 1 178 1 21 1 263 1 70 1 267 1 72 1 308 1 354 2 182 1 357 1 271 4 315 1 139 1 88 2 318 2 90 1 190 1 236 2 191 1 365 1 141 1 366 2 279 2 144 1 369 1 321 4 41 2 195 1 284 1 197 1 155 1 102 1 203 1 159 1 
45 2 204 1 161 2 164 2 208 1 330 4 291 1 212 2 167 1 115 1 216 4 170 2 125 2 126 1 178 1 21 1 263 1 70 1 267 1 72 1 308 1 354 2 182 1 357 1 271 4 315 1 139 1 88 2 318 2 90 1 190 1 236 2 191 1 365 1 141 1 366 2 279 2 144 1 369 1 321 4 41 2 195 1 284 1 197 1 155 1 102 1 203 1 159 1 
45 2 204 1 161 2 208 1 330 4 291 1 212 2 167 1 115 1 122 2 216 4 169 2 170 2 125 2 126 1 178 1 68 1 263 1 70 1 267 1 72 1 308 1 182 1 356 1 357 1 271 4 315 1 139 1 88 2 318 2 90 1 236 2 191 1 365 1 141 1 366 2 144 1 369 1 321 4 41 2 284 1 197 1 155 1 43 1 102 1 203 1 159 1 160 2 
206 1 306 3 227 2 328 1 75 1 311 1 230 1 290 1 83 1 314 1 184 1 9 1 187 6 252 1 335 1 253 1 91 1 237 1 36 1 171 3 13 1 282 1 175 2 347 2 324 2 224 1 
206 4 306 6 265 1 227 2 328 2 75 1 311 11 313 2 184 2 31 1 33 1 187 14 252 2 335 1 295 2 363 1 121 1 253 2 91 11 57 3 237 2 320 1 171 8 372 3 282 2 260 1 194 1 150 1 175 1 347 1 324 4 304 1 157 1 
161 2 206 1 306 1 131 1 133 1 113 1 210 1 82 1 51 1 357 1 184 1 33 1 187 2 317 1 335 1 116 1 252 1 89 1 318 2 253 1 319 1 141 1 237 1 60 1 368 1 220 1 171 1 282 1 125 1 223 1 261 1 194 1 150 1 174 1 347 1 324 2 42 1 264 1 
161 3 206 7 328 3 207 2 113 2 210 2 51 2 9 1 252 3 116 1 335 3 12 1 295 2 253 3 60 2 171 10 13 1 260 2 125 1 223 2 261 1 175 4 174 3 347 2 224 1 264 3 306 10 26 1 227 8 131 1 133 3 75 3 181 2 309 2 78 1 311 7 83 1 80 2 357 1 313 2 314 1 184 3 273 2 33 1 187 20 317 2 89 2 318 3 363 4 91 7 141 1 319 2 36 1 237 3 282 3 147 1 194 1 150 1 324 6 
44 1 205 1 161 1 105 1 306 1 131 2 133 7 4 1 50 1 78 1 230 1 210 2 231 1 357 1 184 2 33 1 187 2 116 1 252 2 335 2 89 3 318 1 253 2 141 1 319 2 35 1 237 2 60 2 171 1 300 2 282 2 374 1 125 1 18 1 194 1 19 1 174 8 324 4 264 8 
161 1 206 1 306 2 227 1 328 1 75 1 311 1 357 1 313 1 184 1 187 3 252 1 335 1 295 1 318 1 91 1 253 1 141 1 58 1 237 1 171 1 282 1 260 1 125 1 172 1 126 1 150 1 175 1 324 2 
363 1 206 1 91 1 253 1 227 1 237 1 328 1 171 2 62 1 282 1 311 1 230 1 313 1 184 1 324 2 187 2 335 1 252 1 
206 1 91 1 253 1 306 2 227 1 237 1 75 1 282 1 260 1 311 1 230 1 184 1 175 1 324 2 334 1 187 2 335 1 252 1 
206 2 306 2 227 2 328 1 75 1 230 1 311 2 313 1 184 1 187 4 252 1 335 1 295 1 363 1 253 1 91 2 237 1 171 2 282 1 260 1 175 1 324 2 
44 1 363 1 206 1 91 1 253 1 227 1 237 1 328 1 171 2 62 1 282 1 311 1 313 1 184 1 324 2 187 2 335 1 252 1 
44 1 206 1 91 1 253 1 306 2 227 1 237 1 75 1 282 1 260 1 311 1 184 1 175 1 324 2 334 1 187 2 335 1 252 1 
44 1 206 2 306 2 227 2 328 1 75 1 311 2 313 1 184 1 187 4 252 1 335 1 295 1 363 1 253 1 91 2 237 1 171 2 282 1 260 1 175 1 324 2 
206 2 306 2 227 2 328 1 75 1 311 2 313 1 184 1 187 4 252 1 335 1 295 1 363 1 253 1 91 2 237 1 171 2 282 1 260 1 175 1 324 2 
161 1 306 1 131 1 133 1 309 1 113 1 210 1 51 1 184 1 33 1 187 2 317 1 335 1 252 1 89 1 318 1 253 1 319 1 237 1 60 1 171 1 282 1 223 1 194 1 174 1 347 1 324 2 264 1 
161 1 306 1 3 1 131 1 133 1 210 1 312 1 51 1 184 1 33 1 187 2 335 1 252 1 89 1 318 1 253 1 319 1 237 1 60 1 171 1 282 1 223 1 194 1 174 1 347 1 377 1 324 2 264 1 
206 2 306 2 227 2 328 1 75 1 311 2 313 1 184 1 187 4 252 1 335 1 295 1 363 1 253 1 91 2 237 1 171 2 282 1 260 1 150 1 175 1 324 2 
161 1 206 2 306 2 227 2 328 1 133 1 75 1 309 1 181 1 113 1 311 2 210 1 313 1 51 1 184 1 187 4 317 1 335 1 252 1 295 1 89 1 318 1 363 1 91 2 253 1 319 1 237 1 60 1 171 2 260 1 282 1 223 1 19 1 175 1 174 1 324 2 264 1 
161 1 206 1 306 1 227 1 328 1 75 1 311 1 357 1 313 1 184 1 53 1 187 3 252 1 335 1 295 1 318 1 363 1 253 1 91 1 141 1 237 1 171 2 260 1 282 1 125 1 172 1 126 1 150 1 324 2 
106 1 287 1 328 5 329 1 249 1 9 1 252 3 337 1 295 4 253 3 57 3 254 1 123 1 171 20 13 1 14 1 260 4 176 2 175 4 304 1 224 1 306 21 227 8 75 5 134 1 83 1 313 4 314 1 31 3 359 1 187 41 189 1 363 4 367 1 237 3 36 1 145 4 372 4 282 3 40 1 198 1 324 6 201 1 
287 2 106 1 306 18 227 7 328 5 249 1 329 1 75 4 134 1 83 1 313 4 314 1 9 1 31 3 359 1 187 38 252 4 337 1 295 4 189 1 363 3 253 4 254 1 57 3 367 1 123 1 36 1 237 4 145 4 171 20 13 1 14 1 372 4 282 4 260 3 40 1 198 1 175 4 176 2 201 1 324 8 304 1 224 1 
287 1 106 1 306 25 265 2 227 14 328 8 249 1 329 1 75 8 134 1 83 1 313 7 314 1 9 1 31 2 359 1 187 52 252 2 295 7 189 1 363 7 253 2 254 1 57 4 367 1 123 1 36 1 237 2 145 4 171 27 13 1 14 1 372 4 282 2 260 7 40 1 198 1 175 7 176 1 324 4 304 2 224 1 
129 1 306 10 227 6 328 3 329 1 75 3 313 3 31 1 187 19 252 2 337 1 295 3 189 1 363 3 253 2 57 1 367 1 123 2 237 2 145 2 171 9 14 1 372 2 282 2 260 3 40 1 175 3 176 1 324 4 304 1 
287 2 306 12 106 1 227 4 328 3 249 1 329 1 75 2 134 1 313 3 31 2 359 1 187 26 252 3 295 3 189 1 363 2 253 3 254 1 57 2 367 2 123 1 237 3 145 4 171 14 14 1 372 2 282 3 260 2 40 1 198 1 175 2 176 2 324 6 
355 1 23 1 338 1 24 1 278 1 98 1 371 1 379 1 281 1 241 1 
218 1 360 1 
23 1 24 1 305 1 278 1 97 1 98 1 371 1 259 1 241 1 
285 1 23 1 24 1 278 1 216 1 371 1 281 1 299 2 241 1 112 1 355 1 271 1 95 1 98 1 186 1 379 1 349 1 263 1 
285 1 23 1 24 1 278 1 216 1 371 1 281 1 299 2 241 1 112 1 355 1 271 1 95 1 98 1 186 1 379 1 349 1 263 1 
285 1 23 1 24 1 278 1 216 1 371 1 281 1 299 2 241 1 112 1 355 1 271 1 95 1 98 1 186 1 379 1 349 1 263 1 
84 1 376 1 373 1 
84 1 376 1 373 1 
38 1 297 1 
376 1 38 1 297 1 
283 1 232 1 
161 2 23 1 24 1 71 1 132 1 112 1 271 1 357 2 232 1 186 1 360 1 318 2 278 1 216 1 141 2 218 1 371 1 222 1 299 1 240 1 241 1 125 2 283 1 302 1 173 1 98 1 347 1 
84 1 373 1 
376 1 38 1 297 1 
205 1 161 2 107 1 306 1 133 2 77 1 210 1 184 1 86 1 33 1 187 2 335 1 252 1 89 1 318 2 235 1 253 1 319 1 35 1 237 1 60 1 171 1 300 2 282 1 125 2 194 1 150 1 322 1 174 2 324 2 264 2 
326 1 225 1 255 1 319 1 340 2 124 1 341 1 133 2 353 1 78 1 210 1 19 1 96 1 153 1 174 2 10 1 348 1 177 1 264 2 
326 1 225 1 255 1 319 1 340 2 124 1 133 1 353 1 78 1 251 1 210 1 96 1 153 1 174 1 348 1 177 1 264 1 
319 1 131 1 339 1 60 1 341 1 133 1 353 1 210 1 231 1 18 1 174 1 99 1 89 1 264 1 
326 1 225 1 255 1 319 1 340 2 124 1 341 1 133 1 353 1 78 1 210 1 96 1 153 1 174 1 10 1 348 1 177 1 264 1 
351 1 
161 3 306 1 131 1 133 1 309 1 113 1 210 1 357 2 51 1 184 1 291 1 187 1 252 1 317 1 335 1 89 1 318 3 253 1 141 2 319 1 237 1 60 1 282 1 125 2 223 1 194 1 126 2 149 1 174 1 347 1 324 2 264 1 
90 1 365 1 70 2 169 4 308 1 354 2 182 1 6 2 197 1 9 1 20 2 276 1 178 2 381 1 263 4 
290 1 365 1 70 1 292 1 275 1 178 1 263 1 
45 1 70 1 164 1 308 1 354 1 330 1 182 1 271 1 90 1 365 1 216 1 279 1 169 1 197 1 178 1 21 1 263 2 
45 3 163 1 328 2 330 5 210 3 332 2 331 2 6 6 292 1 295 2 216 5 256 1 60 3 169 12 16 2 63 2 260 2 223 3 343 1 344 1 19 1 174 3 20 6 178 2 263 8 264 3 70 8 131 1 307 2 229 3 133 3 308 4 75 2 354 6 182 4 136 2 137 2 272 2 271 5 313 2 273 2 275 1 276 2 34 1 89 10 90 4 365 9 319 4 146 2 148 2 197 4 156 1 381 1 102 2 
45 1 106 1 266 1 70 5 307 2 328 2 308 2 75 2 134 1 330 1 354 3 182 2 271 1 6 5 313 2 31 1 359 1 276 1 295 2 90 2 216 1 365 8 254 1 57 1 169 6 372 1 260 2 148 1 197 2 198 1 66 1 20 5 178 2 381 1 263 5 
161 1 204 1 70 2 307 2 328 2 308 1 75 1 83 1 182 1 271 1 357 1 291 1 318 1 90 1 190 1 216 1 365 2 366 1 141 1 36 1 144 1 13 1 125 1 148 1 126 1 197 1 346 1 155 1 
90 1 365 1 70 1 308 1 182 1 197 1 292 1 275 1 178 1 263 1 
365 5 70 5 307 2 328 2 169 10 75 2 354 5 260 2 148 1 313 2 6 5 273 1 20 5 295 2 263 5 
45 1 271 1 216 1 178 1 263 1 330 1 
45 2 70 2 131 2 29 1 133 4 308 1 330 4 210 1 231 1 182 2 271 3 276 2 294 1 89 1 214 1 90 2 365 2 216 3 319 1 192 1 60 1 256 1 18 1 197 2 174 4 156 2 202 1 381 2 264 4 
362 1 98 1 371 1 
362 1 98 1 371 1 
5 1 283 1 98 1 371 1 379 1 
362 1 98 1 371 1 
98 1 371 1 293 1 
98 1 371 1 293 1 
98 1 371 1 293 1 
98 1 371 1 
278 1 241 1 
306 4 227 2 328 1 329 1 75 1 83 1 314 1 9 1 31 1 359 1 187 8 252 1 253 1 57 1 237 1 36 1 171 4 13 1 372 1 282 1 175 2 324 2 224 1 
306 5 227 3 328 2 329 1 75 1 250 1 83 1 313 1 314 1 9 1 31 1 359 1 187 11 252 2 295 1 363 1 253 2 57 1 36 1 237 2 171 6 13 1 372 2 282 2 175 2 324 4 304 1 224 1 
306 10 106 1 287 1 227 4 328 3 329 1 75 3 250 1 134 1 83 1 313 2 314 1 9 1 31 1 359 1 187 19 252 3 295 2 363 1 253 3 57 1 254 1 36 1 237 3 171 9 13 1 372 1 282 3 260 2 198 1 175 3 324 6 224 1 
287 1 306 7 106 1 227 5 328 3 329 1 75 2 250 1 134 1 83 1 313 2 314 1 9 1 31 1 359 1 187 17 252 3 295 2 363 2 253 3 57 1 254 1 36 1 237 3 171 10 13 1 372 1 282 3 260 1 198 1 175 3 324 6 224 1 
306 4 227 2 328 1 329 1 75 1 83 1 314 1 9 1 31 1 359 1 187 8 252 1 253 1 57 1 237 1 36 1 171 4 13 1 372 1 282 1 175 2 324 2 224 1 
306 6 106 1 227 2 328 2 329 1 75 2 134 1 313 2 31 1 359 1 187 12 252 1 295 2 363 1 253 1 57 1 254 1 237 1 171 6 372 1 282 1 260 2 198 1 175 1 324 2 
306 8 106 1 287 2 227 5 328 3 329 1 75 2 134 1 250 1 83 1 313 2 314 1 9 1 31 1 359 1 187 18 252 4 295 2 363 2 253 4 254 1 57 1 36 1 237 4 171 10 13 1 372 1 282 4 260 1 198 1 175 3 324 8 224 1 
306 7 106 1 287 2 227 6 328 3 329 1 75 2 134 1 313 3 31 1 359 1 187 16 252 4 337 1 295 3 363 3 253 4 254 1 57 1 237 4 171 9 372 1 282 4 260 2 198 1 175 3 324 8 
363 3 306 4 227 6 36 3 328 1 171 3 13 1 75 1 83 3 314 2 175 3 187 7 224 1 
306 8 106 1 287 2 227 4 328 3 329 1 75 2 134 1 83 1 313 2 314 1 9 1 31 1 359 1 187 18 252 4 337 1 295 2 363 1 253 4 254 1 57 1 36 1 237 4 171 10 13 1 372 1 282 4 260 1 198 1 175 3 324 8 224 1 
363 1 253 2 306 4 287 1 227 3 328 1 237 2 36 1 171 4 13 1 75 1 282 2 83 1 314 1 175 2 9 1 324 4 187 8 252 2 224 1 
306 3 227 2 36 1 328 1 171 3 13 1 75 1 290 1 83 1 314 1 175 2 9 1 187 6 224 1 
363 1 253 1 306 2 227 2 237 1 328 1 171 2 75 1 250 1 260 1 282 1 313 1 175 1 324 2 187 4 252 1 295 1 
363 1 306 4 57 1 227 2 328 1 171 3 75 1 372 2 260 1 313 1 175 1 31 1 304 1 187 7 295 1 
306 12 287 2 265 1 227 9 328 3 75 3 83 2 313 2 314 1 9 1 187 23 252 2 295 2 363 4 253 2 57 2 36 2 237 2 171 11 320 1 13 1 372 2 260 2 282 2 196 1 175 5 304 1 324 4 224 1 
306 1 187 1 372 1 
57 1 171 1 187 1 
363 1 253 1 306 3 227 3 237 1 328 1 171 3 75 1 250 1 282 1 260 1 313 1 273 1 175 2 324 2 187 6 252 1 295 1 
306 6 106 1 227 2 328 2 329 1 75 2 134 1 313 2 31 1 359 1 187 12 252 1 295 2 363 1 253 1 57 1 254 1 237 1 171 6 372 1 282 1 260 2 198 1 175 1 324 2 
363 1 306 3 227 2 328 1 36 1 171 3 13 1 75 1 83 1 175 1 187 6 
363 1 253 1 306 2 287 1 227 2 36 1 237 1 171 1 282 1 83 1 314 1 196 1 175 1 324 2 187 3 252 1 224 1 
363 2 253 1 306 5 227 5 237 1 36 2 328 2 171 5 13 1 329 1 75 2 282 1 83 2 346 1 175 3 324 2 187 10 252 1 
363 1 253 1 227 1 237 1 328 1 171 2 329 1 282 1 313 1 324 2 187 2 252 1 
363 1 253 1 306 2 227 2 237 1 328 1 171 2 329 1 75 1 260 1 282 1 313 1 175 1 324 2 187 4 252 1 295 1 
363 1 253 3 287 1 306 2 227 2 237 3 36 1 171 1 329 1 282 3 83 1 196 1 175 1 324 6 187 3 252 3 337 1 
287 2 306 18 227 12 328 5 73 1 329 1 75 5 250 1 83 3 313 3 314 1 9 1 31 1 187 34 252 5 337 1 295 3 119 1 363 5 253 5 57 3 36 3 237 5 171 16 13 2 372 4 282 5 260 3 196 1 175 7 324 10 304 1 224 1 245 1 
318 1 125 1 161 1 8 1 347 1 369 1 269 1 
318 1 140 1 161 1 25 1 369 1 269 1 125 1 8 1 347 1 316 1 100 1 188 1 
210 1 231 1 290 1 18 1 319 1 131 1 174 1 60 1 133 1 89 1 264 1 
318 2 161 2 319 1 141 1 131 1 60 1 133 1 113 1 125 1 210 1 223 1 51 1 357 1 174 1 347 1 116 1 89 1 264 1 
318 2 161 2 191 1 366 1 319 1 141 1 60 2 133 1 146 1 63 1 113 1 125 2 210 1 223 2 51 1 357 2 174 1 347 1 167 1 156 1 116 1 89 3 264 1 
161 2 3 1 248 1 133 2 210 1 357 2 51 1 167 1 116 1 89 3 318 2 191 1 141 1 319 1 366 1 60 2 146 1 63 1 125 2 223 2 174 2 347 1 156 1 264 2 
131 1 248 1 229 1 133 3 330 1 210 1 271 2 274 1 32 1 89 4 216 2 319 1 60 1 146 1 16 1 63 1 223 1 174 3 156 1 178 1 102 1 263 1 264 3 
216 2 319 1 131 1 248 1 60 1 133 3 229 1 146 1 63 1 330 1 16 1 210 1 332 1 223 1 271 2 174 3 156 1 178 1 102 1 263 1 264 3 89 4 
210 1 374 1 319 1 174 1 133 1 264 1 
205 1 105 1 319 3 109 1 131 2 60 2 133 6 221 1 4 1 300 1 50 1 78 1 374 1 210 2 343 1 223 1 19 1 174 7 168 1 264 7 89 3 
161 2 206 1 306 3 227 2 328 1 133 1 75 1 181 1 309 1 77 1 113 1 311 1 210 1 83 1 80 1 51 1 357 1 314 1 184 2 9 1 187 6 335 2 116 1 252 2 317 1 89 1 318 2 91 1 253 2 319 1 141 1 36 1 237 2 60 1 171 3 13 1 282 2 125 1 223 1 19 1 150 1 175 2 174 1 347 2 324 4 224 1 264 1 
45 1 70 1 131 1 133 1 229 1 308 2 330 2 332 1 182 2 136 1 271 3 272 1 137 1 292 1 275 1 89 2 90 2 365 1 216 3 256 1 240 1 16 1 197 2 174 1 178 1 102 1 263 1 264 1 
319 2 60 1 133 2 16 1 374 1 210 1 343 1 223 1 19 1 174 2 34 1 264 2 89 2 
319 1 131 1 248 1 60 1 133 4 210 1 231 1 18 1 243 1 19 1 174 4 264 4 89 1 
319 2 109 1 60 1 93 1 133 2 210 1 223 1 52 1 174 2 156 1 168 1 12 1 264 2 89 1 
210 1 326 1 96 1 319 1 131 1 153 1 340 1 174 1 133 1 264 1 
205 1 107 1 319 1 60 1 133 2 78 1 210 1 19 1 174 2 264 2 89 1 
205 1 319 2 131 1 60 2 133 4 4 1 50 1 210 2 231 1 18 1 243 1 19 1 174 5 156 1 264 5 89 3 
205 1 319 2 131 1 60 2 133 4 4 1 210 2 231 1 18 1 243 1 19 1 174 5 156 1 117 1 264 5 89 3 
318 2 161 2 3 1 319 1 141 1 131 1 60 1 133 1 125 1 210 1 223 1 51 1 357 1 174 1 347 1 116 1 89 1 264 1 
319 2 109 1 60 1 133 1 221 1 210 1 343 1 223 1 174 1 156 1 168 1 264 1 89 1 
64 1 130 1 347 1 336 1 55 1 
130 2 191 1 364 1 216 2 366 1 217 1 240 1 64 1 271 2 347 1 167 1 178 1 336 2 102 1 128 1 263 1 203 1 213 1 55 2 
318 1 235 1 161 1 130 1 125 1 64 1 322 1 86 1 336 1 
64 1 364 1 213 1 
242 1 69 1 247 1 59 1 238 1 185 3 325 1 228 1 94 3 179 1 382 1 
81 1 352 1 59 1 39 1 
59 1 382 1 
290 1 69 1 59 1 382 1 
69 1 247 1 59 1 185 1 94 1 179 1 382 1 
120 1 244 1 94 1 
69 1 247 1 59 1 238 1 228 2 94 3 301 1 333 1 185 3 179 1 67 1 382 1 
242 1 69 1 247 1 59 1 185 2 101 1 94 2 179 1 382 1 
247 1 255 1 28 1 238 1 59 1 340 1 94 1 81 1 153 1 185 1 179 1 
247 1 59 1 238 1 185 1 94 1 179 1 382 1 
69 1 247 1 238 1 185 1 94 1 179 1 382 2 
22 1 56 1 247 2 59 1 238 1 110 1 94 2 185 2 179 2 382 1 
69 1 352 1 247 1 238 1 59 2 94 3 242 2 81 1 185 3 325 1 378 1 179 1 382 1 
69 1 247 1 255 1 59 1 340 2 238 1 94 2 242 1 96 1 153 1 185 2 177 1 179 1 382 1 104 1 
69 1 352 1 247 2 238 1 59 2 94 4 242 2 81 1 303 1 185 4 101 1 179 2 382 1 
69 1 247 1 59 1 238 1 185 1 94 1 179 1 382 1 
69 2 352 1 247 1 59 3 228 1 39 1 94 4 242 2 81 1 333 1 185 4 179 1 67 1 382 2 
69 1 247 1 59 1 238 1 94 2 258 1 242 1 211 1 185 2 179 1 277 1 382 1 
69 1 247 1 59 1 238 1 228 2 94 3 193 1 333 1 185 3 179 1 67 2 382 1 
296 1 327 2 59 2 246 1 
247 1 238 1 185 1 94 1 179 1 135 1 
242 1 69 1 247 1 59 1 238 1 185 2 325 1 94 2 179 1 382 1 
375 1 
69 1 247 1 59 1 238 1 185 1 94 1 179 1 382 1 

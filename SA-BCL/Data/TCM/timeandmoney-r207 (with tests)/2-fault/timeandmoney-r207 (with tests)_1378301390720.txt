#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (139,236) 32 (3,140) (3,140) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (139,236) 32 (3,140) (3,140) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (139,236) 32 (3,140) (3,140) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (139,236) 32 (3,140) (3,140) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
367 1 139 1 36 1 32 1 113 1 3 1 140 1 300 1 210 1 312 1 245 1 
367 1 139 1 36 1 32 1 113 1 3 1 140 1 300 1 210 1 312 1 245 1 
367 1 139 1 36 1 32 1 113 1 3 1 140 1 300 1 210 1 312 1 245 1 
367 1 139 1 36 1 32 1 113 1 3 1 140 1 300 1 210 1 312 1 245 1 
165 1 298 2 209 1 221 1 300 1 210 1 245 4 225 1 213 1 323 2 9 1 36 1 203 3 305 3 113 4 205 1 52 1 125 1 
107 1 367 1 209 1 69 1 221 1 300 1 210 1 245 2 312 1 43 1 213 1 36 1 305 1 11 1 113 2 205 1 
298 1 209 1 300 2 210 2 245 3 312 1 213 1 236 1 9 1 36 1 305 2 203 1 113 3 
165 1 298 4 127 1 209 1 221 1 300 2 210 2 225 1 245 9 312 1 213 1 323 2 236 1 35 1 9 3 36 1 177 1 305 5 203 7 113 9 205 1 52 1 78 1 125 1 
165 1 298 4 127 1 209 1 221 1 300 2 210 2 225 1 245 9 312 1 213 1 323 2 236 1 35 1 9 3 36 1 177 1 305 5 203 7 113 9 205 1 52 1 78 1 125 1 
186 1 242 1 92 1 
265 1 186 1 105 2 
108 2 60 1 97 2 193 1 25 2 223 2 89 2 93 2 
108 2 218 1 288 1 169 1 223 2 270 1 55 1 173 1 275 1 227 2 60 1 277 1 206 1 180 2 233 2 90 1 89 3 182 1 116 1 183 2 282 1 93 2 317 1 283 1 234 1 154 1 97 3 319 2 99 1 188 1 145 1 215 1 75 1 193 1 25 2 162 1 264 1 
108 1 60 1 133 1 97 1 179 1 25 1 223 1 254 1 89 1 93 1 
163 1 95 1 268 1 97 1 186 1 375 1 63 1 251 1 179 1 89 1 65 1 341 1 242 1 93 1 
163 2 108 1 95 1 97 1 186 1 223 1 375 2 251 1 179 1 25 1 89 1 65 1 341 1 242 1 93 1 
57 1 163 1 314 1 375 1 269 1 
57 1 163 2 375 2 214 1 186 1 269 1 334 1 242 1 
57 1 163 1 375 1 
163 1 108 1 97 1 223 1 269 1 375 1 60 1 133 1 179 1 362 1 25 1 254 1 89 1 93 1 
186 1 
57 1 163 2 375 2 186 1 286 1 269 1 334 1 242 1 
163 5 289 1 119 1 186 1 5 2 171 2 269 2 334 1 335 1 83 1 22 2 57 2 375 5 276 1 327 1 160 1 194 1 279 1 242 1 
193 1 92 1 
108 1 97 2 223 1 246 1 19 1 193 2 25 1 89 2 93 2 
147 1 88 1 131 1 
97 1 99 1 55 1 188 1 145 1 178 1 193 1 180 1 233 1 89 1 162 1 182 1 183 1 317 1 264 1 282 1 
108 1 97 2 349 1 223 1 99 1 55 1 188 1 360 1 145 1 180 1 233 1 147 1 89 2 162 1 182 1 183 1 282 1 264 1 93 1 317 1 
108 4 67 1 97 5 244 1 223 4 349 1 211 1 19 1 360 2 63 1 193 1 25 1 89 5 93 5 
108 2 133 1 97 2 179 1 151 1 223 2 89 2 93 2 
360 1 108 3 97 3 193 1 25 1 223 3 89 3 93 3 
108 1 133 1 97 1 179 1 223 1 89 1 93 1 
108 1 97 1 179 1 25 1 223 1 89 1 246 1 19 1 93 1 
163 1 108 3 218 1 288 1 169 1 223 3 55 1 360 1 227 1 60 1 251 1 10 1 179 1 206 1 180 1 233 1 90 1 89 4 182 1 65 1 341 1 183 1 282 1 317 1 93 3 283 1 234 1 154 1 95 1 97 4 319 2 349 1 99 1 19 1 188 1 375 1 145 1 215 1 75 1 193 1 25 2 379 1 162 1 264 1 
360 1 108 1 63 1 97 2 193 1 223 1 89 2 211 1 93 2 
163 1 108 3 95 1 97 3 186 1 349 1 223 3 19 1 322 1 360 2 375 1 10 1 251 1 179 1 25 1 89 3 341 1 65 1 93 3 
108 2 97 2 223 2 131 1 19 1 360 1 25 1 89 2 147 1 93 2 
145 1 97 1 193 1 180 1 99 1 233 1 89 1 162 1 55 1 182 1 188 1 183 1 282 1 264 1 317 1 
356 1 97 1 99 1 55 1 188 1 145 1 193 1 240 1 180 1 233 1 89 1 162 1 182 1 183 1 282 1 
355 1 288 1 218 2 266 1 53 1 199 1 200 1 131 2 58 1 293 1 227 4 90 1 88 2 116 2 234 1 154 1 319 2 141 1 373 1 326 1 215 1 75 1 102 1 147 2 
108 1 95 1 97 1 179 1 151 1 223 1 89 1 93 1 
62 1 235 1 
62 1 235 1 
17 1 54 1 
17 1 54 1 
17 1 54 1 
191 1 62 1 235 1 
191 1 62 1 235 1 
62 1 235 1 56 1 
47 1 62 2 112 1 17 1 235 2 54 1 
191 1 62 1 235 1 
62 1 84 1 235 1 
62 1 84 1 235 1 
62 1 84 1 235 1 
163 1 108 2 243 1 167 1 223 2 292 1 202 1 56 1 337 1 228 1 62 1 204 1 89 2 93 2 138 1 208 1 97 2 98 1 235 1 21 1 190 1 375 1 144 1 193 1 
163 2 138 2 79 1 208 2 166 1 186 1 170 1 109 2 301 1 235 2 292 3 132 1 202 2 47 1 375 2 228 1 62 2 204 2 296 1 
221 1 205 1 225 1 
221 1 205 1 43 1 
205 3 363 1 71 1 372 1 225 2 43 1 
205 2 71 1 372 1 225 1 148 1 43 1 
205 2 225 1 372 1 71 2 43 1 
163 5 265 1 355 1 108 1 289 1 290 2 223 1 5 1 224 1 171 1 269 4 200 1 334 1 58 1 57 1 294 2 60 1 276 3 133 1 179 1 362 1 232 2 254 1 89 1 93 1 155 1 97 1 70 1 186 2 21 1 22 1 375 5 238 1 239 1 326 1 194 2 25 1 241 1 105 3 242 1 
108 1 289 1 290 2 5 1 200 1 334 1 57 3 58 1 294 2 60 1 254 1 70 1 21 1 22 1 25 1 163 5 217 1 355 1 265 1 223 1 171 1 224 1 269 4 174 1 314 2 276 3 133 1 362 1 179 1 89 1 93 1 97 1 186 2 370 2 375 5 238 1 239 1 326 1 194 2 105 3 242 1 
163 3 108 1 265 1 355 1 290 2 223 1 5 1 171 1 224 1 269 2 200 1 58 1 294 2 60 1 276 3 133 1 179 1 362 1 254 1 232 1 89 1 93 1 155 1 119 1 97 1 186 2 21 1 22 1 375 3 238 1 239 1 326 1 25 1 241 1 194 2 105 3 242 1 
163 4 265 3 355 2 290 4 5 1 171 1 224 1 269 3 200 2 58 2 294 4 276 5 232 2 343 1 119 1 155 1 186 4 189 1 21 2 22 1 375 4 238 2 239 1 326 2 241 1 194 4 104 1 105 7 242 1 
158 1 145 1 92 1 
145 1 333 1 
136 1 
145 1 55 1 282 1 
145 1 130 1 
145 1 282 1 
158 2 145 3 168 1 55 1 364 1 282 1 
344 1 218 3 266 2 299 1 200 1 110 2 321 1 58 1 374 1 227 7 49 1 152 1 102 3 28 1 116 4 126 1 135 1 
344 1 218 3 266 2 299 1 200 1 110 2 321 1 58 1 374 1 227 7 49 1 152 1 102 3 28 1 116 4 126 1 135 1 
344 1 218 3 266 2 299 1 200 1 110 2 321 1 58 1 374 1 227 7 49 1 152 1 102 3 123 1 28 1 116 4 126 1 135 1 
355 3 218 15 288 1 266 5 150 3 81 1 110 3 200 4 313 1 58 4 227 31 249 1 8 4 152 1 90 1 181 1 38 1 116 16 135 2 344 2 234 1 154 1 299 1 319 2 185 1 321 1 374 2 49 1 238 3 326 3 102 10 51 1 28 5 126 2 
288 2 218 4 266 3 129 1 200 1 110 2 58 1 227 9 152 1 90 2 116 5 135 1 344 1 234 2 154 2 319 4 321 1 374 1 49 1 378 1 102 4 51 1 28 1 126 1 
221 1 225 1 245 2 312 1 36 1 203 1 37 1 229 1 113 2 297 1 180 1 231 1 205 2 233 1 363 1 182 1 183 1 284 1 209 1 156 1 300 1 210 1 43 1 100 1 188 1 213 1 143 1 305 1 103 1 330 1 
221 1 311 1 225 1 245 3 312 1 203 2 37 1 229 1 113 3 297 1 180 1 205 2 363 1 233 1 182 1 183 1 284 1 209 1 300 1 210 1 157 1 43 1 100 1 188 1 213 1 143 1 260 1 305 1 103 1 330 1 
221 1 311 1 312 1 245 2 225 1 203 2 229 1 113 2 297 1 180 1 205 2 233 1 363 1 182 1 183 1 284 1 209 1 43 1 100 1 188 1 213 1 260 1 305 1 103 1 330 1 
198 1 245 1 312 2 113 1 64 1 86 1 297 2 180 1 233 1 182 1 13 1 183 1 282 1 99 1 300 1 210 1 157 1 188 1 100 2 145 1 103 2 329 1 306 1 
221 1 225 1 245 1 312 1 36 1 37 1 229 1 113 1 297 1 180 1 231 1 205 2 233 1 363 1 182 1 183 1 284 1 300 1 210 1 43 1 100 1 188 1 143 1 260 1 103 1 330 1 
7 1 
0 1 289 1 198 1 291 2 5 1 334 3 57 6 59 1 63 1 251 1 114 1 65 1 341 1 255 2 303 4 22 1 122 1 161 2 76 2 163 5 265 2 31 1 267 2 268 1 357 1 224 1 171 1 175 1 276 2 85 1 179 1 86 1 278 1 180 2 233 2 89 1 182 1 183 2 282 1 93 1 95 1 94 1 97 1 186 2 99 2 285 2 188 1 46 2 142 1 375 5 145 1 194 2 105 2 242 1 106 1 
163 3 95 1 255 1 268 1 97 1 357 1 303 2 334 1 57 2 142 1 375 3 122 1 63 1 85 1 251 1 179 1 286 1 89 1 341 1 65 1 106 1 93 1 
163 3 268 1 357 1 334 1 57 1 63 1 85 1 251 1 179 1 89 1 65 1 341 1 93 1 95 1 97 1 186 1 303 3 142 1 375 3 122 1 161 1 286 1 106 1 242 1 
163 3 268 1 357 1 291 1 334 1 57 2 63 1 85 1 251 1 179 1 89 1 65 1 341 1 93 1 95 1 255 1 97 1 186 1 303 3 142 1 375 3 122 1 161 1 286 1 106 1 242 1 
163 5 265 2 289 1 267 2 268 1 357 1 291 4 5 1 171 1 6 1 334 3 57 7 175 1 63 1 276 1 85 1 251 1 179 1 114 1 89 1 65 1 341 1 366 1 93 1 368 1 95 1 255 4 97 1 186 5 285 2 303 6 46 2 22 1 142 1 375 5 122 1 352 1 76 2 261 1 161 4 194 1 286 1 242 5 106 1 
289 1 291 2 5 1 334 2 57 4 63 1 251 1 114 1 341 1 65 1 255 2 303 4 22 1 122 1 76 2 161 2 163 4 265 2 31 1 268 1 267 2 357 1 171 1 175 1 85 1 276 1 179 1 89 1 93 1 95 1 97 1 186 2 285 2 142 1 46 2 375 4 194 1 105 2 106 1 242 1 
163 4 265 2 289 1 267 2 268 1 357 1 291 2 5 1 171 1 334 2 6 1 57 4 175 1 63 1 276 1 85 1 251 1 179 1 114 1 89 1 65 1 341 1 93 1 366 1 95 1 255 2 97 1 186 1 285 2 303 4 46 2 22 1 142 1 375 4 122 1 161 2 76 2 261 1 194 1 242 1 106 1 
163 4 265 2 289 1 267 2 268 1 357 1 291 2 5 1 171 1 334 2 6 1 57 4 175 1 63 1 276 1 85 1 251 1 179 1 114 1 89 1 65 1 341 1 93 1 366 1 95 1 255 2 97 1 186 1 285 2 303 4 46 2 22 1 142 1 375 4 122 1 161 2 76 2 261 1 194 1 242 1 106 1 
163 4 289 1 267 2 268 1 357 1 291 2 5 1 171 1 334 2 57 4 63 1 276 1 85 1 251 1 179 1 114 1 89 1 65 1 341 1 93 1 66 1 95 1 255 2 97 1 186 1 303 4 258 2 259 2 46 2 22 1 142 1 375 4 122 1 161 2 261 1 194 1 77 1 105 2 263 1 242 1 106 1 
163 4 265 2 289 1 267 2 268 1 357 1 291 3 5 1 171 1 334 2 6 1 57 5 175 1 63 1 276 1 85 1 251 1 179 1 114 1 89 1 65 1 341 1 366 1 93 1 368 1 95 1 255 3 97 1 186 1 285 2 303 5 46 2 22 1 142 1 375 4 122 1 76 2 261 1 161 3 194 1 242 1 106 1 
163 4 265 2 289 1 267 2 268 1 357 1 291 3 5 1 171 1 334 2 6 1 57 5 175 1 63 1 276 1 85 1 251 1 179 1 114 1 89 1 65 1 341 1 366 1 93 1 368 1 95 1 255 3 97 1 186 1 285 2 303 5 46 2 22 1 142 1 375 4 122 1 76 2 261 1 161 3 194 1 242 1 106 1 
163 4 31 1 289 1 267 2 268 1 357 1 291 2 5 1 171 1 334 2 57 4 63 1 276 1 85 1 251 1 179 1 114 1 89 1 65 1 341 1 93 1 95 1 255 2 97 1 186 1 303 4 258 2 259 2 46 2 142 1 22 1 375 4 122 1 161 2 194 1 105 2 263 1 242 1 106 1 
288 1 218 3 266 2 200 1 110 1 131 1 58 1 227 6 152 1 90 1 88 1 92 1 116 3 135 1 234 1 154 1 319 2 141 1 321 1 49 1 215 1 75 1 102 2 193 2 147 1 126 1 
355 2 218 6 288 2 266 1 150 3 200 1 131 4 173 1 273 1 58 2 227 14 8 3 249 1 181 1 90 2 88 11 116 8 283 1 234 2 154 2 14 1 319 4 376 1 238 2 325 1 326 1 102 2 215 2 75 1 193 1 147 11 28 1 287 1 
108 1 288 1 218 1 223 1 55 1 131 1 173 1 360 1 227 2 178 1 180 1 233 1 89 2 90 1 182 1 183 1 116 1 282 1 317 1 93 1 283 1 137 1 234 1 153 1 154 1 14 1 97 2 319 2 99 1 349 1 302 1 188 1 145 1 215 1 75 1 193 1 162 1 264 1 
108 1 288 3 110 1 200 3 55 2 58 3 152 1 116 10 154 3 14 1 18 2 349 1 260 1 159 1 75 3 215 3 162 2 28 4 307 2 126 1 264 2 29 1 355 2 218 10 266 4 169 2 223 1 271 2 131 7 173 1 360 1 227 20 180 3 233 3 90 3 89 3 88 7 182 2 183 3 39 1 135 1 93 1 317 2 282 2 283 1 234 3 97 3 319 6 99 1 321 1 188 2 49 1 238 2 324 2 145 2 326 2 102 8 193 2 147 7 
108 1 288 2 218 1 128 1 198 1 223 1 173 1 360 1 227 2 277 2 86 1 180 7 233 8 89 1 90 2 182 2 183 8 116 1 93 1 282 2 283 1 234 2 154 2 15 1 97 1 156 1 319 4 348 1 99 2 141 1 44 1 188 2 260 1 145 3 304 1 215 2 75 2 26 1 331 1 
108 1 355 1 288 1 218 2 266 1 310 1 223 1 200 1 131 1 58 1 227 3 88 1 90 1 89 1 116 1 93 1 234 1 154 1 14 1 97 1 319 2 19 1 238 1 326 1 102 1 215 1 75 1 25 1 147 1 
234 1 355 1 288 1 154 1 319 2 53 1 141 1 131 1 58 1 227 2 102 1 75 1 215 1 147 1 88 1 90 1 28 1 116 2 
234 1 288 1 154 1 218 2 266 1 319 2 141 1 200 1 131 1 293 1 227 2 326 1 102 1 75 1 215 1 147 1 88 1 90 1 
355 1 288 1 218 2 266 1 200 1 131 2 58 1 227 4 90 1 88 2 116 2 234 1 154 1 319 2 141 1 238 1 326 1 215 1 75 1 102 2 147 2 28 1 
234 1 355 1 288 1 154 1 319 2 53 1 131 1 58 1 227 2 102 1 75 1 215 1 147 1 88 1 90 1 28 1 116 2 331 1 
234 1 288 1 154 1 218 2 266 1 319 2 200 1 131 1 293 1 227 2 326 1 102 1 75 1 215 1 147 1 88 1 90 1 331 1 
355 1 288 1 218 2 266 1 200 1 131 2 58 1 227 4 90 1 88 2 116 2 234 1 154 1 319 2 238 1 326 1 215 1 75 1 102 2 147 2 28 1 331 1 
234 1 355 1 218 2 288 1 154 1 266 1 319 2 200 1 131 2 58 1 227 4 238 1 326 1 102 2 75 1 215 1 147 2 88 2 90 1 28 1 116 2 
288 1 218 1 169 1 55 1 173 1 227 2 180 1 233 1 89 1 90 1 182 1 116 1 183 1 282 1 317 1 283 1 234 1 154 1 97 1 319 2 99 1 188 1 145 1 75 1 215 1 193 1 162 1 264 1 
356 1 288 1 218 1 55 1 173 1 227 2 180 1 233 1 89 1 90 1 182 1 116 1 183 1 282 1 283 1 234 1 154 1 346 1 97 1 319 2 99 1 188 1 145 1 75 1 215 1 193 1 240 1 162 1 
355 1 288 1 218 2 266 1 200 1 131 2 58 1 227 4 90 1 88 2 116 2 234 1 154 1 14 1 319 2 238 1 326 1 215 1 75 1 102 2 147 2 28 1 
355 1 218 2 288 1 266 1 169 1 200 1 131 2 55 1 58 1 227 4 180 1 233 1 88 2 89 1 90 1 182 1 116 2 183 1 317 1 282 1 234 1 154 1 97 1 156 1 319 2 188 1 238 1 324 1 145 1 326 1 102 2 75 1 215 1 147 2 28 1 162 1 264 1 
108 1 355 1 218 1 288 1 223 1 200 1 131 1 58 1 227 3 90 1 89 1 88 1 116 2 93 1 234 1 154 1 14 1 369 1 97 1 319 2 19 1 238 1 326 1 102 1 215 1 75 1 25 1 147 1 28 1 
355 3 30 1 288 2 218 10 266 3 150 1 129 1 200 3 274 1 58 3 61 1 227 19 8 2 249 1 230 2 181 1 90 2 316 1 116 9 234 2 184 1 154 2 319 4 40 1 121 1 238 3 326 3 328 2 102 6 28 3 
1 1 355 3 218 12 30 1 288 3 266 2 150 2 129 1 200 2 248 1 58 3 61 2 227 26 8 2 230 4 90 3 181 2 316 1 116 14 345 1 234 3 184 1 154 3 96 1 319 6 40 2 238 3 74 1 326 2 328 1 102 4 51 2 124 1 28 2 
1 1 355 4 30 1 288 3 218 21 266 4 150 3 129 1 110 1 200 5 274 1 248 1 58 5 61 1 227 41 8 4 249 1 152 1 230 4 253 1 181 3 90 3 316 1 116 20 135 1 345 1 234 3 184 1 154 3 96 1 319 6 40 2 321 1 49 1 238 4 74 1 326 4 328 1 102 8 51 1 124 1 28 4 126 1 
1 1 355 4 30 1 288 4 218 18 266 4 150 3 129 1 110 1 200 4 274 1 248 1 58 5 61 1 227 38 8 4 249 1 152 1 230 4 253 1 181 3 90 4 316 1 116 20 135 1 345 1 234 4 184 1 154 4 96 1 319 8 40 2 321 1 49 1 238 4 74 1 326 3 328 1 102 7 51 2 124 1 28 3 126 1 
1 1 355 7 30 1 288 2 218 25 266 7 150 4 129 1 110 1 200 8 248 1 58 8 61 1 227 52 8 4 249 2 152 1 230 4 181 2 90 2 316 1 116 27 135 1 345 1 234 2 184 1 154 2 96 1 319 4 40 1 321 1 49 1 238 7 74 1 326 7 328 1 102 14 51 1 124 1 28 7 287 2 126 1 
47 1 138 1 62 1 208 1 204 1 301 1 235 1 20 1 132 1 202 1 
98 1 56 1 
138 1 62 1 208 1 204 1 358 1 340 1 235 1 280 1 202 1 
191 1 281 1 
112 1 84 1 315 1 
163 1 138 1 79 1 208 1 186 1 170 1 109 1 301 1 235 1 292 2 132 1 202 1 47 1 228 1 375 1 62 1 204 1 296 1 
163 1 138 1 79 1 208 1 186 1 170 1 109 1 301 1 235 1 292 2 132 1 202 1 47 1 228 1 375 1 62 1 204 1 296 1 
163 1 138 1 79 1 208 1 186 1 170 1 109 1 301 1 235 1 292 2 132 1 202 1 47 1 228 1 375 1 62 1 204 1 296 1 
191 1 112 1 281 1 
191 1 112 1 281 1 
84 1 315 1 
112 1 84 1 315 1 
337 1 144 1 
163 1 108 2 243 1 167 1 109 1 223 2 269 1 292 1 202 1 56 1 337 1 62 1 204 1 296 1 89 2 93 2 138 1 208 1 97 2 98 1 235 1 42 1 21 1 190 1 375 1 144 1 193 1 
288 1 218 1 128 1 2 1 173 1 33 1 227 2 277 2 339 1 180 2 233 2 89 2 90 1 182 1 183 2 116 1 282 1 93 2 283 1 234 1 154 1 14 1 97 2 319 2 41 1 188 1 145 1 215 1 75 1 146 1 26 1 
197 1 221 1 156 1 225 1 43 1 45 1 188 1 143 1 260 1 229 1 103 1 205 2 180 2 363 1 233 2 207 1 182 1 183 2 330 1 
197 1 221 1 225 1 43 1 188 1 237 1 143 1 260 1 229 1 103 1 205 2 180 1 363 1 233 1 182 1 183 1 330 1 
308 1 198 1 99 1 188 1 145 1 103 1 306 1 86 1 180 1 233 1 207 1 182 1 183 1 282 1 
197 1 221 1 225 1 43 1 45 1 188 1 143 1 260 1 229 1 103 1 205 2 180 1 363 1 233 1 207 1 182 1 183 1 330 1 
118 1 
83 1 276 1 194 1 186 1 242 1 335 1 92 1 
163 1 265 1 289 1 5 1 171 1 334 1 57 1 175 1 276 1 186 2 285 1 22 1 375 1 76 1 194 1 105 1 242 1 
332 2 289 4 290 6 5 4 333 3 200 2 55 3 334 3 335 1 57 5 58 2 59 1 294 6 115 2 341 2 117 2 156 1 18 2 120 2 212 1 22 4 158 2 73 1 354 2 163 5 265 6 355 2 309 1 222 2 224 2 171 4 130 2 172 2 83 1 276 9 176 1 180 3 87 2 233 3 182 3 364 1 183 3 282 3 99 1 186 8 188 4 375 5 238 2 145 10 326 2 194 8 195 1 105 12 242 2 
1 1 163 1 265 3 355 2 289 2 150 1 4 1 290 5 5 2 224 1 171 2 200 2 334 1 248 1 57 1 58 2 59 1 294 5 8 1 276 8 115 2 181 1 345 1 117 1 96 1 186 5 22 2 375 1 238 2 192 1 74 1 326 2 194 5 105 6 242 2 
163 1 108 1 289 1 5 1 223 1 171 1 200 1 58 2 60 1 276 2 133 1 179 1 362 1 115 2 254 1 89 1 135 1 366 1 93 1 117 1 97 1 22 1 375 1 49 1 194 2 25 1 262 1 126 1 
289 1 5 1 186 1 171 1 335 1 83 1 22 1 276 1 194 1 242 1 
117 1 355 2 265 5 18 1 290 5 186 5 200 2 58 2 294 5 238 2 276 5 326 2 194 5 115 2 105 10 
163 1 57 1 375 1 186 1 334 1 242 1 
0 1 163 3 289 1 198 1 5 2 171 2 224 2 272 1 334 2 57 4 59 2 276 2 278 1 86 1 180 4 233 4 182 1 183 4 282 1 119 1 99 2 371 1 188 1 22 2 375 3 145 1 73 2 194 2 195 1 
108 2 218 1 288 1 169 1 223 2 55 1 227 1 60 1 180 1 206 1 233 1 90 1 89 3 182 1 183 1 93 2 317 1 282 1 283 1 234 1 154 1 97 3 319 2 99 1 188 1 145 1 75 1 215 1 193 1 25 2 162 1 264 1 
265 2 289 1 290 2 5 1 186 4 171 1 224 1 110 1 22 1 294 2 59 1 276 1 194 2 105 4 242 2 
336 1 138 1 208 1 
336 1 138 1 208 1 
138 1 144 1 208 1 350 1 132 1 
336 1 138 1 208 1 
138 1 208 1 220 1 
138 1 208 1 220 1 
138 1 208 1 220 1 
138 1 208 1 
62 1 235 1 
234 2 218 4 288 2 154 2 266 2 319 4 110 1 200 1 321 1 58 1 227 8 49 1 152 1 102 3 90 2 51 1 28 1 116 4 135 1 126 1 
218 3 266 2 110 1 321 1 200 1 58 1 227 6 49 1 152 1 102 2 92 1 116 3 135 1 126 1 
234 1 355 1 218 2 288 1 154 1 266 1 319 2 200 1 58 1 227 4 361 1 238 1 326 1 102 2 90 1 28 1 116 2 
355 1 218 4 266 1 150 1 200 1 58 1 227 7 8 2 249 1 238 1 326 1 102 2 181 1 28 1 116 3 
355 2 218 12 288 2 266 5 150 2 110 1 200 3 58 3 227 23 249 1 8 2 152 1 90 2 116 11 135 2 234 2 154 2 319 4 321 1 49 1 238 2 325 1 326 2 377 1 102 9 51 2 28 4 287 1 126 2 
227 1 218 1 8 1 
227 1 150 1 116 1 
234 1 355 1 154 1 288 1 218 3 266 2 319 2 18 1 200 1 58 1 227 6 361 1 238 1 326 1 102 3 90 1 28 1 116 3 
1 1 355 2 218 6 288 1 266 1 150 1 129 1 200 2 58 2 248 1 227 12 8 1 181 1 90 1 116 6 345 1 234 1 154 1 96 1 319 2 238 2 74 1 326 2 102 2 28 1 
218 3 266 1 200 1 58 1 227 6 49 1 102 2 28 1 116 3 135 1 126 1 
234 1 218 2 288 1 154 1 266 1 319 2 321 1 227 3 152 1 377 1 102 2 51 1 90 1 28 1 116 1 126 1 135 1 
234 1 154 1 288 1 218 5 266 3 319 2 129 1 200 2 58 2 227 10 49 1 102 5 90 1 262 1 28 2 116 5 135 2 126 2 
234 1 355 1 288 1 154 1 319 2 129 1 58 1 227 2 102 1 90 1 28 1 116 2 
234 1 355 1 218 2 288 1 154 1 266 1 319 2 129 1 200 1 58 1 227 4 238 1 326 1 102 2 90 1 28 1 116 2 
234 3 218 2 288 3 154 3 266 1 319 6 129 1 274 1 227 3 377 1 102 2 51 1 90 3 28 1 116 1 135 1 126 1 
355 3 218 18 288 5 266 7 150 3 129 1 110 1 200 5 313 1 274 1 58 5 227 34 8 4 361 1 249 1 152 1 38 1 181 1 90 5 116 16 135 3 234 5 154 5 185 1 319 10 321 1 49 2 238 3 377 1 326 3 102 12 51 2 28 5 126 3 
218 4 288 1 266 2 150 1 129 1 110 1 200 1 58 1 227 8 8 1 152 1 181 1 90 1 116 4 135 1 234 1 154 1 319 2 321 1 49 1 74 1 102 2 126 1 
355 1 218 5 288 2 266 2 150 1 129 1 110 1 200 1 58 2 227 11 8 2 361 1 249 1 152 1 181 1 90 2 116 6 135 1 234 2 154 2 319 4 321 1 49 1 238 1 74 1 102 3 28 1 126 1 
1 1 355 2 218 10 288 3 266 3 150 1 129 1 110 1 200 3 58 3 248 1 227 19 361 1 8 1 152 1 181 1 90 3 116 9 135 1 345 1 234 3 154 3 96 1 319 6 321 1 49 1 238 2 74 1 326 2 102 4 51 1 28 1 126 1 
1 1 355 2 218 7 288 3 266 3 150 1 129 1 110 1 200 2 58 3 248 1 227 17 361 1 8 1 152 1 181 1 90 3 116 10 135 1 345 1 234 3 154 3 96 1 319 6 321 1 49 1 238 2 74 1 326 1 102 5 51 1 28 2 126 1 
218 4 288 1 266 2 150 1 129 1 110 1 200 1 58 1 227 8 8 1 152 1 181 1 90 1 116 4 135 1 234 1 154 1 319 2 321 1 49 1 74 1 102 2 126 1 
1 1 355 2 218 6 288 1 266 1 150 1 129 1 200 2 58 2 248 1 227 12 8 1 181 1 90 1 116 6 345 1 234 1 154 1 96 1 319 2 238 2 74 1 326 2 102 2 28 1 
1 1 355 2 218 8 288 4 266 3 150 1 129 1 110 1 200 2 248 1 58 3 227 18 8 1 361 1 152 1 181 1 90 4 116 10 135 1 345 1 234 4 154 4 96 1 319 8 321 1 49 1 238 2 74 1 326 1 102 5 51 2 28 2 126 1 
1 1 355 3 218 7 288 4 266 3 150 1 129 1 200 2 274 1 248 1 58 3 227 16 8 1 181 1 90 4 116 9 345 1 234 4 154 4 96 1 319 8 238 3 74 1 326 2 102 6 51 2 28 3 
218 4 266 3 200 1 321 1 58 1 227 7 49 1 152 2 102 6 28 3 116 3 135 3 126 3 
1 1 355 2 218 8 288 4 266 3 150 1 129 1 110 1 200 2 274 1 248 1 58 3 227 18 8 1 152 1 181 1 90 4 116 10 135 1 345 1 234 4 154 4 96 1 319 8 321 1 49 1 238 2 74 1 326 1 102 4 51 2 28 1 126 1 
63 1 219 1 97 1 193 1 89 1 211 1 93 1 
149 1 219 1 68 1 97 1 211 1 72 1 63 1 250 1 193 1 27 1 89 1 93 1 
145 1 198 1 86 1 180 1 99 1 233 1 182 1 188 1 92 1 183 1 282 1 
108 1 97 2 223 1 99 1 55 1 188 1 360 1 145 1 193 1 180 1 233 1 89 2 162 1 182 1 183 1 282 1 93 1 264 1 
108 1 223 2 130 1 55 2 360 1 179 1 180 1 87 1 233 1 89 2 182 1 65 1 183 1 93 2 282 2 95 1 97 2 188 1 145 3 73 1 193 1 162 1 264 1 
108 1 223 2 130 1 55 2 111 1 360 1 179 1 180 2 87 1 233 2 89 2 182 1 65 1 183 2 93 2 282 2 95 1 97 2 188 1 145 3 73 1 193 1 240 1 162 1 
163 2 333 1 130 1 55 1 111 1 57 1 34 1 180 3 252 1 87 1 233 3 182 1 341 1 183 3 282 1 186 1 99 1 188 1 158 1 375 2 145 4 73 1 242 1 
163 2 332 1 99 1 186 1 130 1 333 1 55 1 188 1 111 1 57 1 375 2 158 1 145 4 73 1 87 1 180 3 233 3 341 1 182 1 242 1 183 3 282 1 
180 1 233 1 182 1 44 1 188 1 183 1 
128 1 15 1 318 1 156 1 348 1 99 2 44 1 55 1 188 3 260 1 145 3 101 1 304 1 24 1 277 1 180 6 233 7 364 1 182 2 183 7 282 2 
108 1 288 2 200 1 110 1 55 1 58 1 152 1 116 3 154 2 14 1 156 1 75 2 215 2 162 1 307 1 264 1 126 1 218 3 266 2 169 1 223 1 131 1 360 1 33 1 227 6 180 1 233 1 90 2 89 2 88 1 182 1 183 1 317 1 93 1 282 1 135 1 234 2 97 2 319 4 321 1 188 1 49 1 324 1 145 1 102 2 193 2 147 1 
163 3 332 1 289 2 5 2 222 1 171 2 269 1 333 1 334 1 335 1 83 1 57 2 276 1 180 1 233 1 341 1 183 1 186 1 99 1 120 1 22 2 375 3 158 1 145 2 194 1 195 1 354 1 242 1 
158 1 145 2 156 1 180 2 233 2 182 1 55 1 364 1 44 1 188 2 212 1 183 2 282 1 
198 1 156 1 187 1 99 1 188 1 111 1 145 1 86 1 180 4 233 4 182 1 183 4 282 1 
201 1 55 1 82 1 188 2 145 1 101 1 73 1 24 1 180 2 233 2 182 1 183 2 39 1 282 1 
229 1 221 1 205 1 180 1 99 1 233 1 43 1 182 1 188 1 183 1 
128 1 156 1 41 1 188 1 260 1 145 1 180 2 233 2 182 1 183 2 282 1 
198 1 128 1 156 1 348 1 187 1 99 1 188 2 145 3 73 1 304 1 86 1 180 4 233 5 182 2 183 5 282 2 
164 1 198 1 128 1 156 1 348 1 187 1 99 1 188 2 145 3 73 1 86 1 180 4 233 5 182 2 183 5 282 2 
108 1 97 2 223 1 99 1 55 1 188 1 360 1 145 1 193 1 240 1 180 1 233 1 89 2 162 1 182 1 183 1 282 1 93 1 
318 1 55 1 188 2 145 1 101 1 24 1 73 1 180 1 233 1 364 1 182 1 183 1 282 1 
48 1 16 1 193 1 365 1 91 1 
163 2 95 1 16 1 359 1 186 1 269 1 375 2 48 2 10 1 251 1 193 1 179 1 353 1 134 1 341 1 65 1 91 2 365 2 242 1 
16 1 97 1 2 1 146 1 339 1 89 1 91 1 365 1 93 1 
16 1 353 1 134 1 
209 1 305 1 92 1 213 1 
209 1 305 1 113 1 300 1 210 1 245 1 213 1 
297 1 312 1 245 1 
107 2 209 1 300 1 210 1 245 3 213 1 338 1 36 1 305 1 113 3 12 1 196 1 
323 1 209 1 305 1 203 1 113 2 300 1 210 1 245 2 213 1 
298 1 36 1 305 1 221 1 113 1 205 1 300 1 210 1 225 1 245 1 52 1 
36 1 305 1 113 1 300 1 210 1 245 1 213 1 
209 1 36 1 113 1 300 1 210 1 245 1 213 2 
80 1 320 1 300 2 210 2 245 2 213 1 226 1 36 1 305 1 113 2 
298 1 127 1 209 1 300 1 210 1 245 3 213 1 35 1 9 1 36 1 203 2 305 2 113 3 
209 1 221 1 300 1 256 1 210 1 245 2 225 1 43 1 213 1 36 1 305 1 203 1 113 2 205 2 363 1 
298 1 209 1 300 2 210 2 245 4 213 1 323 1 9 1 36 1 203 2 305 2 113 4 125 1 
209 1 36 1 305 1 113 1 300 1 210 1 245 1 213 1 
107 1 298 1 209 2 300 1 210 1 245 4 213 2 338 1 9 1 203 2 305 3 113 4 196 1 342 1 
209 1 300 1 210 1 245 2 213 1 247 1 36 1 351 1 305 1 203 1 113 2 78 1 
107 2 338 2 209 1 36 1 305 1 113 3 347 1 300 1 210 1 245 3 196 1 213 1 
295 2 305 2 257 1 50 1 
36 1 113 1 300 1 210 1 216 1 245 1 
35 1 209 1 36 1 305 1 203 1 113 2 300 1 210 1 245 2 213 1 
23 1 
209 1 36 1 305 1 113 1 300 1 210 1 245 1 213 1 
107 1 209 1 300 1 210 1 245 3 213 1 35 1 36 1 203 1 305 1 113 3 
298 1 9 1 305 1 342 1 
305 1 213 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 1 206 1 63 1 152 2 125 1 28 1 92 1 68 2 40 1 265 2 70 1 291 9 112 3 266 6 318 1 76 2 245 4 98 1 325 1 271 1 353 5 374 1 18 9 102 2 199 2 22 1 145 2 172 1 
223 1 206 1 63 1 152 2 125 1 28 1 92 1 68 2 40 1 265 2 70 1 291 9 112 3 266 6 318 1 76 2 245 4 98 1 325 1 271 1 353 5 374 1 18 9 102 2 199 2 22 1 145 2 172 1 
223 1 206 1 63 1 152 2 125 1 28 1 92 1 68 2 40 1 265 2 70 1 291 10 112 4 266 7 318 1 76 2 245 5 98 1 325 1 271 1 353 6 374 1 18 10 102 2 199 2 22 1 145 2 172 1 
223 1 206 1 63 1 152 2 125 1 28 1 92 1 68 2 40 1 265 2 291 7 112 2 266 4 318 1 76 2 245 3 98 1 325 1 271 1 353 4 374 1 18 7 102 2 199 1 22 1 145 2 172 1 
245 2 98 1 325 1 206 1 152 1 353 3 18 4 92 1 68 1 40 1 199 2 265 1 70 1 291 4 112 1 266 3 145 1 76 1 
98 1 284 1 152 1 271 1 353 1 262 1 18 2 92 1 102 1 68 1 40 1 265 1 291 2 145 1 172 1 189 1 
245 1 98 1 353 2 18 3 28 1 92 1 102 1 40 1 265 2 291 3 112 1 266 1 145 2 
223 1 206 1 152 1 125 1 28 1 92 1 68 1 40 1 265 2 291 9 70 1 112 3 266 7 74 1 76 1 245 4 98 1 325 1 353 5 18 9 102 1 199 2 145 2 222 1 
223 1 206 1 152 1 125 1 28 1 92 1 68 1 40 1 265 2 291 9 70 1 112 3 266 7 74 1 76 1 245 4 98 1 325 1 353 5 18 9 102 1 199 2 145 2 222 1 
174 1 141 1 108 1 
174 1 161 1 67 2 
175 2 215 2 47 1 129 1 139 2 352 2 10 2 286 2 
175 2 36 1 150 1 1 1 25 2 3 1 62 1 260 1 285 1 286 2 38 1 155 2 312 2 69 1 30 1 288 1 8 1 129 1 32 1 211 1 186 1 10 2 160 1 114 1 215 3 134 1 47 1 14 1 139 3 352 2 196 2 354 1 198 1 20 1 144 1 105 1 56 2 
175 1 215 1 239 1 351 1 191 1 129 1 139 1 352 1 10 1 286 1 
174 1 215 1 12 1 282 1 59 1 79 1 259 1 139 1 286 1 108 1 239 1 346 1 251 1 41 1 
174 1 175 1 282 2 215 1 12 1 79 1 259 2 352 1 139 1 286 1 108 1 239 1 346 1 10 1 41 1 
282 1 250 1 90 1 259 1 355 1 
174 1 282 2 316 1 362 1 90 1 259 2 355 1 108 1 
282 1 90 1 259 1 
175 1 282 1 215 1 351 1 259 1 191 1 352 1 139 1 286 1 111 1 239 1 355 1 129 1 10 1 
174 1 
174 1 282 2 316 1 90 1 259 2 355 1 108 1 373 1 
174 1 214 2 282 5 294 1 326 2 259 5 90 2 233 1 108 1 180 1 278 1 316 1 93 1 31 1 355 2 72 1 201 1 187 2 356 1 
47 1 141 1 
175 1 215 2 47 2 139 2 352 1 286 2 110 1 315 1 10 1 
78 1 95 1 268 1 
215 1 150 1 47 1 14 1 3 1 62 1 139 1 196 1 38 1 155 1 198 1 288 1 8 1 32 1 380 1 56 1 
256 1 150 1 215 2 78 1 14 1 62 1 3 1 15 1 352 1 139 2 286 1 38 1 196 1 155 1 198 1 288 1 8 1 32 1 10 1 56 1 
175 1 256 1 369 1 215 5 122 1 59 1 47 1 15 2 352 4 139 5 286 5 110 1 237 1 10 4 
215 2 239 1 33 1 191 1 139 2 352 2 10 2 286 2 
175 1 215 3 47 1 15 1 139 3 352 3 10 3 286 3 
215 1 239 1 191 1 139 1 352 1 10 1 286 1 
175 1 110 1 215 1 315 1 239 1 139 1 352 1 10 1 286 1 
175 2 256 1 150 1 282 1 1 1 25 1 62 1 3 1 259 1 260 1 286 3 38 1 155 1 312 2 110 1 288 1 30 1 239 1 346 1 8 1 32 1 129 1 211 1 160 1 41 1 10 3 114 1 43 1 215 4 12 1 134 1 47 1 14 1 79 1 15 1 139 4 352 3 196 1 354 1 198 1 144 1 105 1 173 1 56 1 
215 2 122 1 59 1 47 1 15 1 139 2 352 1 10 1 286 2 
175 1 174 1 256 1 43 1 282 1 215 3 12 1 162 1 79 1 259 1 15 2 352 3 139 3 286 3 110 1 239 1 346 1 10 3 41 1 
175 1 215 2 78 1 15 1 352 2 139 2 286 2 110 1 10 2 95 1 
215 1 150 1 47 1 14 1 3 1 62 1 139 1 196 1 38 1 155 1 198 1 288 1 8 1 32 1 56 1 
215 1 150 1 47 1 14 1 309 1 62 1 139 1 196 1 38 1 155 1 198 1 8 1 241 1 32 1 56 1 
36 2 1 1 25 4 260 1 341 1 64 1 178 1 312 2 363 1 185 1 211 1 130 1 95 2 114 1 268 2 134 1 78 2 81 1 248 1 218 1 195 1 354 2 144 1 200 1 
12 1 215 1 239 1 33 1 139 1 352 1 10 1 286 1 
58 1 210 1 
58 1 210 1 
204 1 99 1 
204 1 99 1 
204 1 99 1 
58 1 210 1 217 1 
58 1 210 1 217 1 
58 1 324 1 210 1 
109 1 292 1 204 1 58 2 210 2 99 1 
58 1 210 1 217 1 
58 1 210 1 335 1 
58 1 210 1 335 1 
58 1 210 1 335 1 
58 1 24 1 282 1 359 1 177 1 229 1 259 1 286 2 344 1 182 1 210 1 10 2 366 1 367 1 215 2 324 1 47 1 166 1 192 1 352 2 139 2 142 1 303 1 104 1 
174 1 58 2 282 2 372 1 123 1 177 2 26 1 166 2 259 2 192 2 344 2 109 1 220 1 210 2 104 3 75 2 252 1 306 1 367 1 
68 1 152 1 76 1 
68 1 284 1 152 1 
276 1 284 1 152 3 76 2 66 1 96 1 
276 1 117 1 284 1 152 2 76 1 96 1 
276 1 284 1 152 2 76 1 96 2 
174 2 148 1 24 1 282 5 224 1 151 1 90 1 259 5 178 1 108 1 233 3 67 3 182 1 316 1 187 1 214 1 161 1 294 1 46 1 326 1 81 1 248 1 16 1 195 1 249 2 19 2 278 2 118 1 303 1 302 2 355 4 255 1 
174 5 282 9 224 1 90 6 259 9 178 3 232 1 108 1 233 8 67 9 182 4 208 1 93 1 316 1 242 1 187 2 214 2 161 3 294 1 46 2 164 1 326 2 81 3 248 3 195 3 17 5 249 6 197 1 19 6 278 6 118 2 250 5 355 7 279 1 255 3 
174 3 148 1 282 3 259 3 178 1 108 1 233 3 67 4 182 1 93 1 187 1 214 1 161 2 46 1 326 1 81 1 16 1 248 1 195 1 249 2 19 2 278 2 118 1 302 1 355 2 255 1 
174 4 148 1 282 4 259 4 178 2 232 1 108 1 233 5 67 7 182 2 208 1 93 1 187 1 214 1 161 3 46 1 164 1 326 1 81 2 16 1 248 2 195 2 249 4 19 4 278 4 118 1 302 2 355 3 255 2 
225 1 14 1 141 1 
14 1 376 1 
295 1 
150 1 14 1 38 1 
14 1 343 1 
14 1 38 1 
150 1 225 2 14 3 296 1 38 1 267 1 
36 4 149 1 13 1 138 2 25 7 81 1 64 3 48 1 248 1 194 1 218 2 156 1 354 3 29 1 299 1 171 1 131 1 
36 4 149 1 13 1 138 2 25 7 81 1 64 3 48 1 248 1 194 1 218 2 156 1 354 3 29 1 299 1 171 1 131 1 
36 4 106 1 149 1 13 1 138 2 25 7 81 1 64 3 48 1 248 1 194 1 218 2 156 1 354 3 29 1 299 1 171 1 131 1 
36 16 121 1 149 2 89 1 1 1 205 1 338 1 25 31 260 1 178 3 64 10 156 1 312 2 29 5 131 2 114 1 13 1 138 3 81 4 48 2 100 1 248 4 194 1 218 5 195 3 275 3 354 15 299 2 144 1 379 1 171 1 119 1 305 4 255 3 
36 5 149 1 1 2 13 1 138 2 25 9 81 1 48 1 64 4 260 2 248 1 194 1 218 3 312 4 29 1 354 4 299 1 144 2 21 1 379 1 171 1 131 1 55 1 114 2 
88 1 60 1 62 1 284 1 152 2 66 1 155 1 92 1 68 1 40 1 128 1 265 1 291 2 266 1 6 1 71 1 76 1 243 1 98 1 163 1 97 1 353 1 196 1 18 2 377 1 102 1 198 1 145 1 304 1 56 1 
88 1 60 1 62 1 284 1 152 2 310 1 66 1 155 1 92 1 68 1 40 1 128 1 287 1 265 1 291 3 6 1 266 2 71 1 76 1 243 1 322 1 97 1 353 1 196 1 18 3 102 1 198 1 145 1 304 1 56 1 
88 1 60 1 62 1 284 1 152 2 66 1 155 1 92 1 68 1 40 1 128 1 287 1 291 2 6 1 266 2 76 1 243 1 322 1 97 1 353 1 196 1 18 2 102 1 198 1 56 1 
0 1 14 1 62 1 179 1 140 1 310 1 38 1 196 1 18 1 155 1 102 2 198 1 128 2 265 1 169 1 291 1 334 1 6 2 8 1 145 1 281 1 56 1 243 2 
88 1 60 1 62 1 284 1 152 2 66 1 155 1 68 1 128 1 265 1 291 1 6 1 71 1 76 1 243 1 322 1 98 1 163 1 97 1 196 1 18 1 102 1 198 1 145 1 304 1 56 1 
368 1 
174 2 337 2 282 5 0 1 90 6 286 1 38 1 233 2 39 4 238 2 239 1 346 1 7 2 8 2 9 1 41 1 187 1 244 1 12 1 46 1 294 1 14 1 139 1 196 2 198 1 103 1 301 1 251 1 202 1 23 1 56 2 59 1 259 5 62 1 108 1 67 2 155 2 157 1 316 3 209 2 115 1 319 1 214 1 161 2 215 1 326 1 79 1 165 1 270 1 273 2 168 2 278 2 170 2 334 1 280 1 
282 3 59 1 259 3 90 2 286 1 39 2 239 1 316 1 346 1 9 1 41 1 115 1 215 1 12 1 79 1 165 1 139 1 373 1 168 1 301 1 251 1 202 1 
174 1 282 3 59 1 90 1 259 3 286 1 108 1 39 3 239 1 316 1 346 1 9 1 41 1 115 1 215 1 12 1 79 1 165 1 139 1 273 1 373 1 301 1 251 1 202 1 
174 1 282 3 59 1 259 3 90 2 286 1 108 1 39 3 316 1 239 1 346 1 7 1 9 1 41 1 115 1 215 1 12 1 79 1 165 1 139 1 273 1 373 1 168 1 301 1 251 1 202 1 
337 2 174 5 257 1 282 5 59 1 90 7 259 5 27 1 286 1 233 1 108 5 39 6 238 2 316 3 239 1 209 2 346 1 7 4 347 1 9 1 41 1 187 1 115 1 244 1 214 1 161 2 370 1 215 1 12 1 294 1 326 1 79 1 165 1 273 4 139 1 373 1 168 4 103 1 278 1 170 2 301 1 85 1 251 1 202 1 
337 2 174 2 282 4 90 4 286 1 233 1 39 4 239 1 238 2 346 1 7 2 9 1 41 1 187 1 244 1 12 1 294 1 139 1 103 1 301 1 251 1 202 1 23 1 59 1 259 4 108 1 67 2 316 2 209 2 115 1 214 1 215 1 161 2 79 1 326 1 165 1 273 2 168 2 278 1 170 2 
174 1 337 2 282 4 59 1 90 4 259 4 286 1 108 1 233 1 39 4 316 2 238 2 239 1 209 2 346 1 7 2 347 1 9 1 41 1 187 1 115 1 244 1 214 1 161 2 215 1 12 1 370 1 294 1 79 1 326 1 165 1 273 2 139 1 168 2 103 1 278 1 170 2 301 1 251 1 85 1 202 1 
174 1 337 2 282 4 59 1 90 4 259 4 286 1 108 1 233 1 39 4 316 2 238 2 239 1 209 2 346 1 7 2 347 1 9 1 41 1 187 1 115 1 244 1 214 1 161 2 215 1 12 1 370 1 294 1 79 1 326 1 165 1 273 2 139 1 168 2 103 1 278 1 170 2 301 1 251 1 85 1 202 1 
174 1 337 2 120 1 282 4 59 1 90 4 259 4 286 1 108 1 233 1 67 2 39 4 159 1 316 2 238 2 239 1 346 1 7 2 347 1 9 1 41 1 187 1 115 1 244 1 214 1 215 1 12 1 294 1 79 1 326 1 165 1 167 1 273 2 297 2 139 1 168 2 277 2 278 1 301 1 251 1 202 1 
174 1 337 2 282 4 59 1 259 4 90 5 27 1 286 1 108 1 233 1 39 5 316 2 238 2 239 1 209 2 346 1 7 3 347 1 9 1 41 1 187 1 115 1 244 1 214 1 161 2 215 1 12 1 370 1 294 1 326 1 79 1 165 1 139 1 273 3 168 3 103 1 278 1 170 2 301 1 85 1 251 1 202 1 
174 1 337 2 282 4 59 1 259 4 90 5 27 1 286 1 108 1 233 1 39 5 316 2 238 2 239 1 209 2 346 1 7 3 347 1 9 1 41 1 187 1 115 1 244 1 214 1 161 2 215 1 12 1 370 1 294 1 326 1 79 1 165 1 139 1 273 3 168 3 103 1 278 1 170 2 301 1 85 1 251 1 202 1 
174 1 337 2 282 4 59 1 90 4 259 4 286 1 108 1 233 1 67 2 39 4 159 1 316 2 238 2 239 1 346 1 7 2 9 1 41 1 187 1 115 1 244 1 214 1 215 1 12 1 294 1 326 1 79 1 165 1 273 2 297 2 139 1 168 2 277 2 278 1 301 1 251 1 202 1 23 1 
36 3 134 1 1 1 13 1 78 1 47 2 138 1 25 6 81 1 64 2 48 1 341 1 260 1 248 1 194 1 218 2 141 1 312 2 354 3 299 1 144 1 211 1 171 1 95 1 268 1 114 1 
36 8 357 1 1 2 205 1 25 14 64 2 260 2 178 2 312 4 29 1 69 1 211 1 95 4 188 1 114 2 268 11 134 2 78 11 47 1 81 1 100 1 248 2 218 1 195 1 101 1 275 3 354 6 52 1 144 2 86 1 105 1 305 3 255 2 
256 1 36 1 150 1 1 1 25 2 62 1 3 1 260 1 286 1 38 1 155 1 312 2 288 1 69 1 8 1 32 1 211 1 10 1 95 1 114 1 215 2 134 1 47 1 14 1 15 1 139 2 352 1 50 1 196 1 101 1 143 1 198 1 354 1 144 1 332 1 380 1 105 1 56 1 
36 10 1 3 3 2 178 2 286 1 38 2 288 2 8 1 10 1 95 7 132 2 42 1 134 3 13 1 47 2 14 2 138 1 48 1 15 1 352 1 139 3 248 3 194 1 196 3 195 2 101 1 354 10 198 2 299 1 144 3 105 1 255 2 56 3 256 1 150 2 25 20 62 2 260 3 64 8 207 1 155 3 312 6 29 4 69 1 73 2 32 2 211 3 160 2 114 3 268 7 322 1 215 3 78 7 81 3 218 4 378 2 333 1 171 1 336 2 
307 1 36 1 1 2 0 1 25 2 62 2 341 1 260 2 91 1 286 1 65 1 38 2 4 1 155 7 312 4 69 1 8 2 10 1 211 2 186 2 114 2 350 1 322 1 215 1 134 2 14 3 80 1 15 1 139 1 352 1 196 8 377 1 84 1 198 2 354 1 144 2 334 1 105 1 56 8 
175 1 36 1 1 1 228 1 25 3 64 1 260 1 178 1 286 1 312 2 110 1 10 1 211 1 95 1 268 1 114 1 215 1 134 1 78 1 81 1 352 1 139 1 248 1 218 1 195 1 101 1 354 2 144 1 255 1 
36 2 134 1 1 1 78 1 25 2 64 1 341 1 260 1 178 1 248 1 312 2 29 1 144 1 185 1 211 1 95 1 268 1 114 1 
134 1 1 1 78 1 25 2 81 1 64 1 341 1 260 1 218 1 195 1 312 2 354 2 144 1 363 1 211 1 95 1 268 1 114 1 
36 2 1 1 25 4 178 1 260 1 341 1 64 2 312 2 29 1 211 1 95 2 114 1 268 2 134 1 78 2 81 1 248 1 218 1 195 1 354 2 144 1 255 1 
350 1 36 2 134 1 1 1 78 1 25 2 64 1 260 1 178 1 248 1 312 2 29 1 144 1 185 1 211 1 95 1 268 1 114 1 
350 1 134 1 1 1 78 1 25 2 81 1 64 1 260 1 218 1 195 1 312 2 354 2 144 1 363 1 211 1 95 1 268 1 114 1 
36 2 1 1 25 4 178 1 260 1 64 2 312 2 29 1 211 1 95 2 114 1 268 2 350 1 134 1 78 2 81 1 248 1 218 1 195 1 354 2 144 1 255 1 
36 2 134 1 1 1 78 2 25 4 81 1 64 2 260 1 178 1 248 1 218 1 195 1 312 2 354 2 29 1 144 1 211 1 95 2 255 1 268 2 114 1 
36 1 150 1 1 1 25 2 62 1 3 1 260 1 38 1 155 1 312 2 69 1 288 1 8 1 32 1 160 1 211 1 114 1 215 1 134 1 47 1 14 1 139 1 196 1 198 1 354 1 144 1 105 1 56 1 
36 1 150 1 1 1 25 2 62 1 309 1 260 1 38 1 155 1 312 2 69 1 8 1 32 1 241 1 211 1 114 1 348 1 215 1 134 1 47 1 14 1 139 1 196 1 198 1 354 1 144 1 105 1 56 1 
36 2 1 1 25 4 178 1 260 1 64 2 312 2 29 1 211 1 95 2 114 1 268 2 134 1 78 2 81 1 248 1 218 1 195 1 101 1 354 2 144 1 255 1 
36 2 150 1 1 1 25 4 62 1 3 1 64 2 178 1 260 1 38 1 155 1 312 2 29 1 288 1 32 1 160 1 211 1 95 2 268 2 114 1 215 1 134 1 78 2 14 1 81 1 248 1 139 1 218 1 195 1 196 1 377 1 354 2 198 1 144 1 378 1 255 1 56 1 
175 1 36 2 1 1 230 1 25 3 64 1 260 1 178 1 286 1 312 2 29 1 110 1 10 1 211 1 95 1 114 1 268 1 215 1 134 1 78 1 81 1 352 1 139 1 248 1 195 1 101 1 354 1 144 1 255 1 
87 1 36 20 176 1 1 3 205 3 25 41 260 3 178 4 64 8 231 4 154 1 361 1 263 1 312 6 29 4 317 1 365 1 114 3 13 1 77 1 137 1 138 1 81 5 48 1 100 1 248 5 194 1 218 4 83 1 195 4 328 1 275 3 219 1 354 21 299 1 144 3 331 2 379 1 171 1 35 1 305 4 55 1 255 4 
87 1 36 20 176 1 1 4 205 3 25 38 260 4 178 4 64 7 231 4 154 1 361 1 263 1 312 8 29 3 317 1 365 1 114 4 13 1 77 1 137 1 138 1 81 4 48 1 100 1 248 5 194 1 218 4 83 1 195 3 328 1 275 3 219 1 354 18 299 1 144 4 331 2 379 2 171 1 35 1 305 4 55 1 255 4 
36 27 357 2 176 1 1 2 205 2 25 52 260 2 178 7 64 14 231 4 154 1 361 1 263 1 312 4 29 7 317 1 365 1 114 2 13 1 77 1 137 1 138 1 81 8 48 1 100 2 248 8 194 1 218 7 195 7 328 1 275 4 219 1 354 25 299 1 144 2 331 1 379 1 171 1 35 1 305 4 55 1 255 7 
36 9 1 2 205 1 25 19 260 2 178 3 64 6 231 2 154 1 263 1 312 4 29 3 114 2 137 1 81 3 100 1 248 3 218 3 83 1 195 3 328 1 275 1 354 10 144 2 331 1 221 1 35 2 305 2 55 1 255 3 
36 14 176 1 1 3 205 2 25 26 64 4 260 3 178 3 231 4 154 1 361 1 263 1 312 6 29 2 317 1 365 1 114 3 77 1 137 2 81 2 248 3 218 2 195 2 328 1 275 2 354 12 219 1 144 3 331 2 379 2 35 1 55 1 305 2 255 3 
109 1 213 1 58 1 372 1 123 1 210 1 177 1 166 1 192 1 344 1 
324 1 366 1 
51 1 58 1 210 1 177 1 166 1 192 1 113 1 311 1 344 1 
217 1 235 1 
292 1 135 1 335 1 
174 1 58 1 282 1 372 1 123 1 177 1 259 1 166 1 192 1 344 1 109 1 220 1 210 1 104 2 75 1 252 1 306 1 367 1 
174 1 58 1 282 1 372 1 123 1 177 1 259 1 166 1 192 1 344 1 109 1 220 1 210 1 104 2 75 1 252 1 306 1 367 1 
174 1 58 1 282 1 372 1 123 1 177 1 259 1 166 1 192 1 344 1 109 1 220 1 210 1 104 2 75 1 252 1 306 1 367 1 
292 1 217 1 235 1 
292 1 217 1 235 1 
135 1 335 1 
292 1 135 1 335 1 
229 1 142 1 
58 1 24 1 282 1 226 1 359 1 177 1 229 1 259 1 286 2 344 1 182 1 210 1 75 1 10 2 366 1 215 2 324 1 47 1 166 1 192 1 139 2 352 2 142 1 220 1 303 1 104 1 355 1 
36 1 1 1 25 2 62 1 260 1 286 2 65 1 38 1 155 2 312 2 264 1 69 1 211 1 186 2 114 1 215 2 134 1 14 1 139 2 82 1 274 1 196 2 101 1 34 1 84 1 198 1 354 1 298 1 144 1 105 1 56 2 
322 1 88 1 216 1 97 1 284 1 62 1 247 1 152 2 66 1 196 2 155 2 377 1 68 1 198 1 128 1 290 1 76 1 304 1 56 2 
322 1 88 1 97 1 284 1 247 1 62 1 152 2 66 1 196 1 234 1 155 1 68 1 128 1 198 1 76 1 304 1 56 1 
146 1 0 1 14 1 62 1 179 1 38 1 196 1 155 1 198 1 128 1 290 1 334 1 8 1 56 1 
322 1 88 1 216 1 97 1 284 1 62 1 247 1 152 2 66 1 196 1 155 1 68 1 128 1 198 1 290 1 76 1 304 1 56 1 
261 1 
174 1 180 1 278 1 141 1 233 1 108 1 356 1 
174 2 282 1 90 1 259 1 233 1 108 1 67 1 316 1 209 1 187 1 214 1 161 1 294 1 326 1 103 1 278 1 170 1 
174 8 282 5 225 2 37 1 90 5 178 2 343 2 233 9 38 3 126 2 180 1 346 2 8 1 187 4 349 1 133 2 46 2 294 4 190 2 14 10 136 1 296 1 248 2 196 3 195 2 249 6 198 3 19 6 254 1 356 1 253 2 255 2 56 3 150 3 62 4 259 5 108 2 155 3 67 12 313 2 316 3 320 1 212 2 214 4 323 2 161 6 326 4 81 2 270 1 269 2 376 3 377 1 278 8 336 2 
174 5 176 1 282 1 205 1 339 1 259 1 90 1 178 2 233 8 108 2 67 6 316 1 240 1 317 1 365 1 187 2 214 2 161 3 77 1 46 1 190 1 294 2 326 2 81 2 270 1 248 2 195 2 249 5 275 1 19 5 219 1 278 5 253 2 305 1 255 2 
175 1 282 1 259 1 286 1 233 2 111 1 239 1 5 1 129 1 10 1 187 1 214 1 215 1 190 1 294 1 326 1 351 1 81 1 191 1 48 1 139 1 248 2 352 1 194 1 299 1 278 2 85 1 253 2 
174 1 214 1 294 1 326 1 108 1 233 1 180 1 278 1 187 1 356 1 
174 5 161 5 190 1 81 2 178 2 248 2 195 2 233 5 249 5 67 10 19 5 278 5 336 1 253 2 255 2 
174 1 282 1 316 1 259 1 90 1 108 1 
282 3 0 1 62 1 90 4 259 3 107 1 342 1 38 1 233 2 155 4 157 1 93 1 316 2 8 2 187 2 349 2 214 2 294 1 46 2 14 1 326 2 270 2 196 4 198 1 278 2 334 1 280 1 254 1 56 4 
175 2 150 1 1 1 25 1 3 1 62 1 260 1 286 2 38 1 155 1 312 2 30 1 288 1 8 1 129 1 32 1 10 2 160 1 211 1 114 1 215 3 134 1 47 1 14 1 139 3 352 2 196 1 354 1 198 1 144 1 105 1 56 1 
174 4 214 1 161 2 294 1 46 1 138 1 326 1 270 1 233 1 108 2 67 4 249 2 19 2 278 2 187 1 
181 1 192 1 344 1 
181 1 192 1 344 1 
57 1 123 1 192 1 142 1 344 1 
181 1 192 1 344 1 
124 1 192 1 344 1 
124 1 192 1 344 1 
124 1 192 1 344 1 
192 1 344 1 
58 1 210 1 
36 4 1 1 205 1 25 8 260 1 64 2 312 2 365 1 114 1 13 1 138 1 81 1 48 1 248 1 218 2 194 1 275 1 354 4 299 1 144 1 171 1 305 1 55 1 
36 6 1 2 205 1 25 11 260 2 178 1 64 3 312 4 29 1 364 1 365 1 114 2 13 1 138 1 81 1 48 1 100 1 248 2 194 1 218 2 275 1 354 5 299 1 144 2 171 1 305 2 55 1 255 1 
36 9 176 1 1 3 205 1 25 19 260 3 178 2 64 4 312 6 29 1 364 1 317 1 365 1 114 3 13 1 77 1 138 1 81 3 48 1 248 3 194 1 218 3 195 2 275 1 354 10 219 1 299 1 144 3 379 1 171 1 305 1 55 1 255 2 
36 10 176 1 1 3 205 1 25 17 260 3 178 2 64 5 312 6 29 2 364 1 317 1 365 1 114 3 13 1 77 1 138 1 81 2 48 1 248 3 194 1 218 3 195 1 275 1 354 7 219 1 299 1 144 3 379 1 171 1 305 1 55 1 255 2 
36 4 1 1 205 1 25 8 260 1 64 2 312 2 365 1 114 1 13 1 138 1 81 1 48 1 248 1 218 2 194 1 275 1 354 4 299 1 144 1 171 1 305 1 55 1 
36 6 176 1 1 1 205 1 25 12 260 1 178 2 64 2 312 2 29 1 317 1 365 1 114 1 77 1 81 2 248 2 218 1 195 2 275 1 354 6 219 1 144 1 305 1 55 1 255 2 
36 10 176 1 1 4 205 1 25 18 260 4 178 2 64 5 312 8 29 2 317 1 364 1 365 1 114 4 13 1 77 1 138 1 81 2 48 1 248 3 194 1 218 3 195 1 275 1 354 8 219 1 299 1 144 4 379 2 171 1 305 1 55 1 255 2 
36 9 176 1 1 4 205 1 25 16 260 4 178 3 64 6 312 8 29 3 317 1 365 1 114 4 77 1 81 2 248 3 218 3 83 1 195 2 275 1 354 7 219 1 144 4 379 2 305 1 55 1 255 3 
36 3 13 1 25 7 81 1 48 3 64 6 248 1 218 3 194 1 354 4 29 3 299 3 171 2 
36 10 176 1 1 4 205 1 25 18 260 4 178 2 64 4 312 8 29 1 317 1 365 1 114 4 13 1 77 1 138 1 81 2 48 1 248 3 194 1 218 3 83 1 195 1 275 1 354 8 219 1 299 1 144 4 379 2 171 1 305 1 55 1 255 2 
36 4 1 2 13 1 138 1 25 8 81 1 64 3 260 2 48 1 248 1 194 1 218 2 312 4 354 4 29 1 299 1 144 2 379 1 171 1 114 2 
36 3 13 1 138 1 25 6 81 1 48 1 64 2 248 1 141 1 218 2 194 1 354 3 299 1 171 1 
36 2 1 1 25 4 81 1 64 2 260 1 178 1 248 1 218 1 195 1 312 2 354 2 29 1 144 1 364 1 255 1 114 1 
36 3 205 1 25 7 81 1 100 1 178 1 64 2 248 1 218 1 195 1 275 1 354 4 29 1 305 2 255 1 
36 11 357 1 1 2 25 23 64 9 178 2 260 2 312 4 29 4 114 2 13 1 138 1 81 3 48 2 100 1 248 3 194 1 218 5 195 2 275 2 354 12 299 2 144 2 330 1 379 2 171 1 86 1 255 2 305 2 
354 1 25 1 305 1 
36 1 25 1 275 1 
36 3 1 1 25 6 81 1 260 1 178 1 64 3 248 1 218 2 195 1 312 2 354 3 29 1 144 1 364 1 336 1 255 1 114 1 
36 6 176 1 1 1 205 1 25 12 260 1 178 2 64 2 312 2 29 1 317 1 365 1 114 1 77 1 81 2 248 2 218 1 195 2 275 1 354 6 219 1 144 1 305 1 55 1 255 2 
36 3 25 6 81 1 48 1 64 2 248 1 194 1 218 1 354 3 29 1 299 1 
36 1 1 1 13 1 25 3 64 2 48 1 260 1 218 1 312 2 29 1 354 2 299 1 330 1 144 1 379 1 171 1 114 1 
36 5 1 1 25 10 81 2 260 1 48 2 64 5 248 2 218 3 194 1 312 2 29 2 354 5 299 2 144 1 5 1 55 1 114 1 
36 2 1 1 25 2 260 1 178 1 64 1 248 1 312 2 29 1 144 1 55 1 114 1 
36 2 1 1 25 4 81 1 64 2 260 1 178 1 248 1 218 1 195 1 312 2 354 2 29 1 144 1 55 1 255 1 114 1 
36 1 1 3 25 3 260 3 48 1 64 2 218 1 83 1 312 6 354 2 29 1 299 1 330 1 144 3 379 1 55 1 114 3 
121 1 36 16 89 1 1 5 205 1 338 1 25 34 260 5 178 3 64 12 312 10 29 5 364 1 114 5 13 1 138 1 81 5 48 3 100 1 248 5 194 2 218 7 83 1 195 3 275 3 354 18 299 3 330 1 144 5 379 2 171 1 305 4 55 1 255 3 
215 1 122 1 59 1 47 1 139 1 286 1 193 1 
203 1 215 1 122 1 59 1 45 1 47 1 139 1 49 1 193 1 286 1 289 1 184 1 
198 1 0 1 14 1 334 1 62 1 8 1 141 1 38 1 196 1 155 1 56 1 
150 1 215 2 47 1 14 1 62 1 3 1 15 1 352 1 139 2 286 1 38 1 196 1 155 1 198 1 8 1 32 1 10 1 56 1 
150 2 3 1 62 1 286 2 343 1 38 2 155 1 239 1 32 1 10 1 349 1 215 2 12 1 323 1 47 1 14 3 79 1 15 1 139 2 352 2 196 1 198 1 56 1 
150 2 309 1 62 1 286 2 343 1 38 2 155 2 239 1 32 1 10 1 349 1 215 2 12 1 323 1 47 1 14 3 79 1 15 1 139 2 352 2 196 2 198 1 53 1 56 2 
174 1 282 2 150 1 225 1 90 1 259 2 62 1 343 1 38 1 108 1 155 3 346 1 8 1 349 1 323 1 44 1 371 1 14 4 196 3 376 1 198 1 53 1 56 3 
174 1 349 1 150 1 323 1 282 2 225 1 14 4 62 1 259 2 90 1 343 1 108 1 38 1 196 3 155 3 376 1 126 1 198 1 53 1 346 1 8 1 56 3 
307 1 198 1 62 1 196 1 155 1 56 1 
307 1 322 1 150 1 14 3 340 1 296 1 80 1 62 3 91 1 196 7 38 2 4 1 155 6 377 1 84 1 198 2 314 1 8 2 54 1 186 1 56 7 
36 3 150 1 1 2 25 6 62 1 3 1 64 2 260 2 286 1 38 1 155 1 312 4 288 1 32 1 73 1 211 2 10 1 160 1 95 1 268 1 114 2 215 2 134 2 13 1 78 1 47 2 14 1 138 1 81 1 48 1 15 1 248 1 139 2 352 1 194 1 218 2 196 1 101 1 34 1 377 1 354 3 198 1 299 1 144 2 378 1 171 1 56 1 
174 1 282 3 225 1 259 3 90 2 233 1 108 1 155 1 126 1 313 1 180 1 316 1 346 1 8 1 187 2 212 1 214 2 294 2 14 2 326 2 269 1 196 1 376 1 278 1 355 1 356 1 254 1 56 1 
307 1 150 1 225 1 136 1 14 2 296 1 62 2 196 2 38 1 155 2 377 1 198 1 56 2 
0 1 227 1 14 1 62 1 196 4 38 1 155 4 377 1 198 1 53 1 334 1 8 1 56 4 
349 1 42 1 150 1 293 1 14 1 2 1 62 2 196 2 38 1 155 2 198 1 314 1 54 1 56 2 
68 1 198 1 97 1 284 1 62 1 8 1 152 1 196 1 155 1 56 1 
84 1 198 1 298 1 322 1 14 1 62 1 38 1 196 2 155 2 56 2 377 1 
349 1 0 1 227 1 14 3 80 1 62 2 196 5 38 2 155 4 4 1 377 1 84 1 198 2 334 1 8 1 56 5 
349 1 0 1 227 1 14 3 327 1 62 2 196 5 38 2 155 4 4 1 377 1 84 1 198 2 334 1 8 1 56 5 
150 1 215 2 47 1 14 1 62 1 309 1 15 1 352 1 139 2 286 1 38 1 196 1 155 1 198 1 8 1 32 1 10 1 56 1 
349 1 150 1 14 1 340 1 296 1 62 2 196 1 38 1 155 1 198 1 314 1 54 1 56 1 
258 1 300 1 47 1 61 1 360 1 
174 1 258 2 43 1 12 1 282 2 358 1 47 1 79 1 259 2 61 2 272 1 360 2 108 1 329 1 300 1 239 1 346 1 355 1 41 1 
258 1 215 1 61 1 139 1 274 1 82 1 286 1 264 1 300 1 
300 1 272 1 329 1 
40 1 353 1 141 1 92 1 
40 1 265 1 291 1 353 1 145 1 18 1 92 1 
6 1 18 1 102 1 
11 1 116 1 98 1 353 1 18 3 92 1 40 1 265 1 291 3 183 1 145 1 172 2 
40 1 199 1 265 1 291 2 266 1 353 1 145 1 18 2 92 1 
68 1 265 1 245 1 291 1 206 1 98 1 152 1 353 1 145 1 76 1 18 1 
40 1 265 1 291 1 98 1 353 1 145 1 18 1 
40 2 265 1 291 1 98 1 145 1 18 1 92 1 
308 1 98 1 353 1 153 1 18 2 40 1 345 1 265 2 291 2 145 2 
40 1 223 1 265 1 245 1 291 3 112 1 98 1 266 2 353 2 125 1 145 1 18 3 92 1 
98 1 246 1 284 1 152 2 353 1 66 1 18 2 92 1 68 1 40 1 265 1 291 2 266 1 145 1 76 1 
245 1 98 1 353 2 18 4 92 1 40 1 199 1 265 2 291 4 70 1 112 1 266 2 145 2 
40 1 265 1 291 1 98 1 353 1 145 1 18 1 92 1 
116 1 245 1 353 3 375 1 18 4 92 2 40 2 265 1 291 4 112 1 266 2 183 1 145 1 172 1 
98 1 353 1 18 2 92 1 127 1 40 1 265 1 291 2 266 1 94 1 145 1 222 1 
147 1 116 2 98 1 353 1 18 3 92 1 40 1 265 1 291 3 183 1 145 1 172 2 
158 1 283 1 353 1 
265 1 291 1 98 1 145 1 18 1 321 1 
40 1 223 1 265 1 291 2 98 1 266 1 353 1 145 1 18 2 92 1 
236 1 
40 1 265 1 291 1 98 1 353 1 145 1 18 1 92 1 
40 1 223 1 265 1 291 3 98 1 266 1 353 1 145 1 172 1 18 3 92 1 
245 1 112 1 353 1 375 1 
40 1 353 1 

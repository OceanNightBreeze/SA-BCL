#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 241 347 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 241 347 172 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 344 2 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 241 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 241 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 241 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 241 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 241 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 241 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 241 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 2 271 1 53 2 301 1 133 2 7 9 137 4 30 1 216 1 115 5 33 3 217 1 309 2 118 6 65 1 281 1 182 1 331 1 311 1 120 1 312 1 99 2 286 9 47 1 225 2 168 1 49 1 20 2 
211 2 271 1 53 2 301 1 133 2 7 9 137 4 30 1 216 1 115 5 33 3 217 1 309 2 118 6 65 1 281 1 182 1 331 1 311 1 120 1 312 1 99 2 286 9 47 1 225 2 168 1 49 1 20 2 
211 2 271 1 53 2 301 1 133 2 7 10 137 5 30 1 216 1 115 6 33 4 217 1 309 2 118 7 65 1 281 1 182 1 331 1 311 1 120 1 312 1 99 2 286 10 47 1 225 2 168 1 49 1 20 2 
211 2 271 1 53 2 301 1 133 2 7 7 137 3 30 1 216 1 115 4 33 2 309 2 118 4 65 1 281 1 182 1 331 1 311 1 120 1 312 1 99 2 286 7 47 1 225 2 168 1 49 1 20 1 
118 3 281 1 211 1 271 1 53 1 133 1 311 1 312 1 99 1 286 4 7 4 137 2 216 1 115 3 33 1 217 1 309 1 20 2 
281 1 211 1 65 1 271 1 40 1 53 1 133 1 70 1 286 2 83 1 7 2 168 1 225 1 216 1 115 1 309 1 
118 1 281 1 211 2 271 1 120 1 286 3 7 3 225 1 137 1 216 1 115 2 33 1 309 2 
118 7 281 1 211 2 271 1 282 1 331 1 53 1 133 1 311 1 120 1 312 1 164 1 99 1 286 9 7 9 225 1 137 4 30 1 216 1 115 5 33 3 217 1 309 2 20 2 
118 7 281 1 211 2 271 1 282 1 331 1 53 1 133 1 311 1 120 1 312 1 164 1 99 1 286 9 7 9 225 1 137 4 30 1 216 1 115 5 33 3 217 1 309 2 20 2 
254 1 247 1 87 1 
284 1 254 1 198 2 
98 2 285 2 253 2 205 1 249 1 4 2 355 2 102 2 
212 1 52 1 320 2 249 1 4 2 298 2 56 1 151 1 251 1 110 1 252 2 253 2 345 1 196 1 237 2 10 1 138 1 36 1 38 2 11 1 332 1 142 1 333 1 15 1 44 1 98 3 204 1 285 2 205 1 46 1 208 1 355 2 102 3 317 1 318 1 17 1 106 1 
98 1 285 1 253 1 205 1 112 1 4 1 355 1 102 1 302 1 73 1 
89 1 350 1 98 1 254 1 112 1 355 1 63 1 62 1 126 1 102 1 8 1 308 1 247 1 288 1 
89 1 350 1 4 1 98 1 285 1 253 1 254 1 112 1 62 2 355 1 63 2 126 1 102 1 308 1 247 1 
248 1 202 1 296 1 62 1 63 1 
39 1 254 1 202 1 296 1 77 1 62 2 63 2 247 1 
296 1 62 1 63 1 
202 1 4 1 302 1 98 1 285 1 205 1 253 1 112 1 63 1 62 1 355 1 102 1 73 1 50 1 
254 1 
88 1 39 1 254 1 202 1 296 1 62 2 63 2 247 1 
107 2 39 1 159 1 202 2 3 1 93 1 296 2 221 2 122 1 123 1 254 1 84 1 16 1 63 5 62 5 336 2 158 1 247 1 210 1 
249 1 87 1 
4 1 249 2 98 2 285 1 253 1 355 2 235 1 102 2 74 1 
100 1 32 1 80 1 
109 1 38 1 212 1 249 1 332 1 252 1 110 1 15 1 98 1 204 1 102 1 317 1 17 1 237 1 106 1 10 1 
212 1 38 1 4 1 332 1 110 1 252 1 80 1 15 1 98 2 204 1 285 1 206 1 355 1 305 1 102 2 317 1 17 1 237 1 106 1 10 1 
98 3 285 3 253 1 249 1 4 3 355 3 305 1 102 3 
98 1 285 1 112 1 4 1 355 1 102 1 73 1 
98 1 285 1 253 1 112 1 4 1 355 1 235 1 102 1 74 1 
212 1 52 1 320 1 249 1 4 3 298 2 151 1 251 1 110 1 252 1 253 2 112 1 63 1 62 1 305 1 196 1 308 1 237 1 10 1 89 1 36 1 37 1 350 1 38 1 332 1 261 1 142 1 333 1 15 1 44 1 98 4 204 1 285 3 206 1 205 1 46 1 208 1 355 3 126 1 102 4 317 1 17 1 106 1 74 1 
98 2 285 1 249 1 4 1 355 2 305 1 102 2 8 1 339 1 
89 1 350 1 4 3 261 1 98 3 285 3 253 1 206 1 254 1 112 1 62 1 63 1 355 3 305 2 126 1 102 3 308 1 86 1 74 1 
4 2 80 1 98 2 285 2 100 1 253 1 355 2 305 1 102 2 74 1 
38 1 212 1 249 1 332 1 252 1 110 1 15 1 98 1 204 1 102 1 317 1 237 1 106 1 17 1 10 1 
38 1 212 1 249 1 332 1 252 1 110 1 98 1 204 1 97 1 148 1 102 1 317 1 237 1 17 1 10 1 
23 1 131 1 320 4 298 2 251 1 80 2 82 1 233 1 325 1 345 2 196 1 32 2 327 1 348 1 90 1 36 2 239 1 142 1 310 1 333 1 266 1 44 1 100 2 46 1 
98 1 285 1 112 1 4 1 186 1 355 1 102 1 308 1 
4 4 249 1 98 5 285 4 253 1 206 1 355 5 305 2 102 5 103 1 8 1 338 1 339 1 74 1 
98 2 285 2 112 1 186 1 4 2 355 2 102 2 73 1 
295 1 353 1 
295 1 353 1 
236 1 104 1 
236 1 104 1 
236 1 104 1 
295 1 183 1 353 1 
295 1 183 1 353 1 
144 1 295 1 353 1 
242 1 295 2 236 1 104 1 353 2 152 1 
295 1 183 1 353 1 
319 1 295 1 353 1 
319 1 295 1 353 1 
319 1 295 1 353 1 
295 1 127 1 241 1 347 1 199 1 353 1 
295 1 62 1 63 1 127 1 241 1 347 1 172 1 199 1 353 1 
99 1 53 1 133 1 
70 1 53 1 133 1 
70 1 99 2 75 1 41 1 119 1 133 3 
70 1 99 1 45 1 75 1 41 1 133 2 
70 1 99 1 75 2 41 1 133 2 
227 1 131 1 107 1 296 1 78 2 193 1 155 1 254 2 61 1 233 1 62 5 63 5 31 1 198 3 348 1 35 1 39 1 159 2 202 4 181 2 259 1 221 1 352 2 310 1 265 1 284 1 123 3 315 1 16 1 356 1 336 1 247 1 
227 1 131 3 107 2 248 5 343 1 3 1 296 6 193 4 254 5 61 2 233 3 62 9 63 9 198 9 348 3 35 3 39 1 159 6 202 7 181 6 221 2 352 6 264 1 263 1 310 3 284 3 123 8 146 5 101 1 16 1 356 2 336 2 105 1 247 1 129 1 
131 1 107 1 3 1 78 1 193 1 254 3 61 1 233 1 62 3 63 3 198 4 348 1 35 1 159 2 202 2 181 2 259 1 221 1 352 2 310 1 265 1 284 2 123 3 356 1 336 1 247 1 
131 2 107 1 3 1 78 2 193 2 254 4 61 1 233 2 62 4 63 4 198 7 348 2 35 2 159 4 202 3 181 4 259 1 221 1 352 4 264 1 263 1 310 2 265 1 284 3 123 5 356 1 336 1 247 1 129 1 
147 1 17 1 87 1 
344 1 17 1 
14 1 
17 1 110 1 
226 1 268 1 147 2 17 3 110 1 10 1 
17 1 110 1 10 1 
91 1 17 1 
36 3 131 1 320 7 67 1 239 2 262 1 229 1 167 1 233 1 245 1 214 1 64 1 345 4 327 3 19 2 218 1 51 1 
36 3 131 1 320 7 67 1 239 2 262 1 229 1 167 1 233 1 245 1 214 1 64 1 345 4 327 3 19 2 218 1 51 1 
36 3 131 1 320 7 67 1 239 2 262 1 229 1 167 1 233 1 245 1 214 1 113 1 64 1 345 4 327 3 19 2 218 1 51 1 
292 1 131 4 320 31 132 1 272 1 298 2 321 1 251 1 229 1 233 4 214 1 64 2 196 1 345 16 306 1 327 10 348 3 218 5 35 3 36 15 67 1 239 5 262 2 310 3 267 1 44 1 167 1 46 1 245 2 188 3 169 1 149 4 19 3 51 2 
292 1 131 1 320 9 297 1 298 4 251 2 229 1 233 1 214 1 64 1 196 2 345 5 327 4 218 1 36 4 67 1 239 3 262 1 44 2 46 2 71 1 245 1 19 2 51 1 
211 1 271 1 274 1 53 1 252 1 133 2 213 1 153 1 135 1 7 2 216 1 178 1 115 1 237 1 309 1 200 1 34 1 118 1 281 1 179 1 38 1 332 1 119 1 223 1 70 1 99 1 286 2 225 1 189 1 317 1 
211 1 271 1 274 1 53 1 79 1 252 1 133 2 213 1 135 1 7 3 216 1 178 1 115 1 237 1 309 1 200 1 34 1 118 2 179 1 38 1 160 1 332 1 119 1 43 1 70 1 99 1 286 3 225 1 189 1 317 1 
271 1 274 1 53 1 79 1 252 1 133 2 7 2 216 1 178 1 115 1 237 1 200 1 34 1 118 2 179 1 38 1 332 1 119 1 43 1 70 1 99 1 286 2 225 1 189 1 317 1 
290 1 211 1 38 1 160 1 273 1 274 2 150 1 332 1 110 1 252 1 231 1 204 1 286 1 7 1 304 1 225 2 190 1 317 1 17 1 237 1 309 1 200 2 34 2 
179 1 281 1 211 1 38 1 274 1 53 1 332 1 119 1 43 1 133 2 252 1 213 1 70 1 153 1 99 1 286 1 135 1 7 1 189 1 225 1 317 1 178 1 237 1 309 1 200 1 34 1 
238 1 
107 1 273 1 110 1 6 1 112 1 276 1 63 5 62 5 8 1 237 2 198 2 159 2 66 1 68 2 332 1 13 1 203 2 284 2 123 2 204 2 16 1 209 1 126 1 72 2 335 1 336 1 17 1 247 1 288 1 293 2 296 6 252 2 175 1 254 2 308 1 255 1 256 1 89 1 139 2 39 3 38 2 350 1 141 1 221 1 95 1 222 4 224 1 98 1 185 2 269 2 355 1 190 1 356 1 102 1 317 1 
296 2 6 1 175 1 112 1 276 1 62 3 63 3 8 1 308 1 89 1 88 1 139 1 350 1 39 1 95 1 222 2 224 1 98 1 355 1 126 1 102 1 288 1 
293 1 296 1 6 1 175 1 254 1 112 1 276 1 62 3 63 3 8 1 308 1 89 1 88 1 350 1 39 1 95 1 222 3 224 1 98 1 355 1 126 1 102 1 288 1 247 1 
293 1 296 2 6 1 175 1 254 1 112 1 276 1 62 3 63 3 8 1 308 1 88 1 89 1 139 1 39 1 350 1 95 1 222 3 224 1 98 1 203 1 355 1 126 1 102 1 288 1 247 1 
107 1 6 1 112 1 232 1 276 1 157 1 63 5 62 5 8 1 159 1 68 2 203 4 123 1 284 2 166 1 16 1 126 1 72 2 246 1 336 1 288 1 247 5 293 4 296 7 175 1 254 5 308 1 256 1 89 1 88 1 139 4 92 1 350 1 39 3 141 1 221 1 95 1 222 6 224 1 98 1 185 2 269 2 355 1 102 1 
107 1 6 1 112 1 276 1 63 4 62 4 8 1 198 2 159 1 68 2 123 1 284 2 203 2 16 1 209 1 126 1 72 2 336 1 288 1 247 1 293 2 296 4 175 1 254 2 308 1 256 1 89 1 139 2 350 1 39 2 141 1 221 1 95 1 222 4 224 1 98 1 185 2 269 2 355 1 102 1 
293 2 107 1 296 4 6 1 175 1 254 1 232 1 112 1 276 1 62 4 63 4 8 1 308 1 256 1 89 1 139 2 92 1 39 2 350 1 159 1 141 1 68 2 221 1 95 1 222 4 224 1 203 2 284 2 123 1 98 1 185 2 269 2 166 1 16 1 355 1 126 1 72 2 102 1 336 1 247 1 288 1 
293 2 107 1 296 4 6 1 175 1 254 1 232 1 112 1 276 1 62 4 63 4 8 1 308 1 256 1 89 1 139 2 92 1 39 2 350 1 159 1 141 1 68 2 221 1 95 1 222 4 224 1 203 2 284 2 123 1 98 1 185 2 269 2 166 1 16 1 355 1 126 1 72 2 102 1 336 1 247 1 288 1 
293 2 107 1 296 4 54 2 25 1 6 1 175 1 254 1 232 1 112 1 276 1 62 4 63 4 8 1 308 1 198 2 89 1 139 2 180 1 39 2 350 1 159 1 141 1 68 2 221 1 95 1 222 4 224 1 203 2 123 1 98 1 334 1 243 2 16 1 355 1 126 1 72 2 102 1 336 1 247 1 288 1 
107 1 293 3 296 5 6 1 175 1 254 1 232 1 112 1 276 1 62 4 63 4 8 1 308 1 256 1 89 1 139 3 92 1 39 2 350 1 159 1 141 1 68 2 221 1 95 1 222 5 224 1 284 2 123 1 98 1 203 3 185 2 269 2 166 1 16 1 355 1 126 1 72 2 102 1 246 1 336 1 247 1 288 1 
107 1 293 3 296 5 6 1 175 1 254 1 232 1 112 1 276 1 62 4 63 4 8 1 308 1 256 1 89 1 139 3 92 1 39 2 350 1 159 1 141 1 68 2 221 1 95 1 222 5 224 1 284 2 123 1 98 1 203 3 185 2 269 2 166 1 16 1 355 1 126 1 72 2 102 1 246 1 336 1 247 1 288 1 
107 1 54 2 6 1 112 1 276 1 63 4 62 4 8 1 198 2 159 1 68 2 123 1 203 2 243 2 16 1 209 1 126 1 72 2 336 1 288 1 247 1 293 2 296 4 175 1 254 1 308 1 89 1 139 2 180 1 350 1 39 2 141 1 221 1 95 1 222 4 224 1 98 1 355 1 102 1 
131 1 320 6 249 2 298 2 251 1 229 1 80 1 233 1 214 1 196 1 345 3 32 1 327 2 87 1 90 1 36 3 67 1 239 2 262 1 142 1 333 1 44 1 100 1 46 1 245 1 19 1 
131 1 294 1 320 14 249 1 272 1 298 4 251 2 80 11 59 1 233 2 196 2 32 11 345 8 306 1 327 2 348 2 218 1 279 1 35 2 36 6 239 1 142 2 310 1 333 1 44 2 100 4 46 2 208 1 188 3 357 1 318 1 149 3 21 1 
212 1 109 1 320 2 249 1 4 1 298 2 251 1 110 1 252 1 59 1 305 1 196 1 345 1 237 1 278 1 10 1 36 1 38 1 332 1 142 1 161 1 333 1 15 1 204 1 44 1 98 2 285 1 100 1 206 1 46 1 208 1 355 1 102 2 317 1 17 1 106 1 337 1 318 1 
1 2 52 2 320 20 4 1 229 1 110 2 59 1 233 3 196 3 326 1 327 8 237 3 10 2 201 2 330 2 67 1 239 4 332 2 12 2 333 3 15 2 204 1 285 1 206 1 245 1 208 1 17 2 19 1 131 3 212 2 76 1 249 2 298 6 251 3 252 3 80 7 214 1 305 1 32 7 345 10 348 2 218 4 35 2 36 10 38 3 262 1 43 1 142 3 310 2 98 3 44 3 314 1 100 7 46 3 355 1 102 3 317 2 318 1 106 2 
320 2 171 1 4 1 273 1 26 1 298 4 251 2 252 8 110 2 81 1 60 1 305 1 196 2 345 1 328 1 237 7 90 1 36 1 38 8 351 1 11 2 332 2 43 1 142 2 223 1 333 2 98 1 204 2 44 2 285 1 46 2 208 1 355 1 102 1 190 1 317 2 17 3 318 1 191 1 
108 1 131 1 320 3 4 1 298 2 251 1 80 1 59 1 253 1 233 1 32 1 196 1 345 1 327 1 348 1 35 1 36 2 239 1 142 1 310 1 333 1 44 1 98 1 285 1 100 1 46 1 355 1 102 1 74 1 
90 1 320 2 298 2 142 1 251 1 80 1 333 1 266 1 44 1 100 1 46 1 233 1 32 1 196 1 345 2 327 1 348 1 218 1 
90 1 23 1 36 2 131 1 320 2 239 1 298 2 142 1 251 1 310 1 80 1 333 1 44 1 100 1 46 1 32 1 196 1 327 1 
35 1 36 2 90 1 131 1 320 4 239 1 298 2 142 1 251 1 310 1 80 2 333 1 44 1 100 2 46 1 233 1 32 2 196 1 345 2 327 2 348 1 218 1 
320 2 298 2 142 1 251 1 80 1 333 1 266 1 44 1 100 1 46 1 233 1 32 1 196 1 345 2 327 1 348 1 218 1 191 1 
23 1 36 2 131 1 320 2 239 1 298 2 142 1 251 1 310 1 80 1 333 1 44 1 100 1 46 1 32 1 196 1 327 1 191 1 
35 1 36 2 131 1 320 4 239 1 298 2 142 1 251 1 310 1 80 2 333 1 44 1 100 2 46 1 233 1 32 2 196 1 345 2 327 2 348 1 218 1 191 1 
35 1 36 2 131 1 320 4 239 1 298 2 142 1 251 1 310 1 80 2 333 1 44 1 100 2 46 1 233 1 32 2 196 1 345 2 327 2 348 1 218 1 
212 1 52 1 320 2 249 1 298 2 251 1 110 1 252 1 345 1 196 1 237 1 10 1 36 1 38 1 332 1 142 1 333 1 15 1 204 1 98 1 44 1 46 1 208 1 102 1 317 1 318 1 106 1 17 1 
212 1 320 2 249 1 298 2 251 1 110 1 252 1 345 1 196 1 9 1 237 1 10 1 36 1 38 1 332 1 142 1 333 1 97 1 204 1 98 1 44 1 46 1 208 1 148 1 102 1 317 1 318 1 17 1 
35 1 36 2 131 1 320 4 239 1 298 2 142 1 251 1 310 1 80 2 333 1 59 1 44 1 100 2 46 1 233 1 32 2 196 1 345 2 327 2 348 1 218 1 
131 1 212 1 52 1 320 4 298 2 251 1 252 1 110 1 80 2 233 1 32 2 345 2 196 1 327 2 237 1 348 1 218 1 10 1 35 1 36 2 330 1 38 1 239 1 332 1 142 1 310 1 223 1 333 1 15 1 98 1 44 1 100 2 46 1 102 1 317 1 106 1 17 1 
131 1 130 1 320 3 4 1 298 2 251 1 80 1 59 1 253 1 233 1 196 1 345 2 32 1 327 1 348 1 218 1 35 1 36 1 142 1 310 1 333 1 44 1 98 1 285 1 100 1 46 1 355 1 102 1 74 1 
291 1 192 1 131 3 320 19 272 1 297 1 298 4 251 2 233 3 195 2 196 2 277 1 345 9 306 1 327 6 348 3 218 3 35 3 36 10 283 1 239 3 143 1 162 1 310 3 44 2 244 1 46 2 187 2 188 1 149 2 
291 1 292 2 192 1 0 1 131 2 320 26 297 1 298 6 57 1 251 3 111 1 233 3 195 1 196 3 277 1 345 14 327 4 306 2 197 1 348 3 218 2 35 3 36 12 283 2 239 2 260 1 310 2 44 3 244 2 46 3 187 4 188 2 289 1 149 2 
291 1 292 1 192 1 0 1 131 5 320 41 272 1 297 1 298 6 57 1 251 3 229 1 111 1 233 5 214 1 195 1 196 3 277 1 345 20 306 3 327 8 197 1 348 4 218 4 35 4 36 21 67 1 283 2 239 4 260 1 262 1 162 1 310 4 44 3 244 1 46 3 245 1 187 4 188 3 18 1 289 1 19 1 149 4 
291 1 292 2 192 1 0 1 131 4 320 38 272 1 297 1 298 8 57 1 251 4 229 1 111 1 233 5 214 1 195 1 196 4 277 1 345 20 306 3 327 7 197 1 348 4 218 3 35 4 36 18 67 1 283 2 239 4 260 1 262 1 162 1 310 3 44 4 244 1 46 4 245 1 187 4 188 3 18 1 289 1 19 1 149 4 
291 1 292 1 192 1 0 1 131 8 320 52 272 2 297 1 298 4 57 1 251 2 229 1 111 1 233 8 214 1 195 1 196 2 277 1 345 27 306 2 327 14 197 1 348 7 218 7 35 7 36 25 67 1 283 1 239 7 260 1 262 1 310 7 44 2 244 1 46 2 245 1 187 4 188 4 289 1 19 1 149 4 21 2 
170 1 320 2 26 1 298 2 251 1 110 1 252 2 59 1 29 1 114 1 196 1 345 1 328 1 237 2 219 1 36 1 38 2 11 2 240 1 332 1 142 1 333 1 44 1 98 2 46 1 208 1 355 2 102 2 317 1 17 1 318 1 
38 2 53 1 332 1 300 1 119 1 43 1 133 2 252 2 163 1 213 1 223 1 70 1 99 1 189 1 317 1 346 1 178 1 237 2 34 1 
38 1 53 1 332 1 119 1 43 1 133 2 252 1 213 1 70 1 99 1 189 1 215 1 346 1 178 1 317 1 237 1 34 1 
290 1 38 1 273 1 332 1 110 1 252 1 163 1 204 1 85 1 190 1 317 1 17 1 237 1 34 1 
38 1 53 1 332 1 300 1 119 1 43 1 133 2 252 1 163 1 213 1 70 1 99 1 189 1 346 1 178 1 317 1 237 1 34 1 
28 1 
123 1 254 1 159 1 84 1 158 1 247 1 87 1 
107 1 296 1 254 2 63 1 62 1 198 1 256 1 39 1 159 1 221 1 284 1 123 1 185 1 269 1 16 1 336 1 247 1 
107 1 2 1 38 1 332 1 221 1 110 1 252 1 204 1 268 1 16 1 194 1 344 1 317 1 336 1 17 1 237 1 10 1 
0 1 107 2 131 2 296 1 57 1 323 1 111 1 254 5 177 1 233 2 62 1 63 1 306 1 255 1 198 6 348 2 35 2 39 1 329 2 159 5 181 5 260 1 221 2 352 5 310 2 123 8 284 3 16 2 188 1 356 1 48 1 336 2 289 1 247 2 149 1 
107 1 131 1 4 1 302 1 229 1 253 1 112 1 324 1 233 2 62 1 63 1 329 2 159 2 262 1 221 1 98 1 123 2 285 1 205 1 166 1 245 1 16 1 355 1 102 1 48 1 336 1 73 1 50 1 
107 1 159 1 221 1 123 1 254 1 84 1 16 1 336 1 158 1 247 1 
35 2 131 2 329 2 159 5 181 5 12 1 352 5 310 2 284 5 123 5 254 5 233 2 48 1 198 10 348 2 
39 1 254 1 62 1 63 1 296 1 247 1 
107 2 341 1 3 1 273 1 296 4 228 1 110 1 252 4 63 3 62 3 237 4 255 2 38 4 39 2 159 2 66 1 332 1 221 2 13 1 313 1 204 2 123 2 354 2 16 1 356 2 190 1 317 1 336 2 17 1 
212 1 52 1 320 1 249 1 4 2 298 2 151 1 251 1 252 1 110 1 253 2 196 1 237 1 10 1 36 1 38 1 332 1 142 1 333 1 15 1 204 1 98 3 44 1 285 2 205 1 46 1 208 1 355 2 102 3 317 1 106 1 17 1 
107 1 159 2 181 2 221 1 352 2 284 2 123 1 254 4 16 1 356 1 336 1 198 4 247 2 255 1 19 1 
241 1 199 1 
241 1 199 1 
241 1 199 1 
241 1 199 1 
241 1 199 1 
241 1 199 1 
241 1 199 1 
241 1 199 1 
295 1 353 1 
292 1 36 4 131 1 320 8 67 1 239 2 298 4 262 1 251 2 229 1 44 2 46 2 233 1 245 1 214 1 345 4 196 2 327 3 19 1 218 1 
36 3 131 1 320 6 67 1 239 2 262 1 229 1 245 1 233 1 214 1 345 3 327 2 19 1 87 1 
35 1 36 2 131 1 320 4 239 1 298 2 251 1 310 1 44 1 46 1 233 1 303 1 196 1 345 2 327 2 348 1 218 1 
35 1 36 4 131 1 320 7 272 1 239 1 310 1 233 1 188 1 345 3 306 1 327 2 149 2 348 1 218 1 
292 2 131 3 320 23 272 1 298 4 251 2 229 1 173 1 233 3 214 1 345 11 196 2 327 9 348 2 218 4 35 2 36 12 67 1 239 5 262 2 310 2 44 2 46 2 245 2 188 2 357 1 19 1 149 2 21 1 
36 1 320 1 149 1 
320 1 188 1 345 1 
35 1 36 3 131 1 320 6 298 2 239 2 12 1 251 1 310 1 44 1 46 1 233 1 303 1 196 1 345 3 327 3 348 1 218 1 
0 1 131 2 320 12 297 1 298 2 57 1 251 1 111 1 233 2 196 1 345 6 306 1 327 2 348 2 218 1 35 2 36 6 239 1 260 1 310 2 44 1 46 1 188 1 289 1 149 1 
36 3 131 1 320 6 239 1 262 1 229 1 233 1 245 1 345 3 327 2 218 1 
292 1 36 2 320 3 67 1 239 1 298 2 262 1 251 1 173 1 44 1 46 1 245 1 214 1 345 1 196 1 327 2 218 1 
36 5 131 2 320 10 297 1 298 2 239 3 262 2 251 1 229 1 44 1 46 1 324 1 245 2 233 2 196 1 345 5 327 5 218 2 
320 2 297 1 298 2 251 1 44 1 46 1 233 1 196 1 345 2 327 1 348 1 218 1 
35 1 36 2 131 1 320 4 297 1 239 1 298 2 251 1 310 1 44 1 46 1 233 1 196 1 345 2 327 2 348 1 218 1 
292 1 36 2 320 3 297 1 298 6 239 1 262 1 251 3 173 1 162 1 44 3 46 3 245 1 196 3 345 1 327 2 218 1 
292 2 131 5 132 1 320 34 272 1 297 1 298 10 321 1 251 5 229 2 173 1 233 5 214 1 303 1 196 5 345 16 306 1 327 12 348 3 218 5 35 3 36 18 67 1 239 7 262 3 162 1 310 3 267 1 44 5 46 5 245 3 188 3 19 1 149 4 
0 1 131 1 320 8 297 1 298 2 251 1 229 1 233 1 214 1 196 1 345 4 306 1 327 2 36 4 67 1 239 2 262 1 44 1 46 1 245 1 188 1 19 1 149 1 
0 1 131 1 320 11 272 1 297 1 298 4 251 2 229 1 233 2 214 1 303 1 196 2 345 6 306 1 327 3 348 1 218 1 35 1 36 5 67 1 239 2 262 1 44 2 46 2 245 1 188 1 19 1 149 2 
292 1 0 1 131 3 320 19 297 1 298 6 57 1 251 3 229 1 111 1 233 3 214 1 303 1 196 3 345 9 306 1 327 4 348 2 218 1 35 2 36 10 67 1 239 3 260 1 262 1 310 2 44 3 46 3 245 1 188 1 289 1 19 1 149 1 
292 1 0 1 131 2 320 17 297 1 298 6 57 1 251 3 229 1 111 1 233 3 214 1 303 1 196 3 345 10 306 1 327 5 348 2 218 2 35 2 36 7 67 1 239 3 260 1 262 1 310 1 44 3 46 3 245 1 188 1 289 1 19 1 149 1 
0 1 131 1 320 8 297 1 298 2 251 1 229 1 233 1 214 1 196 1 345 4 306 1 327 2 36 4 67 1 239 2 262 1 44 1 46 1 245 1 188 1 19 1 149 1 
0 1 131 2 320 12 297 1 298 2 57 1 251 1 111 1 233 2 196 1 345 6 306 1 327 2 348 2 218 1 35 2 36 6 239 1 260 1 310 2 44 1 46 1 188 1 289 1 149 1 
292 2 0 1 131 2 320 18 297 1 298 8 57 1 251 4 229 1 111 1 233 3 214 1 303 1 196 4 345 10 306 1 327 5 348 2 218 2 35 2 36 8 67 1 239 3 260 1 262 1 310 1 44 4 46 4 245 1 188 1 289 1 19 1 149 1 
292 2 0 1 131 2 320 16 297 1 298 8 57 1 251 4 111 1 233 3 196 4 345 9 306 1 327 6 348 3 218 3 35 3 36 7 239 3 260 1 162 1 310 2 44 4 46 4 188 1 289 1 149 1 
36 4 131 1 320 7 67 1 239 3 262 3 229 1 245 3 233 1 214 2 345 3 327 6 218 3 
292 2 0 1 131 2 320 18 297 1 298 8 57 1 251 4 229 1 111 1 233 3 214 1 196 4 345 10 306 1 327 4 348 2 218 1 35 2 36 8 67 1 239 3 260 1 262 1 162 1 310 1 44 4 46 4 245 1 188 1 289 1 19 1 149 1 
98 1 342 1 249 1 355 1 102 1 8 1 339 1 
280 1 220 1 342 1 249 1 230 1 98 1 355 1 316 1 102 1 8 1 116 1 339 1 
204 1 38 1 273 1 332 1 190 1 317 1 17 1 237 1 110 1 252 1 87 1 
212 1 38 1 249 1 4 1 332 1 110 1 252 1 15 1 98 2 204 1 285 1 355 1 305 1 102 2 317 1 17 1 237 1 10 1 
22 1 212 1 249 1 4 2 252 1 110 2 112 1 305 1 237 1 308 1 10 2 89 1 91 1 38 1 332 1 15 1 98 2 285 1 354 1 355 2 102 2 317 1 17 3 
22 1 212 1 249 1 4 2 252 2 110 2 176 1 112 1 305 1 237 2 308 1 10 2 89 1 91 1 38 2 332 1 97 1 98 2 285 1 354 1 355 2 102 2 317 1 17 3 
22 1 24 1 296 1 5 1 252 3 110 1 176 1 254 1 62 2 63 2 344 1 237 3 10 1 91 1 38 3 350 1 332 1 204 1 354 1 147 1 317 1 17 4 247 1 
22 1 91 1 350 1 38 3 296 1 332 1 110 1 252 3 204 1 176 1 254 1 354 1 63 2 62 2 147 1 344 1 317 1 307 1 237 3 17 4 247 1 10 1 
38 1 332 1 317 1 237 1 252 1 81 1 
38 7 171 1 351 1 11 1 55 1 26 1 332 3 43 1 252 7 110 2 81 1 223 1 204 2 275 1 60 1 268 1 287 1 317 2 237 6 17 3 10 1 
131 1 212 1 52 1 320 6 249 2 4 1 298 4 251 2 229 1 110 1 252 1 80 1 59 1 233 1 214 1 114 1 305 1 32 1 345 3 196 2 327 2 237 1 10 1 36 3 201 1 38 1 330 1 67 1 239 2 332 1 262 1 142 2 333 2 223 1 15 1 44 2 98 2 285 1 100 1 46 2 245 1 355 1 102 2 317 1 17 1 106 1 19 1 
107 2 296 2 252 1 254 1 136 1 84 1 62 3 63 3 344 1 307 1 158 1 237 1 38 1 349 1 350 1 39 1 159 1 202 1 221 2 121 1 123 1 204 1 313 1 16 2 147 1 336 2 17 2 247 1 
38 1 332 1 252 1 110 1 14 1 81 1 268 1 194 1 147 1 317 1 237 1 17 1 10 1 
38 4 273 1 332 1 252 4 110 1 223 1 204 1 176 1 190 1 317 1 237 4 17 1 117 1 
258 1 38 2 76 1 55 1 332 2 252 2 110 1 275 1 354 1 124 1 317 1 237 2 17 1 10 1 
70 1 204 1 38 1 53 1 332 1 317 1 178 1 237 1 133 1 252 1 
170 1 38 2 26 1 332 1 43 1 252 2 110 1 223 1 317 1 237 2 17 1 
38 5 273 1 171 1 26 1 332 2 252 5 110 2 223 1 204 1 60 1 354 1 190 1 317 2 237 4 17 3 117 1 
38 5 273 1 171 1 94 1 26 1 332 2 252 5 110 2 223 1 204 1 354 1 190 1 317 2 237 4 17 3 117 1 
212 1 38 1 249 1 4 1 332 1 110 1 252 1 98 2 204 1 97 1 285 1 355 1 305 1 102 2 317 1 17 1 237 1 10 1 
38 1 55 1 332 2 252 1 110 1 275 1 268 1 354 1 287 1 317 1 237 1 17 1 10 1 
98 1 219 1 165 1 29 1 355 1 240 1 102 1 42 1 96 1 
165 1 156 1 270 1 
145 1 165 1 249 1 42 1 96 1 
89 1 350 1 202 1 249 1 299 1 261 1 42 2 96 2 165 1 145 2 254 1 156 1 112 1 63 2 62 2 126 1 308 1 247 1 270 1 
271 1 216 1 115 1 87 1 
211 1 271 1 286 1 7 1 216 1 115 1 309 1 
7 1 225 1 200 1 
211 1 281 1 271 1 286 3 7 3 140 1 168 2 27 1 216 1 115 1 69 1 309 1 
118 1 211 1 271 1 286 2 7 2 216 1 115 1 309 1 20 1 
99 1 211 1 281 1 286 1 7 1 53 1 137 1 115 1 133 1 309 1 311 1 
211 1 281 1 271 1 286 1 7 1 115 1 309 1 
211 1 281 1 271 2 286 1 7 1 216 1 309 1 
257 1 340 1 281 1 211 2 271 1 286 2 207 1 7 2 115 1 309 2 
118 2 281 1 211 1 271 1 331 1 286 3 7 3 137 1 30 1 216 1 115 2 33 1 309 1 
118 1 281 1 211 1 271 1 250 1 53 1 119 1 133 2 70 1 99 1 286 2 7 2 216 1 115 1 309 1 
118 2 281 1 211 2 271 1 286 4 7 4 137 1 216 1 115 2 33 1 309 2 217 1 20 1 
211 1 281 1 271 1 286 1 7 1 216 1 115 1 309 1 
118 2 211 1 271 2 27 1 69 1 322 1 286 4 7 4 168 1 137 1 216 2 115 3 33 1 309 1 
118 1 281 1 211 1 271 1 282 1 286 2 154 1 7 2 216 1 115 1 309 1 128 1 
211 1 281 1 271 1 286 3 7 3 125 1 168 2 27 1 216 1 115 1 69 2 309 1 
184 1 134 1 115 2 174 2 
211 1 281 1 286 1 234 1 7 1 309 1 
118 1 211 1 281 1 271 1 286 2 331 1 7 2 216 1 115 1 309 1 
58 1 
211 1 281 1 271 1 286 1 7 1 216 1 115 1 309 1 
118 1 211 1 281 1 271 1 286 3 331 1 7 3 168 1 216 1 115 1 309 1 
137 1 115 1 33 1 322 1 
271 1 115 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 379 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
320 2 147 1 48 3 291 2 151 3 202 1 63 1 154 1 211 1 132 2 123 1 380 1 178 1 
285 1 106 1 57 1 147 1 334 1 197 1 291 2 151 9 202 6 63 1 154 1 368 1 132 5 178 1 96 1 320 2 346 1 183 1 373 1 48 9 210 1 102 2 167 2 377 2 211 3 123 4 264 2 380 2 
285 1 106 1 57 1 147 1 334 1 197 1 291 2 151 9 202 6 63 1 154 1 368 1 132 5 178 1 96 1 320 2 346 1 183 1 373 1 48 9 210 1 102 2 167 2 377 2 211 3 123 4 264 2 380 2 
285 1 106 1 57 1 147 1 334 1 197 1 291 2 151 10 202 7 63 1 154 1 368 1 132 6 178 1 96 1 320 2 346 1 183 1 373 1 48 10 210 1 102 2 167 2 377 2 211 4 123 5 264 2 380 2 
285 1 106 1 57 1 147 1 334 1 197 1 291 2 151 7 202 4 63 1 154 1 132 4 178 1 96 1 320 2 346 1 183 1 373 1 48 7 210 1 102 2 167 2 377 1 211 2 123 3 264 2 380 2 
106 1 320 1 373 1 48 4 291 1 102 1 151 4 202 3 167 1 63 1 154 1 377 2 211 1 368 1 132 3 123 2 264 1 178 1 
320 1 57 1 13 1 183 1 372 1 231 1 48 2 291 1 102 1 151 2 63 1 154 1 132 1 264 1 380 1 178 1 
106 1 332 1 147 1 197 1 291 2 202 7 151 9 63 1 154 1 132 5 368 1 178 1 320 2 346 1 373 1 48 9 165 1 102 1 167 1 377 2 211 3 123 4 264 1 380 1 
106 1 332 1 147 1 197 1 291 2 202 7 151 9 63 1 154 1 132 5 368 1 178 1 320 2 346 1 373 1 48 9 165 1 102 1 167 1 377 2 211 3 123 4 264 1 380 1 
35 1 17 1 323 1 118 1 200 1 138 1 81 1 24 1 121 1 262 1 378 1 54 1 158 1 142 1 
325 1 
138 1 325 1 24 2 181 1 313 1 323 2 305 1 199 1 
144 1 159 1 344 1 358 1 181 2 88 1 313 1 303 1 61 2 323 5 305 1 186 2 138 2 325 1 247 1 4 1 24 5 156 1 330 2 
379 1 
325 1 274 1 361 2 
81 1 91 1 121 2 35 2 262 2 378 2 17 2 142 2 
241 2 170 1 34 1 35 3 268 1 360 1 36 1 91 1 340 2 131 1 366 1 109 1 133 1 136 1 228 1 343 2 112 1 97 1 301 1 17 2 277 1 163 2 256 1 77 1 185 1 348 1 80 1 281 2 139 1 81 1 121 2 188 1 262 3 378 2 309 1 103 1 142 2 
81 1 121 1 35 1 262 1 378 1 17 1 54 1 142 1 118 1 200 1 
12 1 35 1 314 1 62 1 323 1 305 1 209 1 200 1 325 1 3 1 24 1 262 1 226 1 142 1 
12 1 35 1 17 1 323 2 62 1 305 1 209 1 200 1 325 1 3 1 121 1 24 2 262 1 378 1 142 1 
138 1 24 1 181 1 279 1 323 1 
138 1 325 1 22 1 24 2 181 1 313 1 323 2 305 1 
24 1 181 1 323 1 
111 1 35 2 17 1 116 1 91 2 121 1 262 2 378 1 142 2 
297 1 51 1 234 1 
228 1 343 1 34 1 35 1 277 1 19 1 163 1 36 1 77 1 348 1 281 1 91 1 262 1 366 1 309 1 133 1 
379 1 
35 5 17 4 314 1 116 1 278 1 164 1 374 1 91 1 121 1 262 5 378 4 157 2 142 5 310 1 
376 1 35 2 262 2 378 2 17 2 142 2 118 1 200 1 
297 1 228 1 343 1 34 1 35 2 17 1 277 1 163 1 77 1 36 1 348 1 281 1 366 1 262 2 378 1 309 1 133 1 157 1 142 1 310 1 
91 1 121 1 35 3 262 3 378 3 17 3 157 1 142 3 
35 1 262 1 378 1 17 1 142 1 118 1 200 1 
111 1 121 1 35 1 262 1 378 1 17 1 116 1 142 1 200 1 
241 1 170 1 34 1 35 4 62 1 36 1 200 1 91 1 340 2 3 1 131 1 366 1 133 1 157 1 228 1 343 1 97 1 12 1 301 1 17 3 277 1 116 1 323 1 163 1 256 1 77 1 209 1 185 1 348 1 80 1 281 1 139 1 81 1 121 2 24 1 188 1 327 1 262 4 52 1 378 3 309 1 103 1 142 3 310 1 
91 1 35 2 262 2 378 1 17 1 314 1 157 1 164 1 142 2 
12 1 35 3 17 3 116 1 323 1 62 1 209 1 200 1 325 1 3 1 121 1 24 1 262 3 378 3 153 1 52 1 157 2 142 3 310 1 
297 1 35 2 17 2 116 1 121 1 262 2 378 2 234 1 157 1 142 2 
228 1 343 1 34 1 35 1 277 1 163 1 36 1 77 1 348 1 281 1 91 1 262 1 366 1 309 1 133 1 
228 1 343 1 34 1 35 1 163 1 36 1 77 1 281 1 362 1 91 1 262 1 366 1 309 1 27 1 133 1 
240 1 241 4 242 1 130 1 248 1 340 2 131 1 225 1 7 1 109 2 227 1 297 2 97 1 301 2 78 1 185 1 324 1 80 1 139 1 120 1 353 1 51 2 234 2 103 1 
12 1 376 1 35 1 262 1 378 1 17 1 142 1 200 1 
371 1 244 1 235 1 
172 1 141 1 169 1 75 1 371 2 235 2 
371 1 235 1 
371 1 235 1 
141 1 75 1 
141 1 75 1 
141 1 75 1 
292 1 371 1 235 1 
292 1 371 1 235 1 
292 1 371 1 235 1 
371 1 235 1 192 1 
371 1 235 1 192 1 
371 1 235 1 192 1 
0 1 35 2 244 1 198 1 220 1 201 1 91 1 224 1 318 1 9 1 229 1 17 2 371 1 323 1 187 1 23 1 24 1 308 1 262 2 378 2 53 1 235 1 142 2 105 1 
0 2 113 1 95 2 44 1 371 2 323 2 198 2 375 1 172 1 325 1 23 2 24 2 308 2 318 1 354 1 273 1 235 2 105 3 213 1 
306 2 167 1 264 2 191 1 231 1 
102 1 167 1 264 1 
102 1 264 1 231 1 
306 1 167 2 41 1 264 3 191 1 231 1 
306 1 167 1 264 2 191 1 47 1 231 1 
240 1 58 1 88 1 313 1 61 1 361 3 338 1 339 1 247 2 248 1 367 2 155 2 225 1 9 1 227 1 274 1 204 1 344 3 229 1 250 1 181 1 321 2 323 5 305 1 186 1 138 4 325 2 352 1 187 1 24 5 31 1 330 1 
240 3 355 1 58 3 313 1 88 1 61 2 361 9 247 6 248 3 317 1 155 6 156 1 225 3 227 3 274 3 204 2 69 1 344 8 229 4 250 1 181 6 182 1 46 1 321 6 279 5 323 9 305 1 186 2 138 7 325 5 352 2 24 9 328 1 124 5 330 2 
240 1 58 1 61 1 361 4 339 1 248 1 247 2 367 1 155 2 156 1 225 1 227 1 274 2 204 1 344 3 229 1 321 2 323 3 305 1 186 1 138 2 325 3 352 1 24 3 31 1 330 1 
240 2 355 1 58 2 61 1 361 7 339 1 248 2 247 4 367 2 155 4 156 1 225 2 227 2 274 3 204 1 69 1 344 5 229 2 321 4 323 4 305 1 186 1 138 3 325 4 352 1 24 4 328 1 31 1 330 1 
283 1 
379 1 
270 1 133 1 
228 1 133 1 77 1 
133 1 255 1 
133 1 77 1 
228 1 50 1 162 1 82 2 133 3 77 1 
240 1 239 1 342 1 160 1 84 1 241 7 301 3 300 1 217 1 322 1 257 1 324 2 353 3 225 1 212 1 109 4 134 1 319 2 
239 2 240 4 84 1 241 31 58 3 312 1 217 1 129 1 173 1 2 1 248 3 340 2 131 1 364 1 225 4 109 16 134 1 227 3 319 3 296 4 160 1 97 1 301 15 300 2 71 1 322 5 257 2 324 5 80 1 139 1 353 10 326 3 212 2 311 1 
240 1 239 1 241 9 216 1 171 1 217 1 129 1 340 4 131 2 225 1 109 5 134 1 319 2 160 1 97 2 300 1 301 4 322 1 257 1 324 3 80 2 139 2 353 4 212 1 
240 1 239 1 160 1 84 1 241 7 301 3 300 1 217 1 322 1 257 1 324 2 353 3 225 1 212 1 109 4 134 1 319 2 
240 1 239 1 160 1 84 1 241 7 301 3 300 1 217 1 322 1 257 1 324 2 353 3 225 1 212 1 109 4 134 1 319 2 
127 1 34 1 36 1 291 1 37 1 221 1 151 1 366 1 133 1 343 1 42 1 114 2 320 1 184 1 254 1 163 1 77 1 48 1 281 1 261 2 263 1 190 2 380 2 
34 1 267 1 291 1 89 1 40 1 151 1 366 1 341 1 41 1 178 1 343 1 114 1 320 1 163 1 231 1 48 1 281 1 261 1 102 1 166 1 167 1 26 1 190 1 264 2 380 1 143 1 
34 1 267 1 291 1 89 1 40 1 202 1 151 2 365 1 366 1 63 1 154 1 341 1 132 1 41 1 178 1 343 1 114 1 320 1 163 1 231 1 48 2 281 1 261 1 102 1 167 1 26 1 190 1 264 2 380 1 143 1 
34 1 267 1 287 1 291 1 37 1 89 1 40 1 151 3 202 2 366 1 63 1 154 1 341 1 132 1 41 1 343 1 114 1 320 1 163 1 231 1 48 3 281 1 261 1 102 1 166 1 167 1 190 1 264 2 380 1 143 1 
34 1 267 1 287 1 89 1 151 2 202 2 366 1 63 1 154 1 341 1 132 1 41 1 343 1 114 1 163 1 231 1 48 2 281 1 261 1 166 1 102 1 167 1 190 1 264 2 380 1 
175 1 
193 1 243 1 59 2 336 2 61 1 289 1 290 1 247 2 294 1 6 2 203 1 65 2 343 2 68 2 344 2 73 1 117 1 163 2 77 1 79 1 352 1 24 4 263 1 265 1 87 2 34 1 313 3 88 1 36 2 219 2 361 2 221 1 366 1 133 1 274 2 176 2 181 6 45 1 323 4 186 1 281 2 325 1 284 1 330 1 
193 1 87 1 24 2 181 2 243 1 313 1 45 1 203 1 284 1 323 2 199 1 
193 1 24 1 243 1 45 1 336 1 203 1 284 1 323 1 176 1 
193 1 87 1 243 1 181 2 313 1 45 1 336 1 323 2 199 1 24 2 203 1 284 1 65 1 176 1 
193 1 243 1 59 2 61 1 336 3 289 1 200 1 199 1 290 1 247 1 6 2 203 1 65 4 158 1 68 2 344 1 207 1 302 1 17 1 208 1 305 2 118 1 81 1 24 4 121 1 262 1 87 4 35 1 88 1 313 3 219 2 274 2 176 3 181 7 99 1 45 1 323 4 186 1 325 2 378 1 54 1 284 1 142 1 330 1 56 1 
193 1 87 2 243 1 59 2 313 2 88 1 336 2 61 1 289 1 219 2 361 2 290 1 247 1 6 2 203 1 65 2 274 2 176 2 68 2 344 1 181 4 45 1 323 3 305 1 186 1 325 2 24 3 265 1 284 1 330 1 
193 1 87 2 243 1 59 2 313 2 88 1 336 2 61 1 289 1 219 2 290 1 247 1 6 2 203 1 65 2 274 2 176 2 68 2 344 1 181 4 207 1 99 1 302 1 45 1 323 3 305 1 186 1 325 1 24 3 284 1 330 1 
193 1 87 2 243 1 59 2 313 2 88 1 336 2 61 1 289 1 219 2 290 1 247 1 6 2 203 1 65 2 274 2 176 2 68 2 344 1 181 4 207 1 99 1 302 1 45 1 323 3 305 1 186 1 325 1 24 3 284 1 330 1 
193 1 87 2 243 1 59 2 313 2 88 1 336 2 61 1 315 2 361 2 219 2 290 1 247 1 295 1 203 1 65 2 92 1 176 2 94 2 179 1 344 1 181 4 302 1 45 1 323 3 305 1 186 1 325 1 24 3 284 1 330 1 
193 1 87 3 59 2 243 1 313 2 88 1 336 3 61 1 219 2 289 1 290 1 247 1 6 2 203 1 274 2 65 3 176 3 68 2 344 1 181 5 207 1 99 1 302 1 45 1 323 3 305 1 186 1 325 1 24 3 284 1 330 1 56 1 
193 1 87 3 59 2 243 1 313 2 88 1 336 3 61 1 219 2 289 1 290 1 247 1 6 2 203 1 274 2 65 3 176 3 68 2 344 1 181 5 207 1 99 1 302 1 45 1 323 3 305 1 186 1 325 1 24 3 284 1 330 1 56 1 
193 1 87 2 243 1 59 2 313 2 88 1 336 2 61 1 315 2 219 2 361 2 290 1 247 1 203 1 65 2 176 2 179 1 344 1 94 2 181 4 45 1 323 3 305 1 186 1 325 1 24 3 265 1 284 1 330 1 
215 1 241 2 34 2 331 1 35 1 36 2 221 1 90 1 340 4 131 2 249 1 365 1 366 2 7 1 133 3 109 1 157 1 136 1 343 8 112 2 97 2 301 1 17 1 163 8 280 1 256 1 77 2 185 2 80 2 281 7 139 2 166 1 122 1 262 1 263 1 378 1 103 2 125 1 142 1 
240 1 241 3 58 1 35 1 333 1 248 1 340 2 131 1 225 1 109 1 227 1 110 1 297 1 97 1 301 2 17 1 116 1 324 1 185 1 80 1 139 1 353 1 121 1 262 1 51 1 378 1 234 1 103 1 142 1 
139 1 340 2 131 1 97 1 7 1 103 1 379 1 185 1 80 1 
240 1 241 14 58 2 2 1 173 1 248 2 91 1 340 4 131 2 8 1 225 2 109 8 227 1 66 1 136 1 296 3 110 1 297 11 97 2 70 1 301 6 322 1 256 1 324 1 185 2 80 2 139 2 353 2 326 3 51 11 234 4 103 1 381 1 
241 2 34 1 35 2 36 1 39 1 91 1 340 2 131 1 366 1 133 1 109 1 157 1 136 1 110 1 228 1 343 1 97 1 301 1 17 1 277 1 19 1 163 1 77 1 256 1 348 1 185 1 349 1 80 1 281 1 307 1 139 1 262 2 378 1 309 1 234 1 103 1 142 1 310 1 
239 1 240 3 241 20 58 2 108 2 248 2 340 6 109 10 157 1 110 1 297 7 343 3 160 1 345 1 251 2 15 2 301 10 17 1 163 3 257 1 256 1 77 2 348 2 80 3 258 1 166 1 353 8 262 3 309 2 310 1 170 2 34 2 35 3 217 1 36 1 269 2 91 2 131 3 366 2 225 3 133 2 134 1 227 2 319 1 136 1 137 1 228 2 97 3 277 2 322 4 324 4 185 3 281 3 139 3 378 1 51 7 234 7 103 3 142 1 
297 1 241 2 97 1 322 1 185 1 80 1 139 1 120 1 248 1 340 2 353 1 131 1 51 1 7 1 225 1 234 1 109 2 103 1 
297 1 240 1 241 2 97 1 301 2 324 1 185 1 78 1 80 1 139 1 340 2 353 1 131 1 51 1 7 1 234 1 103 1 227 1 
240 1 241 4 58 1 248 1 340 2 131 1 225 1 7 1 109 2 227 1 297 2 97 1 301 2 322 1 185 1 324 1 80 1 139 1 353 2 51 2 234 2 103 1 
297 1 241 2 97 1 322 1 185 1 80 1 139 1 120 1 248 1 340 2 353 1 131 1 51 1 225 1 234 1 109 2 103 1 125 1 
297 1 240 1 241 2 97 1 301 2 324 1 185 1 78 1 80 1 139 1 340 2 353 1 131 1 51 1 234 1 103 1 227 1 125 1 
240 1 241 4 58 1 248 1 340 2 131 1 225 1 109 2 227 1 297 2 97 1 301 2 322 1 185 1 324 1 80 1 139 1 353 2 51 2 234 2 103 1 125 1 
240 1 297 2 241 4 97 1 58 1 301 2 322 1 324 1 185 1 80 1 139 1 248 1 340 2 353 2 131 1 51 2 225 1 234 2 109 2 227 1 103 1 
241 2 170 1 34 1 35 1 36 1 91 1 340 2 131 1 366 1 109 1 133 1 136 1 228 1 343 1 97 1 301 1 277 1 163 1 77 1 256 1 348 1 185 1 80 1 281 1 139 1 262 1 309 1 103 1 
214 1 241 2 34 1 35 1 36 1 362 1 91 1 340 2 131 1 366 1 109 1 133 1 136 1 228 1 343 1 97 1 301 1 163 1 77 1 256 1 185 1 80 1 281 1 139 1 262 1 309 1 27 1 103 1 
240 1 241 4 58 1 248 1 340 2 131 1 225 1 109 2 227 1 110 1 297 2 97 1 301 2 322 1 185 1 324 1 80 1 139 1 353 2 51 2 234 2 103 1 
240 1 241 4 170 1 34 1 58 1 35 1 269 1 248 1 340 2 131 1 366 1 365 1 225 1 109 2 133 1 227 1 297 2 228 1 343 1 97 1 301 2 277 1 322 1 163 1 77 1 324 1 348 1 185 1 80 1 281 1 139 1 353 2 262 1 51 2 309 1 234 2 103 1 
240 1 241 3 58 1 35 1 248 1 340 2 131 1 225 1 272 1 109 2 227 1 110 1 297 1 97 1 301 1 17 1 116 1 322 1 185 1 80 1 139 1 353 1 121 1 262 1 378 1 51 1 234 1 103 1 142 1 
240 3 145 1 85 1 241 19 216 1 58 3 245 1 2 1 173 1 248 3 340 4 131 2 225 3 109 9 227 3 296 2 97 2 301 10 347 1 322 3 20 1 324 3 80 2 21 1 101 2 139 2 259 1 353 6 326 1 28 2 
240 2 266 1 145 1 85 2 241 26 216 1 58 3 245 1 196 1 129 2 316 1 2 2 248 3 340 6 131 3 225 3 109 14 64 1 227 2 296 2 43 1 97 3 301 12 322 2 20 1 324 2 80 3 101 4 350 1 139 3 259 2 353 4 326 2 28 1 
240 5 239 1 145 1 241 41 58 4 245 1 196 1 248 4 2 3 340 6 109 20 64 1 296 4 160 1 301 21 20 1 257 1 80 3 350 1 21 1 259 1 353 8 28 1 266 1 85 2 216 1 217 1 129 1 316 1 173 1 363 1 131 3 225 5 227 4 134 1 319 1 43 1 97 3 322 4 324 4 101 4 139 3 326 3 
239 1 240 4 266 1 145 1 85 2 241 38 216 1 58 4 217 1 245 1 196 1 129 2 316 1 2 3 173 1 248 4 340 8 363 1 131 4 225 5 109 20 134 1 64 1 227 3 319 1 296 4 160 1 43 1 97 4 301 18 322 3 20 1 257 1 324 4 80 4 21 1 350 1 101 4 139 4 259 1 353 7 326 3 28 1 
239 1 240 8 266 1 145 1 85 1 241 52 216 1 58 7 217 1 245 1 196 1 129 1 316 1 2 2 173 2 248 7 340 4 131 2 8 2 225 8 109 27 134 1 64 1 227 7 319 1 296 4 160 1 43 1 97 2 301 25 322 7 20 1 257 1 324 7 80 2 350 1 101 4 139 2 259 1 353 14 326 4 28 1 
0 1 172 1 23 1 308 1 354 1 371 1 273 1 235 1 275 1 198 1 
224 1 244 1 
0 1 161 1 23 1 308 1 168 1 371 1 235 1 304 1 198 1 
292 1 1 1 
293 1 169 1 192 1 
0 1 113 1 95 1 371 1 323 1 198 1 375 1 172 1 325 1 23 1 24 1 308 1 318 1 354 1 273 1 235 1 105 2 213 1 
0 1 113 1 95 1 371 1 323 1 198 1 375 1 172 1 325 1 23 1 24 1 308 1 318 1 354 1 273 1 235 1 105 2 213 1 
0 1 113 1 95 1 371 1 323 1 198 1 375 1 172 1 325 1 23 1 24 1 308 1 318 1 354 1 273 1 235 1 105 2 213 1 
292 1 169 1 1 1 
292 1 169 1 1 1 
293 1 192 1 
293 1 169 1 192 1 
201 1 53 1 
0 1 35 2 244 1 198 1 220 1 201 1 91 1 224 1 9 1 95 1 229 1 206 1 17 2 371 1 323 1 375 1 138 1 187 1 23 1 24 1 262 2 308 1 378 2 53 1 235 1 142 2 105 1 
241 2 34 1 35 2 146 1 337 1 90 1 340 2 131 1 366 1 133 1 109 1 136 1 110 1 343 2 112 2 97 1 115 1 301 1 18 1 163 2 280 1 77 1 256 1 185 1 80 1 281 2 139 1 262 2 103 1 142 2 55 1 
343 1 34 1 254 1 107 1 163 1 77 1 36 1 281 1 282 1 221 1 366 1 263 1 133 1 190 1 
343 1 286 1 34 1 267 1 107 1 163 1 231 1 281 1 89 1 40 1 102 1 166 1 167 1 366 1 190 1 41 1 264 2 135 1 
343 2 34 1 286 1 267 1 107 1 163 2 231 1 281 2 89 1 40 1 102 1 166 1 167 1 366 1 365 1 190 1 41 1 264 2 135 1 
343 1 34 1 267 1 163 1 231 1 149 1 281 1 89 1 40 1 102 1 166 1 167 1 366 1 190 1 41 1 264 2 135 1 
174 1 
144 1 344 1 325 1 247 1 358 1 88 1 61 1 305 1 330 1 186 1 
240 2 344 5 356 1 251 1 298 2 58 2 321 5 361 10 248 2 247 5 325 5 155 5 225 2 227 2 274 5 
325 1 24 1 181 1 313 1 323 1 305 1 
83 2 34 1 88 1 313 2 218 1 61 2 36 2 247 2 221 1 366 1 294 1 156 1 133 1 10 1 343 4 344 2 181 4 73 2 117 1 163 4 323 3 77 1 186 2 281 4 352 2 24 3 263 1 329 1 330 2 
379 1 
88 1 313 1 61 1 289 1 361 1 247 1 6 1 274 1 68 1 344 1 181 1 323 1 305 1 186 1 325 2 24 1 330 1 
144 1 240 2 58 2 194 2 61 4 335 1 62 2 248 2 247 8 155 6 343 3 344 9 298 2 251 2 299 2 73 1 255 2 163 3 305 2 77 3 351 1 352 2 260 2 24 5 82 2 83 1 356 2 34 3 358 1 88 4 313 3 36 1 361 12 270 3 223 2 365 1 366 4 225 2 133 10 227 2 274 6 177 1 228 3 93 2 181 5 321 6 323 5 186 4 281 3 325 8 50 1 189 2 329 1 330 4 
240 2 266 1 356 1 58 2 313 1 88 2 61 2 361 6 316 1 2 1 247 5 248 2 155 5 225 2 64 1 227 2 274 3 296 1 344 8 43 1 298 2 181 1 73 1 321 5 323 1 305 2 186 2 350 1 352 1 325 5 24 1 326 1 30 1 32 1 330 2 
239 1 240 1 356 1 35 1 88 1 61 1 200 1 247 2 225 2 158 1 160 1 344 2 298 2 207 1 17 1 323 1 257 1 118 1 186 1 81 1 24 1 121 1 262 1 378 1 54 1 142 1 330 1 238 1 
241 1 170 1 34 1 35 3 36 1 91 1 340 2 131 1 366 1 133 1 228 1 343 1 97 1 301 1 17 2 277 1 163 1 256 1 77 1 348 1 185 1 80 1 281 1 81 1 139 1 121 2 188 1 262 3 378 2 309 1 103 1 142 2 
344 1 88 1 73 1 321 2 61 1 361 4 305 2 186 1 247 2 352 1 325 4 155 2 274 2 319 1 330 1 
119 1 0 1 201 1 23 1 273 1 
0 1 23 1 128 1 
0 1 23 1 128 1 
0 1 23 1 128 1 
0 1 23 1 14 1 
0 1 23 1 14 1 
0 1 23 1 14 1 
0 1 23 1 
371 1 235 1 
239 2 240 2 160 1 241 10 97 1 216 1 301 5 322 2 257 2 324 3 80 1 139 1 340 2 353 5 131 1 225 2 109 5 238 1 
241 2 216 1 97 1 322 1 80 1 139 1 248 1 340 2 353 1 131 1 225 1 109 2 
240 1 241 4 216 1 97 1 58 1 301 2 322 1 324 1 80 1 139 1 248 1 340 2 353 2 131 1 225 1 109 2 227 1 
239 1 241 3 216 1 97 3 301 2 322 1 129 1 257 1 324 1 80 3 21 1 139 3 340 6 353 2 131 3 109 1 237 1 
239 3 240 5 241 34 216 1 58 3 312 1 217 1 129 2 2 1 173 1 248 3 340 10 364 1 131 5 225 5 109 16 134 1 227 3 319 1 296 4 160 2 97 5 301 18 322 5 257 3 324 7 80 5 21 1 139 5 353 12 326 3 232 1 237 1 311 1 
240 1 239 1 266 1 241 8 216 1 217 1 2 1 340 2 131 1 225 1 109 4 134 1 319 1 296 1 160 1 97 1 301 4 257 1 324 2 80 1 139 1 353 2 326 1 
240 1 239 1 266 1 241 11 216 1 58 1 217 1 2 1 173 1 248 1 340 4 131 2 225 2 109 6 134 1 319 1 296 2 160 1 97 2 301 5 322 1 257 1 324 2 80 2 139 2 353 3 326 1 232 1 
239 1 240 3 266 1 241 19 216 1 58 2 217 1 129 1 316 1 2 1 248 2 340 6 131 3 225 3 109 9 134 1 227 2 64 1 319 1 296 1 160 1 43 1 97 3 301 10 322 1 257 1 324 3 80 3 350 1 139 3 353 4 326 1 232 1 
239 1 240 2 266 1 241 17 216 1 58 2 217 1 129 1 316 1 2 1 248 2 340 6 131 3 225 3 109 10 134 1 227 1 64 1 319 1 296 1 160 1 43 1 97 3 301 7 322 2 257 1 324 3 80 3 350 1 139 3 353 5 326 1 232 1 
240 1 239 1 266 1 241 8 216 1 217 1 2 1 340 2 131 1 225 1 109 4 134 1 319 1 296 1 160 1 97 1 301 4 257 1 324 2 80 1 139 1 353 2 326 1 
240 2 266 1 241 12 216 1 58 2 316 1 2 1 248 2 340 2 131 1 225 2 109 6 227 2 64 1 296 1 43 1 97 1 301 6 322 1 324 1 80 1 350 1 139 1 353 2 326 1 
239 1 240 2 266 1 241 18 216 1 58 2 217 1 129 2 316 1 2 1 248 2 340 8 131 4 225 3 109 10 134 1 64 1 227 1 319 1 296 1 160 1 43 1 97 4 301 8 322 2 257 1 324 3 80 4 350 1 139 4 353 5 326 1 232 1 
240 2 266 1 241 16 216 1 58 3 129 2 316 1 2 1 248 3 340 8 131 4 225 3 109 9 64 1 227 2 296 1 43 1 97 4 301 7 322 3 324 3 80 4 21 1 350 1 139 4 353 6 326 1 
240 1 239 3 160 1 241 7 301 4 217 1 322 3 257 3 324 3 353 6 225 1 109 3 134 2 
239 1 240 2 266 1 241 18 216 1 58 2 217 1 129 2 316 1 2 1 248 2 340 8 131 4 225 3 109 10 134 1 64 1 227 1 319 1 296 1 160 1 43 1 97 4 301 8 322 1 257 1 324 3 80 4 21 1 350 1 139 4 353 4 326 1 
240 1 239 1 160 1 241 8 97 2 301 4 217 1 322 1 129 1 257 1 324 2 80 2 139 2 340 4 353 3 131 2 225 1 109 4 134 1 319 1 
379 1 
240 1 241 4 97 1 58 1 301 2 322 1 324 1 80 1 139 1 248 1 340 2 353 2 131 1 232 1 225 1 109 2 227 1 
240 1 241 7 58 1 301 4 322 1 324 1 2 1 173 1 248 1 353 2 326 1 225 1 109 3 227 1 296 2 
239 2 240 3 241 23 58 2 217 1 129 2 248 2 173 1 340 4 131 2 225 3 8 1 109 11 134 1 227 2 66 1 319 1 296 2 160 1 97 2 301 12 322 4 257 2 324 5 80 2 139 2 353 9 326 2 237 1 
241 1 301 1 296 1 
241 1 326 1 109 1 
240 1 241 6 97 1 251 1 58 1 301 3 322 1 324 2 80 1 139 1 248 1 340 2 353 3 131 1 232 1 225 1 109 3 227 1 
240 2 266 1 241 12 216 1 58 2 316 1 2 1 248 2 340 2 131 1 225 2 109 6 227 2 64 1 296 1 43 1 97 1 301 6 322 1 324 1 80 1 350 1 139 1 353 2 326 1 
240 1 239 1 160 1 241 6 301 3 322 1 257 1 324 1 353 2 225 1 109 3 
239 1 241 3 97 1 301 2 217 1 322 1 257 1 129 1 324 1 80 1 139 1 340 2 353 2 131 1 109 1 134 1 237 1 
91 1 35 1 262 1 314 1 148 1 142 1 164 1 
126 1 91 1 222 1 35 1 262 1 357 1 98 1 314 1 148 1 288 1 142 1 164 1 
343 4 86 1 34 1 252 1 163 4 36 1 77 1 281 4 221 1 366 1 365 1 263 1 133 1 
83 1 228 1 343 2 345 1 34 1 16 1 60 1 253 1 163 2 77 1 100 1 281 2 366 2 133 1 
281 1 343 1 102 1 34 1 366 1 267 1 264 1 163 1 231 1 36 1 
281 2 343 2 90 1 166 1 34 1 366 1 365 1 115 1 133 1 163 2 77 1 
83 1 343 5 34 2 331 1 252 1 163 5 36 1 77 2 281 4 221 1 90 1 263 1 365 1 249 1 366 2 133 3 
83 1 343 5 34 2 331 1 252 1 230 1 163 5 36 1 77 2 281 4 221 1 90 1 263 1 365 1 366 2 133 3 
281 1 343 1 379 1 163 1 36 1 
228 1 343 1 34 1 35 2 17 1 277 1 163 1 77 1 36 1 281 1 91 1 366 1 262 2 378 1 309 1 133 1 157 1 142 1 
83 1 34 1 35 2 200 1 91 1 3 1 366 1 133 3 157 1 228 2 343 1 12 1 299 1 17 1 277 1 255 1 163 1 77 2 281 1 262 2 378 2 309 1 142 2 
83 1 86 1 34 1 35 2 200 1 91 1 3 1 366 1 133 3 157 1 228 2 343 2 12 1 299 1 17 1 255 1 163 2 77 2 281 2 262 2 378 2 309 1 27 1 142 2 
228 1 83 1 343 3 86 1 34 1 181 1 299 1 255 1 62 1 323 2 163 3 76 1 36 1 305 1 77 1 281 3 270 1 325 1 24 2 152 1 366 1 133 4 82 1 
228 1 83 1 343 3 86 1 34 1 194 1 181 1 299 1 255 1 62 1 323 2 163 3 36 1 305 1 77 1 281 3 270 1 325 1 24 2 366 1 133 4 82 1 
281 1 343 1 215 1 34 1 366 1 163 1 
228 1 343 7 112 1 215 1 34 2 331 1 60 1 163 7 36 2 77 2 100 1 281 6 90 1 166 1 271 1 50 1 249 1 365 1 122 1 366 3 133 3 
240 1 239 1 241 6 170 1 34 1 35 2 217 1 269 1 91 2 340 4 131 2 366 1 365 1 225 1 109 3 133 1 134 1 157 1 319 1 110 1 297 1 228 1 343 1 160 1 97 2 15 1 301 3 18 1 17 1 277 1 163 1 257 1 77 1 324 2 185 2 348 1 80 2 281 1 139 2 353 2 262 2 51 1 378 1 309 1 234 1 103 2 142 1 
144 1 358 1 194 1 88 2 313 1 61 2 62 1 36 1 270 1 247 1 223 1 133 2 343 1 344 1 181 2 323 3 163 1 305 1 186 2 281 1 138 1 325 1 260 1 24 3 189 1 82 1 329 1 330 2 
228 1 343 2 215 1 34 1 163 2 77 1 281 2 50 1 365 1 366 2 82 1 133 2 177 1 
228 1 343 1 34 1 35 2 17 1 163 1 77 1 36 1 281 1 91 1 366 1 262 2 378 1 309 1 133 1 27 1 157 1 142 1 
83 1 228 1 343 1 34 1 60 1 163 1 77 1 100 1 281 1 271 1 50 1 366 2 133 1 
276 1 67 1 91 1 180 1 104 1 
67 2 276 2 370 1 180 2 12 1 62 1 323 2 305 1 209 1 200 1 138 1 325 1 91 1 3 1 140 1 24 2 52 1 104 1 369 1 
276 1 67 1 35 1 262 1 146 1 104 1 142 1 55 1 337 1 
370 1 140 1 104 1 
291 1 320 1 151 1 63 1 154 1 132 1 48 1 178 1 
320 1 183 1 72 1 74 1 48 4 291 1 38 1 202 2 151 4 63 2 154 2 211 1 132 3 123 1 
11 1 320 1 332 1 48 2 291 1 151 2 202 1 63 1 154 1 132 1 233 1 178 1 
291 1 38 1 320 1 151 3 5 1 63 1 154 1 183 2 132 1 74 2 48 3 178 1 
33 1 132 2 359 1 246 2 
291 1 320 1 151 1 205 1 48 1 178 1 
291 1 320 1 202 1 151 2 63 1 154 1 132 1 197 1 48 2 178 1 
236 1 
291 1 320 1 151 1 63 1 154 1 132 1 48 1 178 1 
379 1 
291 1 320 1 151 1 63 1 154 1 132 1 48 1 
261 1 151 1 380 1 
320 1 183 2 74 1 48 3 291 1 38 1 25 1 151 3 154 1 63 1 132 1 178 1 
291 1 320 1 202 1 151 2 63 1 154 1 377 1 132 1 48 2 
106 1 320 1 48 1 291 1 102 1 151 1 167 1 132 1 123 1 264 1 178 1 
291 1 320 1 151 1 63 1 132 1 48 1 178 1 
291 1 320 1 151 1 63 2 154 1 48 1 178 1 
320 2 195 1 48 2 291 2 150 1 151 2 63 1 132 1 29 1 178 1 
320 1 346 1 197 1 48 3 291 1 151 3 202 2 63 1 154 1 211 1 132 2 123 1 178 1 
320 1 231 1 48 2 49 1 291 1 102 1 151 2 167 1 202 1 63 1 154 1 132 1 264 2 41 1 178 1 
320 2 48 4 291 2 151 4 202 2 63 1 154 1 377 1 368 1 211 1 132 2 123 1 178 1 
320 1 183 1 197 1 48 3 291 1 202 1 151 3 154 1 63 1 132 1 178 1 
72 1 132 1 211 1 123 1 
63 1 132 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 197 (288,356) (288,356) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 197 (288,356) (288,356) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 197 (288,356) (288,356) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 197 (288,356) (288,356) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 207 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
197 1 211 1 174 1 201 1 85 1 203 1 356 1 28 1 288 1 289 1 178 1 
197 1 211 1 174 1 201 1 85 1 203 1 356 1 28 1 288 1 289 1 178 1 
197 1 211 1 174 1 201 1 85 1 203 1 356 1 28 1 288 1 289 1 178 1 
197 1 211 1 174 1 201 1 85 1 203 1 356 1 28 1 288 1 289 1 178 1 
319 1 211 4 32 1 357 1 367 1 141 3 62 1 348 1 174 1 316 1 203 1 28 4 255 3 364 2 229 1 340 1 178 1 193 2 
211 2 32 1 50 1 357 1 298 1 324 1 174 1 201 1 203 1 255 1 256 1 28 2 229 1 289 1 340 1 178 1 
211 3 59 1 141 1 174 2 201 1 203 1 316 1 28 3 255 2 229 1 340 1 178 2 193 1 
211 9 41 1 357 1 59 1 62 1 314 1 316 3 28 9 364 2 340 1 193 4 319 1 268 1 32 1 367 1 141 7 348 1 174 2 201 1 203 1 255 5 375 1 229 1 178 2 
211 9 41 1 357 1 59 1 62 1 314 1 316 3 28 9 364 2 340 1 193 4 319 1 268 1 32 1 367 1 141 7 348 1 174 2 201 1 203 1 255 5 375 1 229 1 178 2 
117 1 345 1 46 1 
341 1 122 2 345 1 
217 1 102 2 3 2 227 2 88 2 52 1 60 2 370 2 
309 2 147 1 279 2 130 1 3 2 88 2 182 1 214 1 60 3 109 1 235 1 7 1 111 1 10 1 217 1 218 1 286 1 116 1 137 1 194 1 196 1 13 1 14 1 52 1 170 1 369 1 79 1 370 2 326 1 144 2 199 1 200 1 102 2 227 3 278 2 328 1 308 2 
102 1 3 1 227 1 88 1 115 1 52 1 60 1 295 1 234 1 370 1 
259 1 291 1 42 1 151 1 51 1 117 1 88 1 60 1 233 1 234 1 345 1 202 1 227 1 125 1 
259 2 291 1 151 2 51 1 117 1 3 1 88 1 60 1 234 1 370 1 345 1 202 1 102 1 227 1 125 1 
259 1 241 1 151 1 283 1 146 1 
259 2 241 1 151 2 117 1 269 1 104 1 345 1 146 1 
259 1 241 1 151 1 
259 1 151 1 3 1 88 1 249 1 52 1 295 1 60 1 234 1 370 1 102 1 227 1 115 1 146 1 
345 1 
259 2 241 1 151 2 117 1 104 1 120 1 345 1 146 1 
259 5 151 5 49 1 117 1 76 2 345 1 44 1 315 2 241 2 253 1 176 1 25 1 254 1 114 2 104 1 45 1 206 1 163 1 146 2 
217 1 46 1 
3 1 88 2 60 2 370 1 112 1 102 1 217 2 227 2 126 1 
239 1 317 1 220 1 
147 1 196 1 13 1 60 1 296 1 369 1 144 1 199 1 111 1 217 1 218 1 227 1 278 1 137 1 328 1 308 1 
147 1 196 1 13 1 343 1 3 1 88 1 60 2 369 1 144 1 199 1 111 1 317 1 218 1 102 1 227 2 278 1 257 1 137 1 328 1 308 1 
138 1 42 1 343 1 72 1 3 4 88 5 60 5 370 1 102 4 217 1 227 5 126 1 257 2 221 1 
102 2 3 2 82 1 227 2 88 2 115 1 60 2 234 1 
217 1 102 3 3 3 227 3 88 3 60 3 257 1 370 1 
102 1 3 1 227 1 88 1 115 1 60 1 234 1 
112 1 102 1 3 1 227 1 88 1 126 1 60 1 234 1 370 1 
309 1 147 1 279 2 130 1 259 1 151 1 3 3 88 3 182 1 214 1 60 4 234 1 111 1 217 1 218 1 286 1 159 1 116 1 137 1 164 1 194 1 196 1 291 1 13 1 14 1 343 1 51 1 52 1 369 1 79 1 370 2 326 1 144 1 199 1 200 1 202 1 102 3 227 4 125 1 126 1 278 1 257 1 328 1 308 1 
42 1 217 1 102 1 3 1 227 2 88 2 60 2 257 1 221 1 
259 1 291 1 151 1 343 1 51 1 3 3 88 3 60 3 234 1 370 1 345 1 23 1 202 1 102 3 227 3 126 1 125 1 159 1 257 2 
3 2 88 2 60 2 370 1 239 1 102 2 317 1 227 2 126 1 257 1 
147 1 196 1 13 1 60 1 369 1 144 1 199 1 111 1 217 1 218 1 227 1 278 1 137 1 328 1 308 1 
147 1 196 1 13 1 60 1 144 1 199 1 175 1 111 1 217 1 227 1 83 1 278 1 137 1 328 1 308 1 
310 1 309 4 180 1 279 2 130 1 182 1 5 1 214 1 153 1 239 2 10 2 317 2 286 1 116 2 220 2 69 1 166 1 247 1 14 1 225 1 77 1 79 1 373 1 84 1 
291 1 102 1 3 1 227 1 88 1 82 1 60 1 234 1 
198 1 128 1 
198 1 128 1 
64 1 209 1 
64 1 209 1 
64 1 209 1 
105 1 198 1 128 1 
105 1 198 1 128 1 
89 1 198 1 128 1 
64 1 66 1 61 1 209 1 198 2 128 2 
105 1 198 1 128 1 
337 1 198 1 128 1 
337 1 198 1 128 1 
337 1 198 1 128 1 
259 1 0 1 151 1 3 2 88 2 60 2 89 1 184 1 63 1 217 1 318 1 11 1 270 1 74 1 75 1 198 1 252 1 102 2 53 1 227 2 177 1 208 1 307 1 128 1 
259 2 150 1 151 2 132 1 74 2 75 3 198 2 345 1 226 1 63 2 66 1 123 1 243 1 318 1 352 2 135 1 177 2 208 2 128 2 
348 1 32 1 357 1 
32 1 50 1 357 1 
348 2 272 1 246 1 50 1 168 1 357 3 
348 1 149 1 246 1 50 1 168 1 357 2 
348 1 246 2 50 1 168 1 357 2 
310 1 259 5 151 5 87 1 152 1 5 1 336 1 238 1 315 1 241 1 9 1 114 1 163 1 11 1 341 1 247 1 49 3 117 1 271 1 225 1 76 1 172 1 345 2 36 2 349 2 122 3 53 1 39 2 104 1 206 2 307 1 146 4 
310 3 259 9 311 1 151 9 2 1 87 1 5 3 283 5 44 1 238 2 110 1 315 2 241 6 9 2 114 2 163 1 71 1 11 4 341 3 247 3 49 8 117 1 271 3 225 3 76 2 345 5 36 6 100 5 301 1 122 9 124 1 39 6 104 1 206 6 146 7 
310 1 259 3 151 3 5 1 336 1 44 1 238 1 315 1 9 1 114 1 11 1 341 2 247 1 49 3 117 1 271 1 225 1 76 1 172 1 345 3 36 2 349 1 122 4 39 2 206 2 146 2 
310 2 259 4 151 4 5 2 336 1 44 1 238 1 110 1 315 1 9 1 114 1 11 2 341 3 247 2 49 5 117 1 271 2 225 2 76 1 172 1 345 4 36 4 301 1 349 2 122 7 124 1 39 4 206 4 146 3 
262 1 328 1 46 1 
154 1 328 1 
210 1 
147 1 196 1 328 1 
43 1 328 1 
147 1 328 1 
147 1 196 1 81 1 262 2 30 1 328 3 
222 1 354 1 310 1 309 7 332 1 230 1 5 1 118 2 153 3 281 1 325 1 10 4 158 1 351 1 93 1 116 3 84 2 
222 1 354 1 310 1 309 7 332 1 230 1 5 1 118 2 153 3 281 1 325 1 10 4 158 1 351 1 93 1 116 3 84 2 
222 1 354 1 310 1 309 7 332 1 230 1 5 1 118 2 153 3 281 1 34 1 325 1 10 4 158 1 351 1 93 1 116 3 84 2 
354 1 309 31 310 4 279 2 332 1 230 2 182 1 58 1 5 4 214 1 153 10 281 5 240 1 10 16 158 2 93 1 286 1 189 1 116 15 244 4 222 2 14 1 224 1 247 3 118 3 271 3 225 3 325 1 250 1 351 2 277 1 376 3 56 1 84 5 
354 1 310 1 309 9 279 4 332 1 230 1 182 2 5 1 214 2 153 4 281 1 10 5 158 1 286 2 93 1 116 4 222 1 14 2 118 2 35 1 250 1 204 1 351 1 84 3 
211 2 330 1 331 1 57 1 334 1 357 2 282 1 27 1 28 2 340 1 32 1 342 1 13 1 322 1 50 1 97 1 294 1 141 1 144 1 348 1 272 1 174 1 199 1 201 1 203 1 255 1 278 1 229 1 308 1 178 1 
211 3 330 1 331 1 57 1 334 1 357 2 282 1 27 1 28 3 340 1 32 1 342 1 13 1 322 1 50 1 141 2 143 1 144 1 348 1 272 1 174 1 199 1 201 1 276 1 255 1 278 1 353 1 229 1 308 1 178 1 
211 2 330 1 331 1 57 1 334 1 357 2 27 1 28 2 340 1 13 1 32 1 322 1 50 1 141 2 143 1 144 1 272 1 348 1 199 1 201 1 276 1 255 1 278 1 229 1 308 1 
147 1 211 1 13 1 322 2 334 2 73 1 155 1 144 1 216 1 199 1 174 1 201 2 54 1 372 1 103 1 27 2 28 1 278 1 353 1 137 1 328 1 178 1 308 1 
211 1 330 1 331 1 57 1 334 1 357 2 282 1 27 1 28 1 32 1 342 1 13 1 322 1 50 1 294 1 143 1 144 1 348 1 272 1 174 1 199 1 201 1 203 1 278 1 308 1 178 1 
4 1 
42 1 88 1 231 2 233 1 234 1 241 6 9 1 94 1 137 2 191 1 339 1 341 2 291 1 13 1 248 1 49 2 51 1 98 1 297 1 345 2 346 4 144 2 350 2 199 1 202 1 304 1 104 3 206 2 308 2 147 1 259 5 151 5 358 2 312 1 60 1 313 2 155 1 362 1 216 1 315 1 264 2 65 1 67 1 114 1 163 1 321 2 117 1 76 1 122 2 371 1 227 1 125 1 278 2 228 2 328 1 
259 3 42 1 151 3 88 1 60 1 233 1 313 1 234 1 241 2 65 1 191 1 339 1 291 1 51 1 297 1 120 1 346 2 202 1 304 1 227 1 125 1 104 1 
259 3 42 1 151 3 88 1 60 1 233 1 234 1 241 1 65 1 191 1 339 1 291 1 321 1 51 1 117 1 297 1 120 1 346 3 345 1 202 1 304 1 227 1 125 1 104 1 
259 3 42 1 151 3 88 1 358 1 60 1 233 1 313 1 234 1 241 2 65 1 191 1 339 1 291 1 321 1 51 1 117 1 120 1 297 1 346 3 345 1 202 1 304 1 227 1 125 1 104 1 
42 1 88 1 231 2 233 1 234 1 241 7 284 1 191 1 339 1 291 1 341 2 51 1 49 1 297 1 346 6 345 5 350 2 101 1 202 1 304 1 18 1 104 3 206 1 259 5 151 5 358 4 60 1 312 1 313 4 315 1 264 2 65 1 114 1 160 1 163 1 167 1 321 4 117 5 120 1 76 1 371 1 227 1 125 1 228 2 
42 1 88 1 231 2 233 1 234 1 241 4 191 1 339 1 291 1 341 2 51 1 49 1 248 1 297 1 346 4 345 2 350 2 202 1 304 1 104 2 206 1 259 4 151 4 358 2 60 1 312 1 313 2 315 1 264 2 65 1 114 1 163 1 321 2 117 1 76 1 122 2 371 1 227 1 125 1 228 2 
259 4 42 1 151 4 358 2 88 1 231 2 312 1 60 1 313 2 233 1 234 1 315 1 264 2 241 4 284 1 65 1 114 1 160 1 191 1 163 1 339 1 341 2 291 1 321 2 49 1 51 1 117 1 297 1 76 1 345 1 346 4 350 2 202 1 371 1 304 1 18 1 227 1 125 1 104 2 228 2 206 1 
259 4 42 1 151 4 358 2 88 1 231 2 312 1 60 1 313 2 233 1 234 1 315 1 264 2 241 4 284 1 65 1 114 1 160 1 191 1 163 1 339 1 341 2 291 1 321 2 49 1 51 1 117 1 297 1 76 1 345 1 346 4 350 2 202 1 371 1 304 1 18 1 227 1 125 1 104 2 228 2 206 1 
129 2 259 4 42 1 151 4 358 2 88 1 312 1 60 1 313 2 233 1 234 1 315 1 264 2 241 4 65 1 114 1 160 1 29 1 191 1 163 1 339 1 291 1 321 2 49 1 51 1 117 1 297 1 76 1 345 1 346 4 122 2 202 1 304 1 227 1 125 1 104 2 374 1 55 2 127 1 228 2 206 1 
259 4 42 1 151 4 88 1 358 3 231 2 312 1 60 1 233 1 313 3 234 1 315 1 264 2 241 5 284 1 65 1 114 1 160 1 163 1 191 1 339 1 167 1 341 2 291 1 321 3 49 1 51 1 117 1 297 1 76 1 345 1 346 5 350 2 202 1 371 1 18 1 304 1 227 1 125 1 104 2 228 2 206 1 
259 4 42 1 151 4 88 1 358 3 231 2 312 1 60 1 233 1 313 3 234 1 315 1 264 2 241 5 284 1 65 1 114 1 160 1 163 1 191 1 339 1 167 1 341 2 291 1 321 3 49 1 51 1 117 1 297 1 76 1 345 1 346 5 350 2 202 1 371 1 18 1 304 1 227 1 125 1 104 2 228 2 206 1 
129 2 259 4 151 4 42 1 358 2 88 1 312 1 60 1 313 2 233 1 234 1 315 1 264 2 241 4 65 1 114 1 29 1 191 1 163 1 339 1 291 1 321 2 248 1 49 1 51 1 117 1 297 1 76 1 345 1 346 4 122 2 202 1 304 1 227 1 125 1 104 2 55 2 228 2 206 1 
354 1 309 6 310 1 279 2 130 1 332 1 182 1 214 1 5 1 153 2 239 1 317 1 10 3 217 2 158 1 286 1 93 1 116 3 220 1 46 1 222 1 14 1 118 1 79 1 373 1 84 2 
309 14 310 1 279 4 130 2 86 1 182 2 214 2 5 2 153 2 281 1 263 1 235 1 239 4 242 1 217 1 317 11 10 8 286 2 116 6 244 3 220 11 194 1 224 1 14 2 247 1 271 2 225 2 79 1 347 1 377 1 376 3 84 1 56 1 
147 1 309 2 130 1 279 2 3 1 88 1 182 1 280 1 214 1 60 2 133 1 235 1 239 1 111 1 217 1 218 1 10 1 286 1 116 1 137 1 194 1 196 1 12 1 13 1 343 1 14 1 296 1 369 1 79 1 144 1 347 1 199 1 102 1 227 2 278 1 257 1 328 1 308 1 
279 6 130 3 332 1 333 2 3 1 88 1 182 3 5 3 281 4 235 1 239 7 10 10 93 1 286 3 137 1 194 1 196 2 13 2 14 3 343 1 247 2 143 1 300 1 144 3 347 1 199 2 200 2 102 1 257 1 207 2 308 3 354 1 310 3 309 20 147 2 260 2 212 1 60 3 214 3 153 8 111 2 217 2 218 2 317 7 158 1 116 10 220 7 222 1 118 1 271 2 225 2 369 2 79 3 227 3 327 1 278 3 84 4 328 2 329 2 
309 2 147 2 279 4 130 2 3 1 88 1 182 2 213 1 60 1 214 2 235 1 155 1 7 2 216 1 10 1 113 1 286 2 190 1 116 1 137 2 96 1 194 1 13 2 15 1 14 2 33 1 97 1 143 1 79 2 144 8 199 2 102 1 227 1 373 1 278 8 19 1 257 1 328 3 308 7 
309 3 310 1 279 2 130 1 3 1 355 1 88 1 182 1 214 1 60 1 5 1 153 1 239 1 317 1 10 1 286 1 220 1 116 2 14 1 247 1 271 1 225 1 370 1 79 1 347 1 102 1 227 1 126 1 84 1 
166 1 309 2 130 1 279 2 14 1 182 1 214 1 5 1 153 1 281 1 225 1 79 1 239 1 317 1 10 2 373 1 286 1 220 1 
309 2 310 1 130 1 279 2 180 1 14 1 247 1 182 1 214 1 153 1 79 1 239 1 317 1 373 1 286 1 220 1 116 2 84 1 
309 4 310 1 279 2 130 1 182 1 5 1 214 1 153 2 281 1 239 2 10 2 317 2 286 1 220 2 116 2 14 1 247 1 271 1 225 1 79 1 373 1 84 1 
166 1 309 2 130 1 279 2 14 1 33 1 182 1 214 1 5 1 153 1 281 1 225 1 79 1 239 1 317 1 10 2 286 1 220 1 
309 2 310 1 130 1 279 2 180 1 14 1 247 1 33 1 182 1 214 1 153 1 79 1 239 1 317 1 286 1 220 1 116 2 84 1 
309 4 310 1 279 2 130 1 182 1 5 1 214 1 153 2 281 1 239 2 10 2 317 2 286 1 220 2 116 2 14 1 247 1 33 1 271 1 225 1 79 1 84 1 
309 4 310 1 279 2 130 1 182 1 5 1 214 1 153 2 281 1 239 2 10 2 317 2 286 1 220 2 116 2 14 1 247 1 271 1 225 1 79 1 84 1 
309 2 147 1 130 1 279 2 182 1 60 1 214 1 235 1 111 1 10 1 217 1 218 1 286 1 116 1 137 1 194 1 196 1 13 1 14 1 369 1 79 1 144 1 199 1 200 1 227 1 278 1 328 1 308 1 
309 2 147 1 130 1 279 2 182 1 60 1 214 1 235 1 111 1 10 1 217 1 286 1 116 1 137 1 194 1 196 1 13 1 14 1 79 1 144 1 199 1 175 1 38 1 227 1 83 1 278 1 328 1 308 1 
309 4 310 1 279 2 130 1 182 1 5 1 214 1 153 2 281 1 239 2 10 2 317 2 286 1 220 2 116 2 14 1 247 1 271 1 225 1 79 1 347 1 84 1 
310 1 309 4 147 1 130 1 279 2 333 1 182 1 5 1 60 1 214 1 153 2 281 1 239 2 111 1 317 2 10 2 218 1 286 1 116 2 220 2 196 1 13 1 247 1 14 1 97 1 271 1 225 1 369 1 79 1 144 1 199 1 200 1 227 1 278 1 84 1 328 1 308 1 
310 1 309 3 279 2 130 1 3 1 88 1 182 1 214 1 60 1 5 1 153 1 215 1 281 1 239 1 10 2 317 1 286 1 116 1 220 1 247 1 14 1 271 1 225 1 370 1 79 1 347 1 102 1 227 1 126 1 
309 19 310 3 148 1 279 4 182 2 214 2 5 3 6 2 153 6 281 3 361 1 10 9 188 1 286 2 266 1 244 2 116 10 47 1 139 1 224 1 14 2 247 3 271 3 225 3 275 1 204 1 205 2 376 1 84 3 56 1 
310 2 309 26 279 6 182 3 214 3 5 3 6 1 153 4 281 2 361 2 24 1 8 1 10 14 188 1 286 3 116 12 244 2 47 1 139 1 31 1 14 3 224 2 247 2 271 3 225 3 173 1 250 2 37 1 275 2 204 1 205 4 376 2 84 2 258 1 
279 6 332 1 182 3 5 5 6 1 281 4 8 1 10 20 188 1 286 3 93 1 244 4 47 1 139 1 247 4 14 3 250 1 204 1 205 4 56 1 258 1 354 1 310 5 309 41 214 3 153 8 361 2 24 1 158 1 266 1 116 21 222 1 31 1 224 3 118 1 271 4 225 4 173 1 37 1 275 1 376 3 378 1 84 4 
354 1 309 38 310 4 279 8 332 1 182 4 214 4 5 5 6 1 153 7 281 3 361 2 24 1 8 1 10 20 158 1 188 1 93 1 286 4 266 1 244 4 116 18 47 1 222 1 139 1 31 1 224 3 14 4 247 3 118 1 271 4 225 4 173 1 250 2 37 1 275 1 204 1 205 4 378 1 376 3 84 4 56 1 258 1 
354 1 309 52 310 8 279 4 332 1 182 2 214 2 5 8 6 1 153 14 281 7 361 1 24 1 8 1 10 27 158 1 188 1 93 1 286 2 244 4 116 25 47 1 222 1 139 1 31 1 224 2 14 2 247 7 118 1 271 7 225 7 173 1 250 1 37 1 275 1 204 1 205 4 377 2 376 4 84 7 56 2 258 1 
63 1 150 1 66 1 243 1 74 1 177 1 192 1 198 1 208 1 128 1 
0 1 89 1 
134 1 195 1 63 1 74 1 177 1 121 1 198 1 208 1 128 1 
105 1 92 1 
61 1 337 1 379 1 
259 1 150 1 151 1 132 1 74 1 75 2 198 1 345 1 226 1 63 1 66 1 123 1 243 1 318 1 352 1 177 1 208 1 128 1 
259 1 150 1 151 1 132 1 74 1 75 2 198 1 345 1 226 1 63 1 66 1 123 1 243 1 318 1 352 1 177 1 208 1 128 1 
259 1 150 1 151 1 132 1 74 1 75 2 198 1 345 1 226 1 63 1 66 1 123 1 243 1 318 1 352 1 177 1 208 1 128 1 
105 1 92 1 61 1 
105 1 92 1 61 1 
337 1 379 1 
61 1 337 1 379 1 
270 1 184 1 
259 1 0 1 151 1 3 2 88 2 132 1 60 2 89 1 184 1 63 1 217 1 11 1 320 1 270 1 74 1 75 1 198 1 252 1 53 1 102 2 227 2 352 1 177 1 208 1 307 1 146 1 128 1 
147 1 309 2 130 1 279 2 88 2 181 1 182 1 106 1 214 1 60 2 235 1 7 2 10 1 286 1 190 1 136 1 116 1 366 1 194 1 13 1 14 1 79 1 142 1 144 2 347 1 199 1 227 2 278 2 19 1 328 1 308 2 
245 1 330 1 331 1 32 1 13 1 50 1 357 2 334 1 97 1 282 1 143 1 144 2 348 1 272 1 199 1 278 2 265 1 338 1 308 2 
245 1 330 1 331 1 32 1 13 1 50 1 357 2 334 1 282 1 171 1 143 1 144 1 348 1 272 1 199 1 278 1 308 1 
147 1 13 1 334 1 73 1 119 1 155 1 144 1 216 1 199 1 278 1 265 1 137 1 328 1 308 1 
245 1 330 1 331 1 32 1 13 1 50 1 357 2 334 1 282 1 143 1 144 1 348 1 272 1 199 1 278 1 265 1 338 1 308 1 
223 1 
49 1 117 1 253 1 254 1 206 1 345 1 46 1 
259 1 151 1 231 1 315 1 241 1 114 1 163 1 341 1 49 1 117 1 76 1 345 2 350 1 122 1 371 1 104 1 206 1 
147 1 108 1 154 1 156 1 315 1 9 1 114 1 137 1 163 1 196 1 13 2 49 2 368 1 299 1 76 1 80 1 144 1 199 1 81 1 278 1 207 1 328 2 308 1 
310 2 259 1 151 1 5 2 362 1 24 1 8 1 315 2 9 1 241 1 114 2 219 2 244 1 95 1 70 1 163 2 140 1 341 3 31 1 49 8 224 1 247 2 117 2 271 2 225 2 76 2 345 5 36 5 37 1 122 6 104 1 39 5 376 1 206 5 258 1 
310 1 259 1 151 1 3 1 88 1 60 1 5 2 234 1 315 1 115 1 158 1 114 1 68 1 93 1 219 2 95 1 163 1 222 1 49 2 249 1 52 1 295 1 76 1 370 1 18 1 102 1 227 1 206 2 
315 1 49 1 117 1 253 1 254 1 114 1 206 1 76 1 163 1 345 1 
310 2 341 5 247 2 49 5 5 2 271 2 225 2 345 5 36 5 122 10 39 5 219 2 95 1 207 1 206 5 
259 1 151 1 241 1 117 1 104 1 345 1 
147 1 259 3 151 3 360 1 155 1 185 1 44 1 362 2 216 1 315 2 9 2 241 4 67 1 114 2 163 1 137 2 13 1 49 2 98 1 76 2 17 2 144 4 199 1 273 1 278 4 104 2 206 2 328 1 308 4 
309 1 147 1 279 2 130 1 3 2 88 2 182 1 60 3 214 1 111 1 217 1 218 1 286 1 116 1 137 1 194 1 196 1 13 1 14 1 52 1 369 1 370 2 79 1 326 1 144 1 199 1 200 1 102 2 227 3 278 1 328 1 308 1 
341 2 49 1 117 2 118 1 76 1 345 4 36 2 362 1 315 1 122 4 9 1 114 1 39 2 206 2 163 1 
363 1 74 1 177 1 
363 1 74 1 177 1 
150 1 270 1 74 1 177 1 237 1 
363 1 74 1 177 1 
74 1 365 1 177 1 
74 1 365 1 177 1 
74 1 365 1 177 1 
74 1 177 1 
198 1 128 1 
354 1 222 1 310 1 309 8 279 4 14 2 332 1 182 2 118 1 5 1 214 2 153 3 281 1 250 1 10 4 158 1 93 1 286 2 116 4 84 2 
354 1 222 1 309 6 310 1 332 1 118 1 5 1 153 2 10 3 158 1 93 1 116 3 84 2 46 1 
310 1 309 4 279 2 247 1 14 1 182 1 214 1 5 1 153 2 271 1 225 1 281 1 10 2 26 1 286 1 116 2 84 1 
310 1 309 7 247 1 224 1 5 1 271 1 153 2 225 1 281 1 10 3 244 2 116 4 376 1 84 1 56 1 
354 1 309 23 310 3 279 4 332 1 182 2 5 3 214 2 107 1 153 9 281 4 263 1 10 11 158 2 93 1 286 2 116 12 244 2 222 2 247 2 14 2 118 1 271 2 225 2 250 2 376 2 377 1 56 1 84 5 
309 1 116 1 244 1 
309 1 10 1 376 1 
309 6 310 1 279 2 14 1 247 1 182 1 214 1 5 1 271 1 153 3 225 1 281 1 10 3 26 1 286 1 116 3 207 1 84 2 
309 12 310 2 279 2 182 1 214 1 5 2 153 2 281 1 8 1 24 1 10 6 286 1 116 6 244 1 31 1 224 1 14 1 247 2 271 2 225 2 37 1 204 1 376 1 84 1 258 1 
222 1 309 6 310 1 5 1 153 2 281 1 10 3 158 1 93 1 116 3 84 1 
222 1 354 1 309 3 279 2 332 1 14 1 182 1 107 1 214 1 153 2 281 1 250 1 10 1 158 1 286 1 116 2 84 1 
222 2 309 10 310 2 279 2 14 1 182 1 214 1 5 2 153 5 281 2 204 1 10 5 158 2 286 1 68 1 93 1 116 5 84 3 
309 2 279 2 14 1 182 1 214 1 5 1 153 1 225 1 281 1 204 1 10 2 286 1 
310 1 309 4 279 2 247 1 14 1 182 1 214 1 5 1 153 2 271 1 225 1 281 1 204 1 10 2 286 1 116 2 84 1 
222 1 309 3 279 6 14 3 182 3 107 1 214 3 153 2 281 1 250 1 204 1 10 1 158 1 286 3 266 1 116 2 84 1 
354 1 309 34 310 5 279 10 332 1 182 5 58 1 107 1 214 5 5 5 153 12 281 5 240 1 10 16 158 3 26 1 93 2 286 5 266 1 116 18 244 4 222 3 224 1 14 5 247 3 118 1 271 3 225 3 250 2 204 1 277 1 376 3 56 1 84 7 
354 1 310 1 309 8 279 2 332 1 182 1 5 1 214 1 153 2 8 1 10 4 158 1 286 1 93 1 116 4 244 1 222 1 224 1 14 1 118 1 204 1 376 1 84 2 
354 1 310 1 309 11 279 4 332 1 182 2 214 2 5 2 153 3 281 1 8 1 10 6 158 1 26 1 93 1 286 2 116 5 244 2 222 1 224 1 14 2 118 1 271 1 225 1 204 1 376 1 84 2 56 1 
354 1 309 19 310 3 279 6 332 1 182 3 214 3 5 3 153 4 281 1 8 1 24 1 10 9 158 1 26 1 93 1 286 3 116 10 244 1 222 1 31 1 224 1 14 3 247 2 118 1 271 2 225 2 250 1 37 1 204 1 376 1 84 3 258 1 
354 1 309 17 310 2 279 6 332 1 182 3 214 3 5 3 153 5 281 2 8 1 24 1 10 10 158 1 26 1 93 1 286 3 116 7 244 1 222 1 31 1 224 1 14 3 247 1 118 1 271 2 225 2 250 1 37 1 204 1 376 1 84 3 258 1 
354 1 310 1 309 8 279 2 332 1 182 1 5 1 214 1 153 2 8 1 10 4 158 1 286 1 93 1 116 4 244 1 222 1 224 1 14 1 118 1 204 1 376 1 84 2 
309 12 310 2 279 2 182 1 214 1 5 2 153 2 281 1 8 1 24 1 10 6 286 1 116 6 244 1 31 1 224 1 14 1 247 2 271 2 225 2 37 1 204 1 376 1 84 1 258 1 
354 1 309 18 310 2 279 8 332 1 182 4 214 4 5 3 153 5 281 2 24 1 8 1 10 10 158 1 26 1 93 1 286 4 116 8 244 1 222 1 31 1 224 1 14 4 247 1 118 1 271 2 225 2 250 2 37 1 204 1 376 1 84 3 258 1 
309 16 310 2 279 8 182 4 214 4 5 3 153 6 281 3 24 1 8 1 10 9 286 4 266 1 116 7 244 1 31 1 224 1 14 4 247 2 271 3 225 3 250 2 37 1 204 1 376 1 84 3 258 1 
354 1 222 3 310 1 309 7 332 2 5 1 153 6 281 3 10 3 158 3 93 1 116 4 84 3 
354 1 309 18 310 2 279 8 332 1 182 4 214 4 5 3 153 4 281 1 24 1 8 1 10 10 158 1 93 1 286 4 266 1 116 8 244 1 222 1 31 1 224 1 14 4 247 1 118 1 271 2 225 2 250 2 37 1 204 1 376 1 84 3 258 1 
42 1 217 1 227 1 88 1 60 1 221 1 344 1 
40 1 42 1 88 1 60 1 344 1 99 1 303 1 217 1 227 1 20 1 22 1 221 1 
144 1 147 1 216 1 199 1 13 1 278 1 137 1 328 1 155 1 46 1 308 1 
147 1 196 1 13 1 3 1 88 1 60 2 144 1 199 1 111 1 217 1 102 1 218 1 227 2 278 1 257 1 137 1 328 1 308 1 
147 2 3 1 88 2 60 2 43 1 234 1 111 1 217 1 218 1 290 1 196 2 291 1 13 1 51 1 144 1 17 1 199 1 102 2 227 2 278 1 257 1 328 3 308 1 
147 2 3 1 88 2 60 2 43 1 234 1 111 1 217 1 290 1 196 2 291 1 292 1 13 1 51 1 144 2 17 1 199 1 102 2 227 2 83 1 278 2 257 1 328 3 308 2 
147 1 259 2 151 2 335 1 154 1 262 1 43 1 186 1 241 1 137 1 290 1 196 1 292 1 13 1 117 1 345 1 144 3 17 1 199 1 202 1 278 3 328 4 308 3 
147 1 290 1 196 1 259 2 292 1 13 1 151 2 117 1 154 1 43 1 262 1 345 1 17 1 144 3 199 1 202 1 241 1 305 1 278 3 137 1 328 4 308 3 
144 1 199 1 13 1 15 1 278 1 308 1 
147 2 196 1 13 3 15 1 97 1 213 1 78 1 143 1 7 1 144 7 199 2 302 1 285 1 81 1 113 1 278 7 190 1 137 2 328 3 96 1 308 6 
354 1 310 1 309 6 147 1 130 2 279 4 332 1 333 1 3 1 88 1 182 2 5 1 214 2 60 2 153 2 239 1 111 1 317 1 217 2 10 3 218 1 158 1 93 1 286 2 220 1 116 3 222 1 196 1 13 1 14 2 97 1 118 1 369 1 79 2 142 1 347 1 144 1 199 1 200 1 102 1 227 2 278 1 257 1 84 2 328 1 308 1 329 1 
310 2 259 1 151 1 3 1 88 1 60 1 5 2 234 1 315 1 115 1 114 1 158 1 93 1 68 1 219 2 95 1 137 1 163 1 222 1 49 4 117 1 368 1 52 1 249 1 295 1 76 1 370 1 345 1 80 1 144 1 273 1 102 1 253 1 227 1 254 1 278 1 206 4 308 1 146 1 
147 1 196 1 13 2 15 1 97 1 262 1 299 1 144 2 199 1 81 1 278 2 328 2 308 2 
147 1 292 1 13 1 97 1 183 1 155 1 144 4 216 1 199 1 278 4 137 1 328 1 308 4 
147 1 179 1 196 1 13 2 78 1 300 1 17 1 144 2 199 1 302 1 278 2 328 1 308 2 165 1 
144 1 199 1 331 1 32 1 13 1 50 1 357 1 278 1 137 1 308 1 
147 1 13 1 97 1 143 1 144 2 199 1 278 2 190 1 136 1 328 1 308 2 
147 2 13 2 97 1 183 1 213 1 155 1 17 1 144 5 216 1 199 2 278 5 190 1 137 1 328 3 308 4 96 1 
147 2 13 2 97 1 183 1 213 1 232 1 155 1 17 1 144 5 216 1 199 2 278 5 190 1 137 1 328 3 308 4 
147 1 196 1 13 1 3 1 88 1 60 2 144 1 199 1 111 1 217 1 102 1 227 2 83 1 278 1 257 1 137 1 328 1 308 1 
147 1 196 1 13 2 78 1 17 1 144 1 199 1 302 1 285 1 81 1 278 1 328 1 308 1 
251 1 187 1 217 1 306 1 169 1 
267 1 259 2 291 1 1 1 151 2 51 1 117 1 169 2 234 1 345 1 90 1 251 2 187 2 202 1 217 1 306 1 125 1 159 1 146 1 
251 1 227 1 88 1 181 1 106 1 306 1 60 1 169 1 366 1 
90 1 1 1 306 1 
255 1 229 1 340 1 46 1 
211 1 174 1 255 1 28 1 229 1 340 1 178 1 
211 1 201 1 27 1 
211 3 131 1 323 1 174 1 157 1 203 1 255 1 28 3 256 2 229 1 178 1 340 1 
211 2 174 1 255 1 28 2 141 1 364 1 229 1 340 1 178 1 
211 1 32 1 357 1 62 1 348 1 174 1 203 1 28 1 255 1 178 1 193 1 
211 1 174 1 203 1 255 1 28 1 229 1 178 1 
211 1 174 1 203 1 28 1 229 2 340 1 178 1 
48 1 211 2 174 2 203 1 145 1 255 1 28 2 287 1 229 1 178 2 
211 3 41 1 141 2 314 1 174 1 203 1 316 1 28 3 255 2 229 1 340 1 178 1 193 1 
211 2 32 1 50 1 357 2 141 1 236 1 272 1 348 1 174 1 203 1 255 1 28 2 229 1 340 1 178 1 
319 1 211 4 141 2 174 2 203 1 316 1 28 4 255 2 364 1 229 1 340 1 178 2 193 1 
211 1 174 1 203 1 255 1 28 1 229 1 340 1 178 1 
211 4 131 1 141 2 174 1 157 1 316 1 256 1 28 4 255 3 229 2 21 1 340 2 178 1 193 1 
211 2 268 1 141 1 174 1 274 1 203 1 255 1 28 2 162 1 229 1 178 1 340 1 
211 3 131 2 174 1 157 1 203 1 91 1 255 1 28 3 256 2 229 1 178 1 340 1 
293 1 261 1 255 2 161 2 
211 1 174 1 203 1 359 1 28 1 178 1 
211 2 174 1 203 1 255 1 28 2 141 1 229 1 340 1 314 1 178 1 
16 1 
211 1 174 1 203 1 255 1 28 1 229 1 340 1 178 1 
211 3 174 1 203 1 255 1 256 1 28 3 141 1 229 1 314 1 340 1 178 1 
316 1 255 1 21 1 193 1 
255 1 229 1 

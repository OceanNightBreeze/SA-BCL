#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 2 98 4 286 1 48 1 270 1 102 2 222 1 20 1 180 1 57 1 159 1 319 3 84 1 205 1 261 2 232 9 235 1 350 9 188 2 369 2 325 2 142 6 267 1 213 5 375 1 380 1 120 1 381 2 
168 2 98 4 286 1 48 1 270 1 102 2 222 1 20 1 180 1 57 1 159 1 319 3 84 1 205 1 261 2 232 9 235 1 350 9 188 2 369 2 325 2 142 6 267 1 213 5 375 1 380 1 120 1 381 2 
168 2 98 5 286 1 48 1 270 1 102 2 222 1 20 1 180 1 57 1 159 1 319 4 84 1 205 1 261 2 232 10 235 1 350 10 188 2 369 2 325 2 142 7 267 1 213 6 375 1 380 1 120 1 381 2 
168 1 98 3 286 1 48 1 270 1 102 2 222 1 20 1 57 1 159 1 319 2 84 1 205 1 261 2 232 7 235 1 350 7 188 2 369 2 325 2 142 4 267 1 213 4 375 1 380 1 120 1 381 2 
168 2 84 1 205 1 98 2 261 1 286 1 232 4 188 1 350 4 325 1 102 1 369 1 20 1 142 3 213 3 180 1 319 1 380 1 
84 1 96 1 347 1 232 2 188 1 350 2 369 1 102 1 270 1 325 1 20 1 213 1 267 1 308 1 380 1 381 1 
84 1 98 1 232 3 188 2 350 3 369 2 20 1 142 1 213 2 319 1 380 1 120 1 381 1 
168 2 98 4 286 1 222 1 102 1 20 1 180 1 159 1 319 3 84 1 205 1 261 1 232 9 350 9 188 2 369 2 325 1 142 7 213 5 355 1 166 1 380 1 120 1 381 1 
168 2 98 4 286 1 222 1 102 1 20 1 180 1 159 1 319 3 84 1 205 1 261 1 232 9 350 9 188 2 369 2 325 1 142 7 213 5 355 1 166 1 380 1 120 1 381 1 
25 1 15 1 231 1 
237 1 15 1 364 2 
335 2 109 2 252 2 207 2 276 1 209 2 312 1 175 2 
335 3 194 1 252 2 47 1 101 1 339 1 172 1 153 2 312 1 175 2 313 1 257 2 27 1 179 1 273 1 344 2 30 2 156 1 203 1 32 1 109 2 186 1 114 1 207 2 276 1 139 1 209 3 240 1 373 1 374 1 164 2 216 1 144 1 165 1 14 1 376 1 284 1 
335 1 109 1 252 1 181 1 207 1 209 1 312 1 125 1 16 1 175 1 
335 1 322 1 187 1 207 1 324 1 209 1 314 1 177 1 306 1 183 1 217 1 15 1 16 1 231 1 
109 1 335 1 252 1 322 1 207 1 324 2 209 1 175 1 314 1 306 1 217 2 183 1 15 1 16 1 231 1 
29 1 324 1 277 1 217 1 363 1 
324 2 277 1 217 2 15 1 140 1 283 1 363 1 231 1 
324 1 217 1 363 1 
109 1 335 1 252 1 207 1 277 1 324 1 209 1 278 1 125 1 312 1 175 1 181 1 217 1 16 1 
15 1 
324 2 277 1 217 2 15 1 140 1 363 1 345 1 231 1 
299 1 310 1 277 2 324 5 173 2 140 1 210 1 19 1 363 2 280 2 91 1 317 1 39 1 66 1 3 2 217 5 15 1 231 1 285 1 
25 1 276 1 
335 2 109 1 122 1 252 1 207 2 36 1 276 2 209 2 175 1 
51 1 154 1 145 1 
335 1 186 1 276 1 139 1 172 1 209 1 153 1 374 1 257 1 27 1 179 1 273 1 329 1 14 1 30 1 203 1 
109 1 335 3 252 3 106 1 207 3 276 1 209 3 175 3 
335 1 252 1 181 1 207 1 209 1 16 1 175 1 
335 1 109 1 122 1 252 1 207 1 36 1 209 1 16 1 175 1 
335 4 72 1 252 3 47 1 101 1 172 1 153 1 312 1 313 1 175 3 2 1 314 1 27 1 257 1 273 1 179 1 106 1 344 1 183 1 30 1 203 1 32 1 185 1 109 2 186 1 114 1 322 1 36 1 207 3 276 1 139 1 324 1 209 4 240 1 373 1 374 1 164 2 144 1 306 1 165 1 14 1 217 1 376 1 16 1 
335 2 177 1 252 1 207 2 106 1 276 1 209 2 379 1 175 1 
109 1 335 3 43 1 72 1 322 1 252 3 36 1 207 3 324 1 209 3 2 1 175 3 314 1 106 2 306 1 217 1 183 1 15 1 16 1 
109 1 335 2 252 2 36 1 207 2 209 2 175 2 51 1 106 1 145 1 
335 1 186 1 276 1 139 1 172 1 209 1 153 1 374 1 257 1 27 1 179 1 273 1 30 1 14 1 203 1 
335 1 186 1 276 1 172 1 209 1 153 1 163 1 257 1 27 1 179 1 273 1 30 1 14 1 356 1 203 1 
309 1 101 1 78 1 128 1 51 2 154 2 28 1 344 4 156 2 204 1 32 2 206 1 114 1 373 1 244 1 164 2 144 1 40 1 165 1 269 1 376 1 249 1 145 2 42 1 
335 1 252 1 349 1 207 1 209 1 16 1 175 1 314 1 
335 2 186 1 252 1 207 1 172 1 139 1 209 2 153 1 2 1 175 1 374 1 27 1 257 1 273 1 179 1 106 1 14 1 30 1 203 1 145 1 
335 5 109 1 346 1 252 4 207 5 36 1 276 1 209 5 175 4 2 1 177 1 106 2 228 1 379 1 
335 2 349 1 252 2 181 1 207 2 209 2 16 1 175 2 
330 1 352 1 
330 1 352 1 
143 1 220 1 
143 1 220 1 
143 1 220 1 
342 1 330 1 352 1 
342 1 330 1 352 1 
330 1 352 1 79 1 
274 1 143 1 129 1 330 2 220 1 352 2 
342 1 330 1 352 1 
80 1 330 1 352 1 
80 1 330 1 352 1 
80 1 330 1 352 1 
133 1 334 2 85 1 324 2 50 2 189 2 352 2 315 1 254 1 176 1 243 2 129 1 330 2 155 1 293 2 217 2 15 1 157 3 219 1 
335 2 252 2 338 1 152 1 50 1 223 1 175 2 79 1 272 1 176 1 341 1 178 1 293 1 157 1 207 2 276 1 324 1 209 2 189 1 352 1 191 1 243 1 330 1 217 1 
261 1 325 1 102 1 
325 1 102 1 308 1 
261 2 13 1 202 1 102 3 83 1 308 1 
261 1 13 1 68 1 102 2 83 1 308 1 
261 1 13 2 102 2 83 1 308 1 
148 1 169 1 124 1 173 1 223 1 78 1 363 1 364 3 272 1 317 1 341 1 3 1 204 1 231 1 206 1 299 3 137 2 263 1 324 5 277 4 237 1 141 2 140 1 280 1 302 2 39 2 118 1 40 1 217 5 15 2 332 1 250 1 
71 1 148 3 221 1 169 2 49 5 173 2 78 3 363 6 364 9 317 1 341 4 3 2 29 5 204 3 231 1 206 3 113 1 136 1 299 8 137 6 263 2 324 9 277 7 237 3 62 1 141 6 140 1 86 1 210 1 280 2 39 6 40 3 217 9 15 5 332 1 
148 1 169 1 124 1 173 1 78 1 364 4 341 1 3 1 204 1 231 1 206 1 299 3 263 1 137 2 277 2 324 3 237 2 141 2 210 1 280 1 302 1 118 1 39 2 40 1 217 3 15 3 
148 2 169 1 124 1 173 1 78 2 364 7 341 2 3 1 204 2 231 1 206 2 113 1 299 5 137 4 263 1 324 4 277 3 237 3 141 4 62 1 86 1 210 1 280 1 302 2 118 1 39 4 40 2 217 4 15 4 
25 1 233 1 14 1 
94 1 14 1 
167 1 
14 1 203 1 
186 1 233 2 14 3 362 1 203 1 103 1 
186 1 14 1 203 1 
14 1 290 1 
32 3 121 1 206 1 348 1 10 1 88 1 295 1 331 2 344 7 269 2 156 4 248 1 321 1 204 1 184 1 230 1 42 3 
32 3 121 1 206 1 348 1 10 1 88 1 295 1 331 2 344 7 269 2 156 4 248 1 321 1 204 1 184 1 230 1 42 3 
32 3 121 1 206 1 7 1 348 1 10 1 88 1 295 1 331 2 344 7 269 2 156 4 248 1 321 1 204 1 184 1 230 1 42 3 
97 4 121 1 147 1 148 3 287 1 78 3 295 2 344 31 156 16 321 2 230 1 297 1 184 5 204 4 32 15 110 1 206 4 348 2 368 1 10 1 239 1 88 2 353 1 373 1 164 2 144 1 40 3 331 3 165 1 269 5 248 1 376 1 378 3 42 10 
182 1 344 9 295 1 156 5 321 1 204 1 184 1 230 1 32 4 206 1 262 1 348 1 10 1 88 1 353 1 373 2 164 4 144 2 165 2 331 2 269 3 376 2 248 1 42 4 
1 1 18 1 102 2 153 1 311 1 20 1 257 1 27 1 273 1 30 1 202 1 58 1 84 1 261 1 111 1 232 2 350 2 188 1 325 1 369 1 326 1 301 1 116 1 142 1 213 1 214 1 246 1 308 1 380 1 381 1 
1 1 18 1 102 2 153 1 257 1 27 1 273 1 202 1 30 1 58 1 84 1 261 1 111 1 232 3 350 3 188 1 236 1 325 1 369 1 326 1 301 1 116 1 90 1 142 2 213 1 95 1 246 1 308 1 380 1 381 1 
84 1 261 1 111 1 232 2 1 1 18 1 350 2 325 1 102 2 153 1 90 1 116 1 142 2 213 1 27 1 257 1 273 1 95 1 202 1 30 1 246 1 308 1 380 1 58 1 381 1 
100 1 153 1 54 1 318 1 257 1 27 1 273 1 179 1 30 1 203 1 111 2 232 1 8 1 350 1 188 1 236 1 369 1 211 1 116 2 307 1 246 2 14 1 381 2 
1 1 18 1 102 2 153 1 20 1 257 1 27 1 273 1 30 1 202 1 58 1 261 1 111 1 232 1 350 1 188 1 325 1 369 1 326 1 301 1 116 1 214 1 95 1 246 1 308 1 381 1 
300 1 
335 1 45 1 195 1 153 2 291 2 292 1 3 1 257 2 343 1 55 1 296 1 203 1 6 2 8 1 299 2 207 1 209 1 11 2 12 1 119 2 304 2 306 1 217 5 14 1 15 2 357 2 358 1 16 1 169 1 17 2 173 1 271 4 363 6 364 2 314 1 224 1 317 1 316 1 318 1 177 1 27 1 179 2 273 1 30 2 183 1 131 1 231 1 322 1 187 1 324 5 237 2 140 3 280 1 39 2 245 1 
335 1 195 1 17 1 322 1 187 1 207 1 324 3 209 1 140 1 271 2 363 2 314 1 292 1 316 1 177 1 245 1 306 1 217 3 183 1 296 1 345 1 16 1 
335 1 195 1 322 1 187 1 207 1 324 3 209 1 140 1 271 3 363 1 314 1 292 1 316 1 177 1 119 1 245 1 306 1 217 3 183 1 15 1 296 1 345 1 16 1 231 1 
335 1 195 1 17 1 271 3 363 2 314 1 292 1 316 1 177 1 183 1 296 1 345 1 231 1 322 1 207 1 187 1 324 3 209 1 140 1 119 1 306 1 245 1 217 3 15 1 357 1 16 1 
335 1 337 1 195 1 17 4 173 1 271 6 363 7 224 1 314 1 291 2 292 1 317 1 316 1 24 1 3 1 177 1 343 1 183 1 296 1 345 1 231 5 6 2 59 1 299 1 35 1 322 1 207 1 187 1 324 5 237 2 209 1 140 3 266 1 11 2 280 1 39 1 119 4 304 2 306 1 245 1 217 5 15 5 357 4 16 1 
335 1 195 1 291 2 292 1 3 1 343 1 296 1 6 2 299 1 207 1 209 1 11 2 12 1 119 2 304 2 306 1 217 4 15 2 357 2 16 1 17 2 173 1 271 4 363 4 224 1 314 1 364 2 317 1 316 1 177 1 183 1 231 1 322 1 187 1 324 4 237 2 140 2 280 1 39 1 245 1 
335 1 337 1 195 1 17 2 173 1 271 4 363 4 224 1 314 1 291 2 292 1 316 1 317 1 177 1 3 1 343 1 183 1 296 1 231 1 6 2 299 1 35 1 322 1 207 1 187 1 324 4 237 2 209 1 140 2 266 1 11 2 280 1 39 1 119 2 304 2 306 1 245 1 217 4 15 1 357 2 16 1 
335 1 337 1 195 1 17 2 173 1 271 4 363 4 224 1 314 1 291 2 292 1 316 1 317 1 177 1 3 1 343 1 183 1 296 1 231 1 6 2 299 1 35 1 322 1 207 1 187 1 324 4 237 2 209 1 140 2 266 1 11 2 280 1 39 1 119 2 304 2 306 1 245 1 217 4 15 1 357 2 16 1 
335 1 337 1 195 1 17 2 75 1 173 1 271 4 197 1 363 4 364 2 199 2 314 1 291 2 292 1 316 1 317 1 177 1 3 1 343 1 130 2 183 1 296 1 231 1 112 1 299 1 322 1 207 1 187 1 324 4 209 1 140 2 280 1 39 1 119 2 304 2 306 1 245 1 217 4 15 1 357 2 16 1 
335 2 195 1 252 1 17 1 271 3 312 1 125 1 363 1 175 1 314 1 292 1 316 1 177 1 181 1 183 1 296 1 231 1 59 1 109 1 322 1 207 2 187 1 324 2 209 2 278 1 119 1 306 1 245 1 217 2 15 1 357 1 16 2 
335 2 195 1 252 1 17 1 271 3 312 1 125 1 363 1 175 1 314 1 292 1 316 1 177 1 181 1 183 1 296 1 231 1 59 1 109 1 322 1 207 2 187 1 324 2 209 2 278 1 119 1 306 1 245 1 217 2 15 1 357 1 16 2 
335 1 195 1 199 2 291 2 292 1 3 1 343 1 296 1 299 1 207 1 209 1 12 1 119 2 304 2 306 1 217 4 15 1 357 2 16 1 17 2 75 1 173 1 271 4 363 4 314 1 364 2 317 1 316 1 177 1 130 2 183 1 231 1 322 1 187 1 324 4 140 2 280 1 39 1 245 1 
101 1 51 1 25 1 154 1 295 1 344 6 156 3 230 1 204 1 32 3 206 1 114 1 348 1 276 2 10 1 373 1 244 1 164 2 144 1 165 1 331 1 269 2 376 1 248 1 145 1 42 2 
97 3 147 1 148 2 47 1 101 1 78 1 51 4 53 1 154 11 258 1 344 14 156 8 184 1 204 1 32 6 206 2 9 1 114 2 368 1 276 1 162 1 373 2 117 1 164 4 144 2 40 2 165 2 269 1 376 2 378 3 284 1 42 2 145 11 
335 2 252 1 47 1 172 1 101 1 153 1 175 1 2 1 51 1 27 1 257 1 273 1 179 1 106 1 30 1 344 2 156 1 203 1 5 1 298 1 32 1 186 1 114 1 207 1 276 1 139 1 209 2 162 1 373 1 374 1 164 2 329 1 144 1 282 1 14 1 165 1 376 1 284 1 
335 3 146 2 148 2 252 1 47 1 288 1 101 3 153 3 2 1 51 7 257 3 105 2 154 7 106 1 295 1 344 20 156 10 203 2 204 3 206 3 348 1 114 3 207 1 10 1 209 3 115 2 162 1 164 6 165 3 14 2 269 4 123 1 172 2 78 2 175 1 313 2 27 2 179 1 273 2 30 3 230 1 184 4 32 10 186 2 276 2 139 2 372 2 373 3 93 1 374 2 95 1 144 3 40 2 331 1 248 1 376 3 284 1 145 7 42 8 
335 1 44 1 252 1 170 1 47 1 101 2 153 7 311 1 175 1 225 1 318 1 27 2 257 8 273 2 179 2 106 1 30 8 344 2 156 1 158 1 203 2 32 1 114 2 8 1 207 1 209 1 190 1 161 1 373 2 244 1 164 4 354 1 216 2 95 1 144 2 14 3 165 2 376 2 284 1 
335 1 148 1 252 1 101 1 78 1 175 1 51 1 154 1 344 3 56 1 156 1 204 1 109 1 32 2 206 1 114 1 36 1 207 1 209 1 162 1 373 1 164 2 144 1 40 1 165 1 269 1 376 1 42 1 145 1 
206 1 114 1 101 1 51 1 373 1 244 1 154 1 164 2 144 1 40 1 344 2 165 1 156 2 376 1 249 1 184 1 42 1 145 1 
32 2 114 1 101 1 78 1 128 1 51 1 373 1 244 1 154 1 164 2 144 1 344 2 165 1 269 1 376 1 204 1 42 1 145 1 
148 1 101 1 78 1 51 2 154 2 344 4 156 2 184 1 204 1 32 2 206 1 114 1 373 1 244 1 164 2 40 1 144 1 165 1 269 1 376 1 145 2 42 2 
44 1 206 1 114 1 101 1 51 1 373 1 154 1 164 2 144 1 40 1 344 2 165 1 156 2 376 1 249 1 184 1 42 1 145 1 
32 2 44 1 114 1 101 1 78 1 128 1 51 1 373 1 154 1 164 2 144 1 344 2 165 1 269 1 376 1 204 1 42 1 145 1 
44 1 148 1 101 1 78 1 51 2 154 2 344 4 156 2 184 1 204 1 32 2 206 1 114 1 373 1 164 2 40 1 144 1 165 1 269 1 376 1 145 2 42 2 
32 2 148 1 206 1 114 1 101 1 78 1 51 2 373 1 154 2 164 2 144 1 40 1 165 1 344 4 269 1 156 2 376 1 204 1 184 1 42 2 145 2 
335 1 47 1 172 1 101 1 153 1 313 1 27 1 257 1 273 1 179 1 344 2 30 1 156 1 203 1 32 1 186 1 114 1 276 1 139 1 209 1 373 1 374 1 164 2 144 1 14 1 165 1 376 1 284 1 
335 1 47 1 172 1 101 1 153 1 27 1 257 1 273 1 179 1 344 2 30 1 156 1 203 1 32 1 186 1 135 1 114 1 276 1 209 1 163 1 373 1 164 2 144 1 14 1 165 1 356 1 376 1 284 1 
148 1 101 1 78 1 51 2 154 2 344 4 156 2 184 1 204 1 32 2 206 1 114 1 162 1 373 1 164 2 40 1 144 1 165 1 269 1 376 1 145 2 42 2 
335 1 148 1 172 1 101 1 153 1 311 1 78 1 313 1 51 2 154 2 27 1 257 1 273 1 344 4 30 1 156 2 203 1 204 1 184 1 32 2 206 1 186 1 114 1 139 1 209 1 115 1 373 1 374 1 164 2 40 1 144 1 14 1 165 1 269 1 376 1 42 2 145 2 
335 1 148 1 0 1 252 1 101 1 78 1 175 1 51 1 154 1 344 3 156 2 204 1 184 1 32 1 109 1 206 1 114 1 36 1 207 1 209 1 162 1 373 1 164 2 144 1 40 1 165 1 376 1 42 1 145 1 
97 2 147 1 149 1 46 1 148 3 78 3 23 2 81 2 259 1 344 19 156 9 184 3 204 3 32 10 206 3 262 1 368 1 323 1 373 2 38 1 164 4 144 2 40 3 268 1 165 2 269 3 376 2 377 1 378 1 42 6 
97 2 46 2 148 3 78 2 23 1 81 4 259 2 344 26 156 14 184 2 204 2 31 1 32 12 60 1 206 3 34 1 262 1 368 2 323 1 370 1 353 2 373 3 38 1 303 1 164 6 305 1 144 3 40 3 165 3 269 2 376 3 377 1 378 2 42 4 
97 4 147 1 46 1 148 4 78 4 23 1 81 4 259 2 295 1 344 41 156 20 230 1 184 4 204 5 31 1 60 1 32 21 206 5 34 1 348 1 262 1 368 3 323 1 10 1 37 1 370 1 353 1 373 3 38 1 303 1 164 6 305 1 144 3 40 4 268 1 331 1 165 3 269 4 248 1 376 3 377 1 378 3 42 8 
97 4 147 1 46 1 148 4 78 3 23 1 81 4 259 2 295 1 344 38 156 20 230 1 184 3 204 4 31 1 60 1 32 18 206 5 34 1 348 1 262 1 368 3 323 1 10 1 37 1 370 1 353 2 373 4 38 1 303 1 164 8 305 1 144 4 40 4 268 1 331 1 165 4 269 4 248 1 376 4 377 1 378 3 42 7 
97 4 147 2 46 1 148 7 78 7 23 1 81 4 259 1 295 1 344 52 156 27 230 1 184 7 204 8 31 1 60 1 32 25 206 8 34 1 348 1 9 2 262 1 368 2 323 1 10 1 370 1 353 1 373 2 38 1 303 1 164 4 305 1 144 2 40 7 331 1 165 2 269 7 248 1 376 2 377 1 378 4 42 14 
133 1 85 1 243 1 129 1 330 1 293 1 50 1 189 1 241 1 352 1 
191 1 79 1 
104 1 243 1 330 1 293 1 69 1 50 1 371 1 189 1 352 1 
133 1 334 1 85 1 324 1 50 1 189 1 352 1 254 1 176 1 243 1 129 1 330 1 155 1 293 1 217 1 15 1 157 2 219 1 
133 1 334 1 85 1 324 1 50 1 189 1 352 1 254 1 176 1 243 1 129 1 330 1 155 1 293 1 217 1 15 1 157 2 219 1 
133 1 334 1 85 1 324 1 50 1 189 1 352 1 254 1 176 1 243 1 129 1 330 1 155 1 293 1 217 1 15 1 157 2 219 1 
274 1 328 1 342 1 
274 1 328 1 342 1 
80 1 275 1 
274 1 80 1 275 1 
338 1 152 1 
334 1 335 2 252 2 338 1 152 1 50 1 223 1 79 1 175 2 272 1 341 1 256 1 178 1 293 1 157 1 207 2 276 1 324 1 277 1 209 2 189 1 352 1 191 1 243 1 330 1 217 1 219 1 
328 1 342 1 
274 1 80 1 275 1 
335 2 170 1 47 1 101 1 171 1 174 1 153 2 27 1 257 2 273 1 30 2 344 2 156 1 158 1 203 1 107 1 32 1 114 1 207 2 138 1 209 2 162 1 373 1 164 2 216 2 144 1 14 1 165 1 193 1 376 1 284 1 
261 1 74 1 1 1 325 1 102 2 153 2 326 1 311 1 116 1 27 1 257 2 273 1 215 1 95 1 202 1 30 2 308 1 70 1 58 1 
261 1 1 1 325 1 102 2 153 1 326 1 116 1 257 1 27 1 215 1 273 1 95 1 202 1 30 1 218 1 308 1 58 1 
8 1 153 1 116 1 54 1 318 1 27 1 257 1 273 1 179 1 14 1 30 1 247 1 203 1 70 1 
261 1 74 1 1 1 325 1 102 2 153 1 326 1 116 1 257 1 27 1 273 1 215 1 95 1 202 1 30 1 308 1 70 1 58 1 
320 1 
91 1 39 1 66 1 25 1 299 1 15 1 231 1 
173 1 363 1 224 1 364 1 317 1 3 1 231 1 6 1 299 1 324 1 237 1 140 1 280 1 11 1 39 1 217 1 15 2 
148 2 153 3 196 2 103 1 290 2 201 2 3 4 257 3 105 2 203 3 204 2 206 2 299 9 160 2 264 2 63 1 66 1 14 10 217 5 15 8 358 1 73 1 360 1 169 2 76 2 173 4 311 1 363 5 78 2 364 12 22 2 317 4 27 3 273 4 179 1 30 3 231 2 33 1 186 3 322 2 137 6 233 2 324 5 237 6 140 3 141 6 327 2 89 2 280 4 281 1 91 1 94 3 39 8 40 2 
97 1 148 2 169 1 173 2 363 1 78 2 340 1 364 6 317 2 3 2 82 1 204 2 231 2 60 1 206 2 34 1 299 8 137 5 368 1 264 1 324 1 160 2 237 3 140 1 141 5 370 1 280 2 39 5 303 1 305 1 40 2 217 1 15 5 358 1 378 1 
335 1 252 1 173 1 125 1 312 1 175 1 317 1 3 1 181 1 295 1 204 1 109 1 206 2 348 1 35 1 299 2 207 1 264 1 160 2 324 1 209 1 238 1 278 1 280 1 39 2 217 1 248 1 16 1 
299 1 173 1 280 1 317 1 91 1 66 1 3 1 39 1 15 1 231 1 
148 2 206 2 299 5 137 5 264 1 160 2 237 5 141 5 78 2 364 10 39 5 105 1 40 2 15 5 204 2 
324 1 217 1 15 1 140 1 363 1 231 1 
45 1 73 2 169 2 173 2 153 4 363 4 255 1 317 1 3 2 318 1 27 1 257 4 273 1 179 2 55 1 30 4 203 1 299 2 8 1 234 1 324 3 140 2 210 1 63 1 280 2 39 2 14 1 217 3 358 2 
335 3 252 2 47 1 172 1 101 1 153 1 312 1 175 2 313 1 257 1 27 1 179 1 273 1 344 1 30 1 203 1 32 1 109 2 186 1 114 1 207 2 276 1 139 1 209 3 240 1 373 1 374 1 164 2 144 1 14 1 165 1 376 1 
169 1 299 1 137 2 237 2 173 1 141 2 364 4 280 1 317 1 39 2 3 1 331 1 15 4 358 1 231 2 
293 1 333 1 189 1 
293 1 333 1 189 1 
133 1 152 1 293 1 4 1 189 1 
293 1 333 1 189 1 
208 1 293 1 189 1 
208 1 293 1 189 1 
208 1 293 1 189 1 
293 1 189 1 
330 1 352 1 
32 4 206 1 348 1 10 1 353 1 373 2 164 4 144 2 331 1 344 8 165 2 295 1 156 4 269 2 248 1 376 2 204 1 184 1 230 1 42 3 
32 3 206 1 348 1 10 1 25 1 331 1 295 1 344 6 269 2 156 3 248 1 230 1 204 1 42 2 
32 2 148 1 206 1 78 1 198 1 373 1 164 2 144 1 40 1 165 1 344 4 269 1 156 2 376 1 204 1 184 1 42 2 
97 2 32 4 147 1 148 1 206 1 368 1 78 1 40 1 344 7 269 1 156 3 378 1 204 1 184 1 42 2 
97 2 147 1 148 2 78 2 127 1 295 2 344 23 156 11 230 1 184 4 204 3 32 12 206 3 348 2 9 1 10 1 353 2 373 2 117 1 164 4 40 2 144 2 331 1 165 2 269 5 248 1 376 2 378 2 42 9 
32 1 97 1 344 1 
344 1 156 1 378 1 
32 3 148 1 206 1 78 1 198 1 373 1 164 2 105 1 144 1 40 1 165 1 344 6 156 3 269 2 376 1 184 1 204 1 42 3 
97 1 148 2 78 2 344 12 156 6 184 1 204 2 32 6 60 1 206 2 34 1 262 1 368 1 370 1 373 1 164 2 303 1 305 1 144 1 40 2 165 1 269 1 376 1 378 1 42 2 
32 3 206 1 348 1 344 6 295 1 156 3 269 1 248 1 204 1 184 1 42 2 
32 2 348 1 10 1 353 1 127 1 373 1 164 2 144 1 295 1 344 3 165 1 156 1 269 1 376 1 184 1 230 1 42 2 
32 5 206 2 262 1 348 2 238 1 373 1 164 2 144 1 165 1 295 2 344 10 269 3 156 5 376 1 248 1 184 2 204 2 42 5 
373 1 206 1 164 2 262 1 40 1 144 1 344 2 165 1 156 2 376 1 184 1 42 1 
32 2 148 1 206 1 262 1 78 1 373 1 164 2 144 1 40 1 165 1 344 4 269 1 156 2 376 1 204 1 184 1 42 2 
32 2 262 1 348 1 353 1 127 1 373 3 164 6 144 3 268 1 344 3 165 3 295 1 269 1 156 1 376 3 184 1 42 2 
97 4 147 1 148 3 78 3 198 1 127 1 295 3 344 34 156 16 230 1 297 1 184 5 204 5 32 18 110 1 206 5 348 3 262 1 368 1 10 1 239 1 353 2 373 5 164 10 144 5 40 3 331 1 268 1 165 5 269 7 248 2 376 5 378 3 42 12 
97 1 344 8 295 1 156 4 204 1 230 1 32 4 60 1 206 1 262 1 348 1 368 1 10 1 373 1 164 2 144 1 331 1 165 1 269 2 376 1 248 1 378 1 42 2 
97 2 147 1 148 1 198 1 295 1 344 11 156 6 204 1 230 1 184 1 32 5 60 1 206 2 348 1 262 1 368 1 10 1 373 2 164 4 144 2 40 1 331 1 165 2 269 2 248 1 376 2 378 1 42 3 
97 1 148 2 78 2 198 1 295 1 344 19 156 9 230 1 184 1 204 3 32 10 60 1 206 3 34 1 348 1 262 1 368 1 10 1 370 1 353 1 373 3 164 6 303 1 305 1 144 3 40 2 331 1 165 3 269 3 248 1 376 3 378 1 42 4 
97 1 148 2 78 1 198 1 295 1 344 17 156 10 230 1 184 2 204 2 32 7 60 1 206 3 34 1 348 1 262 1 368 1 10 1 370 1 353 1 373 3 164 6 303 1 305 1 144 3 40 2 331 1 165 3 269 3 248 1 376 3 378 1 42 5 
97 1 344 8 295 1 156 4 204 1 230 1 32 4 60 1 206 1 262 1 348 1 368 1 10 1 373 1 164 2 144 1 331 1 165 1 269 2 376 1 248 1 378 1 42 2 
97 1 148 2 78 2 344 12 156 6 184 1 204 2 32 6 60 1 206 2 34 1 262 1 368 1 370 1 373 1 164 2 303 1 305 1 144 1 40 2 165 1 269 1 376 1 378 1 42 2 
97 1 148 2 78 1 198 1 295 1 344 18 156 10 230 1 184 2 204 2 32 8 60 1 206 3 34 1 348 1 262 1 368 1 10 1 370 1 353 2 373 4 303 1 164 8 305 1 144 4 40 2 331 1 165 4 269 3 248 1 376 4 378 1 42 5 
97 1 148 3 78 2 344 16 156 9 184 3 204 2 32 7 60 1 206 3 34 1 262 1 368 1 370 1 353 2 373 4 303 1 164 8 305 1 144 4 40 3 165 4 268 1 269 3 376 4 378 1 42 6 
32 4 206 1 348 3 10 1 344 7 295 3 269 3 156 3 248 1 204 1 230 2 184 3 42 6 
97 1 148 2 78 1 295 1 344 18 156 10 230 1 184 1 204 2 32 8 60 1 206 3 34 1 348 1 262 1 368 1 10 1 370 1 353 2 373 4 303 1 164 8 305 1 144 4 40 2 331 1 165 4 268 1 269 3 248 1 376 4 378 1 42 4 
335 1 92 1 177 1 207 1 276 1 209 1 379 1 
260 1 335 1 207 1 276 1 265 1 209 1 77 1 351 1 92 1 177 1 229 1 379 1 
318 1 25 1 27 1 8 1 257 1 273 1 179 1 14 1 30 1 153 1 203 1 
335 2 186 1 252 1 207 1 276 1 172 1 139 1 209 2 153 1 175 1 257 1 27 1 273 1 179 1 106 1 14 1 30 1 203 1 
335 2 73 1 252 2 172 1 153 1 175 1 314 1 290 1 27 1 257 1 273 1 106 1 30 1 203 2 186 2 207 2 276 1 139 1 209 2 89 1 306 1 14 3 16 1 
335 2 73 1 252 2 172 1 153 2 175 1 314 1 290 1 27 1 257 2 273 1 106 1 30 2 203 2 132 1 186 2 207 2 276 1 209 2 89 1 163 1 306 1 14 3 16 1 
73 1 153 3 363 1 290 1 27 1 257 3 273 1 179 1 30 3 203 1 132 1 231 1 186 1 322 1 233 1 324 2 61 1 89 1 242 1 94 1 14 4 217 2 15 1 
186 1 73 1 322 1 233 1 324 2 76 1 153 3 363 1 89 1 290 1 94 1 257 3 27 1 179 1 273 1 217 2 30 3 14 4 15 1 203 1 132 1 231 1 
27 1 257 1 273 1 30 1 153 1 190 1 
186 1 99 1 361 1 153 6 190 1 311 1 161 1 279 1 103 1 225 1 257 7 27 2 354 1 179 2 273 3 216 1 95 1 30 7 14 3 158 1 203 2 
335 2 252 1 172 1 101 2 171 1 153 1 311 1 175 1 313 1 51 1 154 1 27 1 257 1 273 1 106 1 344 6 295 1 30 1 156 3 203 1 204 1 230 1 32 3 206 1 186 1 348 1 114 2 207 1 276 2 139 1 10 1 209 2 115 1 372 1 162 1 373 2 374 1 164 4 144 2 331 1 14 1 165 2 269 2 248 1 376 2 145 1 42 2 
76 1 173 2 153 1 196 1 363 2 22 1 317 2 3 2 257 1 179 1 30 1 231 1 299 1 322 1 233 1 324 3 277 1 140 1 63 1 327 1 280 2 91 1 39 1 66 1 94 1 217 3 14 2 15 1 
186 1 233 1 153 2 311 1 190 1 103 1 281 1 257 2 27 1 273 2 30 2 14 2 203 1 
359 1 8 1 153 4 311 1 318 1 257 4 27 1 273 1 179 1 30 4 14 1 203 1 132 1 
73 1 186 1 336 1 99 1 361 1 288 1 153 2 257 2 27 1 273 2 30 2 14 1 203 1 366 1 
27 1 257 1 273 1 179 1 30 1 325 1 102 1 153 1 308 1 58 1 
27 1 257 2 273 1 95 1 14 1 30 2 158 1 153 2 203 1 311 1 107 1 
359 1 73 1 8 1 153 4 311 1 161 1 225 1 318 1 257 5 27 2 179 1 273 2 30 5 14 3 158 1 203 2 
359 1 73 1 8 1 153 4 311 1 225 1 318 1 26 1 257 5 27 2 179 1 273 2 30 5 14 3 158 1 203 2 
335 2 186 1 252 1 207 1 276 1 172 1 209 2 153 1 175 1 163 1 257 1 27 1 273 1 179 1 106 1 14 1 30 1 203 1 
73 1 186 1 99 1 361 1 153 1 279 1 103 1 257 1 27 1 273 2 30 1 14 1 203 1 
335 1 134 1 207 1 138 1 209 1 174 1 67 1 193 1 227 1 
151 1 67 1 192 1 
134 1 365 1 67 1 276 1 227 1 
72 1 134 2 151 1 322 1 276 1 277 1 324 2 21 1 314 1 67 1 365 2 192 1 306 1 217 2 183 1 15 1 227 2 16 1 231 1 
84 1 213 1 25 1 380 1 
84 1 213 1 232 1 350 1 188 1 369 1 380 1 
111 1 232 1 381 1 
84 1 367 1 232 3 188 1 350 3 369 1 20 1 289 1 213 1 267 2 226 1 380 1 
168 1 84 1 142 1 213 1 232 2 350 2 188 1 369 1 380 1 
261 1 98 1 205 1 213 1 232 1 350 1 188 1 325 1 102 1 369 1 20 1 
213 1 232 1 350 1 188 1 369 1 20 1 380 1 
84 1 232 1 350 1 188 1 369 1 20 1 380 2 
52 1 251 1 213 1 232 2 350 2 188 2 369 2 20 1 380 1 64 1 
84 1 98 1 232 3 188 1 350 3 369 1 222 1 20 1 142 2 213 2 159 1 319 1 380 1 
84 1 261 1 232 2 188 1 350 2 102 2 369 1 325 1 20 1 142 1 212 1 213 1 202 1 308 1 380 1 
168 1 84 1 98 1 232 4 188 2 350 4 369 2 20 1 142 2 213 2 180 1 319 1 380 1 
84 1 213 1 232 1 350 1 188 1 369 1 20 1 380 1 
84 2 98 1 367 1 232 4 350 4 188 1 369 1 289 1 87 1 142 2 267 1 213 3 319 1 380 2 
84 1 142 1 213 1 232 2 350 2 188 1 294 1 369 1 166 1 20 1 126 1 380 1 
84 1 367 1 232 3 188 1 350 3 369 1 20 1 289 2 65 1 213 1 267 2 380 1 
108 1 150 2 213 2 253 1 
200 1 232 1 350 1 188 1 369 1 20 1 
84 1 142 1 213 1 232 2 350 2 188 1 369 1 159 1 20 1 380 1 
41 1 
84 1 213 1 232 1 350 1 188 1 369 1 20 1 380 1 
84 1 232 3 188 1 350 3 369 1 20 1 142 1 267 1 213 1 159 1 380 1 
98 1 213 1 319 1 87 1 
213 1 380 1 

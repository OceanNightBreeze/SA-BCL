#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
359 1 308 1 183 2 362 2 27 1 337 1 203 9 153 1 315 2 56 6 59 2 186 1 269 4 109 5 159 1 111 1 295 2 115 2 136 1 39 9 116 1 193 1 278 2 141 1 352 1 177 1 122 1 178 3 
359 1 308 1 183 2 362 2 27 1 337 1 203 9 153 1 315 2 56 6 59 2 186 1 269 4 109 5 159 1 111 1 295 2 115 2 136 1 39 9 116 1 193 1 278 2 141 1 352 1 177 1 122 1 178 3 
359 1 308 1 183 2 362 2 27 1 337 1 203 10 153 1 315 2 56 7 59 2 186 1 269 5 109 6 159 1 111 1 295 2 115 2 136 1 39 10 116 1 193 1 278 2 141 1 352 1 177 1 122 1 178 4 
359 1 308 1 183 2 362 2 27 1 337 1 203 7 153 1 315 2 56 4 59 2 186 1 269 3 109 4 159 1 111 1 295 1 115 2 136 1 39 7 116 1 193 1 278 2 141 1 352 1 177 1 178 2 
159 1 295 2 115 1 136 1 39 4 193 1 362 1 183 1 203 4 56 3 315 1 59 1 141 1 352 1 269 2 109 3 122 1 178 1 
206 1 199 1 115 1 136 1 39 2 308 1 193 1 183 1 362 1 264 1 203 2 153 1 278 1 59 1 352 1 109 1 
136 1 39 3 193 1 183 2 27 1 203 3 278 1 56 1 59 2 352 1 269 1 109 2 178 1 
357 1 359 1 183 2 362 1 27 1 203 9 56 7 315 1 59 2 269 4 109 5 159 1 295 2 115 1 136 1 39 9 116 1 193 1 70 1 278 1 141 1 352 1 122 1 178 3 
357 1 359 1 183 2 362 1 27 1 203 9 56 7 315 1 59 2 269 4 109 5 159 1 295 2 115 1 136 1 39 9 116 1 193 1 70 1 278 1 141 1 352 1 122 1 178 3 
98 1 49 1 200 1 
200 1 377 1 320 2 
103 2 106 2 212 2 67 1 72 2 150 2 293 2 217 1 
146 1 23 1 125 1 126 1 180 1 150 3 53 2 217 1 103 2 218 1 7 1 106 2 32 1 184 1 11 1 368 1 293 2 188 1 223 1 16 2 67 1 374 1 17 1 210 2 169 1 18 1 212 2 174 1 350 2 378 1 121 1 351 1 72 3 379 2 197 1 235 1 47 1 
103 1 106 1 212 1 67 1 72 1 148 1 137 1 150 1 343 1 293 1 
98 1 133 1 254 1 200 1 150 1 137 1 208 1 93 1 5 1 55 1 212 1 72 1 222 1 304 1 
98 1 200 1 150 1 137 1 208 2 5 2 93 1 103 1 55 1 106 1 212 1 72 1 222 1 293 1 304 1 
367 1 208 1 5 1 380 1 94 1 
98 1 200 1 367 1 71 1 26 1 208 2 5 2 380 1 
367 1 208 1 5 1 
67 1 148 1 137 1 208 1 150 1 5 1 299 1 103 1 106 1 212 1 72 1 380 1 343 1 293 1 
200 1 
98 1 200 1 367 1 26 1 267 1 208 2 5 2 380 1 
250 2 98 1 200 1 113 1 26 1 208 5 5 5 311 1 297 1 375 1 287 1 231 1 288 1 367 2 325 2 140 2 73 1 380 2 353 1 
260 1 133 1 372 1 150 5 346 1 334 1 217 1 103 4 106 1 233 2 20 1 212 5 72 5 293 4 
103 2 161 1 212 2 72 2 137 1 150 2 343 1 293 2 
49 1 217 1 
260 1 283 1 150 2 217 2 103 1 106 1 212 2 72 2 293 1 
102 1 124 1 156 1 
188 1 146 1 23 1 150 1 53 1 78 1 217 1 7 1 32 1 11 1 350 1 378 1 72 1 197 1 379 1 235 1 
188 1 146 1 23 1 124 1 150 2 53 1 334 1 103 1 7 1 32 1 233 1 212 1 11 1 350 1 378 1 72 2 197 1 379 1 235 1 293 1 
103 3 106 1 233 1 212 3 72 3 150 3 293 3 217 1 
103 1 212 1 72 1 137 1 150 1 343 1 293 1 
103 1 260 1 106 1 212 1 283 1 72 1 137 1 150 1 293 1 
260 1 146 1 23 1 125 1 126 1 180 1 150 4 5 1 53 1 334 1 217 1 103 3 218 1 7 1 55 1 106 2 32 1 11 1 368 1 222 1 293 3 188 1 223 1 16 2 67 1 137 1 208 1 93 1 210 1 18 1 138 1 233 1 212 3 174 1 139 1 378 1 350 1 121 1 351 1 72 4 197 1 379 1 235 1 304 1 
103 1 133 1 233 1 20 1 212 2 72 2 150 2 293 1 217 1 
260 1 200 1 208 1 137 1 150 3 5 1 93 1 334 1 103 3 323 1 138 1 55 1 106 1 233 2 212 3 72 3 222 1 304 1 293 3 
260 1 124 1 150 2 103 2 106 1 233 1 212 2 156 1 72 2 293 2 
188 1 146 1 23 1 150 1 53 1 217 1 7 1 32 1 11 1 350 1 378 1 72 1 197 1 379 1 235 1 
188 1 146 1 23 1 150 1 53 1 262 1 217 1 32 1 289 1 11 1 350 1 72 1 197 1 379 1 235 1 
124 2 285 1 102 2 28 1 218 2 31 1 184 2 316 1 368 1 156 2 291 1 223 1 85 1 189 1 16 2 36 1 38 1 255 1 210 4 18 1 174 1 121 1 351 1 143 1 
103 1 161 1 55 1 212 1 72 1 137 1 150 1 293 1 
307 1 77 1 
307 1 77 1 
273 1 243 1 
273 1 243 1 
273 1 243 1 
307 1 13 1 77 1 
307 1 13 1 77 1 
9 1 307 1 77 1 
273 1 162 1 129 1 307 2 77 2 243 1 
307 1 13 1 77 1 
57 1 307 1 77 1 
57 1 307 1 77 1 
57 1 307 1 77 1 
358 1 127 1 307 1 100 1 150 2 5 1 77 1 217 1 103 2 314 1 81 1 9 1 369 1 293 2 132 1 87 1 226 1 89 1 208 1 298 1 212 2 72 2 302 1 236 1 
132 2 164 1 225 1 358 2 296 1 200 1 360 2 127 2 307 2 208 2 5 2 77 2 298 3 219 1 314 2 81 1 129 1 187 1 340 1 
315 1 115 1 362 1 
206 1 115 1 362 1 
206 1 364 1 99 1 25 1 315 2 362 3 
206 1 364 1 80 1 25 1 315 1 362 2 
206 1 364 2 315 1 25 1 362 2 
123 1 98 1 238 1 261 2 200 2 26 1 100 1 5 5 311 2 363 2 28 1 365 1 367 1 316 1 342 1 250 1 251 1 253 2 226 1 89 1 113 1 36 1 38 1 320 3 208 5 297 3 257 1 325 1 377 1 140 1 176 1 380 4 
98 1 261 6 200 5 26 1 5 9 311 6 363 6 28 3 365 3 367 6 316 3 154 1 317 1 248 1 342 2 250 2 251 2 160 5 224 1 226 4 88 1 65 1 113 1 36 3 38 3 320 9 208 9 375 1 94 5 297 8 325 2 377 3 140 2 176 1 380 7 
98 1 123 1 261 2 200 3 5 3 311 2 363 2 28 1 365 1 316 1 342 1 250 1 251 1 253 1 226 1 36 1 38 1 208 3 320 4 375 1 297 3 257 1 325 1 377 2 140 1 380 2 
98 1 123 1 261 4 200 4 5 4 311 4 363 4 28 2 365 2 316 2 154 1 342 1 250 1 251 1 224 1 253 2 226 2 65 1 36 2 38 2 320 7 208 4 375 1 297 5 257 1 325 1 377 3 140 1 380 3 
188 1 23 1 32 1 
23 1 44 1 
23 1 49 1 204 1 
0 1 23 1 
130 1 
23 1 32 1 
188 1 23 3 204 2 32 1 185 1 332 1 
328 1 50 1 165 1 227 1 38 1 207 1 209 2 335 1 210 7 336 1 28 1 218 3 105 1 45 1 184 4 291 3 143 2 
328 1 50 1 165 1 227 1 38 1 207 1 209 2 335 1 210 7 336 1 28 1 218 3 105 1 45 1 184 4 291 3 143 2 
328 1 319 1 50 1 165 1 227 1 38 1 207 1 209 2 335 1 210 7 336 1 28 1 218 3 105 1 45 1 184 4 291 3 143 2 
328 2 50 1 309 1 335 9 336 2 313 1 28 6 105 1 218 18 30 1 365 3 184 19 316 3 368 1 291 17 292 1 272 1 62 4 223 1 134 1 165 5 16 2 36 3 227 1 207 2 38 6 209 2 210 37 18 1 45 5 376 1 174 1 349 3 143 8 75 1 
328 1 50 1 335 1 336 1 28 1 218 4 184 5 221 1 368 2 291 4 272 1 223 2 16 4 165 1 227 1 38 1 207 1 209 2 256 1 210 9 18 2 45 1 174 2 143 3 
48 1 2 1 99 1 51 1 53 1 183 1 312 1 362 2 203 2 56 1 315 1 11 1 59 1 109 1 63 1 206 1 64 1 115 1 136 1 39 2 193 1 192 1 43 1 172 1 278 1 279 1 350 1 379 1 352 1 235 1 
48 1 99 1 51 1 4 1 53 1 183 1 312 1 362 2 203 3 315 1 56 2 11 1 59 1 109 1 206 1 64 1 115 1 136 1 39 3 275 1 193 1 192 1 19 1 43 1 172 1 278 1 279 1 350 1 379 1 235 1 
48 1 99 1 51 1 4 1 53 1 362 2 203 2 56 2 315 1 11 1 109 1 206 1 64 1 115 1 136 1 39 2 193 1 192 1 19 1 172 1 278 1 279 1 350 1 379 1 235 1 
23 1 51 2 361 1 53 1 183 1 203 1 32 1 11 1 59 1 294 1 64 2 39 1 275 1 344 1 278 2 279 2 350 1 379 1 197 1 235 1 354 1 280 1 97 1 
48 1 99 1 51 1 53 1 183 1 312 1 362 2 203 1 315 1 11 1 59 1 63 1 206 1 64 1 115 1 39 1 192 1 19 1 43 1 172 1 278 1 279 1 350 1 379 1 352 1 235 1 
196 1 
144 2 282 2 98 1 200 2 150 1 5 5 101 1 53 2 333 1 152 1 55 1 246 4 11 1 338 2 342 1 61 1 158 2 250 1 252 2 254 1 113 1 68 2 345 1 208 5 297 2 212 1 350 2 72 1 259 1 21 2 354 1 304 1 76 1 23 1 26 3 311 2 32 1 367 6 266 1 222 1 270 1 82 1 133 1 228 1 320 2 137 1 93 1 325 1 377 2 140 1 197 2 379 2 142 1 235 1 280 1 
282 1 26 1 150 1 5 3 333 1 152 1 55 1 367 2 246 2 267 1 222 1 82 1 61 1 133 1 254 1 208 3 137 1 93 1 212 1 72 1 142 1 304 1 
144 1 98 1 200 1 26 1 150 1 5 3 333 1 152 1 55 1 367 1 246 3 267 1 222 1 82 1 61 1 133 1 254 1 208 3 137 1 93 1 212 1 72 1 142 1 304 1 
282 1 144 1 98 1 200 1 26 1 150 1 5 3 333 1 152 1 55 1 367 2 246 3 267 1 222 1 82 1 61 1 133 1 254 1 208 3 137 1 93 1 212 1 72 1 142 1 21 1 304 1 
282 4 144 4 98 5 200 5 241 1 150 1 5 5 242 1 333 1 152 1 55 1 246 6 338 2 107 1 61 1 158 2 250 1 252 2 254 1 113 1 208 5 68 2 297 1 348 1 212 1 72 1 21 4 303 1 304 1 76 1 26 3 311 1 367 7 266 1 267 1 222 1 82 1 133 1 137 1 93 1 325 1 377 2 140 1 142 1 
282 2 144 2 98 1 200 2 150 1 5 4 333 1 152 1 55 1 246 4 338 2 61 1 158 2 250 1 252 2 254 1 113 1 208 4 68 2 297 1 212 1 72 1 21 2 304 1 76 1 26 2 311 1 367 4 266 1 222 1 82 1 133 1 137 1 320 2 228 1 93 1 325 1 377 2 140 1 142 1 
144 2 282 2 98 1 200 1 26 2 241 1 150 1 5 4 311 1 333 1 152 1 55 1 367 4 266 1 246 4 338 2 222 1 107 1 82 1 61 1 158 2 250 1 252 2 133 1 254 1 113 1 68 2 208 4 137 1 93 1 297 1 348 1 212 1 325 1 377 2 72 1 140 1 21 2 142 1 304 1 76 1 
144 2 282 2 98 1 200 1 26 2 241 1 150 1 5 4 311 1 333 1 152 1 55 1 367 4 266 1 246 4 338 2 222 1 107 1 82 1 61 1 158 2 250 1 252 2 133 1 254 1 113 1 68 2 208 4 137 1 93 1 297 1 348 1 212 1 325 1 377 2 72 1 140 1 21 2 142 1 304 1 76 1 
144 2 282 2 98 1 239 2 200 1 26 2 150 1 5 4 311 1 333 1 152 1 55 1 367 4 266 1 246 4 338 2 222 1 82 1 61 1 250 1 252 2 133 1 254 1 113 1 373 1 320 2 166 2 208 4 137 1 93 1 297 1 348 1 212 1 325 1 72 1 140 1 234 1 21 2 142 1 214 1 304 1 
282 3 144 3 98 1 200 1 26 2 241 1 150 1 5 4 311 1 333 1 152 1 55 1 367 5 266 1 246 5 338 2 222 1 107 1 82 1 61 1 158 2 250 1 252 2 133 1 254 1 113 1 68 2 208 4 137 1 93 1 297 1 348 1 212 1 325 1 377 2 140 1 72 1 142 1 303 1 21 3 304 1 76 1 
282 3 144 3 98 1 200 1 26 2 241 1 150 1 5 4 311 1 333 1 152 1 55 1 367 5 266 1 246 5 338 2 222 1 107 1 82 1 61 1 158 2 250 1 252 2 133 1 254 1 113 1 68 2 208 4 137 1 93 1 297 1 348 1 212 1 325 1 377 2 140 1 72 1 142 1 303 1 21 3 304 1 76 1 
282 2 144 2 98 1 239 2 200 1 150 1 5 4 333 1 152 1 55 1 246 4 338 2 61 1 250 1 252 2 254 1 113 1 208 4 166 2 297 1 212 1 72 1 21 2 304 1 26 2 311 1 367 4 266 1 222 1 82 1 133 1 373 1 137 1 320 2 228 1 93 1 325 1 140 1 142 1 
49 1 124 1 50 1 217 2 102 1 28 1 218 3 184 3 156 1 368 1 291 2 223 1 16 2 165 1 227 1 207 1 38 1 209 1 255 1 210 6 18 1 45 1 174 1 121 1 351 1 143 2 
124 11 125 1 310 1 335 1 217 1 104 1 102 11 28 1 218 6 365 2 184 8 316 1 368 2 156 4 291 2 290 1 271 1 84 1 62 3 223 2 134 1 16 4 36 2 38 2 17 1 210 14 18 2 376 1 174 2 349 3 121 2 351 1 143 1 
356 1 146 1 23 1 125 1 150 2 53 1 78 1 334 1 217 1 103 1 7 1 218 1 32 1 11 1 12 1 184 1 156 1 368 1 155 1 84 1 293 1 188 1 223 1 16 2 210 2 17 1 18 1 233 1 212 1 174 1 378 1 350 1 379 1 197 1 121 1 351 1 72 2 235 1 
145 1 146 2 50 1 149 1 150 3 53 3 334 1 335 4 103 1 102 7 7 2 11 2 156 7 291 8 293 1 165 1 16 6 207 1 209 1 17 1 210 20 18 3 19 1 212 1 174 3 350 3 72 3 351 3 121 3 74 2 23 2 124 7 125 1 306 2 180 2 217 2 28 3 29 2 218 10 32 2 365 2 184 10 316 2 368 3 84 1 188 2 223 3 34 1 36 2 227 1 38 3 95 2 233 1 45 1 378 2 379 3 197 1 235 2 143 4 
23 3 2 1 125 1 150 1 53 8 54 1 151 1 103 1 218 1 32 2 8 1 11 2 184 1 368 2 247 1 293 1 223 2 163 1 190 1 16 4 255 1 374 2 17 1 210 2 18 2 19 1 233 1 212 1 174 2 350 8 72 1 379 7 197 2 121 2 351 2 213 1 235 2 354 1 280 1 
260 1 124 1 150 1 102 1 103 1 28 1 218 2 106 1 365 1 184 1 316 1 156 1 368 1 291 1 293 1 84 1 223 1 16 2 36 1 38 1 210 3 18 1 212 1 174 1 121 1 351 1 72 1 143 1 381 1 
223 1 85 1 124 1 16 2 36 1 38 1 255 1 335 1 210 2 102 1 18 1 174 1 184 2 156 1 351 1 121 1 368 1 291 1 
223 1 124 1 189 1 16 2 255 1 210 2 102 1 18 1 28 1 218 2 174 1 316 1 156 1 351 1 121 1 368 1 291 1 143 1 
223 1 124 2 16 2 36 1 38 1 255 1 335 1 210 4 102 2 28 1 18 1 218 2 365 1 316 1 174 1 184 2 156 2 351 1 121 1 368 1 291 2 143 1 
223 1 85 1 124 1 16 2 36 1 38 1 335 1 210 2 102 1 18 1 8 1 174 1 184 2 156 1 351 1 121 1 368 1 291 1 
223 1 124 1 189 1 16 2 210 2 102 1 18 1 28 1 218 2 8 1 174 1 316 1 156 1 351 1 121 1 368 1 291 1 143 1 
223 1 124 2 16 2 36 1 38 1 335 1 210 4 102 2 28 1 18 1 218 2 365 1 8 1 316 1 174 1 184 2 156 2 351 1 121 1 368 1 291 2 143 1 
223 1 124 2 16 2 36 1 38 1 335 1 210 4 102 2 28 1 18 1 218 2 365 1 316 1 174 1 184 2 156 2 351 1 121 1 368 1 291 2 143 1 
146 1 23 1 125 1 180 1 150 1 53 1 217 1 7 1 218 1 32 1 184 1 11 1 368 1 188 1 223 1 16 2 17 1 210 2 18 1 174 1 378 1 350 1 379 1 197 1 72 1 351 1 121 1 235 1 
146 1 23 1 125 1 150 1 53 1 262 1 217 1 218 1 32 1 289 1 184 1 11 1 368 1 341 1 188 1 223 1 16 2 17 1 210 2 18 1 174 1 350 1 379 1 197 1 72 1 351 1 121 1 235 1 
223 1 124 2 16 2 36 1 38 1 335 1 210 4 102 2 28 1 18 1 218 2 365 1 316 1 174 1 184 2 156 2 351 1 121 1 368 1 291 2 84 1 143 1 
146 1 23 1 124 2 2 1 180 1 150 1 53 1 335 1 102 2 28 1 29 1 218 2 7 1 32 1 365 1 316 1 184 2 11 1 156 2 368 1 291 2 188 1 223 1 36 1 16 2 38 1 210 4 18 1 174 1 378 1 350 1 379 1 72 1 351 1 121 1 235 1 143 1 
260 1 124 1 150 1 335 1 103 1 102 1 28 1 218 1 106 1 365 1 265 1 316 1 184 2 368 1 156 1 291 1 293 1 84 1 223 1 16 2 36 1 38 1 210 3 18 1 212 1 174 1 121 1 351 1 72 1 
1 1 329 1 335 3 28 3 218 10 365 3 184 9 316 3 368 2 60 1 291 6 62 2 110 2 223 2 35 1 134 1 16 4 36 3 38 3 191 2 256 1 210 19 18 2 171 1 46 1 376 1 326 1 174 2 349 1 143 3 
1 1 329 2 286 1 335 2 28 2 218 12 365 3 184 14 316 2 368 3 291 4 272 2 62 2 110 1 223 3 112 1 35 2 134 2 16 6 36 3 38 3 191 4 277 1 256 1 210 26 18 3 171 1 119 1 326 1 174 3 349 2 175 1 301 1 143 2 
329 1 1 1 50 1 286 1 335 4 291 8 60 1 62 4 110 1 112 1 16 6 165 1 207 1 209 1 256 1 210 41 18 3 171 1 119 1 349 3 174 3 175 1 301 1 28 5 218 21 365 4 316 4 184 20 368 3 131 1 272 1 223 3 35 2 134 3 36 4 227 1 38 5 191 4 277 1 45 1 376 1 326 1 143 4 
1 1 329 1 50 1 286 1 335 3 28 4 218 18 365 4 184 20 316 3 368 4 131 1 60 1 291 7 272 2 62 4 110 1 223 4 112 1 35 2 134 3 165 1 16 8 36 4 227 1 207 1 38 5 209 1 191 4 277 1 256 1 210 38 18 4 171 1 45 1 119 1 376 1 326 1 174 4 349 3 175 1 301 1 143 4 
1 1 329 1 50 1 286 1 335 7 104 2 28 8 218 25 365 7 184 27 316 7 368 2 291 14 272 1 62 4 110 1 223 2 112 1 35 1 134 2 165 1 16 4 36 7 227 1 207 1 38 8 209 1 191 4 277 1 256 1 210 52 18 2 171 1 45 1 119 1 376 2 326 1 174 2 349 4 175 1 301 1 143 7 
258 1 13 1 
162 1 300 1 57 1 
132 1 86 1 164 1 358 1 314 1 129 1 127 1 307 1 187 1 77 1 
9 1 302 1 
281 1 132 1 358 1 314 1 147 1 114 1 127 1 307 1 77 1 
132 1 164 1 225 1 358 1 200 1 360 1 127 1 307 1 208 1 5 1 77 1 298 2 219 1 314 1 81 1 129 1 187 1 340 1 
132 1 164 1 225 1 358 1 200 1 360 1 127 1 307 1 208 1 5 1 77 1 298 2 219 1 314 1 81 1 129 1 187 1 340 1 
132 1 164 1 225 1 358 1 200 1 360 1 127 1 307 1 208 1 5 1 77 1 298 2 219 1 314 1 81 1 129 1 187 1 340 1 
162 1 258 1 13 1 
162 1 258 1 13 1 
300 1 57 1 
162 1 300 1 57 1 
369 1 236 1 
358 1 360 1 127 1 307 1 100 1 150 2 5 1 77 1 217 1 103 2 314 1 9 1 369 1 293 2 132 1 87 1 225 1 226 1 89 1 92 1 208 1 298 1 212 2 72 2 302 1 380 1 236 1 
23 1 125 1 150 2 53 2 54 1 218 1 32 1 245 1 11 1 184 1 368 1 84 1 370 1 223 1 190 1 16 2 374 2 41 1 17 1 210 2 18 1 212 2 174 1 350 2 120 1 121 1 351 1 72 2 379 2 198 1 235 1 
48 1 206 1 64 1 99 1 2 1 115 1 167 1 362 2 53 2 312 1 322 1 19 1 172 1 315 1 11 1 350 2 379 2 235 1 355 1 
48 1 206 1 64 1 99 1 115 1 276 1 362 2 53 1 312 1 19 1 172 1 315 1 11 1 350 1 379 1 235 1 355 1 
294 1 23 1 64 1 53 1 322 1 32 1 10 1 11 1 350 1 197 1 379 1 235 1 354 1 280 1 
48 1 206 1 64 1 99 1 115 1 167 1 362 2 53 1 312 1 322 1 19 1 172 1 315 1 11 1 350 1 379 1 235 1 355 1 
157 1 
231 1 98 1 49 1 200 1 73 1 311 1 297 1 
98 1 200 2 26 1 5 1 311 1 367 1 158 1 250 1 113 1 68 1 320 1 208 1 297 1 325 1 377 1 140 1 76 1 
0 3 98 2 330 2 2 1 200 8 5 5 101 1 53 3 204 2 244 1 11 4 342 2 250 4 205 1 113 4 208 5 118 1 297 9 350 3 73 1 304 2 23 10 215 1 261 6 24 2 26 3 182 2 311 8 363 6 28 2 32 3 365 2 367 5 316 2 185 1 83 2 188 3 371 2 135 2 36 2 38 2 320 12 194 2 230 2 195 1 231 1 95 2 44 2 325 4 377 6 140 4 197 1 379 3 235 3 
330 1 98 2 261 5 200 5 284 1 26 1 5 1 101 1 182 2 286 1 311 5 363 5 28 2 365 2 367 1 316 2 342 1 62 1 250 2 112 1 134 1 113 2 36 2 38 2 208 1 320 6 347 1 277 1 297 8 325 2 119 1 377 3 349 1 175 1 140 2 
330 1 148 1 150 1 5 1 182 2 311 2 103 1 313 1 28 1 106 1 107 1 343 1 293 1 250 1 113 1 165 1 67 1 207 1 38 2 137 1 208 1 297 2 299 1 45 1 212 1 325 1 72 1 140 1 
250 1 98 1 200 1 113 1 311 1 297 1 231 1 325 1 140 1 73 1 
330 1 261 5 200 5 36 2 38 2 320 10 182 2 311 5 297 5 363 5 28 2 95 1 365 2 377 5 316 2 
98 1 200 1 367 1 26 1 208 1 5 1 
23 1 216 1 26 2 52 1 5 3 101 2 53 4 311 2 244 2 32 1 367 4 11 1 270 1 342 2 250 2 205 1 113 1 345 1 208 3 375 1 297 2 325 2 350 4 140 2 379 4 197 2 235 1 354 1 280 1 
146 1 23 1 125 1 126 1 180 1 150 3 53 1 217 1 103 2 218 1 7 1 106 2 32 1 11 1 368 1 293 2 188 1 223 1 16 2 67 1 210 1 18 1 212 2 174 1 350 1 378 1 379 1 197 1 72 3 351 1 121 1 235 1 
250 1 98 2 261 2 200 4 113 1 320 4 209 1 101 1 311 2 297 1 363 2 325 1 377 2 140 1 342 1 
132 1 358 1 108 1 
132 1 358 1 108 1 
132 1 164 1 358 1 173 1 369 1 
132 1 358 1 108 1 
132 1 358 1 305 1 
132 1 358 1 305 1 
132 1 358 1 305 1 
132 1 358 1 
307 1 77 1 
223 2 50 1 16 4 165 1 227 1 38 1 207 1 209 1 210 8 335 1 28 1 18 2 218 4 45 1 184 4 174 2 368 2 291 3 143 2 272 1 
49 1 50 1 165 1 227 1 207 1 38 1 209 1 210 6 28 1 218 3 45 1 184 3 291 2 143 2 
223 1 16 2 36 1 38 1 168 1 210 4 335 1 28 1 18 1 218 2 365 1 316 1 174 1 184 2 368 1 291 2 143 1 
134 1 36 1 38 1 210 7 335 1 28 1 218 4 365 1 376 1 316 1 349 1 184 3 291 2 143 1 62 2 
50 1 335 4 104 1 28 3 218 12 365 2 184 11 316 2 58 1 368 2 291 9 290 1 272 2 62 2 223 2 165 2 36 2 16 4 227 1 207 1 38 3 209 1 210 23 18 2 45 2 376 1 349 2 174 2 143 5 
218 1 210 1 62 1 
184 1 349 1 210 1 
223 1 16 2 36 1 38 1 168 1 210 6 335 1 18 1 28 1 95 1 218 3 365 1 174 1 184 3 316 1 368 1 291 3 143 2 
286 1 335 1 28 2 218 6 365 2 184 6 316 2 368 1 291 2 62 1 223 1 112 1 134 1 16 2 36 2 38 2 277 1 256 1 210 12 18 1 119 1 349 1 174 1 175 1 143 1 
165 1 207 1 38 1 210 6 335 1 28 1 218 3 45 1 184 3 291 2 143 1 
223 1 50 1 165 1 16 2 227 1 335 1 210 3 18 1 218 2 45 1 184 1 58 1 174 1 368 1 291 2 143 1 272 1 
223 1 16 2 165 2 207 1 38 2 256 1 335 2 210 10 18 1 313 1 28 2 218 5 45 2 174 1 184 5 368 1 291 5 143 3 
223 1 16 2 36 1 38 1 256 1 210 2 335 1 18 1 174 1 184 2 368 1 291 1 
223 1 16 2 36 1 38 1 256 1 210 4 335 1 28 1 18 1 218 2 365 1 316 1 174 1 184 2 368 1 291 2 143 1 
223 3 16 6 165 1 256 1 210 3 335 1 18 3 218 2 45 1 58 1 174 3 184 1 368 3 60 1 291 2 272 1 143 1 
50 1 309 1 335 5 28 4 218 14 30 1 365 3 184 13 316 3 368 4 60 1 291 10 292 1 272 1 62 4 223 4 134 1 165 2 16 8 36 3 227 1 207 1 38 4 209 1 256 1 168 1 210 27 18 4 45 2 376 1 174 4 349 3 143 5 
50 1 286 1 28 1 218 4 184 4 368 1 291 2 62 1 223 1 134 1 16 2 165 1 227 1 38 1 207 1 209 1 256 1 210 8 18 1 45 1 349 1 174 1 143 2 
50 1 286 1 335 1 28 1 218 5 365 1 184 6 368 2 291 3 62 2 223 2 134 1 165 1 16 4 36 1 227 1 207 1 38 2 209 1 256 1 210 11 168 1 18 2 45 1 376 1 174 2 349 1 143 2 
50 1 286 1 335 1 28 3 218 10 365 2 184 9 316 2 368 3 291 4 272 1 62 1 223 3 112 1 134 1 165 1 16 6 36 2 227 1 207 1 38 3 209 1 277 1 256 1 168 1 210 19 18 3 45 1 119 1 349 1 174 3 175 1 143 3 
50 1 286 1 335 2 28 2 218 7 365 2 184 10 316 1 368 3 291 5 272 1 62 1 223 3 112 1 134 1 165 1 16 6 36 2 227 1 207 1 38 3 209 1 277 1 256 1 168 1 210 17 18 3 45 1 119 1 349 1 174 3 175 1 143 3 
50 1 286 1 28 1 218 4 184 4 368 1 291 2 62 1 223 1 134 1 16 2 165 1 227 1 38 1 207 1 209 1 256 1 210 8 18 1 45 1 349 1 174 1 143 2 
286 1 335 1 28 2 218 6 365 2 184 6 316 2 368 1 291 2 62 1 223 1 112 1 134 1 16 2 36 2 38 2 277 1 256 1 210 12 18 1 119 1 349 1 174 1 175 1 143 1 
50 1 286 1 335 2 28 2 218 8 365 2 184 10 316 1 368 4 291 5 272 2 62 1 223 4 112 1 134 1 165 1 16 8 36 2 227 1 207 1 38 3 209 1 277 1 256 1 210 18 168 1 18 4 45 1 119 1 174 4 349 1 175 1 143 3 
286 1 335 3 28 2 218 7 365 3 184 9 316 2 368 4 60 1 291 6 272 2 62 1 223 4 112 1 134 1 16 8 36 3 38 3 277 1 256 1 210 16 18 4 119 1 174 4 349 1 175 1 143 3 
50 2 165 3 227 1 207 1 38 1 210 7 335 3 28 1 218 4 45 3 184 3 291 6 143 3 
50 1 286 1 335 1 28 2 218 8 365 2 184 10 316 1 368 4 60 1 291 4 272 2 62 1 223 4 112 1 134 1 165 1 16 8 36 2 227 1 207 1 38 3 209 1 277 1 256 1 210 18 18 4 45 1 119 1 174 4 349 1 175 1 143 3 
133 1 212 1 20 1 72 1 37 1 150 1 217 1 
133 1 179 1 37 1 150 1 217 1 170 1 211 1 128 1 20 1 212 1 72 1 96 1 
188 1 146 1 23 1 150 2 53 1 217 1 103 1 32 1 233 1 212 1 289 1 11 1 350 1 72 2 197 1 379 1 235 1 293 1 
188 1 23 1 240 1 321 1 53 1 244 1 32 1 11 2 350 1 379 1 185 1 33 1 235 1 
23 1 49 1 32 1 11 1 350 1 379 1 197 1 235 1 354 1 53 1 280 1 
188 1 146 1 23 1 150 2 53 1 217 1 103 1 7 1 32 1 233 1 212 1 11 1 350 1 72 2 197 1 379 1 235 1 293 1 
188 2 146 1 23 3 371 1 137 1 150 2 93 1 53 1 217 1 103 2 55 1 7 1 44 1 32 2 233 1 244 1 212 2 11 1 350 1 72 2 379 1 235 1 293 1 
188 2 146 1 23 3 371 1 66 1 137 1 150 2 93 1 53 2 217 1 103 2 55 1 44 1 32 2 233 1 244 1 212 2 289 1 11 1 350 2 72 2 379 2 235 1 293 1 
188 1 0 1 98 1 23 4 371 1 200 1 66 1 91 1 208 2 5 2 53 3 232 1 44 1 204 1 32 1 244 1 367 1 11 1 350 3 197 1 379 3 235 1 304 1 
188 1 0 1 98 1 23 4 371 1 200 1 24 1 66 1 208 2 5 2 53 3 44 1 204 1 32 1 244 1 367 1 11 1 350 3 197 1 379 3 235 1 304 1 
11 1 350 1 379 1 247 1 235 1 53 1 
188 1 163 1 23 3 2 1 240 1 374 1 321 1 53 7 54 1 151 1 19 1 32 2 11 3 350 7 197 2 379 6 185 1 33 1 247 1 213 1 235 2 
146 1 2 1 50 1 150 2 53 1 103 1 102 1 7 1 11 1 156 1 291 2 293 1 16 4 165 1 207 1 209 1 210 6 18 2 212 1 174 2 350 1 72 2 351 2 121 2 23 1 124 1 180 1 306 1 217 2 29 1 28 1 218 3 32 1 184 3 368 2 84 1 188 1 223 2 227 1 38 1 233 1 45 1 378 1 379 1 198 1 235 1 143 2 
0 1 98 1 23 2 200 1 24 1 26 1 5 3 311 1 53 1 204 1 367 2 250 2 205 1 113 2 135 1 208 3 194 1 297 1 230 1 231 1 325 2 350 1 379 1 197 1 140 2 73 1 380 1 304 1 
188 1 23 2 2 1 118 1 53 2 204 1 32 1 11 2 350 2 379 2 185 1 247 1 235 1 
23 1 2 1 66 1 117 1 53 4 32 1 11 1 350 4 197 1 379 4 235 1 354 1 280 1 
145 1 188 1 15 1 23 1 240 1 53 2 79 1 244 1 32 1 11 2 350 2 379 2 33 1 235 1 
206 1 172 1 11 1 115 1 350 1 379 1 197 1 235 1 362 1 53 1 
23 1 2 1 53 2 54 1 19 1 32 1 245 1 11 1 350 2 379 2 235 1 
23 3 163 1 2 1 117 1 53 5 54 1 244 1 32 2 11 2 350 5 197 1 379 4 213 1 235 2 354 1 280 1 
23 3 163 1 2 1 117 1 53 5 54 1 244 1 32 2 11 2 350 5 197 1 379 4 235 2 354 1 280 1 249 1 
6 1 90 1 339 1 40 1 217 1 
98 1 200 1 90 1 137 1 208 2 40 2 93 1 181 1 5 2 229 1 217 1 6 2 138 1 55 1 327 1 222 1 339 2 380 1 304 1 
90 1 40 1 150 1 41 1 212 1 120 1 72 1 339 1 370 1 
90 1 327 1 229 1 
49 1 136 1 109 1 193 1 
203 1 59 1 136 1 39 1 109 1 193 1 183 1 
278 1 51 1 39 1 
39 3 136 1 308 2 183 1 193 1 263 1 203 3 59 1 268 1 352 1 109 1 22 1 
295 1 203 2 56 1 59 1 136 1 39 2 109 1 193 1 183 1 
203 1 315 1 115 1 59 1 141 1 39 1 269 1 352 1 109 1 362 1 183 1 
203 1 59 1 39 1 352 1 109 1 193 1 183 1 
203 1 59 1 136 1 39 1 352 1 193 2 183 1 
237 1 201 1 39 2 193 1 183 2 203 2 59 2 352 1 318 1 109 1 
359 1 136 1 39 3 116 1 193 1 183 1 203 3 56 2 59 1 352 1 269 1 109 2 178 1 
206 1 274 1 99 1 115 1 136 1 39 2 193 1 362 2 183 1 203 2 315 1 56 1 59 1 352 1 109 1 
295 1 136 1 39 4 193 1 183 2 203 4 56 2 59 2 352 1 269 1 109 2 122 1 178 1 
203 1 59 1 136 1 39 1 352 1 109 1 193 1 183 1 
136 2 39 4 308 1 193 2 183 1 203 4 56 2 268 1 59 1 269 1 109 3 14 1 22 1 178 1 
357 1 39 2 136 1 193 1 183 1 69 1 203 2 56 1 220 1 59 1 352 1 109 1 
39 3 136 1 308 2 183 1 193 1 42 1 203 3 268 1 59 1 352 1 109 1 22 2 
324 1 366 2 3 1 109 2 
203 1 331 1 59 1 39 1 352 1 183 1 
203 2 359 1 56 1 59 1 136 1 39 2 352 1 109 1 193 1 183 1 
202 1 
203 1 59 1 136 1 39 1 352 1 109 1 193 1 183 1 
203 3 359 1 56 1 59 1 136 1 39 3 308 1 352 1 109 1 193 1 183 1 
269 1 109 1 14 1 178 1 
109 1 193 1 

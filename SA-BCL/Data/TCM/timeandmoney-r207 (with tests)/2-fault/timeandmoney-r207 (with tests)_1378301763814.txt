#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 3 63 1 276 2 97 1 174 2 244 1 281 2 309 1 133 2 107 4 135 1 79 1 159 2 81 9 52 9 25 1 361 1 211 5 143 2 184 1 269 1 58 2 34 1 272 1 215 1 60 6 257 1 190 1 
39 3 63 1 97 1 276 2 174 2 244 1 281 2 309 1 133 2 107 4 135 1 79 1 159 2 81 9 52 9 25 1 361 1 211 5 143 2 184 1 269 1 58 2 34 1 272 1 215 1 60 6 257 1 190 1 
39 4 63 1 97 1 276 2 174 2 244 1 281 2 309 1 133 2 107 5 135 1 79 1 159 2 81 10 52 10 25 1 361 1 211 6 143 2 184 1 269 1 58 2 34 1 272 1 215 1 60 7 257 1 190 1 
39 2 63 1 97 1 276 1 174 2 244 1 281 2 309 1 133 2 107 3 79 1 159 2 81 7 52 7 25 1 361 1 211 4 143 2 184 1 269 1 58 2 34 1 272 1 215 1 60 4 257 1 190 1 
39 1 159 1 81 4 97 1 276 2 52 4 25 1 211 3 143 1 281 1 309 1 133 1 58 1 107 2 34 1 215 1 60 3 135 1 
159 1 63 1 81 2 3 1 97 1 52 2 87 1 376 1 174 1 211 1 184 1 143 1 309 1 133 1 58 1 34 1 
39 1 159 2 81 3 97 1 52 3 174 1 211 2 309 1 269 1 58 2 107 1 34 1 60 1 
39 3 97 1 276 2 174 1 281 1 309 1 133 1 351 1 107 4 135 1 159 2 81 9 52 9 115 1 25 1 361 1 211 5 143 1 269 1 58 2 34 1 272 1 215 1 60 7 
39 3 97 1 276 2 174 1 281 1 309 1 133 1 351 1 107 4 135 1 159 2 81 9 52 9 115 1 25 1 361 1 211 5 143 1 269 1 58 2 34 1 272 1 215 1 60 7 
367 1 375 1 256 1 
315 2 375 1 7 1 
80 2 207 2 90 2 4 2 33 2 53 2 292 1 78 1 
1 1 4 2 193 2 344 1 194 1 278 1 154 1 218 2 349 1 11 2 106 1 284 1 246 1 108 1 179 1 77 1 265 1 354 1 78 1 206 1 313 1 80 2 111 1 207 2 291 2 53 3 292 1 335 1 362 1 90 2 232 1 380 1 341 1 33 3 121 1 36 1 168 2 
80 1 207 1 90 1 230 1 4 1 138 1 33 1 53 1 292 1 203 1 
4 1 137 1 374 1 53 1 375 1 8 1 9 1 304 1 263 1 245 1 342 1 33 1 256 1 203 1 
80 1 207 1 4 1 137 2 374 1 53 1 375 1 8 1 9 1 90 1 342 2 245 1 33 1 256 1 203 1 
164 1 82 1 137 1 342 1 271 1 
164 1 95 1 223 1 137 2 342 2 271 1 375 1 256 1 
164 1 137 1 342 1 
80 1 207 1 230 1 4 1 137 1 138 1 292 1 53 1 296 1 90 1 271 1 342 1 33 1 203 1 
375 1 
130 1 164 1 95 1 137 2 342 2 271 1 375 1 256 1 
259 1 95 1 137 5 126 1 6 1 160 1 375 1 336 2 164 2 104 1 105 2 201 2 150 1 235 1 270 1 271 2 342 5 332 1 256 1 
367 1 78 1 
80 1 207 1 4 2 53 2 85 1 90 1 33 2 109 1 78 2 
199 1 149 1 355 1 
111 1 193 1 53 1 218 1 335 1 295 1 362 1 349 1 380 1 33 1 108 1 179 1 36 1 168 1 78 1 206 1 
111 1 80 1 207 1 4 1 193 1 53 2 218 1 335 1 163 1 362 1 349 1 380 1 149 1 340 1 108 1 33 2 179 1 36 1 168 1 206 1 
80 3 90 1 207 3 4 3 340 1 33 3 53 3 78 1 
80 1 207 1 230 1 4 1 33 1 53 1 203 1 
80 1 207 1 90 1 4 1 33 1 53 1 85 1 203 1 109 1 
4 3 193 1 344 1 194 1 278 1 154 1 218 1 8 1 9 1 349 1 11 1 245 1 284 1 246 1 108 1 179 1 265 1 203 1 354 1 78 1 206 1 111 1 80 3 207 3 137 1 291 2 374 1 85 1 53 4 292 1 27 1 335 1 163 1 362 1 252 1 380 1 90 2 341 1 340 1 342 1 33 4 121 1 36 1 168 1 
80 1 207 1 308 1 4 2 340 1 33 2 53 2 78 1 304 1 
80 3 207 3 4 3 137 1 374 1 85 1 53 3 375 1 330 1 27 1 8 1 163 1 9 1 90 1 340 2 342 1 245 1 33 3 203 1 
80 2 207 2 4 2 85 1 53 2 90 1 199 1 149 1 340 1 33 2 
111 1 193 1 53 1 218 1 335 1 349 1 362 1 380 1 33 1 108 1 179 1 36 1 168 1 78 1 206 1 
357 1 193 1 53 1 218 1 250 1 335 1 349 1 362 1 380 1 33 1 108 1 36 1 168 1 78 1 206 1 
278 1 196 1 177 1 11 4 106 2 199 2 282 1 202 1 246 1 284 2 265 1 353 1 354 1 355 2 49 1 268 1 371 1 291 2 183 1 140 1 32 1 149 2 341 1 121 1 
80 1 207 1 4 1 33 1 53 1 203 1 9 1 378 1 
18 1 80 4 207 4 4 5 53 5 85 1 68 1 163 1 304 1 90 1 308 1 340 2 33 5 78 1 
80 2 207 2 230 1 4 2 33 2 53 2 203 1 378 1 
208 1 273 1 
208 1 273 1 
225 1 54 1 
225 1 54 1 
225 1 54 1 
20 1 208 1 273 1 
208 1 173 1 273 1 
147 1 208 2 225 1 226 1 54 1 273 2 
20 1 208 1 273 1 
20 1 208 1 273 1 
208 1 100 1 273 1 
208 1 100 1 273 1 
208 1 100 1 273 1 
238 2 208 2 83 1 137 2 171 1 24 1 318 1 375 1 56 1 369 2 157 1 119 2 342 2 166 3 226 1 180 2 312 2 16 1 273 2 
181 1 19 1 80 2 229 1 207 2 238 1 4 2 83 1 208 1 137 1 173 1 53 2 28 1 44 1 369 1 119 1 342 1 166 1 59 1 33 2 285 1 180 1 273 1 78 1 
143 1 281 1 133 1 
143 1 133 1 87 1 
175 1 281 2 133 3 98 1 87 1 204 1 
175 1 281 1 133 2 352 1 87 1 204 1 
175 2 281 1 133 2 87 1 204 1 
124 1 170 2 192 1 95 1 241 2 64 1 153 1 302 1 7 1 44 1 177 1 105 1 201 1 202 1 285 1 353 1 290 2 268 1 315 3 137 5 160 2 375 2 28 1 88 1 336 1 164 1 235 1 342 5 271 4 270 3 381 1 256 1 
365 1 170 6 192 1 259 1 95 1 64 2 153 3 302 2 7 3 177 3 105 2 201 2 202 3 285 4 311 1 266 1 353 3 290 6 268 3 82 5 315 9 137 9 160 6 375 5 336 2 164 6 235 1 342 9 271 7 270 8 35 5 323 1 256 1 189 1 217 1 
124 1 170 2 259 1 64 1 241 1 153 1 302 1 7 2 177 1 105 1 201 1 202 1 285 1 353 1 290 2 268 1 137 3 315 4 160 2 375 3 336 1 271 2 342 3 270 3 381 1 256 1 
365 1 124 1 170 4 259 1 64 1 241 2 153 2 302 1 7 3 177 2 105 1 201 1 202 2 285 2 266 1 353 2 290 4 268 2 315 7 137 4 160 4 375 4 336 1 342 4 270 5 271 3 381 1 256 1 323 1 
367 1 362 1 277 1 
362 1 176 1 
247 1 
362 1 335 1 
362 3 118 1 283 1 277 2 335 1 36 1 
362 1 335 1 36 1 
362 1 155 1 
0 1 172 2 101 1 156 1 177 2 11 9 106 5 282 3 284 4 353 2 26 1 333 2 294 1 89 1 183 4 338 1 185 1 186 1 
0 1 172 2 101 3 156 1 177 2 11 9 106 5 282 3 284 4 353 2 26 1 333 2 294 1 89 1 183 6 338 1 185 1 186 1 
0 1 172 2 101 1 156 1 177 2 11 9 106 5 282 3 284 4 158 1 353 2 26 1 333 2 294 1 89 1 183 4 338 1 185 1 186 1 
0 1 260 1 153 3 172 3 101 7 156 2 69 1 177 5 11 35 106 18 282 6 202 3 246 1 284 17 134 4 354 1 353 5 23 1 268 3 50 1 291 2 114 1 26 1 333 3 294 2 89 1 183 13 338 1 379 3 185 1 145 1 341 1 186 2 121 1 122 1 
0 1 152 1 172 2 101 2 156 1 177 2 11 11 106 6 282 4 246 2 284 5 353 2 354 2 291 4 26 1 333 2 294 1 183 6 31 1 338 1 185 1 341 2 186 1 121 2 122 1 
193 1 97 1 98 1 218 1 174 1 43 1 281 1 309 1 132 1 12 1 71 1 133 2 75 1 108 1 15 1 289 1 159 1 81 2 52 2 87 1 211 1 143 1 339 1 144 1 380 1 58 1 34 1 60 1 188 1 168 1 
193 1 98 1 218 1 174 1 43 1 281 1 309 1 12 1 71 1 133 2 331 1 75 1 108 1 15 1 248 1 289 1 159 1 81 3 52 3 87 1 210 1 211 1 143 1 339 1 380 1 58 1 34 1 60 2 188 1 168 1 
193 1 98 1 218 1 174 1 281 1 309 1 12 1 71 1 133 2 331 1 75 1 108 1 15 1 289 1 81 2 52 2 87 1 210 1 211 1 143 1 380 1 34 1 60 2 188 1 168 1 
289 2 159 1 81 1 193 1 127 1 373 1 52 1 218 1 335 1 174 2 321 1 362 1 380 1 212 1 58 1 75 2 76 1 108 1 15 2 38 1 168 1 248 1 206 1 
193 1 97 1 98 1 218 1 174 1 43 1 281 1 132 1 12 1 71 1 133 2 331 1 75 1 108 1 15 1 289 1 159 1 81 1 52 1 87 1 143 1 339 1 380 1 58 1 188 1 168 1 
46 1 
125 2 4 1 64 1 66 1 218 2 7 2 8 1 9 1 304 1 128 1 74 2 13 2 263 1 14 1 315 2 137 5 84 2 86 1 319 2 321 1 362 1 234 1 364 1 235 1 270 2 33 1 324 1 38 1 151 1 95 3 193 2 239 1 327 1 275 1 242 4 197 2 105 1 201 1 245 1 108 1 203 1 206 2 374 1 160 2 53 1 375 2 293 2 335 1 336 1 164 6 380 1 253 1 342 5 256 1 168 2 
125 1 4 1 239 1 95 1 66 1 242 2 8 1 9 1 304 1 128 1 130 1 263 1 245 1 14 1 203 1 137 3 374 1 53 1 164 2 364 1 342 3 33 1 
4 1 239 1 95 1 66 1 242 3 8 1 9 1 197 1 304 1 128 1 130 1 263 1 245 1 14 1 203 1 137 3 374 1 53 1 375 1 164 1 364 1 342 3 33 1 256 1 
125 1 95 1 4 1 239 1 66 1 242 3 8 1 9 1 197 1 304 1 128 1 130 1 263 1 245 1 14 1 203 1 137 3 374 1 53 1 375 1 319 1 164 2 364 1 342 3 33 1 256 1 
125 4 4 1 66 1 8 1 346 1 7 2 9 1 304 1 128 1 130 1 13 2 74 2 263 1 14 1 182 1 137 5 84 2 86 1 139 1 319 4 233 1 364 1 235 1 270 1 33 1 95 3 239 1 242 6 197 4 105 1 201 1 245 1 203 1 374 1 53 1 160 1 375 5 293 2 116 1 336 1 164 7 253 1 342 5 256 5 
125 2 4 1 66 1 8 1 7 2 9 1 304 1 128 1 13 2 74 2 263 1 14 1 137 4 315 2 84 2 86 1 319 2 364 1 235 1 270 1 33 1 324 1 239 1 95 2 242 4 197 2 105 1 201 1 245 1 203 1 374 1 53 1 160 1 375 2 293 2 336 1 164 4 253 1 342 4 256 1 
125 2 95 2 4 1 239 1 66 1 242 4 7 2 346 1 8 1 197 2 9 1 304 1 128 1 105 1 74 2 13 2 201 1 263 1 245 1 14 1 203 1 137 4 84 2 374 1 160 1 86 1 53 1 375 1 293 2 336 1 139 1 116 1 319 2 164 4 253 1 364 1 235 1 270 1 342 4 33 1 256 1 
125 2 95 2 4 1 239 1 66 1 242 4 7 2 346 1 8 1 197 2 9 1 304 1 128 1 105 1 74 2 13 2 201 1 263 1 245 1 14 1 203 1 137 4 84 2 374 1 160 1 86 1 53 1 375 1 293 2 336 1 139 1 116 1 319 2 164 4 253 1 364 1 235 1 270 1 342 4 33 1 256 1 
125 2 274 1 95 2 4 1 239 1 66 1 300 1 242 4 346 1 8 1 197 2 9 1 304 1 128 1 105 1 201 1 263 1 245 1 14 1 203 1 227 2 315 2 137 4 84 2 374 1 160 1 53 1 375 1 293 2 336 1 319 2 142 2 164 4 253 1 364 1 235 1 270 1 342 4 255 1 33 1 256 1 
125 3 95 2 4 1 239 1 66 1 242 5 7 2 346 1 8 1 9 1 197 3 304 1 128 1 105 1 74 2 13 2 201 1 263 1 245 1 14 1 203 1 137 4 84 2 374 1 160 1 86 1 53 1 375 1 293 2 336 1 116 1 139 1 319 3 164 5 253 1 233 1 364 1 235 1 270 1 342 4 33 1 256 1 
125 3 95 2 4 1 239 1 66 1 242 5 7 2 346 1 8 1 9 1 197 3 304 1 128 1 105 1 74 2 13 2 201 1 263 1 245 1 14 1 203 1 137 4 84 2 374 1 160 1 86 1 53 1 375 1 293 2 336 1 116 1 139 1 319 3 164 5 253 1 233 1 364 1 235 1 270 1 342 4 33 1 256 1 
125 2 4 1 66 1 8 1 9 1 304 1 128 1 263 1 14 1 227 2 137 4 315 2 84 2 142 2 319 2 364 1 235 1 270 1 33 1 324 1 239 1 95 2 242 4 197 2 105 1 201 1 245 1 203 1 374 1 53 1 160 1 375 1 293 2 336 1 164 4 253 1 342 4 255 1 256 1 
291 2 172 1 278 1 333 1 26 1 183 1 140 1 367 1 185 1 282 1 341 1 246 1 265 1 121 1 354 1 
153 2 278 2 154 1 101 1 177 2 11 14 282 1 106 8 199 4 202 1 370 1 284 6 246 2 134 3 265 1 354 2 355 11 353 1 78 1 313 1 287 1 314 1 23 1 268 2 291 4 183 2 379 3 145 1 149 11 341 2 237 1 167 1 121 2 
193 1 4 1 278 1 218 1 154 1 243 1 349 1 11 2 199 1 106 1 108 1 246 1 284 1 179 1 265 1 354 1 78 1 206 1 313 1 111 1 80 1 207 1 291 2 53 2 249 1 335 1 295 1 163 1 362 1 380 1 340 1 341 1 322 1 33 2 167 1 36 1 121 1 168 1 
0 1 4 1 172 2 218 1 305 2 349 2 131 2 177 4 11 22 179 2 265 3 354 3 355 6 353 4 78 1 313 1 80 1 268 2 316 2 26 1 360 1 183 6 362 2 185 1 149 6 33 3 36 2 193 1 153 2 194 2 278 3 154 1 101 1 199 6 106 11 282 5 202 2 284 11 246 3 108 2 203 1 206 1 111 2 207 1 291 6 53 3 333 2 55 1 377 1 335 2 163 1 338 1 380 2 341 3 340 1 167 1 121 3 168 1 123 2 
4 1 193 8 96 1 5 1 278 2 218 7 154 1 11 2 106 1 331 1 108 2 246 2 264 1 284 1 77 2 265 2 354 2 206 2 313 1 80 1 112 1 358 1 207 1 291 4 53 1 231 1 29 1 335 2 140 1 321 1 362 3 144 1 380 2 340 1 341 2 33 1 121 2 168 8 38 1 
4 1 153 1 278 1 177 1 222 1 11 3 282 1 199 1 106 1 202 1 246 1 284 2 265 1 355 1 354 1 353 1 80 1 207 1 268 1 291 2 85 1 53 1 183 1 90 1 149 1 341 1 33 1 167 1 121 1 
268 1 291 2 278 1 183 1 101 1 140 1 32 1 177 1 11 2 199 1 149 1 106 2 341 1 246 1 265 1 121 1 355 1 354 1 
371 1 291 2 278 1 183 1 140 1 11 2 282 1 199 1 149 1 341 1 202 1 246 1 284 2 265 1 121 1 355 1 354 1 353 1 
268 1 153 1 291 2 278 1 183 2 101 1 140 1 177 1 11 4 282 1 199 2 149 2 106 2 202 1 341 1 284 2 246 1 265 1 121 1 353 1 355 2 354 1 
268 1 291 2 278 1 183 1 101 1 32 1 177 1 11 2 199 1 149 1 106 2 341 1 264 1 246 1 265 1 121 1 355 1 354 1 
371 1 291 2 278 1 183 1 11 2 282 1 199 1 149 1 341 1 202 1 264 1 246 1 284 2 265 1 121 1 355 1 354 1 353 1 
268 1 153 1 291 2 278 1 183 2 101 1 177 1 11 4 282 1 199 2 149 2 106 2 202 1 341 1 284 2 264 1 246 1 265 1 121 1 353 1 355 2 354 1 
268 1 153 1 291 2 278 1 183 2 101 1 177 1 11 4 282 1 199 2 149 2 106 2 202 1 341 1 284 2 246 1 265 1 121 1 353 1 355 2 354 1 
193 1 194 1 278 1 218 1 154 1 349 1 11 2 106 1 108 1 246 1 284 1 179 1 265 1 354 1 78 1 206 1 313 1 111 1 291 2 53 1 335 1 362 1 380 1 341 1 33 1 36 1 121 1 168 1 
193 1 278 1 218 1 154 1 349 1 11 2 106 1 108 1 246 1 284 1 265 1 354 1 78 1 206 1 313 1 357 1 291 2 53 1 250 1 334 1 335 1 362 1 380 1 341 1 33 1 36 1 121 1 168 1 
268 1 153 1 291 2 278 1 183 2 101 1 177 1 11 4 282 1 199 2 149 2 106 2 202 1 341 1 284 2 246 1 167 1 265 1 121 1 353 1 355 2 354 1 
193 1 153 1 194 1 278 1 218 1 101 1 349 1 177 1 131 1 11 4 282 1 199 2 106 2 202 1 284 2 108 1 246 1 179 1 265 1 353 1 355 2 354 1 111 1 268 1 291 2 53 1 183 2 335 1 362 1 380 1 144 1 149 2 341 1 33 1 36 1 121 1 168 1 
4 1 153 1 278 1 101 1 177 1 220 1 11 3 106 2 199 1 202 1 284 1 246 1 265 1 353 1 354 1 355 1 80 1 207 1 268 1 291 2 85 1 53 1 183 1 90 1 149 1 341 1 33 1 167 1 121 1 
325 1 169 1 153 4 172 1 67 1 279 1 366 4 101 4 102 1 177 4 11 36 282 4 73 1 106 17 224 2 202 4 246 3 284 19 134 4 354 3 353 4 113 1 359 1 23 3 268 4 51 1 291 6 333 1 26 1 183 8 337 1 117 1 31 1 379 3 185 1 145 1 57 1 341 3 121 3 216 1 122 1 
325 1 169 1 153 4 172 1 67 1 279 1 366 4 101 3 102 1 177 4 11 33 282 4 73 1 106 17 224 2 202 3 246 4 284 16 134 4 354 4 353 3 113 1 359 1 23 3 268 4 51 1 291 8 333 1 26 1 183 7 337 1 117 1 31 1 379 3 185 1 145 1 57 1 341 4 121 4 216 1 122 2 
325 1 153 7 172 1 279 1 366 4 101 7 102 1 177 7 11 47 282 7 73 1 106 24 224 1 202 7 370 2 246 2 284 23 134 4 354 2 353 7 113 1 359 1 23 2 268 7 51 1 291 4 333 1 26 1 183 14 337 1 117 1 31 1 379 4 185 1 145 2 57 1 341 2 121 2 122 1 216 1 
169 1 153 3 279 1 366 2 101 3 102 1 177 3 11 19 282 3 73 1 106 9 224 1 202 3 246 2 284 10 134 2 354 2 353 3 113 2 359 1 23 1 268 3 291 4 183 6 31 1 363 1 379 1 145 1 341 2 121 2 
325 1 153 3 279 1 366 4 101 2 102 1 177 3 11 26 282 2 73 2 106 14 224 2 202 2 284 12 246 3 134 2 353 2 354 3 113 1 359 1 23 2 268 3 51 1 291 6 183 4 337 1 117 1 31 1 379 2 57 1 341 3 121 3 216 1 122 2 
369 1 146 1 238 1 119 1 208 1 171 1 24 1 226 1 180 1 273 1 
181 1 173 1 
368 1 369 1 238 1 119 1 208 1 42 1 301 1 180 1 273 1 
238 1 83 1 208 1 137 1 171 1 24 1 375 1 56 1 369 1 157 1 119 1 342 1 166 2 226 1 180 1 312 1 16 1 273 1 
238 1 83 1 208 1 137 1 171 1 24 1 375 1 56 1 369 1 157 1 119 1 342 1 166 2 226 1 180 1 312 1 16 1 273 1 
238 1 83 1 208 1 137 1 171 1 24 1 375 1 56 1 369 1 157 1 119 1 342 1 166 2 226 1 180 1 312 1 16 1 273 1 
20 1 147 1 161 1 
20 1 147 1 161 1 
100 1 162 1 
147 1 100 1 162 1 
229 1 59 1 
238 1 4 2 173 1 44 1 369 1 285 1 312 1 180 1 78 1 267 1 19 1 181 1 80 2 229 1 207 2 208 1 137 1 53 2 28 1 56 1 119 1 342 1 271 1 166 1 33 2 59 1 273 1 
20 1 161 1 
147 1 100 1 162 1 
193 2 4 2 96 1 278 1 154 1 218 2 129 1 306 1 11 2 106 1 108 1 246 1 284 1 77 2 265 1 354 1 313 1 372 1 291 2 53 2 231 1 335 1 362 1 380 1 341 1 33 2 167 1 121 1 382 1 168 2 37 1 
289 1 193 2 94 1 98 1 87 1 218 2 43 1 143 1 281 1 380 1 144 1 221 1 103 1 71 1 133 2 331 1 108 1 188 1 168 2 
289 1 22 1 193 1 98 1 87 1 218 1 43 1 143 1 281 1 103 1 380 1 71 1 133 2 331 1 108 1 188 1 168 1 
289 1 193 1 94 1 218 1 335 1 321 1 362 1 380 1 165 1 212 1 108 1 168 1 38 1 206 1 
289 1 193 1 94 1 98 1 87 1 218 1 43 1 143 1 281 1 380 1 221 1 103 1 71 1 133 2 331 1 108 1 188 1 168 1 
310 1 
367 1 126 1 270 1 6 1 160 1 375 1 256 1 
95 1 7 1 105 1 13 1 201 1 74 1 315 1 137 1 160 1 86 1 375 2 336 1 164 1 235 1 270 1 342 1 256 1 
62 2 2 2 170 6 64 2 126 1 6 1 218 3 303 2 8 2 7 6 305 2 348 1 176 3 177 2 262 1 353 2 136 2 268 2 137 5 315 12 320 1 362 10 144 1 235 4 270 9 36 3 193 3 95 3 275 1 153 2 277 2 329 2 195 2 155 2 105 4 201 4 202 2 108 3 206 1 290 6 160 8 375 8 335 3 336 4 118 1 164 5 380 4 213 2 342 5 120 2 298 1 343 1 256 2 168 3 
325 1 2 1 170 5 95 1 64 1 275 1 153 2 329 2 280 1 7 3 177 2 105 2 201 2 202 2 134 1 353 2 356 1 290 5 23 1 268 2 137 1 315 6 51 1 160 5 375 5 337 1 336 2 164 1 379 1 57 1 235 2 342 1 270 8 256 2 216 1 
0 1 2 1 4 1 172 1 329 2 177 2 105 1 201 1 203 1 353 1 80 1 207 1 230 1 137 1 138 1 53 1 160 2 292 1 333 1 336 1 116 1 296 1 338 1 90 1 235 1 342 1 270 2 33 1 
126 1 6 1 160 1 375 1 336 1 105 1 201 1 235 1 270 1 256 1 
2 1 170 5 290 5 268 2 315 10 153 2 160 5 329 2 375 5 7 5 305 1 177 2 202 2 270 5 353 2 
164 1 95 1 137 1 342 1 375 1 256 1 
151 1 259 1 193 4 95 2 64 2 275 2 218 4 45 1 105 2 201 2 262 1 108 1 206 2 137 3 160 2 335 1 336 2 321 1 362 1 164 4 380 1 254 1 234 1 235 1 270 2 342 3 343 2 168 4 38 1 
193 1 4 2 344 1 194 1 278 1 154 1 218 1 349 1 11 1 284 1 246 1 108 1 179 1 265 1 354 1 78 1 206 1 80 2 111 1 207 2 291 2 53 3 292 1 335 1 362 1 90 2 380 1 341 1 33 3 36 1 121 1 168 1 
170 2 290 2 315 4 64 1 275 1 160 2 375 4 7 2 336 1 105 1 201 1 186 1 235 1 270 1 256 2 
288 1 119 1 180 1 
328 1 119 1 171 1 59 1 180 1 
288 1 119 1 180 1 
288 1 119 1 180 1 
258 1 119 1 180 1 
258 1 119 1 180 1 
258 1 119 1 180 1 
119 1 180 1 
208 1 273 1 
0 1 172 2 101 1 177 2 11 10 106 5 282 3 284 5 246 1 134 1 353 2 354 1 23 1 291 2 26 1 333 2 183 4 337 1 31 1 338 1 379 1 185 1 341 1 121 1 
0 1 153 1 172 2 101 2 177 3 11 13 282 3 106 7 284 6 246 2 134 2 353 2 354 2 23 1 268 1 291 4 333 2 26 1 183 5 337 1 31 1 338 1 379 1 185 1 91 1 145 1 341 2 121 2 
0 1 325 1 153 2 172 2 101 2 177 4 11 21 106 10 282 4 202 2 284 11 246 3 134 1 354 3 353 4 23 1 268 2 51 1 291 6 333 2 26 1 183 6 337 1 31 1 338 1 379 1 185 1 91 1 57 1 341 3 121 3 122 1 216 1 
0 1 325 1 153 2 172 2 101 4 177 4 11 19 106 11 282 4 202 1 284 8 246 3 134 1 354 3 353 3 23 1 268 2 51 1 291 6 333 2 26 1 183 8 337 1 31 1 338 1 379 1 185 1 91 1 57 1 341 3 121 3 122 1 216 1 
0 1 172 2 101 1 177 2 11 10 106 5 282 3 284 5 246 1 134 1 353 2 354 1 23 1 291 2 26 1 333 2 183 4 337 1 31 1 338 1 379 1 185 1 341 1 121 1 
325 1 153 2 101 1 177 2 11 12 106 6 282 1 202 2 284 6 246 1 134 1 354 1 353 2 23 1 268 2 51 1 291 2 183 2 337 1 31 1 379 1 57 1 341 1 121 1 216 1 
0 1 325 1 153 2 172 2 101 2 177 4 11 20 106 11 282 4 202 1 284 9 246 4 134 1 354 4 353 3 23 1 268 2 51 1 291 8 333 2 26 1 183 6 337 1 31 1 338 1 379 1 185 1 91 1 57 1 341 4 121 4 216 1 122 2 
325 1 169 1 153 3 101 3 177 3 11 16 106 9 282 3 202 2 284 7 246 4 134 1 354 4 353 2 23 1 268 3 51 1 291 8 183 6 337 1 31 1 379 1 57 1 341 4 121 4 216 1 122 2 
0 1 172 3 26 1 333 3 183 6 101 3 338 1 177 1 185 1 11 5 106 2 282 3 284 3 353 1 
0 1 325 1 169 1 153 2 172 2 101 2 177 4 11 20 106 11 282 4 202 1 284 9 246 4 134 1 354 4 353 3 23 1 268 2 51 1 291 8 333 2 26 1 183 6 337 1 31 1 338 1 379 1 185 1 57 1 341 4 121 4 216 1 122 2 
0 1 172 2 101 3 177 2 11 12 282 3 106 6 246 2 284 6 354 2 353 2 291 4 333 2 26 1 183 6 338 1 185 1 341 2 121 2 122 1 
367 1 185 1 282 1 172 1 333 1 26 1 183 1 
268 1 153 1 291 2 183 2 101 1 177 1 91 1 11 4 282 1 106 2 202 1 341 1 284 2 246 1 121 1 353 1 354 1 
23 1 268 1 153 1 101 1 183 2 379 1 177 1 145 1 11 7 282 1 106 3 202 1 284 4 134 2 353 1 
0 1 153 2 172 2 101 2 177 4 11 20 106 10 282 4 202 2 284 10 370 1 246 1 134 2 353 4 354 1 268 2 291 2 333 2 26 1 183 6 338 1 379 2 185 1 145 1 341 1 237 1 121 1 122 1 
11 1 284 1 134 1 
379 1 11 1 106 1 
268 1 153 1 291 2 101 1 183 3 305 1 177 1 91 1 11 6 106 3 282 2 341 1 202 1 246 1 284 3 121 1 354 1 353 1 
325 1 153 2 101 1 177 2 11 12 106 6 282 1 202 2 284 6 246 1 134 1 354 1 353 2 23 1 268 2 51 1 291 2 183 2 337 1 31 1 379 1 57 1 341 1 121 1 216 1 
0 1 177 1 11 6 282 1 106 3 172 1 284 3 333 1 101 1 183 2 353 1 
291 2 172 1 333 1 26 1 101 1 183 2 219 1 185 1 11 3 106 1 282 1 341 1 284 2 246 1 121 1 122 1 354 1 
0 1 291 2 172 2 333 2 183 5 101 2 31 1 338 1 177 2 11 10 282 3 106 5 341 1 246 1 284 5 121 1 354 1 353 2 
268 1 291 2 101 1 183 1 31 1 177 1 11 2 106 2 341 1 246 1 121 1 354 1 
268 1 153 1 291 2 183 2 101 1 31 1 177 1 11 4 282 1 106 2 202 1 341 1 284 2 246 1 121 1 353 1 354 1 
169 1 291 6 172 1 333 1 219 1 183 2 101 1 31 1 11 3 282 1 106 1 341 3 284 2 246 3 121 3 122 1 354 3 
0 1 169 1 153 2 172 2 101 4 69 1 177 4 11 26 282 4 106 13 202 2 284 13 246 4 134 3 354 4 353 4 23 1 268 2 50 1 291 8 114 1 333 2 26 1 183 8 31 1 338 1 379 3 185 1 91 1 341 4 121 4 122 1 
297 1 308 1 4 1 33 1 53 1 78 1 304 1 
4 1 209 1 53 1 30 1 304 1 297 1 308 1 148 1 33 1 92 1 205 1 78 1 
367 1 362 1 380 1 193 1 108 1 218 1 335 1 38 1 168 1 321 1 206 1 
80 1 111 1 207 1 4 1 193 1 53 2 218 1 335 1 362 1 349 1 380 1 340 1 33 2 108 1 36 1 168 1 78 1 206 1 
80 1 111 1 207 2 136 1 4 2 193 1 53 2 218 1 155 1 335 2 9 1 362 3 349 1 380 1 340 1 245 1 33 2 108 1 203 1 343 1 36 2 168 1 78 1 
193 2 4 2 218 2 155 1 9 1 349 1 245 1 108 1 203 1 17 1 78 1 80 1 207 2 136 1 53 2 250 1 335 2 362 3 380 1 340 1 33 2 343 1 36 2 168 2 
193 3 277 1 218 3 155 1 8 1 176 1 200 1 108 1 17 1 206 1 228 1 136 1 137 2 375 1 335 1 362 4 164 1 380 1 342 2 343 1 256 1 36 1 168 3 
136 1 193 3 137 2 277 1 375 1 218 3 303 1 155 1 8 1 335 1 176 1 362 4 164 1 380 1 342 2 108 1 256 1 343 1 17 1 36 1 168 3 206 1 
112 1 380 1 193 1 108 1 218 1 168 1 
191 1 112 1 358 1 193 7 5 1 345 1 231 1 218 6 29 1 335 2 118 1 362 3 144 1 380 3 72 1 331 1 108 2 77 1 36 1 168 7 206 2 
0 1 4 1 172 2 218 1 349 1 131 1 177 2 11 8 179 1 265 2 354 2 353 2 78 1 80 1 316 1 26 1 183 4 362 1 144 1 185 1 33 2 36 1 193 1 194 1 278 2 101 1 282 3 106 4 246 2 108 1 284 4 203 1 111 1 207 1 291 4 53 2 333 2 55 1 335 1 338 1 380 1 341 2 340 1 167 1 382 1 121 2 168 1 
62 1 193 1 95 1 126 1 6 1 277 1 218 1 303 1 8 1 176 1 105 2 201 2 262 1 206 1 137 3 160 1 375 1 336 2 362 2 164 2 235 2 270 1 342 3 271 1 213 1 120 1 256 1 168 1 
112 1 193 2 277 1 218 2 335 1 320 1 118 1 362 2 144 1 380 2 108 1 36 1 168 2 
193 4 218 4 335 1 321 1 362 1 380 1 144 1 108 1 299 1 17 1 168 4 38 1 206 1 
193 2 41 1 240 1 345 1 218 2 335 1 362 1 380 2 72 1 108 1 343 1 47 1 36 1 168 2 
143 1 380 1 133 1 193 1 108 1 87 1 218 1 188 1 168 1 206 1 
362 1 306 1 380 1 144 1 193 2 331 1 108 1 231 1 218 2 335 1 168 2 
358 1 193 5 218 4 231 1 29 1 335 2 321 1 362 3 144 1 380 2 108 2 343 1 299 1 38 1 168 5 206 1 
326 1 358 1 193 5 218 4 231 1 335 2 321 1 362 3 144 1 380 2 108 2 343 1 299 1 38 1 168 5 206 1 
80 1 207 1 4 1 193 1 53 2 218 1 250 1 335 1 362 1 349 1 380 1 340 1 33 2 108 1 36 1 168 1 78 1 206 1 
191 1 193 1 345 1 218 1 335 1 118 1 362 1 380 2 72 1 108 1 343 1 36 1 168 1 
350 1 178 1 261 1 214 1 78 1 
137 2 261 2 374 1 375 1 27 1 8 1 9 1 141 1 350 2 178 1 245 1 271 1 342 2 187 1 214 2 256 1 203 1 48 1 78 1 
4 1 372 1 53 1 129 1 350 1 178 1 33 1 214 1 37 1 
178 1 187 1 141 1 
367 1 309 1 34 1 211 1 
159 1 309 1 81 1 58 1 34 1 52 1 211 1 
52 1 15 1 174 1 
159 1 81 3 97 1 52 3 211 1 70 1 184 2 309 1 236 1 58 1 34 1 286 1 
159 1 309 1 81 2 58 1 276 1 34 1 52 2 60 1 211 1 
143 1 159 1 281 1 81 1 133 1 107 1 58 1 97 1 52 1 215 1 211 1 
159 1 81 1 58 1 97 1 34 1 52 1 211 1 
159 1 309 1 81 1 58 1 97 1 34 2 52 1 
159 2 81 2 65 1 97 1 52 2 211 1 58 2 34 1 93 1 61 1 
39 1 159 1 81 3 97 1 52 3 361 1 211 2 309 1 58 1 107 1 34 1 272 1 60 2 
159 1 81 2 97 1 52 2 98 1 87 1 211 1 10 1 143 1 281 1 309 1 133 2 58 1 34 1 60 1 
39 1 159 2 81 4 97 1 276 1 52 4 211 2 309 1 58 2 107 1 34 1 60 2 135 1 
159 1 309 1 81 1 58 1 97 1 34 1 52 1 211 1 
39 1 159 1 81 4 52 4 99 1 211 3 184 1 70 1 309 2 58 1 107 1 34 2 286 1 60 2 
40 1 159 1 81 2 97 1 52 2 115 1 211 1 198 1 309 1 58 1 34 1 60 1 
159 1 81 3 97 1 52 3 211 1 70 1 184 2 307 1 309 1 58 1 34 1 286 2 
21 1 251 1 211 2 110 2 
347 1 159 1 81 1 58 1 97 1 52 1 
159 1 309 1 81 2 58 1 97 1 34 1 52 2 60 1 361 1 211 1 
317 1 
159 1 309 1 81 1 58 1 97 1 34 1 52 1 211 1 
184 1 159 1 309 1 81 3 58 1 97 1 34 1 52 3 60 1 361 1 211 1 
39 1 107 1 99 1 211 1 
34 1 211 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 279 327 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
298 2 333 5 229 2 26 1 64 1 334 1 98 1 100 1 7 2 134 2 68 1 141 1 142 6 112 1 51 1 241 1 369 9 348 9 75 2 246 1 326 2 78 4 350 3 269 2 270 1 329 1 272 1 150 1 
298 2 333 5 229 2 26 1 64 1 334 1 98 1 100 1 7 2 134 2 68 1 141 1 142 6 112 1 51 1 241 1 369 9 348 9 75 2 246 1 326 2 78 4 350 3 269 2 270 1 329 1 272 1 150 1 
298 2 333 6 229 2 26 1 64 1 334 1 98 1 100 1 7 2 134 2 68 1 141 1 142 7 112 1 51 1 241 1 369 10 348 10 75 2 246 1 326 2 78 5 350 4 269 2 270 1 329 1 272 1 150 1 
298 2 333 4 229 2 26 1 64 1 334 1 98 1 100 1 7 1 134 2 141 1 142 4 112 1 51 1 241 1 369 7 348 7 75 2 246 1 326 2 78 3 350 2 269 2 270 1 329 1 272 1 150 1 
333 3 369 4 229 1 64 1 75 1 348 4 326 1 7 2 134 1 78 2 68 1 350 1 269 1 141 1 142 3 329 1 272 1 51 1 
298 1 333 1 369 2 75 1 348 2 318 1 100 1 326 1 134 1 269 1 141 1 216 1 329 1 71 1 112 1 272 1 
298 1 333 2 369 3 26 1 75 2 348 3 326 2 78 1 350 1 141 1 142 1 329 1 272 1 
298 1 333 5 229 1 26 1 64 1 7 2 134 1 68 1 141 1 142 7 51 1 238 1 369 9 348 9 75 2 246 1 326 2 78 4 350 3 269 1 56 1 270 1 329 1 272 1 
298 1 333 5 229 1 26 1 64 1 7 2 134 1 68 1 141 1 142 7 51 1 238 1 369 9 348 9 75 2 246 1 326 2 78 4 350 3 269 1 56 1 270 1 329 1 272 1 
144 1 96 1 276 1 
215 1 276 1 154 2 
179 1 86 2 122 2 5 2 87 2 169 2 118 1 132 2 
128 1 207 1 129 2 179 1 2 1 27 1 46 1 6 1 5 3 132 2 210 1 9 1 105 1 359 1 70 1 320 1 139 1 109 1 236 1 322 2 72 1 162 2 16 1 167 1 169 2 118 1 221 1 349 1 202 2 54 1 22 2 86 2 122 2 251 1 380 1 87 3 90 1 
179 1 197 1 86 1 122 1 5 1 282 1 87 1 169 1 361 1 132 1 
197 1 96 1 276 1 5 1 132 1 172 1 158 1 247 1 211 1 203 1 87 1 261 1 52 1 43 1 
197 1 96 1 276 1 5 1 169 1 132 1 247 2 211 2 203 1 86 1 122 1 87 1 261 1 52 1 43 1 
223 1 211 1 29 1 186 1 247 1 
223 1 211 2 340 1 96 1 276 1 29 1 156 1 247 2 
223 1 211 1 247 1 
179 1 197 1 5 1 29 1 169 1 132 1 247 1 211 1 106 1 86 1 122 1 282 1 87 1 361 1 
276 1 
223 1 211 2 340 1 96 1 275 1 276 1 29 1 247 2 
262 2 35 1 299 1 96 1 276 1 4 1 28 2 29 2 81 1 247 5 211 5 223 2 340 1 21 2 235 1 376 1 379 1 217 1 225 1 
207 1 129 1 5 2 169 1 132 1 9 1 201 1 202 1 54 1 139 1 236 1 40 1 122 1 251 1 380 1 87 2 303 1 90 1 72 1 162 1 
144 1 118 1 
18 1 5 2 170 1 169 1 132 2 118 2 86 1 122 1 87 2 
40 1 313 1 125 1 
129 1 207 1 317 1 5 1 118 1 9 1 202 1 54 1 139 1 236 1 251 1 87 1 380 1 72 1 90 1 162 1 
18 1 5 5 169 4 132 5 118 1 172 1 201 1 32 1 342 1 86 1 310 1 122 4 87 5 303 2 
197 1 122 2 5 2 155 1 282 1 87 2 169 2 132 2 
86 1 122 3 5 3 87 3 303 1 169 3 118 1 132 3 
197 1 122 1 5 1 282 1 87 1 169 1 132 1 
197 1 18 1 86 1 122 1 5 1 87 1 170 1 169 1 132 1 
206 1 128 1 207 1 129 1 179 1 2 1 27 1 46 1 6 1 5 4 132 3 9 1 211 1 320 1 139 1 109 1 236 1 303 1 322 1 72 1 261 1 52 1 162 1 240 1 16 1 197 1 18 1 167 1 169 3 118 1 247 1 349 1 201 1 202 1 203 1 54 1 22 2 86 2 251 1 122 3 380 1 87 4 90 1 43 1 
32 1 122 1 5 2 87 2 169 1 303 1 118 1 132 2 172 1 
206 1 197 1 62 1 18 1 276 1 5 3 169 3 132 3 247 1 201 1 211 1 203 1 86 1 122 3 87 3 303 2 261 1 52 1 43 1 
18 1 5 2 169 2 132 2 86 1 122 2 40 1 87 2 303 1 125 1 
129 1 207 1 5 1 118 1 9 1 202 1 54 1 139 1 236 1 251 1 87 1 380 1 72 1 90 1 162 1 
129 1 253 1 207 1 153 1 5 1 118 1 9 1 202 1 54 1 236 1 87 1 380 1 72 1 90 1 162 1 
127 1 128 1 46 2 6 1 101 1 31 1 47 1 105 2 213 1 109 1 322 4 164 1 16 1 167 1 77 1 349 1 174 1 291 1 22 2 40 2 313 2 355 1 125 2 227 1 
203 1 197 1 122 1 5 1 87 1 155 1 169 1 132 1 
242 1 33 1 
242 1 33 1 
159 1 354 1 
159 1 354 1 
159 1 354 1 
107 1 242 1 33 1 
107 1 242 1 33 1 
107 1 242 1 33 1 
242 1 19 1 33 1 
239 1 159 1 242 2 33 2 354 1 319 1 
268 1 242 1 33 1 
268 1 242 1 33 1 
268 1 242 1 33 1 
122 1 378 1 5 1 87 1 169 1 132 1 
179 1 5 1 133 1 132 1 8 1 157 1 211 1 106 1 212 1 33 1 282 1 321 1 361 1 366 1 197 1 242 1 169 1 307 1 247 1 374 1 224 1 86 1 295 1 378 1 122 1 87 1 252 1 
269 1 229 1 134 1 
269 1 318 1 134 1 
269 3 229 2 243 1 318 1 231 1 126 1 
269 2 229 1 318 1 265 1 231 1 126 1 
269 2 229 1 318 1 231 2 126 1 
316 1 96 1 276 2 154 3 28 1 357 2 29 4 103 2 337 1 211 5 257 1 340 1 258 1 235 3 215 1 192 1 50 1 73 1 262 1 164 1 80 1 81 1 247 5 200 2 223 1 308 1 21 1 291 1 379 2 355 1 227 1 42 1 
316 2 96 1 276 5 154 9 232 1 28 2 29 7 186 5 103 6 211 9 190 1 340 1 108 1 191 1 258 2 235 8 215 3 217 1 73 4 262 2 164 3 267 1 80 3 247 9 81 1 83 1 200 6 223 6 308 1 21 2 291 3 271 5 379 6 355 3 227 3 
316 1 96 1 276 3 154 4 28 1 357 1 29 2 103 2 211 3 258 1 235 3 215 2 192 1 217 1 73 1 262 1 164 1 80 1 247 3 200 2 21 1 291 1 379 2 355 1 42 1 227 1 
316 1 96 1 276 4 154 7 28 1 357 2 29 3 103 4 211 4 190 1 108 1 191 1 258 1 235 5 215 3 192 1 217 1 73 2 262 1 164 2 80 2 247 4 200 4 21 1 291 2 379 4 355 2 42 1 227 2 
358 1 144 1 380 1 
84 1 380 1 
136 1 
207 1 236 1 380 1 
380 1 363 1 
207 1 380 1 
358 2 207 1 236 1 296 1 380 3 314 1 
164 1 274 1 38 2 46 3 101 2 20 1 220 1 302 1 105 4 249 1 213 3 175 1 377 1 177 1 149 1 322 7 227 1 
164 1 274 1 38 2 46 3 101 2 20 1 220 1 302 1 105 4 249 1 213 3 175 1 377 1 177 1 149 1 322 7 227 1 
164 1 274 1 38 2 46 3 101 2 20 1 220 1 302 1 222 1 105 4 249 1 213 3 175 1 377 1 177 1 149 1 322 7 227 1 
128 1 178 4 151 1 180 1 274 2 209 1 46 15 101 5 302 2 105 16 213 10 138 1 137 1 109 1 322 31 36 1 164 4 16 1 38 3 167 1 20 2 220 1 198 3 80 3 249 1 291 3 22 2 120 1 175 2 377 1 177 5 149 1 355 3 227 4 
128 2 274 1 46 4 185 1 101 3 302 1 105 5 213 4 137 1 109 2 322 9 164 1 16 2 38 2 167 2 20 1 220 1 22 4 175 1 377 1 177 1 149 1 24 1 227 1 
129 1 298 1 333 1 229 1 63 1 65 1 318 1 134 1 135 1 141 1 142 1 111 1 260 1 72 1 162 1 369 2 243 1 348 2 75 1 53 1 326 1 82 1 199 1 202 1 352 1 269 2 329 1 59 1 272 1 90 1 
129 1 298 1 333 1 229 1 63 1 65 1 318 1 134 1 135 1 141 1 142 2 111 1 260 1 364 1 161 1 72 1 162 1 347 1 369 3 243 1 348 3 75 1 326 1 82 1 199 1 202 1 352 1 269 2 329 1 90 1 
298 1 129 1 333 1 229 1 63 1 65 1 318 1 134 1 141 1 142 2 260 1 364 1 161 1 72 1 162 1 369 2 243 1 348 2 82 1 199 1 202 1 352 1 269 2 329 1 90 1 
92 1 129 1 298 2 207 1 95 1 63 2 65 2 9 1 189 1 260 2 72 1 162 1 346 1 347 1 369 1 348 1 75 1 326 1 202 1 375 1 380 1 90 1 226 1 
129 1 298 1 229 1 63 1 65 1 318 1 134 1 135 1 111 1 260 1 364 1 72 1 162 1 369 1 243 1 348 1 75 1 53 1 326 1 82 1 199 1 202 1 352 1 269 2 272 1 90 1 
254 1 
0 2 207 1 255 2 96 1 45 1 154 2 5 1 300 1 158 1 9 2 211 5 340 3 258 1 215 2 341 2 218 4 113 1 261 1 162 2 52 1 262 1 115 1 15 1 306 2 171 2 172 1 223 6 21 1 309 1 123 1 226 1 129 2 61 2 182 2 276 2 28 1 132 1 189 1 233 1 235 2 72 1 34 1 197 1 76 1 39 1 247 5 81 1 202 2 203 1 379 2 380 1 87 1 90 1 331 1 43 1 
115 1 255 1 197 1 275 1 5 1 300 1 39 1 132 1 172 1 247 3 158 1 223 2 211 3 340 1 203 1 309 1 123 1 218 2 87 1 261 1 52 1 43 1 
96 1 275 1 276 1 5 1 300 1 132 1 158 1 211 3 340 1 218 3 261 1 52 1 115 1 197 1 39 1 172 1 171 1 247 3 223 1 309 1 203 1 123 1 87 1 43 1 
0 1 255 1 96 1 275 1 276 1 5 1 300 1 132 1 158 1 211 3 340 1 218 3 261 1 52 1 115 1 197 1 39 1 172 1 171 1 247 3 223 2 309 1 203 1 123 1 87 1 43 1 
0 4 255 4 96 5 5 1 300 1 301 1 158 1 211 5 340 3 341 2 215 2 218 6 261 1 52 1 262 1 115 1 306 2 172 1 171 4 223 7 309 1 21 1 55 1 123 1 61 2 182 2 275 1 276 5 28 1 132 1 233 1 280 1 235 1 367 1 34 1 197 1 39 1 247 5 81 1 203 1 250 1 379 1 87 1 43 1 
0 2 255 2 96 1 5 1 154 2 300 1 158 1 211 4 340 2 341 2 215 2 218 4 261 1 52 1 262 1 115 1 306 2 172 1 171 2 223 4 21 1 309 1 123 1 61 2 182 2 276 2 28 1 132 1 233 1 235 1 34 1 197 1 39 1 76 1 247 4 81 1 203 1 379 1 87 1 43 1 
0 2 61 2 255 2 182 2 96 1 276 1 5 1 300 1 28 1 132 1 301 1 158 1 211 4 340 2 280 1 233 1 235 1 215 2 341 2 218 4 261 1 52 1 262 1 34 1 115 1 197 1 306 2 39 1 171 2 172 1 247 4 81 1 223 4 21 1 309 1 203 1 250 1 379 1 123 1 87 1 43 1 
0 2 61 2 255 2 182 2 96 1 276 1 5 1 300 1 28 1 132 1 301 1 158 1 211 4 340 2 280 1 233 1 235 1 215 2 341 2 218 4 261 1 52 1 262 1 34 1 115 1 197 1 306 2 39 1 171 2 172 1 247 4 81 1 223 4 21 1 309 1 203 1 250 1 379 1 123 1 87 1 43 1 
0 2 255 2 96 1 276 1 154 2 5 1 300 1 28 1 30 2 132 1 158 1 211 4 340 2 280 1 235 1 341 2 218 4 261 1 52 1 262 1 34 1 324 1 115 1 197 1 304 1 306 2 39 1 171 2 172 1 247 4 81 1 223 4 373 2 21 1 309 1 203 1 379 1 123 1 87 1 381 1 43 1 
0 3 61 2 255 3 182 2 96 1 276 1 5 1 28 1 300 1 132 1 301 1 158 1 211 4 340 2 280 1 233 1 235 1 215 2 341 2 218 5 261 1 52 1 262 1 367 1 34 1 115 1 197 1 306 2 39 1 172 1 171 3 81 1 247 4 223 5 21 1 309 1 203 1 250 1 379 1 123 1 87 1 43 1 
0 3 61 2 255 3 182 2 96 1 276 1 5 1 28 1 300 1 132 1 301 1 158 1 211 4 340 2 280 1 233 1 235 1 215 2 341 2 218 5 261 1 52 1 262 1 367 1 34 1 115 1 197 1 306 2 39 1 172 1 171 3 81 1 247 4 223 5 21 1 309 1 203 1 250 1 379 1 123 1 87 1 43 1 
0 2 255 2 96 1 5 1 154 2 300 1 158 1 211 4 340 2 341 2 218 4 261 1 52 1 262 1 115 1 304 1 306 2 172 1 171 2 223 4 21 1 309 1 123 1 276 1 28 1 132 1 30 2 235 1 34 1 197 1 39 1 76 1 247 4 81 1 203 1 373 2 379 1 87 1 43 1 
128 1 274 1 46 3 6 1 101 2 302 1 105 3 213 2 109 1 322 6 144 1 16 1 164 1 38 1 167 1 220 1 118 2 349 1 174 1 22 2 377 1 40 1 313 1 149 1 125 1 227 1 
178 3 128 2 228 1 151 1 44 1 209 1 27 1 46 6 6 1 101 1 359 1 105 8 213 2 109 2 322 14 16 2 164 1 74 1 167 2 118 1 198 3 80 2 349 2 291 2 57 1 22 4 177 1 40 11 313 11 125 4 355 1 41 1 227 2 
207 1 129 1 128 1 317 1 228 1 27 1 46 1 6 1 5 2 66 1 132 1 278 1 9 1 359 1 105 1 139 1 236 1 109 1 303 1 72 1 322 2 162 1 16 1 167 1 169 1 118 1 202 1 349 1 201 1 54 1 22 2 251 1 122 1 380 1 87 2 90 1 89 1 125 1 
207 2 2 2 208 1 46 10 5 3 6 3 101 4 302 1 9 1 105 10 213 8 109 3 303 1 162 3 164 3 16 3 167 3 169 1 118 2 220 1 349 3 54 2 22 6 122 1 177 4 313 7 25 2 125 7 355 2 227 3 129 3 128 3 228 1 274 1 27 1 277 1 132 1 359 1 139 2 236 2 364 1 322 20 194 2 72 2 323 2 283 1 38 1 80 2 202 3 201 1 291 2 85 2 377 1 251 2 40 7 149 1 87 3 380 2 90 2 
129 8 128 2 207 2 27 1 335 1 131 1 46 1 5 1 6 2 132 1 9 2 359 1 105 1 189 1 214 1 109 2 303 1 364 1 72 2 322 2 162 8 344 1 16 2 167 2 169 1 221 2 119 1 248 1 174 1 202 7 349 2 22 4 311 1 122 1 87 1 380 3 59 1 90 2 226 1 
128 1 228 1 46 2 6 1 5 1 101 1 132 1 105 1 213 1 360 1 109 1 322 3 16 1 164 1 18 1 167 1 169 1 80 1 349 1 291 1 22 2 86 1 40 1 122 1 313 1 87 1 125 1 355 1 227 1 
128 1 16 1 6 1 167 1 77 1 174 1 349 1 105 2 213 1 291 1 22 2 109 1 177 1 40 1 313 1 125 1 322 2 227 1 
128 1 16 1 164 1 46 2 6 1 101 1 167 1 31 1 174 1 349 1 213 1 22 2 109 1 40 1 313 1 125 1 322 2 355 1 
128 1 164 1 16 1 46 2 6 1 101 1 167 1 80 1 174 1 349 1 105 2 213 2 291 1 22 2 109 1 177 1 40 2 313 2 355 1 125 2 322 4 227 1 
128 1 16 1 6 1 167 1 77 1 119 1 349 1 105 2 213 1 291 1 22 2 109 1 177 1 40 1 313 1 125 1 322 2 227 1 
128 1 16 1 164 1 46 2 6 1 101 1 167 1 119 1 31 1 349 1 213 1 22 2 109 1 40 1 313 1 125 1 322 2 355 1 
128 1 164 1 16 1 46 2 6 1 101 1 167 1 119 1 80 1 349 1 105 2 213 2 291 1 22 2 109 1 177 1 40 2 313 2 355 1 125 2 322 4 227 1 
128 1 164 1 16 1 46 2 6 1 101 1 167 1 80 1 349 1 105 2 213 2 291 1 22 2 109 1 177 1 40 2 313 2 355 1 125 2 322 4 227 1 
207 1 129 1 128 1 2 1 27 1 46 1 5 1 6 1 9 1 105 1 359 1 139 1 236 1 109 1 322 2 72 1 162 1 16 1 167 1 118 1 202 1 349 1 54 1 22 2 251 1 380 1 87 1 90 1 
207 1 253 1 129 1 128 1 153 1 27 1 46 1 5 1 6 1 187 1 9 1 105 1 359 1 236 1 109 1 322 2 72 1 162 1 16 1 167 1 118 1 202 1 349 1 54 1 22 2 380 1 87 1 90 1 
128 1 228 1 164 1 16 1 46 2 6 1 101 1 167 1 80 1 349 1 105 2 213 2 291 1 22 2 109 1 177 1 40 2 313 2 355 1 125 2 322 4 227 1 
129 1 207 1 128 1 2 1 46 2 5 1 6 1 101 1 105 2 213 2 139 1 236 1 109 1 322 4 72 1 323 1 162 1 164 1 16 1 167 1 80 1 202 1 349 1 291 1 54 1 22 2 177 1 40 2 251 1 313 2 380 1 87 1 59 1 355 1 125 2 90 1 227 1 
128 1 228 1 46 1 6 1 5 1 132 1 105 2 213 1 109 1 322 3 164 1 16 1 18 1 305 1 167 1 169 1 80 1 349 1 291 1 22 2 86 1 177 1 122 1 40 1 313 1 87 1 355 1 125 1 227 1 
60 1 178 2 128 2 151 1 152 1 209 1 46 10 101 3 279 2 105 9 213 6 109 2 322 19 263 1 16 2 164 3 116 1 167 2 327 1 198 1 80 3 291 3 293 2 22 4 177 3 24 1 355 3 297 1 205 1 227 3 
60 2 128 3 178 2 209 2 46 11 101 1 102 1 279 1 105 13 48 1 213 2 137 2 140 1 109 3 160 1 322 24 263 1 164 2 16 3 116 1 167 3 327 1 198 2 80 3 291 3 293 3 22 6 353 1 177 1 88 1 24 1 355 2 205 2 227 3 
60 2 178 4 128 3 151 1 152 1 356 1 209 3 46 17 101 2 102 1 279 1 105 15 48 1 213 5 137 1 140 1 109 3 160 1 322 32 263 1 16 3 164 4 116 1 167 3 327 1 198 3 80 4 291 4 353 1 293 3 22 6 177 3 88 1 24 1 355 4 205 1 227 4 
60 2 178 4 128 4 151 1 152 1 356 1 209 3 46 16 101 3 102 1 279 1 105 17 48 1 213 6 137 2 140 1 109 4 160 1 322 33 263 1 16 4 164 3 116 1 167 4 327 1 198 3 80 4 291 4 353 1 293 4 22 8 177 3 88 1 24 1 355 3 205 1 227 4 
60 1 178 4 128 2 151 2 274 1 209 2 46 22 101 6 102 1 279 1 302 1 105 24 48 1 213 12 137 1 140 1 109 2 160 1 322 46 263 1 16 2 164 7 38 1 116 1 167 2 327 1 220 1 198 4 80 6 291 6 353 1 293 3 22 4 377 1 177 6 149 1 88 1 24 1 355 6 205 1 41 2 227 7 
239 1 69 1 374 1 242 1 224 1 99 1 33 1 321 1 91 1 157 1 
328 1 19 1 
374 1 3 1 242 1 224 1 147 1 33 1 321 1 117 1 157 1 
107 1 166 1 
268 1 11 1 319 1 
366 1 179 1 197 1 5 1 169 1 133 1 132 1 8 1 307 1 106 1 212 1 86 1 295 1 122 1 378 1 282 1 87 1 252 1 361 1 
366 1 179 1 197 1 5 1 169 1 133 1 132 1 8 1 307 1 106 1 212 1 86 1 295 1 122 1 378 1 282 1 87 1 252 1 361 1 
366 1 179 1 197 1 5 1 169 1 133 1 132 1 8 1 307 1 106 1 212 1 86 1 295 1 122 1 378 1 282 1 87 1 252 1 361 1 
107 1 166 1 319 1 
107 1 166 1 319 1 
268 1 11 1 
268 1 11 1 319 1 
58 1 345 1 
94 1 5 2 29 1 132 2 157 1 211 1 257 1 212 1 33 1 50 1 321 1 73 1 345 1 366 1 242 1 19 1 266 1 169 2 118 1 247 1 328 1 374 1 224 1 122 2 87 2 252 1 58 1 
207 1 129 2 128 1 228 1 27 1 46 1 6 1 5 2 132 2 359 1 105 1 109 1 13 1 72 1 322 2 162 2 344 1 16 1 167 1 221 2 248 1 349 1 202 2 351 1 22 2 121 1 176 1 124 1 380 1 87 2 90 1 
196 1 129 2 229 1 243 1 318 1 65 1 230 1 134 1 135 1 82 1 202 2 289 1 269 2 352 1 59 1 90 1 72 1 364 1 162 2 
129 1 229 1 243 1 318 1 65 1 230 1 134 1 135 1 82 1 202 1 269 2 352 1 146 1 364 1 72 1 90 1 162 1 
207 1 129 1 65 1 9 1 202 1 338 1 289 1 189 1 375 1 380 1 90 1 72 1 162 1 226 1 
196 1 129 1 229 1 243 1 318 1 65 1 230 1 134 1 135 1 82 1 202 1 289 1 269 2 352 1 90 1 364 1 72 1 162 1 
371 1 
144 1 299 1 235 1 96 1 276 1 379 1 4 1 
61 1 182 1 96 1 276 2 154 1 28 1 211 1 340 1 233 1 235 1 215 1 262 1 81 1 247 1 223 1 21 1 379 1 
207 3 299 1 96 2 45 1 97 1 4 1 154 12 103 6 104 2 9 1 211 5 340 3 258 2 110 1 215 6 162 3 262 4 164 2 165 2 168 1 223 5 21 4 59 1 25 2 355 2 227 2 129 3 276 8 28 4 358 2 235 9 236 3 195 2 72 3 363 2 365 1 237 2 37 1 287 2 79 2 80 2 81 4 247 5 372 2 202 3 200 6 291 2 84 3 296 1 379 8 204 2 380 10 90 4 43 2 
178 1 96 1 209 1 276 4 154 6 28 2 103 5 211 1 340 1 48 1 235 7 140 1 215 3 160 1 262 2 143 1 164 2 198 1 80 2 247 1 81 2 372 1 200 5 223 1 21 2 291 2 353 1 379 4 88 1 355 2 227 2 
93 1 179 1 274 1 5 1 28 1 132 1 301 1 104 1 302 1 211 1 106 1 235 2 282 1 361 1 262 1 197 1 164 1 169 1 81 1 247 1 372 2 21 1 86 1 377 1 379 2 122 1 87 1 227 2 
262 1 299 1 96 1 4 1 276 1 28 1 81 1 21 1 235 1 379 1 
164 2 276 5 154 10 80 2 103 5 104 1 372 2 200 5 291 2 235 5 215 5 379 5 25 1 355 2 227 2 
211 1 223 1 340 1 96 1 276 1 247 1 
207 1 129 4 1 1 45 2 28 2 9 2 211 3 189 1 340 2 258 2 235 2 217 1 72 1 113 1 365 2 162 4 262 2 168 1 288 1 81 1 247 3 202 4 223 4 21 2 379 2 380 1 90 1 226 1 331 1 
128 1 129 1 207 1 179 1 2 1 27 1 46 1 5 3 6 1 132 2 9 1 320 1 139 1 109 1 236 1 322 1 72 1 162 1 16 1 167 1 169 2 118 1 202 1 349 1 54 1 22 2 86 2 122 2 251 1 87 3 380 1 90 1 
262 1 96 2 45 1 38 1 276 4 154 4 28 1 103 2 81 1 200 2 21 1 258 1 235 1 215 2 379 2 
374 1 224 1 264 1 
374 1 224 1 264 1 
374 1 224 1 264 1 
284 1 374 1 224 1 91 1 345 1 
290 1 374 1 224 1 
290 1 374 1 224 1 
290 1 374 1 224 1 
374 1 224 1 
242 1 33 1 
128 2 164 1 16 2 274 1 38 1 46 4 101 2 167 2 220 1 302 1 105 4 213 3 137 1 22 4 109 2 377 1 177 1 149 1 322 8 227 1 
144 1 164 1 274 1 38 1 46 3 101 2 220 1 302 1 105 3 213 2 377 1 149 1 322 6 227 1 
128 1 164 1 16 1 46 2 101 1 167 1 80 1 105 2 213 2 291 1 22 2 109 1 177 1 355 1 322 4 114 1 227 1 
178 2 151 1 164 1 209 1 46 4 101 1 198 1 80 1 105 3 291 1 213 2 177 1 355 1 322 7 227 1 
178 2 128 2 151 1 274 2 46 12 101 5 302 2 105 11 213 9 137 2 109 2 322 23 164 3 16 2 38 1 370 1 167 2 220 1 198 2 80 2 291 2 57 1 22 4 377 1 177 4 149 1 355 2 227 3 41 1 
178 1 46 1 322 1 
105 1 322 1 198 1 
128 1 16 1 164 1 46 3 167 1 101 2 80 1 105 3 291 1 213 3 22 2 109 1 177 1 25 1 322 6 355 1 114 1 227 1 
178 1 128 1 209 1 46 6 101 1 105 6 48 1 213 2 140 1 109 1 160 1 322 12 16 1 164 2 167 1 198 1 80 2 291 2 353 1 22 2 177 1 88 1 24 1 355 2 227 2 
164 1 274 1 46 3 101 1 302 1 105 3 213 2 377 1 177 1 322 6 227 1 
128 1 16 1 274 1 46 2 370 1 101 1 167 1 220 1 302 1 105 1 213 2 137 1 22 2 109 1 177 1 149 1 322 3 
128 1 93 1 16 1 164 2 274 2 46 5 167 1 101 3 302 2 105 5 213 5 22 2 109 1 377 1 177 2 24 1 322 10 227 2 
128 1 16 1 167 1 105 2 291 1 213 1 22 2 109 1 177 1 24 1 322 2 227 1 
128 1 164 1 16 1 46 2 101 1 167 1 80 1 105 2 213 2 291 1 22 2 109 1 177 1 355 1 24 1 322 4 227 1 
128 3 152 1 16 3 274 1 46 2 370 1 167 3 101 1 302 1 105 1 213 2 137 1 22 6 109 3 177 1 322 3 24 1 
178 4 128 5 180 1 151 1 152 1 274 3 209 1 46 18 101 7 302 3 105 16 213 12 137 2 138 1 109 5 322 34 114 1 16 5 164 5 38 1 370 1 167 5 220 1 198 3 80 3 291 3 120 1 22 10 377 2 177 5 149 1 24 1 355 3 227 5 
178 1 128 1 209 1 274 1 46 4 101 2 302 1 105 4 213 2 109 1 322 8 164 1 16 1 38 1 167 1 198 1 220 1 353 1 22 2 377 1 149 1 24 1 227 1 
178 2 128 2 151 1 274 1 209 1 46 5 101 2 302 1 105 6 213 3 109 2 322 11 114 1 164 1 16 2 38 1 167 2 220 1 198 1 80 1 291 1 353 1 22 4 377 1 177 1 149 1 24 1 227 2 
178 1 128 3 209 1 46 7 101 1 105 6 48 1 213 2 137 1 140 1 109 3 160 1 322 13 114 1 16 3 164 2 167 3 198 1 80 2 291 2 353 1 22 6 177 1 88 1 24 1 355 2 227 2 
178 1 128 3 209 1 46 4 101 1 105 7 48 1 213 2 137 1 140 1 109 3 160 1 322 11 114 1 16 3 164 1 167 3 198 1 80 2 291 2 353 1 22 6 177 1 88 1 24 1 355 1 227 2 
178 1 128 1 209 1 274 1 46 4 101 2 302 1 105 4 213 2 109 1 322 8 164 1 16 1 38 1 167 1 198 1 220 1 353 1 22 2 377 1 149 1 24 1 227 1 
178 1 128 1 209 1 46 6 101 1 105 6 48 1 213 2 140 1 109 1 160 1 322 12 16 1 164 2 167 1 198 1 80 2 291 2 353 1 22 2 177 1 88 1 24 1 355 2 227 2 
178 1 128 4 209 1 46 5 101 1 105 7 48 1 213 2 137 2 140 1 109 4 160 1 322 12 114 1 16 4 164 1 167 4 198 1 80 2 291 2 353 1 22 8 177 1 88 1 24 1 355 1 227 2 
178 1 128 4 152 1 209 1 46 5 101 2 105 7 48 1 213 4 137 2 140 1 109 4 160 1 322 12 16 4 164 1 167 4 198 1 80 2 291 2 353 1 22 8 177 2 88 1 24 1 355 1 227 2 
164 1 274 3 46 4 101 3 220 2 302 3 105 3 213 6 377 1 177 3 149 1 322 7 227 1 
178 1 128 4 152 1 209 1 46 5 101 1 105 7 48 1 213 2 137 2 140 1 109 4 160 1 322 12 16 4 164 1 167 4 198 1 80 2 291 2 353 1 22 8 177 1 88 1 24 1 355 1 227 2 
32 1 5 1 87 1 118 1 132 1 172 1 163 1 
332 1 17 1 244 1 5 1 118 1 132 1 172 1 32 1 12 1 87 1 362 1 163 1 
9 1 202 1 207 1 189 1 129 1 144 1 380 1 90 1 72 1 226 1 162 1 
207 1 129 1 5 2 169 1 118 1 132 1 9 1 202 1 54 1 139 1 236 1 122 1 380 1 87 2 303 1 90 1 72 1 162 1 
129 1 207 2 5 2 132 2 139 1 236 2 303 1 72 1 261 1 363 1 162 1 365 1 197 1 169 1 118 1 202 1 203 1 54 1 122 2 204 1 87 2 380 3 90 1 
253 1 129 2 207 2 256 1 5 2 132 2 236 2 303 1 72 1 261 1 363 1 162 2 365 1 197 1 169 1 118 1 202 2 203 1 54 1 122 2 204 1 87 2 380 3 90 1 
207 1 129 3 96 1 256 1 276 1 247 2 9 1 173 1 358 1 202 3 211 2 223 1 236 1 294 1 84 1 204 1 380 4 363 1 90 1 72 1 365 1 162 3 43 1 
207 1 129 3 96 1 256 1 276 1 79 1 247 2 9 1 358 1 202 3 211 2 223 1 236 1 84 1 204 1 380 4 363 1 90 1 72 1 365 1 162 3 43 1 
202 1 129 1 214 1 90 1 72 1 162 1 
129 7 207 2 335 1 131 1 145 1 221 1 248 1 9 2 202 6 214 1 311 1 236 1 296 1 259 1 148 1 380 3 59 1 364 1 72 2 90 3 162 7 
207 1 2 1 46 3 5 2 6 2 101 2 302 1 105 3 213 2 109 2 13 1 303 1 162 1 16 2 164 1 167 2 169 1 220 1 118 2 349 2 54 1 22 4 122 1 313 1 59 1 125 1 227 1 129 1 128 2 228 1 274 1 132 1 139 1 236 1 194 1 72 1 322 6 323 1 38 1 202 1 377 1 251 1 40 1 87 2 380 1 149 1 90 1 
129 1 299 1 96 1 276 1 4 1 28 2 29 1 9 1 358 1 211 3 340 1 235 1 195 1 162 1 237 1 262 2 165 1 168 1 79 1 81 2 247 3 202 1 223 2 21 2 84 1 379 1 380 2 43 1 
129 2 207 1 358 1 202 2 214 1 110 1 236 1 296 1 380 2 59 1 72 1 90 2 162 2 
368 1 129 4 207 1 256 1 9 1 202 4 189 1 380 1 59 1 90 1 72 1 162 4 226 1 
129 2 207 1 130 1 208 1 145 1 325 1 202 2 236 1 259 1 380 1 72 1 90 2 365 1 162 2 
9 1 202 1 129 1 269 1 318 1 134 1 90 1 72 1 162 1 82 1 
129 2 207 1 248 1 202 2 124 1 380 1 59 1 364 1 72 1 90 1 162 2 
368 1 129 5 207 2 335 1 9 1 248 1 202 4 189 1 311 1 380 3 59 1 72 2 90 2 365 1 226 1 162 5 
368 1 129 5 207 2 9 1 248 1 202 4 189 1 311 1 380 3 59 1 72 2 90 2 365 1 226 1 162 5 315 1 
207 1 129 1 253 1 5 2 169 1 118 1 132 1 9 1 202 1 54 1 236 1 122 1 380 1 87 2 303 1 90 1 72 1 162 1 
129 1 207 1 145 1 202 1 236 1 296 1 259 1 148 1 380 1 72 1 90 2 365 1 162 1 
183 1 118 1 330 1 14 1 67 1 
206 1 197 1 96 1 183 2 276 1 29 1 118 1 67 2 247 2 188 1 211 2 203 1 312 1 193 1 261 1 14 1 330 2 52 1 43 1 
183 1 5 1 132 1 67 1 351 1 121 1 176 1 87 1 14 1 
312 1 193 1 14 1 
333 1 144 1 141 1 329 1 
333 1 369 1 141 1 348 1 75 1 329 1 326 1 
298 1 369 1 260 1 
181 1 333 1 369 3 75 1 348 3 326 1 339 1 141 1 49 1 329 1 272 1 112 2 
333 1 369 2 141 1 142 1 348 2 75 1 329 1 7 1 326 1 
269 1 333 1 229 1 369 1 64 1 348 1 75 1 326 1 272 1 134 1 78 1 
333 1 369 1 141 1 348 1 75 1 326 1 272 1 
369 1 141 2 348 1 75 1 329 1 326 1 272 1 
333 1 369 2 286 1 75 2 348 2 184 1 326 2 141 1 272 1 343 1 
333 2 369 3 75 1 348 3 246 1 326 1 78 1 350 1 270 1 141 1 142 2 329 1 272 1 
219 1 333 1 369 2 229 1 243 1 318 1 75 1 348 2 326 1 134 1 269 2 141 1 142 1 329 1 272 1 
333 2 369 4 75 2 348 4 326 2 7 1 78 1 68 1 350 1 141 1 142 2 329 1 272 1 
333 1 369 1 141 1 348 1 75 1 329 1 326 1 272 1 
333 3 369 4 348 4 75 1 326 1 78 1 336 1 339 1 350 1 141 2 142 2 49 1 329 2 112 1 
238 1 333 1 369 2 273 1 75 1 348 2 326 1 292 1 141 1 142 1 329 1 272 1 
333 1 369 3 75 1 348 3 245 1 326 1 339 1 141 1 49 2 329 1 272 1 112 2 
10 1 333 2 234 2 285 1 
281 1 369 1 348 1 75 1 326 1 272 1 
333 1 369 2 270 1 141 1 142 1 348 2 75 1 329 1 326 1 272 1 
23 1 
333 1 369 1 141 1 348 1 75 1 329 1 326 1 272 1 
333 1 369 3 75 1 348 3 326 1 270 1 142 1 141 1 329 1 272 1 112 1 
350 1 333 1 78 1 336 1 
333 1 141 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) (24,105) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) (24,105) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (19,256,292,314) (19,256,292,314) (19,256,292,314) 236 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
186 1 331 1 264 1 
228 1 331 1 343 2 
195 2 85 2 285 2 12 1 249 2 341 1 310 2 281 2 
44 1 249 2 46 1 276 1 184 1 47 2 302 1 195 3 29 1 137 1 330 1 138 1 139 2 281 2 109 1 285 2 309 1 56 1 12 1 260 2 341 1 178 1 310 3 311 2 37 1 265 1 317 1 85 2 117 1 20 1 87 1 290 2 226 1 208 1 229 1 209 1 295 1 
195 1 85 1 221 1 285 1 181 1 12 1 249 1 310 1 281 1 268 1 
131 1 285 1 221 1 310 1 315 1 264 1 195 1 328 1 204 1 305 1 101 1 331 1 337 1 107 1 
285 1 221 1 249 1 310 1 264 1 328 2 85 1 195 1 204 2 305 1 281 1 101 1 331 1 337 1 107 1 
199 1 328 1 141 1 204 1 34 1 
199 1 328 2 204 2 248 1 34 1 225 1 331 1 264 1 
328 1 204 1 34 1 
199 1 221 1 285 1 12 1 249 1 310 1 17 1 328 1 85 1 195 1 204 1 181 1 281 1 268 1 
331 1 
199 1 328 2 33 1 204 2 34 1 225 1 331 1 264 1 
199 2 237 2 1 2 58 1 34 2 61 1 76 1 264 1 201 1 328 5 204 5 319 1 225 1 31 2 331 1 345 1 198 1 71 1 23 1 
186 1 341 1 
85 1 195 2 285 2 249 1 299 1 341 2 281 1 227 1 310 2 
327 1 261 1 242 1 
109 1 44 1 323 1 56 1 309 1 260 1 341 1 310 1 311 1 276 1 184 1 302 1 195 1 87 1 139 1 229 1 
109 1 127 1 188 1 285 1 44 1 309 1 56 1 260 1 249 1 310 2 184 1 311 1 276 1 302 1 327 1 85 1 195 2 87 1 139 1 229 1 
127 1 188 2 131 1 285 5 249 4 310 5 341 1 301 1 85 4 195 5 227 1 281 1 102 1 8 1 
212 1 195 2 85 2 221 1 285 2 181 1 249 2 310 2 
195 3 85 3 188 1 285 3 249 3 281 1 341 1 310 3 
195 1 85 1 221 1 285 1 181 1 249 1 310 1 
195 1 85 1 221 1 285 1 299 1 249 1 310 1 281 1 227 1 
127 1 44 1 46 1 249 3 184 1 276 1 47 1 302 1 195 4 328 1 137 1 305 1 138 1 139 1 281 2 101 1 337 1 107 1 51 1 109 1 188 1 285 3 221 1 309 1 56 1 12 1 260 1 341 1 178 1 310 4 311 1 265 1 317 1 85 3 117 1 204 1 20 1 87 1 41 1 290 2 227 1 208 1 229 1 209 1 
195 2 85 1 188 1 131 1 285 2 249 1 341 1 310 2 301 1 
127 1 188 2 221 1 285 3 172 1 249 3 310 3 328 1 85 3 195 3 204 1 305 1 41 1 281 1 227 1 101 1 331 1 337 1 107 1 
188 1 285 2 249 2 310 2 261 1 327 1 85 2 195 2 227 1 281 1 
109 1 44 1 56 1 309 1 260 1 341 1 310 1 311 1 276 1 184 1 302 1 195 1 87 1 139 1 229 1 
109 1 44 1 309 1 260 1 341 1 310 1 311 1 184 1 302 1 195 1 232 1 65 1 87 1 139 1 229 1 
270 1 278 1 47 4 78 1 327 2 250 1 196 1 137 1 330 2 306 1 178 1 261 2 242 2 84 1 223 1 265 1 317 1 117 2 86 1 20 1 120 1 290 2 208 1 148 1 
195 1 85 1 212 1 221 1 285 1 305 1 249 1 310 1 
222 1 2 1 
222 1 2 1 
166 1 215 1 
166 1 215 1 
166 1 215 1 
92 1 222 1 2 1 
92 1 222 1 2 1 
222 1 100 1 2 1 
166 1 111 1 222 2 215 1 21 1 2 2 
92 1 222 1 2 1 
177 1 222 1 2 1 
177 1 222 1 2 1 
177 1 222 1 2 1 
249 2 324 1 272 1 132 1 231 1 133 1 2 1 328 1 195 2 136 1 97 1 100 1 285 2 222 1 114 1 341 1 310 2 85 2 18 1 204 1 119 1 146 1 346 1 69 1 
43 1 271 2 222 2 114 2 324 1 13 1 2 2 27 1 328 2 156 1 18 2 204 2 136 2 5 1 123 1 21 1 331 1 69 2 346 3 
54 1 216 1 77 1 
54 1 77 1 308 1 
28 1 190 1 216 2 332 1 77 3 308 1 
28 1 7 1 216 1 332 1 77 2 308 1 
28 1 216 1 332 2 77 2 308 1 
1 1 193 1 25 1 132 1 272 1 328 5 196 1 80 1 31 1 331 2 336 1 198 2 104 1 199 4 237 1 239 1 34 1 14 1 343 2 36 2 264 1 86 1 64 1 204 5 119 1 266 1 228 1 225 1 345 1 23 1 
269 1 1 2 93 5 25 1 272 4 154 1 78 1 328 9 196 3 4 1 98 1 31 2 331 5 198 6 104 3 199 7 237 2 110 1 167 1 239 2 34 6 14 4 343 7 201 1 264 1 86 3 141 5 64 2 204 9 266 4 228 3 225 1 345 1 148 1 23 4 
1 1 193 1 249 1 272 1 195 1 328 3 196 1 80 1 281 1 31 1 331 2 198 2 104 1 199 2 237 1 221 1 285 1 12 1 239 1 310 1 14 1 36 1 343 2 264 1 201 1 17 1 85 1 64 1 86 1 204 3 181 1 266 1 228 1 268 1 23 1 
1 1 249 1 154 1 98 1 104 2 221 1 12 1 310 1 14 2 264 1 17 1 64 1 266 2 228 2 268 1 23 1 269 1 193 1 272 2 328 4 195 1 196 2 80 1 281 1 31 1 331 3 198 4 199 3 237 1 285 1 239 1 36 2 343 4 201 1 85 1 86 2 204 4 181 1 
42 1 186 1 109 1 
109 1 22 1 
316 1 
109 1 309 1 302 1 
109 1 277 1 
109 1 309 1 
42 2 109 3 151 1 309 1 145 1 302 1 
163 1 340 1 298 1 153 1 312 1 116 1 47 7 84 2 117 3 196 1 330 4 120 3 50 1 160 2 140 1 124 1 148 1 
163 1 340 1 298 1 153 1 312 1 116 1 47 7 84 2 117 3 196 1 330 4 120 3 50 1 160 2 140 1 124 1 148 1 
163 1 340 1 298 1 153 1 312 1 116 1 47 7 84 2 117 3 196 1 330 4 120 3 50 1 282 1 160 2 140 1 124 1 148 1 
297 2 129 4 213 4 298 1 153 1 75 1 325 1 47 31 78 1 196 5 137 2 330 19 50 5 235 1 333 1 160 3 140 2 104 4 163 2 255 1 340 1 178 2 35 1 312 2 116 2 241 1 84 3 265 2 117 12 86 4 20 2 120 8 290 4 122 1 124 1 148 2 
163 1 297 1 52 1 128 1 340 1 298 1 178 2 312 1 116 1 47 9 84 3 265 2 117 4 196 1 137 2 330 5 20 2 120 4 290 4 50 1 160 2 140 1 124 1 148 1 
256 1 292 1 236 1 314 1 
24 1 256 1 292 1 314 1 
214 1 216 1 77 2 219 1 48 1 139 1 6 1 103 1 105 1 32 1 308 1 256 2 54 1 257 1 260 1 240 1 311 1 179 2 39 1 190 1 318 1 19 2 87 1 224 1 229 1 
24 1 256 1 292 1 314 1 
256 1 292 1 236 1 314 1 
338 1 
1 1 44 2 152 1 305 1 101 1 107 1 109 1 11 2 221 1 309 1 258 2 260 2 310 1 311 2 315 1 264 1 15 1 228 2 225 3 229 1 68 4 70 1 72 1 23 2 73 1 130 2 131 1 194 1 275 1 326 1 328 5 195 1 139 2 174 2 31 1 331 2 283 2 335 1 198 2 337 1 237 1 285 1 238 1 239 1 34 6 343 2 288 1 202 2 344 1 204 5 289 1 87 1 89 1 182 2 345 1 
131 1 152 1 326 1 275 1 195 1 328 3 305 1 101 1 337 1 107 1 33 1 285 1 221 1 11 1 34 2 310 1 315 1 204 3 289 1 225 1 68 2 73 1 
131 1 152 1 326 1 275 1 195 1 328 3 305 1 101 1 331 1 337 1 107 1 33 1 285 1 221 1 34 1 310 1 315 1 264 1 204 3 289 1 225 1 68 3 182 1 73 1 
130 1 131 1 152 1 326 1 275 1 195 1 328 3 305 1 101 1 331 1 337 1 107 1 33 1 285 1 221 1 11 1 34 2 310 1 315 1 264 1 204 3 289 1 225 1 68 3 182 1 73 1 
0 1 1 1 130 4 131 1 152 1 326 1 275 1 328 5 195 1 173 1 305 1 174 2 31 1 101 1 283 2 334 1 331 5 198 1 337 1 161 1 107 1 237 1 33 1 285 1 221 1 11 4 258 2 34 7 310 1 313 1 315 1 15 1 264 5 202 2 344 1 204 5 289 1 228 2 225 3 182 4 68 6 345 1 23 1 73 1 
1 1 152 1 305 1 101 1 107 1 221 1 11 2 258 2 310 1 315 1 15 1 264 1 228 2 225 2 68 4 73 1 23 1 130 2 131 1 275 1 326 1 195 1 328 4 174 2 31 1 283 2 331 2 337 1 198 1 237 1 285 1 34 4 343 2 202 2 344 1 204 4 289 1 182 2 89 1 345 1 
1 1 130 2 131 1 152 1 326 1 275 1 195 1 328 4 305 1 173 1 174 2 101 1 31 1 331 1 283 2 198 1 337 1 107 1 161 1 237 1 11 2 285 1 221 1 258 2 34 4 310 1 313 1 315 1 264 1 15 1 202 2 344 1 204 4 289 1 225 2 228 2 182 2 68 4 345 1 23 1 73 1 
1 1 130 2 131 1 152 1 326 1 275 1 195 1 328 4 305 1 173 1 174 2 101 1 31 1 331 1 283 2 198 1 337 1 107 1 161 1 237 1 11 2 285 1 221 1 258 2 34 4 310 1 313 1 315 1 264 1 15 1 202 2 344 1 204 4 289 1 225 2 228 2 182 2 68 4 345 1 23 1 73 1 
1 1 130 2 131 1 152 1 326 1 275 1 304 2 195 1 328 4 305 1 101 1 31 1 331 1 283 2 198 1 337 1 107 1 237 1 11 2 285 1 221 1 34 4 115 1 310 1 313 1 343 2 315 1 264 1 202 2 344 1 189 1 204 4 289 1 225 2 182 2 68 4 170 1 345 1 210 2 23 1 73 1 
1 1 130 3 131 1 152 1 326 1 275 1 195 1 328 4 173 1 305 1 174 2 31 1 101 1 331 1 283 2 334 1 198 1 337 1 107 1 161 1 237 1 285 1 221 1 11 3 258 2 34 5 310 1 313 1 315 1 264 1 15 1 202 2 344 1 204 4 289 1 225 2 228 2 68 5 182 3 345 1 23 1 73 1 
1 1 130 3 131 1 152 1 326 1 275 1 195 1 328 4 173 1 305 1 174 2 31 1 101 1 331 1 283 2 334 1 198 1 337 1 107 1 161 1 237 1 285 1 221 1 11 3 258 2 34 5 310 1 313 1 315 1 264 1 15 1 202 2 344 1 204 4 289 1 225 2 228 2 68 5 182 3 345 1 23 1 73 1 
1 1 152 1 304 2 305 1 101 1 107 1 221 1 11 2 310 1 315 1 264 1 225 2 68 4 170 1 73 1 23 1 130 2 131 1 275 1 326 1 195 1 328 4 31 1 283 2 331 1 337 1 198 1 237 1 285 1 34 4 343 2 202 2 344 1 204 4 289 1 182 2 89 1 345 1 210 2 
298 1 47 6 327 1 196 1 137 1 330 3 160 1 306 1 140 1 186 1 340 1 178 1 341 2 261 1 312 1 84 2 242 1 265 1 317 1 117 3 20 1 120 2 290 2 208 1 124 1 148 1 
91 1 129 3 213 3 75 1 325 1 47 14 78 1 134 1 327 11 29 1 252 1 196 2 137 2 330 8 50 1 104 2 341 1 178 2 261 3 242 11 16 1 265 2 317 2 117 6 86 2 20 2 120 1 290 4 122 1 208 1 209 1 148 1 
127 1 44 1 323 1 249 1 184 1 276 1 47 2 302 1 26 1 303 1 195 2 29 1 137 1 330 1 139 1 109 1 188 1 285 1 309 1 56 1 260 1 341 1 310 2 178 1 311 1 261 1 16 1 265 1 317 1 85 1 117 1 20 1 87 1 290 2 67 1 229 1 208 1 209 1 
44 1 298 1 249 1 46 2 94 2 184 2 47 18 302 2 160 1 104 2 109 2 188 1 56 2 309 2 260 1 310 3 311 1 261 5 312 1 16 1 63 1 265 3 317 3 117 8 20 3 120 2 229 2 124 1 127 1 276 2 78 1 327 6 195 3 29 1 196 3 279 2 137 3 330 10 139 1 140 1 285 1 340 1 341 2 178 3 84 2 242 6 85 1 86 2 142 2 144 1 87 2 290 6 208 3 209 1 149 2 148 2 
90 1 44 2 249 1 274 1 47 2 218 1 195 1 220 1 29 1 137 2 330 1 139 7 306 1 335 1 109 3 188 1 285 1 57 1 309 2 112 1 260 8 240 1 310 1 178 2 287 1 311 8 37 2 265 2 85 1 317 2 117 1 20 2 87 2 291 1 290 4 229 2 208 2 209 1 70 1 
249 1 47 1 195 1 196 1 137 1 158 1 330 1 281 1 104 1 285 1 178 1 310 1 16 1 265 1 317 1 85 1 86 1 20 1 290 2 227 1 208 1 
178 1 261 1 47 2 242 1 327 1 265 1 317 1 250 1 86 1 196 1 137 1 20 1 330 2 120 1 290 2 50 1 208 1 306 1 
270 1 178 1 261 1 47 2 84 1 242 1 78 1 327 1 265 1 317 1 117 2 137 1 20 1 120 1 290 2 208 1 306 1 148 1 
178 1 261 1 47 2 242 1 327 1 265 1 317 1 86 1 196 1 137 1 20 1 330 2 290 2 208 1 306 1 104 1 
178 1 261 1 47 2 242 1 327 1 265 1 220 1 317 1 250 1 86 1 196 1 137 1 20 1 330 2 120 1 290 2 50 1 208 1 
270 1 178 1 261 1 47 2 84 1 242 1 78 1 327 1 265 1 220 1 317 1 117 2 137 1 20 1 120 1 290 2 208 1 148 1 
178 1 261 1 47 2 242 1 327 1 265 1 220 1 317 1 86 1 196 1 137 1 20 1 330 2 290 2 208 1 104 1 
178 1 261 1 47 2 242 1 327 1 265 1 317 1 86 1 196 1 137 1 20 1 330 2 290 2 208 1 104 1 
44 1 46 1 184 1 276 1 47 2 302 1 195 1 29 1 137 1 330 1 139 1 109 1 309 1 56 1 260 1 341 1 310 1 178 1 311 1 265 1 317 1 117 1 20 1 87 1 290 2 229 1 208 1 209 1 
44 1 184 1 47 2 302 1 185 1 232 1 195 1 29 1 137 1 330 1 139 1 109 1 309 1 260 1 341 1 310 1 178 1 311 1 265 1 317 1 117 1 65 1 20 1 87 1 290 2 229 1 208 1 209 1 
178 1 261 1 47 2 242 1 16 1 327 1 265 1 317 1 86 1 196 1 137 1 20 1 330 2 290 2 208 1 104 1 
90 1 46 1 184 1 276 1 47 2 302 1 327 1 195 1 196 1 137 1 330 2 139 1 104 1 109 1 56 1 309 1 260 1 310 1 178 1 261 1 311 1 242 1 265 1 317 1 86 1 20 1 87 1 290 2 229 1 208 1 149 1 
249 1 273 1 47 3 78 1 327 1 195 1 196 1 137 1 330 2 281 1 104 1 285 1 178 1 310 1 242 1 16 1 265 1 317 1 85 1 117 1 86 1 20 1 290 2 227 1 208 1 148 1 
74 1 129 4 128 1 213 4 75 2 325 2 95 1 47 34 78 2 155 1 329 1 196 7 137 2 330 22 99 1 254 1 50 5 104 7 60 1 113 1 178 2 262 1 168 1 265 2 169 3 117 12 86 7 205 1 20 2 120 5 121 1 290 4 122 2 293 1 148 2 
74 1 129 4 128 1 213 4 75 2 325 2 95 1 47 34 78 2 155 1 329 1 196 7 137 2 330 22 99 1 254 1 50 5 104 7 60 1 113 1 178 2 262 1 168 1 265 2 169 3 117 12 86 7 205 1 20 2 120 5 121 1 290 4 122 2 293 1 148 2 
74 1 129 4 128 1 213 4 298 1 75 2 325 2 95 1 47 39 78 2 155 1 329 1 196 8 137 1 330 25 99 1 254 1 50 6 160 1 140 1 104 7 340 1 60 1 113 1 178 1 262 1 312 1 168 1 84 1 265 1 169 3 117 14 86 7 20 1 120 7 121 1 290 2 122 2 293 1 124 1 148 3 
74 1 129 4 128 1 213 4 75 2 325 2 95 1 47 30 78 1 155 1 329 1 196 7 137 2 330 21 99 1 254 1 50 5 104 7 60 1 113 1 178 2 262 1 168 1 265 2 169 2 117 9 86 7 205 1 20 2 120 5 121 1 290 4 122 2 294 1 148 1 
128 1 129 2 74 1 213 2 95 1 47 16 78 1 155 1 329 2 196 2 137 1 330 9 99 1 254 1 104 2 113 2 60 1 178 1 262 1 168 1 265 1 169 2 117 7 86 2 20 1 121 1 290 2 122 2 293 1 148 1 
246 1 18 1 136 1 222 1 114 1 13 1 123 1 21 1 69 1 2 1 
100 1 146 1 
180 1 18 1 30 1 136 1 247 1 222 1 114 1 69 1 2 1 
92 1 243 1 
177 1 111 1 147 1 
43 1 271 1 222 1 324 1 114 1 13 1 2 1 27 1 328 1 156 1 204 1 18 1 136 1 123 1 21 1 331 1 69 1 346 2 
43 1 271 1 222 1 324 1 114 1 13 1 2 1 27 1 328 1 156 1 204 1 18 1 136 1 123 1 21 1 331 1 69 1 346 2 
43 1 271 1 222 1 324 1 114 1 13 1 2 1 27 1 328 1 156 1 204 1 18 1 136 1 123 1 21 1 331 1 69 1 346 2 
92 1 243 1 111 1 
92 1 243 1 111 1 
177 1 147 1 
177 1 111 1 147 1 
97 1 133 1 
271 1 272 1 132 1 249 2 231 1 133 1 2 1 195 2 328 1 156 1 136 1 97 1 100 1 106 1 199 1 285 2 222 1 114 1 341 1 310 2 85 2 204 1 18 1 119 1 146 1 69 1 346 1 
47 2 218 1 195 2 29 1 137 1 253 1 330 1 139 2 197 1 109 1 285 2 309 1 260 2 310 2 178 1 311 2 37 2 16 1 265 1 317 1 117 1 244 1 20 1 87 1 291 1 320 1 290 2 229 1 208 1 171 1 209 1 
90 1 108 1 10 1 54 1 257 1 260 2 240 1 216 1 311 2 214 1 77 2 49 1 190 1 87 1 139 2 229 1 296 1 308 1 32 1 
10 1 54 1 257 1 260 1 240 1 216 1 311 1 214 1 77 2 190 1 87 1 139 1 229 1 192 1 296 1 308 1 32 1 
108 1 109 1 44 1 309 1 260 1 311 1 3 1 87 1 139 1 229 1 70 1 335 1 32 1 125 1 
108 1 10 1 54 1 257 1 260 1 240 1 216 1 311 1 214 1 77 2 49 1 190 1 87 1 139 1 229 1 296 1 308 1 32 1 
284 1 
186 1 58 1 61 1 331 1 198 1 264 1 23 1 
1 1 328 1 174 1 31 1 331 2 198 1 237 1 258 1 34 1 343 1 15 1 264 1 204 1 228 1 225 1 345 1 23 1 
42 2 1 3 151 1 44 1 94 2 302 1 107 2 104 2 109 6 309 1 260 1 311 1 14 5 62 2 264 1 266 5 321 1 267 2 225 3 228 4 229 1 22 3 72 1 23 6 126 2 78 1 328 5 196 2 139 1 31 3 331 5 176 2 198 7 237 3 82 1 239 2 34 5 83 2 343 9 38 1 86 2 204 5 87 2 207 2 345 3 148 1 
1 1 129 1 74 1 213 1 196 2 99 1 31 1 331 2 198 4 104 2 237 1 60 1 168 1 14 3 343 4 86 2 266 3 121 1 122 1 228 2 345 1 23 2 
126 1 1 1 249 1 195 1 328 1 157 2 196 2 173 1 281 1 31 1 198 2 140 1 237 1 55 1 221 1 285 1 340 1 12 1 310 1 312 1 17 1 85 1 204 1 181 1 345 1 268 1 148 1 23 2 
237 1 1 1 58 1 61 1 264 1 31 1 345 1 331 1 198 1 23 1 
14 1 343 2 86 1 196 1 266 1 228 1 331 1 198 2 104 1 
328 1 204 1 34 1 225 1 331 1 264 1 
1 2 44 2 328 3 139 4 233 1 31 2 198 2 335 1 307 1 200 1 109 1 237 2 309 1 238 1 260 4 239 2 34 4 311 4 201 1 288 1 204 3 87 1 225 2 229 1 345 1 191 2 70 1 23 2 72 2 
44 1 249 2 46 1 276 1 184 1 47 1 302 1 195 3 137 1 138 1 139 1 281 2 109 1 285 2 56 1 309 1 260 1 12 1 341 1 178 1 310 3 311 1 265 1 85 2 317 1 117 1 20 1 87 1 290 2 229 1 208 1 209 1 
237 1 1 1 239 1 14 2 343 4 264 2 266 2 228 2 31 1 345 1 331 4 160 1 198 2 23 1 72 1 
150 1 18 1 69 1 
150 1 18 1 69 1 
18 1 286 1 13 1 133 1 69 1 
150 1 18 1 69 1 
251 1 18 1 69 1 
251 1 18 1 69 1 
251 1 18 1 69 1 
18 1 69 1 
222 1 2 1 
128 1 129 1 213 1 340 1 298 1 178 1 312 1 47 8 84 2 265 1 117 4 196 1 137 1 330 4 20 1 120 2 99 1 290 2 122 1 160 1 140 1 124 1 148 1 
74 1 129 2 128 1 213 2 75 1 325 1 47 20 78 3 196 4 137 2 330 11 99 1 50 2 104 4 60 1 178 2 168 1 265 2 117 9 86 4 20 2 66 1 120 2 121 1 290 4 122 1 148 3 
129 1 128 1 74 1 213 1 47 8 196 2 137 2 330 6 99 1 50 1 104 2 60 1 178 2 168 1 265 2 117 2 86 2 20 2 120 1 66 1 290 4 121 1 122 1 
129 1 128 1 74 1 213 1 47 10 78 1 196 2 137 2 330 6 99 1 104 2 60 1 178 2 168 1 265 2 117 4 86 2 20 2 66 1 290 4 121 1 122 1 148 1 
128 1 129 1 213 1 340 1 298 1 178 1 312 1 47 8 84 2 265 1 117 4 196 1 137 1 330 4 20 1 120 2 99 1 290 2 122 1 160 1 140 1 124 1 148 1 
74 1 128 1 129 1 213 1 60 1 178 1 168 1 47 8 265 1 86 2 117 2 196 2 137 1 330 6 20 1 120 1 99 1 121 1 290 2 122 1 50 1 104 2 
129 1 128 1 74 1 213 1 47 10 78 1 196 2 137 2 330 6 99 1 104 2 60 1 178 2 168 1 265 2 117 4 86 2 20 2 66 1 290 4 121 1 122 1 148 1 
129 1 128 1 74 1 213 1 47 10 78 1 196 2 137 2 330 6 99 1 50 1 104 2 60 1 178 2 168 1 265 2 117 4 86 2 205 1 20 2 120 1 290 4 121 1 122 1 148 1 
340 1 298 2 47 7 312 3 84 3 117 4 196 1 330 3 120 6 50 3 124 1 140 3 148 1 
129 1 128 1 74 1 213 1 47 10 78 1 196 2 137 2 330 6 99 1 104 2 60 1 178 2 168 1 265 2 117 4 86 2 205 1 20 2 290 4 121 1 122 1 148 1 
297 1 340 1 298 1 178 2 47 8 312 1 84 2 265 2 117 4 196 1 137 2 330 4 20 2 120 3 290 4 50 1 160 1 124 1 140 1 148 1 
186 1 117 3 196 1 330 3 340 1 120 2 298 1 47 6 312 1 160 1 84 2 140 1 124 1 148 1 
178 1 47 2 265 1 86 1 196 1 137 1 20 1 330 2 66 1 290 2 104 1 
129 2 213 2 325 1 75 1 47 8 117 2 86 2 196 2 330 6 120 2 122 1 50 2 104 2 
91 1 297 2 129 2 213 2 298 1 75 1 325 1 47 26 196 4 137 2 330 14 50 5 333 1 160 1 140 4 104 2 55 1 340 2 178 2 312 4 84 5 265 2 86 2 117 12 20 2 120 10 290 4 124 1 148 2 
117 1 129 1 47 1 
213 1 330 1 47 1 
94 1 47 4 117 1 86 1 196 1 330 3 120 1 50 1 104 1 
74 1 128 1 129 1 213 1 60 1 178 1 168 1 47 8 265 1 86 2 117 2 196 2 137 1 330 6 20 1 120 1 99 1 121 1 290 2 122 1 50 1 104 2 
340 1 47 6 312 1 84 1 117 3 196 1 330 3 120 2 50 1 140 1 148 1 
297 1 298 1 178 1 312 1 47 3 84 1 265 1 117 2 137 1 330 1 20 1 120 2 290 2 50 1 333 1 140 1 124 1 
128 1 55 1 340 1 178 1 312 2 47 10 84 3 265 1 117 5 196 2 137 1 20 1 330 5 120 5 290 2 50 2 140 2 148 2 
128 1 178 1 47 2 265 1 86 1 196 1 137 1 20 1 330 2 120 1 290 2 50 1 
128 1 178 1 47 4 78 1 265 1 117 2 86 1 196 1 137 1 20 1 330 2 120 1 290 2 50 1 104 1 148 1 
297 1 128 1 178 3 47 3 312 1 84 1 265 3 117 2 205 1 137 3 20 3 330 1 120 2 290 6 50 1 333 1 140 1 
297 2 129 4 128 1 213 4 298 1 75 1 325 1 47 39 78 3 196 6 137 5 330 20 50 6 333 1 235 1 160 1 140 3 104 4 340 2 178 5 35 1 312 3 241 1 84 4 265 5 117 19 86 4 205 1 20 5 66 1 120 10 290 10 122 1 124 1 148 5 
195 1 285 1 131 1 341 1 310 1 342 1 301 1 
81 1 131 1 285 1 341 1 310 1 342 1 301 1 195 1 118 1 40 1 206 1 175 1 
186 1 109 1 44 1 309 1 260 1 87 1 139 1 229 1 311 1 335 1 70 1 
109 1 188 1 285 1 44 1 309 1 56 1 260 1 249 1 341 1 310 2 184 1 311 1 302 1 85 1 195 2 87 1 139 1 229 1 
322 1 249 1 184 1 277 1 302 2 195 2 305 1 139 1 101 1 109 3 188 1 285 2 221 1 56 1 309 2 260 1 341 1 310 2 311 1 85 2 87 1 229 1 191 1 
322 1 249 1 184 1 277 1 302 2 232 1 195 2 305 1 139 2 101 1 109 3 339 1 188 1 285 2 221 1 309 2 260 2 341 1 310 2 311 2 85 2 87 1 229 1 191 1 
322 1 42 1 109 4 339 1 44 1 309 1 260 3 34 1 277 1 311 3 264 1 302 1 328 2 79 1 204 2 87 1 143 1 139 3 229 1 331 1 191 1 22 1 107 1 
322 1 42 1 109 4 339 1 44 1 309 1 260 3 34 1 277 1 311 3 264 1 302 1 328 2 204 2 87 1 139 3 229 1 331 1 191 1 176 1 22 1 107 1 
260 1 112 1 87 1 139 1 229 1 311 1 
90 1 211 1 109 3 151 1 44 2 57 1 309 2 112 1 260 7 240 1 274 1 300 1 287 1 311 7 37 1 302 1 280 1 87 3 291 1 139 6 229 2 
90 1 46 1 249 1 298 1 184 1 47 6 302 1 160 1 109 1 188 1 56 1 309 1 260 1 310 2 261 1 311 1 312 1 16 1 265 2 317 2 117 3 20 2 120 2 229 1 124 1 276 1 327 1 195 2 196 1 137 2 330 3 139 1 140 1 285 1 340 1 178 2 341 2 84 2 242 1 85 1 244 1 142 1 87 1 290 4 208 2 149 1 148 1 
42 1 1 2 44 1 328 3 139 1 31 2 331 1 176 1 198 1 107 1 307 1 199 1 237 2 109 2 58 1 260 1 34 2 61 1 311 1 62 1 264 1 204 3 207 1 267 1 225 1 345 2 22 1 23 1 
90 1 42 1 109 2 151 1 309 1 112 1 260 2 311 2 302 1 87 2 139 2 321 1 229 1 
90 1 109 1 339 1 44 1 309 1 260 4 87 1 139 4 229 1 311 4 335 1 70 1 263 1 
211 1 109 1 309 1 260 2 183 1 300 1 311 2 302 1 135 1 87 2 139 2 229 1 191 1 9 1 
54 1 257 1 44 1 260 1 87 1 139 1 229 1 311 1 77 1 308 1 
90 1 109 1 309 1 260 2 240 1 311 2 87 1 139 2 320 1 291 1 229 1 
90 1 109 3 44 1 309 2 57 1 260 5 274 1 311 5 263 1 87 2 139 4 291 1 229 2 191 1 335 1 70 1 
90 1 109 3 44 1 309 2 57 1 260 5 311 5 263 1 96 1 87 2 139 4 291 1 229 2 191 1 335 1 70 1 
109 1 188 1 285 1 44 1 309 1 260 1 249 1 341 1 310 2 184 1 311 1 302 1 85 1 195 2 232 1 87 1 139 1 229 1 
211 1 109 1 151 1 309 1 260 1 300 1 311 1 302 1 280 1 87 2 139 1 229 1 191 1 
187 1 259 1 341 1 88 1 230 1 
199 1 53 1 187 2 221 1 259 1 59 1 341 1 264 1 328 2 204 2 305 1 159 1 41 1 101 1 88 2 331 1 337 1 107 1 230 2 
187 1 285 1 259 1 310 1 195 1 253 1 88 1 197 1 171 1 
53 1 59 1 259 1 
219 1 39 1 186 1 224 1 
256 1 292 1 314 1 
318 1 103 1 179 1 
256 1 292 1 236 1 314 1 
256 1 292 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 45 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 77 1 308 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
256 2 165 1 19 1 292 1 314 1 179 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
203 2 164 1 224 2 245 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
234 1 
256 1 292 1 236 1 314 1 
256 1 292 1 236 1 314 1 
165 1 224 1 217 1 162 1 
39 1 224 1 

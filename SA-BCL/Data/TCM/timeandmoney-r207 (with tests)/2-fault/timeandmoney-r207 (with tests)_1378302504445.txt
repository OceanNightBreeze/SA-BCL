#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 157 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 379 361 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
279 1 233 2 134 2 118 1 170 1 95 1 68 5 285 1 71 2 236 9 120 1 221 2 144 2 176 2 76 4 79 1 179 1 150 1 188 1 152 1 124 1 300 3 359 6 55 1 160 1 88 2 43 1 193 9 
279 1 233 2 134 2 118 1 170 1 95 1 68 5 285 1 71 2 236 9 120 1 221 2 144 2 176 2 76 4 79 1 179 1 150 1 188 1 152 1 124 1 300 3 359 6 55 1 160 1 88 2 43 1 193 9 
279 1 233 2 134 2 118 1 170 1 95 1 68 6 285 1 71 2 236 10 120 1 221 2 144 2 176 2 76 5 79 1 179 1 150 1 188 1 152 1 124 1 300 4 359 7 55 1 160 1 88 2 43 1 193 10 
279 1 233 2 134 2 118 1 170 1 95 1 68 4 285 1 71 2 236 7 120 1 221 2 144 2 176 1 76 3 79 1 179 1 150 1 188 1 124 1 300 2 359 4 55 1 160 1 88 2 43 1 193 7 
179 1 233 1 150 1 134 1 95 1 188 1 68 3 152 1 71 1 300 1 359 3 236 4 144 1 176 2 88 1 43 1 193 4 76 2 
178 1 179 1 233 1 23 1 352 1 134 1 118 1 170 1 68 1 95 1 236 2 221 1 144 1 88 1 43 1 193 2 
179 1 233 2 95 1 68 2 300 1 359 1 236 3 221 1 160 1 88 2 43 1 193 3 76 1 
279 1 233 2 134 1 95 1 68 5 71 1 267 1 236 9 221 1 144 1 176 2 76 4 179 1 80 1 150 1 188 1 152 1 300 3 359 7 55 1 160 1 88 2 43 1 193 9 
279 1 233 2 134 1 95 1 68 5 71 1 267 1 236 9 221 1 144 1 176 2 76 4 179 1 80 1 150 1 188 1 152 1 300 3 359 7 55 1 160 1 88 2 43 1 193 9 
278 1 341 1 313 1 
278 1 30 1 290 2 
252 1 280 2 125 2 317 1 272 2 128 2 186 2 75 2 
252 1 131 1 64 1 280 2 369 1 286 1 372 2 3 1 96 1 97 2 119 1 317 1 7 1 74 2 293 2 175 1 75 2 53 1 243 1 272 3 246 1 186 2 34 1 355 1 38 1 125 2 84 1 251 2 108 1 58 1 109 1 128 3 277 1 305 1 162 1 46 1 90 1 
252 1 378 1 77 1 280 1 125 1 272 1 158 1 128 1 186 1 75 1 
278 1 280 1 272 1 225 1 149 1 313 1 15 1 266 1 289 1 329 1 128 1 158 1 161 1 306 1 
278 1 280 1 272 1 225 1 149 2 313 1 186 1 15 2 266 1 125 1 289 1 128 1 158 1 306 1 75 1 
262 1 302 1 149 1 15 1 275 1 
278 1 302 1 149 2 32 1 313 1 20 1 15 2 275 1 
302 1 149 1 15 1 
252 1 77 1 280 1 272 1 149 1 168 1 186 1 275 1 15 1 378 1 125 1 158 1 128 1 75 1 
278 1 
278 1 302 1 149 2 32 1 313 1 15 2 275 1 373 1 
278 1 112 1 331 1 196 1 149 5 32 1 313 1 314 2 122 1 275 2 15 5 72 1 264 1 302 2 73 2 304 2 330 1 89 1 208 1 
341 1 317 1 
280 2 272 2 182 1 186 1 205 1 125 1 317 2 128 2 75 1 
126 1 284 1 213 1 
131 1 272 1 369 1 246 1 372 1 119 1 84 1 235 1 317 1 58 1 128 1 277 1 74 1 293 1 175 1 305 1 
131 1 280 1 281 1 272 2 246 1 369 1 186 1 372 1 213 1 119 1 5 1 84 1 58 1 277 1 128 2 74 1 293 1 175 1 305 1 75 1 
280 5 272 5 281 1 312 1 186 4 94 1 5 2 205 1 125 1 317 1 329 1 128 5 216 1 75 4 
378 1 280 2 272 2 158 1 128 2 186 2 212 1 75 2 
5 1 125 1 280 3 317 1 272 3 128 3 186 3 75 3 
378 1 280 1 272 1 158 1 128 1 186 1 75 1 
280 1 125 1 205 1 272 1 182 1 158 1 128 1 186 1 75 1 
252 1 131 1 64 1 280 3 281 1 369 1 25 1 372 1 3 1 97 2 119 1 5 1 266 1 205 1 289 1 317 1 7 1 74 1 293 1 175 1 75 3 53 1 243 1 272 4 225 1 149 1 297 1 246 1 186 3 34 1 15 1 84 1 125 2 251 1 58 1 109 1 277 1 128 4 158 1 305 1 306 1 162 1 46 1 90 1 
5 1 280 2 317 1 272 2 329 1 128 2 186 1 94 1 75 1 
278 1 280 3 281 1 272 3 149 1 225 1 186 3 15 1 25 1 5 2 266 1 125 1 205 1 289 1 140 1 158 1 128 3 306 1 75 3 
280 2 272 2 186 2 213 1 5 1 205 1 125 1 126 1 128 2 75 2 
131 1 272 1 369 1 246 1 372 1 119 1 84 1 317 1 58 1 128 1 277 1 74 1 293 1 175 1 305 1 
131 1 272 1 257 1 369 1 246 1 372 1 119 1 326 1 84 1 317 1 58 1 128 1 277 1 74 1 293 1 
113 1 195 1 255 1 283 1 284 2 3 1 97 2 50 1 318 1 53 1 243 1 224 1 34 1 298 1 35 1 213 2 38 2 126 2 251 3 109 1 379 1 162 1 90 1 
280 1 272 1 158 1 128 1 186 1 306 1 212 1 75 1 
9 1 229 1 
9 1 229 1 
102 1 247 1 
102 1 247 1 
102 1 247 1 
238 1 9 1 229 1 
238 1 9 1 229 1 
9 1 229 1 348 1 
63 1 102 1 9 2 247 1 229 2 370 1 
238 1 9 1 229 1 
132 1 9 1 229 1 
132 1 9 1 229 1 
132 1 9 1 229 1 
280 2 201 1 204 1 4 1 288 1 317 1 27 1 8 1 9 1 375 1 348 1 75 2 294 1 272 2 323 1 149 1 186 2 15 1 189 1 56 1 18 1 159 1 128 2 229 1 
278 1 47 1 103 1 149 2 15 2 2 1 370 1 201 2 4 2 26 1 49 1 288 2 27 3 18 1 328 1 159 2 9 2 229 2 376 2 
134 1 144 1 71 1 
23 1 134 1 144 1 
303 1 23 1 190 1 134 3 241 1 71 2 
62 1 303 1 23 1 190 1 134 2 71 1 
303 1 23 1 190 2 134 2 71 1 
278 2 331 2 255 1 218 2 196 2 313 1 314 1 202 1 204 1 290 3 291 1 142 2 73 1 208 1 30 1 323 1 149 5 32 1 33 1 298 1 15 5 275 4 54 2 302 1 189 1 360 1 361 1 304 1 363 1 379 1 364 1 
278 5 331 5 91 5 232 1 255 3 196 6 259 1 133 1 313 1 314 2 338 1 202 2 262 5 264 1 290 9 142 6 73 2 208 1 30 3 323 4 149 9 32 1 33 1 298 3 15 9 275 7 274 1 54 6 302 6 361 3 304 2 363 2 379 3 365 1 
278 3 331 2 218 1 255 1 196 2 313 1 314 1 202 1 264 1 290 4 291 1 73 1 142 2 30 2 323 1 149 3 275 2 15 3 298 1 54 2 361 1 304 1 363 1 379 1 364 1 
278 4 331 3 218 2 255 2 196 4 259 1 133 1 313 1 314 1 338 1 202 1 264 1 290 7 291 1 142 4 73 1 30 3 323 2 149 4 15 4 275 3 298 2 54 4 361 2 304 1 363 1 379 2 364 1 
119 1 341 1 311 1 
119 1 308 1 
24 1 
119 1 131 1 246 1 
119 1 349 1 
119 1 131 1 
119 3 131 1 351 1 256 1 311 2 246 1 
113 3 217 1 114 1 194 1 99 1 255 1 282 1 151 1 273 1 38 4 50 2 251 7 109 3 87 1 10 2 307 1 269 1 
113 3 217 1 114 1 194 1 99 1 255 1 282 1 151 1 273 1 38 4 50 2 251 7 109 3 87 1 10 2 307 1 269 1 
113 3 217 1 114 1 194 1 99 1 255 1 282 1 151 1 273 1 38 4 139 1 50 2 251 7 109 3 87 1 10 2 307 1 269 1 
217 1 113 10 114 1 194 2 255 4 282 2 165 1 3 1 340 3 203 1 97 2 50 5 343 1 10 3 269 2 53 1 99 1 181 1 151 2 273 1 298 3 36 1 38 16 361 3 251 28 109 12 21 4 87 5 45 1 379 3 162 1 307 1 130 1 90 1 
113 4 114 1 53 2 194 1 99 1 255 1 282 1 151 1 273 1 171 1 38 5 3 2 97 4 358 1 343 1 50 3 251 9 109 4 87 1 10 2 162 2 307 1 269 1 90 2 
332 1 233 1 23 1 167 1 258 1 134 2 68 1 95 1 372 1 71 1 342 1 236 2 206 1 221 1 144 1 293 1 74 1 241 1 145 1 270 1 210 1 179 1 325 1 359 1 84 1 277 1 88 1 43 1 44 1 193 2 
332 1 233 1 23 1 167 1 258 1 134 2 68 1 95 1 372 1 71 1 136 1 48 1 342 1 346 1 236 3 206 1 221 1 144 1 293 1 74 1 241 1 145 1 270 1 359 2 84 1 277 1 88 1 43 1 44 1 193 3 
23 1 167 1 258 1 134 2 68 1 95 1 372 1 136 1 71 1 342 1 346 1 236 2 221 1 293 1 74 1 144 1 241 1 145 1 270 1 359 2 84 1 277 1 43 1 44 1 193 2 
253 1 131 1 233 1 164 1 167 2 200 1 372 1 48 1 119 1 342 2 236 1 221 2 293 1 74 1 145 2 214 1 301 1 84 1 215 1 58 1 277 1 88 1 193 1 
332 1 233 1 23 1 167 1 258 1 134 2 372 1 71 1 136 1 342 1 236 1 206 1 221 1 144 1 293 1 74 1 241 1 145 1 270 1 179 1 325 1 84 1 277 1 88 1 44 1 193 1 
85 1 
278 2 131 1 331 2 280 1 196 2 92 1 197 1 202 1 287 2 289 1 290 2 6 1 347 1 237 1 143 2 293 2 207 2 146 1 208 1 149 5 295 2 296 1 15 5 301 1 302 6 57 2 58 2 158 1 304 1 161 1 306 1 253 1 310 1 313 1 314 1 372 2 69 4 70 1 119 1 172 1 266 1 73 1 74 2 177 1 30 2 322 2 272 1 225 1 32 3 82 2 39 1 84 1 277 1 329 1 128 1 
280 1 272 1 149 3 310 1 225 1 32 1 197 1 82 1 15 3 373 1 69 2 70 1 39 1 302 2 266 1 289 1 237 1 158 1 329 1 128 1 306 1 161 1 
278 1 280 1 310 1 197 1 313 1 69 3 373 1 70 1 266 1 289 1 237 1 143 1 272 1 225 1 149 3 32 1 15 3 39 1 302 1 128 1 329 1 158 1 161 1 306 1 
278 1 280 1 310 1 197 1 313 1 373 1 69 3 70 1 266 1 289 1 237 1 143 1 272 1 225 1 149 3 32 1 15 3 82 1 39 1 302 2 57 1 128 1 329 1 158 1 161 1 306 1 
278 5 331 1 280 1 196 1 92 1 197 1 287 2 289 1 237 1 143 4 207 2 208 1 209 1 149 5 295 2 15 5 302 7 57 4 158 1 304 1 306 1 161 1 60 1 310 1 313 5 314 1 69 6 373 1 70 1 263 1 173 1 172 1 266 1 268 1 73 1 322 2 30 2 272 1 225 1 32 3 82 4 39 1 128 1 329 1 
278 2 331 1 280 1 196 1 92 1 197 1 287 2 289 1 290 2 6 1 237 1 143 2 207 2 208 1 149 4 295 2 15 4 302 4 57 2 158 1 304 1 306 1 161 1 310 1 313 1 314 1 69 4 70 1 172 1 266 1 73 1 322 2 30 2 272 1 225 1 32 2 82 2 39 1 128 1 329 1 
278 1 331 1 280 1 196 1 310 1 92 1 197 1 313 1 314 1 69 4 287 2 70 1 172 1 266 1 289 1 268 1 73 1 237 1 143 2 207 2 208 1 209 1 30 2 322 2 272 1 225 1 149 4 32 2 295 2 82 2 15 4 39 1 302 4 57 2 128 1 329 1 158 1 304 1 60 1 161 1 306 1 
278 1 331 1 280 1 196 1 310 1 92 1 197 1 313 1 314 1 69 4 287 2 70 1 172 1 266 1 289 1 268 1 73 1 237 1 143 2 207 2 208 1 209 1 30 2 322 2 272 1 225 1 149 4 32 2 295 2 82 2 15 4 39 1 302 4 57 2 128 1 329 1 158 1 304 1 60 1 161 1 306 1 
278 1 331 1 280 1 196 1 310 1 197 1 313 1 314 1 69 4 70 1 172 1 266 1 289 1 290 2 73 1 237 1 143 2 208 1 271 2 322 2 272 1 225 1 149 4 32 2 295 2 82 2 15 4 39 1 153 1 302 4 362 2 57 2 128 1 329 1 158 1 191 1 304 1 42 1 60 1 161 1 306 1 
278 1 331 1 280 1 196 1 310 1 92 1 197 1 313 1 314 1 69 5 287 2 70 1 263 1 172 1 266 1 289 1 268 1 73 1 237 1 143 3 207 2 208 1 209 1 30 2 322 2 272 1 225 1 149 4 32 2 295 2 15 4 82 3 39 1 302 5 57 3 128 1 329 1 158 1 304 1 60 1 161 1 306 1 
278 1 331 1 280 1 196 1 310 1 92 1 197 1 313 1 314 1 69 5 287 2 70 1 263 1 172 1 266 1 289 1 268 1 73 1 237 1 143 3 207 2 208 1 209 1 30 2 322 2 272 1 225 1 149 4 32 2 295 2 15 4 82 3 39 1 302 5 57 3 128 1 329 1 158 1 304 1 60 1 161 1 306 1 
278 1 331 1 280 1 196 1 310 1 197 1 313 1 314 1 69 4 70 1 172 1 266 1 289 1 290 2 6 1 73 1 237 1 143 2 208 1 271 2 322 2 272 1 149 4 225 1 32 2 295 2 82 2 15 4 39 1 302 4 362 2 57 2 329 1 128 1 158 1 304 1 191 1 161 1 306 1 
113 2 114 1 195 1 255 1 282 1 284 1 3 1 97 2 341 1 50 2 317 2 10 1 53 1 243 1 99 1 151 1 273 1 34 1 213 1 38 3 126 1 251 6 109 3 162 1 307 1 90 1 
113 2 255 2 117 1 284 11 3 2 340 3 96 1 97 4 50 1 317 1 98 1 321 1 148 1 53 2 223 1 243 2 181 1 34 1 298 2 213 11 38 8 361 2 126 4 251 13 109 5 87 1 21 3 162 2 379 1 46 1 130 1 90 2 
131 1 280 1 281 1 369 1 372 1 3 1 137 1 119 1 5 1 97 2 96 1 235 1 317 1 293 1 74 1 175 1 75 1 321 1 53 1 243 1 12 1 272 2 246 1 186 1 34 1 38 1 154 1 84 1 126 1 251 2 58 1 277 1 128 2 109 1 305 1 162 1 46 1 90 1 
321 1 53 1 280 1 243 1 281 1 272 1 186 1 34 1 372 1 3 1 97 2 5 1 157 1 251 1 58 1 109 1 128 1 293 1 74 1 162 1 46 1 75 1 90 1 
253 1 131 2 195 1 280 1 315 1 372 7 286 2 136 1 3 2 5 1 119 3 97 4 96 1 293 8 74 8 75 1 53 2 243 2 210 1 272 1 245 1 377 1 186 1 34 2 357 1 38 1 301 1 84 2 156 1 251 2 58 2 128 1 277 2 109 1 61 1 162 2 46 1 90 2 230 1 
113 1 280 1 255 1 284 1 371 1 3 1 97 2 50 1 205 1 75 1 321 1 53 1 243 1 272 1 186 1 34 1 298 1 213 1 38 1 125 1 361 1 126 1 251 2 128 1 109 1 162 1 379 1 90 1 
113 1 53 1 195 1 243 1 224 1 255 1 284 1 34 1 298 1 213 1 3 1 38 2 97 2 126 1 251 2 87 1 162 1 90 1 
113 1 53 1 195 1 243 1 283 1 284 1 34 1 213 1 3 1 97 2 50 1 126 1 251 1 109 1 162 1 379 1 90 1 
113 2 53 1 195 1 243 1 255 1 284 2 34 1 298 1 213 2 3 1 38 2 97 2 50 1 361 1 126 2 251 3 109 1 87 1 379 1 162 1 90 1 
113 1 53 1 243 1 224 1 255 1 284 1 34 1 298 1 213 1 3 1 38 2 97 2 126 1 251 2 87 1 162 1 230 1 90 1 
113 1 53 1 243 1 283 1 284 1 34 1 213 1 3 1 97 2 50 1 126 1 251 1 109 1 162 1 379 1 230 1 90 1 
113 2 53 1 243 1 255 1 284 2 34 1 298 1 213 2 3 1 38 2 97 2 50 1 361 1 126 2 251 3 109 1 87 1 379 1 162 1 230 1 90 1 
113 2 53 1 243 1 255 1 284 2 34 1 298 1 213 2 3 1 38 2 97 2 50 1 361 1 126 2 251 3 109 1 87 1 379 1 162 1 90 1 
131 1 64 1 369 1 372 1 3 1 96 1 119 1 97 2 317 1 293 1 74 1 175 1 53 1 243 1 272 1 246 1 34 1 38 1 84 1 251 2 58 1 277 1 128 1 109 1 305 1 162 1 46 1 90 1 
131 1 257 1 309 1 369 1 372 1 3 1 96 1 119 1 97 2 317 1 293 1 74 1 53 1 243 1 272 1 246 1 34 1 38 1 326 1 84 1 251 2 58 1 277 1 128 1 109 1 162 1 46 1 90 1 
113 2 321 1 53 1 243 1 255 1 284 2 34 1 298 1 213 2 3 1 38 2 97 2 50 1 361 1 126 2 251 3 109 1 87 1 379 1 162 1 90 1 
113 2 131 1 64 1 255 1 284 2 369 1 337 1 372 1 3 1 119 1 97 2 50 1 293 1 74 1 175 1 53 1 243 1 210 1 272 1 246 1 298 1 34 1 213 2 38 2 84 1 361 1 126 2 251 3 109 1 277 1 128 1 87 1 305 1 379 1 162 1 90 1 
280 1 255 1 284 1 3 1 97 2 205 1 75 1 321 1 53 1 243 1 272 1 186 1 34 1 298 1 123 1 213 1 38 2 125 1 361 1 126 1 251 3 109 1 128 1 379 1 162 1 90 1 
113 6 367 1 255 3 171 1 3 2 340 1 97 4 50 3 51 1 240 1 242 1 53 2 181 1 184 1 14 2 298 3 248 1 38 9 361 3 251 16 109 7 59 2 21 2 87 3 110 1 162 2 379 3 130 1 90 2 
113 4 367 1 255 3 171 1 135 1 3 3 340 2 97 6 343 2 50 2 51 2 222 1 53 3 78 1 181 2 184 1 13 1 14 4 298 3 248 1 38 14 83 1 361 3 251 24 327 1 109 10 59 1 87 2 21 2 110 2 162 3 379 2 90 3 
113 8 114 1 367 1 255 5 282 1 171 1 135 1 3 3 340 3 97 6 343 1 50 4 51 2 240 1 10 1 222 1 53 3 99 1 78 1 101 1 181 3 184 1 151 1 13 1 14 4 273 1 298 4 248 1 38 20 83 1 361 4 251 37 327 1 109 17 59 1 21 4 87 4 110 1 162 3 379 4 307 1 130 1 90 3 
113 7 114 1 367 1 255 5 282 1 171 1 135 1 3 4 340 3 97 8 343 2 50 4 51 2 240 1 10 1 222 1 53 4 99 1 78 1 101 1 181 3 184 1 151 1 13 1 14 4 273 1 298 4 248 1 38 20 83 1 361 4 251 35 327 1 109 15 59 1 21 4 87 3 110 1 162 4 379 3 307 1 130 1 90 4 
113 14 114 1 367 1 255 8 282 1 171 1 135 1 3 2 340 4 97 4 343 1 50 7 51 1 10 1 222 1 148 2 53 2 99 1 78 1 181 2 184 1 151 1 13 1 14 4 273 1 298 7 248 1 38 27 83 1 361 7 251 45 327 1 109 18 59 1 21 4 87 7 110 1 162 2 379 7 307 1 130 2 90 2 
226 1 4 1 26 1 288 1 328 1 159 1 9 1 229 1 370 1 201 1 
56 1 348 1 
4 1 288 1 104 1 159 1 9 1 93 1 229 1 201 1 366 1 
238 1 169 1 
63 1 132 1 116 1 
278 1 47 1 103 1 149 1 15 1 370 1 201 1 4 1 26 1 49 1 288 1 27 2 18 1 328 1 159 1 9 1 229 1 376 1 
278 1 47 1 103 1 149 1 15 1 370 1 201 1 4 1 26 1 49 1 288 1 27 2 18 1 328 1 159 1 9 1 229 1 376 1 
278 1 47 1 103 1 149 1 15 1 370 1 201 1 4 1 26 1 49 1 288 1 27 2 18 1 328 1 159 1 9 1 229 1 376 1 
63 1 238 1 169 1 
63 1 238 1 169 1 
132 1 116 1 
63 1 132 1 116 1 
8 1 294 1 
47 1 280 2 260 1 201 1 204 1 4 1 288 1 317 1 27 1 8 1 9 1 375 1 348 1 75 2 376 1 294 1 272 2 323 1 149 1 186 2 15 1 275 1 189 1 56 1 128 2 159 1 229 1 
131 1 280 2 286 2 372 2 316 1 3 1 119 1 97 2 96 1 293 2 74 2 52 1 320 1 321 1 53 1 243 1 272 2 245 1 121 1 34 1 38 1 16 1 84 1 156 1 251 2 277 1 128 2 109 1 162 1 46 1 90 1 
270 1 210 1 23 1 183 1 167 1 134 2 258 1 299 1 372 2 71 1 136 1 84 1 206 1 277 1 144 1 74 2 293 2 239 1 241 1 
270 1 23 1 167 1 134 2 258 1 372 1 71 1 136 1 220 1 84 1 206 1 277 1 144 1 74 1 293 1 239 1 241 1 
131 1 253 1 183 1 167 1 200 1 372 1 119 1 301 1 84 1 58 1 277 1 292 1 74 1 293 1 
270 1 23 1 183 1 167 1 134 2 258 1 299 1 372 1 71 1 136 1 84 1 206 1 277 1 144 1 74 1 293 1 239 1 241 1 
335 1 
278 1 331 1 72 1 341 1 196 1 313 1 89 1 
278 2 331 1 196 1 92 1 313 1 314 1 287 1 290 1 73 1 207 1 208 1 30 1 149 1 32 1 15 1 302 1 304 1 
278 8 131 3 331 7 234 2 196 8 202 2 339 2 289 2 345 1 290 12 141 2 142 6 293 3 146 1 208 4 349 2 210 1 149 5 246 3 15 5 298 2 54 6 107 2 302 5 155 1 361 2 58 1 304 4 22 2 256 1 255 2 308 3 368 1 311 2 313 2 67 2 314 4 372 3 261 2 119 10 72 1 265 1 174 2 73 4 74 3 30 6 32 3 227 2 276 1 84 4 277 3 89 1 379 2 
278 5 331 6 66 1 255 2 196 5 67 1 313 2 314 2 202 1 135 1 340 1 174 2 290 6 142 5 73 2 146 1 222 1 208 2 30 3 181 1 149 1 32 1 13 1 15 1 298 2 54 5 249 1 302 1 83 1 361 2 327 1 304 2 21 1 379 2 
252 1 331 2 280 1 255 2 282 1 196 2 168 1 67 1 219 1 314 1 174 2 268 1 73 1 75 1 208 1 77 1 99 1 272 1 149 1 151 1 186 1 15 1 378 1 125 1 158 1 128 1 304 1 307 1 
278 1 331 1 196 1 313 1 314 1 72 1 73 1 304 1 89 1 208 1 
278 5 331 3 174 2 30 5 255 2 361 2 290 10 196 5 141 1 142 5 67 1 298 2 379 2 54 5 
278 1 302 1 149 1 32 1 313 1 15 1 
131 1 253 1 331 2 334 1 196 2 314 2 372 4 202 2 119 1 264 1 345 1 347 1 73 2 293 4 74 4 146 2 208 1 177 1 149 3 32 2 15 3 301 1 302 4 155 2 84 1 58 2 277 1 304 2 192 1 
252 1 131 1 64 1 280 2 369 1 372 1 3 1 97 2 119 1 317 1 7 1 293 1 74 1 175 1 75 2 53 1 243 1 272 3 186 2 246 1 34 1 125 2 84 1 251 1 58 1 109 1 128 3 277 1 305 1 162 1 46 1 90 1 
278 4 331 1 30 2 196 2 313 2 314 1 54 2 202 1 290 4 142 2 73 1 304 1 10 1 146 1 208 1 
288 1 159 1 211 1 
288 1 159 1 211 1 
26 1 288 1 353 1 159 1 294 1 
288 1 159 1 211 1 
0 1 288 1 159 1 
0 1 288 1 159 1 
0 1 288 1 159 1 
288 1 159 1 
9 1 229 1 
113 3 53 2 114 1 99 1 255 1 282 1 151 1 273 1 38 4 3 2 97 4 50 2 343 1 251 8 109 4 87 1 10 1 162 2 307 1 90 2 
113 2 114 1 99 1 255 1 282 1 151 1 273 1 38 3 341 1 50 2 251 6 109 3 10 1 307 1 
113 2 53 1 255 1 298 1 3 1 38 2 97 2 50 1 361 1 374 1 251 3 109 1 87 1 379 1 162 1 90 1 
38 3 340 1 113 2 50 1 255 1 361 1 181 1 251 6 109 3 87 1 21 2 298 1 379 1 130 1 
113 9 114 1 255 3 282 2 340 2 3 2 97 4 50 5 343 2 10 1 98 1 148 1 53 2 350 1 99 1 151 2 273 1 298 2 38 11 361 2 251 21 109 10 87 4 21 2 379 2 162 2 307 1 130 1 90 2 
251 1 109 1 21 1 
38 1 340 1 251 1 
113 3 53 1 255 1 298 1 3 1 38 3 97 2 50 2 361 1 374 1 251 5 141 1 109 2 87 1 162 1 379 1 90 1 
113 2 255 2 171 1 135 1 340 1 3 1 97 2 50 1 222 1 53 1 181 1 13 1 298 2 38 6 83 1 361 2 251 10 327 1 109 4 21 1 87 1 162 1 379 2 90 1 
113 2 99 1 255 1 282 1 151 1 38 3 50 1 251 6 109 3 87 1 307 1 
113 2 114 1 53 1 350 1 282 1 151 1 273 1 38 1 3 1 97 2 50 1 343 1 251 3 109 2 87 1 162 1 90 1 
113 5 53 1 99 1 255 2 282 2 219 1 151 2 171 1 3 1 38 5 97 2 50 3 251 10 109 5 87 2 162 1 307 2 90 1 
113 1 53 1 255 1 171 1 298 1 3 1 38 2 97 2 251 2 87 1 162 1 90 1 
113 2 53 1 255 1 171 1 298 1 3 1 38 2 97 2 50 1 361 1 251 3 109 1 87 1 379 1 162 1 90 1 
113 2 53 3 350 1 282 1 151 1 171 1 3 3 38 1 97 6 343 1 50 1 251 3 109 2 240 1 87 1 162 3 90 3 
113 12 114 1 255 5 282 3 165 1 171 1 203 1 3 5 340 3 97 10 343 2 50 7 374 1 240 1 10 1 53 5 350 1 99 2 181 1 151 3 273 1 298 3 36 1 38 16 361 3 251 31 109 15 21 4 87 5 162 5 379 3 307 2 130 1 90 5 
113 2 114 1 53 1 99 1 255 1 282 1 181 1 151 1 13 1 273 1 171 1 38 4 3 1 340 1 97 2 50 2 251 8 109 4 21 1 10 1 162 1 307 1 90 1 
113 3 114 1 255 2 282 1 171 1 3 2 340 1 97 4 50 2 374 1 10 1 53 2 99 1 181 1 151 1 13 1 273 1 298 1 38 6 361 1 251 11 109 5 21 2 87 1 162 2 307 1 130 1 90 2 
113 4 114 1 255 3 282 1 171 1 135 1 340 1 3 3 97 6 50 3 343 1 374 1 10 1 222 1 53 3 99 1 181 1 151 1 13 1 273 1 298 2 38 9 83 1 361 2 251 17 327 1 109 8 87 1 21 1 162 3 379 2 307 1 90 3 
113 5 114 1 255 3 282 1 171 1 135 1 340 1 3 3 97 6 343 1 50 3 374 1 10 1 222 1 53 3 99 1 181 1 151 1 13 1 273 1 298 2 38 10 83 1 361 2 251 16 327 1 109 6 21 1 87 2 162 3 379 1 307 1 90 3 
113 2 114 1 53 1 99 1 255 1 282 1 181 1 151 1 13 1 273 1 171 1 38 4 3 1 340 1 97 2 50 2 251 8 109 4 21 1 10 1 162 1 307 1 90 1 
113 2 255 2 171 1 135 1 340 1 3 1 97 2 50 1 222 1 53 1 181 1 13 1 298 2 38 6 83 1 361 2 251 10 327 1 109 4 21 1 87 1 162 1 379 2 90 1 
113 5 114 1 255 3 282 1 171 1 135 1 3 4 340 1 97 8 50 3 343 2 374 1 10 1 222 1 53 4 99 1 181 1 151 1 13 1 273 1 298 2 38 10 83 1 361 2 251 17 327 1 109 7 87 2 21 1 162 4 379 1 307 1 90 4 
113 6 255 3 171 1 135 1 3 4 340 1 97 8 50 3 343 2 240 1 222 1 53 4 181 1 13 1 298 3 38 9 83 1 361 3 251 14 327 1 109 5 87 3 21 1 162 4 379 2 90 4 
113 6 114 2 99 1 255 1 282 3 151 3 273 1 38 3 50 3 251 7 109 4 87 3 307 1 
113 4 114 1 255 3 282 1 171 1 135 1 3 4 340 1 97 8 50 3 343 2 240 1 10 1 222 1 53 4 99 1 181 1 151 1 13 1 273 1 298 2 38 10 83 1 361 2 251 17 327 1 109 7 87 1 21 1 162 4 379 1 307 1 90 4 
280 1 317 1 272 1 128 1 329 1 94 1 29 1 
147 1 280 1 272 1 198 1 199 1 94 1 17 1 317 1 19 1 329 1 128 1 29 1 
119 1 131 1 253 1 301 1 341 1 84 1 58 1 277 1 293 1 74 1 372 1 
131 1 280 1 272 2 246 1 369 1 186 1 372 1 119 1 5 1 84 1 317 1 58 1 128 2 277 1 74 1 293 1 305 1 75 1 
349 1 131 2 280 2 272 2 246 2 369 1 186 1 372 1 339 1 119 3 5 1 266 1 84 1 155 1 317 1 158 1 128 2 277 1 74 1 293 1 306 1 305 1 75 2 
131 2 280 2 257 1 369 1 372 2 339 1 5 1 119 3 266 1 317 1 293 2 74 2 75 2 349 1 272 2 185 1 186 1 246 2 155 1 84 1 277 1 128 2 158 1 306 1 
278 1 131 1 308 1 1 1 311 1 313 1 372 3 339 1 119 4 289 1 293 3 74 3 349 1 149 2 354 1 185 1 246 1 15 2 302 1 155 1 84 1 58 1 277 1 
278 1 349 1 131 1 308 1 149 2 311 1 313 1 185 1 246 1 15 2 372 3 339 1 119 4 227 1 302 1 289 1 84 1 155 1 58 1 277 1 74 3 293 3 
84 1 277 1 293 1 74 1 377 1 372 1 
131 2 333 1 210 1 256 1 377 1 105 1 246 1 286 1 315 1 372 6 37 1 136 1 357 1 119 3 84 3 156 1 58 2 277 2 74 7 293 7 61 1 
113 2 131 1 114 1 64 1 280 1 255 1 282 1 284 1 369 1 337 1 372 1 316 1 3 2 119 1 5 1 97 4 50 2 317 2 74 1 293 1 175 1 10 1 75 1 321 1 53 2 99 1 243 2 210 1 272 2 324 1 151 1 246 1 186 1 273 1 34 2 213 1 38 3 84 1 126 1 251 6 109 3 277 1 128 2 305 1 162 2 307 1 90 2 
278 1 331 1 234 1 196 1 308 1 311 1 313 1 314 2 372 1 261 1 119 2 72 1 289 1 345 1 73 2 74 1 293 1 208 2 149 3 32 1 15 3 275 1 107 1 227 1 302 2 58 1 304 2 89 1 
131 1 210 1 256 1 311 1 377 1 246 1 372 2 119 2 265 1 84 2 277 1 74 2 293 2 
253 1 131 1 210 1 185 1 372 4 119 1 250 1 301 1 84 1 58 1 277 1 74 4 293 4 
231 1 131 1 333 1 246 1 187 1 372 2 37 1 119 1 155 1 84 2 277 1 74 2 293 2 129 1 
84 1 23 1 58 1 134 1 277 1 258 1 144 1 293 1 74 1 372 1 
131 1 210 1 372 2 136 1 16 1 119 1 84 1 156 1 277 1 74 2 293 2 
253 1 131 2 210 1 372 4 315 1 119 3 250 1 301 1 155 1 84 2 156 1 58 1 277 2 74 5 293 5 61 1 
253 1 131 2 210 1 372 4 119 3 250 1 301 1 155 1 84 2 156 1 58 1 277 2 74 5 293 5 41 1 61 1 
131 1 280 1 272 2 257 1 246 1 369 1 186 1 372 1 119 1 5 1 84 1 317 1 58 1 128 2 277 1 74 1 293 1 75 1 
131 1 333 1 256 1 105 1 246 1 372 1 37 1 119 1 155 1 84 2 277 1 74 1 293 1 
115 1 317 1 228 1 356 1 11 1 
278 1 254 1 115 1 180 1 149 2 225 1 313 1 336 1 275 1 15 2 356 2 25 1 266 1 289 1 317 1 228 2 158 1 306 1 11 2 
115 1 280 1 272 1 121 1 228 1 128 1 11 1 52 1 320 1 
115 1 180 1 336 1 
341 1 68 1 43 1 95 1 
233 1 236 1 88 1 68 1 43 1 95 1 193 1 
221 1 145 1 193 1 
179 1 233 1 118 2 68 1 95 1 138 1 236 3 40 1 28 1 88 1 43 1 193 3 
359 1 233 1 236 2 176 1 88 1 68 1 43 1 95 1 193 2 
179 1 233 1 134 1 188 1 68 1 71 1 236 1 144 1 88 1 193 1 76 1 
233 1 179 1 236 1 88 1 68 1 43 1 193 1 
233 1 179 1 236 1 88 1 43 2 95 1 193 1 
100 1 179 1 233 2 81 1 68 1 344 1 236 2 88 2 43 1 193 2 
279 1 179 1 233 1 95 1 68 2 300 1 55 1 359 2 236 3 88 1 43 1 193 3 76 1 
179 1 233 1 23 1 134 2 68 1 95 1 71 1 359 1 236 2 127 1 144 1 241 1 88 1 43 1 193 2 
179 1 233 2 95 1 68 2 152 1 300 1 359 2 236 4 176 1 88 2 43 1 193 4 76 1 
233 1 179 1 236 1 88 1 68 1 43 1 95 1 193 1 
233 1 244 1 118 1 95 2 68 3 138 1 300 1 359 2 40 1 236 4 88 1 43 2 193 4 76 1 
179 1 233 1 80 1 68 1 95 1 106 1 359 1 236 2 319 1 88 1 43 1 193 2 
179 1 233 1 118 2 68 1 95 1 138 2 40 1 236 3 88 1 163 1 43 1 193 3 
65 2 166 1 68 2 111 1 
233 1 179 1 236 1 86 1 88 1 193 1 
279 1 359 1 233 1 179 1 236 2 88 1 68 1 43 1 95 1 193 2 
31 1 
233 1 179 1 236 1 88 1 68 1 43 1 95 1 193 1 
279 1 359 1 233 1 179 1 236 3 118 1 88 1 68 1 43 1 95 1 193 3 
300 1 244 1 68 1 76 1 
68 1 43 1 

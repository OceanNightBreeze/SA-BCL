#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (75,200,258) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (75,200,258) 226 213 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (75,200,258) 226 10 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (75,200,258) (75,200,258) 168 131 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 91 290 (162,260) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 91 290 (122,344) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (75,200,258) 226 1 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
98 1 224 1 335 1 65 1 5 1 202 2 69 2 104 1 312 1 106 1 21 1 71 2 74 1 77 9 294 3 110 1 13 1 277 2 114 1 173 9 320 2 117 1 192 5 177 2 155 1 323 4 136 2 34 6 
98 1 224 1 335 1 65 1 5 1 202 2 69 2 104 1 312 1 106 1 21 1 71 2 74 1 77 9 294 3 110 1 13 1 277 2 114 1 173 9 320 2 117 1 192 5 177 2 155 1 323 4 136 2 34 6 
98 1 224 1 335 1 65 1 5 1 202 2 69 2 104 1 312 1 106 1 21 1 71 2 74 1 77 10 294 4 110 1 13 1 277 2 114 1 173 10 320 2 117 1 192 6 177 2 155 1 323 5 136 2 34 7 
98 1 224 1 335 1 65 1 5 1 202 1 69 2 104 1 312 1 106 1 21 1 71 2 74 1 77 7 294 2 110 1 13 1 277 2 114 1 173 7 320 2 192 4 177 2 155 1 323 3 136 2 34 4 
98 1 224 1 13 1 277 1 114 1 320 1 173 4 117 1 202 2 69 1 192 3 104 1 177 1 323 2 77 4 136 1 34 3 294 1 
98 1 277 1 114 1 320 1 173 2 256 1 192 1 104 1 177 1 142 1 155 1 21 1 71 1 77 2 157 1 136 1 
98 1 65 1 114 1 320 2 173 3 192 2 104 1 177 2 71 1 323 1 77 3 34 1 294 1 
98 1 224 1 65 1 5 1 202 2 69 1 104 1 71 1 77 9 48 1 149 1 294 3 110 1 13 1 277 1 114 1 173 9 320 2 117 1 192 5 177 2 323 4 136 1 34 7 
98 1 224 1 65 1 5 1 202 2 69 1 104 1 71 1 77 9 48 1 149 1 294 3 110 1 13 1 277 1 114 1 173 9 320 2 117 1 192 5 177 2 323 4 136 1 34 7 
283 1 16 1 95 1 
242 1 16 1 35 2 
311 2 234 1 262 2 359 2 201 2 68 1 11 2 197 2 
99 2 137 1 285 1 123 1 201 2 266 2 231 1 162 1 68 1 140 1 103 2 290 1 126 2 311 2 204 1 234 1 45 1 250 1 8 1 11 2 84 2 187 1 132 1 257 1 278 1 152 1 304 1 28 1 60 1 262 3 359 2 325 1 18 1 96 1 160 1 161 1 197 3 
311 1 234 1 262 1 359 1 166 1 201 1 151 1 61 1 11 1 197 1 
298 1 262 1 75 1 166 1 200 1 67 1 27 1 11 1 197 1 
311 1 262 1 75 1 359 1 166 1 201 1 67 1 27 1 11 1 197 1 
219 1 186 1 258 1 109 1 50 1 
283 1 219 1 16 1 237 1 186 2 258 2 109 1 129 1 
186 1 258 1 109 1 
332 1 151 1 201 1 258 1 311 1 234 1 262 1 359 1 166 1 219 1 61 1 186 1 11 1 197 1 
16 1 
283 1 219 1 16 1 167 1 186 2 258 2 109 1 129 1 
254 1 283 1 210 1 300 2 4 1 258 5 267 1 321 1 219 2 220 1 16 1 346 2 62 2 315 1 186 5 349 1 273 1 109 2 129 1 
95 1 68 1 
25 1 201 1 68 2 311 1 262 2 359 1 31 1 11 2 197 2 
119 1 211 1 246 1 
296 1 84 1 99 1 137 1 187 1 257 1 162 1 231 1 152 1 68 1 103 1 304 1 290 1 262 1 18 1 197 1 
137 1 84 1 99 1 187 1 257 1 152 1 231 1 162 1 288 1 290 1 304 1 268 1 103 1 311 1 119 1 262 2 359 1 18 1 11 1 197 2 
298 1 201 1 68 1 288 1 268 2 311 4 357 1 262 5 359 4 31 1 270 1 178 1 11 5 197 5 
311 2 334 1 262 2 359 2 166 1 61 1 11 2 197 2 
268 1 311 3 262 3 359 3 201 1 68 1 11 3 197 3 
311 1 262 1 359 1 166 1 61 1 11 1 197 1 
311 1 262 1 359 1 166 1 31 1 25 1 201 1 11 1 197 1 
268 1 311 2 262 2 75 1 226 1 359 2 166 1 31 1 213 1 201 1 67 1 27 1 11 2 288 1 197 2 
268 1 311 1 298 1 262 2 359 1 270 1 68 1 11 2 197 2 
268 1 311 1 262 1 75 1 226 1 359 1 166 1 67 1 10 1 27 1 11 1 288 1 197 1 
201 1 268 1 311 2 119 1 262 2 359 2 246 1 31 1 11 2 197 2 
84 1 99 1 137 1 187 1 257 1 162 1 231 1 152 1 68 1 103 1 304 1 290 1 262 1 18 1 197 1 
84 1 99 1 137 1 187 1 150 1 257 1 231 1 152 1 68 1 103 1 304 1 290 1 344 1 262 1 197 1 
123 1 3 1 230 1 266 2 126 4 203 1 45 1 250 2 293 1 47 1 12 1 82 1 211 2 132 1 301 1 15 1 28 2 243 1 119 2 60 1 217 1 246 2 325 1 96 1 
311 1 262 1 334 1 359 1 166 1 27 1 11 1 197 1 
105 1 100 1 
105 1 100 1 
164 1 105 1 100 1 196 1 
164 1 105 1 100 1 196 1 
164 1 196 1 
105 1 100 1 54 1 
105 1 100 1 54 1 
105 1 100 1 54 1 
164 1 105 2 100 2 275 1 196 1 55 1 
105 1 100 1 307 1 
105 1 100 1 87 1 
105 1 100 1 87 1 
105 1 100 1 87 1 
100 1 41 1 180 1 101 1 139 1 68 1 102 1 311 2 105 1 186 1 23 1 11 2 53 1 238 1 240 1 258 1 241 1 262 2 358 1 359 2 30 1 307 1 37 1 197 2 
85 1 100 2 180 2 41 2 275 1 112 2 338 1 258 2 139 3 241 2 20 1 105 2 30 1 16 1 328 1 327 1 330 1 186 2 37 2 
277 1 136 1 69 1 
277 1 136 1 157 1 
189 1 277 3 157 1 207 1 92 1 69 2 
324 1 189 1 277 2 157 1 92 1 69 1 
189 2 277 2 157 1 92 1 69 1 
331 2 39 2 283 1 230 1 339 1 124 1 267 1 102 1 343 1 233 1 72 1 293 1 78 2 346 1 315 2 186 5 23 1 273 3 82 1 109 1 129 1 300 1 240 1 258 5 242 1 322 1 217 1 219 4 16 2 35 3 62 1 282 1 
331 6 283 1 230 3 339 1 267 1 233 2 72 3 293 3 78 6 80 1 252 5 346 2 315 6 186 9 273 8 82 3 109 6 50 5 129 1 171 1 24 1 297 1 300 2 212 1 240 4 258 9 321 1 242 3 322 2 217 3 219 7 16 5 35 9 62 2 198 1 
39 1 331 2 283 1 230 1 124 1 233 1 72 1 293 1 78 2 346 1 315 2 186 3 273 3 82 1 300 1 240 1 258 3 321 1 242 2 322 1 217 1 219 2 16 3 62 1 35 4 282 1 
331 4 39 2 283 1 230 2 124 1 233 1 72 2 293 2 78 4 80 1 346 1 315 4 186 4 273 5 82 2 300 1 212 1 240 2 258 4 321 1 242 3 322 1 217 2 219 3 16 4 35 7 62 1 282 1 198 1 
2 1 187 1 95 1 
187 1 134 1 
308 1 
187 1 152 1 231 1 
111 1 187 1 
187 1 152 1 
125 1 2 2 187 3 152 1 231 1 191 1 
40 1 284 1 199 1 274 1 3 2 90 1 287 1 249 2 126 7 28 3 243 3 354 1 217 1 250 4 293 1 17 1 19 1 
40 1 284 1 199 1 274 1 3 2 90 1 287 1 249 2 126 7 28 3 243 3 354 1 217 1 250 4 293 1 17 1 19 1 
40 1 284 1 199 1 274 1 3 2 90 1 287 1 249 2 126 7 28 3 243 3 354 1 217 1 269 1 250 4 293 1 17 1 19 1 
40 2 284 1 199 5 123 1 3 5 182 1 230 3 287 2 266 2 249 3 141 1 289 1 126 31 72 3 165 1 22 3 250 16 293 4 82 3 274 2 299 1 90 2 26 1 353 1 354 1 28 15 243 10 29 4 60 1 217 4 17 1 325 1 96 1 19 1 
40 1 199 1 284 1 123 2 3 3 182 1 287 1 266 4 249 2 126 9 250 5 293 1 49 1 274 1 90 1 216 1 28 4 243 4 354 1 60 2 217 1 325 2 96 2 19 1 
98 1 99 1 309 1 137 1 43 1 340 1 69 1 104 1 103 1 127 1 71 1 77 2 147 1 251 1 207 1 84 1 88 1 277 2 114 1 173 2 320 1 175 1 192 1 177 1 304 1 218 1 136 1 157 1 34 1 221 1 
99 1 309 1 137 1 225 1 43 1 340 1 69 1 104 1 103 1 127 1 71 1 77 3 147 1 7 1 207 1 84 1 188 1 88 1 277 2 114 1 173 3 320 1 192 1 177 1 304 1 218 1 136 1 157 1 34 2 221 1 
99 1 137 1 225 1 340 1 69 1 104 1 103 1 127 1 71 1 77 2 147 1 207 1 84 1 188 1 88 1 277 2 114 1 173 2 192 1 304 1 218 1 157 1 136 1 34 2 221 1 
99 1 137 1 342 1 103 1 291 1 143 1 71 2 77 1 7 1 170 1 84 1 187 1 88 2 173 1 320 1 257 1 152 1 304 1 177 1 218 2 281 1 362 1 221 2 
98 1 99 1 309 1 137 1 225 1 43 1 340 1 69 1 103 1 127 1 71 1 77 1 147 1 207 1 84 1 88 1 277 2 173 1 320 1 175 1 177 1 304 1 218 1 136 1 157 1 221 1 
360 1 
222 1 137 1 99 2 200 1 67 1 267 1 103 2 291 1 233 1 313 1 75 1 166 1 346 1 184 1 168 1 315 1 186 2 273 1 11 1 109 2 52 1 129 1 84 2 298 1 187 1 255 1 300 1 131 1 257 2 27 1 258 2 152 1 304 1 262 1 362 1 62 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 2 262 1 75 1 166 1 167 1 168 1 186 2 109 1 11 1 197 1 129 1 
222 1 298 1 300 1 255 1 131 1 200 1 67 1 27 1 258 1 267 1 262 1 75 1 166 1 346 1 62 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 255 1 131 1 200 1 67 1 27 1 258 1 262 1 75 1 166 1 168 1 186 1 11 1 197 1 
222 1 298 1 300 1 255 1 131 1 200 1 67 1 27 1 258 1 267 1 262 1 75 1 166 1 346 1 62 1 168 1 186 1 11 1 197 1 
284 1 211 1 123 1 3 2 132 1 90 1 287 1 266 2 249 1 68 2 126 6 15 1 28 3 243 2 354 1 119 1 45 1 60 1 217 1 250 3 293 1 246 1 325 1 95 1 96 1 19 1 
199 1 123 2 3 1 230 1 266 4 68 1 141 1 289 1 126 14 204 1 45 1 72 2 145 1 22 3 250 8 293 2 8 1 82 2 209 1 211 11 132 2 190 1 243 2 28 6 29 3 119 11 60 2 217 1 246 4 33 1 325 2 96 2 265 1 
137 1 99 1 123 1 66 1 231 1 162 1 266 2 68 1 288 1 290 1 103 1 268 1 126 2 311 1 204 1 45 1 145 1 250 1 8 1 11 1 296 1 84 1 187 1 132 1 257 1 57 1 152 1 304 1 28 1 262 2 60 1 359 1 246 1 94 1 325 1 18 1 96 1 197 2 
99 3 137 2 225 1 42 2 3 4 138 2 230 2 266 6 231 2 103 3 268 1 311 1 45 3 145 1 314 1 8 1 9 2 11 1 187 2 278 2 152 2 243 8 244 2 119 7 60 3 246 7 325 3 18 2 158 1 19 1 197 3 284 1 199 4 123 3 287 1 162 2 249 1 68 2 288 1 290 2 126 20 204 1 72 2 250 10 293 3 82 2 84 3 211 7 132 3 90 1 257 1 304 2 354 1 28 10 262 3 217 3 359 1 36 1 96 3 
137 2 99 8 333 1 225 1 123 2 310 1 232 1 266 4 268 1 103 7 291 1 126 2 311 1 204 1 45 2 250 1 251 1 8 1 11 1 83 1 84 8 187 3 132 2 56 1 257 2 152 2 176 1 304 2 15 1 28 1 262 1 60 2 263 1 359 1 325 2 362 1 96 2 161 2 197 1 
123 1 3 1 201 1 230 1 266 2 126 3 311 1 45 1 72 1 145 1 250 1 293 1 11 1 82 1 211 1 132 1 243 1 28 2 119 1 280 1 60 1 262 1 359 1 217 1 246 1 31 1 325 1 96 1 197 1 
199 1 211 1 123 1 132 1 266 2 126 2 15 1 243 1 119 1 45 1 60 1 250 2 293 1 246 1 47 1 325 1 96 1 82 1 
211 1 123 1 3 1 132 1 230 1 266 2 126 2 15 1 243 1 28 2 119 1 203 1 45 1 60 1 217 1 246 1 325 1 96 1 
199 1 211 2 123 1 3 1 132 1 230 1 266 2 126 4 15 1 28 2 243 2 119 2 45 1 60 1 72 1 217 1 250 2 293 1 246 2 325 1 96 1 82 1 
199 1 211 1 123 1 132 1 266 2 126 2 243 1 119 1 263 1 45 1 60 1 250 2 293 1 246 1 47 1 325 1 96 1 82 1 
211 1 123 1 3 1 132 1 230 1 266 2 126 2 243 1 28 2 119 1 203 1 263 1 45 1 60 1 217 1 246 1 325 1 96 1 
199 1 211 2 123 1 3 1 132 1 230 1 266 2 126 4 28 2 243 2 119 2 263 1 45 1 60 1 72 1 217 1 250 2 293 1 246 2 325 1 96 1 82 1 
199 1 211 2 123 1 3 1 132 1 230 1 266 2 126 4 28 2 243 2 119 2 45 1 60 1 72 1 217 1 250 2 293 1 246 2 325 1 96 1 82 1 
137 1 99 1 123 1 231 1 162 1 266 2 68 1 290 1 103 1 126 2 204 1 45 1 250 1 8 1 84 1 187 1 132 1 257 1 278 1 152 1 304 1 28 1 262 1 60 1 325 1 18 1 96 1 197 1 
97 1 137 1 99 1 123 1 231 1 266 2 68 1 290 1 103 1 126 2 344 1 204 1 45 1 250 1 8 1 84 1 187 1 150 1 132 1 257 1 152 1 304 1 28 1 262 1 60 1 325 1 96 1 197 1 
199 1 211 2 123 1 3 1 132 1 230 1 266 2 126 4 28 2 243 2 119 2 45 1 60 1 72 1 217 1 145 1 250 2 293 1 246 2 325 1 96 1 82 1 
137 1 99 1 199 1 42 1 123 1 3 1 230 1 231 1 162 1 266 2 290 1 103 1 126 4 45 1 72 1 250 2 293 1 251 1 82 1 84 1 211 2 187 1 132 1 278 1 152 1 304 1 28 2 243 2 119 2 262 1 60 1 217 1 246 2 325 1 18 1 96 1 197 1 
199 1 123 1 201 1 230 1 266 2 126 3 311 1 45 1 72 1 145 1 250 2 293 1 11 1 82 1 211 1 132 1 154 1 28 1 243 1 119 1 60 1 262 1 217 1 359 1 31 1 246 1 325 1 96 1 197 1 
120 2 199 3 123 2 3 3 228 1 230 3 266 4 141 1 289 1 126 19 144 1 72 3 236 1 22 1 250 9 76 1 293 3 345 2 272 1 49 1 51 1 295 1 82 3 28 10 243 6 29 2 60 2 217 3 325 2 96 2 
120 4 199 2 123 3 182 2 3 2 228 2 230 2 266 6 141 2 126 26 144 2 72 3 236 1 250 14 22 2 76 1 293 3 345 1 148 1 206 1 185 1 49 1 51 1 82 3 115 1 243 4 28 12 29 2 60 3 217 2 325 3 159 1 96 3 63 1 
228 2 3 4 182 1 230 4 266 6 141 3 183 1 144 1 236 1 148 1 49 1 185 1 51 1 115 1 243 8 60 3 325 3 159 1 63 1 19 1 120 4 199 4 284 1 123 3 287 1 249 1 289 1 126 41 72 4 250 20 22 3 293 5 76 1 345 1 206 1 82 4 295 1 90 1 28 21 354 1 29 4 217 5 96 3 
120 4 284 1 199 3 123 4 182 2 3 4 228 2 230 3 287 1 266 8 249 1 141 3 289 1 183 1 126 38 144 1 72 4 236 1 22 3 250 20 76 1 293 5 345 1 148 1 206 1 185 1 49 1 51 1 295 1 82 4 115 1 90 1 354 1 28 18 243 7 29 4 60 4 217 4 325 4 159 1 63 1 96 4 19 1 
120 4 284 1 199 7 123 2 182 1 3 7 228 1 230 7 287 1 266 4 249 1 141 2 289 2 126 52 144 1 72 7 236 1 22 4 250 27 76 1 293 8 345 1 148 1 206 1 185 1 49 1 51 1 82 7 115 1 90 1 354 1 28 25 243 14 29 4 60 2 217 8 325 2 159 1 63 1 96 2 19 1 265 2 
105 1 100 1 195 1 41 1 180 1 275 1 328 1 330 1 37 1 241 1 
238 1 307 1 
279 1 223 1 105 1 100 1 41 1 180 1 37 1 259 1 241 1 
0 1 54 1 
87 1 55 1 337 1 
85 1 100 1 180 1 41 1 275 1 112 1 258 1 139 2 241 1 20 1 105 1 30 1 16 1 328 1 327 1 330 1 186 1 37 1 
85 1 100 1 180 1 41 1 275 1 112 1 258 1 139 2 241 1 20 1 105 1 30 1 16 1 328 1 327 1 330 1 186 1 37 1 
85 1 100 1 180 1 41 1 275 1 112 1 258 1 139 2 241 1 20 1 105 1 30 1 16 1 328 1 327 1 330 1 186 1 37 1 
0 1 54 1 55 1 
0 1 54 1 55 1 
87 1 337 1 
87 1 55 1 337 1 
53 1 101 1 
100 1 41 1 180 1 101 1 139 1 68 1 20 1 102 1 105 1 311 2 186 1 23 1 11 2 53 1 238 1 112 1 240 1 258 1 241 1 262 2 358 1 359 2 219 1 326 1 307 1 37 1 197 2 
137 1 99 2 333 1 123 1 266 2 103 2 126 2 204 1 45 1 145 1 250 1 8 1 11 2 83 1 84 2 187 1 113 1 132 1 214 1 152 1 304 1 305 1 59 1 28 1 262 2 60 1 32 1 325 1 96 1 161 2 197 2 
137 1 84 2 99 2 309 1 225 1 336 1 277 2 174 1 340 1 69 1 304 1 103 2 147 1 251 1 136 1 157 1 207 1 264 1 221 1 
84 1 99 1 309 1 137 1 225 1 277 2 340 1 69 1 103 1 304 1 156 1 147 1 136 1 157 1 207 1 264 1 221 1 
137 1 84 1 99 1 187 1 257 1 174 1 152 1 93 1 304 1 103 1 291 1 143 1 362 1 221 1 
84 1 99 1 309 1 137 1 225 1 336 1 277 2 174 1 340 1 69 1 304 1 103 1 147 1 136 1 157 1 207 1 264 1 221 1 
261 1 
283 1 210 1 16 1 95 1 4 1 315 1 273 1 
283 1 227 1 267 1 73 1 346 1 315 1 186 1 273 1 109 1 129 1 300 1 258 1 242 1 355 1 16 2 62 1 35 1 
137 3 99 3 2 2 4 1 230 2 231 3 267 4 103 3 233 2 235 1 313 1 9 2 271 2 315 8 186 5 273 9 109 5 319 1 111 2 187 10 152 3 191 1 242 6 194 1 16 8 247 1 62 4 248 2 331 6 121 1 283 2 64 2 72 2 293 2 251 1 78 6 346 4 348 2 81 2 82 2 129 3 84 3 210 1 130 2 300 4 257 1 258 5 91 2 260 2 304 4 217 2 134 3 35 12 38 2 
248 2 331 5 283 2 230 2 267 2 141 1 233 1 313 1 72 2 22 1 293 2 78 5 148 1 206 1 346 2 348 1 315 5 185 1 186 1 273 8 109 1 82 2 129 1 300 2 276 1 115 1 258 1 242 3 29 1 217 2 16 5 329 1 35 6 62 2 63 1 
248 2 332 1 284 1 201 1 287 1 267 1 311 1 107 1 234 1 166 1 293 2 346 1 348 1 315 2 316 1 186 1 273 2 11 1 300 1 151 1 90 1 258 1 262 1 217 1 359 1 61 1 62 1 197 1 
210 1 283 1 300 1 4 1 267 1 16 1 346 1 62 1 315 1 273 1 
248 2 331 5 230 2 242 5 72 2 217 2 293 2 78 5 16 5 9 1 35 10 348 1 315 5 273 5 82 2 
283 1 16 1 186 1 258 1 109 1 129 1 
137 1 99 4 121 2 267 1 103 4 291 1 233 2 313 2 184 1 346 2 315 2 186 3 273 2 109 4 52 1 129 2 84 4 86 1 187 1 300 2 257 2 152 1 258 3 321 1 304 1 245 1 362 1 62 2 247 1 
99 1 137 1 123 1 201 2 266 2 162 1 231 1 68 1 103 1 290 1 126 1 311 2 204 1 234 1 45 1 11 2 84 1 187 1 132 1 257 1 278 1 152 1 304 1 28 1 60 1 262 3 359 2 325 1 18 1 96 1 160 1 197 3 
331 2 283 2 300 1 249 1 267 1 242 2 233 1 313 1 78 2 16 4 346 1 35 4 62 1 315 2 273 1 
205 1 41 1 180 1 
205 1 41 1 180 1 
205 1 41 1 180 1 
41 1 180 1 101 1 328 1 306 1 
172 1 41 1 180 1 
172 1 41 1 180 1 
172 1 41 1 180 1 
41 1 180 1 
105 1 100 1 
284 1 199 1 123 2 3 2 182 1 90 1 287 1 266 4 249 1 126 8 28 4 243 3 354 1 60 2 217 1 250 4 293 1 325 2 96 2 19 1 
284 1 3 2 90 1 287 1 249 1 126 6 28 3 354 1 243 2 250 3 217 1 293 1 95 1 19 1 
199 1 123 1 3 1 352 1 230 1 266 2 126 4 28 2 243 2 60 1 72 1 217 1 250 2 293 1 325 1 96 1 82 1 
199 1 3 1 230 1 141 1 289 1 126 7 28 4 243 2 29 2 72 1 217 1 22 1 250 3 293 1 82 1 
284 1 199 4 123 2 3 5 182 2 230 2 287 2 266 4 249 1 289 1 126 23 72 2 250 11 22 2 293 3 82 2 90 2 153 1 354 1 243 9 28 12 29 2 60 2 217 3 33 1 325 2 96 2 19 1 265 1 
126 1 28 1 29 1 
126 1 250 1 22 1 
199 1 123 1 3 2 352 1 230 1 266 2 126 6 28 3 243 3 60 1 72 1 250 3 217 1 293 1 325 1 9 1 96 1 82 1 
199 1 123 1 3 1 230 2 266 2 141 1 126 12 72 2 22 1 250 6 293 2 148 1 206 1 49 1 185 1 82 2 115 1 28 6 243 2 29 1 60 1 217 2 325 1 96 1 63 1 
126 6 243 2 28 3 199 1 284 1 217 1 250 3 293 1 3 1 90 1 287 1 
199 1 123 1 3 1 182 1 90 1 287 1 266 2 153 1 126 3 243 2 354 1 28 2 60 1 250 1 325 1 96 1 19 1 
199 2 284 1 123 1 3 3 90 2 287 2 266 2 126 10 243 5 28 5 60 1 250 5 217 2 293 2 325 1 96 1 49 1 316 1 
199 1 123 1 266 2 126 2 243 1 60 1 250 2 293 1 325 1 49 1 96 1 82 1 
199 1 123 1 3 1 230 1 266 2 126 4 28 2 243 2 60 1 72 1 217 1 250 2 293 1 325 1 49 1 96 1 82 1 
199 1 123 3 182 1 3 1 90 1 287 1 266 6 153 1 126 3 28 2 243 2 60 3 250 1 325 3 49 1 96 3 295 1 
284 2 199 5 123 5 182 2 3 7 230 3 287 3 266 10 249 1 141 1 289 1 126 34 165 1 72 3 22 3 250 16 293 5 49 1 295 1 82 3 299 1 352 1 90 3 26 1 153 1 354 1 28 18 243 12 29 4 60 5 217 5 325 5 96 5 19 1 
284 1 123 1 3 2 287 1 266 2 249 1 141 1 126 8 22 1 250 4 293 1 206 1 49 1 90 1 28 4 354 1 243 2 29 1 60 1 217 1 325 1 96 1 19 1 
284 1 199 1 123 2 3 2 287 1 266 4 249 1 141 1 289 1 126 11 72 1 22 1 250 6 293 2 206 1 49 1 82 1 352 1 90 1 354 1 28 5 243 3 29 2 60 2 217 1 325 2 96 2 19 1 
284 1 199 1 123 3 3 3 182 1 230 2 287 1 266 6 249 1 141 1 126 19 72 2 22 1 250 9 293 3 148 1 206 1 185 1 49 1 82 2 352 1 115 1 90 1 354 1 28 10 243 4 29 1 60 3 217 3 325 3 96 3 63 1 19 1 
284 1 199 2 123 3 182 1 3 3 230 1 287 1 266 6 249 1 141 1 126 17 72 2 22 1 250 10 293 3 148 1 206 1 49 1 185 1 82 2 352 1 115 1 90 1 354 1 28 7 243 5 29 1 60 3 217 2 325 3 96 3 63 1 19 1 
284 1 123 1 3 2 287 1 266 2 249 1 141 1 126 8 22 1 250 4 293 1 206 1 49 1 90 1 28 4 354 1 243 2 29 1 60 1 217 1 325 1 96 1 19 1 
199 1 123 1 3 1 230 2 266 2 141 1 126 12 72 2 22 1 250 6 293 2 148 1 206 1 49 1 185 1 82 2 115 1 28 6 243 2 29 1 60 1 217 2 325 1 96 1 63 1 
284 1 199 2 123 4 3 3 182 2 230 1 287 1 266 8 249 1 141 1 126 18 72 2 22 1 250 10 293 3 148 1 206 1 185 1 49 1 82 2 352 1 115 1 90 1 354 1 28 8 243 5 29 1 60 4 217 2 325 4 96 4 63 1 19 1 
199 3 123 4 3 3 182 2 230 2 266 8 141 1 126 16 72 3 22 1 250 9 293 3 148 1 206 1 185 1 49 1 295 1 82 3 115 1 28 7 243 6 29 1 60 4 217 2 325 4 96 4 63 1 
199 3 284 1 3 3 90 3 287 3 126 7 28 4 354 2 243 6 217 1 250 3 293 1 19 1 
284 1 199 1 123 4 3 3 182 2 230 1 287 1 266 8 249 1 141 1 126 18 72 2 22 1 250 10 293 3 148 1 206 1 185 1 49 1 295 1 82 2 115 1 90 1 354 1 28 8 243 4 29 1 60 4 217 2 325 4 96 4 63 1 19 1 
298 1 262 1 14 1 270 1 68 1 11 1 197 1 
298 1 14 1 215 1 58 1 68 1 341 1 118 1 302 1 262 1 270 1 11 1 197 1 
304 1 291 1 103 1 137 1 99 1 84 1 187 1 95 1 362 1 257 1 152 1 
84 1 99 1 137 1 187 1 257 1 152 1 231 1 162 1 68 1 290 1 304 1 268 1 103 1 311 1 262 2 359 1 11 1 197 2 
84 1 99 1 137 1 121 1 111 1 187 3 67 1 91 1 27 1 152 2 231 2 162 1 290 1 304 1 268 1 103 1 311 1 262 1 359 1 166 1 11 1 197 1 
84 1 99 1 137 1 121 1 111 1 187 3 67 1 91 1 27 1 152 2 231 2 290 1 304 1 268 1 103 1 311 1 344 1 262 1 359 1 166 1 11 1 197 1 
137 1 99 3 121 1 283 1 2 1 64 1 286 1 122 1 231 1 103 3 186 2 108 1 109 1 84 3 111 1 187 4 257 1 258 2 91 1 152 1 304 1 134 1 16 1 
84 3 99 3 137 1 283 1 121 1 64 1 111 1 2 1 286 1 187 4 257 1 152 1 231 1 91 1 258 2 260 1 304 1 103 3 134 1 16 1 186 2 109 1 
304 1 103 1 137 1 99 1 84 1 310 1 
318 1 83 1 84 7 99 7 137 2 225 1 187 3 310 1 56 1 257 2 232 1 231 1 152 2 176 1 191 1 103 6 304 3 251 1 361 1 169 1 161 1 
137 1 99 1 284 1 123 2 42 1 3 2 287 1 231 1 266 4 162 1 249 1 68 2 290 1 268 1 103 1 126 6 311 1 45 2 250 3 145 1 293 1 251 1 11 1 84 1 211 1 187 1 132 2 90 1 278 1 152 1 304 1 28 3 243 2 354 1 119 1 244 1 262 2 60 2 217 1 359 1 246 1 32 1 325 2 18 1 96 2 19 1 197 2 
99 1 283 1 2 1 64 1 4 1 267 2 103 1 346 2 315 1 271 1 186 3 273 1 109 2 129 1 84 1 210 1 187 2 300 2 130 1 257 1 258 3 260 1 219 1 134 1 16 1 62 2 247 1 38 1 
84 2 99 2 137 1 2 1 187 2 310 1 231 1 152 1 191 1 103 2 304 2 194 1 251 1 
179 1 84 4 99 4 137 1 286 1 187 1 257 1 152 1 304 1 103 4 291 1 251 1 362 1 
318 1 84 2 99 2 137 1 121 1 187 1 231 1 152 1 193 1 103 2 304 2 70 1 314 1 169 1 
304 1 103 1 137 1 99 1 84 1 147 1 277 1 136 1 157 1 257 1 
84 2 99 2 83 1 137 1 225 1 187 1 113 1 152 1 103 2 304 1 251 1 
179 1 84 5 99 5 83 1 137 2 121 1 187 3 257 1 56 1 152 2 232 1 291 1 103 4 304 2 251 1 362 1 
179 1 84 5 99 5 83 1 137 2 121 1 187 3 239 1 257 1 152 2 232 1 291 1 103 4 304 2 251 1 362 1 
84 1 99 1 137 1 187 1 257 1 152 1 231 1 68 1 290 1 304 1 268 1 103 1 311 1 344 1 262 2 359 1 11 1 197 2 
318 1 84 1 99 1 137 1 121 1 187 1 231 1 152 1 191 1 103 1 304 2 361 1 169 1 
350 1 356 1 181 1 229 1 68 1 
1 1 350 1 181 1 226 1 229 1 351 1 67 1 27 1 258 1 292 1 356 1 75 1 166 1 219 1 186 1 
350 1 305 1 59 1 356 1 262 1 229 1 214 1 11 1 197 1 
1 1 351 1 229 1 
104 1 114 1 95 1 192 1 
104 1 177 1 77 1 114 1 173 1 320 1 192 1 
71 1 77 1 88 1 
104 1 177 1 98 1 155 2 77 3 79 1 114 1 173 3 320 1 116 1 44 1 192 1 
104 1 177 1 77 2 114 1 173 2 320 1 34 1 202 1 192 1 
98 1 13 1 277 1 320 1 173 1 69 1 192 1 177 1 323 1 77 1 136 1 
177 1 98 1 77 1 114 1 173 1 320 1 192 1 
104 1 177 1 98 1 77 1 114 2 173 1 320 1 
98 1 114 1 320 2 173 2 192 1 177 2 128 1 146 1 77 2 46 1 
110 1 98 1 114 1 320 1 173 3 5 1 192 2 104 1 177 1 323 1 77 3 34 2 294 1 
98 1 277 2 114 1 320 1 173 2 69 1 192 1 163 1 104 1 177 1 77 2 157 1 136 1 34 1 207 1 
98 1 114 1 320 2 173 4 117 1 202 1 192 2 104 1 177 2 323 1 77 4 34 2 294 1 
104 1 177 1 98 1 77 1 114 1 173 1 320 1 192 1 
89 1 114 2 173 4 320 1 116 1 44 1 192 3 104 2 177 1 155 1 323 1 77 4 34 2 294 1 
98 1 114 1 320 1 173 2 192 1 177 1 104 1 77 2 135 1 48 1 34 1 208 1 
104 1 177 1 98 1 155 2 77 3 114 1 173 3 320 1 116 2 6 1 44 1 192 1 
347 1 317 1 192 2 303 2 
177 1 98 1 77 1 173 1 320 1 133 1 
104 1 110 1 177 1 98 1 77 2 114 1 173 2 320 1 34 1 192 1 
253 1 
104 1 177 1 98 1 77 1 114 1 173 1 320 1 192 1 
110 1 98 1 320 1 173 3 114 1 192 1 177 1 104 1 155 1 77 3 34 1 
323 1 89 1 294 1 192 1 
114 1 192 1 

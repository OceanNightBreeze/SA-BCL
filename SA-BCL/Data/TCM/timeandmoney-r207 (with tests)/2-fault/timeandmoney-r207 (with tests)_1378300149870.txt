#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (7,29,204,230,302) (263,275) (263,275) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (7,29,204,230,302) (263,275) (263,275) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (7,29,204,230,302) (263,275) (263,275) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (7,29,204,230,302) (263,275) (263,275) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 75 164 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 75 164 221 229 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 52 1 248 1 275 1 130 1 13 1 214 1 365 1 78 1 358 1 39 1 263 1 362 1 7 1 
194 1 52 1 248 1 275 1 130 1 13 1 214 1 365 1 78 1 358 1 39 1 263 1 362 1 7 1 
194 1 52 1 248 1 275 1 130 1 13 1 214 1 365 1 78 1 358 1 39 1 263 1 362 1 7 1 
194 1 52 1 248 1 275 1 130 1 13 1 214 1 365 1 78 1 358 1 39 1 263 1 362 1 7 1 
272 1 52 4 248 4 241 1 102 1 130 1 13 1 214 1 365 1 14 1 17 1 313 2 125 3 82 3 126 1 362 1 208 1 142 2 
194 1 52 2 248 2 241 1 130 1 13 1 30 1 356 1 365 1 14 1 78 1 125 1 126 1 362 1 328 1 7 1 
52 3 248 3 241 1 102 1 130 2 13 2 14 1 78 1 313 1 125 2 82 1 362 1 24 1 
272 1 52 9 248 9 196 1 241 1 102 3 130 2 13 2 214 1 365 1 14 1 78 1 335 1 17 1 124 1 125 5 313 4 82 7 126 1 362 1 24 1 181 1 142 2 208 1 
272 1 52 9 248 9 196 1 241 1 102 3 130 2 13 2 214 1 365 1 14 1 78 1 335 1 17 1 124 1 125 5 313 4 82 7 126 1 362 1 24 1 181 1 142 2 208 1 
320 1 173 1 158 1 
51 1 320 1 236 2 
287 2 41 2 42 2 43 1 353 1 350 2 174 2 347 2 
170 2 53 1 72 1 172 1 54 1 0 1 74 1 174 3 150 1 79 2 3 1 175 1 360 1 34 1 279 1 207 1 106 1 62 1 347 2 111 1 350 3 311 1 333 2 367 1 189 1 245 1 287 2 20 1 41 2 42 2 43 1 353 1 270 2 192 1 25 1 26 1 144 2 
287 1 41 1 42 1 353 1 350 1 174 1 327 1 215 1 347 1 201 1 
318 1 225 1 330 1 320 1 173 1 174 1 350 1 284 1 322 1 278 1 42 1 60 1 372 1 327 1 
225 1 330 1 320 1 173 1 174 1 350 1 284 1 278 2 322 2 287 1 41 1 42 1 372 1 327 1 347 1 
235 1 336 1 278 1 322 1 344 1 
235 1 223 1 320 1 173 1 252 1 278 2 322 2 344 1 
235 1 278 1 322 1 
174 1 350 1 215 1 201 1 344 1 322 1 278 1 287 1 41 1 91 1 42 1 353 1 327 1 347 1 
320 1 
235 1 223 1 320 1 173 1 38 1 278 2 322 2 344 1 
159 2 223 1 249 1 320 1 173 1 184 1 310 2 88 1 200 1 277 1 344 2 322 5 278 5 244 1 137 2 235 2 315 1 157 1 281 1 
43 1 158 1 
351 1 174 2 350 2 287 1 41 1 42 2 21 1 43 2 347 1 
110 1 294 1 276 1 
72 1 111 1 0 1 350 1 174 1 79 1 367 1 3 1 175 1 20 1 43 1 270 1 192 1 26 1 209 1 144 1 
318 1 174 5 350 5 343 1 151 1 19 1 287 4 41 4 42 5 21 1 43 1 97 2 347 1 49 1 
287 2 41 2 42 2 217 1 350 2 174 2 327 1 215 1 
72 1 111 1 0 1 294 1 174 2 350 2 367 1 79 1 3 1 175 1 19 1 20 1 287 1 41 1 42 1 270 1 192 1 97 1 26 1 144 1 
287 3 41 3 42 3 43 1 97 1 350 3 174 3 347 1 
287 1 41 1 42 1 350 1 174 1 327 1 215 1 
287 1 41 1 42 1 21 1 351 1 350 1 174 1 327 1 347 1 
170 2 225 1 53 1 72 1 54 1 0 1 74 1 174 4 150 1 79 1 3 1 322 1 278 1 175 1 34 1 205 1 207 1 62 1 327 1 347 2 111 1 330 1 350 4 311 1 284 1 333 1 367 1 264 1 19 1 245 1 20 1 287 3 41 3 42 3 372 1 43 1 21 1 192 1 353 1 270 1 97 1 25 1 26 1 144 1 
318 1 287 1 41 1 42 2 43 1 350 2 174 2 97 1 343 1 
225 1 330 1 320 1 174 3 350 3 284 1 278 1 322 1 19 1 265 1 287 3 41 3 42 3 205 1 372 1 21 1 97 2 327 1 347 1 
110 1 294 1 174 2 350 2 287 2 41 2 42 2 21 1 97 1 347 1 
72 1 111 1 0 1 350 1 174 1 79 1 367 1 3 1 175 1 20 1 43 1 270 1 192 1 26 1 144 1 
72 1 111 1 73 1 0 1 76 1 350 1 174 1 79 1 367 1 175 1 20 1 43 1 270 1 26 1 144 1 
170 2 53 1 250 1 74 1 294 1 75 1 276 1 150 1 342 1 34 1 279 1 127 1 110 1 240 1 311 1 334 1 333 3 245 2 115 1 94 1 93 1 25 1 289 1 50 1 
287 1 41 1 42 1 372 1 217 1 350 1 174 1 327 1 
228 1 299 1 
228 1 299 1 
374 1 140 1 
374 1 140 1 
374 1 140 1 
243 1 228 1 299 1 
165 1 228 1 299 1 
374 1 228 2 68 1 253 1 140 1 299 2 
243 1 228 1 299 1 
243 1 228 1 299 1 
228 1 134 1 299 1 
228 1 134 1 299 1 
228 1 134 1 299 1 
273 1 197 1 293 1 228 1 174 2 297 1 299 1 278 1 322 1 80 1 61 1 9 1 350 2 186 1 287 2 41 2 165 1 42 2 43 1 216 1 377 1 22 1 269 1 23 1 
160 1 197 2 320 1 228 2 261 2 297 2 299 2 322 2 278 2 80 1 113 1 167 1 22 2 377 3 68 1 46 1 141 1 83 1 9 2 
126 1 214 1 365 1 
126 1 365 1 356 1 
306 1 274 1 214 2 365 3 356 1 122 1 
306 1 64 1 214 1 365 2 356 1 122 1 
306 2 214 1 365 2 356 1 122 1 
98 1 222 1 223 1 100 1 249 1 250 1 173 1 320 1 293 1 75 1 200 1 277 3 278 5 322 5 344 4 33 1 235 1 104 1 236 1 159 1 85 1 240 1 310 1 114 1 137 1 164 1 166 1 94 1 191 2 269 1 23 1 
319 1 98 2 222 3 223 1 249 1 250 3 173 1 320 2 75 3 200 3 32 1 277 8 278 9 322 9 344 7 33 2 235 6 301 5 236 3 63 1 281 1 159 2 85 3 240 3 310 2 336 5 137 2 164 3 166 1 94 3 376 1 269 4 116 1 48 1 
51 1 98 1 222 1 100 1 250 1 173 1 320 2 75 1 200 1 277 3 344 2 278 3 322 3 33 1 236 2 281 1 159 1 85 1 240 1 310 1 114 1 137 1 164 1 191 1 94 1 269 1 
319 1 51 1 98 1 222 2 100 1 250 2 173 1 320 2 75 2 200 2 277 5 278 4 322 4 344 3 33 1 236 3 63 1 281 1 159 1 85 2 240 2 310 1 137 1 114 1 164 2 191 2 94 2 269 2 116 1 
72 1 158 1 37 1 
72 1 36 1 
226 1 
175 1 72 1 367 1 
72 1 131 1 
72 1 367 1 
175 1 72 3 44 1 37 2 367 1 27 1 
127 3 71 1 329 1 250 1 259 2 161 1 227 1 183 1 103 1 31 1 2 1 333 7 245 3 94 1 279 4 182 1 50 2 
127 3 71 1 329 1 250 1 259 2 161 1 227 1 183 1 103 1 31 1 2 1 333 7 245 3 94 1 279 4 182 1 50 2 
127 3 71 1 329 1 250 1 259 2 161 1 227 1 183 1 103 1 31 1 2 1 333 7 337 1 245 3 94 1 279 4 182 1 50 2 
170 2 71 2 53 1 250 4 227 2 103 1 75 3 31 1 2 1 150 1 346 1 34 1 203 1 300 3 279 13 348 1 182 2 127 6 329 2 128 1 161 1 259 3 240 3 183 2 283 1 311 1 333 28 16 4 245 15 164 3 94 4 268 1 317 1 50 4 
170 4 71 1 53 2 250 1 227 1 103 1 296 1 31 1 150 2 2 1 34 2 279 5 364 1 182 1 127 4 329 1 259 2 183 1 283 1 311 2 333 9 245 4 94 1 50 3 
248 2 52 2 120 1 101 1 274 1 0 1 356 1 231 1 79 1 78 1 324 1 125 1 82 1 126 1 362 1 239 1 241 1 13 1 130 1 214 1 365 2 14 1 133 1 371 1 20 1 312 1 270 1 45 1 144 1 28 1 
248 3 52 3 120 1 274 1 101 1 0 1 356 1 231 1 79 1 78 1 323 1 125 1 82 2 256 1 126 1 109 1 239 1 241 1 13 1 130 1 214 1 365 2 14 1 371 1 20 1 312 1 270 1 45 1 144 1 28 1 
248 2 52 2 101 1 274 1 0 1 356 1 231 1 78 1 79 1 323 1 125 1 82 2 256 1 126 1 241 1 214 1 365 2 14 1 371 1 20 1 312 1 270 1 45 1 144 1 28 1 
72 1 52 1 248 1 12 1 0 1 130 1 13 1 231 2 367 1 78 2 79 1 345 1 59 1 371 2 20 1 312 2 270 1 6 1 35 1 26 1 109 1 8 1 144 1 
248 1 52 1 120 1 101 1 274 1 0 1 356 1 231 1 79 1 78 1 323 1 126 1 362 1 239 1 13 1 130 1 214 1 365 2 133 1 371 1 20 1 312 1 270 1 45 1 144 1 28 1 
193 1 
51 2 291 2 339 1 249 1 340 1 0 1 56 4 200 2 152 1 59 1 5 2 60 1 305 1 159 1 308 2 12 1 310 1 350 1 18 2 20 1 168 2 270 2 26 2 318 1 223 3 225 1 72 1 173 1 320 2 354 1 174 1 277 2 79 2 322 5 278 5 33 1 176 2 235 6 177 1 236 2 327 1 238 1 84 1 330 1 129 2 187 1 132 1 284 1 286 1 367 1 285 1 137 1 42 1 372 1 144 2 
318 1 223 1 225 1 56 2 174 1 354 1 278 3 322 3 235 2 60 1 327 1 305 1 330 1 38 1 350 1 187 1 132 1 284 1 285 1 18 1 42 1 372 1 
318 1 223 1 225 1 56 3 173 1 320 1 174 1 354 1 278 3 322 3 235 1 60 1 327 1 305 1 330 1 38 1 350 1 187 1 129 1 132 1 284 1 285 1 42 1 372 1 
318 1 223 1 225 1 56 3 173 1 320 1 174 1 354 1 278 3 322 3 235 2 5 1 60 1 327 1 305 1 330 1 38 1 350 1 187 1 129 1 132 1 284 1 285 1 18 1 42 1 372 1 
51 2 291 2 249 1 56 6 148 1 200 1 152 1 5 4 60 1 305 1 159 1 308 2 310 1 350 1 18 4 352 1 168 2 318 1 171 1 223 3 225 1 173 5 320 5 121 1 174 1 354 1 277 1 322 5 278 5 235 7 176 2 327 1 330 1 38 1 187 1 129 4 132 1 284 1 285 1 286 1 137 1 42 1 190 1 372 1 
51 2 318 1 223 2 291 2 225 1 249 1 173 1 320 2 56 4 354 1 174 1 200 1 277 1 278 4 322 4 152 1 235 4 176 2 5 2 60 1 236 2 327 1 305 1 159 1 238 1 308 2 330 1 310 1 129 2 187 1 350 1 132 1 284 1 286 1 285 1 18 2 137 1 42 1 372 1 168 2 
51 2 318 1 223 2 291 2 225 1 249 1 320 1 173 1 56 4 121 1 174 1 354 1 200 1 277 1 152 1 278 4 322 4 235 4 176 2 5 2 60 1 327 1 305 1 159 1 308 2 330 1 310 1 129 2 350 1 187 1 132 1 284 1 286 1 285 1 18 2 137 1 190 1 42 1 372 1 352 1 168 2 
51 2 318 1 223 2 291 2 225 1 249 1 320 1 173 1 56 4 121 1 174 1 354 1 200 1 277 1 152 1 278 4 322 4 235 4 176 2 5 2 60 1 327 1 305 1 159 1 308 2 330 1 310 1 129 2 350 1 187 1 132 1 284 1 286 1 285 1 18 2 137 1 190 1 42 1 372 1 352 1 168 2 
318 1 223 2 225 1 249 1 320 1 173 1 56 4 174 1 354 1 200 1 277 1 278 4 322 4 58 2 235 4 5 2 60 1 236 2 280 1 327 1 305 1 159 1 308 2 330 1 310 1 129 2 350 1 187 1 132 1 284 1 286 1 285 1 18 2 137 1 190 1 42 1 372 1 168 2 246 2 338 1 139 1 
51 2 318 1 223 2 291 2 225 1 249 1 320 1 173 1 56 5 121 1 174 1 354 1 148 1 200 1 277 1 152 1 278 4 322 4 176 2 235 5 5 3 60 1 327 1 305 1 159 1 308 2 330 1 310 1 350 1 187 1 129 3 132 1 284 1 286 1 285 1 18 3 137 1 190 1 42 1 372 1 352 1 168 2 
51 2 318 1 223 2 291 2 225 1 249 1 320 1 173 1 56 5 121 1 174 1 354 1 148 1 200 1 277 1 152 1 278 4 322 4 176 2 235 5 5 3 60 1 327 1 305 1 159 1 308 2 330 1 310 1 350 1 187 1 129 3 132 1 284 1 286 1 285 1 18 3 137 1 190 1 42 1 372 1 352 1 168 2 
318 1 223 2 225 1 249 1 320 1 173 1 56 4 354 1 174 1 200 1 277 1 278 4 322 4 58 2 235 4 5 2 60 1 236 2 327 1 280 1 305 1 159 1 238 1 308 2 330 1 310 1 129 2 187 1 350 1 132 1 284 1 286 1 285 1 18 2 137 1 42 1 372 1 168 2 246 2 
170 2 71 1 53 1 250 1 103 1 74 1 294 1 31 1 276 1 2 1 150 1 34 1 279 3 158 1 127 2 110 1 329 1 259 1 311 1 333 6 245 3 94 1 43 2 25 1 289 1 50 2 
170 4 53 2 172 1 250 2 74 2 294 10 75 2 295 1 276 10 150 2 359 1 34 2 300 3 279 6 207 1 348 1 127 1 110 2 240 2 185 1 311 2 333 14 16 3 245 8 164 2 43 1 94 2 219 1 317 1 25 1 247 1 50 1 
170 2 72 1 53 1 172 1 0 1 74 1 174 2 150 1 79 1 234 1 3 1 175 1 34 1 279 1 207 1 209 1 110 1 111 1 185 1 350 2 349 1 311 1 367 1 112 1 333 2 19 1 20 1 287 1 245 1 41 1 42 1 43 1 192 1 270 1 97 1 25 1 26 1 144 1 
53 3 195 2 250 3 103 1 0 2 294 5 57 2 2 1 150 3 3 2 156 1 207 1 62 2 110 5 259 1 111 2 350 3 311 3 262 2 19 1 20 2 164 2 270 1 25 3 26 1 170 6 71 1 72 2 172 1 74 3 75 2 174 3 31 1 276 5 79 1 175 2 34 3 279 8 127 4 329 1 240 2 185 1 333 18 367 2 135 2 245 10 287 1 41 1 42 1 43 2 373 1 94 3 192 2 97 1 144 1 50 4 
170 4 119 1 72 3 53 2 172 1 0 2 74 2 174 1 150 2 79 7 323 1 324 1 59 1 34 2 279 1 207 1 303 1 258 1 12 1 331 1 350 1 213 1 311 2 333 2 367 2 189 2 287 1 20 2 245 1 41 1 42 1 270 8 316 1 97 1 66 1 25 2 26 2 289 1 144 8 
170 2 307 1 53 1 185 1 74 1 75 1 350 1 174 1 311 1 150 1 333 2 34 1 287 1 164 1 41 1 42 1 279 2 94 1 21 1 25 1 347 1 
170 2 53 1 74 1 75 1 311 1 150 1 333 1 34 1 93 1 94 1 279 1 25 1 289 1 
127 1 170 2 110 1 53 1 240 1 250 1 74 1 294 1 276 1 311 1 150 1 333 2 34 1 245 2 115 1 25 1 289 1 50 1 
170 2 53 1 250 1 74 1 75 1 294 1 276 1 150 1 34 1 279 1 127 1 110 1 240 1 311 1 333 3 245 2 164 1 94 1 25 1 289 1 50 1 
170 2 53 1 74 1 75 1 213 1 311 1 150 1 333 1 34 1 93 1 94 1 279 1 25 1 
127 1 170 2 110 1 53 1 240 1 250 1 74 1 294 1 213 1 276 1 311 1 150 1 333 2 34 1 245 2 115 1 25 1 50 1 
170 2 53 1 250 1 74 1 75 1 294 1 276 1 150 1 34 1 279 1 127 1 110 1 240 1 213 1 311 1 333 3 245 2 164 1 94 1 25 1 50 1 
127 1 170 2 110 1 53 1 250 1 240 1 74 1 294 1 75 1 276 1 311 1 150 1 333 3 245 2 34 1 164 1 94 1 279 1 25 1 50 1 
170 2 72 1 53 1 172 1 0 1 74 1 174 1 150 1 79 1 3 1 175 1 34 1 279 1 207 1 62 1 111 1 350 1 311 1 333 2 367 1 20 1 245 1 43 1 192 1 270 1 25 1 26 1 144 1 
170 2 72 1 53 1 172 1 0 1 73 1 74 1 76 1 174 1 150 1 79 1 175 1 34 1 279 1 179 1 207 1 111 1 350 1 311 1 333 2 367 1 20 1 245 1 43 1 270 1 25 1 26 1 144 1 
170 2 53 1 250 1 74 1 75 1 294 1 276 1 150 1 34 1 279 1 127 1 110 1 240 1 185 1 311 1 333 3 245 2 164 1 94 1 25 1 50 1 
170 2 195 1 72 1 53 1 250 1 0 1 74 1 294 1 75 1 174 1 276 1 150 1 79 1 3 1 175 1 324 1 34 1 279 1 62 1 127 1 110 1 240 1 111 1 350 1 311 1 333 3 367 1 245 2 20 1 164 1 94 1 192 1 270 1 25 1 50 1 144 1 
170 2 224 1 53 1 250 1 74 1 75 1 174 1 150 1 34 1 279 1 347 1 240 1 185 1 350 1 311 1 333 2 287 1 245 1 41 1 164 1 42 1 21 1 94 1 25 1 
170 4 53 2 250 2 55 1 341 1 75 2 149 1 150 2 233 1 34 2 300 1 279 5 180 1 257 2 364 1 348 1 127 1 240 2 332 1 311 2 163 1 333 13 16 2 245 8 164 2 94 2 317 1 50 1 
170 4 53 2 250 2 55 1 341 1 75 2 149 1 150 2 233 1 34 2 300 1 279 5 180 1 257 2 364 1 348 1 127 1 240 2 332 1 311 2 163 1 333 13 16 2 245 8 164 2 94 2 317 1 50 1 
170 2 71 1 53 1 250 8 55 1 103 1 75 7 31 1 229 1 295 2 149 1 2 1 150 1 298 1 233 1 34 1 300 4 279 18 180 1 257 3 364 1 348 2 127 6 329 1 259 1 240 7 332 1 311 1 366 1 163 1 333 42 16 4 370 1 245 24 164 7 94 8 317 2 221 1 290 1 50 6 
170 4 53 2 250 2 55 1 341 1 75 2 150 2 233 1 34 2 300 1 279 4 180 1 257 1 364 1 348 1 127 2 240 2 332 1 311 2 163 1 333 11 16 2 245 7 164 2 92 1 94 2 317 1 50 2 
170 4 53 2 250 3 55 1 75 3 229 1 149 1 150 2 298 1 233 1 34 2 300 2 279 10 180 2 257 4 364 1 127 1 240 3 283 1 332 1 311 2 366 1 163 2 333 24 16 2 370 1 245 14 164 3 94 3 317 2 221 1 290 1 50 1 
136 1 197 1 22 1 228 1 68 1 297 1 141 1 83 1 299 1 9 1 
165 1 273 1 
70 1 251 1 197 1 22 1 228 1 297 1 145 1 299 1 9 1 
243 1 375 1 
253 1 134 1 232 1 
160 1 197 1 320 1 228 1 261 1 297 1 322 1 278 1 299 1 80 1 113 1 22 1 377 2 68 1 46 1 141 1 83 1 9 1 
160 1 197 1 320 1 228 1 261 1 297 1 322 1 278 1 299 1 80 1 113 1 22 1 377 2 68 1 46 1 141 1 83 1 9 1 
160 1 197 1 320 1 228 1 261 1 297 1 322 1 278 1 299 1 80 1 113 1 22 1 377 2 68 1 46 1 141 1 83 1 9 1 
243 1 375 1 253 1 
243 1 375 1 253 1 
134 1 232 1 
253 1 134 1 232 1 
61 1 186 1 
273 1 197 1 293 1 174 2 228 1 199 1 297 1 278 1 322 1 344 1 299 1 61 1 9 1 350 2 186 1 261 1 113 1 287 2 165 1 41 2 42 2 43 1 216 1 22 1 377 1 269 1 23 1 
170 2 119 1 72 1 53 1 172 1 0 1 74 1 174 2 150 1 79 2 34 1 206 1 105 1 279 1 207 1 303 1 363 1 185 1 350 2 311 1 367 1 333 2 189 2 20 1 245 1 42 2 270 2 25 1 47 1 144 2 378 1 
99 1 120 1 274 1 101 1 0 1 214 1 365 2 356 1 231 1 79 2 323 1 324 1 20 1 81 1 270 2 126 1 45 1 304 1 144 2 
120 1 274 1 101 1 0 1 214 1 365 2 356 1 1 1 231 1 79 1 323 1 81 1 20 1 270 1 126 1 45 1 144 1 
99 1 72 1 12 1 0 1 231 1 367 1 79 1 368 1 59 1 20 1 270 1 6 1 26 1 144 1 
99 1 120 1 274 1 101 1 0 1 214 1 365 2 356 1 231 1 79 1 323 1 20 1 81 1 270 1 126 1 45 1 304 1 144 1 
357 1 
244 1 320 1 173 1 184 1 158 1 200 1 277 1 
51 1 291 1 223 1 249 1 320 2 173 1 200 1 277 1 152 1 322 1 278 1 176 1 235 1 236 1 159 1 310 1 137 1 
51 4 249 3 250 2 0 1 200 5 4 2 108 2 159 3 11 1 310 3 162 2 262 2 20 2 164 2 270 1 26 1 117 2 223 3 222 4 225 2 72 6 173 1 320 5 75 2 77 1 277 8 79 1 322 5 278 5 33 2 175 1 235 5 177 1 325 2 236 8 36 3 37 2 85 4 240 2 242 2 367 1 137 3 94 2 138 1 44 1 144 1 
51 2 159 1 222 3 249 1 85 3 320 2 310 1 75 1 229 1 366 1 200 3 277 2 16 1 137 1 164 1 300 1 94 1 236 4 317 1 221 1 
71 1 249 1 250 1 174 1 31 1 200 2 277 2 201 1 278 1 322 1 325 2 327 1 347 1 159 1 211 1 329 1 310 1 350 1 215 1 137 1 90 1 287 1 41 1 91 1 42 1 94 2 352 1 353 1 
159 1 249 1 184 1 310 1 173 1 320 1 200 1 277 1 137 1 244 1 
51 1 222 1 240 1 250 1 85 1 320 1 75 1 200 1 277 2 325 1 164 1 94 1 236 2 
235 1 223 1 320 1 173 1 278 1 322 1 
339 1 223 2 72 1 249 1 340 1 0 1 200 2 277 2 79 4 322 3 278 3 33 2 235 4 59 1 177 2 281 1 159 2 12 1 310 2 89 2 367 1 40 1 137 2 20 1 65 1 267 1 270 4 26 2 144 4 
170 2 53 1 72 1 54 1 0 1 74 1 174 3 150 1 79 1 3 1 175 1 34 1 207 1 62 1 347 2 111 1 350 3 311 1 333 1 367 1 245 1 287 2 20 1 41 2 42 2 43 1 270 1 353 1 192 1 25 1 26 1 144 1 
51 2 159 1 222 2 249 1 259 1 85 2 310 1 173 2 320 4 200 2 277 1 33 1 137 1 177 1 236 4 
153 1 22 1 297 1 
22 1 61 1 297 1 141 1 69 1 
153 1 22 1 297 1 
153 1 22 1 297 1 
198 1 22 1 297 1 
198 1 22 1 297 1 
198 1 22 1 297 1 
22 1 297 1 
228 1 299 1 
170 2 71 1 53 1 250 1 103 1 229 1 31 1 150 1 2 1 34 1 300 1 279 4 364 1 127 2 329 1 259 1 311 1 333 8 16 1 245 4 94 1 317 1 50 2 
170 4 53 2 250 4 75 4 229 1 295 1 150 2 298 1 34 2 300 2 279 7 364 1 348 1 127 3 240 4 311 2 366 1 333 18 369 1 16 2 245 11 164 4 94 4 317 1 221 1 290 1 50 3 
170 6 71 1 53 3 250 3 103 1 75 2 31 1 229 1 2 1 150 3 298 1 34 3 300 1 279 7 364 1 127 3 329 1 259 1 240 2 283 1 311 3 366 1 333 17 369 1 16 1 245 10 164 2 94 3 317 1 221 1 290 1 50 3 
170 4 53 2 250 2 75 2 229 1 150 2 298 1 34 2 300 1 279 4 364 1 127 1 240 2 311 2 366 1 333 10 369 1 16 1 245 6 164 2 94 2 317 1 221 1 290 1 50 1 
170 2 71 1 53 1 250 1 103 1 229 1 31 1 150 1 2 1 34 1 300 1 279 4 364 1 127 2 329 1 259 1 311 1 333 8 16 1 245 4 94 1 317 1 50 2 
170 2 53 1 250 2 75 2 229 1 150 1 298 1 34 1 300 1 279 4 364 1 127 1 240 2 311 1 366 1 333 10 16 1 245 6 164 2 94 2 317 1 221 1 290 1 50 1 
170 6 53 3 250 2 75 2 229 1 150 3 298 1 34 3 300 1 279 4 364 1 127 1 240 2 283 1 311 3 366 1 333 11 369 1 16 1 245 7 164 2 94 2 317 1 221 1 290 1 50 1 
170 6 53 3 250 2 341 1 75 2 229 1 150 3 298 1 34 3 300 1 279 4 364 1 127 2 240 2 283 1 311 3 366 1 333 11 16 1 245 7 164 2 94 2 317 1 221 1 290 1 50 2 
127 6 71 3 329 3 250 1 227 3 103 2 31 1 2 1 333 7 245 4 94 1 279 3 50 3 
170 6 53 3 250 2 341 1 75 2 229 1 150 3 298 1 34 3 300 1 279 4 364 1 127 1 240 2 283 1 311 3 366 1 333 11 16 1 245 7 164 2 94 2 317 1 221 1 290 1 50 1 
127 3 170 4 71 1 53 2 329 1 259 1 250 1 227 1 103 1 283 1 31 1 311 2 150 2 2 1 333 8 245 4 34 2 94 1 279 4 50 2 
127 2 71 1 329 1 259 1 250 1 103 1 31 1 2 1 333 6 245 3 94 1 279 3 158 1 50 2 
127 1 170 2 53 1 250 1 240 1 75 1 311 1 150 1 333 3 369 1 245 2 34 1 164 1 94 1 279 1 50 1 
127 1 240 1 250 1 75 1 333 6 16 2 245 4 164 1 300 1 279 2 94 1 317 1 348 1 50 1 
170 4 71 2 53 2 250 3 227 2 103 1 75 2 31 1 295 1 2 1 150 2 34 2 300 2 279 9 348 1 127 7 329 2 259 1 240 2 283 2 311 2 333 21 16 2 245 12 164 2 94 3 67 1 247 1 50 5 
16 1 245 1 333 1 
300 1 279 1 333 1 
170 2 127 2 53 1 240 1 250 1 75 1 311 1 150 1 333 5 369 1 262 1 34 1 245 3 164 1 94 1 279 2 50 2 
170 2 53 1 250 2 75 2 229 1 150 1 298 1 34 1 300 1 279 4 364 1 127 1 240 2 311 1 366 1 333 10 16 1 245 6 164 2 94 2 317 1 221 1 290 1 50 1 
127 2 71 1 329 1 250 1 227 1 31 1 333 6 245 3 94 1 279 3 50 1 
127 2 170 2 71 1 329 1 53 1 227 1 103 1 283 1 311 1 150 1 2 1 333 3 245 2 34 1 279 1 67 1 50 1 
170 2 127 5 211 1 71 2 53 1 329 2 250 2 227 2 31 1 311 1 150 1 333 10 34 1 245 5 279 5 94 2 364 1 50 3 
170 2 53 1 75 1 311 1 150 1 333 1 34 1 94 1 279 1 364 1 
127 1 170 2 53 1 250 1 240 1 75 1 311 1 150 1 333 3 245 2 34 1 164 1 94 1 279 1 364 1 50 1 
170 6 127 2 71 1 53 3 329 1 227 1 283 1 341 1 311 3 150 3 333 3 245 2 34 3 279 1 67 1 364 1 50 1 
170 10 71 3 53 5 250 5 227 3 103 1 341 1 75 3 31 2 2 1 150 5 346 1 34 5 203 1 300 3 279 14 364 1 348 1 127 8 329 3 128 1 259 1 240 3 283 2 311 5 333 33 369 1 16 4 245 19 164 3 94 5 67 1 317 1 50 5 
318 1 254 1 42 1 43 1 350 1 174 1 343 1 
318 1 87 1 174 1 350 1 188 1 343 1 123 1 254 1 42 1 43 1 314 1 255 1 
59 1 20 1 72 1 12 1 0 1 270 1 158 1 26 1 367 1 79 1 144 1 
72 1 111 1 0 1 174 2 350 2 367 1 79 1 3 1 175 1 20 1 287 1 41 1 42 1 43 1 270 1 97 1 26 1 144 1 
237 1 72 3 111 1 0 1 174 2 350 2 131 1 284 1 367 2 89 1 79 1 3 1 175 2 20 1 287 1 41 2 42 2 372 1 43 1 270 1 97 1 327 1 144 1 
72 3 0 1 73 1 174 2 321 1 79 2 175 2 327 1 237 1 111 1 350 2 131 1 284 1 89 1 367 2 287 1 20 1 41 2 42 2 372 1 43 1 270 2 97 1 144 2 
225 1 72 4 0 1 173 1 320 1 321 1 79 3 278 2 322 2 235 1 175 1 36 1 37 1 237 1 131 1 89 1 367 1 266 1 20 1 95 1 270 3 26 1 144 3 
225 1 237 1 72 4 0 1 320 1 173 1 321 1 131 1 242 1 367 1 89 1 79 3 322 2 278 2 175 1 235 1 20 1 270 3 26 1 36 1 37 1 144 3 
20 1 258 1 0 1 270 1 79 1 144 1 
118 1 258 1 72 3 0 2 331 1 79 6 367 2 189 1 323 1 324 1 175 1 20 3 361 1 154 1 270 7 303 1 316 1 44 1 66 1 26 2 144 7 
170 4 71 1 72 1 53 2 195 1 250 1 103 1 0 1 74 2 294 1 174 2 31 1 57 1 276 1 2 1 150 2 79 1 3 1 175 1 324 1 34 2 206 1 279 3 62 1 127 2 110 1 329 1 259 1 111 1 185 1 350 2 311 2 333 6 367 1 245 3 20 1 287 1 41 1 42 1 43 2 94 1 270 1 192 1 97 1 25 2 50 2 144 1 
117 1 223 1 225 1 249 2 72 2 320 1 173 1 200 1 277 1 79 1 278 3 322 3 344 1 235 2 4 1 108 1 36 1 37 1 159 2 184 1 310 2 242 1 244 1 137 2 267 1 270 1 26 1 144 1 
258 1 11 1 72 2 0 1 79 2 367 1 324 1 175 1 20 2 270 2 44 1 37 1 144 2 
72 1 12 1 0 1 321 1 79 4 367 1 324 1 59 1 20 1 270 4 107 1 26 1 144 4 
72 1 0 1 355 1 89 1 79 2 367 1 175 1 20 2 361 1 154 1 270 2 96 1 326 1 144 2 
20 1 0 1 270 1 126 1 45 1 365 1 356 1 26 1 79 1 144 1 
72 1 0 1 79 2 367 1 324 1 323 1 20 1 270 2 303 1 47 1 144 2 
72 3 12 1 0 2 331 1 89 1 79 4 367 2 59 1 324 1 20 2 270 5 107 1 303 1 66 1 26 1 144 5 
72 3 12 1 0 2 89 1 79 4 367 2 59 1 324 1 20 2 155 1 270 5 107 1 303 1 66 1 26 1 144 5 
72 1 111 1 73 1 0 1 174 2 350 2 367 1 79 1 175 1 20 1 287 1 41 1 42 1 43 1 270 1 97 1 26 1 144 1 
118 1 72 1 0 1 89 1 79 1 367 1 175 1 20 2 361 1 154 1 270 1 44 1 144 1 
210 1 42 1 105 1 169 1 350 1 174 1 363 1 378 1 202 1 
10 1 147 1 169 1 
210 1 43 1 169 1 288 1 202 1 
10 1 210 2 225 1 309 1 147 1 330 1 320 1 173 1 284 1 344 1 322 2 278 2 202 2 372 1 205 1 43 1 169 1 327 1 288 2 
125 1 241 1 158 1 14 1 
248 1 52 1 125 1 241 1 13 1 130 1 14 1 
248 1 312 1 78 1 
52 3 248 3 241 1 29 1 130 1 13 1 230 1 14 1 125 1 302 1 362 1 7 2 
248 2 52 2 125 1 241 1 82 1 13 1 130 1 14 1 142 1 
52 1 248 1 130 1 13 1 214 1 365 1 17 1 313 1 125 1 126 1 362 1 
248 1 52 1 125 1 13 1 130 1 362 1 14 1 
248 1 52 1 241 1 13 1 130 1 362 1 14 2 
248 2 52 2 125 1 218 1 260 1 13 2 130 2 362 1 14 1 15 1 
52 3 248 3 241 1 102 1 130 1 13 1 14 1 124 1 313 1 125 2 82 2 362 1 181 1 
52 2 248 2 241 1 274 1 86 1 130 1 13 1 214 1 356 1 365 2 14 1 125 1 82 1 126 1 362 1 
272 1 52 4 248 4 241 1 102 1 130 2 13 2 14 1 313 1 125 2 82 2 362 1 142 1 
248 1 52 1 125 1 241 1 13 1 130 1 362 1 14 1 
52 4 248 4 241 2 292 1 102 1 130 1 13 1 230 1 14 2 313 1 125 3 82 2 302 1 7 1 
52 2 248 2 196 1 212 1 241 1 130 1 13 1 14 1 125 1 82 1 362 1 143 1 
52 3 248 3 241 1 130 1 13 1 230 2 14 1 204 1 125 1 302 1 362 1 7 2 
125 2 178 2 271 1 220 1 
248 1 52 1 13 1 130 1 362 1 282 1 
248 2 52 2 125 1 241 1 82 1 13 1 130 1 362 1 14 1 181 1 
146 1 
248 1 52 1 125 1 241 1 13 1 130 1 362 1 14 1 
248 3 52 3 125 1 241 1 82 1 13 1 130 1 362 1 181 1 14 1 7 1 
292 1 125 1 313 1 102 1 
125 1 14 1 

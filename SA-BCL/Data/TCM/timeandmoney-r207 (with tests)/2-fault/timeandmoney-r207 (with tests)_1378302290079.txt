#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (160,179) 71 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (160,179) 71 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
356 1 1 5 279 1 361 1 6 1 179 1 337 2 181 1 160 1 63 2 316 2 231 2 286 9 109 9 108 1 343 1 66 2 86 1 110 1 186 4 88 1 166 6 324 1 379 1 192 1 119 2 380 3 93 2 
356 1 1 5 279 1 361 1 6 1 179 1 337 2 181 1 160 1 63 2 316 2 231 2 286 9 109 9 108 1 343 1 66 2 86 1 110 1 186 4 88 1 166 6 324 1 379 1 192 1 119 2 380 3 93 2 
356 1 1 6 279 1 361 1 6 1 179 1 337 2 181 1 160 1 63 2 316 2 231 2 286 10 109 10 108 1 343 1 66 2 86 1 110 1 186 5 88 1 166 7 324 1 379 1 192 1 119 2 380 4 93 2 
356 1 1 4 279 1 361 1 6 1 179 1 337 2 160 1 63 2 316 2 231 2 286 7 109 7 108 1 343 1 66 2 86 1 110 1 186 3 88 1 166 4 324 1 379 1 192 1 119 2 380 2 93 1 
356 1 231 1 286 4 109 4 66 1 1 3 86 1 110 1 186 2 166 3 6 1 324 1 337 1 380 1 181 1 119 1 93 2 316 1 
356 1 231 1 286 2 163 1 50 1 109 2 1 1 66 1 86 1 279 1 88 1 167 1 324 1 337 1 316 1 63 1 
356 1 286 3 109 3 66 2 1 2 86 1 186 1 166 1 324 1 337 2 380 1 160 1 63 1 
286 1 324 1 109 1 71 1 337 1 66 1 160 1 
286 1 324 1 109 1 71 1 337 1 66 1 160 1 
322 1 233 1 137 1 
61 1 247 2 322 1 
271 2 25 2 313 2 118 2 273 2 275 1 187 1 34 2 
149 1 357 1 126 1 25 3 77 1 306 1 308 1 178 1 100 2 367 1 134 1 7 1 282 2 336 1 313 2 82 1 267 1 10 1 34 2 373 1 67 1 187 1 345 1 115 1 295 1 271 2 189 1 347 1 272 1 326 2 44 2 118 3 45 1 74 1 121 2 273 2 275 1 
271 1 25 1 76 1 313 1 205 1 118 1 127 1 273 1 187 1 34 1 
359 1 25 1 258 1 321 1 127 1 322 1 233 1 366 1 133 1 206 1 118 1 104 1 273 1 209 1 
359 1 25 1 258 1 127 1 322 1 233 1 366 1 271 1 313 1 206 2 118 1 104 1 273 1 209 2 34 1 
222 1 206 1 253 1 159 1 209 1 
378 1 222 1 297 1 206 2 322 1 159 1 233 1 209 2 
206 1 159 1 209 1 
25 1 76 1 222 1 127 1 187 1 169 1 271 1 313 1 205 1 206 1 118 1 273 1 209 1 34 1 
322 1 
25 1 76 1 222 1 4 1 127 1 187 1 322 1 233 1 271 1 169 1 313 1 205 1 206 2 297 1 118 1 273 1 159 1 34 1 209 2 
11 2 318 2 303 1 222 2 3 1 213 1 322 1 233 1 309 2 112 1 262 1 190 1 193 1 348 1 297 1 206 5 194 1 159 2 209 5 
275 1 137 1 
25 2 232 1 271 1 313 1 118 2 273 2 94 1 275 2 34 1 
238 1 32 1 226 1 
373 1 25 1 77 1 345 1 178 1 100 1 7 1 189 1 282 1 347 1 272 1 44 1 118 1 254 1 45 1 275 1 
271 3 150 1 25 3 313 1 118 3 273 3 275 1 34 3 
271 1 25 1 205 1 118 1 127 1 273 1 34 1 
271 1 25 1 232 1 313 1 118 1 127 1 273 1 94 1 34 1 
149 1 359 1 126 1 25 4 150 1 77 1 258 1 306 1 127 1 308 1 366 1 178 1 100 1 367 1 134 1 7 1 282 1 312 1 245 1 313 2 206 1 104 1 267 1 34 3 209 1 373 1 187 1 345 1 115 1 295 1 271 3 189 1 347 1 272 1 326 1 44 1 45 1 118 4 74 1 121 2 20 1 273 3 275 1 94 1 
133 1 271 1 25 2 150 1 118 2 273 2 275 1 228 1 34 1 
359 1 150 2 25 3 258 1 127 1 322 1 366 1 271 3 312 1 313 1 206 1 118 3 104 1 273 3 20 1 94 1 277 1 209 1 34 3 
150 1 25 2 226 1 271 2 313 1 118 2 273 2 94 1 32 1 34 2 
373 1 25 1 77 1 345 1 178 1 100 1 7 1 189 1 282 1 347 1 272 1 44 1 118 1 45 1 275 1 
268 1 25 1 77 1 242 1 345 1 178 1 100 1 7 1 189 1 282 1 347 1 272 1 44 1 118 1 275 1 
148 1 149 1 238 2 24 1 221 1 200 1 226 2 367 1 134 1 336 2 32 2 267 2 212 1 141 1 376 1 115 1 295 1 214 1 326 4 46 1 299 1 74 1 121 2 195 1 
359 1 271 1 25 1 251 1 118 1 127 1 273 1 34 1 
373 1 150 1 25 2 77 1 345 1 178 1 100 1 7 1 271 1 189 1 347 1 282 1 312 1 272 1 44 1 45 1 118 2 273 1 32 1 34 1 
150 2 25 5 342 1 133 1 271 4 312 1 313 1 42 1 118 5 273 5 94 1 275 1 228 1 34 4 
271 2 251 1 25 2 205 1 118 2 127 1 273 2 34 2 
75 1 47 1 
75 1 47 1 
96 1 330 1 
96 1 330 1 
96 1 330 1 
75 1 298 1 47 1 
75 1 298 1 47 1 
75 1 47 1 164 1 
15 1 75 2 96 1 330 1 30 1 47 2 
75 1 298 1 47 1 
75 1 47 1 208 1 
75 1 47 1 208 1 
75 1 47 1 208 1 
304 1 75 2 36 2 291 1 322 1 69 1 270 2 99 1 60 1 252 3 30 1 206 2 350 1 158 2 314 1 47 2 95 2 372 2 209 2 
75 1 25 2 0 1 2 1 155 1 206 1 158 1 314 1 372 1 182 1 34 2 209 1 317 1 36 1 106 1 164 1 271 2 252 1 118 2 273 2 275 1 47 1 95 1 256 1 
231 1 119 1 316 1 
231 1 163 1 316 1 
85 1 163 1 227 1 152 1 119 2 316 3 
85 1 163 1 152 1 119 1 217 1 316 2 
85 2 163 1 119 1 152 1 316 2 
303 1 24 1 328 1 0 1 221 1 222 4 2 1 200 1 3 2 53 1 309 1 154 2 61 1 206 5 247 3 159 1 209 5 318 1 11 1 162 1 288 1 185 1 289 2 212 1 213 3 322 2 233 1 40 1 375 1 297 1 274 2 256 1 
358 1 303 1 24 3 328 3 221 3 222 7 200 3 3 6 243 1 53 2 309 2 154 6 262 1 61 3 338 1 206 9 247 9 159 6 209 9 13 1 11 2 318 2 248 1 185 1 289 6 212 3 213 8 17 5 322 5 233 1 40 2 297 1 253 5 234 1 256 4 
24 1 328 1 221 1 222 2 200 1 3 2 53 1 309 1 154 2 61 2 262 1 206 3 247 4 209 3 318 1 11 1 288 1 212 1 289 2 213 3 322 3 233 1 40 1 375 1 274 1 256 1 
358 1 24 2 328 2 221 2 222 3 200 2 3 4 53 1 309 1 154 4 61 3 262 1 338 1 206 4 247 7 209 4 13 1 318 1 11 1 288 1 289 4 212 2 213 5 322 4 233 1 40 1 375 1 274 2 256 2 
345 1 123 1 137 1 
161 1 345 1 
369 1 
77 1 345 1 
77 1 276 1 123 2 345 3 165 1 178 1 
77 1 345 1 178 1 
107 1 345 1 
210 1 200 1 212 1 363 1 128 1 323 1 153 1 336 4 117 1 326 7 299 2 195 3 315 1 267 3 219 1 237 2 183 1 
210 1 200 1 212 1 363 1 128 1 323 1 153 1 336 4 117 1 326 7 299 2 195 3 315 1 267 3 219 1 237 2 183 1 
210 1 200 1 212 1 363 1 128 1 323 1 153 1 336 4 117 1 156 1 326 7 299 2 195 3 315 1 267 3 219 1 237 2 183 1 
149 1 24 3 328 3 221 3 200 4 363 1 128 1 364 1 153 2 367 1 8 1 336 16 315 1 267 15 284 1 183 5 210 2 212 4 323 1 168 3 295 1 144 4 116 1 117 2 326 31 171 1 73 1 299 5 74 1 121 2 195 10 219 2 48 1 237 3 
149 2 200 1 128 1 153 1 367 2 8 1 336 5 315 1 267 4 183 1 210 1 212 1 323 1 295 2 117 1 326 9 299 3 74 2 121 4 195 4 23 1 219 1 237 2 172 1 
356 1 239 1 1 1 362 1 59 1 100 1 335 1 282 1 337 1 227 1 84 1 63 1 316 2 231 1 286 2 163 1 109 2 66 1 86 1 166 1 250 1 41 1 347 1 324 1 272 1 44 1 349 1 119 1 354 1 147 1 
356 1 1 1 362 1 130 1 56 1 59 1 100 1 335 1 282 1 337 1 227 1 84 1 63 1 316 2 231 1 286 3 163 1 109 3 66 1 86 1 166 2 250 1 41 1 347 1 272 1 44 1 119 1 354 1 147 1 257 1 
356 1 1 1 362 1 130 1 59 1 100 1 335 1 282 1 227 1 84 1 63 1 316 2 231 1 286 2 163 1 109 2 86 1 166 2 41 1 347 1 272 1 44 1 119 1 147 1 257 1 
198 1 77 1 97 1 176 1 56 1 59 2 100 1 282 1 102 1 337 1 103 1 84 2 63 2 286 1 37 1 109 1 66 1 345 1 189 1 347 1 272 1 44 1 147 2 
231 1 286 1 163 1 109 1 66 1 362 1 130 1 59 1 41 1 335 1 250 1 100 1 347 1 282 1 324 1 272 1 337 1 349 1 44 1 227 1 119 1 354 1 84 1 316 2 63 1 147 1 
49 1 
3 2 201 1 54 2 100 2 61 2 282 2 246 2 206 5 104 1 247 2 159 6 283 1 209 5 12 2 11 1 65 2 213 2 345 1 113 2 347 1 215 1 70 2 297 3 72 1 118 1 21 1 218 1 301 1 124 1 355 1 303 1 359 1 25 1 77 1 258 1 175 1 365 2 176 1 127 1 309 1 366 1 133 1 27 4 265 1 318 1 37 1 321 1 322 2 233 1 40 1 189 2 272 1 43 1 44 2 273 1 
359 1 25 1 258 1 4 1 201 1 127 1 366 1 133 1 27 2 206 3 104 1 283 1 159 2 209 3 65 1 321 1 43 1 297 1 72 1 118 1 273 1 355 1 
359 1 25 1 258 1 201 1 4 1 127 1 366 1 133 1 27 3 206 3 246 1 104 1 159 1 283 1 209 3 321 1 322 1 233 1 43 1 72 1 297 1 118 1 273 1 355 1 
359 1 25 1 258 1 4 1 201 1 127 1 366 1 133 1 27 3 206 3 246 1 104 1 283 1 159 2 209 3 65 1 321 1 113 1 43 1 297 1 72 1 118 1 273 1 355 1 
3 1 4 1 201 1 54 2 61 2 205 1 206 5 246 2 104 1 159 7 283 1 209 5 11 1 12 2 65 4 213 1 113 4 346 1 114 1 169 1 215 1 70 2 297 3 72 1 118 2 218 1 355 1 303 1 359 1 25 2 76 1 258 1 307 1 127 2 365 2 366 1 309 1 27 4 133 1 79 1 313 1 34 1 138 1 318 1 321 1 187 1 322 1 233 1 271 1 43 1 273 2 
3 1 201 1 54 2 61 2 206 4 246 2 104 1 247 2 283 1 159 4 209 4 11 1 12 2 65 2 213 1 113 2 215 1 70 2 72 1 297 2 118 1 218 1 355 1 303 1 359 1 25 1 258 1 127 1 365 2 366 1 309 1 27 4 133 1 265 1 318 1 321 1 322 2 233 1 43 1 273 1 
303 1 359 1 25 1 258 1 3 1 201 1 307 1 365 2 127 1 54 2 366 1 309 1 79 1 133 1 27 4 61 2 246 2 206 4 104 1 159 4 283 1 209 4 12 2 318 1 11 1 65 2 213 1 321 1 322 1 233 1 113 2 114 1 215 1 70 2 43 1 297 2 72 1 118 1 273 1 218 1 355 1 
303 1 359 1 25 1 258 1 3 1 201 1 307 1 365 2 127 1 54 2 366 1 309 1 79 1 133 1 27 4 61 2 246 2 206 4 104 1 159 4 283 1 209 4 12 2 318 1 11 1 65 2 213 1 321 1 322 1 233 1 113 2 114 1 215 1 70 2 43 1 297 2 72 1 118 1 273 1 218 1 355 1 
197 1 303 1 359 1 25 1 258 1 3 1 201 1 127 1 54 2 366 1 309 1 79 1 133 1 27 4 180 2 246 2 206 4 104 1 247 2 159 4 283 1 209 4 318 1 11 1 65 2 213 1 321 1 87 2 322 1 269 1 233 1 113 2 70 2 43 1 297 2 72 1 118 1 120 1 273 1 218 1 355 1 
303 1 359 1 25 1 258 1 3 1 201 1 307 1 365 2 127 1 54 2 309 1 366 1 79 1 133 1 27 5 61 2 206 4 246 3 104 1 283 1 159 5 209 4 12 2 318 1 11 1 65 3 213 1 321 1 322 1 233 1 113 3 346 1 114 1 215 1 70 2 43 1 297 2 72 1 118 1 273 1 218 1 355 1 
303 1 359 1 25 1 258 1 3 1 201 1 307 1 365 2 127 1 54 2 309 1 366 1 79 1 133 1 27 5 61 2 206 4 246 3 104 1 283 1 159 5 209 4 12 2 318 1 11 1 65 3 213 1 321 1 322 1 233 1 113 3 346 1 114 1 215 1 70 2 43 1 297 2 72 1 118 1 273 1 218 1 355 1 
303 1 359 1 25 1 258 1 3 1 201 1 127 1 54 2 309 1 366 1 133 1 27 4 180 2 246 2 206 4 104 1 265 1 247 2 159 4 283 1 209 4 318 1 11 1 65 2 213 1 321 1 87 2 322 1 269 1 233 1 113 2 70 2 43 1 297 2 72 1 118 1 273 1 218 1 355 1 
149 1 238 1 200 1 128 1 226 1 367 1 134 1 336 3 32 1 315 1 267 3 137 1 212 1 323 1 115 1 295 1 117 1 326 6 46 1 299 2 74 1 121 2 195 2 275 2 219 1 237 1 
149 2 238 11 24 1 126 1 125 1 328 2 221 2 200 1 244 1 226 4 80 1 367 2 134 2 336 8 31 1 32 11 267 6 183 1 67 1 212 2 115 1 168 3 294 1 144 3 295 2 326 14 171 1 73 1 299 1 74 2 121 4 275 1 195 2 
149 1 360 1 125 1 25 2 150 1 126 1 77 1 178 1 226 1 100 1 7 1 134 1 367 1 282 1 312 1 336 1 267 1 34 1 373 1 184 1 67 1 345 1 115 1 189 1 295 1 271 1 347 1 272 1 296 1 44 1 326 2 45 1 254 1 118 2 273 1 121 2 74 1 275 1 
149 3 238 7 150 1 328 2 241 2 200 3 100 3 7 2 282 3 336 10 14 1 67 1 212 3 345 2 115 3 295 3 347 2 117 1 118 3 299 4 74 3 121 6 122 2 219 1 24 2 126 1 25 3 125 1 77 2 221 2 306 2 128 1 130 1 178 2 226 7 367 3 134 3 312 1 136 1 315 1 32 7 267 10 371 2 34 1 183 4 373 2 374 2 323 1 143 1 189 1 271 1 272 2 44 3 326 20 45 2 273 1 275 2 195 8 237 1 
149 2 239 1 25 1 150 1 126 1 77 2 259 1 176 1 130 1 280 1 261 1 260 1 100 8 367 2 134 2 282 7 336 1 157 1 267 1 34 1 35 1 10 2 285 1 37 1 67 1 345 3 115 2 271 1 189 2 295 2 347 2 272 2 44 8 326 2 118 1 46 1 273 1 74 2 121 4 
238 1 149 1 24 1 125 1 25 1 328 1 221 1 200 1 225 1 226 1 367 1 134 1 336 1 313 1 32 1 267 2 34 1 212 1 115 1 271 1 295 1 326 3 118 1 299 1 74 1 121 2 273 1 195 1 94 1 
238 1 149 1 221 1 141 1 212 1 226 1 115 1 134 1 367 1 295 1 336 2 326 2 46 1 121 2 74 1 195 1 32 1 183 1 
238 1 149 1 148 1 24 1 200 1 226 1 115 1 134 1 367 1 295 1 326 2 46 1 299 1 121 2 74 1 195 1 32 1 267 2 
238 2 149 1 24 1 328 1 221 1 200 1 212 1 226 2 115 1 134 1 367 1 295 1 336 2 326 4 46 1 299 1 121 2 74 1 195 2 32 2 267 2 183 1 
238 1 149 1 221 1 141 1 212 1 226 1 115 1 134 1 367 1 295 1 336 2 326 2 121 2 74 1 195 1 32 1 183 1 35 1 
238 1 149 1 148 1 24 1 200 1 226 1 115 1 134 1 367 1 295 1 326 2 299 1 121 2 74 1 195 1 32 1 267 2 35 1 
238 2 149 1 24 1 328 1 221 1 200 1 212 1 226 2 115 1 134 1 367 1 295 1 336 2 326 4 299 1 121 2 74 1 195 2 32 2 267 2 183 1 35 1 
238 2 149 1 24 1 328 1 221 1 200 1 212 1 226 2 115 1 134 1 367 1 295 1 336 2 326 4 299 1 121 2 74 1 195 2 32 2 267 2 183 1 
149 1 25 1 126 1 77 1 306 1 178 1 100 1 7 1 134 1 367 1 282 1 336 1 267 1 373 1 67 1 345 1 115 1 189 1 295 1 347 1 272 1 326 2 44 1 45 1 118 1 121 2 74 1 275 1 
149 1 25 1 126 1 77 1 329 1 242 1 178 1 100 1 7 1 134 1 367 1 282 1 336 1 267 1 268 1 67 1 345 1 115 1 189 1 295 1 347 1 272 1 326 2 44 1 118 1 121 2 74 1 275 1 
238 2 149 1 24 1 125 1 328 1 221 1 200 1 212 1 226 2 115 1 134 1 367 1 295 1 336 2 326 4 299 1 121 2 74 1 195 2 32 2 267 2 183 1 
238 2 149 1 24 1 239 1 25 1 328 1 221 1 77 1 306 1 200 1 178 1 226 2 100 1 7 1 134 1 367 1 282 1 336 2 32 2 267 2 183 1 373 1 374 1 212 1 345 1 115 1 295 1 347 1 272 1 326 4 44 1 45 1 118 1 299 1 121 2 74 1 195 2 
149 1 238 1 24 1 125 1 25 1 328 1 221 1 200 1 177 1 226 1 367 1 134 1 336 2 313 1 32 1 267 1 183 1 34 1 212 1 115 1 271 1 295 1 326 3 118 1 74 1 121 2 273 1 195 1 94 1 
149 2 24 3 328 3 199 1 221 3 200 3 58 1 334 1 367 2 336 9 83 1 207 1 267 10 183 3 16 1 344 2 212 3 168 1 144 2 295 2 145 2 326 19 171 1 299 3 73 1 74 2 121 4 236 1 195 6 172 1 
149 3 24 2 173 1 328 3 199 1 174 1 221 3 200 2 52 1 58 2 334 1 57 1 367 3 8 2 336 14 207 1 267 12 183 2 344 4 212 3 292 1 68 1 168 2 295 3 144 2 145 1 326 26 299 2 73 2 74 3 121 6 195 4 236 2 172 1 
149 3 328 4 199 1 200 5 52 1 334 1 58 2 57 1 8 1 336 20 207 1 344 4 212 5 292 1 68 1 168 3 295 3 117 1 171 1 73 3 299 4 121 6 74 3 219 1 172 1 24 4 173 1 174 1 221 4 128 1 367 3 135 1 83 1 315 1 267 21 183 4 323 1 144 4 145 1 326 41 195 8 236 1 237 1 
149 4 24 3 173 1 328 4 174 1 199 1 221 4 200 4 52 1 128 1 57 1 58 2 334 1 367 4 135 1 8 2 336 20 83 1 207 1 315 1 267 18 183 3 344 4 212 5 292 1 323 1 68 1 168 3 144 4 295 4 145 1 117 1 326 38 171 1 299 4 73 3 74 4 121 8 236 1 195 7 219 1 237 1 172 1 
149 2 24 7 173 1 328 7 174 1 199 1 221 7 200 8 52 1 128 1 244 2 57 1 58 1 334 1 367 2 8 1 336 27 207 1 315 1 267 25 183 7 344 4 212 8 292 1 323 1 68 1 168 4 144 4 295 2 145 1 117 1 326 52 171 2 299 7 73 2 74 2 121 4 236 1 195 14 219 1 237 1 172 1 
60 1 304 1 75 1 36 1 30 1 158 1 333 1 47 1 372 1 95 1 
164 1 317 1 
75 1 287 1 36 1 51 1 158 1 47 1 372 1 95 1 105 1 
304 1 75 1 36 1 291 1 322 1 270 1 99 1 60 1 252 2 30 1 206 1 350 1 158 1 314 1 47 1 95 1 372 1 209 1 
304 1 75 1 36 1 291 1 322 1 270 1 99 1 60 1 252 2 30 1 206 1 350 1 158 1 314 1 47 1 95 1 372 1 209 1 
304 1 75 1 36 1 291 1 322 1 270 1 99 1 60 1 252 2 30 1 206 1 350 1 158 1 314 1 47 1 95 1 372 1 209 1 
15 1 311 1 298 1 
15 1 311 1 298 1 
208 1 310 1 
15 1 208 1 310 1 
106 1 182 1 
75 1 25 2 0 1 222 1 2 1 155 1 206 1 158 1 372 1 182 1 9 1 209 1 317 1 34 2 36 1 106 1 164 1 270 1 271 2 252 1 350 1 118 2 273 2 275 1 47 1 95 1 256 1 
311 1 298 1 
15 1 208 1 310 1 
149 1 125 1 25 2 126 1 77 1 224 1 280 1 260 1 281 1 100 2 134 1 204 1 367 1 282 2 336 1 368 1 267 1 10 2 67 1 345 1 89 1 115 1 295 1 347 1 272 1 44 2 326 2 118 2 273 2 121 2 74 1 
231 1 239 1 163 1 130 1 100 2 335 1 41 1 18 1 347 1 282 2 191 1 272 1 44 2 227 1 119 1 84 1 354 1 316 2 64 1 
231 1 163 1 130 1 100 1 335 1 41 1 282 1 170 1 347 1 191 1 272 1 44 1 227 1 119 1 84 1 354 1 316 2 
211 1 37 1 77 1 97 1 176 1 345 1 100 1 189 1 18 1 347 1 282 1 272 1 44 1 84 1 
231 1 163 1 130 1 100 1 335 1 41 1 18 1 282 1 347 1 191 1 272 1 44 1 227 1 119 1 84 1 354 1 316 2 64 1 
320 1 
190 1 193 1 3 1 213 1 322 1 233 1 137 1 
303 1 3 1 365 1 309 1 61 1 206 1 247 1 159 1 209 1 12 1 318 1 11 1 213 1 322 2 233 1 215 1 297 1 
239 1 328 2 331 2 3 8 200 2 5 1 203 2 55 2 98 2 154 6 100 3 282 3 61 6 206 5 247 12 341 2 159 5 209 5 11 4 161 3 107 2 289 6 212 2 213 9 345 10 165 1 293 1 347 3 297 3 353 2 123 2 124 1 303 4 24 2 77 3 258 2 221 2 78 2 309 4 178 3 33 1 371 2 370 2 318 4 140 1 39 1 322 8 233 2 40 2 189 1 190 1 193 1 272 4 44 3 
303 2 24 2 173 1 328 2 174 1 221 2 3 5 200 2 202 1 203 2 309 2 57 1 154 5 61 3 206 1 247 6 159 1 370 1 209 1 318 2 11 2 289 5 212 2 292 1 213 8 322 5 233 2 40 1 68 1 168 1 144 1 377 1 297 1 73 1 124 1 
303 1 25 1 76 1 3 2 200 1 127 1 203 2 309 1 28 1 313 1 205 1 206 1 370 1 209 1 34 1 318 1 11 1 212 2 213 2 323 1 187 1 114 1 169 1 271 1 117 1 118 1 273 1 219 1 
318 1 11 1 303 1 190 1 193 1 3 1 213 1 322 1 233 1 309 1 
24 2 328 2 221 2 212 2 3 5 289 5 200 2 213 5 203 2 322 5 154 5 61 5 247 10 370 1 371 1 
206 1 297 1 322 1 159 1 233 1 209 1 
303 1 77 1 3 2 176 1 309 2 100 4 262 1 282 4 206 3 159 4 229 1 209 3 318 2 11 2 37 1 290 1 140 2 213 2 345 1 40 2 293 1 189 2 347 1 272 1 44 4 297 2 21 1 301 1 124 2 
149 1 126 1 25 3 77 1 306 1 308 1 178 1 100 1 367 1 7 1 134 1 282 1 313 2 267 1 34 2 373 1 187 1 345 1 115 1 295 1 189 1 271 2 347 1 272 1 326 1 44 1 118 3 45 1 74 1 121 2 273 2 275 1 
11 1 318 1 303 1 289 2 3 2 213 1 322 4 309 1 233 2 40 1 154 2 61 2 247 4 237 1 124 1 
139 1 158 1 372 1 
139 1 158 1 372 1 
60 1 305 1 106 1 158 1 372 1 
139 1 158 1 372 1 
158 1 332 1 372 1 
158 1 332 1 372 1 
158 1 332 1 372 1 
158 1 372 1 
75 1 47 1 
149 2 200 1 212 1 128 1 323 1 367 2 295 2 8 1 336 4 117 1 326 8 299 2 121 4 74 2 195 3 315 1 267 4 219 1 237 1 183 1 
212 1 200 1 128 1 323 1 336 3 117 1 326 6 299 2 315 1 195 2 267 3 219 1 237 1 137 1 
149 1 24 1 328 1 221 1 200 1 212 1 132 1 367 1 295 1 336 2 326 4 299 1 121 2 74 1 195 2 267 2 183 1 
24 1 328 1 221 1 200 1 212 1 168 1 144 2 336 3 326 7 171 1 299 1 73 1 195 2 267 4 183 1 
149 2 24 2 328 2 221 2 200 3 128 1 244 1 80 1 367 2 8 2 336 11 315 1 267 12 183 4 38 1 212 3 323 1 168 2 144 2 295 2 117 2 326 23 171 1 299 5 121 4 74 2 195 9 219 2 237 1 
144 1 326 1 267 1 
168 1 336 1 326 1 
149 1 24 1 328 1 221 1 212 1 200 1 132 1 367 1 295 1 336 3 326 6 299 2 74 1 121 2 195 3 371 1 267 3 183 1 
149 1 24 2 328 2 173 1 174 1 221 2 200 2 57 1 367 1 336 6 267 6 183 1 212 2 292 1 68 1 168 1 144 1 295 1 326 12 73 1 299 1 74 1 121 2 195 2 172 1 
212 1 200 1 323 1 336 3 117 1 326 6 299 1 195 2 267 3 219 1 183 1 
149 1 38 1 128 1 367 1 8 1 295 1 336 1 117 1 326 3 299 1 121 2 74 1 195 2 315 1 219 1 267 2 183 1 
149 1 212 2 200 2 323 1 367 1 28 1 295 1 336 5 117 2 326 10 299 3 74 1 121 2 195 5 219 2 267 5 172 1 183 2 
149 1 221 1 212 1 367 1 295 1 336 2 326 2 121 2 74 1 195 1 172 1 183 1 
149 1 24 1 328 1 221 1 200 1 212 1 367 1 295 1 336 2 326 4 299 1 121 2 74 1 195 2 267 2 172 1 183 1 
149 3 38 1 367 3 8 1 295 3 336 1 117 1 326 3 83 1 299 1 121 6 74 3 195 2 267 2 219 1 172 1 183 1 
149 5 24 3 328 3 221 3 200 5 128 1 364 1 132 1 367 5 8 2 336 16 83 1 315 1 284 1 267 18 183 5 38 1 212 5 323 2 168 3 144 4 295 5 116 1 117 3 326 34 171 1 73 1 299 7 74 5 121 10 195 12 219 3 237 1 172 1 
149 1 174 1 200 1 128 1 367 1 336 4 315 1 267 4 212 1 323 1 168 1 144 1 295 1 117 1 326 8 73 1 299 2 74 1 121 2 195 2 219 1 237 1 172 1 
149 2 328 1 174 1 221 1 200 1 128 1 132 1 367 2 336 6 315 1 267 5 183 1 212 2 323 1 168 1 144 2 295 2 117 1 326 11 171 1 299 2 73 1 74 2 121 4 195 3 219 1 237 1 172 1 
149 3 24 2 173 1 328 2 174 1 221 2 200 3 128 1 57 1 132 1 367 3 8 1 336 9 315 1 267 10 183 1 212 3 292 1 323 1 68 1 168 1 144 1 295 3 117 1 326 19 73 1 299 3 74 3 121 6 195 4 219 1 237 1 172 1 
149 3 24 1 328 2 173 1 174 1 221 2 200 2 128 1 57 1 132 1 367 3 8 1 336 10 315 1 267 7 183 2 212 3 292 1 323 1 68 1 168 1 144 1 295 3 117 1 326 17 73 1 299 3 74 3 121 6 195 5 219 1 237 1 172 1 
149 1 174 1 200 1 128 1 367 1 336 4 315 1 267 4 212 1 323 1 168 1 144 1 295 1 117 1 326 8 73 1 299 2 74 1 121 2 195 2 219 1 237 1 172 1 
149 1 24 2 328 2 173 1 174 1 221 2 200 2 57 1 367 1 336 6 267 6 183 1 212 2 292 1 68 1 168 1 144 1 295 1 326 12 73 1 299 1 74 1 121 2 195 2 172 1 
149 4 24 1 173 1 328 2 174 1 221 2 200 2 128 1 57 1 132 1 367 4 8 2 336 10 315 1 267 8 183 2 212 3 292 1 323 1 68 1 168 1 144 1 295 4 117 1 326 18 73 1 299 3 74 4 121 8 195 5 219 1 237 1 172 1 
149 4 24 2 173 1 328 3 174 1 221 3 200 2 57 1 367 4 8 2 336 9 83 1 267 7 183 3 212 3 292 1 68 1 168 1 144 1 295 4 326 16 73 1 299 3 74 4 121 8 195 6 172 1 
200 1 212 1 128 2 323 1 336 3 117 3 326 7 299 3 315 1 195 6 267 4 219 3 183 3 
149 4 24 1 173 1 328 2 174 1 221 2 200 2 128 1 57 1 367 4 8 2 336 10 83 1 315 1 267 8 183 1 212 3 292 1 323 1 68 1 168 1 144 1 295 4 117 1 326 18 73 1 299 3 74 4 121 8 195 4 219 1 237 1 172 1 
133 1 25 1 118 1 142 1 273 1 275 1 228 1 
302 1 25 1 240 1 142 1 133 1 81 1 118 1 266 1 273 1 275 1 22 1 228 1 
100 1 189 1 347 1 282 1 37 1 272 1 77 1 44 1 176 1 345 1 137 1 
150 1 25 2 77 1 345 1 178 1 100 1 7 1 271 1 189 1 282 1 347 1 272 1 44 1 118 2 45 1 273 1 275 1 34 1 
359 1 150 1 25 2 107 1 77 2 140 1 127 1 55 1 366 1 345 3 178 2 100 1 7 1 271 1 282 1 347 1 272 1 44 1 118 2 45 1 273 2 275 1 34 2 
359 1 25 2 150 1 77 2 242 1 127 1 55 1 366 1 131 1 178 2 100 2 7 1 282 2 34 2 107 1 140 1 345 3 271 1 347 1 272 1 44 2 118 2 273 2 275 1 
77 1 258 1 55 1 131 1 178 1 100 3 282 3 206 2 159 1 209 2 161 1 107 1 140 1 322 1 345 4 233 1 189 1 347 1 272 1 325 1 44 3 123 1 381 1 
161 1 107 1 258 1 77 1 331 1 140 1 322 1 55 1 233 1 345 4 131 1 178 1 100 3 189 1 282 3 347 1 272 1 206 2 44 3 159 1 123 1 209 2 
100 1 347 1 282 1 272 1 44 1 157 1 
285 1 278 1 239 1 77 2 259 1 223 1 130 1 280 1 261 1 165 1 345 3 178 1 100 7 189 2 282 6 347 2 90 1 272 3 157 1 44 7 10 1 
238 1 149 2 125 1 25 2 150 1 239 1 77 1 306 1 200 1 128 1 224 1 178 1 226 1 100 1 7 1 134 2 367 2 282 1 336 3 32 1 315 1 267 3 34 1 373 1 374 1 212 1 323 1 345 1 115 2 295 2 271 1 347 1 272 1 117 1 326 6 44 1 118 2 45 1 299 2 273 1 121 4 74 2 275 2 195 2 122 1 219 1 237 1 
303 2 331 1 258 1 222 1 78 1 3 1 309 2 100 1 282 1 206 3 341 1 159 2 209 3 318 2 11 2 161 1 213 1 322 1 233 1 345 2 293 1 189 1 190 1 193 1 44 1 297 1 353 1 123 1 
239 1 77 1 165 1 345 2 178 1 100 2 282 2 347 1 272 2 157 1 44 2 123 1 33 1 
239 1 37 1 77 1 176 1 345 1 131 1 100 4 189 1 19 1 282 4 347 1 272 1 44 4 
278 1 14 1 77 1 140 1 345 1 178 1 100 2 282 2 347 1 90 1 272 2 91 1 44 2 220 1 
231 1 41 1 100 1 189 1 347 1 282 1 163 1 272 1 44 1 316 1 
239 1 77 1 130 1 280 1 345 1 100 2 282 2 347 1 272 1 44 2 368 1 
285 1 239 1 37 1 77 2 259 1 140 1 176 1 280 1 345 3 100 5 189 1 19 1 282 4 347 2 272 2 44 5 
239 1 37 1 77 2 259 1 140 1 176 1 280 1 345 3 188 1 100 5 189 1 19 1 282 4 347 2 272 2 44 5 
150 1 25 2 77 1 242 1 345 1 178 1 100 1 7 1 271 1 189 1 282 1 347 1 272 1 44 1 118 2 273 1 275 1 34 1 
278 1 77 1 223 1 140 1 165 1 345 1 178 1 100 1 282 1 347 1 90 1 272 2 44 1 
339 1 92 1 275 1 300 1 327 1 
359 1 258 1 222 1 151 1 127 1 322 1 233 1 366 1 29 1 206 2 339 2 104 1 92 2 20 1 275 1 300 1 255 1 327 2 209 2 
25 1 281 1 89 1 204 1 118 1 92 1 273 1 300 1 327 1 
29 1 255 1 300 1 
356 1 1 1 86 1 137 1 
356 1 286 1 109 1 1 1 337 1 66 1 86 1 
286 1 59 1 63 1 
356 1 286 3 109 3 249 1 1 1 66 1 86 1 111 1 88 2 324 1 337 1 62 1 
356 1 286 2 109 2 1 1 337 1 66 1 86 1 93 1 166 1 
231 1 286 1 109 1 66 1 1 1 186 1 6 1 324 1 337 1 119 1 316 1 
356 1 286 1 324 1 109 1 1 1 337 1 66 1 
356 2 286 1 324 1 109 1 337 1 66 1 86 1 
356 1 286 2 109 2 1 1 66 2 129 1 324 1 337 2 352 1 230 1 
356 1 286 3 109 3 108 1 66 1 1 2 86 1 186 1 166 2 324 1 192 1 337 1 380 1 
356 1 231 1 196 1 286 2 163 1 109 2 1 1 66 1 86 1 166 1 324 1 337 1 227 1 119 1 316 2 
356 1 286 4 109 4 66 2 1 2 86 1 186 1 166 2 324 1 337 2 181 1 380 1 93 1 
356 1 286 1 324 1 109 1 1 1 337 1 66 1 86 1 
356 2 286 4 249 1 109 4 66 1 1 3 86 2 186 1 111 1 88 1 166 2 337 1 351 1 380 1 
356 1 319 1 286 2 109 2 1 1 66 1 86 1 166 1 324 1 337 1 216 1 235 1 
356 1 286 3 109 3 249 2 1 1 66 1 86 1 111 1 88 2 324 1 337 1 264 1 
101 1 26 2 1 2 146 1 
286 1 324 1 109 1 337 1 66 1 340 1 
356 1 286 2 324 1 108 1 109 2 1 1 337 1 66 1 86 1 166 1 
263 1 
356 1 286 1 324 1 109 1 1 1 337 1 66 1 86 1 
356 1 286 3 324 1 108 1 109 3 1 1 337 1 66 1 86 1 88 1 166 1 
1 1 351 1 186 1 380 1 
356 1 1 1 

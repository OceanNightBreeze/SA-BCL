#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
215 9 88 2 120 1 146 1 332 9 169 1 334 1 194 1 246 6 29 1 99 1 126 2 151 1 129 1 313 1 343 2 298 1 185 2 259 5 61 1 323 3 137 4 262 2 188 1 303 1 117 1 213 2 164 2 
215 9 88 2 120 1 146 1 332 9 169 1 334 1 194 1 246 6 29 1 99 1 126 2 151 1 129 1 313 1 343 2 298 1 185 2 259 5 61 1 323 3 137 4 262 2 188 1 303 1 117 1 213 2 164 2 
215 10 88 2 120 1 146 1 332 10 169 1 334 1 194 1 246 7 29 1 99 1 126 2 151 1 129 1 313 1 343 2 298 1 185 2 259 6 61 1 323 4 137 5 262 2 188 1 303 1 117 1 213 2 164 2 
215 7 88 2 146 1 332 7 169 1 334 1 194 1 246 4 29 1 99 1 126 2 151 1 129 1 313 1 343 1 298 1 185 2 259 4 61 1 323 2 137 3 262 2 188 1 303 1 117 1 213 2 164 2 
215 4 88 1 120 1 332 4 298 1 334 1 194 1 185 1 246 3 29 1 259 3 323 1 137 2 262 1 188 1 213 1 343 2 164 1 
215 2 88 1 146 1 332 2 334 1 194 1 259 1 125 1 126 1 262 1 129 1 236 1 188 1 103 1 213 1 164 1 
215 3 88 2 332 3 334 1 194 1 246 1 259 2 323 1 126 1 137 1 262 2 188 1 303 1 
215 9 88 2 120 1 332 9 334 1 194 1 246 7 29 1 126 1 313 1 343 2 202 1 316 1 298 1 185 1 259 5 61 1 323 3 137 4 262 2 188 1 303 1 213 1 164 1 
215 9 88 2 120 1 332 9 334 1 194 1 246 7 29 1 126 1 313 1 343 2 202 1 316 1 298 1 185 1 259 5 61 1 323 3 137 4 262 2 188 1 303 1 213 1 164 1 
167 1 363 1 285 1 
363 1 118 2 201 1 
121 2 293 2 35 2 353 2 252 1 143 2 256 1 279 2 
121 3 92 2 359 1 2 1 5 2 28 1 308 1 98 1 247 2 173 1 197 1 338 1 249 2 293 2 35 3 252 1 278 1 256 1 314 1 132 1 365 1 279 2 280 1 229 2 284 1 349 1 378 1 263 1 352 1 353 2 211 1 86 1 66 1 143 2 68 1 267 1 287 1 
261 1 121 1 293 1 35 1 353 1 73 1 304 1 143 1 256 1 279 1 
167 1 121 1 106 1 149 1 261 1 363 1 35 1 227 1 210 1 355 1 143 1 240 1 366 1 104 1 
167 1 121 1 106 1 261 1 363 1 293 1 35 1 227 2 353 1 210 1 143 1 240 2 279 1 366 1 104 1 
227 1 200 1 330 1 240 1 331 1 
167 1 80 1 363 1 71 1 227 2 200 1 330 1 240 2 
227 1 330 1 240 1 
121 1 73 1 261 1 293 1 35 1 227 1 353 1 200 1 304 1 143 1 240 1 67 1 256 1 279 1 
363 1 
167 1 363 1 71 1 227 2 200 1 330 1 240 2 110 1 
167 1 357 2 23 1 71 1 271 2 49 2 3 1 361 1 81 1 248 1 363 1 327 1 227 5 295 1 130 1 131 1 200 2 330 2 240 5 
252 1 285 1 
79 1 121 2 293 1 35 2 276 1 353 1 252 2 143 2 279 1 
112 1 305 1 133 1 
121 1 92 1 284 1 308 1 98 1 247 1 197 1 338 1 249 1 35 1 378 1 252 1 199 1 278 1 365 1 267 1 
121 3 293 3 35 3 353 3 252 1 206 1 143 3 279 1 
261 1 121 1 293 1 35 1 353 1 304 1 143 1 
79 1 261 1 121 1 293 1 35 1 276 1 353 1 143 1 279 1 
21 1 121 4 92 1 359 1 5 2 28 1 308 1 98 1 247 1 197 1 173 1 338 1 249 1 293 3 35 4 276 1 227 1 252 1 278 1 256 1 132 1 365 1 279 2 366 1 104 1 229 1 284 1 106 1 349 1 11 1 206 1 232 1 261 1 378 1 263 1 353 3 210 1 211 1 86 1 66 1 143 3 240 1 267 1 287 1 
121 2 293 1 35 2 72 1 353 1 252 1 149 1 143 2 206 1 
21 1 121 3 106 1 122 1 11 1 206 2 261 1 363 1 293 3 35 3 276 1 227 1 353 3 210 1 143 3 240 1 279 1 366 1 104 1 
121 2 206 1 112 1 293 2 35 2 276 1 353 2 143 2 279 1 133 1 
121 1 92 1 284 1 308 1 98 1 247 1 197 1 338 1 249 1 35 1 378 1 252 1 278 1 365 1 267 1 
121 1 92 1 284 1 308 1 247 1 338 1 249 1 35 1 224 1 378 1 252 1 278 1 38 1 365 1 267 1 
48 1 359 1 148 1 97 1 124 1 5 2 28 1 100 1 132 1 280 2 133 2 203 1 229 4 134 1 349 1 43 1 62 1 112 2 113 1 376 1 211 1 86 2 66 1 305 2 
261 1 121 1 293 1 35 1 353 1 300 1 143 1 104 1 
121 2 92 1 284 1 308 1 11 1 206 1 98 1 247 1 197 1 338 1 112 1 249 1 293 1 378 1 35 2 353 1 278 1 143 1 365 1 267 1 
121 5 72 1 149 1 11 1 206 2 293 4 187 1 35 5 276 1 57 1 353 4 252 1 143 5 279 1 
261 1 121 2 293 2 35 2 353 2 300 1 304 1 143 2 
16 1 309 1 
16 1 309 1 
370 1 115 1 
370 1 115 1 
370 1 115 1 
16 1 322 1 309 1 
45 1 16 1 309 1 
16 2 370 1 195 1 171 1 115 1 309 2 
16 1 322 1 309 1 
16 1 322 1 309 1 
16 1 234 1 309 1 
16 1 234 1 309 1 
16 1 234 1 309 1 
183 2 318 3 25 1 26 1 299 2 195 1 50 1 309 2 31 1 16 2 363 1 340 1 364 2 226 1 227 2 114 1 254 2 240 2 243 2 
45 1 121 2 183 1 318 1 299 1 231 1 160 1 309 1 31 1 221 1 16 1 139 1 292 1 293 2 286 1 35 2 227 1 353 2 252 1 254 1 143 2 266 1 240 1 243 1 
185 1 213 1 164 1 
125 1 213 1 164 1 
367 1 125 1 89 1 185 2 213 3 69 1 
367 1 125 1 185 1 213 2 15 1 69 1 
367 1 125 1 185 1 213 2 69 2 
167 1 357 1 269 1 271 1 71 1 358 1 49 1 148 1 97 1 124 1 220 1 30 1 292 1 248 3 363 2 227 5 6 2 295 1 311 1 130 2 200 4 201 1 13 1 160 1 43 1 377 2 118 3 330 1 240 5 356 1 266 1 20 2 
167 1 121 1 73 1 289 1 363 1 293 1 35 1 227 2 200 2 256 1 279 1 184 1 261 1 301 1 353 1 304 1 330 1 143 1 240 2 67 1 331 1 
167 1 357 1 269 1 358 1 271 1 49 1 148 1 97 1 124 1 361 1 30 1 220 1 248 3 363 3 227 3 6 2 130 2 200 2 201 2 43 1 377 2 118 4 240 3 356 1 266 1 20 1 
167 1 357 1 24 1 269 1 271 1 358 1 49 1 193 1 148 2 97 2 124 2 361 1 337 1 30 1 220 2 248 5 363 4 227 4 6 4 130 4 200 3 201 3 43 2 377 4 118 7 240 4 356 1 266 2 20 2 
338 1 182 1 285 1 
338 1 362 1 
212 1 
338 1 365 1 
324 1 338 3 182 2 308 1 290 1 365 1 
338 1 308 1 365 1 
338 1 374 1 
203 2 70 1 229 7 48 3 288 1 58 1 97 1 124 1 172 1 335 1 373 1 351 1 163 1 225 2 251 1 86 3 280 4 
203 2 70 1 229 7 48 3 288 1 58 1 97 1 124 1 172 1 335 1 373 1 351 1 163 1 225 2 251 1 86 3 280 4 
203 2 70 1 229 7 306 1 48 3 288 1 58 1 97 1 124 1 172 1 335 1 373 1 351 1 163 1 225 2 251 1 86 3 280 4 
70 2 288 1 48 10 359 1 148 3 272 1 97 4 124 4 5 2 172 1 335 2 220 3 274 4 34 1 225 3 251 2 228 1 257 1 132 1 280 16 203 5 229 31 58 2 349 1 372 1 109 1 373 1 43 3 351 1 163 5 211 1 116 3 86 15 119 1 
70 1 48 4 288 1 244 1 359 2 272 1 97 1 124 1 5 4 335 1 172 1 225 2 251 1 132 2 280 5 203 3 229 9 58 1 349 2 373 1 163 1 211 2 265 1 86 4 
215 2 88 1 89 1 92 1 332 2 334 1 194 1 218 1 246 1 247 1 126 1 125 1 249 1 294 1 154 1 178 1 78 1 156 1 284 1 158 1 185 1 259 1 60 1 262 1 378 1 188 1 85 1 213 2 164 1 380 1 
215 3 89 1 88 1 91 1 92 1 332 3 334 1 218 1 246 2 247 1 126 1 125 1 249 1 175 1 177 1 154 1 178 1 78 1 284 1 158 1 185 1 259 1 60 1 262 1 378 1 188 1 85 1 213 2 164 1 380 1 
215 2 89 1 92 1 332 2 284 1 158 1 334 1 218 1 185 1 246 2 259 1 247 1 125 1 126 1 249 1 378 1 175 1 188 1 154 1 177 1 85 1 178 1 213 2 164 1 380 1 
215 1 91 1 88 1 92 1 332 1 284 1 158 2 245 1 218 2 273 1 59 1 247 1 126 2 338 1 161 1 249 1 262 1 378 1 36 1 238 1 365 1 267 1 380 2 
215 1 89 1 156 1 88 1 92 1 332 1 284 1 158 1 194 1 218 1 185 1 60 1 247 1 125 1 126 1 249 1 262 1 378 1 154 1 177 1 85 1 178 1 213 2 78 1 164 1 380 1 
108 1 
92 2 94 2 49 1 149 1 247 2 291 1 248 2 338 1 249 2 54 1 295 1 201 2 104 1 345 2 106 1 59 1 260 1 161 1 261 1 162 1 208 1 264 1 209 2 302 1 354 1 210 1 65 4 118 2 355 1 356 1 267 2 166 1 167 1 357 1 121 1 71 3 271 1 363 2 223 2 76 2 35 1 227 5 130 2 365 1 366 1 40 1 284 1 83 2 375 2 378 1 142 1 330 6 143 1 240 5 189 1 
121 1 71 1 149 1 291 1 35 1 227 3 366 1 104 1 345 1 106 1 110 1 260 1 261 1 354 1 210 1 65 2 143 1 355 1 330 2 240 3 189 1 166 1 
167 1 121 1 71 1 149 1 291 1 363 1 35 1 227 3 366 1 104 1 106 1 110 1 83 1 260 1 261 1 354 1 210 1 65 3 330 1 143 1 355 1 240 3 189 1 166 1 
167 1 121 1 71 1 149 1 291 1 363 1 35 1 223 1 227 3 366 1 104 1 345 1 106 1 110 1 83 1 260 1 261 1 354 1 210 1 65 3 143 1 355 1 330 2 240 3 189 1 166 1 
167 5 357 1 90 1 121 1 271 1 71 3 94 2 49 1 360 1 123 1 149 1 291 1 248 1 54 1 363 5 76 2 35 1 223 4 227 5 295 1 130 1 201 2 366 1 104 1 345 4 40 1 10 1 106 1 110 1 375 2 83 4 260 1 261 1 209 2 354 1 210 1 65 6 143 1 355 1 330 7 240 5 241 1 189 1 166 1 
49 1 94 2 149 1 291 1 248 1 54 1 295 1 201 2 104 1 345 2 106 1 260 1 261 1 209 2 210 1 354 1 302 1 65 4 355 1 118 2 166 1 167 1 357 1 121 1 271 1 71 2 363 2 35 1 76 2 223 2 227 4 130 1 366 1 40 1 375 2 83 2 143 1 330 4 240 4 189 1 
167 1 90 1 357 1 121 1 71 2 271 1 94 2 49 1 360 1 149 1 291 1 248 1 363 1 54 1 223 2 76 2 35 1 227 4 295 1 130 1 201 2 366 1 104 1 345 2 40 1 10 1 106 1 83 2 375 2 260 1 261 1 209 2 354 1 210 1 65 4 330 4 143 1 355 1 240 4 189 1 166 1 
167 1 90 1 357 1 121 1 71 2 271 1 94 2 49 1 360 1 149 1 291 1 248 1 363 1 54 1 223 2 76 2 35 1 227 4 295 1 130 1 201 2 366 1 104 1 345 2 40 1 10 1 106 1 83 2 375 2 260 1 261 1 209 2 354 1 210 1 65 4 330 4 143 1 355 1 240 4 189 1 166 1 
167 1 357 1 121 1 71 2 271 1 307 2 94 2 49 1 360 1 149 1 291 1 248 1 53 1 363 1 54 1 174 1 223 2 35 1 198 1 227 4 295 1 130 1 366 1 104 1 345 2 106 1 83 2 260 1 261 1 209 2 354 1 210 1 65 4 330 4 118 2 143 1 355 1 240 4 189 1 165 2 166 1 
167 1 357 1 90 1 121 1 71 2 271 1 94 2 49 1 360 1 149 1 291 1 248 1 363 1 54 1 76 2 35 1 223 3 227 4 295 1 130 1 201 2 366 1 104 1 345 3 40 1 10 1 106 1 375 2 83 3 260 1 261 1 209 2 354 1 210 1 65 5 143 1 355 1 330 5 240 4 189 1 241 1 166 1 
167 1 357 1 90 1 121 1 71 2 271 1 94 2 49 1 360 1 149 1 291 1 248 1 363 1 54 1 76 2 35 1 223 3 227 4 295 1 130 1 201 2 366 1 104 1 345 3 40 1 10 1 106 1 375 2 83 3 260 1 261 1 209 2 354 1 210 1 65 5 143 1 355 1 330 5 240 4 189 1 241 1 166 1 
167 1 357 1 121 1 71 2 271 1 307 2 94 2 49 1 149 1 291 1 248 1 363 1 54 1 223 2 35 1 198 1 227 4 295 1 130 1 366 1 104 1 345 2 106 1 83 2 260 1 261 1 209 2 302 1 354 1 210 1 65 4 330 4 118 2 355 1 143 1 240 4 189 1 165 2 166 1 
203 2 229 6 48 2 288 1 58 1 349 1 359 1 97 1 124 1 28 1 5 2 172 1 373 1 335 1 285 1 62 1 112 1 225 1 252 2 211 1 86 3 66 1 305 1 132 1 280 3 133 1 
48 2 359 2 148 1 97 2 124 1 5 4 28 2 220 2 274 3 275 1 252 1 228 1 132 2 280 8 133 4 203 1 229 14 349 2 41 1 350 1 109 1 14 1 43 2 112 11 163 1 44 1 211 2 86 6 116 3 66 1 68 1 305 11 287 1 
92 1 121 2 359 1 308 1 28 1 5 2 98 1 247 1 197 1 338 1 249 1 293 1 35 2 250 1 252 1 199 1 278 1 365 1 132 1 280 1 133 1 229 2 258 1 284 1 349 1 41 1 11 1 206 1 378 1 353 1 211 1 329 1 86 1 66 1 143 1 68 1 267 1 287 1 
92 3 288 1 48 8 148 2 97 3 5 6 335 1 98 2 247 3 150 1 197 2 338 2 249 3 293 1 252 2 203 4 58 1 349 3 11 1 206 1 207 2 112 7 163 4 263 2 353 1 211 3 66 3 68 1 305 7 267 1 121 3 270 2 359 3 124 3 28 3 308 2 172 1 220 2 32 2 225 1 35 3 177 1 278 2 132 3 365 2 280 10 133 7 229 20 319 2 284 2 41 1 373 1 43 2 378 2 86 10 143 1 145 1 287 1 190 1 
121 1 92 8 359 2 2 2 5 4 28 2 336 1 247 7 338 3 310 1 249 8 293 1 35 1 294 1 253 1 177 1 132 2 365 2 280 1 229 2 284 2 230 1 349 2 206 1 59 1 186 1 42 1 62 1 161 1 378 2 353 1 211 2 86 1 143 1 66 2 214 1 68 1 267 2 287 1 
121 1 48 1 359 1 148 1 97 1 124 1 5 2 28 1 220 1 293 1 128 1 35 1 276 1 279 1 132 1 280 1 133 1 203 1 229 3 349 1 41 1 43 1 112 1 353 1 211 1 86 2 66 1 143 1 305 1 
229 2 48 1 349 1 359 1 97 1 28 1 5 2 43 1 62 1 112 1 163 1 100 1 211 1 66 1 305 1 132 1 280 2 133 1 
203 1 229 2 48 1 134 1 349 1 359 1 148 1 124 1 28 1 5 2 62 1 112 1 211 1 86 2 66 1 305 1 132 1 133 1 
48 2 359 1 148 1 97 1 124 1 5 2 28 1 220 1 132 1 280 2 133 2 203 1 229 4 349 1 43 1 62 1 112 2 163 1 211 1 86 2 66 1 305 2 
229 2 48 1 349 1 359 1 97 1 28 1 5 2 186 1 43 1 112 1 163 1 100 1 211 1 66 1 305 1 132 1 280 2 133 1 
203 1 229 2 48 1 134 1 349 1 359 1 148 1 124 1 28 1 5 2 186 1 112 1 211 1 86 2 66 1 305 1 132 1 133 1 
48 2 359 1 148 1 97 1 124 1 5 2 28 1 220 1 132 1 280 2 133 2 203 1 229 4 349 1 186 1 43 1 112 2 163 1 211 1 86 2 66 1 305 2 
48 2 359 1 148 1 97 1 124 1 5 2 28 1 220 1 132 1 280 2 133 2 203 1 229 4 349 1 43 1 112 2 163 1 211 1 86 2 66 1 305 2 
92 1 121 1 359 1 308 1 28 1 5 2 98 1 247 1 197 1 338 1 249 1 35 1 252 1 278 1 365 1 132 1 280 1 229 2 284 1 349 1 378 1 263 1 211 1 86 1 66 1 68 1 267 1 287 1 
92 1 121 1 359 1 308 1 28 1 5 2 247 1 338 1 249 1 224 1 35 1 252 1 278 1 38 1 365 1 296 1 132 1 280 1 229 2 284 1 349 1 378 1 211 1 86 1 66 1 68 1 267 1 287 1 
48 2 359 1 148 1 97 1 124 1 5 2 28 1 220 1 132 1 280 2 133 2 203 1 229 4 349 1 41 1 43 1 112 2 163 1 211 1 86 2 66 1 305 2 
92 1 121 1 48 2 359 1 148 1 97 1 124 1 308 1 28 1 5 2 98 1 247 1 220 1 197 1 32 1 338 1 249 1 35 1 294 1 278 1 365 1 132 1 280 2 133 2 203 1 229 4 284 1 349 1 43 1 112 2 163 1 378 1 263 1 211 1 86 2 66 1 305 2 
121 1 48 1 359 1 148 1 97 1 124 1 5 2 28 1 220 1 293 1 35 1 276 1 279 1 132 1 280 2 133 1 9 1 229 3 349 1 41 1 43 1 112 1 163 1 353 1 211 1 86 1 66 1 143 1 305 1 
93 1 48 8 288 1 244 1 148 4 97 5 4 1 5 6 335 1 55 1 56 1 297 1 203 4 347 1 58 1 349 3 157 1 109 3 163 4 211 3 116 3 19 2 268 1 359 3 272 1 124 5 172 1 220 4 127 1 274 4 222 1 77 1 225 1 228 1 132 3 280 20 229 41 368 4 371 1 373 1 43 4 140 1 86 21 
268 1 93 1 288 1 48 7 244 1 359 4 272 2 148 3 4 1 97 5 124 4 5 8 172 1 335 1 220 4 127 1 274 4 222 1 225 1 77 1 55 1 56 1 228 1 132 4 297 1 280 20 203 4 229 38 368 4 58 1 347 1 157 1 371 1 349 4 109 3 373 1 43 4 140 1 163 3 211 4 86 18 116 3 19 2 
268 1 288 1 48 14 244 1 359 2 272 1 148 7 4 1 97 8 124 8 5 4 172 1 335 1 220 7 127 1 274 4 222 1 225 1 77 1 55 1 56 1 228 2 132 2 297 1 280 27 203 7 229 52 368 4 58 1 347 1 371 1 349 2 350 2 109 2 373 1 43 7 140 1 163 7 211 2 86 25 116 4 19 1 
93 1 48 6 244 1 359 2 148 3 97 3 124 3 27 1 5 4 220 3 274 2 222 1 55 1 56 2 228 1 132 2 297 1 280 9 203 3 229 19 368 2 347 1 349 2 109 1 43 3 163 3 211 2 86 10 116 1 19 1 
268 1 48 4 244 1 359 3 272 2 148 2 4 1 97 3 124 2 5 6 220 3 127 1 274 2 222 1 55 2 77 1 56 1 132 3 297 1 280 14 203 2 229 26 368 4 347 1 349 3 371 1 109 2 43 3 163 2 140 1 211 3 86 12 116 2 19 2 
16 1 183 1 340 1 299 1 195 1 254 1 50 1 144 1 309 1 243 1 
45 1 221 1 
16 1 281 1 101 1 183 1 299 1 254 1 379 1 309 1 243 1 
183 1 318 2 25 1 26 1 299 1 195 1 50 1 309 1 31 1 16 1 363 1 340 1 364 1 226 1 227 1 254 1 240 1 243 1 
183 1 318 2 25 1 26 1 299 1 195 1 50 1 309 1 31 1 16 1 363 1 340 1 364 1 226 1 227 1 254 1 240 1 243 1 
183 1 318 2 25 1 26 1 299 1 195 1 50 1 309 1 31 1 16 1 363 1 340 1 364 1 226 1 227 1 254 1 240 1 243 1 
84 1 171 1 322 1 
84 1 171 1 322 1 
204 1 234 1 
204 1 234 1 171 1 
139 1 231 1 
22 1 45 1 121 2 26 1 309 1 221 1 292 1 293 2 35 2 364 1 227 1 252 1 200 1 254 1 183 1 318 1 299 1 231 1 160 1 16 1 139 1 286 1 353 2 143 2 240 1 266 1 243 1 
84 1 322 1 
204 1 234 1 171 1 
92 2 121 2 359 1 2 2 28 1 5 2 247 2 338 1 310 1 249 2 35 2 255 1 365 1 132 1 179 1 280 1 344 1 229 2 282 1 284 1 230 1 41 1 349 1 378 1 211 1 86 1 66 1 143 2 68 1 191 1 287 1 
89 1 92 2 284 1 185 1 60 1 247 2 75 1 125 1 51 1 249 2 378 1 294 1 177 1 342 1 178 1 85 1 213 2 164 1 380 1 
89 1 92 1 284 1 185 1 219 1 60 1 247 1 75 1 125 1 249 1 378 1 177 1 178 1 85 1 213 2 164 1 380 1 
92 1 284 1 59 1 247 1 51 1 338 1 161 1 249 1 378 1 36 1 18 1 365 1 267 1 380 1 
89 1 92 1 284 1 185 1 60 1 247 1 75 1 125 1 51 1 249 1 378 1 177 1 342 1 178 1 85 1 213 2 164 1 380 1 
242 1 
167 1 248 1 363 1 327 1 130 1 81 1 285 1 
167 1 357 1 271 1 71 1 49 1 248 1 363 2 76 1 227 1 295 1 130 1 201 1 40 1 375 1 118 1 330 1 240 1 
47 2 92 3 1 2 49 4 148 2 96 2 97 2 290 1 247 3 248 9 338 10 249 3 294 1 295 4 6 6 153 1 201 6 159 1 207 2 264 1 17 2 118 12 356 2 267 1 167 2 357 4 271 4 71 3 217 2 170 1 124 2 308 3 220 2 362 3 363 8 227 5 130 8 365 3 366 2 317 1 182 2 284 4 81 1 82 2 374 2 43 2 141 2 377 6 378 3 327 1 235 2 328 1 330 5 240 5 
268 1 167 2 357 2 71 1 271 2 49 2 148 2 97 2 124 2 220 2 248 8 127 1 274 1 363 5 77 1 227 1 6 5 295 2 130 5 155 1 201 3 371 1 82 2 109 1 43 2 138 1 140 1 377 5 264 1 17 1 116 1 330 1 118 6 356 1 240 1 
357 1 121 1 271 1 49 1 97 2 73 1 124 1 335 1 172 1 248 2 293 1 35 1 227 1 295 1 7 1 130 2 256 1 279 1 10 1 58 1 82 2 261 1 17 1 353 1 304 1 143 1 240 1 67 1 
167 1 357 1 271 1 49 1 81 1 248 1 363 1 327 1 295 1 130 1 
148 2 97 2 124 2 82 2 220 2 43 2 207 1 248 5 377 5 363 5 17 1 6 5 130 5 118 10 201 5 
167 1 363 1 71 1 227 1 330 1 240 1 
357 2 92 4 271 2 71 2 49 2 361 1 247 4 338 1 248 2 249 4 227 3 295 1 312 1 130 2 341 1 365 1 317 2 284 1 159 1 59 1 161 1 378 1 208 1 264 2 142 1 330 4 356 2 240 3 267 2 
92 1 121 3 359 1 5 2 308 1 28 1 98 1 247 1 173 1 197 1 338 1 249 1 293 2 35 3 252 1 278 1 256 1 279 2 365 1 132 1 229 1 284 1 349 1 378 1 263 1 353 2 211 1 86 1 143 2 66 1 267 1 287 1 
167 2 357 1 271 1 49 1 248 1 377 2 363 4 225 1 264 1 6 2 295 1 130 2 118 4 356 1 201 2 
176 1 299 1 254 1 
340 1 102 1 299 1 231 1 254 1 
176 1 299 1 254 1 
176 1 299 1 254 1 
321 1 299 1 254 1 
321 1 299 1 254 1 
321 1 299 1 254 1 
299 1 254 1 
16 1 309 1 
203 2 229 8 48 3 288 1 58 1 349 2 359 2 272 1 97 1 124 1 5 4 172 1 373 1 335 1 163 1 225 1 211 2 86 4 132 2 280 4 
203 2 229 6 48 2 288 1 225 1 58 1 97 1 124 1 86 3 172 1 335 1 373 1 280 3 285 1 
203 1 229 4 48 2 349 1 359 1 148 1 97 1 124 1 5 2 220 1 43 1 325 1 163 1 211 1 86 2 132 1 280 2 
203 1 229 7 48 2 148 1 97 1 124 1 109 1 220 1 43 1 274 2 163 1 228 1 86 4 116 1 280 3 
288 1 48 9 359 2 148 2 272 2 97 3 124 3 5 4 172 1 335 2 220 2 274 2 225 1 228 1 132 2 280 11 203 5 181 1 229 23 58 2 349 2 350 1 373 1 14 1 43 2 163 4 211 2 116 2 86 12 
229 1 274 1 86 1 
229 1 116 1 280 1 
203 2 229 6 48 3 359 1 349 1 148 1 97 1 124 1 5 2 220 1 43 1 207 1 325 1 163 1 211 1 86 3 132 1 280 3 
268 1 48 2 244 1 359 1 148 2 97 2 124 2 5 2 220 2 127 1 274 1 77 1 132 1 280 6 203 1 229 12 371 1 349 1 109 1 43 2 163 1 140 1 211 1 116 1 86 6 
203 1 229 6 48 2 58 1 97 1 124 1 172 1 335 1 163 1 86 3 280 3 
203 1 181 1 229 3 48 2 288 1 58 1 349 1 359 1 272 1 5 2 335 1 373 1 163 1 211 1 86 2 132 1 280 1 
288 1 48 2 244 1 359 1 97 1 124 1 5 2 335 1 172 1 274 1 225 1 132 1 280 4 203 2 229 8 58 1 371 1 349 1 109 1 373 1 211 1 116 1 86 4 
288 1 48 3 244 1 359 2 97 2 124 1 5 4 172 1 335 1 220 1 274 2 225 1 228 1 132 2 280 6 203 2 229 11 58 1 371 1 349 2 109 1 373 1 43 1 325 1 163 1 211 2 86 5 116 1 
268 1 288 1 48 4 244 1 359 3 148 2 272 1 97 3 124 3 5 6 172 1 335 1 220 2 127 1 274 1 225 1 77 1 132 3 280 9 203 3 229 19 58 1 371 1 349 3 109 1 373 1 43 2 325 1 163 1 140 1 211 3 116 1 86 10 
268 1 288 1 48 5 244 1 359 3 272 1 148 1 97 3 124 2 5 6 172 1 335 1 220 2 127 1 274 1 225 1 77 1 132 3 280 10 203 3 229 17 58 1 371 1 349 3 109 1 373 1 43 2 325 1 163 2 140 1 211 3 116 1 86 7 
288 1 48 2 244 1 359 1 97 1 124 1 5 2 335 1 172 1 274 1 225 1 132 1 280 4 203 2 229 8 58 1 371 1 349 1 109 1 373 1 211 1 116 1 86 4 
268 1 48 2 244 1 359 1 148 2 97 2 124 2 5 2 220 2 127 1 274 1 77 1 132 1 280 6 203 1 229 12 371 1 349 1 109 1 43 2 163 1 140 1 211 1 116 1 86 6 
268 1 288 1 48 5 244 1 359 4 148 1 272 2 97 3 124 2 5 8 172 1 335 1 220 2 127 1 274 1 225 1 77 1 132 4 280 10 203 3 229 18 58 1 371 1 349 4 109 1 373 1 43 2 325 1 163 2 140 1 211 4 86 8 116 1 
268 1 93 1 48 6 244 1 359 4 148 2 272 2 97 3 124 2 5 8 220 3 127 1 274 1 77 1 132 4 280 9 203 3 229 16 371 1 349 4 109 1 43 3 163 3 140 1 211 4 86 7 116 1 
203 3 229 7 288 2 48 6 58 3 97 1 124 1 373 1 335 3 172 1 163 3 86 4 280 3 
268 1 93 1 288 1 48 4 244 1 359 4 148 1 272 2 97 3 124 2 5 8 172 1 335 1 220 2 127 1 274 1 225 1 77 1 132 4 280 10 203 3 229 18 58 1 371 1 349 4 109 1 373 1 43 2 163 1 140 1 211 4 86 8 116 1 
203 3 229 10 48 5 244 1 58 2 359 1 349 1 97 2 124 2 5 2 335 2 172 1 163 2 211 1 7 1 86 5 132 1 280 5 
229 2 48 1 244 1 349 1 359 1 97 1 5 2 43 1 163 1 211 1 132 1 280 2 
203 1 229 4 48 2 244 1 349 1 359 1 148 1 97 1 124 1 5 2 220 1 43 1 163 1 211 1 86 2 132 1 280 2 
181 1 203 1 229 3 93 1 48 2 244 1 58 1 349 3 359 3 272 1 5 6 335 1 163 1 211 3 86 2 132 3 280 1 
93 1 288 1 48 12 244 1 359 5 272 2 148 3 97 5 124 5 5 10 172 2 335 3 220 3 274 4 34 1 225 1 228 1 257 1 132 5 280 16 181 1 203 7 229 34 58 3 349 5 109 1 373 1 43 3 325 1 163 5 211 5 86 18 116 3 119 1 
121 1 35 1 72 1 348 1 252 1 149 1 143 1 
8 1 121 1 348 1 72 1 149 1 52 1 233 1 35 1 252 1 64 1 143 1 239 1 
338 1 161 1 92 1 249 1 378 1 284 1 59 1 365 1 285 1 247 1 267 1 
121 2 92 1 284 1 308 1 206 1 247 1 197 1 338 1 249 1 293 1 35 2 378 1 353 1 252 1 278 1 143 1 365 1 267 1 
92 1 121 2 308 2 247 1 197 1 338 3 249 1 293 1 35 2 252 1 278 1 365 2 104 1 317 1 284 1 206 1 374 1 261 1 378 1 235 1 353 2 210 1 143 2 
92 2 121 2 308 2 247 2 338 3 33 1 249 2 293 1 35 2 252 1 278 1 38 1 365 2 104 1 317 1 284 1 206 1 374 1 261 1 378 1 235 1 353 2 210 1 143 2 
167 1 92 3 308 1 247 3 338 4 362 1 33 1 249 3 363 1 227 2 365 1 366 1 317 1 182 1 369 1 284 1 12 1 374 1 378 1 235 1 330 1 240 2 267 1 
167 1 317 1 92 3 182 1 1 1 284 1 308 1 374 1 247 3 362 1 338 4 33 1 249 3 363 1 378 1 235 1 227 2 330 1 240 2 365 1 267 1 366 1 
92 1 249 1 378 1 284 1 253 1 247 1 
105 1 92 1 284 2 320 1 308 1 290 1 247 1 338 1 249 1 378 1 237 1 365 1 267 1 
121 2 92 1 48 2 288 1 359 2 97 1 124 1 308 1 28 2 5 4 172 1 335 1 98 1 247 1 197 1 32 1 338 1 249 1 293 1 225 1 35 2 294 1 252 2 278 1 365 1 132 2 280 3 133 1 203 2 344 1 229 6 319 1 58 1 284 1 349 2 41 1 206 1 373 1 112 1 378 1 263 1 353 1 211 2 86 3 66 2 143 1 305 1 
167 1 357 2 92 1 47 1 271 2 1 1 71 1 49 2 217 1 247 1 248 1 362 1 338 2 249 1 363 1 227 3 295 2 130 1 200 1 366 1 182 1 159 1 81 1 141 1 327 1 330 2 240 3 267 1 
92 2 182 1 284 2 170 1 308 1 290 1 247 2 338 2 249 2 378 1 294 1 253 1 365 1 
92 4 284 1 59 1 247 4 111 1 161 1 338 1 33 1 249 4 378 1 294 1 365 1 267 1 
0 1 105 1 168 1 92 1 284 2 308 1 247 1 150 1 338 1 249 1 378 1 237 1 365 1 
125 1 92 1 249 1 378 1 284 1 85 1 213 1 164 1 247 1 267 1 
338 1 92 2 249 2 282 1 378 1 284 1 230 1 294 1 177 1 365 1 247 2 
317 1 92 5 284 2 230 1 59 1 247 4 111 1 42 1 161 1 338 3 249 5 378 2 294 1 214 1 365 2 267 1 
180 1 317 1 92 5 284 2 230 1 59 1 247 4 111 1 161 1 338 3 249 5 378 2 294 1 214 1 365 2 267 1 
121 2 92 1 284 1 308 1 206 1 247 1 338 1 249 1 293 1 35 2 378 1 353 1 252 1 278 1 38 1 143 1 365 1 267 1 
105 1 317 1 92 1 284 2 320 1 308 1 290 1 247 1 338 1 249 1 378 1 237 1 365 1 
46 1 315 1 252 1 152 1 136 1 
167 1 21 1 315 1 46 2 147 1 106 1 95 1 136 2 261 1 363 1 326 1 227 2 252 1 210 1 152 2 200 1 240 2 366 1 104 1 
315 1 121 1 136 1 35 1 152 1 255 1 143 1 179 1 191 1 
315 1 326 1 95 1 
334 1 188 1 259 1 285 1 
215 1 88 1 332 1 262 1 334 1 188 1 259 1 
126 1 332 1 218 1 
215 3 63 1 88 1 332 3 262 1 129 2 333 1 334 1 188 1 194 1 74 1 259 1 
215 2 88 1 332 2 262 1 334 1 188 1 246 1 343 1 259 1 
215 1 88 1 332 1 298 1 194 1 185 1 259 1 137 1 262 1 213 1 164 1 
215 1 88 1 332 1 262 1 334 1 194 1 259 1 
215 1 88 1 332 1 262 1 334 2 188 1 194 1 
215 2 88 2 332 2 346 1 334 1 194 1 135 1 259 1 196 1 262 2 
215 3 88 1 332 3 334 1 194 1 246 2 61 1 259 2 323 1 137 1 262 1 188 1 313 1 
215 2 88 1 89 1 332 2 107 1 334 1 194 1 185 1 246 1 259 1 125 1 262 1 188 1 213 2 164 1 
215 4 88 2 120 1 332 4 334 1 194 1 246 2 259 2 323 1 137 1 262 2 188 1 343 1 
215 1 88 1 332 1 262 1 334 1 188 1 194 1 259 1 
215 4 88 1 332 4 333 1 334 2 246 2 259 3 323 1 137 1 63 1 262 1 339 1 129 1 188 2 
215 2 87 1 88 1 316 1 332 2 334 1 194 1 246 1 259 1 262 1 277 1 188 1 
215 3 88 1 332 3 283 1 333 2 194 1 334 1 259 1 63 1 262 1 129 2 188 1 
192 1 37 1 259 2 39 2 
215 1 88 1 332 1 262 1 194 1 205 1 
215 2 88 1 332 2 262 1 334 1 188 1 194 1 246 1 259 1 61 1 
216 1 
215 1 88 1 332 1 262 1 334 1 188 1 194 1 259 1 
215 3 88 1 332 3 262 1 129 1 334 1 188 1 194 1 246 1 61 1 259 1 
137 1 339 1 259 1 323 1 
334 1 259 1 

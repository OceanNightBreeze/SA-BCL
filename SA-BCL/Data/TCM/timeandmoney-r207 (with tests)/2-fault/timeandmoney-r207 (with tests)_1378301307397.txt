#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
327 2 26 3 328 1 149 1 204 1 329 1 1 9 330 2 151 4 229 1 332 2 66 2 3 6 68 1 111 1 132 1 338 2 264 1 37 5 265 2 74 1 91 1 213 1 352 1 353 2 139 1 356 1 359 9 
327 2 26 3 328 1 149 1 204 1 329 1 1 9 330 2 151 4 229 1 332 2 66 2 3 6 68 1 111 1 132 1 338 2 264 1 37 5 265 2 74 1 91 1 213 1 352 1 139 1 353 2 356 1 359 9 
327 2 26 4 328 1 149 1 204 1 329 1 1 10 330 2 151 5 229 1 332 2 66 2 3 7 68 1 111 1 132 1 338 2 264 1 37 6 265 2 74 1 91 1 213 1 352 1 139 1 353 2 356 1 359 10 
327 2 26 2 149 1 204 1 329 1 1 7 330 2 151 3 229 1 332 2 66 2 3 4 68 1 111 1 132 1 338 2 264 1 37 4 265 2 74 1 91 1 213 1 352 1 139 1 353 1 356 1 359 7 
265 1 327 1 91 1 26 1 328 1 329 1 204 1 330 1 1 4 151 2 229 1 353 2 66 1 3 3 338 1 356 1 359 4 37 3 
265 1 166 1 329 1 1 2 330 1 229 1 332 1 66 1 217 1 111 1 338 1 356 1 20 1 264 1 359 2 37 1 
26 1 329 1 1 3 151 1 229 1 332 1 66 2 3 1 132 1 338 2 356 1 359 3 37 2 
327 1 26 3 107 1 328 1 149 1 329 1 204 1 151 4 1 9 330 1 229 1 332 1 3 7 66 2 68 1 132 1 338 2 37 5 265 1 91 1 353 2 356 1 245 1 359 9 
327 1 26 3 107 1 328 1 149 1 329 1 204 1 151 4 1 9 330 1 229 1 332 1 3 7 66 2 68 1 132 1 338 2 37 5 265 1 91 1 353 2 356 1 245 1 359 9 
94 1 243 1 271 1 
55 2 243 1 224 1 
25 2 235 1 205 2 70 1 174 2 30 2 323 2 40 2 
177 2 296 1 127 1 25 2 362 1 30 2 333 1 279 2 367 1 368 1 334 1 335 1 186 1 112 1 260 2 205 2 340 2 371 1 70 1 113 1 372 1 194 1 11 1 235 1 168 1 59 1 171 1 14 1 377 2 93 1 40 2 96 1 174 3 203 1 323 3 249 1 250 1 
241 1 25 1 235 1 205 1 80 1 174 1 30 1 323 1 40 1 46 1 
147 1 237 1 271 1 30 1 238 1 243 1 259 1 44 1 322 1 80 1 174 1 283 1 323 1 287 1 
147 1 25 1 237 1 271 1 30 1 238 1 40 1 243 1 259 2 205 1 80 1 174 1 283 2 323 1 287 1 
105 1 259 1 121 1 283 1 137 1 
105 1 188 1 243 1 259 2 271 1 283 2 137 1 49 1 
105 1 259 1 283 1 
241 1 25 1 235 1 259 1 205 1 80 1 174 1 30 1 232 1 283 1 137 1 323 1 40 1 46 1 
243 1 
105 1 188 1 243 1 252 1 259 2 271 1 283 2 137 1 
343 2 308 2 58 1 251 1 105 2 271 1 137 2 16 1 315 1 188 1 316 1 243 1 259 5 163 1 283 5 100 2 71 1 101 1 373 1 
94 1 70 1 
25 1 30 2 256 1 40 1 205 1 70 2 174 2 323 2 90 1 
275 1 169 1 351 1 
362 1 168 1 171 1 377 1 334 1 112 1 260 1 340 1 371 1 70 1 64 1 174 1 203 1 323 1 194 1 250 1 
118 1 349 1 25 1 362 1 168 1 169 1 30 1 171 1 377 1 40 1 334 1 112 1 260 1 371 1 340 1 203 1 174 2 194 1 323 2 250 1 
349 1 25 3 205 1 70 1 174 3 30 3 323 3 40 3 
241 1 25 1 80 1 174 1 30 1 323 1 40 1 
25 1 205 1 80 1 174 1 30 1 323 1 90 1 256 1 40 1 
177 1 296 1 127 1 147 1 25 3 362 1 30 3 279 2 280 1 334 1 367 1 335 1 112 1 259 1 260 1 205 2 371 1 340 1 70 1 113 1 372 1 283 1 194 1 90 1 287 1 118 1 11 1 349 1 235 1 168 1 59 1 237 1 376 1 238 1 171 1 377 1 93 1 40 3 96 1 80 1 203 1 174 4 323 4 250 1 
273 1 25 1 349 1 70 1 322 1 174 2 30 2 323 2 40 1 
118 1 147 1 349 2 25 3 376 1 237 1 30 3 238 1 40 3 243 1 259 1 205 1 80 1 174 3 283 1 90 1 323 3 325 1 287 1 
349 1 25 2 169 1 30 2 351 1 40 2 205 1 174 2 90 1 323 2 
362 1 168 1 171 1 377 1 334 1 112 1 260 1 340 1 371 1 70 1 174 1 203 1 323 1 194 1 250 1 
362 1 168 1 171 1 377 1 112 1 260 1 340 1 371 1 70 1 174 1 203 1 323 1 250 1 10 1 9 1 
177 4 296 2 178 1 275 2 129 1 279 2 335 1 370 1 113 1 54 1 372 1 72 1 11 1 169 2 350 1 14 2 199 1 351 2 93 1 96 1 202 1 99 1 295 1 145 1 
25 1 80 1 119 1 174 1 238 1 30 1 323 1 40 1 
118 1 349 2 25 4 30 5 40 4 273 1 131 1 85 1 205 1 70 1 322 1 174 5 323 5 90 1 
241 1 25 2 119 1 80 1 174 2 30 2 323 2 40 2 
143 1 223 1 
143 1 223 1 
336 1 288 1 
336 1 288 1 
336 1 288 1 
354 1 143 1 223 1 
354 1 143 1 223 1 
162 1 143 1 223 1 
336 1 288 1 157 1 143 2 307 1 223 2 
354 1 143 1 223 1 
143 1 223 1 73 1 
143 1 223 1 73 1 
143 1 223 1 73 1 
56 2 104 1 24 3 374 2 170 1 303 2 305 1 243 1 158 1 259 2 123 2 143 2 307 1 283 2 193 1 223 2 165 2 144 1 342 1 
326 1 24 1 148 1 25 2 228 1 30 2 304 1 369 1 259 1 70 1 162 1 283 1 193 1 165 1 56 1 374 1 172 1 40 2 39 1 123 1 143 1 174 2 223 1 323 2 
265 1 327 1 330 1 
265 1 330 1 20 1 
265 3 327 2 75 1 191 1 20 1 206 1 
265 2 327 1 191 1 20 1 206 1 200 1 
265 2 327 1 191 2 20 1 206 1 
178 1 326 1 105 1 148 1 188 1 87 2 32 2 259 5 6 1 8 1 262 1 263 2 54 1 283 5 373 3 55 3 345 1 343 1 308 1 350 1 137 4 271 1 199 1 172 1 173 1 16 1 315 2 243 2 95 1 355 1 100 1 224 1 
178 3 148 4 105 6 84 1 188 1 87 6 259 9 6 2 88 1 263 6 54 3 283 9 89 1 373 8 55 9 343 2 308 2 350 3 121 5 137 7 272 1 271 1 198 1 199 3 173 3 16 1 315 6 243 5 95 2 19 5 355 1 100 2 101 1 224 3 103 1 
178 1 148 1 32 1 87 2 259 3 6 1 8 1 283 3 54 1 263 2 373 3 345 1 343 1 55 4 308 1 350 1 271 1 137 2 199 1 173 1 315 2 243 3 95 1 100 1 224 2 101 1 
178 2 148 2 84 1 87 4 32 2 259 4 6 1 8 1 88 1 263 4 283 4 54 2 373 5 55 7 343 1 345 1 308 1 350 2 271 1 137 3 198 1 199 2 173 2 315 4 243 4 95 1 100 1 224 3 101 1 
94 1 168 1 261 1 
168 1 239 1 
379 1 
362 1 168 1 
112 1 4 1 362 1 306 1 261 2 168 3 
112 1 362 1 168 1 
168 1 102 1 
177 7 296 3 23 1 299 1 65 1 350 1 62 2 129 2 278 1 14 4 138 1 366 1 52 1 54 1 125 1 208 1 145 3 
177 7 296 3 23 1 299 1 65 1 350 1 62 2 129 2 278 1 14 4 138 1 366 1 52 1 54 1 125 1 208 1 145 3 
177 7 296 3 23 1 299 1 65 1 350 1 62 2 129 2 278 1 14 4 138 1 366 1 52 1 258 1 54 1 125 1 208 1 145 3 
177 31 296 15 178 3 23 1 299 1 65 2 129 5 278 2 50 1 279 2 366 5 257 1 335 1 51 1 52 1 69 3 113 1 372 1 54 4 208 2 11 1 350 4 62 3 14 16 199 3 138 2 293 4 173 3 380 1 79 1 125 1 381 1 176 1 145 10 
177 9 296 4 47 1 23 1 65 1 129 3 278 1 50 1 279 4 366 1 335 2 52 1 113 2 54 1 372 2 208 1 11 2 289 1 350 1 62 2 14 5 138 1 125 1 145 4 
327 1 329 1 330 1 128 1 1 2 109 1 229 1 255 1 332 1 3 1 66 1 338 1 260 1 5 1 190 1 340 1 37 1 265 2 75 1 269 1 13 1 171 1 377 1 63 1 318 1 356 1 221 1 203 1 20 1 359 2 
327 1 0 1 330 1 128 1 1 3 109 1 229 1 332 1 2 1 66 1 3 2 337 1 338 1 260 1 5 1 190 1 340 1 37 1 265 2 75 1 269 1 13 1 171 1 377 1 318 1 356 1 221 1 203 1 20 1 359 3 
327 1 128 1 1 2 330 1 109 1 229 1 332 1 2 1 3 2 337 1 260 1 190 1 340 1 37 1 265 2 75 1 269 1 13 1 171 1 377 1 356 1 221 1 203 1 20 1 359 2 
267 1 0 1 348 1 362 1 82 1 168 1 291 1 1 1 128 2 13 2 171 1 332 2 377 1 66 1 338 1 260 1 190 2 319 1 340 1 203 1 359 1 250 1 22 1 
327 1 329 1 330 1 128 1 1 1 109 1 332 1 2 1 66 1 338 1 260 1 5 1 190 1 340 1 265 2 75 1 269 1 13 1 171 1 377 1 63 1 318 1 221 1 203 1 20 1 359 1 
248 1 
126 2 188 3 7 1 340 2 285 2 283 5 287 1 55 2 343 1 346 1 135 1 348 1 237 1 136 1 238 1 16 1 243 2 95 1 203 1 100 1 250 2 105 6 147 1 362 1 363 2 301 2 302 4 30 1 153 1 154 2 259 5 260 2 34 1 36 1 373 2 308 1 267 1 168 1 120 1 271 1 171 1 377 2 313 1 78 1 315 2 122 1 320 1 321 2 44 1 322 1 80 1 222 2 174 1 323 1 224 2 
135 1 105 2 147 1 252 1 302 2 237 1 238 1 136 1 30 1 78 1 188 1 259 3 122 1 7 1 80 1 44 1 322 1 174 1 285 1 283 3 323 1 287 1 
105 1 147 1 252 1 302 3 30 1 188 1 259 3 7 1 283 3 287 1 135 1 237 1 136 1 238 1 271 1 78 1 122 1 243 1 322 1 44 1 80 1 174 1 222 1 323 1 
135 1 105 2 147 1 252 1 363 1 302 3 237 1 271 1 238 1 136 1 30 1 78 1 188 1 243 1 259 3 122 1 7 1 80 1 44 1 322 1 222 1 174 1 285 1 283 3 323 1 287 1 
126 2 184 1 130 1 188 3 7 1 285 4 283 5 287 1 343 1 135 1 237 1 238 1 136 1 16 1 243 5 357 1 100 1 147 1 105 7 252 1 363 4 301 2 150 1 302 6 30 1 153 1 154 2 259 5 373 1 308 1 271 5 313 1 78 1 315 1 122 1 80 1 44 1 322 1 321 2 174 1 222 4 323 1 324 1 224 2 
126 2 188 2 7 1 283 4 285 2 287 1 343 1 55 2 346 1 135 1 237 1 238 1 136 1 16 1 243 2 100 1 147 1 105 4 301 2 363 2 302 4 30 1 153 1 154 2 259 4 373 1 308 1 271 1 313 1 78 1 315 1 122 1 80 1 322 1 44 1 321 2 174 1 222 2 323 1 224 2 
126 2 105 4 147 1 363 2 301 2 302 4 30 1 153 1 184 1 154 2 130 1 188 2 259 4 7 1 285 2 283 4 287 1 373 1 343 1 135 1 308 1 237 1 271 1 136 1 238 1 313 1 78 1 16 1 315 1 243 1 122 1 321 2 322 1 44 1 80 1 222 2 174 1 323 1 100 1 224 2 324 1 
126 2 105 4 147 1 363 2 301 2 302 4 30 1 153 1 184 1 154 2 130 1 188 2 259 4 7 1 285 2 283 4 287 1 373 1 343 1 135 1 308 1 237 1 271 1 136 1 238 1 313 1 78 1 16 1 315 1 243 1 122 1 321 2 322 1 44 1 80 1 222 2 174 1 323 1 100 1 224 2 324 1 
361 1 146 1 105 4 147 1 363 2 301 2 302 4 331 2 30 1 130 1 188 2 259 4 7 1 285 2 283 4 286 1 287 1 373 1 55 2 343 1 135 1 308 1 268 2 237 1 271 1 136 1 238 1 313 1 78 1 16 1 315 1 243 1 122 1 321 2 322 1 44 1 80 1 222 2 174 1 323 1 100 1 
126 2 147 1 105 5 301 2 363 3 302 5 30 1 153 1 184 1 154 2 130 1 188 2 259 4 7 1 283 4 285 3 287 1 373 1 343 1 308 1 135 1 237 1 271 1 136 1 238 1 313 1 78 1 16 1 315 1 243 1 122 1 357 1 321 2 322 1 44 1 80 1 174 1 222 3 100 1 323 1 224 2 324 1 
126 2 147 1 105 5 301 2 363 3 302 5 30 1 153 1 184 1 154 2 130 1 188 2 259 4 7 1 283 4 285 3 287 1 373 1 343 1 308 1 135 1 237 1 271 1 136 1 238 1 313 1 78 1 16 1 315 1 243 1 122 1 357 1 321 2 322 1 44 1 80 1 174 1 222 3 100 1 323 1 224 2 324 1 
331 2 188 2 7 1 283 4 285 2 287 1 343 1 55 2 346 1 135 1 237 1 238 1 136 1 16 1 243 1 100 1 361 1 147 1 105 4 301 2 363 2 302 4 30 1 259 4 373 1 308 1 268 2 271 1 313 1 78 1 315 1 122 1 80 1 322 1 44 1 321 2 174 1 222 2 323 1 
177 6 296 3 23 1 275 1 129 2 279 2 335 1 52 1 370 1 113 1 70 2 372 1 54 1 208 1 11 1 169 1 350 1 62 1 351 1 14 3 138 1 93 1 94 1 96 1 125 1 145 2 
177 14 296 6 178 2 127 1 275 11 129 1 333 1 279 4 366 1 335 2 69 3 160 1 70 1 113 2 192 1 372 2 54 2 209 1 11 2 169 11 350 1 14 8 351 4 199 1 93 1 293 3 173 2 17 1 96 2 18 1 79 1 381 1 145 2 
177 2 296 1 127 1 25 1 362 1 182 1 30 1 279 2 333 1 334 1 335 1 112 1 260 1 371 1 340 1 70 1 113 1 192 1 372 1 194 1 118 1 349 1 11 1 168 1 171 1 377 1 351 1 14 1 93 1 40 1 242 1 96 1 201 1 64 1 203 1 174 2 323 2 250 1 
177 20 178 2 127 1 275 7 129 4 333 1 279 6 2 1 334 2 335 3 52 1 282 1 340 3 192 1 231 2 54 3 194 2 11 3 349 1 59 2 350 3 62 1 351 7 14 10 199 2 138 1 93 3 96 3 203 2 250 1 145 8 360 2 296 10 23 1 25 1 362 2 29 1 30 1 366 4 67 2 112 2 260 3 371 2 70 2 113 3 372 3 164 2 208 1 118 1 168 2 169 7 171 2 377 3 40 1 215 1 173 2 174 3 125 1 323 3 
177 2 296 1 127 1 25 1 362 1 30 1 255 1 279 4 333 1 335 2 260 3 370 1 340 3 113 2 372 2 195 1 267 1 349 1 11 2 348 1 168 1 38 1 171 1 377 3 14 1 93 2 40 1 77 1 96 2 174 1 203 1 323 1 249 1 250 1 
177 3 178 1 296 2 25 1 275 1 30 1 129 1 279 2 335 1 205 1 113 1 192 1 372 1 54 1 90 1 11 1 169 1 197 1 350 1 351 1 14 1 199 1 93 1 40 1 173 1 96 1 174 1 323 1 145 1 
177 2 178 1 11 1 275 1 169 1 351 1 14 2 93 1 279 2 366 1 335 1 96 1 370 1 113 1 202 1 372 1 54 1 145 1 
177 2 296 2 11 1 275 1 169 1 350 1 129 1 351 1 199 1 93 1 279 2 335 1 96 1 370 1 113 1 372 1 145 1 295 1 
177 4 178 1 296 2 275 2 129 1 279 2 366 1 335 1 370 1 113 1 54 1 372 1 11 1 169 2 350 1 14 2 351 2 199 1 93 1 173 1 96 1 145 2 
177 2 178 1 11 1 275 1 169 1 351 1 14 2 93 1 279 2 366 1 77 1 335 1 96 1 113 1 202 1 372 1 54 1 145 1 
177 2 296 2 11 1 275 1 169 1 350 1 129 1 351 1 199 1 93 1 279 2 77 1 335 1 96 1 113 1 372 1 145 1 295 1 
177 4 178 1 296 2 275 2 129 1 279 2 366 1 335 1 113 1 54 1 372 1 11 1 169 2 350 1 14 2 351 2 199 1 93 1 77 1 173 1 96 1 145 2 
177 4 178 1 296 2 275 2 129 1 279 2 366 1 335 1 113 1 54 1 372 1 11 1 169 2 350 1 14 2 351 2 199 1 93 1 173 1 96 1 145 2 
177 2 296 1 127 1 362 1 333 1 279 2 334 1 335 1 112 1 260 1 371 1 340 1 70 1 113 1 372 1 194 1 11 1 59 1 168 1 171 1 14 1 377 1 93 1 96 1 203 1 174 1 323 1 250 1 
177 2 296 1 127 1 362 1 333 1 279 2 335 1 112 1 260 1 371 1 340 1 70 1 113 1 372 1 9 1 10 1 11 1 168 1 171 1 14 1 377 1 93 1 140 1 96 1 203 1 174 1 323 1 250 1 
177 4 178 1 296 2 275 2 129 1 279 2 366 1 335 1 113 1 192 1 54 1 372 1 11 1 169 2 350 1 14 2 351 2 199 1 93 1 173 1 96 1 145 2 
177 4 296 2 178 1 362 1 275 2 129 1 255 1 279 2 366 1 334 1 335 1 67 1 112 1 260 1 371 1 340 1 113 1 54 1 372 1 194 1 11 1 59 1 168 1 169 2 350 1 171 1 199 1 351 2 14 2 377 1 93 1 173 1 96 1 203 1 174 1 323 1 145 2 
177 3 296 1 178 1 25 1 275 1 30 1 279 2 366 1 335 1 205 1 113 1 192 1 372 1 54 1 90 1 11 1 196 1 169 1 350 1 199 1 14 2 351 1 93 1 40 1 173 1 96 1 174 1 323 1 145 1 
177 19 179 1 296 10 178 3 180 2 47 1 181 2 83 1 152 1 129 3 279 4 366 3 110 1 335 2 69 1 113 2 372 2 54 3 134 1 310 1 11 2 350 3 14 9 199 3 312 1 293 2 173 3 79 1 381 1 145 6 
177 26 296 12 179 2 178 3 180 4 47 1 181 1 364 1 152 1 129 2 50 2 279 6 366 2 335 3 339 1 53 1 69 2 113 3 372 3 54 3 134 1 207 1 116 1 310 2 11 3 350 2 60 1 14 14 199 2 312 1 293 2 173 3 381 2 145 4 
177 41 178 4 179 2 180 4 47 1 181 1 83 1 129 4 50 1 279 6 335 3 52 1 339 1 53 1 54 5 134 1 11 3 350 5 60 1 62 1 199 4 14 20 138 1 293 4 145 8 296 21 23 1 364 1 152 1 366 4 69 3 113 3 372 3 116 1 207 1 208 1 310 1 312 1 173 4 79 1 125 1 45 1 381 3 
177 38 179 2 296 18 178 4 180 4 23 1 47 1 181 1 83 1 364 1 152 1 129 4 50 2 279 8 366 3 335 4 52 1 339 1 53 1 69 3 113 4 372 4 54 5 134 1 207 1 116 1 208 1 310 1 11 4 60 1 350 4 62 1 14 20 199 3 138 1 312 1 293 4 173 4 79 1 45 1 125 1 381 3 145 7 
177 52 179 1 296 25 178 7 180 4 23 1 47 1 181 1 364 1 152 1 129 7 50 1 279 4 366 7 335 2 52 1 339 1 53 1 69 4 113 2 372 2 54 8 134 1 207 1 116 1 208 1 310 1 11 2 60 1 350 8 62 1 14 27 199 7 138 1 312 1 293 4 173 7 17 2 79 2 125 1 381 2 145 14 
56 1 374 1 33 1 123 1 143 1 307 1 223 1 165 1 144 1 342 1 
162 1 304 1 
56 1 86 1 374 1 123 1 124 1 143 1 175 1 223 1 165 1 
56 1 24 2 374 1 170 1 303 1 305 1 243 1 158 1 259 1 123 1 143 1 307 1 193 1 283 1 223 1 165 1 144 1 342 1 
56 1 24 2 374 1 170 1 303 1 305 1 243 1 158 1 259 1 123 1 143 1 307 1 193 1 283 1 223 1 165 1 144 1 342 1 
56 1 24 2 374 1 170 1 303 1 305 1 243 1 158 1 259 1 123 1 143 1 307 1 193 1 283 1 223 1 165 1 144 1 342 1 
157 1 354 1 12 1 
157 1 354 1 12 1 
294 1 73 1 
157 1 294 1 73 1 
228 1 39 1 
326 1 24 1 148 1 25 2 228 1 276 1 303 1 30 2 304 1 369 1 259 1 70 1 162 1 283 1 165 1 56 1 374 1 170 1 137 1 172 1 39 1 40 2 123 1 143 1 174 2 323 2 223 1 
354 1 12 1 
157 1 294 1 73 1 
177 2 296 1 226 1 127 1 362 1 30 2 279 2 333 1 335 1 185 1 260 2 340 2 113 1 192 1 133 1 372 1 195 1 57 1 11 1 168 1 290 1 171 1 377 2 14 1 93 1 96 1 218 1 203 1 174 2 323 2 249 2 
265 2 327 1 75 1 330 1 269 1 171 1 377 2 255 1 92 1 2 1 260 2 190 1 318 1 340 2 114 1 20 1 203 1 97 1 221 1 
265 2 327 1 347 1 75 1 330 1 269 1 171 1 377 1 2 1 260 1 190 1 318 1 340 1 20 1 97 1 221 1 203 1 
267 1 348 1 362 1 82 1 168 1 254 1 171 1 377 1 260 1 190 1 340 1 114 1 203 1 250 1 
265 2 327 1 75 1 330 1 269 1 171 1 377 1 92 1 2 1 260 1 190 1 318 1 340 1 114 1 20 1 203 1 97 1 221 1 
244 1 
94 1 315 1 316 1 243 1 271 1 163 1 373 1 
126 1 105 1 153 1 154 1 188 1 259 1 283 1 373 1 343 1 55 1 308 1 271 1 16 1 315 1 243 2 100 1 224 1 
178 2 277 2 188 3 4 1 87 6 340 3 231 2 283 5 54 2 343 4 55 12 350 2 239 3 199 2 16 4 95 2 243 8 203 4 246 1 100 4 250 1 102 2 105 5 147 2 362 3 300 2 255 1 365 1 156 1 112 3 260 3 259 5 159 1 261 2 161 1 163 1 263 6 373 9 210 2 211 2 308 4 309 2 168 10 212 2 271 2 171 3 377 3 314 2 378 2 173 2 315 8 316 1 320 1 224 6 
178 2 105 1 364 1 230 1 188 1 87 5 259 1 339 1 53 1 69 1 283 1 263 5 54 2 116 1 373 8 211 2 55 6 343 2 308 2 212 1 60 1 350 2 271 2 199 2 293 1 16 2 173 2 315 5 95 1 243 5 320 1 220 1 100 2 224 3 381 1 
23 1 25 1 30 1 259 1 205 1 283 1 54 2 232 1 208 1 373 2 211 2 343 1 308 1 235 1 212 1 350 1 138 1 40 1 241 1 16 1 315 2 80 1 42 1 174 1 323 1 100 1 324 1 46 1 
343 1 308 1 271 1 16 1 315 1 316 1 243 1 163 1 100 1 373 1 
211 2 55 10 178 2 212 1 350 2 199 2 173 2 315 5 87 5 243 5 231 1 54 2 263 5 224 5 373 5 
105 1 188 1 243 1 259 1 271 1 283 1 
105 4 362 1 155 1 188 2 156 2 260 4 259 3 34 1 340 4 283 3 373 2 343 2 308 2 267 1 348 1 168 1 270 1 120 1 171 1 377 4 16 1 315 2 95 2 320 2 203 1 100 2 246 1 101 1 250 2 
177 1 296 1 127 1 25 2 362 1 30 2 279 2 367 1 334 1 335 1 112 1 260 1 205 2 340 1 371 1 70 1 113 1 372 1 194 1 11 1 235 1 59 1 168 1 171 1 377 1 93 1 40 2 96 1 174 3 203 1 323 3 250 1 
55 4 343 1 308 1 62 1 271 2 16 1 315 2 87 2 95 1 243 4 320 1 263 2 100 1 224 2 373 1 
374 1 123 1 214 1 
374 1 123 1 214 1 
374 1 123 1 253 1 144 1 39 1 
374 1 123 1 214 1 
374 1 123 1 311 1 
374 1 123 1 311 1 
374 1 123 1 311 1 
374 1 123 1 
143 1 223 1 
177 8 296 4 23 1 11 2 350 1 62 1 129 2 14 4 50 1 279 4 138 1 366 1 335 2 52 1 113 2 54 1 372 2 125 1 208 1 145 3 
177 6 296 3 23 1 350 1 62 1 129 2 14 3 138 1 94 1 52 1 125 1 54 1 208 1 145 2 
177 4 296 2 178 1 11 1 350 1 129 1 199 1 14 2 279 2 366 1 335 1 173 1 219 1 113 1 372 1 54 1 145 2 
177 7 296 4 178 1 350 1 129 1 199 1 14 3 366 1 293 2 173 1 69 1 79 1 54 1 381 1 145 2 
177 23 178 2 296 12 297 1 23 1 129 5 50 2 279 4 366 4 335 2 52 1 69 2 160 1 113 2 54 3 372 2 208 2 11 2 350 3 62 1 14 11 199 2 138 2 293 2 173 2 17 1 79 1 125 1 145 9 
177 1 296 1 293 1 
177 1 69 1 14 1 
177 6 296 3 178 1 11 1 350 1 129 2 14 3 199 1 279 2 366 1 335 1 173 1 219 1 113 1 231 1 372 1 54 1 145 3 
177 12 296 6 178 2 47 1 364 1 129 1 279 2 366 1 335 1 339 1 69 1 53 1 113 1 372 1 54 2 116 1 11 1 60 1 350 2 14 6 199 2 293 1 173 2 381 1 145 2 
177 6 296 3 23 1 350 1 129 1 14 3 138 1 366 1 54 1 208 1 145 2 
177 3 296 2 297 1 11 1 129 1 14 1 50 1 138 1 279 2 366 1 335 1 52 1 113 1 372 1 125 1 208 1 145 2 
177 10 296 5 47 1 23 1 11 1 350 2 129 3 14 5 279 2 138 2 366 2 335 1 113 1 42 1 372 1 54 2 208 2 145 5 
177 2 178 1 47 1 11 1 14 2 279 2 366 1 335 1 113 1 372 1 54 1 145 1 
177 4 296 2 178 1 47 1 11 1 350 1 129 1 199 1 14 2 279 2 366 1 335 1 173 1 113 1 372 1 54 1 145 2 
177 3 296 2 297 1 47 1 11 3 83 1 129 1 50 1 14 1 279 6 138 1 366 1 335 3 113 3 372 3 208 1 145 2 
177 34 296 18 178 3 297 1 23 2 47 1 83 1 129 7 50 2 279 10 366 5 257 1 335 5 51 1 52 1 69 3 113 5 372 5 54 5 208 3 11 5 350 5 62 1 14 16 199 3 138 3 293 4 173 3 380 1 219 1 79 1 125 1 381 1 145 12 
177 8 296 4 47 1 23 1 129 2 279 2 335 1 52 1 339 1 69 1 113 1 54 1 372 1 208 1 11 1 350 1 62 1 14 4 138 1 293 1 125 1 381 1 145 2 
177 11 296 5 178 1 23 1 47 1 129 2 279 4 366 1 335 2 52 1 339 1 69 1 113 2 372 2 54 2 208 1 11 2 350 1 62 1 14 6 138 1 293 2 173 1 219 1 79 1 125 1 381 1 145 3 
177 19 296 10 178 2 23 1 47 1 364 1 129 3 50 1 279 6 366 1 335 3 52 1 339 1 69 1 53 1 113 3 372 3 54 3 116 1 208 1 11 3 60 1 350 3 62 1 14 9 199 2 138 1 293 1 173 2 219 1 125 1 381 1 145 4 
177 17 296 7 178 2 23 1 47 1 364 1 129 3 50 1 279 6 366 2 335 3 52 1 339 1 69 1 53 1 113 3 372 3 54 3 116 1 208 1 11 3 60 1 350 2 62 1 14 10 199 1 138 1 293 1 173 2 219 1 125 1 381 1 145 5 
177 8 296 4 47 1 23 1 129 2 279 2 335 1 52 1 339 1 69 1 113 1 54 1 372 1 208 1 11 1 350 1 62 1 14 4 138 1 293 1 125 1 381 1 145 2 
177 12 296 6 178 2 47 1 364 1 129 1 279 2 366 1 335 1 339 1 69 1 53 1 113 1 372 1 54 2 116 1 11 1 60 1 350 2 14 6 199 2 293 1 173 2 381 1 145 2 
177 18 296 8 178 2 23 1 47 1 364 1 129 3 50 2 279 8 366 2 335 4 52 1 339 1 53 1 69 1 113 4 372 4 54 3 116 1 208 1 11 4 60 1 350 2 62 1 14 10 199 1 138 1 293 1 173 2 219 1 125 1 381 1 145 5 
177 16 296 7 178 3 47 1 83 1 364 1 129 3 50 2 279 8 366 3 335 4 339 1 53 1 69 1 113 4 372 4 54 3 116 1 11 4 60 1 350 2 14 9 199 2 293 1 173 3 381 1 145 6 
177 7 296 4 23 1 350 1 129 3 14 3 138 3 366 3 52 2 125 1 54 1 208 3 145 6 
177 18 296 8 178 2 23 1 47 1 83 1 364 1 129 3 50 2 279 8 366 1 335 4 52 1 339 1 53 1 69 1 113 4 372 4 54 3 116 1 208 1 11 4 60 1 350 2 62 1 14 10 199 1 138 1 293 1 173 2 125 1 381 1 145 4 
273 1 70 1 322 1 43 1 174 1 30 1 323 1 
106 1 28 1 30 1 273 1 41 1 70 1 35 1 43 1 322 1 115 1 174 1 323 1 
94 1 267 1 348 1 362 1 260 1 168 1 340 1 203 1 171 1 377 1 250 1 
349 1 25 1 362 1 168 1 30 1 171 1 377 1 40 1 112 1 260 1 371 1 340 1 70 1 203 1 174 2 323 2 194 1 250 1 
25 2 362 2 30 2 156 1 112 2 260 1 340 1 371 1 70 1 194 1 287 1 210 1 349 1 168 3 238 1 171 1 377 1 40 1 80 1 174 2 203 1 323 2 102 1 
25 2 362 2 30 2 156 1 112 2 260 2 340 2 371 1 70 1 287 1 210 1 9 1 234 1 349 1 168 3 238 1 171 1 377 2 40 1 80 1 174 2 203 1 323 2 102 1 
147 1 105 1 234 1 362 1 236 1 168 4 271 1 239 1 171 1 377 3 112 1 156 1 243 1 259 2 260 3 261 1 340 3 141 1 203 1 283 2 250 1 102 1 210 1 
309 1 147 1 105 1 234 1 362 1 168 4 271 1 239 1 171 1 377 3 112 1 156 1 243 1 259 2 260 3 261 1 340 3 203 1 283 2 250 1 102 1 210 1 
260 1 340 1 203 1 171 1 377 1 15 1 
344 1 227 1 81 1 362 1 168 1 38 1 171 1 255 1 377 2 4 1 112 1 260 2 340 2 203 2 250 1 
177 6 275 1 129 2 279 4 334 1 185 1 335 2 52 1 340 1 192 1 54 1 194 1 11 2 349 1 59 1 350 1 62 1 351 1 14 3 93 2 138 1 96 2 203 1 145 2 296 3 23 1 25 1 362 1 30 1 255 1 67 1 112 1 260 1 371 1 113 2 70 2 164 1 372 2 208 1 168 1 169 1 171 1 377 1 40 1 174 2 125 1 323 2 
105 2 147 1 300 1 188 1 260 1 259 3 261 1 340 1 163 1 283 3 373 1 343 2 308 2 309 1 168 2 271 1 137 1 239 1 377 1 314 1 378 1 16 2 315 1 316 1 243 1 100 2 246 1 250 1 
362 1 168 2 171 1 255 1 15 1 377 2 4 1 112 1 260 2 261 1 340 2 161 1 203 2 
267 1 234 1 348 1 362 1 168 1 108 1 171 1 377 4 255 1 260 4 340 4 203 1 250 1 
344 1 227 1 362 1 168 1 76 1 29 1 171 1 377 2 156 1 112 1 260 2 340 2 203 2 247 1 
265 1 260 1 340 1 330 1 20 1 203 1 221 1 171 1 377 1 250 1 
57 1 362 1 260 2 168 1 218 1 340 2 203 1 171 1 377 2 255 1 2 1 
267 1 348 1 362 2 168 3 108 1 48 1 171 2 377 5 255 1 187 1 156 1 260 4 218 1 340 5 203 2 250 1 
267 1 348 1 362 2 168 3 108 1 171 2 377 5 255 1 187 1 156 1 189 1 260 4 218 1 340 5 203 2 250 1 
349 1 25 1 362 1 168 1 30 1 171 1 377 1 40 1 112 1 260 1 371 1 340 1 70 1 203 1 174 2 323 2 250 1 9 1 
344 1 227 1 81 1 362 1 168 1 171 1 377 1 156 1 4 1 112 1 260 1 340 1 203 2 
167 1 281 1 70 1 61 1 183 1 
147 1 167 2 61 2 376 1 237 1 271 1 238 1 292 1 137 1 183 1 216 1 281 2 243 1 259 2 70 1 80 1 283 2 233 1 287 1 
226 1 281 1 290 1 174 1 133 1 61 1 30 1 323 1 183 1 
216 1 233 1 183 1 
94 1 356 1 229 1 37 1 
66 1 338 1 356 1 1 1 229 1 359 1 37 1 
1 1 13 1 332 1 
27 1 329 1 1 3 229 1 66 1 338 1 356 1 358 1 264 2 341 1 359 3 37 1 
353 1 3 1 66 1 338 1 356 1 1 2 229 1 359 2 37 1 
265 1 327 1 329 1 204 1 1 1 151 1 330 1 66 1 338 1 359 1 37 1 
66 1 338 1 329 1 1 1 229 1 359 1 37 1 
66 1 338 1 356 1 329 1 1 1 229 2 359 1 
329 1 1 2 229 1 66 2 338 2 317 1 284 1 21 1 359 2 37 1 
26 1 149 1 329 1 1 3 151 1 229 1 66 1 3 2 68 1 338 1 356 1 359 3 37 2 
265 2 327 1 75 1 329 1 1 2 330 1 229 1 240 1 66 1 3 1 338 1 356 1 20 1 359 2 37 1 
26 1 328 1 329 1 1 4 151 1 229 1 353 1 66 2 3 2 338 2 356 1 359 4 37 2 
66 1 338 1 356 1 329 1 1 1 229 1 359 1 37 1 
26 1 27 1 1 4 151 1 229 2 3 2 66 1 338 1 356 2 358 1 98 1 264 1 359 4 37 3 
266 1 3 1 66 1 338 1 356 1 329 1 1 2 245 1 229 1 117 1 359 2 37 1 
27 2 329 1 1 3 229 1 66 1 338 1 356 1 358 1 264 2 359 3 37 1 225 1 
274 1 142 1 31 2 37 2 
66 1 338 1 375 1 329 1 1 1 359 1 
3 1 66 1 338 1 356 1 149 1 329 1 1 2 229 1 359 2 37 1 
298 1 
66 1 338 1 356 1 329 1 1 1 229 1 359 1 37 1 
149 1 329 1 1 3 229 1 3 1 66 1 338 1 356 1 264 1 359 3 37 1 
26 1 98 1 151 1 37 1 
229 1 37 1 

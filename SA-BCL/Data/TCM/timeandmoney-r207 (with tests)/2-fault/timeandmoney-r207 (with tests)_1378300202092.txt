#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 374 264 341 84 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 1 142 1 317 9 150 4 151 1 2 1 366 1 367 2 290 1 368 2 248 2 126 5 321 2 106 2 63 1 301 1 299 1 10 2 231 1 350 2 277 1 253 9 378 1 140 1 44 3 141 1 94 1 358 6 
119 1 142 1 317 9 150 4 151 1 2 1 366 1 367 2 290 1 368 2 248 2 126 5 321 2 106 2 63 1 301 1 299 1 10 2 231 1 350 2 277 1 253 9 378 1 140 1 44 3 141 1 94 1 358 6 
119 1 142 1 317 10 150 5 151 1 2 1 366 1 367 2 290 1 368 2 248 2 126 6 321 2 106 2 63 1 301 1 299 1 10 2 231 1 350 2 277 1 253 10 378 1 140 1 44 4 141 1 94 1 358 7 
119 1 142 1 317 7 150 3 151 1 2 1 366 1 367 2 290 1 368 1 248 2 126 4 321 2 106 2 63 1 299 1 10 2 231 1 350 2 277 1 253 7 378 1 140 1 44 2 141 1 94 1 358 4 
106 1 317 4 63 1 301 1 299 1 10 1 231 1 150 2 151 1 350 1 367 1 253 4 368 2 126 3 44 1 321 1 94 1 358 3 
49 1 317 2 299 1 10 1 151 1 350 1 367 1 366 1 290 1 253 2 248 1 126 1 117 1 93 1 321 1 94 1 
317 3 299 1 150 1 151 1 350 2 367 2 253 3 248 1 126 2 44 1 141 1 94 1 358 1 
142 1 317 9 150 4 151 1 367 2 368 2 248 1 82 1 126 5 321 1 106 1 63 1 299 1 301 1 10 1 231 1 350 2 253 9 378 1 234 1 44 3 141 1 94 1 358 7 
142 1 317 9 150 4 151 1 367 2 368 2 248 1 82 1 126 5 321 1 106 1 63 1 299 1 301 1 10 1 231 1 350 2 253 9 378 1 234 1 44 3 141 1 94 1 358 7 
233 1 102 1 22 1 
267 2 102 1 322 1 
325 2 24 2 218 2 145 1 132 2 318 1 229 2 214 2 
236 1 16 1 120 1 282 1 172 1 218 2 145 1 77 1 285 1 146 1 241 1 318 1 176 1 24 3 365 2 291 2 246 1 342 1 180 2 345 1 325 2 371 1 6 1 8 1 62 1 132 3 213 2 303 1 229 2 230 1 214 2 89 1 91 2 254 1 278 1 216 1 71 1 
325 1 12 1 24 1 346 1 218 1 145 1 247 1 132 1 229 1 214 1 
269 1 132 1 229 1 88 1 22 1 274 1 349 1 24 1 39 1 247 1 102 1 86 1 249 1 280 1 
325 1 269 2 218 1 132 1 229 1 88 1 22 1 214 1 274 1 349 1 24 1 39 2 247 1 102 1 280 1 
194 1 269 1 39 1 121 1 319 1 
194 1 269 2 39 2 121 1 271 1 32 1 102 1 22 1 
194 1 269 1 39 1 
269 1 325 1 310 1 346 1 121 1 145 1 218 1 132 1 229 1 214 1 12 1 24 1 39 1 247 1 
102 1 
194 1 269 2 39 2 121 1 225 1 271 1 102 1 22 1 
269 5 359 1 194 2 157 1 210 2 121 2 271 1 300 1 228 2 22 1 39 5 332 2 14 1 356 1 70 1 102 1 255 1 47 1 156 1 
233 1 318 1 
325 1 218 1 132 2 226 1 318 2 229 2 214 1 24 2 344 1 
364 1 270 1 9 1 
345 1 6 1 120 1 8 1 18 1 172 1 62 1 132 1 318 1 24 1 91 1 365 1 291 1 246 1 342 1 71 1 
345 1 6 1 120 1 8 1 172 1 9 1 218 1 62 1 132 2 229 1 214 1 24 2 91 1 365 1 55 1 291 1 246 1 342 1 71 1 334 1 
325 1 24 3 55 1 218 3 132 3 318 1 229 3 214 3 
24 1 346 1 218 1 247 1 132 1 229 1 214 1 
325 1 24 1 218 1 247 1 132 1 226 1 229 1 344 1 214 1 
16 1 120 1 282 1 172 1 218 3 145 1 77 1 318 1 177 1 176 1 24 4 365 1 55 1 291 1 246 1 247 1 342 1 180 1 345 1 325 2 269 1 371 1 6 1 8 1 62 1 132 4 226 1 251 1 213 2 303 1 88 1 229 3 230 1 214 3 89 1 274 1 349 1 91 1 39 1 278 1 71 1 216 1 334 1 280 1 
24 2 55 1 218 1 132 2 318 1 86 1 45 1 229 2 214 1 
325 1 269 1 218 3 132 3 131 1 226 1 251 1 229 3 88 1 214 3 274 1 349 1 24 3 39 1 55 2 247 1 102 1 334 1 280 1 
325 1 364 1 24 2 55 1 9 1 218 2 132 2 226 1 229 2 214 2 
345 1 6 1 120 1 172 1 8 1 62 1 132 1 318 1 24 1 91 1 365 1 291 1 246 1 342 1 71 1 
345 1 120 1 172 1 8 1 62 1 132 1 318 1 162 1 24 1 91 1 365 1 291 1 342 1 71 1 309 1 
16 1 282 1 283 1 74 1 77 1 285 2 197 1 202 1 364 2 337 1 180 4 270 2 370 1 371 1 59 1 9 2 213 2 303 1 89 1 374 1 278 2 355 1 115 1 307 1 
274 1 24 1 218 1 247 1 132 1 42 1 229 1 214 1 
325 1 218 4 347 1 132 5 226 1 318 1 229 5 214 4 24 5 55 2 165 1 86 1 45 1 334 1 
24 2 346 1 218 2 247 1 42 1 132 2 229 2 214 2 
133 1 200 1 
133 1 200 1 
76 1 198 1 
76 1 198 1 
76 1 198 1 
312 1 133 1 200 1 
312 1 133 1 200 1 
133 1 200 1 11 1 
339 1 76 1 26 1 198 1 133 2 200 2 
312 1 133 1 200 1 
36 1 133 1 200 1 
36 1 133 1 200 1 
36 1 133 1 200 1 
105 1 269 2 224 2 66 1 286 2 133 2 78 3 134 1 80 1 200 2 373 1 39 2 124 2 376 2 223 2 26 1 215 1 102 1 27 1 
143 1 218 2 259 1 318 1 286 1 78 1 200 1 24 2 223 1 269 1 129 1 224 1 61 1 132 2 161 1 133 1 229 2 214 2 11 1 373 1 39 1 376 1 232 1 69 1 
106 1 321 1 10 1 
321 1 117 1 10 1 
273 1 106 2 258 1 117 1 369 1 10 3 
273 1 276 1 106 1 258 1 117 1 10 2 
273 2 106 1 258 1 117 1 10 2 
194 1 259 1 121 4 361 2 260 1 123 1 98 1 22 1 264 1 337 1 267 3 322 1 102 2 323 1 269 5 182 1 129 1 59 1 210 1 161 1 271 1 300 3 228 1 185 2 374 1 275 1 39 5 332 1 352 2 355 1 70 1 255 2 
194 6 121 7 260 1 52 1 319 5 123 2 262 1 22 1 264 3 337 3 320 1 267 9 322 3 102 5 29 1 269 9 182 2 59 3 210 2 161 4 271 1 300 8 228 2 185 6 374 3 39 9 377 1 164 5 332 2 306 1 352 6 355 3 70 1 47 1 255 6 
121 2 361 1 123 1 22 1 264 1 337 1 267 4 102 3 322 2 323 1 269 3 182 1 59 1 210 1 161 1 300 3 228 1 185 2 374 1 275 1 39 3 332 1 352 2 355 1 47 1 255 2 
361 2 121 3 123 1 22 1 262 1 264 2 337 2 267 7 102 4 322 3 323 1 269 4 182 1 59 2 210 1 161 2 300 5 228 1 185 4 374 2 39 4 275 1 377 1 332 1 306 1 352 4 355 2 47 1 255 4 
8 1 233 1 343 1 
170 1 8 1 
208 1 
8 1 62 1 
345 1 330 1 8 3 62 1 343 2 308 1 
345 1 8 1 62 1 
8 1 107 1 
370 3 285 4 175 1 21 1 202 2 54 1 163 1 136 2 244 1 337 1 331 1 278 3 353 1 355 1 116 1 357 1 180 7 
370 3 285 4 175 1 21 1 202 2 54 1 163 1 136 2 244 1 337 1 331 1 278 3 353 1 355 1 116 1 357 1 180 7 
370 3 298 1 285 4 175 1 21 1 202 2 54 1 163 1 136 2 244 1 337 1 331 1 278 3 353 1 355 1 116 1 357 1 180 7 
370 2 59 1 313 1 250 1 285 4 109 1 21 1 202 1 374 1 136 1 264 1 38 1 337 1 338 1 353 2 278 4 355 1 189 2 116 1 180 8 
0 1 370 4 16 2 371 2 282 2 315 1 77 2 285 5 175 1 21 1 213 4 54 1 202 3 163 1 136 2 337 1 331 1 278 4 353 1 355 1 116 1 357 1 180 9 72 1 
169 1 120 1 317 2 219 1 79 1 151 1 365 1 367 1 245 1 204 1 291 1 293 1 248 1 126 1 321 1 57 1 369 1 106 1 299 1 10 2 91 1 350 1 252 1 253 2 190 1 117 1 94 1 71 1 358 1 168 1 
169 1 120 1 317 3 219 1 242 1 79 1 151 1 365 1 367 1 245 1 204 1 291 1 293 1 248 1 126 1 321 1 369 1 57 1 106 1 110 1 10 2 91 1 350 1 253 3 333 1 190 1 117 1 94 1 71 1 358 2 
169 1 120 1 317 2 219 1 242 1 151 1 365 1 245 1 204 1 291 1 248 1 126 1 321 1 57 1 369 1 106 1 10 2 91 1 253 2 333 1 190 1 117 1 94 1 71 1 358 2 
169 2 120 1 8 1 172 1 62 1 317 1 20 1 110 1 289 1 304 1 350 1 91 1 365 1 367 1 204 2 291 1 221 1 253 1 248 2 71 1 4 1 57 2 30 1 
169 1 120 1 317 1 219 1 79 1 365 1 367 1 245 1 204 1 291 1 293 1 248 1 321 1 57 1 369 1 106 1 299 1 10 2 91 1 350 1 253 1 333 1 190 1 117 1 71 1 168 1 
5 1 
194 6 196 4 50 1 287 2 99 1 291 2 247 1 102 2 56 2 249 1 210 1 8 1 159 1 62 1 348 1 108 2 64 1 300 2 67 2 349 1 304 1 68 1 70 1 114 1 255 2 71 1 167 1 120 1 172 2 360 1 174 1 20 1 261 2 178 2 22 1 365 2 24 1 267 2 322 2 268 1 86 1 182 1 269 5 132 1 271 3 35 1 228 1 229 1 88 1 274 1 186 2 91 2 39 5 332 1 280 1 
194 2 196 2 99 1 24 1 247 1 86 1 249 1 56 1 269 3 159 1 225 1 132 1 271 1 35 1 88 1 229 1 274 1 349 1 39 3 68 1 167 1 280 1 
194 1 196 3 99 1 22 1 24 1 247 1 86 1 102 1 249 1 269 3 159 1 225 1 132 1 271 1 35 1 88 1 229 1 67 1 274 1 349 1 39 3 68 1 167 1 280 1 
194 2 196 3 287 1 99 1 22 1 24 1 247 1 86 1 102 1 249 1 56 1 269 3 159 1 225 1 132 1 271 1 35 1 88 1 229 1 67 1 274 1 349 1 39 3 68 1 167 1 280 1 
194 7 196 6 50 1 287 4 1 1 99 1 292 1 247 1 154 1 102 5 56 4 249 1 210 1 159 1 108 2 300 1 67 4 349 1 68 1 70 1 167 1 255 1 73 1 257 1 360 1 261 2 178 2 22 5 24 1 86 1 322 2 269 5 225 1 132 1 271 3 35 1 88 1 229 1 228 1 274 1 186 2 39 5 332 1 280 1 
194 4 196 4 50 1 287 2 99 1 247 1 102 2 249 1 56 2 210 1 159 1 108 2 348 1 300 1 67 2 349 1 68 1 70 1 167 1 255 1 360 1 261 2 178 2 22 1 24 1 267 2 86 1 322 2 269 4 132 1 271 2 35 1 88 1 229 1 228 1 274 1 186 2 39 4 332 1 280 1 
194 4 73 1 360 1 196 4 50 1 287 2 261 2 178 2 22 1 99 1 24 1 292 1 247 1 154 1 102 1 322 2 86 1 56 2 249 1 269 4 210 1 159 1 132 1 271 2 108 2 300 1 35 1 228 1 88 1 229 1 67 2 274 1 186 2 349 1 39 4 68 1 332 1 70 1 255 1 167 1 280 1 
194 4 73 1 360 1 196 4 50 1 287 2 261 2 178 2 22 1 99 1 24 1 292 1 247 1 154 1 102 1 322 2 86 1 56 2 249 1 269 4 210 1 159 1 132 1 271 2 108 2 300 1 35 1 228 1 88 1 229 1 67 2 274 1 186 2 349 1 39 4 68 1 332 1 70 1 255 1 167 1 280 1 
194 4 171 1 195 1 196 4 50 1 287 2 261 2 362 2 178 2 22 1 99 1 24 1 125 2 292 1 247 1 267 2 102 1 86 1 56 2 249 1 269 4 210 1 159 1 132 1 271 2 65 1 300 1 35 1 228 1 88 1 229 1 67 2 274 1 349 1 39 4 68 1 332 1 70 1 255 1 167 1 280 1 
194 5 73 1 360 1 257 1 196 5 50 1 261 2 287 3 178 2 22 1 99 1 24 1 292 1 247 1 154 1 102 1 322 2 86 1 249 1 56 3 269 4 210 1 159 1 132 1 271 2 108 2 300 1 35 1 228 1 88 1 229 1 67 3 274 1 186 2 349 1 39 4 68 1 332 1 70 1 255 1 167 1 280 1 
194 5 73 1 360 1 257 1 196 5 50 1 261 2 287 3 178 2 22 1 99 1 24 1 292 1 247 1 154 1 102 1 322 2 86 1 249 1 56 3 269 4 210 1 159 1 132 1 271 2 108 2 300 1 35 1 228 1 88 1 229 1 67 3 274 1 186 2 349 1 39 4 68 1 332 1 70 1 255 1 167 1 280 1 
194 4 195 1 196 4 50 1 287 2 99 1 247 1 102 1 249 1 56 2 210 1 159 1 348 1 300 1 67 2 349 1 68 1 70 1 167 1 255 1 261 2 178 2 362 2 22 1 24 1 125 2 267 2 86 1 269 4 132 1 271 2 35 1 88 1 229 1 228 1 274 1 39 4 332 1 280 1 
16 1 282 1 77 1 285 3 175 1 318 2 54 1 202 2 364 1 337 1 180 6 370 2 270 1 371 1 9 1 213 2 303 1 89 1 163 1 136 1 331 1 233 1 278 3 355 1 357 1 307 1 
236 1 16 2 313 3 282 2 77 2 285 8 318 1 97 1 202 1 364 4 264 2 337 1 338 1 180 14 370 2 270 11 371 2 296 1 59 1 87 1 9 11 109 1 213 4 303 1 230 1 89 2 374 2 37 1 41 1 278 6 189 3 355 2 116 1 
236 1 16 1 120 1 282 1 172 1 18 1 218 1 77 1 285 1 318 1 364 1 365 1 24 2 55 1 291 1 246 1 222 1 342 1 207 1 180 2 345 1 6 1 371 1 8 1 87 1 62 1 132 2 303 1 229 1 213 2 214 1 230 1 89 1 91 1 278 1 354 1 71 1 334 1 
236 1 282 3 285 10 54 1 202 4 55 1 337 3 291 3 246 2 205 2 342 2 345 2 6 2 59 2 8 2 9 7 62 2 213 6 303 3 214 1 163 1 355 3 116 4 357 1 216 2 71 2 16 3 120 2 172 1 218 1 173 2 77 3 175 1 318 2 363 1 263 2 364 7 365 3 24 3 264 2 28 1 180 20 31 1 270 7 370 8 371 3 87 1 132 3 229 1 230 1 89 3 374 2 136 1 91 3 187 2 331 1 278 10 333 1 334 1 
236 1 16 2 120 2 282 2 172 2 218 1 77 2 285 1 51 1 241 2 20 1 220 1 24 1 365 8 55 1 291 8 180 2 371 2 211 1 60 1 8 3 62 2 132 1 229 1 213 4 303 2 214 1 230 1 89 2 375 1 91 7 304 1 252 1 188 1 278 1 139 1 333 1 71 2 307 1 
16 1 282 1 218 1 77 1 285 1 202 1 364 1 24 1 264 1 337 1 180 3 325 1 370 1 270 1 371 1 59 1 9 1 87 1 132 1 226 1 213 2 303 1 229 1 214 1 89 1 374 1 90 1 278 2 355 1 
370 1 270 1 16 1 371 1 282 1 74 1 9 1 77 1 285 2 303 1 213 2 89 1 374 1 364 1 355 1 116 1 307 1 180 2 
370 1 270 1 16 1 371 1 59 1 282 1 283 1 9 1 77 1 303 1 213 2 202 1 89 1 364 1 337 1 278 2 307 1 180 2 
16 1 282 1 77 1 285 2 202 1 364 2 264 1 337 1 180 4 270 2 370 2 371 1 59 1 9 2 213 2 303 1 374 1 89 1 278 2 355 1 116 1 307 1 
370 1 270 1 16 1 371 1 60 1 282 1 74 1 9 1 77 1 285 2 303 1 213 2 89 1 374 1 364 1 355 1 116 1 180 2 
370 1 270 1 16 1 371 1 59 1 60 1 282 1 283 1 9 1 77 1 303 1 213 2 202 1 89 1 364 1 337 1 278 2 180 2 
16 1 282 1 77 1 285 2 202 1 364 2 264 1 337 1 180 4 270 2 370 2 371 1 59 1 60 1 9 2 213 2 303 1 374 1 89 1 278 2 355 1 116 1 
16 1 282 1 77 1 285 2 202 1 364 2 264 1 337 1 180 4 270 2 370 2 371 1 59 1 9 2 213 2 303 1 374 1 89 1 278 2 355 1 116 1 
236 1 16 1 120 1 282 1 172 1 77 1 285 1 318 1 365 1 24 1 291 1 246 1 342 1 180 2 345 1 6 1 371 1 8 1 62 1 132 1 303 1 213 2 230 1 89 1 91 1 278 1 71 1 216 1 
236 1 16 1 120 1 282 1 172 1 77 1 285 1 318 1 365 1 24 1 291 1 342 1 180 2 345 1 371 1 8 1 62 1 132 1 162 1 303 1 213 2 230 1 89 1 91 1 278 1 166 1 71 1 309 1 
16 1 282 1 77 1 285 2 202 1 364 2 264 1 337 1 180 4 270 2 370 2 371 1 59 1 87 1 9 2 213 2 303 1 374 1 89 1 278 2 355 1 116 1 
16 1 120 1 282 1 77 1 285 2 202 1 364 2 365 1 24 1 264 1 337 1 291 1 246 1 342 1 205 1 180 4 345 1 370 2 270 2 6 1 371 1 59 1 8 1 9 2 62 1 132 1 303 1 213 2 374 1 89 1 91 1 252 1 278 2 355 1 116 1 71 1 216 1 
16 1 282 1 218 1 77 1 285 2 364 1 24 1 264 1 337 1 180 3 325 1 370 1 270 1 371 1 59 1 87 1 9 1 132 1 226 1 213 2 303 1 229 1 214 1 89 1 374 1 278 1 235 1 355 1 116 1 
0 1 16 2 313 1 282 2 77 2 285 6 202 2 264 2 337 2 265 1 338 1 341 1 84 1 206 1 180 13 295 1 370 4 371 2 59 2 212 1 109 1 329 1 213 4 374 2 278 7 189 2 355 2 116 2 335 1 
281 1 0 1 16 3 313 2 282 3 95 1 315 2 77 3 285 14 147 1 199 1 202 2 264 3 337 2 265 4 341 1 127 1 206 2 180 26 104 1 370 4 295 1 371 3 59 2 212 2 109 2 213 6 374 3 138 1 278 12 189 2 355 3 116 2 335 1 
0 1 281 1 282 3 95 1 285 20 147 1 199 1 202 4 54 1 337 5 338 1 341 1 206 1 104 1 295 1 59 4 212 2 109 3 213 6 163 1 355 5 116 4 357 1 16 3 313 3 314 1 315 1 77 3 175 1 264 4 265 4 127 1 180 41 370 8 371 3 329 1 374 4 136 1 331 1 278 21 138 1 189 4 335 1 
281 1 0 1 16 4 313 3 314 1 95 1 282 4 315 2 77 4 285 20 175 1 147 1 199 1 54 1 202 4 264 4 337 4 265 4 338 1 341 1 127 1 206 1 180 38 104 1 295 1 370 7 371 4 59 3 212 2 109 3 329 1 213 8 374 4 163 1 136 1 331 1 138 1 278 18 189 4 355 5 116 3 357 1 335 1 
281 1 0 1 16 2 313 4 95 1 282 2 315 1 77 2 285 27 175 1 147 1 199 1 54 1 202 7 264 7 337 8 265 4 338 2 341 1 127 1 206 1 180 52 104 1 295 1 370 14 371 2 59 7 212 1 109 2 213 4 374 7 163 1 136 1 331 1 41 2 138 1 278 25 189 4 355 8 116 7 357 1 335 1 
7 1 224 1 376 1 223 1 26 1 286 1 133 1 134 1 80 1 200 1 
69 1 11 1 
237 1 224 1 376 1 25 1 19 1 223 1 286 1 133 1 200 1 
269 1 224 1 66 1 286 1 133 1 78 2 134 1 80 1 200 1 373 1 39 1 124 1 376 1 223 1 26 1 215 1 102 1 27 1 
269 1 224 1 66 1 286 1 133 1 78 2 134 1 80 1 200 1 373 1 39 1 124 1 376 1 223 1 26 1 215 1 102 1 27 1 
269 1 224 1 66 1 286 1 133 1 78 2 134 1 80 1 200 1 373 1 39 1 124 1 376 1 223 1 26 1 215 1 102 1 27 1 
312 1 339 1 183 1 
312 1 339 1 183 1 
36 1 372 1 
36 1 339 1 372 1 
143 1 61 1 
143 1 121 1 259 1 218 2 318 1 286 1 78 1 200 1 24 2 124 1 223 1 269 1 129 1 224 1 61 1 132 2 161 1 66 1 133 1 229 2 11 1 214 2 39 1 376 1 232 1 305 1 69 1 
312 1 183 1 
36 1 339 1 372 1 
236 1 217 1 16 1 120 1 282 1 48 1 77 1 284 1 285 1 241 2 220 1 365 2 24 2 291 2 266 1 180 2 371 1 8 1 87 1 62 1 132 2 303 1 111 1 229 2 213 2 230 1 89 1 91 2 278 1 139 1 71 1 
120 1 106 1 288 1 10 2 148 1 79 1 91 2 365 2 245 1 291 2 204 1 252 1 43 1 321 1 117 1 333 1 190 1 71 1 369 1 
120 1 106 1 10 2 79 1 91 1 365 1 245 1 291 1 40 1 204 1 43 1 321 1 117 1 333 1 190 1 71 1 369 1 
120 1 8 1 172 1 62 1 20 1 148 1 91 1 365 1 304 1 291 1 204 1 221 1 113 1 71 1 
120 1 106 1 288 1 10 2 148 1 79 1 91 1 365 1 245 1 291 1 204 1 43 1 321 1 117 1 333 1 190 1 71 1 369 1 
239 1 
157 1 233 1 356 1 300 1 102 1 255 1 22 1 
194 1 360 1 22 1 267 1 322 1 102 2 269 1 210 1 108 1 271 1 300 1 228 1 186 1 39 1 332 1 70 1 255 1 
194 5 336 1 243 2 149 1 291 3 100 2 337 2 340 2 343 2 102 8 58 2 345 3 294 2 209 2 59 2 157 1 210 4 8 10 160 1 62 3 107 2 300 9 349 2 351 1 252 1 352 6 356 1 70 4 355 2 71 3 255 8 311 1 170 3 120 4 172 1 22 2 263 2 365 3 264 2 267 12 268 1 322 6 182 2 269 5 271 3 228 4 184 2 185 6 330 1 374 2 91 3 39 5 332 4 191 2 
194 1 313 1 95 1 147 1 199 1 243 1 22 2 264 2 337 2 179 1 267 6 268 1 322 3 102 5 104 1 182 1 269 1 59 2 158 1 210 2 271 1 300 8 109 1 228 2 185 5 374 2 39 1 332 2 138 1 352 5 189 1 70 2 355 2 191 2 255 5 
310 1 145 1 218 1 243 1 54 1 24 1 337 1 247 1 154 1 269 1 325 1 210 1 346 1 132 1 300 2 228 1 229 1 112 1 214 1 163 1 12 1 39 1 332 1 70 1 355 2 357 1 191 2 255 2 
210 1 157 1 300 1 228 1 22 1 332 1 356 1 70 1 102 1 255 1 
59 2 300 5 243 1 185 5 374 2 263 1 264 2 337 2 352 5 355 2 267 10 322 5 102 5 191 2 255 5 
269 1 194 1 39 1 271 1 102 1 22 1 
194 4 120 1 172 2 238 1 336 1 20 1 149 2 365 4 291 4 268 2 128 1 182 2 269 3 210 2 8 1 62 1 64 1 271 2 300 2 228 2 91 4 304 1 39 3 332 2 114 1 70 1 47 1 71 1 255 2 
16 1 120 1 282 1 172 1 218 2 145 1 77 1 318 1 176 1 365 1 24 3 291 1 246 1 342 1 180 1 325 2 345 1 371 1 6 1 8 1 62 1 132 3 213 2 229 2 303 1 230 1 214 2 89 1 91 1 278 1 216 1 71 1 
182 1 210 1 300 1 228 1 185 2 22 2 136 1 332 1 352 2 70 1 267 4 322 2 102 4 268 1 255 2 
224 1 286 1 302 1 
224 1 286 1 302 1 
61 1 224 1 130 1 286 1 134 1 
224 1 286 1 302 1 
224 1 15 1 286 1 
224 1 15 1 286 1 
224 1 15 1 286 1 
224 1 286 1 
133 1 200 1 
370 3 16 2 371 2 282 2 315 1 77 2 285 4 175 1 213 4 202 2 54 1 163 1 136 1 337 1 331 1 278 4 355 1 116 1 357 1 180 8 
370 2 285 3 175 1 54 1 202 2 163 1 136 1 337 1 331 1 278 3 233 1 355 1 357 1 180 6 
370 2 16 1 371 1 59 1 282 1 328 1 77 1 285 2 213 2 202 1 374 1 264 1 337 1 278 2 355 1 116 1 180 4 
370 2 59 1 313 1 285 3 109 1 202 1 374 1 264 1 337 1 338 1 278 4 189 2 355 1 116 1 180 7 
16 2 313 2 282 2 315 2 77 2 285 11 175 1 97 1 54 2 202 5 264 2 337 3 338 1 180 23 370 9 371 2 59 2 297 1 213 4 374 2 163 2 136 1 331 1 41 1 278 12 355 3 189 2 116 4 357 1 
278 1 189 1 180 1 
313 1 285 1 180 1 
16 1 370 3 371 1 59 1 282 1 77 1 328 1 285 3 213 2 374 1 202 2 263 1 264 1 337 1 278 3 355 1 116 1 180 6 
0 1 16 1 313 1 282 1 95 1 77 1 285 6 147 1 199 1 202 1 264 2 337 2 180 12 104 1 370 2 371 1 59 2 109 1 213 2 374 2 278 6 138 1 189 1 355 2 116 1 
370 2 285 3 54 1 202 1 163 1 337 1 278 3 355 1 116 1 357 1 180 6 
370 2 16 1 371 1 282 1 297 1 315 1 77 1 285 1 175 1 213 2 202 1 54 1 163 1 331 1 278 2 116 1 180 3 
0 1 16 1 370 5 371 1 282 1 77 1 285 5 213 2 112 1 54 2 202 3 163 2 337 2 278 5 355 2 116 2 357 1 180 10 
0 1 16 1 370 1 371 1 282 1 77 1 285 2 213 2 374 1 355 1 116 1 180 2 
0 1 370 2 16 1 371 1 59 1 282 1 77 1 285 2 213 2 202 1 374 1 264 1 337 1 278 2 355 1 116 1 180 4 
0 1 16 3 370 2 371 3 282 3 315 1 297 1 77 3 285 1 329 1 213 6 54 1 202 1 163 1 278 2 116 1 180 3 
0 1 16 3 313 1 282 3 77 3 285 6 175 1 202 2 54 1 337 2 180 12 370 4 371 3 250 1 328 1 109 1 329 1 213 6 112 1 163 1 331 1 278 6 355 2 189 1 116 2 357 1 
0 1 16 1 313 1 282 1 77 1 285 4 175 1 54 1 202 2 337 1 180 8 104 1 370 2 371 1 109 1 213 2 163 1 136 1 331 1 278 4 355 1 189 1 357 1 
0 1 16 2 313 1 282 2 77 2 285 6 175 1 202 2 54 1 264 1 337 1 338 1 180 11 104 1 370 3 371 2 328 1 109 1 213 4 374 1 163 1 136 1 331 1 278 5 189 2 355 2 116 1 357 1 
0 1 16 3 313 1 282 3 95 1 315 1 77 3 285 9 175 1 147 1 199 1 54 1 202 3 264 2 337 3 180 19 104 1 370 4 371 3 59 2 328 1 109 1 213 6 374 2 163 1 136 1 331 1 138 1 278 10 189 1 355 3 116 1 357 1 
0 1 16 3 313 1 282 3 95 1 315 1 77 3 285 10 175 1 147 1 199 1 54 1 202 3 264 2 337 2 180 17 104 1 370 5 371 3 59 1 328 1 109 1 213 6 374 2 163 1 136 1 331 1 278 7 138 1 189 1 355 3 116 2 357 1 
0 1 16 1 313 1 282 1 77 1 285 4 175 1 54 1 202 2 337 1 180 8 104 1 370 2 371 1 109 1 213 2 163 1 136 1 331 1 278 4 355 1 189 1 357 1 
0 1 16 1 313 1 282 1 95 1 77 1 285 6 147 1 199 1 202 1 264 2 337 2 180 12 104 1 370 2 371 1 59 2 109 1 213 2 374 2 278 6 138 1 189 1 355 2 116 1 
0 1 16 4 313 1 282 4 95 1 315 2 77 4 285 10 175 1 147 1 199 1 54 1 202 3 264 2 337 2 180 18 104 1 370 5 371 4 59 1 328 1 109 1 213 8 374 2 163 1 136 1 331 1 138 1 278 8 189 1 355 3 116 2 357 1 
0 1 16 4 313 1 282 4 95 1 315 2 77 4 285 9 147 1 199 1 202 3 264 3 337 2 180 16 104 1 370 6 371 4 59 2 109 1 329 1 213 8 374 3 138 1 278 7 189 1 355 3 116 3 
370 6 285 3 175 1 54 3 202 3 163 3 337 1 331 2 278 4 355 1 116 3 357 1 180 7 
0 1 16 4 313 1 282 4 95 1 315 2 77 4 285 10 175 1 147 1 199 1 54 1 202 3 264 2 337 2 180 18 104 1 370 4 371 4 59 1 109 1 329 1 213 8 374 2 163 1 136 1 331 1 138 1 278 8 189 1 355 3 116 1 357 1 
24 1 132 1 33 1 318 1 86 1 45 1 229 1 
75 1 132 1 227 1 33 1 318 1 34 1 229 1 53 1 24 1 153 1 45 1 86 1 
304 1 365 1 91 1 120 1 291 1 8 1 172 1 62 1 233 1 20 1 71 1 
345 1 6 1 120 1 8 1 172 1 218 1 62 1 132 2 318 1 229 1 214 1 24 2 91 1 365 1 55 1 291 1 342 1 71 1 
345 2 6 1 120 1 8 3 218 1 107 1 62 2 132 2 318 1 229 2 214 2 149 1 274 1 24 2 91 1 365 1 55 1 100 1 291 1 247 1 342 1 71 1 280 1 
120 1 218 1 318 1 149 1 365 2 24 2 55 1 291 2 100 1 247 1 342 1 181 1 345 2 8 3 62 2 107 1 132 2 229 2 214 2 274 1 91 2 71 1 309 1 280 1 
194 1 170 1 144 1 120 1 172 1 149 1 22 1 365 3 3 1 291 3 100 1 343 1 102 1 181 1 269 2 345 1 8 4 62 1 107 1 349 1 91 3 39 2 71 1 
181 1 345 1 269 2 194 1 170 1 120 1 172 1 8 4 107 1 62 1 22 1 149 1 349 1 91 3 365 3 39 2 100 1 291 3 340 1 102 1 343 1 71 1 
365 1 91 1 375 1 120 1 291 1 71 1 
345 1 120 3 211 1 172 2 8 3 62 2 241 1 51 1 220 1 330 1 375 1 91 6 365 7 252 1 291 7 188 1 85 1 333 1 46 1 71 2 103 1 
16 2 120 1 282 2 48 1 218 1 77 2 285 3 175 1 318 2 202 2 54 1 364 1 24 2 365 1 55 1 337 1 291 1 246 1 342 1 205 1 180 6 345 1 270 1 370 2 371 2 6 1 8 1 9 1 87 1 62 1 132 2 303 2 229 1 213 4 214 1 89 2 163 1 136 1 91 1 187 1 252 1 331 1 278 3 355 1 357 1 71 1 216 1 
194 2 170 1 172 1 336 1 121 1 22 1 365 1 291 1 340 1 102 1 343 1 58 1 269 3 294 1 209 1 157 1 210 2 8 2 271 1 300 1 228 2 349 1 91 1 39 3 332 2 356 1 70 2 255 1 
345 1 120 2 8 2 62 1 330 1 375 1 91 2 365 2 351 1 252 1 291 2 343 1 71 1 
181 1 120 1 172 1 8 1 327 1 62 1 20 1 91 4 365 4 304 1 291 4 252 1 71 1 
326 1 345 1 120 2 8 1 62 1 149 1 91 2 365 2 291 2 83 1 46 1 71 1 28 1 103 1 
365 1 91 1 120 1 245 1 291 1 172 1 321 1 117 1 71 1 10 1 
120 1 8 1 62 1 284 1 220 1 91 2 365 2 252 1 291 2 333 1 71 1 
120 2 211 1 172 1 8 3 327 1 62 2 20 1 149 1 220 1 304 1 91 4 365 5 291 5 252 1 188 1 71 2 
120 2 172 1 8 3 327 1 62 2 20 1 149 1 220 1 304 1 91 4 365 5 291 5 252 1 188 1 71 2 379 1 
345 1 120 1 8 1 172 1 218 1 62 1 132 2 318 1 229 1 214 1 24 2 91 1 365 1 55 1 291 1 342 1 71 1 309 1 
345 1 120 2 8 1 62 1 149 1 330 1 91 1 365 1 291 1 85 1 46 1 71 1 103 1 
122 1 318 1 192 1 256 1 201 1 
269 2 121 1 122 2 240 1 318 1 251 1 88 1 22 1 201 2 274 1 349 1 39 2 247 1 279 1 102 1 256 1 155 1 192 2 280 1 
217 1 24 1 266 1 132 1 122 1 256 1 192 1 229 1 111 1 
279 1 155 1 256 1 
151 1 233 1 126 1 94 1 
151 1 350 1 367 1 253 1 317 1 126 1 94 1 
253 1 248 1 57 1 
203 1 151 1 350 1 367 1 290 2 253 3 316 1 317 3 126 1 299 1 94 1 118 1 
151 1 350 1 367 1 368 1 253 2 317 2 126 1 94 1 358 1 
106 1 317 1 63 1 299 1 10 1 150 1 350 1 367 1 253 1 126 1 321 1 
350 1 367 1 253 1 317 1 126 1 299 1 94 1 
151 1 350 1 367 1 253 1 317 1 299 1 94 2 
317 2 299 1 350 2 367 2 253 2 101 1 92 1 13 1 126 1 94 1 
142 1 317 3 299 1 150 1 151 1 350 1 367 1 253 3 378 1 126 2 44 1 94 1 358 2 
106 1 317 2 299 1 10 2 272 1 151 1 350 1 367 1 253 2 126 1 117 1 321 1 94 1 369 1 358 1 
317 4 299 1 301 1 150 1 151 1 350 2 367 2 253 4 368 1 126 2 44 1 94 1 358 2 
151 1 350 1 367 1 253 1 317 1 126 1 299 1 94 1 
317 4 203 1 150 1 151 2 350 1 367 1 290 1 253 4 126 3 44 1 94 2 358 2 118 1 193 1 
317 2 299 1 96 1 350 1 151 1 367 1 152 1 253 2 126 1 234 1 94 1 358 1 
203 2 151 1 350 1 367 1 290 2 253 3 137 1 317 3 126 1 299 1 94 1 118 1 
81 2 17 1 126 2 23 1 
350 1 367 1 253 1 317 1 299 1 324 1 
142 1 151 1 350 1 367 1 253 2 317 2 126 1 299 1 94 1 358 1 
135 1 
151 1 350 1 367 1 253 1 317 1 126 1 299 1 94 1 
142 1 151 1 350 1 367 1 290 1 253 3 317 3 126 1 299 1 94 1 358 1 
150 1 126 1 44 1 193 1 
126 1 94 1 

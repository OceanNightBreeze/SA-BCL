#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 300 110 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
354 2 333 2 267 1 21 1 146 1 197 1 288 9 244 2 48 1 173 1 337 1 206 1 318 1 226 1 276 2 321 3 154 2 260 6 36 1 62 1 156 2 188 9 377 5 140 2 349 1 17 1 308 4 162 1 
354 2 333 2 267 1 21 1 146 1 197 1 288 9 244 2 48 1 173 1 337 1 206 1 318 1 226 1 276 2 321 3 154 2 260 6 36 1 62 1 188 9 156 2 377 5 140 2 349 1 17 1 308 4 162 1 
354 2 333 2 267 1 21 1 146 1 197 1 288 10 244 2 48 1 173 1 337 1 206 1 318 1 226 1 276 2 321 4 154 2 260 7 36 1 62 1 188 10 156 2 377 6 140 2 349 1 17 1 308 5 162 1 
354 2 333 2 267 1 21 1 146 1 197 1 288 7 244 2 48 1 173 1 337 1 206 1 318 1 226 1 276 2 321 2 154 2 260 4 36 1 62 1 188 7 156 1 377 4 140 2 349 1 17 1 308 3 
333 1 276 1 321 1 154 1 197 1 288 4 244 1 48 1 260 3 36 1 188 4 156 2 377 3 318 1 140 1 349 1 308 2 162 1 
333 1 354 1 276 1 21 1 154 1 197 1 288 2 48 1 188 2 173 1 377 1 140 1 129 1 349 1 341 1 177 1 
333 2 354 1 321 1 154 2 197 1 288 3 48 1 260 1 188 3 377 2 349 1 17 1 308 1 
354 1 333 2 286 1 146 1 197 1 288 9 244 1 48 1 318 1 276 1 321 3 154 2 260 7 303 1 62 1 36 1 188 9 156 2 377 5 140 1 349 1 17 1 308 4 162 1 
354 1 333 2 286 1 146 1 197 1 288 9 244 1 48 1 318 1 276 1 321 3 154 2 260 7 303 1 62 1 36 1 188 9 156 2 377 5 140 1 349 1 17 1 308 4 162 1 
266 1 75 1 323 1 
266 1 363 2 284 1 
26 1 164 1 255 2 87 2 319 2 253 2 359 2 379 2 
164 1 310 1 166 1 200 2 268 2 168 1 201 1 358 1 359 2 292 1 26 1 296 1 366 1 319 3 253 2 273 2 151 1 255 2 256 1 258 1 322 1 214 1 347 1 183 1 35 2 12 1 37 2 186 1 306 1 190 1 116 1 220 1 87 3 264 1 18 1 379 2 20 1 
164 1 255 1 287 1 87 1 141 1 368 1 319 1 253 1 359 1 379 1 
105 1 266 1 22 1 313 1 234 1 323 1 182 1 359 1 6 1 87 1 141 1 42 1 350 1 319 1 
105 2 255 1 266 1 22 1 313 1 234 1 323 1 182 1 359 1 87 1 141 1 350 2 319 1 253 1 379 1 
105 1 122 1 2 1 314 1 350 1 
105 2 266 1 122 1 312 1 323 1 2 1 350 2 315 1 
105 1 2 1 350 1 
164 1 105 1 255 1 122 1 287 1 359 1 87 1 141 1 350 1 368 1 319 1 253 1 119 1 379 1 
266 1 
105 2 266 1 122 1 312 1 240 1 323 1 2 1 350 2 
105 5 104 1 266 1 45 1 122 2 370 1 312 1 323 1 259 2 2 2 202 1 326 2 376 1 28 1 113 1 7 1 88 2 350 5 161 1 
26 1 75 1 
255 1 359 2 98 1 26 2 87 2 117 1 319 2 253 1 379 1 
30 1 69 1 85 1 
258 1 322 1 268 1 183 1 358 1 292 1 12 1 37 1 26 1 116 1 127 1 87 1 319 1 264 1 273 1 151 1 
26 1 255 1 249 1 87 3 319 3 253 3 359 3 379 3 
87 1 141 1 368 1 319 1 253 1 359 1 379 1 
255 1 87 1 141 1 117 1 319 1 253 1 359 1 379 1 98 1 
164 1 310 1 166 1 22 1 313 1 200 1 268 1 168 1 201 1 358 1 359 3 292 1 26 1 249 1 319 4 131 1 253 3 273 1 151 1 297 1 255 2 105 1 322 1 258 1 234 1 214 1 182 1 183 1 35 2 12 1 138 1 37 1 306 1 190 1 116 1 220 1 87 4 117 1 141 1 350 1 264 1 18 1 379 3 20 1 
26 1 121 1 6 1 249 1 87 2 319 2 253 1 359 2 379 1 
255 1 105 1 266 1 22 1 234 1 313 1 182 1 359 3 138 1 249 2 87 3 117 1 141 1 350 1 319 3 253 3 379 3 193 1 297 1 
30 1 255 1 85 1 249 1 87 2 117 1 319 2 253 2 359 2 379 2 
258 1 322 1 268 1 183 1 358 1 292 1 12 1 37 1 26 1 116 1 87 1 319 1 273 1 264 1 151 1 
322 1 268 1 358 1 292 1 12 1 37 1 26 1 147 1 116 1 295 1 87 1 319 1 273 1 264 1 151 1 
69 2 310 1 1 1 200 4 201 1 360 1 294 1 225 1 103 1 30 2 231 1 214 2 107 1 347 2 109 1 35 2 235 1 306 1 190 1 85 2 220 1 307 1 67 1 18 1 
78 1 22 1 87 1 141 1 319 1 253 1 359 1 379 1 
30 1 322 1 258 1 268 1 183 1 358 1 12 1 359 1 292 1 37 1 116 1 249 1 87 2 319 2 253 1 264 1 273 1 151 1 379 1 297 1 
121 1 255 1 123 1 359 5 82 1 26 1 6 1 249 2 87 5 117 1 319 5 253 4 379 4 297 1 
78 1 87 2 141 1 368 1 319 2 253 2 359 2 379 2 
27 1 64 1 
27 1 64 1 
301 1 32 1 
301 1 32 1 
301 1 32 1 
179 1 27 1 64 1 
179 1 27 1 64 1 
27 1 64 1 291 1 
343 1 27 2 64 2 301 1 32 1 348 1 
179 1 27 1 64 1 
27 1 64 1 245 1 
27 1 64 1 245 1 
27 1 64 1 245 1 
342 2 105 2 153 1 266 1 58 2 59 1 335 1 218 1 246 3 27 2 64 2 29 1 348 1 350 2 118 2 55 1 101 1 254 2 120 2 
336 1 269 1 359 2 291 1 26 1 246 1 27 1 124 1 29 1 319 2 253 2 342 1 152 1 105 1 344 1 58 1 64 1 65 1 87 2 350 1 118 1 142 1 379 2 120 1 
276 1 140 1 244 1 
276 1 140 1 177 1 
144 1 274 1 140 3 244 2 177 1 272 1 
144 1 31 1 140 2 244 1 177 1 272 1 
144 1 140 2 244 1 177 1 272 2 
266 2 122 4 45 3 312 1 0 1 195 2 1 1 2 1 357 1 202 2 269 1 360 1 148 2 149 1 363 3 294 1 7 1 102 1 152 1 105 5 259 1 323 1 216 1 235 1 326 1 83 1 65 1 158 1 160 2 88 1 350 5 284 1 
194 1 266 5 122 7 45 8 312 1 0 2 195 6 1 3 2 6 314 5 3 5 357 3 202 6 360 3 317 1 363 9 294 3 7 1 210 1 102 1 320 1 152 4 105 9 230 1 323 1 259 2 235 3 326 2 86 1 158 2 160 6 88 2 161 1 350 9 284 3 
266 3 122 2 45 3 0 1 195 2 1 1 357 1 202 2 360 1 148 1 149 1 294 1 363 4 152 1 105 3 323 1 259 1 216 1 235 1 326 1 158 1 88 1 160 2 350 3 161 1 284 2 
194 1 266 4 45 5 122 3 0 1 195 4 1 2 357 2 202 4 360 2 148 2 149 1 363 7 294 2 210 1 152 2 105 4 323 1 259 1 216 1 235 2 326 1 86 1 158 1 160 4 88 1 350 4 161 1 284 3 
75 1 184 1 264 1 
300 1 264 1 
115 1 
264 1 12 1 
212 1 116 1 184 2 351 1 264 3 12 1 
116 1 264 1 12 1 
73 1 264 1 
163 1 221 2 56 1 57 1 214 3 200 7 109 2 347 4 360 1 277 1 338 1 294 1 339 1 66 1 150 1 281 1 67 3 
163 1 221 2 56 1 57 1 214 3 200 7 109 2 347 4 360 1 277 1 338 1 294 1 339 1 66 1 150 1 281 1 67 3 
163 1 221 2 56 1 57 1 214 3 200 7 109 2 347 4 360 1 277 1 375 1 338 1 294 1 339 1 66 1 150 1 281 1 67 3 
163 1 221 3 289 4 1 3 200 31 201 1 357 3 360 4 362 1 338 2 294 4 339 1 51 1 150 5 56 1 57 2 214 15 136 1 347 16 109 5 35 2 236 1 235 3 304 1 277 2 185 1 306 1 190 1 39 1 159 3 220 1 66 1 281 2 67 10 
163 1 221 2 90 1 57 1 214 4 200 9 109 3 347 5 201 2 35 4 360 1 277 1 190 2 306 2 204 1 338 1 39 1 294 1 339 1 220 2 66 1 281 1 150 1 67 4 
333 1 354 1 165 1 197 1 288 2 244 1 48 1 268 1 293 1 177 1 54 1 273 1 151 1 274 1 345 1 276 1 106 1 154 1 302 1 322 1 372 1 260 1 37 1 305 1 188 2 377 1 140 2 349 1 43 1 282 1 
333 1 354 1 165 1 167 1 197 1 288 3 244 1 48 1 268 1 293 1 364 1 177 1 54 1 273 1 151 1 274 1 345 1 276 1 154 1 302 1 322 1 372 1 260 2 37 1 305 1 188 3 377 1 262 1 140 2 43 1 
354 1 165 1 167 1 197 1 288 2 244 1 48 1 268 1 364 1 177 1 54 1 273 1 151 1 274 1 345 1 276 1 302 1 322 1 372 1 260 2 37 1 305 1 188 2 377 1 140 2 
333 1 354 2 165 2 93 1 288 1 268 1 292 1 250 1 365 1 9 1 207 1 273 1 151 1 345 2 322 1 154 1 372 2 12 1 37 1 188 1 262 1 139 1 264 1 
333 1 354 1 165 1 288 1 244 1 268 1 293 1 364 1 177 1 54 1 273 1 151 1 274 1 345 1 276 1 154 1 302 1 322 1 372 1 37 1 305 1 188 1 140 2 349 1 43 1 282 1 
53 1 
285 1 45 2 2 6 202 2 290 2 97 2 292 2 99 2 6 1 7 1 207 1 151 1 105 5 259 1 12 1 14 4 158 1 350 5 16 1 264 1 352 2 266 2 312 3 22 1 313 1 268 2 359 1 77 1 361 1 363 2 365 1 319 1 273 2 178 1 228 1 180 1 322 1 234 1 323 1 182 1 374 1 326 1 37 2 279 2 87 1 88 1 141 1 243 1 42 1 191 2 378 1 328 2 89 1 330 1 284 2 
285 1 105 3 312 1 22 1 234 1 313 1 182 1 2 2 359 1 14 2 361 1 6 1 240 1 87 1 141 1 350 3 243 1 42 1 191 1 319 1 16 1 330 1 
285 1 105 3 266 1 312 1 22 1 234 1 313 1 323 1 182 1 2 1 359 1 14 3 361 1 279 1 6 1 240 1 87 1 141 1 350 3 243 1 42 1 319 1 16 1 330 1 
285 1 266 1 312 1 22 1 313 1 2 2 359 1 361 1 6 1 319 1 105 3 234 1 182 1 323 1 14 3 279 1 240 1 87 1 141 1 42 1 243 1 350 3 191 1 16 1 328 1 330 1 
285 1 45 1 334 1 2 7 202 1 97 2 290 2 99 2 6 1 7 1 208 1 105 5 259 1 14 6 350 5 16 1 352 2 266 5 22 1 312 3 313 1 25 1 359 1 361 1 319 1 228 1 234 1 182 1 323 5 80 1 81 1 326 1 279 4 240 1 87 1 88 1 141 1 243 1 42 1 191 4 378 1 328 4 330 1 284 2 
285 1 45 1 2 4 202 1 97 2 290 2 99 2 6 1 7 1 105 4 259 1 14 4 350 4 16 1 352 2 266 2 22 1 312 2 313 1 359 1 361 1 77 1 363 2 319 1 228 1 234 1 182 1 323 1 326 1 279 2 87 1 88 1 141 1 243 1 42 1 378 1 191 2 328 2 330 1 284 2 
285 1 266 1 45 1 312 2 334 1 22 1 313 1 2 4 202 1 290 2 97 2 359 1 99 2 361 1 6 1 7 1 208 1 319 1 228 1 105 4 234 1 323 1 182 1 259 1 81 1 326 1 14 4 279 2 87 1 88 1 141 1 42 1 243 1 350 4 191 2 378 1 328 2 16 1 330 1 352 2 284 2 
285 1 266 1 45 1 312 2 334 1 22 1 313 1 2 4 202 1 290 2 97 2 359 1 99 2 361 1 6 1 7 1 208 1 319 1 228 1 105 4 234 1 323 1 182 1 259 1 81 1 326 1 14 4 279 2 87 1 88 1 141 1 42 1 243 1 350 4 191 2 378 1 328 2 16 1 330 1 352 2 284 2 
285 1 266 1 45 1 312 2 334 1 22 1 313 1 2 4 224 1 202 1 97 2 359 1 5 2 99 2 361 1 363 2 6 1 126 1 7 1 319 1 105 4 234 1 323 1 182 1 259 1 261 1 11 2 326 1 14 4 279 2 87 1 88 1 141 1 42 1 243 1 350 4 191 2 378 1 328 2 16 1 330 1 
285 1 266 1 45 1 312 2 334 1 22 1 313 1 2 5 202 1 290 2 97 2 359 1 99 2 361 1 6 1 7 1 208 1 319 1 228 1 105 4 234 1 323 1 259 1 182 1 80 1 81 1 326 1 14 5 279 3 87 1 88 1 141 1 42 1 243 1 350 4 378 1 191 3 16 1 328 3 330 1 352 2 284 2 
285 1 266 1 45 1 312 2 334 1 22 1 313 1 2 5 202 1 290 2 97 2 359 1 99 2 361 1 6 1 7 1 208 1 319 1 228 1 105 4 234 1 323 1 259 1 182 1 80 1 81 1 326 1 14 5 279 3 87 1 88 1 141 1 42 1 243 1 350 4 378 1 191 3 16 1 328 3 330 1 352 2 284 2 
285 1 45 1 2 4 202 1 97 2 5 2 99 2 6 1 7 1 105 4 259 1 261 1 11 2 14 4 350 4 16 1 266 1 22 1 312 2 313 1 359 1 361 1 77 1 363 2 319 1 234 1 182 1 323 1 326 1 279 2 87 1 88 1 141 1 243 1 42 1 378 1 191 2 328 2 330 1 
163 1 221 1 69 1 310 1 75 1 200 6 201 1 360 1 26 2 338 1 294 1 339 1 103 1 30 1 214 3 109 2 347 3 35 2 306 1 190 1 85 1 220 1 66 1 281 1 67 2 18 1 
69 11 310 1 166 1 289 3 1 1 200 14 201 2 23 1 357 2 4 1 360 1 26 1 49 1 294 2 150 1 30 11 229 1 214 6 109 1 347 8 35 4 236 1 237 1 235 2 304 1 186 1 306 2 190 2 85 4 220 2 159 3 67 2 18 2 
310 1 166 1 268 1 200 2 23 1 201 1 358 1 292 1 359 1 26 1 127 1 249 1 319 2 253 1 273 1 151 1 297 1 322 1 258 1 214 1 33 1 373 1 183 1 347 1 35 2 12 1 37 1 186 1 190 1 306 1 38 1 85 1 116 1 220 1 87 2 264 1 18 1 379 1 
1 2 200 20 201 3 292 1 248 2 338 1 249 1 294 3 339 1 150 4 253 1 209 1 151 2 297 1 258 2 214 10 109 4 347 10 12 2 306 3 116 2 220 3 66 1 67 8 264 2 18 3 20 2 221 1 163 1 69 7 310 3 166 1 268 3 23 1 357 2 358 2 359 1 360 3 26 2 170 2 364 1 319 3 273 3 30 7 133 2 322 2 183 2 35 6 235 2 37 3 187 1 186 1 84 1 190 3 85 7 87 3 281 1 379 1 143 2 
310 2 166 1 268 7 200 2 201 2 359 1 292 2 205 1 249 1 364 1 296 2 365 1 367 1 207 1 319 1 253 1 103 1 273 8 151 2 233 1 106 1 322 2 214 1 34 1 61 1 347 1 35 4 12 2 37 8 186 1 306 2 190 2 263 1 87 1 220 2 41 1 264 3 379 1 18 2 
69 1 310 1 1 1 200 3 201 1 23 1 357 1 359 1 360 1 294 1 319 1 253 1 30 1 255 1 214 2 109 1 347 1 35 2 235 1 306 1 190 1 85 1 40 1 220 1 87 1 117 1 67 1 379 1 18 1 
30 1 69 1 310 1 107 1 200 2 201 1 347 2 35 2 235 1 190 1 306 1 85 1 294 1 220 1 150 1 67 1 103 1 18 1 
30 1 69 1 310 1 231 1 214 2 1 1 200 2 109 1 201 1 35 2 360 1 190 1 306 1 85 1 220 1 67 1 103 1 18 1 
69 2 310 1 1 1 200 4 357 1 201 1 360 1 294 1 150 1 103 1 30 2 214 2 347 2 109 1 35 2 235 1 306 1 190 1 85 2 220 1 67 2 18 1 
30 1 69 1 310 1 107 1 200 2 34 1 201 1 347 2 35 2 235 1 190 1 306 1 85 1 294 1 220 1 150 1 67 1 18 1 
30 1 69 1 310 1 231 1 214 2 1 1 200 2 34 1 109 1 201 1 35 2 360 1 190 1 306 1 85 1 220 1 67 1 18 1 
69 2 310 1 1 1 200 4 357 1 201 1 360 1 294 1 150 1 30 2 214 2 34 1 347 2 109 1 35 2 235 1 306 1 190 1 85 2 220 1 67 2 18 1 
30 2 69 2 310 1 214 2 1 1 200 4 109 1 201 1 357 1 347 2 35 2 235 1 360 1 190 1 306 1 85 2 294 1 220 1 150 1 67 2 18 1 
310 1 166 1 200 2 268 1 201 1 358 1 292 1 26 1 319 1 273 1 151 1 322 1 258 1 214 1 347 1 183 1 35 2 12 1 37 1 186 1 190 1 306 1 116 1 87 1 220 1 264 1 18 1 20 1 
310 1 166 1 200 2 268 1 201 1 358 1 292 1 26 1 147 1 295 1 174 1 319 1 273 1 151 1 322 1 214 1 347 1 35 2 12 1 37 1 186 1 190 1 306 1 116 1 87 1 220 1 264 1 18 1 
69 2 310 1 1 1 200 4 357 1 201 1 23 1 360 1 294 1 150 1 30 2 214 2 347 2 109 1 35 2 235 1 306 1 190 1 85 2 220 1 67 2 18 1 
69 2 310 1 1 1 200 4 268 1 201 1 357 1 358 1 360 1 294 1 150 1 319 1 273 1 151 1 30 2 106 1 322 1 258 1 214 2 109 1 347 2 183 1 35 2 235 1 12 1 37 1 190 1 306 1 85 2 116 1 87 1 220 1 67 2 264 1 18 1 20 1 143 1 
69 1 310 1 1 1 200 3 201 1 23 1 357 1 359 1 360 1 294 1 150 1 319 1 253 1 369 1 30 1 255 1 214 1 347 2 35 2 235 1 306 1 190 1 85 1 220 1 87 1 117 1 67 1 379 1 18 1 
265 1 90 1 145 1 289 2 1 3 200 19 201 2 357 3 360 3 294 3 150 3 130 1 134 1 257 2 232 1 214 10 109 3 347 9 35 4 236 1 238 1 235 3 304 1 13 1 306 2 190 2 280 2 220 2 159 1 67 6 
90 1 70 1 71 1 145 2 222 1 289 2 356 1 1 2 200 26 201 3 357 3 169 1 360 2 172 1 294 3 150 2 134 1 257 4 232 2 214 12 109 2 347 14 35 6 238 1 236 2 235 3 13 1 306 3 190 3 39 2 280 1 220 3 159 2 67 4 
221 1 163 1 90 1 70 1 71 1 222 1 145 1 289 4 356 1 1 4 200 41 201 3 357 4 169 1 360 5 172 1 338 1 294 5 339 1 150 4 130 1 134 1 257 4 232 2 214 21 109 4 347 20 35 6 236 3 238 1 235 4 304 1 13 1 306 3 190 3 39 1 241 1 280 1 220 3 159 3 66 1 281 1 67 8 
221 1 163 1 90 1 70 1 71 1 222 1 145 1 289 4 356 1 1 3 200 38 201 4 357 4 169 1 360 4 172 1 338 1 294 5 339 1 150 3 130 1 134 1 257 4 232 2 214 18 109 4 347 20 35 8 236 3 238 1 235 4 304 1 13 1 306 4 190 4 39 2 241 1 280 1 220 4 159 3 66 1 281 1 67 7 
221 1 163 1 90 1 70 1 71 1 222 1 145 1 289 4 356 1 1 7 200 52 201 2 357 7 169 1 360 8 172 1 338 1 294 8 339 1 150 7 134 1 257 4 232 1 214 25 109 7 347 27 35 4 237 2 236 2 238 1 235 7 304 2 13 1 306 2 190 2 39 1 280 1 220 2 159 4 66 1 281 1 67 14 
342 1 27 1 64 1 58 1 348 1 118 1 55 1 120 1 218 1 19 1 
336 1 291 1 
342 1 27 1 64 1 72 1 346 1 58 1 242 1 118 1 120 1 
342 1 105 1 266 1 58 1 59 1 335 1 218 1 246 2 27 1 64 1 29 1 348 1 350 1 118 1 55 1 101 1 254 1 120 1 
342 1 105 1 266 1 58 1 59 1 335 1 218 1 246 2 27 1 64 1 29 1 348 1 350 1 118 1 55 1 101 1 254 1 120 1 
342 1 105 1 266 1 58 1 59 1 335 1 218 1 246 2 27 1 64 1 29 1 348 1 350 1 118 1 55 1 101 1 254 1 120 1 
343 1 179 1 157 1 
343 1 179 1 157 1 
74 1 245 1 
343 1 74 1 245 1 
124 1 344 1 
122 1 335 1 336 1 269 1 291 1 359 2 26 1 246 1 27 1 124 1 319 2 253 2 254 1 342 1 152 1 105 1 344 1 58 1 64 1 65 1 87 2 350 1 118 1 329 1 142 1 120 1 379 2 
179 1 157 1 
343 1 74 1 245 1 
310 1 166 1 76 1 200 2 268 2 23 1 201 1 359 2 296 2 319 2 273 2 151 1 322 1 214 1 181 1 324 1 61 1 347 1 35 2 12 1 37 2 186 1 190 1 306 1 327 1 263 1 220 1 87 2 264 1 18 1 283 1 
274 1 165 1 276 1 106 1 322 1 302 1 215 1 244 1 268 2 217 1 37 2 140 2 128 1 364 1 177 1 43 1 54 1 273 2 151 1 
274 1 165 1 276 1 302 1 322 1 244 1 199 1 268 1 217 1 37 1 140 2 364 1 177 1 43 1 54 1 273 1 151 1 
165 1 322 1 268 1 137 1 12 1 292 1 37 1 128 1 250 1 365 1 207 1 264 1 273 1 151 1 
274 1 165 1 276 1 322 1 302 1 215 1 244 1 268 1 217 1 37 1 140 2 128 1 364 1 177 1 43 1 54 1 273 1 151 1 
196 1 
376 1 266 1 45 1 113 1 75 1 323 1 202 1 
266 2 45 1 312 1 2 1 202 1 290 1 363 1 7 1 228 1 105 1 259 1 323 1 326 1 88 1 350 1 284 1 352 1 
300 1 322 1 47 1 259 1 268 1 110 1 12 1 326 1 292 1 37 1 116 1 7 1 88 1 351 1 264 1 273 1 151 1 
70 1 266 5 71 1 45 8 222 1 312 1 195 5 289 1 356 1 1 2 2 1 357 2 202 5 360 2 172 1 50 1 363 6 294 2 7 2 105 1 180 1 259 2 323 2 236 1 235 2 326 2 111 1 112 1 158 1 159 1 160 5 88 2 350 1 15 2 284 3 
163 1 164 1 45 2 287 1 202 2 359 1 360 1 338 1 294 2 7 1 251 1 368 1 319 1 253 1 105 1 255 1 259 1 81 1 326 1 111 1 87 1 88 1 141 1 281 1 350 1 15 2 119 1 379 1 
266 1 45 1 259 1 323 1 202 1 326 1 376 1 113 1 7 1 88 1 
266 5 45 5 195 5 1 2 357 2 202 5 235 2 111 1 360 2 248 1 294 2 363 10 160 5 15 2 284 5 
105 1 266 1 312 1 323 1 2 1 350 1 
311 1 45 2 312 2 94 1 268 4 2 4 202 2 292 2 7 1 365 1 207 1 273 4 132 2 151 1 105 3 275 1 180 2 322 1 259 2 374 1 12 1 326 2 37 4 158 2 88 2 161 1 350 3 264 1 89 1 
164 1 310 1 166 1 200 1 268 1 168 1 201 1 358 1 292 1 359 2 26 1 319 3 253 2 273 1 151 1 255 2 258 1 322 1 214 1 183 1 35 2 12 1 37 1 306 1 190 1 116 1 87 3 220 1 264 1 379 2 18 1 20 1 
221 1 266 4 45 1 180 1 195 2 259 1 323 2 202 2 326 1 363 4 158 1 160 2 7 1 88 1 284 2 
342 1 58 1 340 1 
342 1 58 1 340 1 
342 1 124 1 46 1 58 1 218 1 
342 1 58 1 340 1 
171 1 342 1 58 1 
171 1 342 1 58 1 
171 1 342 1 58 1 
342 1 58 1 
27 1 64 1 
221 1 163 1 214 4 200 8 347 4 109 2 201 2 35 4 360 1 190 2 306 2 39 1 338 1 294 1 220 2 339 1 66 1 150 1 281 1 67 3 
221 1 163 1 214 3 75 1 200 6 109 2 347 3 360 1 338 1 294 1 339 1 66 1 281 1 67 2 
92 1 214 2 1 1 200 4 109 1 201 1 357 1 347 2 35 2 235 1 360 1 190 1 306 1 294 1 220 1 150 1 67 2 
214 4 289 2 1 1 200 7 109 1 347 3 357 1 236 1 235 1 360 1 304 1 294 1 159 1 150 1 67 2 
221 1 163 1 289 2 1 2 200 23 357 2 201 2 203 1 360 3 338 2 49 1 294 3 339 1 150 4 214 12 347 11 109 5 35 4 235 2 237 1 304 1 190 2 306 2 39 2 159 2 220 2 66 1 281 2 67 9 
214 1 289 1 200 1 
159 1 200 1 347 1 
92 1 214 3 1 1 200 6 201 1 357 1 347 3 109 2 35 2 235 1 360 1 306 1 190 1 248 1 294 1 220 1 150 1 67 3 
90 1 70 1 71 1 222 1 214 6 289 1 1 2 356 1 200 12 109 1 357 2 347 6 201 1 35 2 235 2 236 1 360 2 172 1 190 1 306 1 294 2 220 1 159 1 150 1 67 2 
163 1 214 3 200 6 347 3 109 1 360 1 338 1 294 1 281 1 150 1 67 2 
214 2 200 3 347 1 109 1 201 1 35 2 203 1 190 1 306 1 338 1 39 1 339 1 220 1 66 1 150 1 281 1 67 2 
163 1 90 1 214 5 200 10 201 1 109 3 347 5 35 2 360 2 306 1 190 1 338 2 294 2 220 1 251 1 281 2 150 2 67 5 
90 1 200 2 201 1 347 2 35 2 235 1 190 1 306 1 294 1 220 1 150 1 67 1 
90 1 214 2 1 1 200 4 109 1 201 1 357 1 347 2 35 2 235 1 360 1 190 1 306 1 294 1 220 1 150 1 67 2 
90 1 214 2 200 3 201 3 109 1 347 1 35 6 203 1 190 3 306 3 39 1 338 1 220 3 281 1 150 1 130 1 67 2 
221 1 163 2 90 1 92 1 289 4 1 3 200 34 201 5 357 3 203 1 360 5 362 1 338 3 294 5 339 1 150 5 130 1 214 18 136 1 347 16 109 7 35 10 236 1 235 3 304 1 185 1 306 5 190 5 39 2 220 5 159 3 66 1 281 3 67 12 
221 1 163 1 90 1 289 1 200 8 201 1 360 1 172 1 338 1 294 1 339 1 214 4 347 4 109 2 35 2 236 1 306 1 190 1 159 1 220 1 66 1 281 1 67 2 
221 1 163 1 90 1 92 1 289 2 200 11 201 2 357 1 360 1 172 1 338 1 294 2 339 1 150 1 214 5 109 2 347 6 35 4 236 1 235 1 304 1 306 2 190 2 220 2 159 1 66 1 281 1 67 3 
221 1 163 1 90 1 92 1 70 1 222 1 71 1 289 1 356 1 1 2 200 19 201 3 357 2 360 3 172 1 338 1 294 3 339 1 150 1 214 10 347 9 109 3 35 6 236 1 235 2 306 3 190 3 39 1 159 1 220 3 66 1 281 1 67 4 
221 1 163 1 90 1 92 1 70 1 222 1 71 1 289 1 356 1 1 1 200 17 201 3 357 2 360 2 172 1 338 1 294 3 339 1 150 2 214 7 347 10 109 3 35 6 236 1 235 2 306 3 190 3 39 1 159 1 220 3 66 1 281 1 67 5 
221 1 163 1 90 1 289 1 200 8 201 1 360 1 172 1 338 1 294 1 339 1 214 4 347 4 109 2 35 2 236 1 306 1 190 1 159 1 220 1 66 1 281 1 67 2 
90 1 70 1 71 1 222 1 214 6 289 1 1 2 356 1 200 12 109 1 357 2 347 6 201 1 35 2 235 2 236 1 360 2 172 1 190 1 306 1 294 2 220 1 159 1 150 1 67 2 
221 1 163 1 90 1 70 1 92 1 71 1 222 1 289 1 356 1 1 1 200 18 201 4 357 2 360 2 172 1 338 1 294 3 339 1 150 2 214 8 347 10 109 3 35 8 236 1 235 2 306 4 190 4 39 2 220 4 159 1 66 1 281 1 67 5 
90 1 70 1 71 1 222 1 289 1 356 1 1 2 200 16 201 4 357 3 360 2 172 1 294 3 150 3 130 1 214 7 347 9 109 3 35 8 236 1 235 3 306 4 190 4 39 2 220 4 159 1 67 6 
163 1 214 4 200 7 109 3 347 3 360 1 338 3 294 1 339 2 66 1 281 3 150 3 67 6 
221 1 163 1 90 1 70 1 71 1 222 1 289 1 356 1 1 1 200 18 201 4 357 2 360 2 172 1 338 1 294 3 339 1 150 1 130 1 214 8 347 10 109 3 35 8 236 1 235 2 306 4 190 4 39 2 220 4 159 1 66 1 281 1 67 4 
26 1 121 1 6 1 10 1 87 1 319 1 359 1 
353 1 298 1 121 1 10 1 198 1 359 1 26 1 278 1 6 1 87 1 8 1 319 1 
322 1 75 1 365 1 207 1 268 1 264 1 273 1 151 1 12 1 292 1 37 1 
322 1 258 1 268 1 358 1 12 1 359 1 292 1 37 1 26 1 116 1 249 1 87 2 319 2 253 1 264 1 273 1 379 1 151 1 
44 1 22 1 73 1 313 1 322 1 258 1 268 1 358 1 12 2 359 2 37 1 26 1 116 2 249 1 87 2 141 1 319 2 253 2 264 3 273 1 379 1 132 1 151 1 
44 1 22 1 73 1 313 1 322 1 268 2 358 1 12 2 359 2 37 2 26 1 116 2 249 1 295 1 87 2 100 1 141 1 319 2 253 2 264 3 273 2 379 1 132 1 151 1 
105 2 266 1 44 1 355 1 300 1 234 1 73 1 322 1 323 1 268 3 2 1 184 1 292 1 12 1 37 3 316 1 116 1 100 1 350 2 273 3 264 4 132 1 151 1 
105 2 266 1 44 1 300 1 234 1 73 1 322 1 323 1 268 3 2 1 184 1 292 1 12 1 37 3 116 1 125 1 100 1 350 2 273 3 264 4 132 1 151 1 
322 1 268 1 367 1 273 1 151 1 37 1 
233 1 106 1 322 3 268 6 61 1 325 1 292 2 12 2 37 7 114 1 205 1 116 1 219 1 364 1 296 1 41 1 367 1 351 1 273 7 264 3 151 2 
69 1 221 1 163 1 310 2 76 1 200 6 268 1 23 1 201 2 358 1 359 1 360 1 26 2 170 1 338 1 294 1 249 1 339 1 319 2 253 1 273 1 151 1 30 1 106 1 322 1 258 1 214 3 347 3 109 2 183 1 35 4 12 1 37 1 190 2 306 2 85 1 116 1 220 2 87 2 66 1 281 1 67 2 264 1 18 2 379 1 143 1 20 1 
266 1 45 1 122 1 312 1 94 1 268 1 2 2 202 1 24 1 292 1 247 1 125 1 7 2 273 1 105 3 300 1 234 1 323 1 259 2 108 1 184 1 326 2 37 1 376 1 113 1 88 2 350 3 264 2 
322 1 47 1 268 1 184 1 12 1 37 1 115 1 116 1 367 1 351 1 273 1 264 1 151 1 
106 1 322 1 268 4 292 1 12 1 37 4 100 1 365 1 207 1 192 1 273 4 264 1 151 1 
322 2 268 2 325 1 12 1 37 2 187 1 189 1 116 1 219 1 227 1 273 2 264 1 132 1 151 1 
276 1 322 1 140 1 268 1 177 1 54 1 273 1 151 1 292 1 37 1 
106 1 322 1 268 2 61 1 12 1 37 2 364 1 273 2 264 1 151 1 283 1 
106 1 233 1 322 2 268 4 61 1 292 1 12 2 37 5 205 1 365 1 207 1 192 1 273 5 264 3 132 1 151 2 
106 1 322 2 268 4 61 1 292 1 12 2 37 5 205 1 365 1 207 1 192 1 273 5 264 3 132 1 309 1 151 2 
322 1 268 1 358 1 12 1 359 1 292 1 37 1 26 1 116 1 249 1 295 1 87 2 319 2 253 1 264 1 273 1 379 1 151 1 
322 2 268 1 325 1 12 1 37 1 114 1 116 1 219 1 351 1 273 1 264 1 132 1 151 1 
26 1 299 1 175 1 95 1 211 1 
105 2 299 2 266 1 135 1 91 1 122 1 22 1 234 1 313 1 323 1 182 1 95 2 138 1 26 1 141 1 175 1 271 1 350 2 211 2 
181 1 324 1 95 1 359 1 327 1 87 1 175 1 319 1 211 1 
91 1 135 1 175 1 
377 1 75 1 197 1 48 1 
333 1 188 1 377 1 154 1 197 1 288 1 48 1 
354 1 345 1 288 1 
333 1 21 2 154 1 288 3 197 1 79 1 48 1 188 3 63 1 377 1 349 1 68 1 
333 1 156 1 188 2 377 1 154 1 197 1 288 2 48 1 260 1 
333 1 276 1 154 1 288 1 244 1 36 1 188 1 377 1 140 1 349 1 308 1 
333 1 188 1 377 1 154 1 288 1 349 1 48 1 
333 1 188 1 154 1 197 1 288 1 349 1 48 2 
333 2 154 2 288 2 371 1 48 1 60 1 188 2 377 1 270 1 349 1 
333 1 146 1 321 1 154 1 197 1 288 3 48 1 260 2 62 1 188 3 377 2 349 1 308 1 
333 1 274 1 276 1 154 1 197 1 288 2 244 1 48 1 260 1 96 1 188 2 377 1 140 2 349 1 177 1 
333 2 321 1 154 2 197 1 288 4 48 1 260 2 188 4 156 1 377 2 349 1 308 1 162 1 
333 1 188 1 377 1 154 1 197 1 288 1 349 1 48 1 
333 1 21 1 321 1 154 1 197 2 288 4 48 2 260 2 63 1 188 4 377 3 52 1 308 1 68 1 
333 1 286 1 154 1 288 2 197 1 48 1 260 1 155 1 188 2 377 1 349 1 332 1 
333 1 213 1 21 2 154 1 288 3 197 1 48 1 188 3 63 2 377 1 349 1 68 1 
377 2 252 2 176 1 331 1 
333 1 188 1 239 1 154 1 288 1 349 1 
333 1 188 2 377 1 154 1 197 1 288 2 349 1 48 1 260 1 62 1 
223 1 
333 1 188 1 377 1 154 1 197 1 288 1 349 1 48 1 
333 1 188 3 377 1 21 1 154 1 197 1 288 3 349 1 48 1 260 1 62 1 
377 1 321 1 52 1 308 1 
377 1 48 1 

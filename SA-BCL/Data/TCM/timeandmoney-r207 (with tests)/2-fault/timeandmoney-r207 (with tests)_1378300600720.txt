#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) (34,167) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (34,167) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) (34,167) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (21,157,280,325) (21,157,280,325) (21,157,280,325) 313 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
49 1 21 1 157 1 280 1 313 1 
100 1 244 1 118 1 
244 1 321 1 138 2 
261 2 291 2 51 2 155 2 297 2 158 1 148 2 54 1 
85 1 2 1 1 1 291 2 90 2 213 1 47 1 8 1 51 2 297 2 54 1 97 2 261 3 260 1 143 2 107 1 148 3 310 1 315 1 113 1 188 1 189 1 320 1 274 1 155 2 158 1 235 1 238 1 30 1 161 2 162 1 163 1 75 1 123 1 36 2 207 1 208 1 
261 1 291 1 245 1 68 1 146 1 51 1 155 1 297 1 148 1 54 1 
291 1 230 1 4 1 131 1 68 1 155 1 51 2 297 1 54 1 258 1 100 1 261 2 139 1 140 1 244 1 245 2 146 1 106 1 148 2 44 1 287 1 
291 2 4 1 131 2 68 1 155 2 51 2 297 2 54 1 258 1 100 1 261 2 139 2 140 1 244 1 245 2 146 1 106 1 148 2 287 1 
139 1 241 1 131 1 255 1 137 1 
100 1 139 2 121 1 131 2 255 1 244 1 195 1 137 1 
139 1 131 1 137 1 
291 1 131 1 255 1 68 1 155 1 51 1 297 1 258 1 54 1 139 1 261 1 245 1 146 1 148 1 
244 1 
100 1 139 2 121 1 131 2 255 1 244 1 172 1 137 1 
131 5 255 2 52 1 276 1 132 1 278 1 323 1 279 2 160 1 137 2 100 1 174 1 139 5 121 1 221 1 244 1 266 2 43 2 288 1 
158 1 118 1 
0 1 114 1 291 1 51 2 155 1 297 1 158 2 261 2 148 2 
152 1 165 1 145 1 
113 1 1 1 90 1 47 1 320 1 94 1 158 1 235 1 30 1 161 1 261 1 260 1 162 1 36 1 208 1 148 1 
152 1 1 1 113 1 90 1 47 1 320 1 155 1 51 1 297 1 235 1 30 1 161 1 260 1 261 2 162 1 142 1 36 1 267 1 208 1 148 2 
261 3 291 1 142 1 51 3 155 3 297 3 158 1 148 3 
261 1 245 1 146 1 51 1 155 1 297 1 148 1 
261 1 0 1 114 1 291 1 245 1 51 1 155 1 297 1 148 1 
0 1 1 1 2 1 90 1 4 1 8 1 97 1 261 4 260 1 178 1 267 1 106 1 107 1 113 1 188 1 30 1 123 1 36 1 208 1 287 1 291 2 131 1 213 1 47 1 51 3 297 3 54 1 139 1 140 1 142 1 143 2 310 1 148 4 60 1 315 1 320 1 155 3 235 1 158 1 238 1 161 1 162 1 75 1 245 2 332 1 
261 2 142 1 78 1 51 2 155 1 297 1 158 1 148 2 44 1 
0 1 291 1 4 1 131 1 155 3 51 3 297 3 139 1 261 3 178 1 140 1 305 1 142 2 244 1 245 1 267 1 106 1 148 3 287 1 
261 2 0 1 152 1 291 1 142 1 165 1 51 2 155 2 297 2 148 2 
113 1 1 1 90 1 47 1 320 1 158 1 235 1 30 1 161 1 261 1 260 1 162 1 36 1 208 1 148 1 
113 1 1 1 90 1 320 1 11 1 158 1 235 1 30 1 161 1 261 1 260 1 176 1 36 1 208 1 148 1 
290 1 2 1 250 1 168 1 213 1 214 1 136 1 97 4 14 1 264 1 143 2 104 1 145 2 107 1 315 1 152 2 188 2 238 1 198 1 163 2 75 1 200 1 165 2 40 1 
261 1 63 1 4 1 245 1 51 1 155 1 297 1 148 1 
0 1 291 1 155 4 51 5 297 4 158 1 261 5 304 1 142 2 103 1 78 1 267 1 148 5 44 1 
63 1 261 2 245 1 146 1 51 2 155 2 297 2 148 2 
199 1 124 1 
199 1 124 1 
177 1 223 1 
177 1 223 1 
177 1 223 1 
199 1 124 1 93 1 
199 1 124 1 296 1 
199 2 177 1 124 2 223 1 22 1 156 1 
199 1 124 1 93 1 
199 1 124 1 93 1 
199 1 124 1 218 1 
199 1 124 1 218 1 
199 1 124 1 218 1 
87 2 289 1 131 2 67 1 26 2 13 3 199 2 139 2 122 1 101 1 76 1 32 2 327 2 124 2 126 2 244 1 38 1 22 1 151 1 
87 1 131 1 296 1 51 2 297 2 13 1 139 1 261 2 148 2 109 1 26 1 155 2 192 1 116 1 158 1 236 1 240 1 199 1 76 1 202 1 124 1 327 1 126 1 39 1 
7 1 233 1 277 1 
7 1 308 1 277 1 
271 1 7 3 233 2 293 1 308 1 256 1 
271 1 5 1 7 2 233 1 308 1 256 1 
271 2 7 2 233 1 308 1 256 1 
290 1 3 1 253 1 131 5 255 4 95 1 299 1 136 1 138 3 137 1 174 2 139 5 100 1 180 2 265 1 104 1 266 1 147 2 109 1 187 1 192 1 321 1 27 1 279 1 278 3 236 1 160 1 198 1 121 1 35 2 244 2 43 1 
290 3 131 9 48 1 6 1 255 7 52 1 53 1 95 2 299 1 136 3 138 9 137 6 174 6 139 9 100 1 265 3 104 3 266 2 19 1 147 6 227 1 321 3 27 2 236 4 279 2 278 8 160 1 198 3 241 5 121 1 35 6 244 5 334 5 43 2 84 1 
290 1 253 1 131 3 255 2 52 1 95 1 136 1 138 4 100 1 139 3 174 2 180 1 265 1 104 1 266 1 147 2 187 1 321 2 27 1 279 1 278 3 236 1 198 1 244 3 35 2 43 1 
290 2 131 4 253 1 48 1 255 3 52 1 95 1 136 2 138 7 100 1 139 4 174 4 180 2 265 2 104 2 266 1 19 1 147 4 187 1 321 3 27 1 279 1 278 5 236 2 198 2 244 4 35 4 43 1 84 1 
235 1 217 1 118 1 
80 1 235 1 
159 1 
320 1 235 1 
1 1 59 1 320 1 215 1 217 2 235 3 
1 1 320 1 235 1 
235 1 239 1 
290 1 45 1 89 1 188 3 69 1 134 1 298 1 97 7 198 1 284 1 200 2 163 4 204 2 224 1 40 3 246 1 247 1 
290 1 45 1 89 1 188 3 69 1 134 1 298 1 97 7 198 1 284 1 200 2 163 4 204 2 224 1 40 3 246 1 247 1 
290 1 249 1 45 1 89 1 188 3 69 1 134 1 298 1 97 7 198 1 284 1 200 2 163 4 204 2 224 1 40 3 246 1 247 1 
2 1 290 4 45 2 89 2 9 4 134 5 298 2 136 3 97 31 173 1 143 2 265 3 224 1 104 3 183 1 226 1 107 1 186 1 315 1 229 1 188 15 69 1 322 1 238 1 198 4 284 2 163 16 200 5 328 3 204 3 330 1 40 10 246 1 247 1 
290 1 2 2 89 1 45 1 134 1 298 1 97 9 143 4 182 1 224 1 107 2 315 2 188 4 190 1 69 1 322 1 238 2 198 1 284 1 163 5 200 3 204 2 40 4 247 1 
49 1 21 1 157 1 280 1 313 1 
167 1 49 1 21 1 157 1 280 1 
325 1 34 1 49 1 21 1 
167 1 49 1 21 1 157 1 280 1 
49 1 21 1 157 1 280 1 313 1 
285 1 
252 2 251 2 4 1 169 1 259 5 100 3 261 1 98 3 174 1 17 2 266 1 184 1 106 1 272 1 117 1 279 1 278 1 196 1 197 1 121 2 287 1 44 1 43 1 131 4 294 1 51 1 137 5 139 4 140 1 303 1 220 1 306 2 148 1 314 3 230 1 321 2 70 3 160 1 74 1 244 3 243 1 245 1 
251 2 252 2 4 1 131 4 169 1 294 1 51 1 259 5 137 5 174 1 98 3 261 1 139 4 100 3 140 1 220 1 303 1 306 2 17 2 266 1 106 1 184 1 148 1 272 1 314 3 230 1 321 2 117 1 278 1 279 1 160 1 196 1 70 3 197 1 74 1 121 2 243 1 244 3 245 1 43 1 44 1 287 1 
252 2 4 1 259 4 100 3 261 1 174 1 98 2 266 1 106 1 184 1 23 2 117 1 279 1 278 1 196 1 121 2 287 1 44 1 43 1 131 4 294 1 51 1 135 1 138 2 219 2 137 4 139 4 140 1 303 1 306 2 148 1 314 2 230 1 154 1 160 1 70 2 74 1 244 3 245 1 
251 2 252 2 90 2 4 1 170 1 259 4 98 2 174 2 260 1 261 1 100 3 17 2 266 1 106 1 184 1 272 1 113 2 27 1 117 1 278 2 279 1 194 1 196 1 121 3 33 1 36 2 208 1 43 1 44 1 287 1 131 5 212 1 294 1 51 1 135 1 138 2 137 6 139 5 140 1 303 1 306 2 148 1 314 2 230 1 318 1 320 1 321 2 235 1 70 2 160 1 72 1 161 2 74 1 244 4 245 1 
4 1 131 3 172 1 51 1 259 2 137 2 261 1 139 3 100 2 140 1 303 1 106 1 184 1 148 1 230 1 117 1 196 1 70 1 74 1 121 1 244 2 245 1 44 1 287 1 
4 1 230 1 131 2 51 1 117 1 196 1 259 3 98 1 100 2 139 2 74 1 261 1 140 1 303 1 244 2 245 1 184 1 106 1 148 1 287 1 44 1 
4 1 131 3 172 1 51 1 259 3 137 2 261 1 139 3 100 3 98 1 140 1 303 1 106 1 184 1 148 1 314 1 230 1 117 1 196 1 70 1 74 1 121 1 244 3 245 1 44 1 287 1 
252 2 251 2 4 1 169 1 172 1 258 1 259 5 100 4 261 2 98 3 174 1 17 2 266 1 184 1 106 1 272 1 117 1 279 1 278 1 196 1 197 1 121 3 287 1 44 1 43 1 291 1 131 5 294 1 51 2 297 1 54 1 137 7 139 5 140 1 303 1 220 1 306 2 146 1 148 2 314 4 230 1 68 1 155 1 321 2 70 4 160 1 74 1 244 4 243 1 245 2 82 1 
252 2 251 2 4 1 259 4 100 3 261 1 174 1 98 2 17 2 266 1 106 1 184 1 272 1 117 1 279 1 278 1 196 1 121 2 287 1 44 1 43 1 131 4 294 1 51 1 135 1 138 2 137 4 139 4 140 1 303 1 306 2 148 1 314 2 230 1 321 2 160 1 70 2 74 1 244 4 245 1 
251 2 252 2 4 1 131 4 294 1 51 1 137 4 259 4 98 2 174 1 261 1 139 4 100 3 140 1 303 1 220 1 306 2 17 2 266 1 106 1 184 1 148 1 272 1 314 2 230 1 321 2 117 1 278 1 279 1 70 2 196 1 160 1 197 1 74 1 121 2 243 1 244 3 245 1 43 1 44 1 287 1 
251 2 252 2 4 1 131 4 294 1 51 1 137 4 259 4 98 2 174 1 261 1 139 4 100 3 140 1 303 1 220 1 306 2 17 2 266 1 106 1 184 1 148 1 272 1 314 2 230 1 321 2 117 1 278 1 279 1 70 2 196 1 160 1 197 1 74 1 121 2 243 1 244 3 245 1 43 1 44 1 287 1 
86 1 252 2 4 1 131 4 294 1 51 1 137 4 219 2 138 2 259 4 98 2 174 1 261 1 139 4 100 3 140 1 303 1 306 2 266 1 106 1 184 1 148 1 23 2 314 2 230 1 319 1 154 1 117 1 278 1 279 1 70 2 196 1 160 1 74 1 121 2 243 1 244 3 245 1 43 1 44 1 287 1 
2 1 290 1 45 1 213 1 298 1 97 6 264 1 143 2 224 1 145 1 107 1 315 1 152 1 188 3 69 1 158 2 238 1 118 1 198 1 75 1 200 2 163 3 204 1 165 1 40 2 247 1 
248 1 2 2 290 2 213 2 8 1 9 3 134 1 216 1 136 2 97 14 58 1 143 4 265 2 145 11 104 1 269 1 107 2 315 2 152 11 229 1 188 6 189 1 158 1 238 2 198 1 200 1 75 1 163 8 328 3 165 4 40 2 330 1 128 1 
1 1 2 1 90 1 213 1 47 1 8 1 91 1 51 1 94 1 297 1 216 1 97 2 260 1 261 2 141 1 142 1 143 2 222 1 267 1 148 2 107 1 315 1 113 1 188 1 189 1 320 1 155 1 158 1 235 1 30 1 238 1 161 1 162 1 75 1 163 1 36 1 165 1 208 1 
2 3 1 2 90 3 8 1 92 1 97 20 261 3 260 2 265 2 104 2 267 1 107 3 113 1 188 10 189 1 28 1 30 2 198 3 200 4 123 2 204 1 36 3 40 8 208 2 290 3 45 1 213 3 47 2 51 1 50 2 297 1 216 1 134 4 298 1 136 2 142 1 143 6 224 1 145 7 61 1 148 3 315 3 152 7 66 2 320 2 69 1 155 1 234 2 158 2 235 2 238 3 324 2 161 3 326 1 162 2 75 3 163 10 165 7 247 1 
129 1 2 2 90 7 213 2 212 1 8 1 51 1 297 1 97 2 261 1 260 2 57 1 264 1 142 1 143 4 270 1 148 1 107 2 315 2 113 2 65 1 188 1 189 1 191 1 274 2 320 2 155 1 275 1 235 3 237 1 238 2 161 8 119 1 326 1 75 2 163 1 33 1 36 8 208 2 
0 1 210 1 2 1 290 1 291 1 213 1 51 1 297 1 216 1 136 1 97 3 261 1 143 2 265 1 145 1 104 1 107 1 148 1 315 1 152 1 188 2 155 1 238 1 198 1 200 1 75 1 163 1 165 1 40 1 
315 1 152 1 2 1 250 1 290 1 213 1 134 1 238 1 136 1 97 2 75 1 163 2 264 1 143 2 165 1 145 1 40 1 107 1 
315 1 152 1 2 1 188 2 213 1 214 1 238 1 97 2 198 1 200 1 75 1 264 1 143 2 165 1 145 1 104 1 40 1 107 1 
290 1 2 1 213 1 134 1 136 1 97 4 264 1 265 1 143 2 145 2 104 1 107 1 315 1 152 2 188 2 238 1 198 1 163 2 75 1 200 1 165 2 40 2 
315 1 152 1 2 1 250 1 290 1 213 1 134 1 238 1 136 1 97 2 119 1 75 1 163 2 143 2 165 1 145 1 40 1 107 1 
315 1 152 1 2 1 188 2 213 1 214 1 238 1 97 2 119 1 198 1 200 1 75 1 143 2 165 1 145 1 104 1 40 1 107 1 
290 1 2 1 213 1 134 1 136 1 97 4 265 1 143 2 145 2 104 1 107 1 315 1 152 2 188 2 238 1 119 1 198 1 163 2 75 1 200 1 165 2 40 2 
290 1 2 1 213 1 134 1 136 1 97 4 265 1 143 2 145 2 104 1 107 1 315 1 152 2 188 2 238 1 198 1 163 2 75 1 200 1 165 2 40 2 
1 1 2 1 90 1 213 1 47 1 8 1 97 2 260 1 261 1 143 2 148 1 107 1 315 1 113 1 188 1 189 1 320 1 158 1 235 1 30 1 238 1 161 1 162 1 163 1 75 1 123 1 36 1 208 1 
1 1 2 1 90 1 213 1 8 1 11 1 97 2 260 1 99 1 261 1 176 1 143 2 148 1 107 1 315 1 113 1 188 1 189 1 320 1 158 1 235 1 30 1 238 1 161 1 163 1 75 1 36 1 208 1 
290 1 2 1 213 1 216 1 134 1 136 1 97 4 265 1 143 2 145 2 104 1 107 1 315 1 152 2 188 2 238 1 198 1 163 2 75 1 200 1 165 2 40 2 
290 1 1 1 2 1 90 1 213 1 47 1 134 1 136 1 97 4 260 1 261 1 57 1 143 2 265 1 104 1 145 2 148 1 107 1 315 1 152 2 188 2 66 1 320 1 235 1 30 1 238 1 161 1 198 1 162 1 200 1 163 2 75 1 123 1 165 2 36 1 40 2 208 1 
0 1 2 1 290 1 291 1 213 1 51 1 297 1 134 1 216 1 136 1 97 3 261 1 143 2 265 1 104 1 145 1 107 1 148 1 108 1 315 1 152 1 188 1 155 1 238 1 198 1 75 1 163 2 165 1 40 1 
2 2 290 3 130 1 46 1 9 2 134 3 136 3 97 19 262 1 143 4 265 3 182 1 104 3 149 1 107 2 185 1 315 2 64 2 229 1 273 1 188 10 238 2 283 2 198 3 200 3 163 9 328 1 37 1 330 1 40 6 
2 3 290 3 9 2 134 2 136 3 97 26 262 1 18 1 143 6 265 3 182 1 104 2 149 2 107 3 185 1 315 3 64 4 273 2 229 2 188 12 322 2 71 1 238 3 283 1 198 2 200 2 163 14 203 1 328 2 206 1 37 1 40 4 333 1 83 1 
2 3 9 4 97 41 262 1 18 1 265 4 104 4 182 1 107 3 185 1 273 1 188 21 198 5 283 1 200 4 203 1 204 1 206 1 37 1 40 8 290 5 45 1 46 1 134 4 298 1 136 4 143 6 224 1 149 2 312 1 315 3 229 3 64 4 69 1 322 1 238 3 71 1 163 20 328 3 330 1 333 1 83 1 247 1 
2 4 290 5 45 1 46 1 9 4 134 3 298 1 136 4 97 38 262 1 18 1 143 8 265 4 224 1 182 1 104 3 149 2 107 4 312 1 185 1 315 4 64 4 229 3 273 1 188 18 69 1 322 2 71 1 238 4 283 1 198 4 200 4 163 20 204 1 203 1 328 3 206 1 37 1 330 1 40 7 333 1 247 1 83 1 
248 2 2 2 290 8 45 1 9 4 134 7 298 1 136 7 97 52 262 1 18 1 143 4 265 7 224 1 182 1 104 7 149 1 107 2 185 1 315 2 64 4 229 2 273 1 188 25 69 1 322 1 71 1 238 2 283 1 198 8 200 7 163 27 204 1 203 1 328 4 206 1 37 1 330 2 40 14 333 1 247 1 83 1 
199 1 87 1 124 1 327 1 67 1 126 1 26 1 22 1 209 1 151 1 
296 1 116 1 
199 1 87 1 242 1 181 1 124 1 327 1 126 1 26 1 281 1 
87 1 289 1 131 1 67 1 26 1 13 2 139 1 199 1 122 1 101 1 76 1 32 1 327 1 124 1 126 1 244 1 22 1 151 1 
87 1 289 1 131 1 67 1 26 1 13 2 139 1 199 1 122 1 101 1 76 1 32 1 327 1 124 1 126 1 244 1 22 1 151 1 
87 1 289 1 131 1 67 1 26 1 13 2 139 1 199 1 122 1 101 1 76 1 32 1 327 1 124 1 126 1 244 1 22 1 151 1 
16 1 93 1 156 1 
16 1 93 1 156 1 
231 1 218 1 
231 1 156 1 218 1 
202 1 39 1 
87 1 131 1 255 1 296 1 51 2 297 2 13 1 261 2 139 1 101 1 148 2 109 1 24 1 26 1 192 1 155 2 116 1 158 1 236 1 240 1 199 1 32 1 202 1 124 1 327 1 126 1 39 1 
16 1 93 1 
231 1 156 1 218 1 
2 1 90 2 213 1 8 1 51 2 216 1 97 2 260 1 261 2 307 1 143 2 148 2 311 1 107 1 315 1 188 1 189 1 320 1 274 2 275 1 235 1 237 1 238 1 73 1 161 2 120 1 75 1 163 1 286 1 36 2 208 1 
90 2 7 2 233 1 293 1 277 1 161 2 301 1 260 1 326 1 302 1 263 1 57 1 308 1 36 2 20 1 208 1 268 1 42 1 62 1 
90 1 7 2 233 1 293 1 277 1 161 1 301 1 260 1 326 1 302 1 263 1 308 1 36 1 208 1 42 1 62 1 228 1 
113 1 90 1 212 1 320 1 235 1 29 1 161 1 300 1 260 1 263 1 33 1 36 1 208 1 268 1 
90 1 7 2 233 1 293 1 277 1 161 1 301 1 260 1 326 1 302 1 263 1 308 1 36 1 20 1 208 1 268 1 42 1 62 1 
201 1 
2 1 1 1 291 2 90 1 213 1 47 1 8 1 51 2 297 2 54 1 97 1 261 3 260 1 143 2 107 1 148 3 310 1 315 1 113 1 188 1 320 1 155 2 158 1 235 1 238 1 30 1 161 1 162 1 75 1 123 1 36 1 208 1 
318 1 321 2 27 1 279 1 278 1 160 1 138 4 174 2 100 2 204 1 35 2 244 4 266 1 147 2 43 1 
100 1 174 1 244 1 278 1 323 1 288 1 118 1 
272 1 251 1 131 1 321 1 279 1 278 1 160 1 137 1 138 1 100 1 139 1 174 1 121 1 17 1 244 2 266 1 43 1 
290 1 1 1 88 1 90 1 131 2 133 1 215 1 217 1 136 1 138 6 137 2 174 3 139 2 260 2 175 1 265 1 104 1 105 1 266 2 147 3 106 1 111 1 110 1 113 1 115 1 320 1 321 3 27 1 279 2 235 4 278 4 324 1 160 2 161 1 198 1 121 1 79 1 244 3 35 3 36 1 80 2 208 1 43 2 
290 2 131 1 9 1 136 2 137 1 138 6 139 1 174 5 100 2 18 1 265 2 266 2 104 2 147 5 229 1 316 1 115 2 318 1 27 1 321 3 278 8 279 2 71 1 160 2 282 1 198 2 121 1 125 1 328 1 35 5 244 5 206 1 333 1 43 2 83 1 
290 2 45 1 291 1 131 1 51 1 297 1 298 1 258 1 54 1 261 1 139 1 174 2 220 1 266 1 146 1 148 1 150 1 115 2 69 1 68 1 155 1 279 1 278 2 160 1 198 1 125 1 245 1 43 1 
323 1 279 1 278 1 160 1 174 1 100 1 244 1 266 1 43 1 288 1 
290 2 115 2 321 5 278 5 324 1 136 2 138 10 174 5 198 2 125 1 265 2 35 5 244 5 104 2 147 5 
100 1 139 1 121 1 131 1 244 1 137 1 
90 4 131 3 212 1 254 1 170 1 52 1 12 2 137 4 260 1 174 2 139 3 266 2 113 2 318 2 320 1 27 2 235 1 279 2 278 2 160 1 72 1 161 4 121 2 329 1 33 1 36 4 331 1 208 1 43 2 
87 1 26 1 81 1 
87 1 202 1 153 1 67 1 26 1 
87 1 26 1 81 1 
87 1 26 1 81 1 
87 1 179 1 26 1 
87 1 179 1 26 1 
87 1 179 1 26 1 
87 1 26 1 
199 1 124 1 
315 2 290 1 2 2 45 1 188 4 69 1 134 1 322 1 298 1 238 2 97 8 198 1 163 4 200 2 204 1 143 4 224 1 40 3 107 2 247 1 
198 1 290 1 163 3 200 2 45 1 188 3 204 1 69 1 224 1 40 2 298 1 97 6 247 1 118 1 
315 1 2 1 290 1 188 2 25 1 134 1 238 1 136 1 97 4 198 1 200 1 163 2 143 2 265 1 104 1 40 2 107 1 
290 1 229 1 188 4 9 2 134 1 136 1 97 7 198 1 200 1 163 3 328 1 265 1 104 1 330 1 40 2 
248 1 290 3 2 2 45 2 9 2 134 4 298 2 136 2 97 23 58 1 265 2 143 4 224 1 104 2 107 2 315 2 188 12 69 1 193 1 322 2 238 2 198 3 163 11 200 5 204 1 328 2 40 9 330 1 247 1 
188 1 9 1 97 1 
163 1 328 1 97 1 
315 1 2 1 290 1 188 3 25 1 134 1 238 1 324 1 136 1 97 6 198 1 163 3 200 2 143 2 265 1 104 1 40 3 107 1 
2 1 290 2 9 1 134 1 136 2 97 12 18 1 143 2 265 2 182 1 104 2 107 1 315 1 229 1 188 6 238 1 71 1 198 2 163 6 200 1 328 1 206 1 40 2 333 1 83 1 
198 1 290 1 200 1 45 1 163 3 188 3 69 1 40 2 134 1 298 1 97 6 
315 1 2 1 45 1 188 2 193 1 134 1 322 1 298 1 238 1 97 3 163 1 200 1 143 2 224 1 40 2 107 1 247 1 
315 1 2 1 290 2 45 2 188 5 69 1 134 2 298 2 238 1 97 10 198 2 200 3 163 5 143 2 182 1 40 5 107 1 150 1 
315 1 2 1 290 1 134 1 238 1 136 1 97 2 163 2 143 2 182 1 40 1 107 1 
315 1 2 1 290 1 188 2 134 1 238 1 136 1 97 4 198 1 200 1 163 2 143 2 265 1 104 1 182 1 40 2 107 1 
315 3 2 3 45 1 188 2 46 1 193 1 322 1 134 1 298 1 238 3 97 3 200 1 163 1 143 6 182 1 40 2 107 3 
2 5 290 5 45 3 46 1 9 4 134 5 298 3 136 3 173 1 97 34 143 10 265 3 224 1 182 1 104 3 183 1 226 1 107 5 315 5 229 1 188 18 25 1 69 2 193 1 322 2 238 5 198 5 163 16 200 7 204 1 328 3 330 1 40 12 247 1 
290 1 2 1 45 1 9 1 298 1 97 8 18 1 143 2 182 1 224 1 107 1 315 1 229 1 188 4 69 1 238 1 198 1 163 4 200 2 204 1 328 1 40 2 247 1 
2 2 290 2 45 1 9 2 134 1 298 1 136 1 97 11 18 1 143 4 265 1 224 1 182 1 107 2 315 2 229 1 188 5 25 1 69 1 238 2 198 1 200 2 163 6 204 1 328 1 330 1 40 3 247 1 
2 3 290 3 45 1 9 1 134 1 298 1 136 2 97 19 18 1 143 6 265 2 224 1 182 1 104 2 107 3 315 3 229 1 188 10 25 1 69 1 322 1 71 1 238 3 198 3 163 9 200 3 204 1 328 1 206 1 40 4 333 1 247 1 83 1 
2 3 290 3 45 1 9 1 134 2 298 1 136 2 97 17 18 1 143 6 265 2 224 1 182 1 104 1 107 3 315 3 229 1 188 7 25 1 69 1 322 1 238 3 71 1 198 2 163 10 200 3 204 1 328 1 206 1 40 5 333 1 247 1 83 1 
290 1 2 1 45 1 9 1 298 1 97 8 18 1 143 2 182 1 224 1 107 1 315 1 229 1 188 4 69 1 238 1 198 1 163 4 200 2 204 1 328 1 40 2 247 1 
2 1 290 2 9 1 134 1 136 2 97 12 18 1 143 2 265 2 182 1 104 2 107 1 315 1 229 1 188 6 238 1 71 1 198 2 163 6 200 1 328 1 206 1 40 2 333 1 83 1 
2 4 290 3 45 1 9 1 134 2 298 1 136 2 97 18 18 1 143 8 265 2 224 1 182 1 104 1 107 4 315 4 229 1 188 8 25 1 69 1 322 2 71 1 238 4 198 2 163 10 200 3 204 1 328 1 206 1 40 5 333 1 247 1 83 1 
2 4 290 3 46 1 9 1 134 3 136 3 97 16 18 1 143 8 265 3 182 1 104 2 107 4 315 4 229 1 188 7 322 2 71 1 238 4 198 2 163 9 200 3 328 1 206 1 40 6 333 1 83 1 
290 1 45 3 188 4 69 1 134 3 298 3 97 7 198 1 200 3 163 3 224 1 40 6 247 2 
2 4 290 3 45 1 46 1 9 1 134 1 298 1 136 2 97 18 18 1 143 8 265 2 224 1 182 1 104 1 107 4 315 4 229 1 188 8 69 1 322 2 71 1 238 4 198 2 163 10 200 3 204 1 328 1 206 1 40 4 333 1 247 1 83 1 
261 1 78 1 171 1 51 1 158 1 148 1 44 1 
317 1 171 1 51 1 158 1 261 1 56 1 102 1 78 1 144 1 309 1 148 1 44 1 
260 1 113 1 90 1 212 1 33 1 320 1 36 1 208 1 235 1 118 1 161 1 
1 1 113 1 90 1 47 1 320 1 155 1 51 1 297 1 158 1 235 1 30 1 161 1 260 1 261 2 142 1 36 1 208 1 148 2 
1 2 90 1 4 1 47 1 51 2 297 1 12 1 261 2 260 1 15 1 142 1 148 2 320 2 155 2 158 1 235 3 30 1 161 1 239 1 36 1 245 1 208 1 287 1 
211 1 1 2 90 2 4 1 51 2 11 1 297 1 12 1 261 2 260 1 15 1 142 1 148 2 320 2 155 2 158 1 235 3 30 1 161 2 239 1 36 2 245 1 208 1 287 1 
1 1 291 1 90 1 131 2 51 1 297 1 257 1 12 1 54 1 258 1 217 1 137 1 261 1 139 2 260 1 100 1 15 1 146 1 106 1 148 1 320 1 68 1 155 1 235 4 161 1 239 1 244 1 245 1 36 1 80 1 208 1 166 1 
1 1 291 1 90 1 131 2 51 1 297 1 133 1 12 1 54 1 258 1 217 1 137 1 261 1 139 2 260 1 100 1 15 1 146 1 106 1 148 1 320 1 68 1 155 1 235 4 161 1 239 1 244 1 245 1 36 1 80 1 208 1 
260 1 129 1 90 1 36 1 208 1 161 1 
129 1 113 2 1 1 65 1 90 6 274 1 191 1 320 2 295 1 215 1 235 3 237 1 161 7 260 3 326 1 57 1 205 1 36 7 41 1 208 2 270 1 
2 2 1 1 90 1 97 6 261 2 260 1 107 2 188 3 30 1 120 1 198 1 200 2 123 1 204 1 36 1 40 2 208 1 290 1 45 1 213 2 47 1 50 1 51 1 297 1 216 1 298 1 57 1 142 1 143 4 224 1 145 1 148 2 315 2 152 1 66 1 320 1 69 1 155 1 235 1 158 2 238 2 161 1 162 1 75 2 163 3 165 1 247 1 
88 1 90 1 255 1 258 1 174 5 100 2 261 1 175 1 266 2 106 1 113 1 115 2 279 2 278 4 198 2 121 1 125 1 36 1 43 2 288 1 290 2 45 1 291 1 131 3 51 1 297 1 133 1 217 1 298 1 54 1 137 2 139 3 146 1 148 1 150 1 69 1 68 1 155 1 235 2 323 1 160 2 161 1 79 1 244 2 245 1 80 1 331 1 
111 1 129 1 1 1 90 2 320 1 215 1 217 1 235 2 161 2 260 2 57 1 36 2 208 1 
211 1 113 1 90 4 232 1 212 1 320 1 235 1 161 4 260 1 57 1 33 1 36 4 208 1 
1 1 90 2 320 1 92 1 12 1 235 1 161 2 260 2 77 1 205 1 36 2 225 1 41 1 208 1 
260 1 113 1 90 1 7 1 308 1 36 1 277 1 208 1 301 1 161 1 
90 2 320 1 235 1 237 1 161 2 73 1 260 1 326 1 57 1 36 2 208 1 
113 1 90 4 232 1 212 1 320 2 191 1 12 1 235 3 237 1 161 5 260 2 57 1 33 1 36 5 208 2 270 1 
113 1 90 4 232 1 212 1 292 1 320 2 191 1 12 1 235 3 237 1 161 5 260 2 57 1 33 1 36 5 208 2 
1 1 113 1 90 1 320 1 155 1 51 1 297 1 11 1 158 1 235 1 30 1 161 1 260 1 261 2 142 1 36 1 208 1 148 2 
1 1 90 1 320 1 295 1 12 1 215 1 235 1 161 1 260 2 205 1 36 1 41 1 208 1 
112 1 31 1 164 1 127 1 158 1 
291 1 4 1 131 2 255 1 10 1 51 1 297 1 54 1 258 1 96 1 261 1 139 2 100 1 140 1 178 1 55 1 146 1 106 1 148 1 112 1 68 1 155 1 31 1 164 1 127 1 244 1 245 2 287 1 
112 1 51 1 261 1 307 1 286 1 164 1 127 1 311 1 148 1 
55 1 127 1 96 1 

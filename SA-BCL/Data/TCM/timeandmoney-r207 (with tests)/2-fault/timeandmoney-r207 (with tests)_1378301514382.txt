#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (163,294) 316 (145,189) (145,189) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (163,294) 316 (145,189) (145,189) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (163,294) 316 (145,189) (145,189) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (163,294) 316 (145,189) (145,189) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (310,341) 209 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (195,301) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (124,183,297) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (195,301) (195,301) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 206 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 206 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 321 238 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (310,341) (310,341) (188,362) 93 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (310,341) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 144 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (310,341) (310,341) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (195,301) (195,301) 91 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (310,341) 209 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 55 (211,216) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 55 (211,216) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 55 (151,228) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 55 (151,228) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 67 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 1 145 1 170 1 294 1 316 1 189 1 54 1 79 1 234 1 70 1 14 1 
74 1 145 1 170 1 294 1 316 1 189 1 54 1 79 1 234 1 70 1 14 1 
74 1 145 1 170 1 294 1 316 1 189 1 54 1 79 1 234 1 70 1 14 1 
74 1 145 1 170 1 294 1 316 1 189 1 54 1 79 1 234 1 70 1 14 1 
38 1 162 1 84 3 170 4 1 1 111 1 234 1 79 4 328 1 219 1 21 1 178 3 339 2 37 1 275 1 70 1 318 2 14 1 
38 1 133 1 74 1 162 1 84 1 170 2 232 1 111 1 234 1 79 2 54 1 285 1 251 1 275 1 70 1 14 1 
38 1 84 2 170 3 163 1 234 2 79 3 54 1 21 1 178 1 275 1 70 1 318 1 14 2 
170 9 135 1 1 1 111 1 54 1 79 9 219 1 274 1 37 1 275 1 318 4 14 2 38 1 162 1 84 5 163 1 234 2 328 1 104 1 21 3 178 7 339 2 70 1 108 1 
170 9 135 1 1 1 111 1 54 1 79 9 219 1 274 1 37 1 275 1 318 4 14 2 38 1 162 1 84 5 163 1 234 2 328 1 104 1 21 3 178 7 339 2 70 1 108 1 
59 1 218 1 206 1 
226 2 61 1 218 1 
192 2 150 1 92 2 
83 1 15 2 254 1 341 1 304 2 20 2 192 1 336 1 150 1 209 1 23 1 92 1 
192 1 150 1 195 1 92 1 
327 1 218 1 124 1 332 1 59 1 139 1 6 1 249 1 199 1 350 1 297 1 81 1 183 1 119 1 
192 1 92 1 183 1 
297 1 43 1 299 1 288 1 332 1 
59 1 204 1 218 1 297 2 299 1 288 1 236 1 332 2 
297 1 288 1 332 1 
192 1 301 1 150 1 195 1 297 1 92 1 299 1 332 1 
218 1 
59 1 204 1 218 1 191 1 297 2 299 1 288 1 332 2 
277 2 41 1 203 2 204 1 66 1 218 1 332 5 59 1 57 1 125 1 89 1 272 1 152 1 297 5 90 1 36 1 299 2 229 2 288 2 
206 1 
53 1 266 1 34 1 139 1 192 1 363 1 350 1 92 1 81 1 119 1 
324 1 325 1 266 1 34 1 315 1 139 1 192 1 335 2 106 1 249 1 350 1 92 4 81 1 119 1 
92 1 
15 1 254 1 335 1 325 1 304 1 92 1 20 1 
192 1 335 1 92 3 
92 1 
192 1 53 1 266 1 92 1 
192 1 335 1 325 1 266 1 92 2 
324 1 34 1 139 1 335 1 249 1 350 1 92 1 81 1 119 1 
335 1 325 1 92 1 
192 1 266 1 92 1 
15 1 254 1 304 1 20 1 
15 1 254 1 304 1 20 1 
114 1 58 1 233 1 117 1 149 1 217 1 44 2 320 1 
207 1 92 1 
208 1 242 1 
208 1 242 1 
113 1 269 1 
113 1 269 1 
113 1 269 1 
208 1 51 1 242 1 
208 1 51 1 242 1 
208 1 307 1 242 1 
208 2 16 1 247 1 242 2 113 1 269 1 
208 1 51 1 242 1 
208 1 242 1 94 1 
208 1 242 1 94 1 
208 1 242 1 94 1 
73 1 39 1 0 1 101 1 19 1 357 1 360 1 332 1 361 1 116 1 161 1 140 1 208 1 297 1 92 2 307 1 12 1 242 1 143 1 
121 1 0 2 323 1 157 2 101 2 218 1 18 1 247 1 292 1 332 2 334 1 361 3 116 1 161 2 140 2 208 2 10 1 297 2 242 2 
162 1 1 1 111 1 
162 1 232 1 111 1 
354 1 162 3 22 1 1 2 232 1 221 1 
115 1 354 1 162 2 22 1 1 1 232 1 
354 2 162 2 1 1 22 1 232 1 
291 1 134 1 156 1 218 2 4 1 137 2 57 2 59 1 226 3 142 1 198 1 61 1 297 5 36 1 299 4 229 1 12 1 322 1 277 1 164 2 203 1 204 1 66 3 357 1 19 1 331 2 332 5 126 1 288 1 243 1 52 1 72 1 
291 3 134 1 218 5 57 6 59 1 194 1 226 9 142 2 198 3 61 3 297 9 299 7 36 1 12 4 229 2 322 3 277 2 147 1 164 6 203 2 204 1 279 1 100 1 326 1 66 8 43 5 331 6 332 9 283 5 126 3 24 1 90 1 288 6 243 3 72 2 
156 1 291 1 218 3 137 1 59 1 57 2 142 1 226 4 198 1 61 2 297 3 299 2 229 1 12 1 322 1 277 1 164 2 203 1 66 3 331 2 332 3 126 1 90 1 243 1 52 1 72 1 
156 1 291 2 218 4 137 2 59 1 57 4 226 7 142 1 198 2 61 3 297 4 299 3 229 1 12 2 322 2 277 1 164 4 203 1 279 1 100 1 66 5 331 4 332 4 126 2 24 1 90 1 243 2 52 1 72 1 
112 1 68 1 206 1 
256 1 112 1 
214 1 
278 1 112 1 96 1 
186 1 112 1 
112 1 96 1 
278 1 112 3 68 2 96 1 129 1 102 1 
322 1 263 4 276 1 291 1 302 2 165 1 280 3 78 2 205 1 258 1 333 1 259 1 46 7 7 1 196 1 250 1 71 3 
322 1 263 4 276 1 291 1 302 2 165 1 280 3 78 2 205 1 258 1 333 1 259 1 46 7 7 1 196 1 250 1 71 3 
322 1 263 4 276 1 291 1 302 2 165 1 280 3 78 2 205 1 123 1 258 1 333 1 259 1 46 7 7 1 196 1 250 1 71 3 
263 16 155 1 309 1 291 4 185 1 171 3 313 1 78 5 7 1 117 1 196 2 198 3 250 5 319 4 320 1 276 1 322 4 146 1 233 1 302 3 165 1 149 1 280 15 205 2 44 2 258 2 333 2 259 1 46 31 126 3 127 1 286 1 243 3 71 10 
263 5 291 1 185 1 78 3 7 1 117 2 196 1 250 1 252 1 320 2 322 1 276 1 233 2 302 2 149 2 205 1 280 4 44 4 86 1 258 1 333 1 259 1 46 9 71 4 
28 1 244 1 1 1 170 2 312 1 187 1 111 1 79 2 54 1 160 1 221 1 275 1 120 1 14 1 38 1 15 1 162 2 84 1 99 1 232 1 304 1 234 1 281 1 20 1 45 1 178 1 25 1 287 1 70 1 169 1 
28 1 244 1 1 1 170 3 187 1 111 1 77 1 79 3 54 1 221 1 295 1 275 1 120 1 14 1 38 1 15 1 162 2 84 1 99 1 232 1 304 1 234 1 281 1 20 1 88 1 45 1 178 2 25 1 287 1 169 1 
28 1 244 1 170 2 1 1 187 1 77 1 111 1 54 1 79 2 221 1 295 1 275 1 120 1 38 1 15 1 162 2 84 1 232 1 304 1 281 1 20 1 45 1 178 2 25 1 169 1 
170 1 264 1 187 1 112 1 79 1 54 2 96 1 97 1 56 1 14 1 120 2 15 1 254 1 304 1 234 1 257 1 330 1 20 1 45 1 88 1 25 2 182 1 169 2 
28 1 244 1 1 1 170 1 312 1 187 1 111 1 77 1 79 1 54 1 221 1 120 1 14 1 15 1 162 2 99 1 232 1 304 1 234 1 281 1 20 1 45 1 25 1 287 1 70 1 169 1 
213 1 
215 1 311 1 264 1 218 2 96 1 136 2 59 1 57 2 139 1 6 1 60 4 223 2 225 1 226 2 61 2 64 2 227 1 229 1 15 2 277 1 175 1 66 2 327 1 330 1 17 1 332 5 20 2 337 2 69 1 288 6 183 1 289 1 72 1 154 2 110 2 187 1 342 1 112 1 345 1 80 1 249 1 199 1 297 5 350 1 36 1 81 1 119 1 351 1 254 2 203 1 204 3 304 2 124 1 45 1 306 2 
175 1 311 1 204 1 327 1 191 1 124 1 332 3 139 1 345 1 6 1 60 2 80 1 249 1 199 1 297 3 69 1 350 1 64 1 81 1 288 2 183 1 119 1 
311 1 218 1 191 1 59 1 139 1 345 1 6 1 60 3 223 1 80 1 249 1 199 1 350 1 297 3 81 1 119 1 175 1 204 1 327 1 124 1 332 3 69 1 288 1 183 1 
154 1 311 1 191 1 218 1 59 1 139 1 345 1 6 1 60 3 223 1 80 1 249 1 199 1 350 1 297 3 64 1 81 1 119 1 175 1 204 1 327 1 124 1 332 3 69 1 183 1 288 2 
311 1 218 5 136 2 59 5 57 1 139 1 6 1 60 6 223 4 61 2 64 4 229 1 175 1 277 1 327 1 66 1 17 1 332 5 337 2 69 1 183 1 288 7 154 4 110 2 75 1 342 1 191 1 345 1 35 1 80 1 249 1 349 1 199 1 297 5 350 1 36 1 81 1 119 1 203 1 204 3 85 1 124 1 306 2 130 1 
311 1 218 2 136 2 57 1 59 1 139 1 6 1 60 4 223 2 226 2 61 2 64 2 229 1 175 1 277 1 327 1 66 1 17 1 332 4 337 2 69 1 183 1 288 4 289 1 154 2 110 2 342 1 345 1 80 1 249 1 199 1 350 1 297 4 36 1 81 1 119 1 203 1 204 2 124 1 306 2 
154 2 110 2 75 1 311 1 342 1 218 1 136 2 59 1 57 1 139 1 345 1 6 1 60 4 223 2 80 1 349 1 249 1 199 1 61 2 350 1 297 4 64 2 36 1 81 1 229 1 119 1 175 1 277 1 203 1 204 2 66 1 327 1 17 1 124 1 332 4 337 2 306 2 69 1 130 1 288 4 183 1 
154 2 110 2 75 1 311 1 342 1 218 1 136 2 59 1 57 1 139 1 345 1 6 1 60 4 223 2 80 1 349 1 249 1 199 1 61 2 350 1 297 4 64 2 36 1 81 1 229 1 119 1 175 1 277 1 203 1 204 2 66 1 327 1 17 1 124 1 332 4 337 2 306 2 69 1 130 1 288 4 183 1 
154 2 110 2 311 1 3 2 265 2 342 1 218 1 136 2 59 1 57 1 139 1 345 1 6 1 60 4 223 2 80 1 226 2 349 1 249 1 199 1 350 1 297 4 64 2 36 1 81 1 229 1 119 1 201 1 175 1 277 1 203 1 204 2 66 1 327 1 124 1 332 4 167 1 69 1 288 4 183 1 212 1 
154 3 110 2 75 1 311 1 342 1 218 1 136 2 59 1 57 1 139 1 345 1 6 1 60 5 223 3 80 1 349 1 249 1 199 1 61 2 350 1 297 4 36 1 64 3 81 1 229 1 119 1 277 1 175 1 203 1 204 2 85 1 66 1 327 1 17 1 124 1 332 4 337 2 306 2 69 1 130 1 183 1 288 5 
154 3 110 2 75 1 311 1 342 1 218 1 136 2 59 1 57 1 139 1 345 1 6 1 60 5 223 3 80 1 349 1 249 1 199 1 61 2 350 1 297 4 36 1 64 3 81 1 229 1 119 1 277 1 175 1 203 1 204 2 85 1 66 1 327 1 17 1 124 1 332 4 337 2 306 2 69 1 130 1 183 1 288 5 
154 2 110 2 311 1 3 2 265 2 342 1 218 1 136 2 59 1 57 1 139 1 345 1 6 1 60 4 223 2 80 1 226 2 249 1 199 1 297 4 350 1 64 2 36 1 81 1 229 1 119 1 277 1 175 1 203 1 204 2 66 1 327 1 124 1 332 4 167 1 69 1 288 4 183 1 289 1 
263 2 276 1 291 1 233 1 302 1 78 1 217 1 149 1 44 2 206 1 258 1 333 1 259 1 46 2 58 1 114 1 7 1 117 1 71 1 320 1 
263 1 171 1 233 1 217 1 149 1 280 1 44 2 46 2 114 1 238 1 197 1 117 1 319 1 320 1 321 1 
340 1 263 1 233 1 325 1 280 1 217 1 149 1 44 2 46 2 114 1 335 1 8 1 197 1 117 1 62 1 92 1 241 1 320 1 
15 1 254 1 310 1 341 1 233 1 325 1 280 1 304 1 217 1 149 1 44 2 20 1 46 1 114 1 335 1 362 1 197 1 117 1 92 1 241 1 93 1 320 1 
15 1 263 1 254 1 233 1 217 1 149 1 304 1 44 2 246 1 20 1 46 1 114 1 8 1 117 1 273 1 320 1 
263 1 291 1 217 1 266 1 114 1 192 1 117 1 197 1 198 1 320 1 322 1 233 1 148 1 149 1 280 1 44 2 46 2 126 1 92 1 243 1 
263 1 291 1 233 1 217 1 149 1 44 2 46 1 58 1 114 1 260 1 117 1 198 1 320 1 
322 1 233 1 217 1 149 1 280 1 44 2 46 1 58 1 114 1 126 1 117 1 320 1 132 1 
322 1 263 1 291 1 233 1 280 1 217 1 149 1 44 2 46 2 58 1 114 1 126 1 117 1 198 1 243 1 320 1 
263 1 291 1 233 1 217 1 149 1 44 2 246 1 46 1 114 1 260 1 117 1 198 1 320 1 
322 1 233 1 217 1 149 1 280 1 44 2 246 1 46 1 114 1 126 1 117 1 320 1 132 1 
322 1 263 1 291 1 233 1 280 1 217 1 149 1 44 2 246 1 46 2 114 1 126 1 117 1 198 1 243 1 320 1 
322 1 263 1 291 1 233 1 280 1 217 1 149 1 44 2 114 1 46 2 126 1 117 1 198 1 243 1 320 1 
15 1 254 1 341 1 304 1 20 1 
15 1 254 1 304 1 144 1 20 1 
322 1 263 1 291 1 233 1 280 1 217 1 149 1 44 2 46 2 114 1 126 1 197 1 117 1 198 1 243 1 320 1 
15 1 310 1 341 1 304 1 160 1 20 1 
263 1 291 1 217 1 266 1 114 1 192 1 117 1 197 1 198 1 320 1 253 1 322 1 233 1 149 1 280 1 44 2 46 2 126 1 92 1 243 1 
263 9 155 1 291 3 245 1 171 1 2 1 78 3 267 1 293 2 270 2 347 1 117 2 198 3 63 1 250 3 298 1 319 2 320 2 322 3 233 2 149 2 280 10 44 4 86 1 46 19 126 3 181 1 286 1 243 3 71 6 
263 14 291 3 245 2 185 2 171 2 2 1 78 2 293 4 270 1 348 1 117 3 198 3 250 2 63 1 298 2 319 2 320 3 322 2 202 1 233 3 280 12 149 3 44 6 86 1 46 26 237 1 47 1 105 1 126 2 181 1 286 2 184 1 71 4 243 3 
263 20 155 1 291 5 245 1 185 1 171 3 2 1 78 4 293 4 270 1 7 1 347 1 348 1 117 3 198 4 63 1 250 4 298 2 319 4 320 3 276 1 322 5 202 1 233 3 302 1 149 3 280 21 44 6 86 1 258 1 333 1 259 1 46 41 237 1 47 1 105 1 126 4 239 1 181 1 286 3 184 1 243 4 71 8 
263 20 155 1 291 5 245 1 185 2 171 3 2 1 78 4 293 4 270 1 7 1 347 1 348 1 117 4 198 4 63 1 250 3 298 2 319 4 320 4 276 1 322 4 202 1 233 4 302 1 149 4 280 18 44 8 86 1 258 1 333 1 259 1 46 38 237 1 47 1 105 1 126 3 239 1 181 1 286 3 184 1 243 4 71 7 
263 27 155 2 291 8 245 1 185 1 171 4 2 1 78 7 293 4 270 1 7 1 348 1 117 2 198 7 63 1 250 7 300 2 298 1 319 4 320 2 276 1 322 8 202 1 233 2 302 1 149 2 280 25 44 4 86 1 258 1 333 1 259 1 46 52 237 1 47 1 105 1 126 7 181 1 286 2 184 1 243 7 71 14 
0 1 323 1 140 1 161 1 208 1 101 1 261 1 247 1 242 1 334 1 
307 1 143 1 
0 1 140 1 161 1 208 1 101 1 172 1 296 1 358 1 242 1 
355 1 51 1 
16 1 27 1 94 1 
0 1 323 1 157 1 101 1 218 1 18 1 247 1 292 1 332 1 334 1 361 2 116 1 161 1 140 1 208 1 10 1 297 1 242 1 
0 1 323 1 157 1 101 1 218 1 18 1 247 1 292 1 332 1 334 1 361 2 116 1 161 1 140 1 208 1 10 1 297 1 242 1 
0 1 323 1 157 1 101 1 218 1 18 1 247 1 292 1 332 1 334 1 361 2 116 1 161 1 140 1 208 1 10 1 297 1 242 1 
355 1 16 1 51 1 
355 1 16 1 51 1 
27 1 94 1 
16 1 27 1 94 1 
73 1 360 1 
73 1 39 1 0 1 157 1 101 1 19 1 357 1 18 1 360 1 332 1 361 1 161 1 140 1 208 1 297 1 92 2 299 1 307 1 12 1 242 1 143 1 174 1 
263 1 187 1 112 1 217 1 32 1 96 1 114 1 139 2 8 1 197 1 117 1 273 1 350 2 231 1 119 2 320 1 83 2 15 2 255 1 233 1 304 2 149 1 280 1 44 2 20 2 45 1 46 2 338 1 179 1 107 1 241 1 
15 2 244 1 162 2 1 1 232 1 99 1 187 1 111 1 77 1 304 2 329 1 281 1 160 1 221 1 344 1 20 2 45 1 48 1 120 1 
15 1 262 1 244 1 162 2 1 1 232 1 99 1 187 1 111 1 77 1 304 1 329 1 281 1 221 1 20 1 45 1 120 1 
15 1 254 1 40 1 187 1 264 1 112 1 304 1 96 1 330 1 97 1 344 1 20 1 45 1 120 1 
15 1 244 1 162 2 1 1 232 1 99 1 187 1 111 1 77 1 304 1 329 1 281 1 221 1 344 1 20 1 45 1 48 1 120 1 
240 1 
59 1 57 1 41 1 152 1 66 1 218 1 206 1 
218 2 57 1 59 1 226 1 61 1 297 1 36 1 229 1 277 1 203 1 204 1 66 1 17 1 332 1 337 1 306 1 288 1 
308 2 216 2 96 3 218 8 220 1 59 2 57 8 226 12 61 6 230 2 229 4 15 3 322 2 277 4 278 3 66 9 102 1 331 6 332 5 103 2 20 3 152 1 68 2 288 5 243 2 72 2 291 2 31 1 186 2 188 2 187 3 158 2 112 10 160 1 193 2 346 2 199 2 198 2 297 5 36 4 351 1 254 1 164 6 41 1 203 4 256 3 204 3 304 3 359 1 45 4 87 2 126 2 168 1 364 1 
308 2 291 2 171 1 190 1 218 5 57 5 59 2 348 1 226 6 198 2 61 3 297 1 36 2 82 1 229 2 319 1 351 1 322 2 277 2 202 1 164 5 203 2 204 1 66 8 331 5 332 1 87 1 47 1 105 1 126 2 286 1 288 1 184 1 243 2 72 1 
308 2 322 1 277 1 301 1 291 1 203 1 66 2 258 1 332 1 333 1 259 1 57 1 192 1 150 1 195 1 297 1 92 1 36 1 91 1 130 1 229 1 
277 1 203 1 41 1 66 1 218 1 57 1 59 1 152 1 36 1 229 1 
308 2 322 2 291 2 164 5 66 5 218 5 331 5 103 1 87 1 57 5 126 2 226 10 198 2 61 5 243 2 
59 1 204 1 218 1 297 1 288 1 332 1 
109 1 215 1 187 1 264 1 112 1 96 1 220 1 57 2 225 1 297 3 36 1 229 2 351 2 15 4 277 2 254 2 203 2 204 2 66 2 304 4 330 1 282 1 332 3 20 4 45 1 90 1 364 2 288 4 72 2 
15 1 192 1 254 1 150 1 341 1 209 1 304 1 92 1 20 1 
277 1 164 2 203 1 302 1 66 1 218 4 331 2 57 2 59 2 226 4 61 2 36 1 229 1 72 1 351 1 
200 1 0 1 101 1 
200 1 0 1 101 1 
0 1 101 1 65 1 360 1 334 1 
200 1 0 1 101 1 
0 1 101 1 177 1 
0 1 101 1 177 1 
0 1 101 1 177 1 
0 1 101 1 
208 1 242 1 
322 1 263 4 276 1 291 1 185 1 233 2 302 1 280 4 78 2 149 2 44 4 258 1 333 1 259 1 46 8 7 1 117 2 250 1 71 3 320 2 
276 1 263 3 322 1 291 1 302 1 280 3 78 2 206 1 258 1 333 1 259 1 46 6 7 1 71 2 
322 1 263 2 291 1 233 1 78 1 280 2 149 1 44 2 222 1 46 4 126 1 117 1 198 1 250 1 71 2 243 1 320 1 
322 1 263 3 155 1 291 1 171 1 78 1 280 4 46 7 126 1 198 1 286 1 250 1 319 2 243 1 71 2 
263 11 155 1 290 1 291 3 185 2 171 2 78 5 7 1 117 2 198 2 250 4 300 1 319 2 321 1 320 2 276 1 322 3 233 2 302 1 280 12 149 2 44 4 258 2 333 2 259 1 46 23 126 2 71 9 243 2 
46 1 280 1 319 1 
46 1 263 1 171 1 
263 3 322 1 291 1 233 1 149 1 280 3 78 2 44 2 222 1 103 1 46 6 126 1 117 1 198 1 250 1 243 1 71 3 320 1 
263 6 291 2 171 1 78 1 348 1 117 1 198 2 250 1 319 1 320 1 322 2 202 1 233 1 280 6 149 1 44 2 86 1 46 12 47 1 105 1 126 2 286 1 243 2 71 2 184 1 
263 3 322 1 291 1 280 3 78 1 258 1 333 1 259 1 46 6 250 1 71 2 
263 1 276 1 290 1 185 1 233 1 78 1 280 2 149 1 44 2 258 1 333 1 46 3 7 1 117 1 250 1 71 2 320 1 
263 5 322 2 291 2 233 1 149 1 78 3 280 5 44 2 86 1 258 2 333 2 259 1 46 10 117 1 250 2 91 1 71 5 320 1 
263 2 291 1 233 1 149 1 44 2 86 1 46 2 117 1 198 1 250 1 71 1 320 1 
322 1 263 2 291 1 233 1 78 1 280 2 149 1 44 2 86 1 46 4 126 1 117 1 198 1 250 1 71 2 243 1 320 1 
263 1 290 1 185 1 233 3 280 2 149 3 78 1 44 6 86 1 258 1 333 1 46 3 347 1 117 3 250 1 71 2 320 3 
263 16 290 1 309 1 155 1 291 5 185 2 171 3 313 1 78 7 222 1 7 1 347 1 117 5 198 3 250 5 319 4 320 5 276 1 322 5 233 5 302 1 280 18 149 5 44 10 86 1 258 3 333 3 259 2 46 34 127 1 126 3 286 1 243 3 71 12 
263 4 291 1 171 1 78 2 7 1 117 1 319 1 320 1 322 1 276 1 233 1 302 1 280 4 149 1 44 2 86 1 258 1 333 1 259 1 46 8 47 1 286 1 71 2 
263 6 155 1 291 2 171 1 78 2 222 1 7 1 117 2 198 1 250 1 319 2 320 2 322 1 276 1 233 2 302 1 280 5 149 2 44 4 86 1 258 1 333 1 259 1 46 11 47 1 286 1 243 1 71 3 
263 9 291 3 185 1 171 1 78 3 222 1 7 1 348 1 117 3 198 2 250 1 319 1 320 3 276 1 322 3 202 1 233 3 302 1 280 10 149 3 44 6 86 1 258 1 333 1 259 1 46 19 47 1 105 1 126 2 286 1 184 1 243 2 71 4 
263 10 291 3 185 1 171 1 78 3 222 1 7 1 348 1 117 3 198 2 250 2 319 1 320 3 276 1 322 2 202 1 233 3 302 1 280 7 149 3 44 6 86 1 258 1 333 1 259 1 46 17 47 1 105 1 126 1 286 1 243 2 71 5 184 1 
263 4 291 1 171 1 78 2 7 1 117 1 319 1 320 1 322 1 276 1 233 1 302 1 280 4 149 1 44 2 86 1 258 1 333 1 259 1 46 8 47 1 286 1 71 2 
263 6 291 2 171 1 78 1 348 1 117 1 198 2 250 1 319 1 320 1 322 2 202 1 233 1 280 6 149 1 44 2 86 1 46 12 47 1 105 1 126 2 286 1 243 2 71 2 184 1 
263 10 291 3 185 2 171 1 78 3 222 1 7 1 348 1 117 4 198 2 250 2 319 1 320 4 276 1 322 2 202 1 233 4 302 1 280 8 149 4 44 8 86 1 258 1 333 1 259 1 46 18 47 1 105 1 126 1 286 1 184 1 243 2 71 5 
263 9 291 3 185 2 171 1 78 3 347 1 348 1 117 4 198 3 250 3 319 1 320 4 322 2 202 1 233 4 280 7 149 4 44 8 86 1 46 16 47 1 105 1 126 2 286 1 184 1 243 3 71 6 
322 1 276 1 263 3 291 1 280 4 78 3 258 3 333 3 259 1 46 7 7 2 250 3 71 6 
263 10 291 3 185 2 171 1 78 3 7 1 347 1 348 1 117 4 198 2 250 1 319 1 320 4 276 1 322 2 202 1 233 4 302 1 280 8 149 4 44 8 86 1 258 1 333 1 259 1 46 18 47 1 105 1 126 1 286 1 184 1 243 2 71 4 
139 1 324 1 249 1 363 1 350 1 317 1 119 1 
30 1 76 1 324 1 356 1 303 1 314 1 139 1 249 1 363 1 317 1 350 1 119 1 
45 1 15 1 254 1 187 1 264 1 112 1 304 1 96 1 330 1 206 1 20 1 
45 1 15 1 254 1 335 1 278 1 187 1 112 1 304 1 96 1 211 1 92 1 55 1 20 1 
45 1 15 1 335 1 278 1 187 1 112 1 304 1 96 1 211 1 92 1 364 1 55 1 20 1 
45 1 15 1 335 1 278 1 187 1 151 1 112 1 304 1 96 1 92 1 364 1 55 1 20 1 
186 1 187 1 112 4 173 1 96 1 218 1 5 1 59 1 193 1 199 1 297 2 228 1 15 3 254 1 278 1 256 1 304 3 332 2 20 3 45 1 68 1 288 1 364 1 
15 3 254 1 186 1 278 1 187 1 216 1 256 1 112 4 304 3 173 1 218 1 96 1 332 2 20 3 59 1 45 1 193 1 199 1 68 1 297 2 364 1 288 1 
45 1 15 1 224 1 187 1 304 1 20 1 
83 1 15 6 353 1 254 2 176 1 278 1 187 2 77 1 112 3 235 1 304 7 96 2 343 1 160 1 102 1 33 1 20 7 45 3 338 1 224 1 9 1 
335 1 92 1 
188 1 216 1 112 2 218 1 220 1 59 1 57 1 346 1 199 1 297 3 36 2 299 1 229 2 230 1 15 1 254 1 277 2 41 1 203 2 256 1 204 1 66 1 304 1 332 3 20 1 152 1 68 1 288 2 
15 2 278 1 187 1 112 2 304 2 96 1 160 1 102 1 20 2 45 2 224 1 68 1 168 1 
15 4 254 1 264 1 187 1 112 1 304 4 173 1 330 1 96 1 160 1 138 1 20 4 45 1 
15 2 353 1 176 1 278 1 187 1 42 1 112 1 304 2 96 1 166 1 20 2 45 2 364 1 118 1 
45 1 15 1 254 1 162 1 232 1 187 1 111 1 304 1 281 1 20 1 
45 1 15 2 338 1 187 1 77 1 112 1 179 1 304 2 96 1 160 1 20 2 
15 4 254 1 264 1 187 2 112 3 304 5 235 1 330 1 96 2 343 1 160 1 138 1 20 5 45 2 338 1 364 1 
15 4 254 1 264 1 187 2 112 3 304 5 235 1 330 1 96 2 160 1 138 1 20 5 45 2 338 1 141 1 364 1 
45 1 15 1 254 1 335 1 278 1 187 1 151 1 112 1 304 1 96 1 92 1 55 1 20 1 
15 1 353 1 176 1 278 1 187 1 112 1 304 1 96 1 102 1 20 1 45 2 9 1 364 1 
32 1 159 1 268 1 139 1 98 1 350 1 107 1 231 1 119 1 
98 1 153 1 67 1 
352 1 98 1 159 1 268 1 
352 1 122 1 98 1 153 1 297 1 159 1 299 1 268 1 332 1 67 1 
38 1 84 1 206 1 275 1 
38 1 84 1 170 1 79 1 234 1 275 1 14 1 
54 1 79 1 169 1 
38 1 84 1 170 3 305 1 234 1 79 3 248 1 251 2 70 1 275 1 14 1 365 1 
38 1 84 1 178 1 170 2 339 1 79 2 234 1 275 1 14 1 
162 1 84 1 170 1 1 1 111 1 234 1 79 1 219 1 70 1 318 1 14 1 
84 1 170 1 79 1 234 1 275 1 70 1 14 1 
38 1 170 1 79 1 234 1 275 2 70 1 14 1 
84 1 170 2 234 2 79 2 271 1 284 1 275 1 70 1 26 1 14 2 
38 1 84 2 170 3 135 1 234 1 79 3 104 1 21 1 178 2 275 1 70 1 318 1 14 1 
38 1 162 2 84 1 232 1 170 2 1 1 111 1 234 1 79 2 221 1 178 1 210 1 275 1 70 1 14 1 
38 1 84 2 170 4 234 2 79 4 21 1 178 2 339 1 37 1 275 1 70 1 318 1 14 2 
38 1 84 1 170 1 79 1 234 1 275 1 70 1 14 1 
38 2 84 3 170 4 79 4 234 1 21 1 248 1 178 2 251 1 275 2 318 1 13 1 365 1 14 1 
38 1 84 1 170 2 234 1 79 2 178 1 50 1 274 1 275 1 70 1 131 1 14 1 
38 1 84 1 170 3 234 1 79 3 248 2 49 1 251 2 70 1 275 1 365 1 14 1 
29 2 95 1 84 2 11 1 
170 1 180 1 79 1 234 1 70 1 14 1 
38 1 84 1 178 1 135 1 170 2 79 2 234 1 275 1 70 1 14 1 
128 1 
38 1 84 1 170 1 79 1 234 1 275 1 70 1 14 1 
38 1 84 1 170 3 135 1 234 1 79 3 178 1 251 1 70 1 275 1 14 1 
21 1 84 1 318 1 13 1 
84 1 275 1 

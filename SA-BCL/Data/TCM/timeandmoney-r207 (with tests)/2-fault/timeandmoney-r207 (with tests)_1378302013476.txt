#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
324 1 87 3 227 3 21 2 172 1 317 1 230 1 26 1 66 1 367 2 106 1 335 2 120 1 
227 9 53 1 100 1 21 2 317 4 342 1 205 1 230 1 26 3 367 5 27 1 106 1 32 2 324 1 239 1 87 9 241 1 36 2 216 1 296 1 172 2 66 6 271 2 248 1 225 1 335 2 311 2 120 1 
227 9 53 1 100 1 21 2 317 4 342 1 205 1 230 1 26 3 367 5 27 1 106 1 32 2 324 1 239 1 87 9 241 1 36 2 216 1 296 1 172 2 66 6 271 2 248 1 225 1 335 2 311 2 120 1 
227 10 53 1 100 1 21 2 317 5 342 1 205 1 230 1 26 4 367 6 27 1 106 1 32 2 324 1 239 1 87 10 241 1 36 2 216 1 296 1 172 2 66 7 271 2 248 1 225 1 335 2 311 2 120 1 
227 7 53 1 100 1 21 2 317 3 342 1 205 1 230 1 26 2 367 4 27 1 106 1 32 2 324 1 87 7 241 1 36 2 216 1 296 1 172 2 66 4 271 1 248 1 225 1 335 2 311 2 120 1 
324 1 239 1 87 4 227 4 36 1 216 1 21 1 317 2 26 1 66 3 367 3 27 1 271 2 106 1 335 1 311 1 32 1 120 1 
324 1 87 2 227 2 241 1 36 1 134 1 21 1 172 1 43 1 367 1 224 1 225 1 106 1 335 1 311 1 120 1 
227 9 53 1 21 2 317 4 230 1 26 3 367 5 27 1 106 1 32 1 324 1 239 1 87 9 36 1 216 1 296 1 172 1 301 1 66 7 271 2 119 1 335 2 311 1 120 1 
227 9 53 1 21 2 317 4 230 1 26 3 367 5 27 1 106 1 32 1 324 1 239 1 87 9 36 1 216 1 296 1 172 1 301 1 66 7 271 2 119 1 335 2 311 1 120 1 
59 1 164 1 262 1 10 1 171 1 221 1 146 1 365 1 246 1 160 1 302 1 368 1 250 1 57 1 
371 1 
262 2 215 1 179 1 371 1 11 1 221 1 174 1 146 2 
153 1 274 1 97 1 262 5 11 2 221 2 190 1 23 1 174 1 146 5 79 2 285 1 304 2 179 1 371 1 83 1 381 1 107 2 310 1 
319 1 179 1 371 1 
67 1 162 2 371 1 
59 2 164 2 302 2 160 2 10 2 171 2 372 1 365 1 
121 1 72 1 122 1 164 2 51 1 275 1 19 1 188 1 282 1 365 1 80 1 104 1 28 1 346 1 148 2 108 1 109 2 372 1 238 1 33 1 193 1 59 3 9 1 375 1 327 2 10 2 195 2 171 2 63 1 331 1 378 1 302 3 160 2 268 2 356 1 137 1 273 1 
59 1 246 1 164 1 302 1 160 1 10 1 171 1 250 1 57 1 365 1 
164 1 1 1 128 1 146 1 365 1 368 1 371 1 57 1 59 2 262 1 61 1 10 1 171 1 352 1 246 1 302 2 160 2 179 1 250 2 69 1 184 1 
164 2 1 1 146 2 365 1 368 1 371 1 57 1 59 2 262 2 61 1 10 2 171 2 246 1 302 2 160 2 179 1 250 2 69 1 184 1 
262 1 11 1 265 1 221 1 146 1 
262 2 179 1 270 1 371 1 11 1 221 1 174 1 146 2 
262 1 11 1 146 1 
59 2 164 1 10 1 171 1 92 1 343 1 160 2 302 2 372 2 
185 1 68 1 330 1 
59 1 121 1 50 1 375 1 327 1 188 1 63 1 302 1 148 1 137 1 108 1 109 1 372 1 33 1 238 1 273 1 
185 1 121 1 59 2 164 1 375 1 314 1 327 1 10 1 188 1 63 1 46 1 160 1 302 2 137 1 148 1 108 1 109 1 238 1 33 1 273 1 
319 1 372 1 
59 3 46 1 164 3 302 3 160 3 10 3 171 1 372 1 
59 1 246 1 164 1 302 1 160 1 10 1 250 1 
92 1 59 1 164 1 343 1 302 1 160 1 10 1 171 1 250 1 
1 1 188 1 146 1 282 1 343 1 148 1 346 1 108 1 109 1 238 1 59 4 193 1 61 1 10 3 195 1 63 1 160 3 302 4 356 1 250 2 69 1 72 1 121 1 164 3 122 1 359 1 314 1 19 1 365 1 80 1 28 1 33 1 372 1 262 1 375 1 327 1 88 1 171 2 46 1 378 1 268 2 137 1 272 1 184 1 273 1 
59 2 164 1 46 1 302 2 160 2 177 1 10 1 128 1 372 1 
59 3 164 3 262 1 359 1 314 1 61 1 1 1 10 3 171 1 351 1 146 1 343 1 46 2 160 3 302 3 371 1 250 1 69 1 184 1 
59 2 185 1 164 2 10 2 171 1 330 1 46 1 343 1 160 2 302 2 
59 1 121 1 375 1 327 1 188 1 63 1 302 1 148 1 137 1 108 1 109 1 372 1 33 1 238 1 273 1 
59 1 121 1 211 1 375 1 202 1 327 1 63 1 302 1 148 1 137 1 109 1 372 1 33 1 238 1 273 1 
185 2 73 1 312 1 122 1 313 1 275 2 282 1 80 1 130 1 320 1 55 1 288 1 28 2 346 1 193 1 113 1 195 4 330 2 267 1 268 2 68 2 356 1 181 1 70 1 
59 1 164 1 302 1 160 1 95 1 10 1 250 1 69 1 
59 5 164 4 213 1 314 1 10 4 171 1 128 1 116 1 46 2 343 1 160 5 302 5 177 1 372 1 
59 2 246 1 164 2 302 2 160 2 95 1 10 2 250 1 
45 1 157 1 135 1 
45 2 303 1 254 1 82 1 135 2 24 1 
45 1 135 1 
45 1 135 1 
303 1 24 1 
303 1 24 1 
303 1 24 1 
45 1 96 1 135 1 
45 1 96 1 135 1 
45 1 96 1 135 1 
45 1 112 1 135 1 
45 1 112 1 135 1 
45 1 112 1 135 1 
186 3 254 1 262 2 201 2 139 2 363 2 124 1 219 1 339 1 135 2 125 2 328 1 143 1 146 2 45 2 286 1 371 1 105 2 291 1 
59 2 186 1 164 2 111 1 262 1 201 1 139 1 194 1 363 1 157 1 364 1 124 1 10 2 91 1 135 1 146 1 45 1 302 2 160 2 269 1 84 1 105 1 31 1 372 1 
35 2 36 2 134 1 151 1 32 1 
36 1 311 1 32 1 
36 1 134 1 311 1 
35 1 36 3 134 1 151 1 12 1 32 2 
35 1 36 2 256 1 134 1 151 1 32 1 
312 1 203 2 123 1 364 1 257 1 189 2 190 3 79 1 146 5 130 1 6 1 288 1 84 1 83 2 147 1 371 2 107 1 262 5 39 1 91 1 11 1 297 2 221 4 174 1 332 1 267 1 304 1 67 1 179 1 162 3 249 1 381 1 
312 3 75 1 203 6 364 4 123 2 190 8 259 1 146 9 79 2 130 3 285 1 6 1 288 3 370 5 83 6 371 5 107 2 214 1 262 9 39 2 11 6 297 6 265 5 221 7 299 1 174 1 332 3 267 3 304 2 197 1 67 3 179 1 162 9 333 1 381 1 
312 1 123 1 364 1 203 2 190 3 189 1 79 1 146 3 130 1 285 1 288 1 371 3 147 1 83 2 107 1 262 3 39 1 297 2 221 2 332 1 267 1 304 1 179 1 67 2 162 4 249 1 
312 2 203 4 123 1 364 2 190 5 189 2 259 1 79 1 146 4 130 2 285 1 288 2 371 4 147 1 83 4 107 1 214 1 262 4 39 1 297 4 221 3 332 2 267 2 304 1 179 1 67 3 197 1 162 7 249 1 
251 1 
121 1 245 1 319 1 
121 1 244 1 
121 1 375 1 
121 3 245 2 375 1 159 1 238 1 209 1 
121 1 375 1 238 1 
121 1 149 1 
73 2 313 3 275 4 255 1 37 1 349 1 361 1 195 7 90 1 191 1 318 1 284 1 267 1 288 1 28 3 237 1 208 1 236 2 
73 5 199 1 313 10 312 3 275 16 255 2 76 1 361 2 20 3 191 1 282 1 80 1 318 2 130 3 284 2 288 4 28 15 346 1 292 1 236 3 237 5 37 1 349 1 195 31 90 1 220 1 332 3 353 1 267 4 268 2 305 1 307 1 356 1 252 4 
73 3 313 4 275 5 255 1 361 1 141 1 191 1 282 2 80 2 318 1 284 1 288 1 28 4 346 2 236 2 237 1 37 1 349 1 195 9 267 1 268 4 94 1 305 1 356 2 
73 2 313 3 275 4 255 1 37 1 349 1 361 1 195 7 90 1 191 1 318 1 284 1 267 1 288 1 28 3 237 1 236 2 
73 2 313 3 275 4 255 1 37 1 349 1 361 1 195 7 90 1 191 1 318 1 284 1 267 1 288 1 28 3 237 1 236 2 
121 1 227 1 276 2 99 1 278 1 21 1 369 2 167 2 148 1 7 1 109 1 33 1 323 1 210 1 87 1 375 1 327 1 172 2 63 1 44 1 47 1 335 1 273 1 
227 1 276 1 21 1 126 1 166 1 369 1 167 1 168 1 148 1 109 1 32 1 33 1 324 1 87 1 155 1 36 2 327 1 242 1 134 1 42 1 172 1 12 1 118 1 335 1 311 1 273 1 
227 2 276 1 21 1 126 1 367 1 369 1 167 1 168 1 106 1 148 1 109 1 32 1 33 1 324 1 87 2 155 1 36 2 327 1 242 1 134 1 42 1 172 1 12 1 66 1 182 1 118 1 335 1 311 1 120 1 273 1 
226 1 227 3 276 1 21 1 126 1 166 1 367 1 369 1 167 1 106 1 148 1 109 1 32 1 33 1 323 1 87 3 155 1 36 2 327 1 242 1 134 1 42 1 172 1 12 1 66 2 118 1 335 1 311 1 120 1 273 1 
226 1 227 2 276 1 126 1 166 1 367 1 369 1 167 1 106 1 148 1 109 1 33 1 32 1 87 2 155 1 36 2 327 1 134 1 172 1 12 1 66 2 118 1 311 1 120 1 273 1 
22 1 
338 1 1 1 277 1 278 1 190 2 146 5 145 1 102 4 192 1 345 1 107 1 148 2 109 2 59 1 110 2 61 1 11 6 63 2 352 1 354 2 247 2 160 1 302 1 304 1 67 2 162 2 250 1 16 1 69 1 253 1 121 1 123 1 128 1 79 1 83 2 371 3 29 1 33 1 133 2 34 1 375 1 262 5 263 2 327 2 170 1 174 3 329 2 44 1 380 2 222 1 179 2 48 1 381 1 273 1 184 1 
1 1 128 1 145 1 146 3 102 2 192 1 371 2 59 1 34 1 262 3 215 1 61 1 263 1 11 2 174 1 352 1 302 1 160 1 222 1 179 2 48 1 250 1 69 1 184 1 
59 1 34 1 262 2 61 1 1 1 128 1 352 1 146 2 145 1 102 3 160 1 302 1 380 1 192 1 179 2 222 1 48 1 371 2 250 1 69 1 184 1 
1 1 128 1 145 1 146 3 102 3 192 1 371 3 59 1 34 1 262 3 215 1 61 1 263 1 11 2 174 1 352 1 302 1 160 1 247 1 380 1 222 1 179 3 48 1 250 1 69 1 184 1 
1 1 277 1 190 1 146 5 145 1 102 5 192 1 107 1 57 1 152 1 59 2 110 2 61 1 295 1 10 1 11 7 352 1 354 2 246 1 302 2 160 2 247 4 196 1 304 1 67 2 306 1 250 2 69 1 164 1 128 1 365 1 79 1 368 1 371 4 83 1 29 1 34 1 133 2 262 5 215 1 263 4 171 1 174 3 329 2 175 1 380 3 179 4 222 1 48 1 381 1 184 1 
1 1 277 1 190 1 146 4 145 1 102 4 192 1 345 1 107 1 59 1 110 2 61 1 11 4 352 1 354 2 302 1 160 1 247 2 304 1 67 2 162 2 250 1 69 1 128 1 79 1 371 4 83 1 29 1 34 1 133 2 262 4 263 2 174 2 329 2 380 2 179 3 222 1 48 1 381 1 184 1 
1 1 277 1 128 1 190 1 145 1 146 4 79 1 102 4 192 1 83 1 371 3 29 1 107 1 152 1 59 1 133 2 110 2 34 1 262 4 61 1 263 2 295 1 11 4 174 2 329 2 352 1 354 2 247 2 302 1 160 1 380 2 304 1 67 2 222 1 179 3 306 1 48 1 381 1 250 1 69 1 184 1 
1 1 277 1 128 1 190 1 145 1 146 4 79 1 102 4 192 1 83 1 371 3 29 1 107 1 152 1 59 1 133 2 110 2 34 1 262 4 61 1 263 2 295 1 11 4 174 2 329 2 352 1 354 2 247 2 302 1 160 1 380 2 304 1 67 2 222 1 179 3 306 1 48 1 381 1 250 1 69 1 184 1 
1 1 277 1 142 1 128 1 190 1 145 1 146 4 79 1 102 4 192 1 83 1 371 3 107 1 59 1 169 2 34 1 262 4 350 2 61 1 263 2 11 4 174 2 329 2 352 1 354 2 247 2 302 1 160 1 380 2 304 1 136 1 222 1 179 3 162 2 306 1 48 1 117 1 381 1 250 1 69 1 184 1 
1 1 277 1 128 1 190 1 79 1 145 1 146 4 102 5 192 1 83 1 371 3 29 1 107 1 152 1 59 1 133 2 110 2 34 1 262 4 61 1 295 1 263 3 11 5 174 2 329 2 352 1 354 2 175 1 302 1 160 1 247 3 380 3 304 1 67 2 222 1 179 3 306 1 48 1 381 1 250 1 69 1 184 1 
1 1 277 1 128 1 190 1 79 1 145 1 146 4 102 5 192 1 83 1 371 3 29 1 107 1 152 1 59 1 133 2 110 2 34 1 262 4 61 1 295 1 263 3 11 5 174 2 329 2 352 1 354 2 175 1 302 1 160 1 247 3 380 3 304 1 67 2 222 1 179 3 306 1 48 1 381 1 250 1 69 1 184 1 
1 1 277 1 190 1 146 4 145 1 102 4 192 1 345 1 107 1 59 1 61 1 350 2 11 4 352 1 354 2 302 1 160 1 247 2 304 1 162 2 250 1 69 1 128 1 79 1 371 3 83 1 34 1 169 2 262 4 263 2 174 2 329 2 380 2 179 3 222 1 136 1 48 1 381 1 184 1 
121 3 164 1 122 2 18 1 275 1 278 1 282 2 166 1 80 2 104 2 289 1 28 1 148 8 346 2 109 8 33 2 59 1 193 2 9 1 375 2 327 7 10 1 217 1 195 2 63 2 44 1 46 1 378 1 302 1 160 1 268 4 223 1 308 1 356 2 182 1 181 1 17 1 163 1 273 2 
73 1 185 1 313 1 122 1 164 1 312 1 275 1 282 1 80 1 130 1 343 1 288 1 28 2 346 1 150 1 193 1 59 1 10 1 195 3 171 1 330 1 332 1 64 1 160 1 302 1 267 1 268 2 68 1 356 1 
185 1 73 2 122 1 313 2 275 3 255 1 191 1 282 1 80 1 284 1 319 1 288 1 28 3 346 1 236 1 372 2 193 1 37 1 349 1 195 6 330 1 267 1 268 2 68 1 356 1 181 1 
73 1 185 11 313 2 122 2 312 1 275 8 20 3 229 1 282 2 80 2 130 2 288 1 28 6 346 2 292 1 237 1 372 1 193 1 9 1 325 1 195 14 332 2 330 4 64 1 378 1 161 1 267 2 268 4 307 1 68 11 356 2 252 3 71 1 
121 1 50 1 337 1 122 1 164 1 275 1 314 1 188 1 282 1 80 1 28 1 148 1 346 1 108 1 30 1 109 1 372 1 238 1 33 1 322 1 193 1 59 2 9 1 375 1 327 1 10 1 195 2 63 1 330 1 64 1 46 1 378 1 302 2 160 1 268 2 356 1 137 1 273 1 
185 7 275 10 2 1 188 2 191 1 282 3 144 2 284 1 231 1 288 3 148 3 346 3 108 2 236 1 109 3 237 4 8 2 238 2 59 3 193 3 9 1 349 1 10 1 195 20 63 1 64 1 160 1 302 3 14 2 68 7 356 3 73 4 72 2 121 2 164 1 122 3 313 8 312 2 255 1 314 1 166 1 80 3 130 2 207 1 28 10 321 2 372 2 33 2 375 2 37 1 327 3 330 7 332 2 378 1 46 1 267 3 268 6 137 2 273 2 
185 1 193 1 313 1 122 1 275 2 195 2 330 1 282 1 80 1 130 1 267 1 268 2 320 1 68 1 356 1 181 1 346 1 237 1 
73 1 185 1 193 1 313 1 122 1 312 1 195 2 330 1 282 1 80 1 268 2 288 1 68 1 28 2 356 1 181 1 346 1 70 1 
185 2 73 1 122 1 313 2 312 1 275 2 282 1 130 1 80 1 288 1 28 2 346 1 237 1 193 1 195 4 332 1 330 2 267 1 268 2 68 2 356 1 181 1 
185 1 193 1 313 1 122 1 275 2 195 2 330 1 282 1 80 1 130 1 267 1 268 2 320 1 223 1 68 1 356 1 346 1 237 1 
73 1 185 1 193 1 313 1 122 1 312 1 195 2 330 1 282 1 80 1 268 2 223 1 288 1 68 1 28 2 356 1 346 1 70 1 
185 2 73 1 122 1 313 2 312 1 275 2 282 1 130 1 80 1 288 1 28 2 346 1 237 1 193 1 195 4 332 1 330 2 267 1 268 2 223 1 68 2 356 1 
73 1 185 2 193 1 312 1 313 2 122 1 275 2 195 4 330 2 332 1 282 1 80 1 130 1 267 1 268 2 288 1 28 2 68 2 356 1 346 1 237 1 
72 1 121 1 122 1 275 1 188 1 282 1 80 1 28 1 148 1 346 1 108 1 109 1 372 1 238 1 33 1 59 1 193 1 9 1 375 1 327 1 195 2 63 1 378 1 302 1 268 2 356 1 137 1 273 1 
121 1 122 1 275 1 202 1 282 1 80 1 28 1 148 1 346 1 109 1 372 1 238 1 33 1 59 1 193 1 9 1 211 1 375 1 240 1 327 1 195 2 63 1 378 1 302 1 268 2 356 1 137 1 273 1 
185 2 73 1 122 1 313 2 312 1 275 2 282 1 130 1 80 1 288 1 28 2 346 1 237 1 193 1 195 4 332 1 330 2 64 1 267 1 268 2 68 2 356 1 
73 1 185 2 72 1 121 1 312 1 313 2 122 1 275 2 188 1 282 1 130 1 80 1 288 1 28 2 148 1 346 1 108 1 237 1 109 1 238 1 33 1 8 1 59 1 193 1 375 1 327 1 195 4 330 2 332 1 267 1 302 1 268 2 68 2 356 1 137 1 182 1 273 1 
185 1 312 1 313 1 122 1 164 1 275 2 282 1 80 1 130 1 343 1 288 1 28 1 346 1 237 1 193 1 59 1 10 1 195 3 171 1 332 1 330 1 64 1 160 1 302 1 267 1 268 2 178 1 68 1 356 1 
73 3 313 6 312 3 275 9 77 1 360 1 20 1 141 1 279 2 129 1 282 2 80 2 130 3 81 1 288 3 56 1 28 10 346 2 292 1 237 3 195 19 264 2 62 1 332 3 267 3 268 4 307 1 356 2 198 1 252 2 
73 2 313 4 312 2 275 14 77 1 360 1 362 1 20 2 141 1 279 4 282 3 101 1 80 3 130 3 81 2 288 2 56 1 28 12 234 1 346 3 237 2 195 26 264 1 300 1 62 2 332 3 176 1 267 3 268 6 305 2 307 2 356 3 334 1 252 2 
73 4 313 8 312 4 275 20 255 1 77 1 360 1 362 1 20 3 141 1 279 4 191 1 101 1 282 3 80 3 130 4 284 1 81 2 288 5 56 1 28 21 234 1 346 3 292 1 236 1 237 4 37 1 349 1 195 41 264 1 300 1 62 1 332 4 176 1 267 5 268 6 305 1 307 3 356 3 198 1 334 1 252 4 358 1 
73 4 313 7 312 3 275 20 255 1 77 1 360 1 362 1 20 3 141 1 279 4 191 1 101 1 282 4 80 4 130 4 284 1 81 2 288 4 56 1 28 18 234 1 346 4 292 1 236 1 237 3 37 1 349 1 195 38 264 1 300 1 62 1 332 4 176 1 267 5 268 8 305 2 307 3 356 4 198 1 334 1 252 4 358 1 
73 7 313 14 312 7 275 27 255 1 77 1 360 1 362 1 20 4 141 1 279 4 191 1 101 1 282 2 80 2 130 7 284 1 81 1 288 8 56 1 28 25 234 1 346 2 292 2 236 1 237 7 37 1 349 1 195 52 264 1 300 1 62 1 332 7 176 1 267 8 268 4 305 1 307 2 356 2 334 1 252 4 71 2 
45 1 254 1 139 1 201 1 363 1 219 1 135 1 105 1 258 1 143 1 
194 1 157 1 
45 1 0 1 139 1 201 1 132 1 363 1 135 1 105 1 158 1 
186 2 254 1 262 1 201 1 139 1 363 1 124 1 219 1 339 1 135 1 125 1 328 1 143 1 146 1 45 1 286 1 371 1 105 1 
186 2 254 1 262 1 201 1 139 1 363 1 124 1 219 1 339 1 135 1 125 1 328 1 143 1 146 1 45 1 286 1 371 1 105 1 
186 2 254 1 262 1 201 1 139 1 363 1 124 1 219 1 339 1 135 1 125 1 328 1 143 1 146 1 45 1 286 1 371 1 105 1 
373 1 82 1 96 1 
373 1 82 1 96 1 
112 1 173 1 
112 1 82 1 173 1 
269 1 31 1 
186 1 164 2 139 1 201 1 363 1 364 1 125 1 25 1 146 1 105 1 84 1 31 1 372 1 59 2 262 1 111 1 194 1 157 1 10 2 135 1 91 1 221 1 328 1 45 1 302 2 160 2 269 1 
373 1 96 1 
112 1 82 1 173 1 
121 1 74 1 122 1 18 1 275 1 282 1 80 1 104 2 28 1 148 2 346 1 109 2 293 1 33 1 193 1 59 2 9 1 375 1 326 1 327 2 243 1 217 1 195 2 298 1 64 1 378 1 302 2 160 2 268 2 356 1 273 1 
121 1 375 1 276 1 327 1 278 1 3 1 280 1 63 1 44 1 47 1 148 1 109 1 33 1 273 1 
155 1 36 2 276 1 327 1 242 1 134 1 126 1 3 1 341 1 12 1 5 1 166 1 148 1 109 1 311 1 32 1 33 1 273 1 
155 1 36 2 276 1 327 2 242 1 134 1 126 1 3 1 341 1 12 1 5 1 166 1 148 2 182 1 109 2 311 1 32 1 33 1 273 1 
155 1 36 2 276 1 327 1 242 1 134 1 126 1 12 1 5 1 166 1 290 1 148 1 109 1 311 1 32 1 33 1 273 1 
235 1 
153 1 23 1 190 1 79 1 304 1 179 1 83 1 371 1 381 1 107 1 
312 2 203 5 297 5 190 5 332 2 144 1 130 2 267 2 67 5 162 10 288 2 83 5 371 5 347 1 336 2 
262 1 179 1 371 1 11 1 174 1 146 1 
121 1 338 2 123 2 278 1 228 2 190 2 79 2 146 3 285 1 83 2 107 2 148 4 261 1 109 4 33 1 375 1 262 3 294 1 327 4 170 1 40 1 11 4 63 2 174 2 44 1 304 2 381 1 16 1 273 1 
153 1 319 1 179 1 371 1 83 1 190 1 23 1 
190 1 79 1 146 1 83 1 371 2 29 1 107 1 110 1 133 1 262 1 11 1 174 1 304 1 67 1 179 1 162 1 381 1 
340 1 190 4 146 2 144 1 287 1 288 1 107 2 148 1 58 1 109 1 238 1 11 2 297 3 63 1 244 2 245 1 304 2 67 3 162 6 15 1 121 4 312 1 315 1 123 1 203 3 79 2 130 1 366 1 371 3 83 3 33 1 209 1 375 1 262 2 327 1 174 1 332 1 267 1 180 1 381 2 273 2 184 1 336 1 
312 2 338 1 362 1 20 1 123 1 203 5 190 8 146 1 79 2 101 1 130 2 288 2 371 5 83 5 234 1 347 1 107 2 86 1 262 1 11 1 297 5 300 1 174 1 332 2 13 1 176 1 267 2 304 2 67 3 179 2 162 6 307 1 381 2 252 1 336 2 
164 1 255 1 78 1 190 2 79 1 146 1 365 1 284 1 368 1 288 1 83 2 347 1 107 1 57 1 152 1 59 1 262 1 349 1 10 1 171 1 246 1 302 1 267 2 160 1 304 1 381 1 250 1 336 2 
72 1 121 1 164 2 122 1 19 1 188 1 282 1 365 1 80 1 28 1 346 1 148 1 108 1 109 1 372 1 33 1 238 1 59 3 193 1 375 1 327 1 10 2 195 1 171 2 63 1 378 1 302 3 160 2 268 2 356 1 137 1 273 1 
338 1 203 2 123 1 297 2 190 1 79 1 304 1 67 2 179 2 162 4 83 2 371 4 381 1 107 1 236 1 
131 1 139 1 363 1 219 1 31 1 
139 1 363 1 138 1 
139 1 363 1 138 1 
139 1 363 1 138 1 
139 1 363 1 281 1 
139 1 363 1 281 1 
139 1 363 1 281 1 
139 1 363 1 
45 1 135 1 
73 3 313 5 275 5 255 2 349 1 78 1 141 1 195 10 282 1 80 1 284 2 267 2 268 2 288 2 28 5 356 1 346 1 237 2 
313 1 275 2 141 1 195 2 282 1 80 1 130 1 267 1 268 2 356 1 346 1 237 1 
73 1 312 1 313 2 275 2 141 1 195 4 332 1 282 1 80 1 130 1 267 1 268 2 288 1 28 2 356 1 346 1 237 1 
73 1 313 2 275 1 255 1 218 1 195 3 141 1 282 3 80 3 284 1 268 6 305 1 28 2 356 3 198 1 346 3 237 1 
199 1 73 7 313 12 312 3 275 16 255 3 20 3 141 1 165 1 191 1 282 5 80 5 130 3 284 3 288 5 28 18 346 5 292 1 236 1 237 5 37 1 349 2 218 1 195 34 220 1 332 3 353 1 267 5 268 10 305 2 307 1 356 5 198 1 252 4 
73 2 313 3 275 4 37 1 255 1 349 1 195 8 191 1 282 2 80 2 284 1 267 1 268 4 288 1 305 1 28 4 356 2 346 2 236 1 237 1 
73 2 313 2 275 3 37 1 255 1 349 1 195 6 191 1 284 1 319 1 267 1 288 1 28 3 236 1 
73 1 312 1 313 2 275 2 195 4 165 1 332 1 282 1 80 1 130 1 267 1 268 2 288 1 28 2 356 1 346 1 237 1 
73 1 312 1 313 2 275 3 20 1 195 7 332 1 130 1 267 1 288 1 307 1 28 4 292 1 252 2 237 1 
73 5 313 9 312 2 275 11 255 2 20 2 191 1 229 1 282 2 130 2 80 2 284 2 288 3 28 12 346 2 292 1 236 1 237 4 37 1 349 1 195 23 218 1 332 2 267 3 268 4 305 2 356 2 252 2 71 1 
195 1 28 1 252 1 
275 1 20 1 195 1 
73 2 313 3 312 1 275 3 195 6 165 1 332 1 282 1 144 1 80 1 130 1 267 1 268 2 288 1 28 3 356 1 346 1 237 1 
73 1 312 2 313 2 275 6 362 1 20 1 141 1 282 1 101 1 80 1 130 2 288 2 28 6 234 1 346 1 237 1 195 12 300 1 332 2 267 2 176 1 268 2 307 1 356 1 252 1 
73 1 313 2 275 3 255 1 349 1 195 6 284 1 267 1 288 1 28 3 237 1 
73 1 313 2 275 1 255 1 37 1 218 1 195 3 191 1 282 1 80 1 284 1 268 2 305 1 28 2 356 1 346 1 237 1 
73 2 313 2 275 4 255 1 20 1 141 1 191 1 282 1 80 1 284 1 288 1 28 4 346 1 236 1 37 1 349 1 195 8 300 1 267 1 268 2 307 1 356 1 252 1 
73 2 313 3 275 6 255 1 20 1 141 1 165 1 191 1 282 2 80 2 130 1 284 1 288 1 28 5 346 2 292 1 236 1 237 1 37 1 349 1 195 11 300 1 332 1 267 2 268 4 307 1 356 2 252 2 
73 3 312 2 313 4 275 9 255 1 362 1 20 1 141 1 165 1 191 1 282 3 101 1 80 3 130 2 284 1 288 3 28 10 234 1 346 3 236 1 237 1 37 1 349 1 195 19 300 1 332 2 176 1 267 3 268 6 305 1 307 1 356 3 252 1 
73 3 312 1 313 5 275 10 255 1 362 1 20 1 141 1 165 1 191 1 282 3 101 1 80 3 130 2 284 1 288 2 28 7 234 1 346 3 236 1 237 2 37 1 349 1 195 17 300 1 332 2 267 3 176 1 268 6 305 1 307 1 356 3 252 1 
73 2 313 2 275 4 255 1 20 1 141 1 191 1 282 1 80 1 284 1 288 1 28 4 346 1 236 1 37 1 349 1 195 8 300 1 267 1 268 2 307 1 356 1 252 1 
73 1 312 2 313 2 275 6 362 1 20 1 141 1 282 1 101 1 80 1 130 2 288 2 28 6 234 1 346 1 237 1 195 12 300 1 332 2 267 2 176 1 268 2 307 1 356 1 252 1 
73 3 312 1 313 5 275 10 255 1 362 1 20 1 141 1 165 1 191 1 282 4 101 1 80 4 130 2 284 1 288 2 28 8 234 1 346 4 236 1 237 2 37 1 349 1 195 18 300 1 332 2 176 1 267 3 268 8 305 2 307 1 356 4 252 1 
73 3 312 2 313 6 275 9 362 1 20 1 141 1 282 4 101 1 80 4 130 3 288 2 28 7 234 1 346 4 237 3 195 16 300 1 332 3 176 1 267 3 268 8 305 2 307 1 356 4 198 1 252 1 
73 3 313 6 275 3 37 2 255 3 349 1 195 7 191 1 284 3 267 1 288 1 28 4 237 3 
73 3 312 1 313 4 275 10 255 1 362 1 20 1 141 1 191 1 282 4 101 1 80 4 130 2 284 1 288 2 28 8 234 1 346 4 236 1 237 1 37 1 349 1 195 18 300 1 332 2 176 1 267 3 268 8 305 2 307 1 356 4 198 1 252 1 
59 1 302 1 160 1 374 1 177 1 128 1 372 1 
59 1 60 1 374 1 89 1 128 1 160 1 302 1 177 1 49 1 372 1 357 1 183 1 
121 1 375 1 327 4 278 1 63 1 44 1 65 1 148 4 182 1 260 1 109 4 33 1 273 1 
121 1 375 1 187 1 327 2 228 1 283 1 103 1 207 1 148 2 85 1 109 2 238 1 33 1 273 2 
36 1 327 1 134 1 126 1 148 1 109 1 63 1 311 1 33 1 273 1 
121 1 18 1 375 1 327 2 243 1 166 1 182 1 148 2 109 2 33 1 273 1 
121 3 18 1 375 2 327 4 278 1 228 1 63 1 44 1 65 1 289 1 308 1 148 5 182 1 109 5 33 2 273 2 
121 3 212 1 18 1 375 2 327 4 278 1 228 1 63 1 44 1 65 1 308 1 148 5 182 1 109 5 33 2 273 2 
121 1 44 1 319 1 375 1 327 1 278 1 148 1 109 1 63 1 33 1 273 1 
121 1 59 2 164 1 375 1 327 1 10 1 188 1 63 1 46 1 160 1 302 2 137 1 148 1 109 1 372 1 238 1 33 1 273 1 
121 3 164 2 1 1 228 1 188 1 148 1 149 1 109 1 372 1 33 1 238 2 59 2 375 2 327 1 10 1 41 1 46 1 302 2 160 2 137 1 250 1 69 1 273 1 
121 3 164 2 1 1 228 1 148 2 149 1 260 1 109 2 372 1 33 1 238 2 59 2 211 1 375 2 327 2 10 1 41 1 46 1 302 2 160 2 137 1 250 1 69 1 273 1 
121 4 164 1 98 1 228 1 365 1 146 2 368 1 371 1 148 1 149 1 57 1 109 1 33 1 238 1 59 1 262 2 375 1 327 1 10 1 41 1 11 1 171 1 244 1 246 1 245 1 302 1 160 1 379 1 179 1 250 1 273 1 184 1 
121 4 164 1 228 1 365 1 146 2 368 1 371 1 148 1 149 1 57 1 109 1 33 1 238 1 59 1 262 2 375 1 327 1 10 1 41 1 11 1 171 1 244 1 246 1 245 1 302 1 160 1 180 1 179 1 250 1 273 1 184 1 
327 1 148 1 109 1 33 1 163 1 273 1 
121 3 18 1 375 2 187 1 327 6 114 1 63 2 166 1 283 1 104 1 289 1 308 1 182 1 148 7 17 1 109 7 163 1 238 1 33 2 209 1 273 3 
185 1 73 2 121 1 74 1 72 1 313 2 122 2 164 1 275 3 255 1 188 1 191 1 282 2 80 2 284 1 288 1 28 3 321 1 346 2 148 1 108 1 236 1 109 1 372 2 238 1 33 1 8 1 193 2 59 2 375 1 37 1 349 1 327 1 10 1 195 6 330 1 64 1 46 1 267 1 302 2 160 1 268 4 68 1 356 2 137 1 182 1 273 1 
340 1 190 4 146 3 284 1 288 2 347 1 107 2 148 1 58 1 109 1 57 1 59 1 153 1 349 1 10 1 11 2 63 1 244 1 246 1 245 1 160 1 302 1 304 2 15 1 250 1 121 2 164 1 255 1 78 1 23 1 79 2 365 1 368 1 83 5 371 2 262 3 327 1 40 1 171 1 221 1 174 1 267 2 180 1 179 2 381 2 184 1 336 2 
121 2 375 1 327 2 315 1 245 1 182 1 148 2 109 2 163 1 238 1 33 1 209 1 273 2 
121 1 59 2 164 1 211 1 375 1 327 1 10 1 63 1 46 1 160 1 302 2 137 1 148 1 109 1 372 1 238 1 33 1 273 1 
121 1 375 1 187 1 327 1 228 1 114 1 283 1 148 1 109 1 238 1 33 1 209 1 273 2 
59 1 326 1 52 1 316 1 204 1 298 1 160 1 302 1 293 1 
54 1 376 1 316 1 
52 1 316 1 232 1 204 1 372 1 
164 1 359 1 1 1 52 1 316 1 204 1 365 1 146 2 54 1 368 1 232 1 371 1 57 1 59 1 154 1 262 2 61 1 376 1 10 1 171 1 221 1 246 1 302 1 160 1 179 1 250 2 69 1 184 1 
324 1 87 1 227 1 367 1 21 1 106 1 335 1 120 1 
87 4 227 4 38 1 21 1 317 1 206 1 355 1 26 1 66 2 367 3 225 1 106 2 335 1 120 2 
324 1 87 2 227 2 21 1 4 1 66 1 367 1 93 1 106 1 335 1 119 1 120 1 
324 1 87 3 227 3 38 2 21 1 355 1 367 1 344 1 225 2 106 1 335 1 120 1 
200 2 348 1 367 2 140 1 
324 1 87 1 227 1 21 1 127 1 335 1 
324 1 87 2 66 1 227 2 367 1 53 1 21 1 106 1 335 1 120 1 
156 1 
324 1 87 1 227 1 367 1 21 1 106 1 335 1 120 1 
319 1 367 1 106 1 120 1 
87 1 227 1 367 1 21 1 106 1 335 1 120 1 
227 1 167 1 172 1 
324 1 87 3 227 3 38 1 21 1 355 1 367 1 225 2 309 1 106 1 335 1 120 1 
87 2 66 1 227 2 367 1 271 1 21 1 106 1 335 1 120 1 
324 1 87 1 227 1 36 1 367 1 27 1 21 1 317 1 335 1 311 1 32 1 
324 1 87 1 227 1 367 1 21 1 106 1 335 1 
324 1 87 1 227 1 21 1 106 2 335 1 120 1 
324 1 87 2 227 2 367 1 233 1 21 2 106 1 115 1 335 2 377 1 
324 1 87 3 227 3 296 1 53 1 21 1 317 1 26 1 66 2 367 2 106 1 335 1 120 1 
324 1 87 2 227 2 36 2 134 1 21 1 12 1 266 1 66 1 367 1 106 1 335 1 32 1 311 1 120 1 
324 1 239 1 87 4 227 4 21 2 317 1 26 1 66 2 367 2 271 1 106 1 335 2 120 1 
324 1 87 3 227 3 53 1 21 1 66 1 367 1 225 1 106 1 335 1 120 1 
206 1 26 1 367 1 317 1 
367 1 106 1 

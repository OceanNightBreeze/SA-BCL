#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 2 22 1 72 9 366 1 105 1 31 2 82 1 371 9 251 1 252 2 176 1 320 1 131 4 87 6 132 1 322 1 300 1 37 1 234 1 41 5 213 2 279 2 215 1 190 2 191 1 216 2 118 1 361 3 
143 2 22 1 72 9 366 1 105 1 31 2 82 1 371 9 251 1 252 2 176 1 320 1 131 4 87 6 132 1 322 1 300 1 37 1 234 1 41 5 213 2 279 2 215 1 190 2 191 1 216 2 118 1 361 3 
143 2 22 1 72 10 366 1 105 1 31 2 82 1 371 10 251 1 252 2 176 1 320 1 131 5 87 7 132 1 322 1 300 1 37 1 234 1 41 6 213 2 279 2 215 1 190 2 191 1 216 2 118 1 361 4 
143 2 22 1 72 7 366 1 105 1 31 2 82 1 371 7 251 1 252 1 176 1 320 1 131 3 87 4 132 1 322 1 300 1 37 1 234 1 41 4 213 2 279 2 215 1 190 2 216 2 118 1 361 2 
320 1 131 2 143 1 87 3 132 1 72 4 41 3 213 1 279 1 31 1 215 1 190 1 191 1 371 4 251 1 252 2 118 1 361 1 
320 1 143 1 132 1 48 1 38 1 300 1 41 1 72 2 213 1 279 1 31 1 82 1 371 2 251 1 45 1 216 1 
320 1 131 1 87 1 132 1 72 3 41 2 279 2 31 2 371 3 251 1 216 1 176 1 361 1 
320 1 131 4 143 1 87 7 132 1 41 5 72 9 213 1 366 1 105 1 279 2 215 1 31 2 190 1 249 1 191 1 371 9 251 1 252 2 216 1 118 1 207 1 176 1 361 3 
320 1 131 4 143 1 87 7 132 1 41 5 72 9 213 1 366 1 105 1 279 2 215 1 31 2 190 1 249 1 191 1 371 9 251 1 252 2 216 1 118 1 207 1 176 1 361 3 
111 1 179 1 83 1 
112 1 267 2 179 1 
318 2 86 2 328 2 106 2 355 1 227 1 277 2 123 2 
310 1 99 1 362 1 284 1 218 2 100 2 335 1 50 1 123 2 365 1 203 1 74 1 314 1 30 1 367 2 106 2 223 1 224 1 268 1 318 2 86 3 58 1 227 1 133 1 210 1 259 1 134 2 379 1 303 1 233 1 277 3 184 1 328 2 92 2 355 1 137 1 238 1 
76 1 318 1 86 1 328 1 106 1 227 1 334 1 372 1 277 1 123 1 
318 1 71 1 86 1 122 1 240 1 179 1 277 1 236 1 186 1 83 1 170 1 372 1 194 1 140 1 
318 1 71 1 86 1 122 1 179 1 123 1 277 1 236 2 328 1 106 1 186 1 83 1 372 1 194 1 140 2 
236 1 61 1 26 1 16 1 140 1 
236 2 179 1 83 1 26 1 44 1 172 1 16 1 140 2 
236 1 26 1 140 1 
318 1 86 1 227 1 334 1 16 1 123 1 277 1 76 1 236 1 328 1 106 1 372 1 84 1 140 1 
179 1 
236 2 138 1 179 1 83 1 26 1 44 1 16 1 140 2 
2 1 179 1 60 1 242 1 26 2 154 2 211 2 16 2 326 1 73 1 288 1 10 1 236 5 339 2 79 1 262 1 83 1 44 1 140 5 
111 1 355 1 
318 2 98 1 86 2 277 2 123 1 328 1 55 1 106 1 355 2 
304 1 161 1 324 1 
86 1 362 1 218 1 100 1 133 1 210 1 303 1 277 1 365 1 314 1 30 1 329 1 367 1 355 1 223 1 268 1 
318 1 362 1 86 2 218 1 100 1 133 1 210 1 303 1 277 2 365 1 304 1 314 1 30 1 328 1 367 1 106 1 290 1 223 1 268 1 57 1 
318 5 98 1 86 5 24 1 277 5 123 1 266 1 328 4 106 4 355 1 290 2 170 1 128 1 57 1 
76 1 318 2 351 1 86 2 328 2 106 2 372 1 277 2 
318 3 86 3 328 3 106 3 355 1 290 1 123 1 277 3 
76 1 318 1 86 1 328 1 106 1 372 1 277 1 
318 1 98 1 86 1 328 1 55 1 106 1 372 1 277 1 123 1 
71 1 98 1 310 1 99 1 362 1 3 1 122 1 284 1 218 1 100 1 50 1 53 1 123 2 365 1 203 1 74 1 314 1 30 1 367 1 106 3 223 1 290 1 224 1 268 1 57 1 372 1 318 3 86 4 227 1 133 1 210 1 134 1 379 1 303 1 277 4 184 1 236 1 328 3 92 2 186 1 355 1 137 1 194 1 140 1 
318 2 86 2 266 1 328 1 106 1 355 1 290 1 170 1 277 2 
71 1 318 3 98 1 86 3 3 1 122 1 179 1 123 1 277 3 169 1 236 1 328 3 106 3 186 1 290 2 372 1 57 1 194 1 140 1 
318 2 98 1 86 2 324 1 123 1 277 2 304 1 328 2 106 2 290 1 
86 1 362 1 218 1 100 1 133 1 210 1 303 1 277 1 365 1 314 1 367 1 30 1 355 1 223 1 268 1 
86 1 362 1 218 1 100 1 133 1 303 1 277 1 365 1 338 1 314 1 367 1 30 1 355 1 95 1 268 1 
99 1 284 1 161 2 51 1 203 1 74 1 224 1 317 1 35 1 296 1 62 1 324 2 183 1 259 2 379 2 134 4 304 2 91 1 280 1 92 2 261 1 137 1 187 1 69 1 
318 1 351 1 86 1 122 1 328 1 106 1 372 1 277 1 
239 1 364 1 
239 1 364 1 
348 1 117 1 
348 1 117 1 
348 1 117 1 
11 1 239 1 364 1 
239 1 200 1 364 1 
348 1 239 2 364 2 275 1 167 1 117 1 
11 1 239 1 364 1 
11 1 239 1 364 1 
239 1 180 1 364 1 
239 1 180 1 364 1 
239 1 180 1 364 1 
196 1 121 1 239 1 265 1 333 1 200 1 364 1 245 1 54 1 27 1 106 2 291 1 318 2 86 2 15 1 230 1 277 2 236 1 328 2 355 1 158 1 331 1 330 1 140 1 
376 1 196 2 239 2 23 2 179 1 364 2 39 1 230 2 167 1 260 1 90 1 103 1 54 2 236 2 80 1 158 3 291 1 331 2 140 2 
143 1 213 1 190 1 
143 1 213 1 45 1 
213 3 278 1 257 1 190 2 45 1 293 1 
213 2 289 1 257 1 190 1 45 1 293 1 
213 2 257 2 190 1 45 1 293 1 
0 1 217 1 265 1 242 3 26 1 337 1 245 1 246 2 339 1 267 3 83 1 85 1 298 1 60 1 179 2 62 1 154 1 211 1 276 2 16 4 112 1 352 2 236 5 91 1 187 1 262 2 94 1 69 1 44 1 330 1 116 1 140 5 
0 3 283 1 242 8 26 6 337 2 205 1 339 2 267 9 83 1 34 1 85 2 347 1 298 1 153 1 349 1 179 5 60 1 61 5 62 3 301 5 154 2 211 2 276 6 16 7 326 1 112 3 352 6 236 9 91 3 187 3 262 6 69 3 44 1 330 4 140 9 
0 1 217 1 242 3 337 1 246 1 339 1 267 4 83 1 85 1 179 3 62 1 154 1 211 1 16 2 276 2 326 1 112 2 352 2 236 3 91 1 187 1 262 2 69 1 330 1 116 1 140 3 
0 2 217 1 242 5 337 1 246 2 339 1 267 7 83 1 34 1 85 1 347 1 153 1 179 4 62 2 154 1 211 1 276 4 16 3 326 1 112 3 352 4 236 4 91 2 187 2 262 4 69 2 330 2 116 1 140 4 
30 1 111 1 323 1 
30 1 147 1 
109 1 
314 1 362 1 30 1 
204 1 30 1 
314 1 30 1 
235 1 314 1 362 1 30 3 59 1 323 2 
35 2 177 1 178 1 101 1 62 1 163 1 311 1 379 3 325 1 259 4 134 7 280 3 281 2 69 1 358 1 381 1 12 1 
35 2 177 1 178 1 101 1 62 1 163 1 311 1 379 3 325 1 259 4 134 7 280 3 281 2 69 1 358 1 381 1 12 1 
35 2 177 1 178 1 101 1 62 1 163 1 311 1 379 3 325 1 259 4 134 7 17 1 280 3 281 2 69 1 358 1 381 1 12 1 
281 1 146 1 358 1 163 1 134 1 259 1 325 2 
99 2 101 1 163 1 311 1 203 2 29 1 292 1 224 2 12 1 35 3 177 1 178 1 62 1 134 9 259 5 325 1 379 4 280 4 92 4 137 2 281 2 69 1 381 1 309 1 
97 1 143 1 218 1 198 1 100 1 49 1 165 1 72 2 125 1 367 1 31 1 248 1 108 1 371 2 251 1 268 1 373 1 174 1 320 1 87 1 132 1 303 1 41 1 213 2 278 1 279 1 190 1 43 1 45 1 216 1 
143 1 218 1 198 1 100 1 49 1 165 1 72 3 125 1 367 1 127 1 31 1 56 1 248 1 371 3 251 1 268 1 373 1 174 1 87 2 132 1 229 1 303 1 41 1 213 2 278 1 279 1 190 1 43 1 45 1 216 1 
143 1 218 1 198 1 100 1 49 1 165 1 72 2 125 1 367 1 127 1 56 1 248 1 371 2 251 1 268 1 174 1 87 2 132 1 303 1 41 1 213 2 278 1 190 1 45 1 216 1 
36 1 218 1 100 1 229 1 182 1 303 1 72 1 365 1 314 1 114 1 28 1 30 1 279 1 367 1 125 2 31 1 263 1 248 2 149 1 371 1 268 1 216 2 174 2 
143 1 218 1 198 1 100 1 49 1 165 1 72 1 125 1 367 1 127 1 31 1 248 1 108 1 371 1 268 1 373 1 174 1 320 1 303 1 213 2 278 1 279 1 190 1 43 1 45 1 216 1 
206 1 
145 2 46 1 240 1 100 2 242 2 286 4 339 1 250 2 294 1 253 2 254 2 295 1 13 1 60 1 155 2 154 1 211 1 258 1 303 1 112 2 113 1 114 1 262 2 18 1 357 2 71 1 122 1 218 2 26 6 365 2 75 1 314 1 313 1 28 1 367 2 30 1 267 2 83 1 171 2 170 1 268 1 372 1 85 1 318 1 272 1 86 1 226 1 179 2 231 1 277 1 236 5 186 1 44 3 194 1 140 5 
71 1 122 1 240 1 286 2 26 2 75 1 313 1 170 1 250 1 372 1 318 1 295 1 86 1 231 1 277 1 113 1 236 3 186 1 138 1 44 1 194 1 140 3 
71 1 122 1 240 1 26 1 286 3 75 1 313 1 83 1 170 1 372 1 254 1 318 1 295 1 86 1 179 1 231 1 277 1 113 1 236 3 186 1 138 1 44 1 194 1 140 3 
71 1 122 1 240 1 286 3 26 2 75 1 313 1 83 1 170 1 250 1 372 1 253 1 254 1 318 1 295 1 86 1 179 1 231 1 277 1 113 1 236 3 186 1 138 1 44 1 194 1 140 3 
145 2 240 1 242 1 286 6 339 1 250 4 253 4 254 4 295 1 110 1 60 1 154 1 155 2 211 1 113 1 112 2 262 1 18 1 357 2 119 1 71 1 122 1 21 1 26 7 75 1 313 1 83 5 170 1 171 2 372 1 318 1 319 1 86 1 226 1 228 1 179 5 231 1 277 1 236 5 186 1 138 1 44 3 194 1 140 5 
145 2 240 1 242 1 286 4 339 1 250 2 253 2 254 2 295 1 60 1 154 1 155 2 211 1 113 1 112 2 262 1 18 1 357 2 71 1 122 1 26 4 75 1 313 1 267 2 83 1 170 1 171 2 372 1 318 1 272 1 86 1 226 1 179 2 231 1 277 1 236 4 186 1 44 2 194 1 140 4 
71 1 145 2 21 1 122 1 240 1 242 1 26 4 286 4 75 1 313 1 339 1 83 1 250 2 171 2 170 1 372 1 253 2 254 2 318 1 295 1 86 1 226 1 110 1 179 1 60 1 155 2 154 1 211 1 231 1 277 1 112 2 113 1 236 4 186 1 262 1 44 2 18 1 357 2 194 1 140 4 119 1 
71 1 145 2 21 1 122 1 240 1 242 1 26 4 286 4 75 1 313 1 339 1 83 1 250 2 171 2 170 1 372 1 253 2 254 2 318 1 295 1 86 1 226 1 110 1 179 1 60 1 155 2 154 1 211 1 231 1 277 1 112 2 113 1 236 4 186 1 262 1 44 2 18 1 357 2 194 1 140 4 119 1 
71 1 145 2 21 1 122 1 240 1 363 1 242 1 26 4 286 4 75 1 313 1 126 2 339 1 267 2 83 1 250 2 171 2 170 1 370 1 372 1 253 2 254 2 318 1 295 1 86 1 226 1 179 1 60 1 299 2 154 1 211 1 231 1 277 1 113 1 236 4 353 1 186 1 262 1 44 2 194 1 140 4 
71 1 145 2 21 1 122 1 240 1 242 1 286 5 26 5 75 1 313 1 339 1 83 1 171 2 170 1 250 3 372 1 253 3 254 3 318 1 295 1 86 1 226 1 110 1 228 1 179 1 60 1 155 2 154 1 211 1 231 1 277 1 112 2 113 1 236 4 186 1 262 1 44 2 18 1 357 2 194 1 119 1 140 4 
71 1 145 2 21 1 122 1 240 1 242 1 286 5 26 5 75 1 313 1 339 1 83 1 171 2 170 1 250 3 372 1 253 3 254 3 318 1 295 1 86 1 226 1 110 1 228 1 179 1 60 1 155 2 154 1 211 1 231 1 277 1 112 2 113 1 236 4 186 1 262 1 44 2 18 1 357 2 194 1 119 1 140 4 
145 2 240 1 242 1 286 4 339 1 250 2 253 2 254 2 295 1 60 1 299 2 154 1 211 1 113 1 262 1 71 1 122 1 26 4 75 1 313 1 126 2 267 2 83 1 170 1 171 2 370 1 372 1 318 1 272 1 86 1 226 1 179 1 231 1 277 1 236 4 186 1 44 2 194 1 140 4 
99 1 284 1 101 1 161 1 311 1 203 1 74 1 224 1 35 2 177 1 111 1 178 1 324 1 62 1 259 3 134 6 379 3 304 1 280 2 92 2 261 1 137 1 355 2 281 1 69 1 381 1 
0 2 310 1 99 2 284 1 201 1 243 1 161 11 203 2 74 2 369 1 224 2 374 3 12 1 35 1 297 1 62 2 324 4 379 6 134 14 259 8 380 1 304 11 327 1 280 2 91 1 92 4 355 1 137 2 187 2 69 1 332 1 238 1 159 3 
310 1 362 1 99 1 218 1 284 1 100 1 243 1 365 1 74 1 203 1 314 1 30 1 367 1 106 1 223 1 290 1 268 1 57 1 224 1 318 1 86 2 133 1 210 1 324 1 303 1 379 1 134 2 259 1 277 2 306 1 329 1 328 1 92 2 355 1 137 1 189 1 356 1 238 1 
0 2 99 3 284 3 100 3 101 1 243 1 6 1 50 2 9 1 203 3 106 1 340 2 290 1 57 1 12 4 210 2 62 3 303 2 259 10 304 7 355 2 69 3 359 2 20 1 360 2 310 1 362 2 218 3 161 7 311 1 365 1 124 2 74 3 314 2 127 1 367 3 30 2 223 2 224 3 268 2 318 1 35 4 177 1 86 3 178 1 133 2 324 7 379 10 134 20 277 3 328 1 280 8 91 2 92 6 281 1 137 3 187 2 381 1 238 1 
195 1 97 1 310 1 99 2 218 7 284 2 100 8 5 1 168 1 365 2 203 2 74 2 312 1 314 2 28 1 127 1 30 3 367 8 106 1 368 1 290 1 268 2 224 2 318 1 86 1 321 1 273 1 303 2 259 1 134 2 379 1 277 1 233 2 114 1 328 1 261 1 92 4 137 2 238 1 
0 1 98 1 99 1 284 1 161 1 243 1 123 1 203 1 74 1 106 1 224 1 318 1 35 1 86 1 324 1 62 1 259 1 134 3 379 2 277 1 304 1 280 1 328 1 91 1 92 2 137 1 187 1 69 1 70 1 
99 1 296 1 284 1 161 1 324 1 62 1 134 2 259 2 74 1 203 1 304 1 280 1 261 1 92 2 137 1 187 1 224 1 12 1 
35 1 99 1 284 1 161 1 324 1 51 1 134 2 379 2 74 1 203 1 304 1 280 1 91 1 261 1 92 2 137 1 69 1 224 1 
0 1 99 1 284 1 161 2 203 1 74 1 224 1 12 1 35 1 62 1 324 2 259 2 134 4 379 2 304 2 280 2 91 1 92 2 261 1 187 1 137 1 69 1 
99 1 296 1 284 1 161 1 324 1 62 1 134 2 259 2 312 1 74 1 203 1 304 1 280 1 92 2 137 1 187 1 224 1 12 1 
35 1 99 1 284 1 161 1 324 1 51 1 134 2 379 2 312 1 74 1 203 1 304 1 280 1 91 1 92 2 137 1 69 1 224 1 
0 1 99 1 284 1 161 2 203 1 74 1 312 1 224 1 12 1 35 1 62 1 324 2 259 2 134 4 379 2 304 2 280 2 91 1 92 2 187 1 137 1 69 1 
0 1 35 1 99 1 284 1 161 2 324 2 62 1 379 2 259 2 134 4 74 1 203 1 304 2 91 1 280 2 92 2 137 1 187 1 69 1 224 1 12 1 
310 1 362 1 99 1 218 1 284 1 100 1 50 1 365 1 74 1 203 1 314 1 367 1 30 1 223 1 268 1 224 1 86 1 133 1 210 1 259 1 134 2 303 1 379 1 277 1 92 2 355 1 137 1 238 1 
310 1 362 1 99 1 218 1 284 1 100 1 338 1 365 1 74 1 203 1 314 1 367 1 30 1 268 1 224 1 271 1 86 1 133 1 259 1 134 2 303 1 379 1 277 1 92 2 355 1 137 1 95 1 238 1 
0 1 99 1 284 1 243 1 161 2 203 1 74 1 224 1 12 1 35 1 62 1 324 2 259 2 134 4 379 2 304 2 280 2 91 1 92 2 187 1 137 1 69 1 
0 1 97 1 362 1 99 1 218 1 284 1 100 1 161 2 50 1 124 1 74 1 203 1 314 1 367 1 30 1 223 1 268 1 224 1 12 1 35 1 86 1 133 1 210 1 324 2 62 1 379 2 134 4 259 2 303 1 277 1 304 2 91 1 280 2 92 2 187 1 137 1 69 1 
0 1 98 1 99 1 284 1 243 1 161 1 123 1 203 1 74 1 106 1 224 1 269 1 12 1 318 1 86 1 62 1 324 1 379 1 259 2 134 3 277 1 304 1 91 1 280 1 328 1 92 2 137 1 187 1 69 1 
160 1 0 3 99 2 164 1 287 1 203 2 315 2 369 1 224 2 374 1 12 3 35 3 62 3 40 1 379 10 134 19 259 9 157 2 327 1 280 6 91 3 92 4 137 2 187 3 115 1 69 3 308 1 309 1 193 1 159 2 
160 1 0 3 99 3 164 1 148 1 203 3 315 4 104 1 29 2 81 1 224 3 173 1 374 2 12 2 35 2 377 1 62 3 40 2 379 12 134 26 259 14 156 1 157 1 280 4 327 2 91 2 92 6 137 3 187 3 69 2 308 2 309 1 193 1 159 2 
0 4 99 3 101 1 148 1 203 3 287 1 104 1 12 4 62 5 259 20 156 1 157 1 69 5 309 1 308 1 159 4 160 1 311 1 164 1 315 4 29 1 81 1 369 1 224 3 173 1 374 3 35 4 377 1 177 1 178 1 181 1 40 2 134 41 379 21 91 4 280 8 327 3 92 6 187 4 137 3 281 1 381 1 193 1 
160 1 0 4 99 4 101 1 164 1 311 1 148 1 287 1 203 4 104 1 315 4 29 2 81 1 369 1 224 4 173 1 374 3 12 3 35 4 177 1 377 1 178 1 181 1 62 5 40 2 379 18 134 38 259 20 156 1 157 1 327 3 280 7 91 3 92 8 281 1 137 4 187 4 69 4 381 1 308 1 309 1 193 1 159 4 
160 1 0 7 99 2 101 1 164 1 311 1 148 1 203 2 104 1 315 4 29 1 81 1 369 2 224 2 173 1 374 4 12 7 35 7 177 1 377 1 178 1 62 8 40 1 379 25 134 52 259 27 156 1 157 1 327 2 280 14 91 7 92 4 281 1 137 2 187 7 69 8 381 1 332 2 308 1 309 1 193 1 159 4 
54 1 196 1 239 1 285 1 364 1 39 1 331 1 230 1 167 1 260 1 
121 1 200 1 
54 1 196 1 144 1 239 1 364 1 264 1 331 1 230 1 89 1 
212 1 11 1 
180 1 219 1 275 1 
376 1 196 1 239 1 23 1 179 1 364 1 39 1 230 1 167 1 260 1 90 1 54 1 236 1 80 1 158 2 291 1 331 1 140 1 
376 1 196 1 239 1 23 1 179 1 364 1 39 1 230 1 167 1 260 1 90 1 54 1 236 1 80 1 158 2 291 1 331 1 140 1 
376 1 196 1 239 1 23 1 179 1 364 1 39 1 230 1 167 1 260 1 90 1 54 1 236 1 80 1 158 2 291 1 331 1 140 1 
212 1 11 1 275 1 
212 1 11 1 275 1 
180 1 219 1 
180 1 219 1 275 1 
27 1 333 1 
196 1 121 1 239 1 265 1 23 1 333 1 200 1 364 1 245 1 54 1 27 1 106 2 318 2 86 2 15 1 230 1 16 1 277 2 90 1 236 1 328 2 355 1 158 1 188 1 331 1 330 1 140 1 
195 1 310 1 99 1 284 1 218 2 100 2 243 1 336 1 7 1 74 1 203 1 314 1 30 1 367 2 268 1 224 1 318 2 86 2 273 1 303 1 259 1 134 2 379 1 277 2 233 2 136 1 354 1 92 2 137 1 93 1 238 1 
97 1 143 1 218 2 199 1 198 1 100 2 49 1 63 1 303 1 213 2 305 1 278 1 127 1 367 2 190 1 43 1 45 1 268 1 174 1 
143 1 218 1 198 1 100 1 49 1 25 1 303 1 213 2 305 1 278 1 127 1 367 1 190 1 43 1 45 1 268 1 174 1 
218 1 100 1 63 1 182 1 303 1 52 1 365 1 314 1 114 1 28 1 30 1 367 1 268 1 174 1 
143 1 218 1 199 1 198 1 100 1 49 1 63 1 303 1 213 2 305 1 278 1 127 1 367 1 190 1 43 1 45 1 268 1 174 1 
130 1 
10 1 111 1 79 1 262 1 179 1 83 1 242 1 
242 1 26 1 339 1 267 1 83 1 60 1 179 2 154 1 155 1 211 1 112 1 236 1 262 1 18 1 44 1 357 1 140 1 
0 2 97 1 100 3 242 9 147 3 102 1 204 2 10 1 339 4 150 2 345 2 208 2 13 1 60 4 62 2 154 4 211 4 303 3 112 6 352 6 262 8 69 2 360 2 71 2 362 3 218 3 26 5 166 2 365 1 314 3 30 10 367 3 77 1 267 12 79 1 83 2 268 4 175 1 85 2 375 2 88 1 179 8 378 2 323 2 276 6 42 1 235 1 135 2 236 5 185 2 91 2 187 2 44 3 140 5 
0 2 242 8 26 1 166 2 148 1 104 1 339 2 267 6 81 1 83 2 173 1 270 1 374 1 85 1 377 1 13 1 60 2 179 5 62 2 154 2 211 2 276 5 112 3 352 5 185 1 236 1 327 1 91 2 65 1 187 2 262 5 44 1 69 2 140 1 159 1 
334 1 101 1 242 2 166 2 311 1 123 1 76 1 339 1 78 1 106 1 372 1 84 1 318 1 86 1 227 1 178 1 60 1 62 2 154 1 211 1 277 1 185 1 236 1 328 1 262 2 69 1 119 1 140 1 
60 1 179 1 242 1 154 1 211 1 10 1 339 1 79 1 262 1 83 1 
0 2 179 5 242 5 62 2 166 2 276 5 112 5 352 5 185 1 91 2 267 10 187 2 262 5 69 2 360 1 
236 1 179 1 83 1 26 1 44 1 140 1 
218 4 100 4 242 2 26 4 365 2 314 1 28 1 30 1 339 2 367 4 342 1 268 1 294 1 346 1 85 2 13 2 88 2 60 1 154 2 211 2 303 1 258 1 326 1 42 1 114 1 236 3 262 2 44 2 140 3 
310 1 99 1 362 1 218 1 284 1 100 1 50 1 365 1 123 2 203 1 74 1 314 1 367 1 30 1 106 2 223 1 224 1 268 1 318 2 86 3 227 1 133 1 210 1 134 1 379 1 303 1 277 3 184 1 328 2 92 2 355 1 137 1 
85 1 13 1 60 1 179 4 242 1 154 1 211 1 276 2 112 2 352 2 339 1 267 4 281 1 262 2 83 2 
331 1 230 1 244 1 
27 1 331 1 230 1 260 1 141 1 
331 1 230 1 244 1 
331 1 230 1 244 1 
151 1 331 1 230 1 
151 1 331 1 230 1 
151 1 331 1 230 1 
331 1 230 1 
239 1 364 1 
35 2 99 2 177 1 178 1 101 1 62 1 311 1 379 4 134 8 259 4 203 2 280 3 29 1 92 4 281 1 137 2 69 1 224 2 381 1 12 1 
35 2 177 1 111 1 178 1 101 1 62 1 311 1 379 3 259 3 134 6 280 2 281 1 69 1 381 1 
0 1 197 1 35 1 99 1 62 1 379 2 259 2 134 4 203 1 91 1 280 2 92 2 137 1 187 1 69 1 224 1 12 1 
0 1 35 1 62 1 379 4 134 7 259 3 91 1 327 1 280 2 187 1 369 1 69 1 374 1 159 2 12 1 
0 2 99 2 201 1 101 2 311 1 203 2 29 2 369 1 224 2 374 2 12 4 35 5 177 1 178 2 209 1 62 3 259 11 134 23 379 12 280 9 91 2 92 4 281 1 187 2 137 2 69 3 381 1 332 1 159 2 
134 1 379 1 159 1 
134 1 259 1 374 1 
0 1 197 1 35 2 99 1 62 1 379 3 134 6 259 3 203 1 280 3 91 1 92 2 137 1 187 1 69 1 224 1 360 1 12 1 
0 2 99 1 148 1 203 1 104 1 81 1 224 1 173 1 374 1 12 1 35 1 377 1 62 2 134 12 379 6 259 6 327 1 91 2 280 2 92 2 137 1 187 2 69 2 309 1 159 1 
35 1 178 1 101 1 62 1 311 1 259 3 134 6 379 3 280 2 69 1 12 1 
35 1 177 1 99 1 178 1 101 1 209 1 259 1 379 2 134 3 203 1 280 2 29 1 92 2 137 1 224 1 381 1 12 1 
35 3 99 1 178 2 101 2 62 2 311 1 259 5 134 10 379 5 203 1 280 5 92 2 78 1 137 1 69 2 224 1 309 1 12 2 
99 1 62 1 259 2 134 2 203 1 280 1 92 2 137 1 187 1 224 1 309 1 12 1 
0 1 35 1 99 1 62 1 379 2 259 2 134 4 203 1 91 1 280 2 92 2 137 1 187 1 69 1 224 1 309 1 12 1 
35 1 99 3 178 1 209 1 101 1 379 2 134 3 259 1 287 1 203 3 29 1 280 2 92 6 137 3 224 3 309 1 12 1 
0 3 197 1 99 5 101 3 311 2 287 1 203 5 29 2 369 1 224 5 374 3 12 5 35 7 177 1 178 3 209 1 62 5 64 1 379 18 134 34 259 16 327 1 280 12 91 3 92 10 281 1 137 5 187 3 67 1 69 5 381 1 309 1 96 1 159 4 
99 1 101 1 311 1 203 1 81 1 224 1 374 1 35 2 177 1 178 1 62 1 134 8 379 4 259 4 327 1 280 2 92 2 281 1 137 1 69 1 381 1 309 1 159 1 
0 1 197 1 99 2 101 1 311 1 203 2 81 1 369 1 224 2 374 1 12 1 35 2 177 1 178 1 62 2 134 11 379 5 259 6 327 1 280 3 92 4 281 1 137 2 187 1 69 1 381 1 309 1 159 2 
0 2 197 1 99 3 101 1 311 1 148 1 203 3 104 1 29 1 81 1 224 3 173 1 374 1 12 1 35 3 177 1 377 1 178 1 62 3 134 19 379 10 259 9 327 1 91 2 280 4 92 6 281 1 137 3 187 2 69 3 381 1 309 1 159 1 
0 2 197 1 99 3 101 1 311 1 148 1 203 3 104 1 29 1 81 1 224 3 173 1 374 1 12 2 35 3 177 1 377 1 178 1 62 3 134 17 379 7 259 10 327 1 91 1 280 5 92 6 281 1 137 3 187 2 69 2 381 1 309 1 159 1 
99 1 101 1 311 1 203 1 81 1 224 1 374 1 35 2 177 1 178 1 62 1 134 8 379 4 259 4 327 1 280 2 92 2 281 1 137 1 69 1 381 1 309 1 159 1 
0 2 99 1 148 1 203 1 104 1 81 1 224 1 173 1 374 1 12 1 35 1 377 1 62 2 134 12 379 6 259 6 327 1 91 2 280 2 92 2 137 1 187 2 69 2 309 1 159 1 
0 2 197 1 99 4 101 1 311 1 148 1 203 4 104 1 29 2 81 1 224 4 173 1 374 1 12 2 35 3 177 1 377 1 178 1 62 3 134 18 379 8 259 10 327 1 91 1 280 5 92 8 281 1 137 4 187 2 69 2 381 1 309 1 159 1 
0 3 99 4 148 1 203 4 287 1 104 1 29 2 81 1 224 4 173 1 374 1 12 3 35 3 377 1 62 3 134 16 379 7 259 9 327 1 91 2 280 6 92 8 137 4 187 3 69 2 309 1 159 1 
35 3 177 2 178 3 101 3 62 1 311 1 379 4 134 7 259 3 280 6 69 1 381 1 12 3 
0 2 99 4 101 1 311 1 148 1 203 4 287 1 104 1 29 2 81 1 224 4 173 1 374 1 12 1 35 3 177 1 377 1 178 1 62 3 134 18 379 8 259 10 327 1 91 1 280 4 92 8 281 1 137 4 187 2 69 2 381 1 309 1 159 1 
318 1 86 1 266 1 225 1 355 1 170 1 277 1 
318 1 86 1 47 1 225 1 14 1 8 1 277 1 266 1 355 1 107 1 170 1 255 1 
314 1 114 1 28 1 30 1 367 1 111 1 218 1 100 1 268 1 303 1 365 1 
318 1 362 1 86 2 218 1 100 1 133 1 210 1 303 1 277 2 365 1 314 1 30 1 328 1 367 1 106 1 355 1 290 1 268 1 
208 1 318 2 362 2 86 2 122 1 218 1 88 1 100 1 133 1 210 1 303 1 277 2 314 2 204 1 30 3 328 2 367 1 186 1 106 1 355 1 290 1 372 1 268 1 
120 1 362 2 122 1 218 2 100 2 314 2 204 1 367 2 30 3 106 1 290 1 268 1 372 1 318 2 208 1 86 2 88 1 133 1 303 1 277 2 328 2 186 1 355 1 95 1 
120 1 71 1 362 1 218 3 100 3 26 1 147 1 365 1 314 1 204 1 316 1 30 4 367 3 83 1 268 1 208 1 88 1 179 1 323 1 303 1 236 2 140 2 142 1 
120 1 71 1 208 1 362 1 218 3 88 1 100 3 179 1 26 1 323 1 147 1 303 1 365 1 314 1 204 1 236 2 367 3 30 4 83 1 268 1 150 1 140 2 
367 1 218 1 100 1 268 1 303 1 168 1 
195 1 97 1 362 1 321 1 218 6 100 7 5 1 302 1 303 2 233 1 168 1 365 2 235 1 221 1 314 2 127 1 367 7 30 3 66 1 368 1 268 3 
97 1 99 2 284 2 100 1 243 1 101 1 50 1 203 2 106 1 340 1 290 1 210 1 62 1 303 1 259 3 304 1 354 1 355 2 69 1 362 1 218 1 161 1 311 1 124 1 74 2 314 1 367 1 30 1 223 1 224 2 268 1 318 1 35 2 86 2 177 1 178 1 133 1 324 1 134 6 379 3 277 2 328 1 280 2 92 4 137 2 281 1 381 1 
71 1 218 1 100 1 242 1 26 2 147 1 365 1 10 1 339 2 367 1 30 2 79 1 83 1 150 1 345 1 179 1 60 2 378 1 323 1 154 2 211 2 16 1 42 1 135 1 236 3 262 1 44 1 140 3 
97 1 362 1 218 2 100 2 323 1 303 1 168 1 235 1 314 1 367 2 77 1 30 2 268 2 
120 1 97 1 241 1 218 4 100 4 303 1 365 1 314 1 114 1 28 1 367 4 30 1 268 1 
362 1 218 2 88 1 100 2 4 1 6 1 350 1 302 1 303 1 221 1 314 1 367 2 30 1 268 2 
143 1 213 1 367 1 218 1 100 1 49 1 45 1 268 1 303 1 365 1 
195 1 97 1 218 2 100 2 7 1 303 1 314 1 367 2 127 1 30 1 268 1 
195 1 97 1 321 1 241 1 218 4 88 1 100 5 303 2 365 1 314 2 114 1 28 1 367 5 30 3 368 1 268 2 
195 1 97 1 241 1 218 4 88 1 100 5 162 1 303 2 365 1 314 2 114 1 28 1 367 5 30 3 368 1 268 2 
318 1 362 1 86 2 218 1 100 1 133 1 303 1 277 2 365 1 314 1 30 1 328 1 367 1 106 1 355 1 290 1 95 1 268 1 
362 1 218 1 88 1 100 1 302 1 303 1 235 1 221 1 314 1 367 1 30 1 66 1 268 2 
1 1 355 1 32 1 274 1 68 1 
71 1 1 2 122 1 152 1 3 1 179 1 274 2 220 1 16 1 236 2 186 1 355 1 341 1 83 1 32 1 68 2 372 1 194 1 140 2 
318 1 136 1 86 1 93 1 32 1 336 1 274 1 68 1 277 1 
152 1 341 1 32 1 
111 1 132 1 251 1 41 1 
279 1 132 1 31 1 371 1 251 1 41 1 72 1 
125 1 371 1 216 1 
320 1 132 1 232 1 41 1 72 3 214 1 279 1 31 1 82 2 371 3 251 1 139 1 
87 1 279 1 132 1 31 1 371 2 251 1 252 1 41 1 72 2 
320 1 131 1 143 1 72 1 41 1 213 1 279 1 31 1 190 1 371 1 118 1 
320 1 279 1 31 1 371 1 251 1 41 1 72 1 
320 1 279 1 132 1 31 1 371 1 251 2 72 1 
320 1 41 1 72 2 279 2 222 1 237 1 31 2 371 2 19 1 251 1 
320 1 131 1 87 2 132 1 72 3 41 2 366 1 279 1 105 1 31 1 371 3 251 1 361 1 
320 1 143 1 87 1 132 1 202 1 41 1 72 2 213 2 278 1 279 1 31 1 190 1 371 2 251 1 45 1 
320 1 131 1 87 2 132 1 72 4 41 2 279 2 31 2 191 1 371 4 251 1 252 1 361 1 
320 1 279 1 132 1 31 1 371 1 251 1 41 1 72 1 
131 1 87 2 132 2 232 1 72 4 41 3 279 1 247 1 31 1 82 1 371 4 251 2 139 1 361 1 
320 1 87 1 132 1 41 1 72 2 279 1 31 1 33 1 371 2 251 1 343 1 207 1 
320 1 132 1 232 1 41 1 72 3 279 1 31 1 82 2 371 3 192 1 251 1 139 2 
256 1 282 1 344 2 41 2 
320 1 279 1 31 1 307 1 371 1 72 1 
320 1 87 1 366 1 279 1 132 1 31 1 371 2 251 1 41 1 72 2 
129 1 
320 1 279 1 132 1 31 1 371 1 251 1 41 1 72 1 
320 1 87 1 132 1 72 3 41 1 366 1 279 1 31 1 82 1 371 3 251 1 
131 1 247 1 41 1 361 1 
251 1 41 1 

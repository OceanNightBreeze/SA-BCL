#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 140 (145,186) (145,186) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 140 (145,186) (145,186) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 140 (145,186) (145,186) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 140 (145,186) (145,186) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 1 349 1 341 1 41 1 101 2 121 1 163 2 173 3 189 3 211 2 376 1 38 1 181 1 
189 1 52 1 349 1 92 1 101 1 186 1 140 1 145 1 163 1 230 1 173 1 
189 1 52 1 349 1 92 1 101 1 186 1 140 1 145 1 163 1 230 1 173 1 
189 1 52 1 349 1 92 1 101 1 186 1 140 1 145 1 163 1 230 1 173 1 
189 1 52 1 349 1 92 1 101 1 186 1 140 1 145 1 163 1 230 1 173 1 
359 1 340 1 52 1 341 3 41 1 101 1 66 1 119 1 121 1 229 1 163 1 173 4 189 4 211 3 246 1 38 1 181 2 153 2 
52 1 340 1 349 1 41 1 101 1 207 1 121 1 229 1 276 1 163 1 310 1 173 2 230 1 211 1 189 2 212 1 
340 1 359 1 341 7 117 1 41 1 66 1 119 1 121 1 4 1 229 1 173 9 71 1 181 4 153 2 52 1 349 1 101 2 163 2 189 9 211 5 376 1 246 1 110 1 38 3 
340 1 359 1 341 7 117 1 41 1 66 1 119 1 121 1 4 1 229 1 173 9 71 1 181 4 153 2 52 1 349 1 101 2 163 2 189 9 211 5 376 1 246 1 110 1 38 3 
250 1 1 1 131 1 254 1 287 1 162 1 322 1 17 1 259 1 30 1 289 1 44 1 302 1 239 1 
357 1 
250 2 266 1 184 1 14 1 131 2 357 1 260 1 287 1 
282 1 250 5 317 2 266 1 252 1 372 2 296 1 14 2 198 2 131 5 287 2 371 1 314 1 328 1 357 1 260 1 8 1 154 1 281 1 
266 1 357 1 292 1 
78 1 362 2 357 1 
17 2 259 2 312 1 30 2 1 2 289 2 254 1 162 2 
249 2 1 2 363 1 254 1 144 1 89 1 259 3 176 1 30 2 344 1 237 1 152 2 126 1 264 1 265 1 348 1 304 1 33 1 284 1 99 1 288 1 187 1 162 2 56 1 375 1 311 1 133 1 17 2 312 1 245 2 214 1 289 3 168 2 111 1 358 2 222 1 339 1 
17 1 322 1 259 1 30 1 1 1 289 1 254 1 44 1 239 1 162 1 
250 1 266 1 100 1 13 1 255 1 131 1 24 1 259 1 30 1 289 1 357 1 238 1 239 1 114 1 
250 2 1 1 266 1 13 1 131 2 255 1 24 1 162 1 17 1 259 1 30 1 289 1 357 1 239 1 114 1 
62 1 250 1 14 1 131 1 287 1 
250 2 266 1 14 1 171 1 131 2 357 1 260 1 287 1 
250 1 14 1 131 1 
17 1 259 2 312 2 1 1 30 2 289 2 162 1 240 1 21 1 
50 1 303 1 253 1 
249 1 264 1 348 1 284 1 304 1 144 1 89 1 375 1 200 1 259 1 312 1 289 1 168 1 344 1 237 1 152 1 
312 1 292 1 
264 1 249 1 348 1 1 1 304 1 284 1 253 1 144 1 89 1 375 1 17 1 190 1 259 2 30 1 289 2 344 1 168 1 237 1 220 1 152 1 
17 3 190 1 259 3 312 1 30 3 1 3 289 3 162 1 
17 1 259 1 30 1 1 1 289 1 44 1 239 1 
17 1 259 1 30 1 1 1 289 1 239 1 162 1 240 1 21 1 
250 1 249 1 1 3 295 1 363 1 255 1 254 1 144 1 24 1 89 1 259 4 176 1 30 3 344 1 326 1 237 1 152 1 126 1 239 1 240 1 264 1 265 1 348 1 304 1 284 1 13 1 131 1 288 1 187 1 162 2 375 1 133 1 17 3 190 1 312 1 245 2 214 1 289 4 168 1 220 1 111 1 358 1 222 1 114 1 
17 1 259 2 190 1 312 1 30 2 1 1 232 1 100 1 289 2 
250 1 1 3 54 1 13 1 131 1 255 1 24 1 162 1 17 3 190 2 259 3 30 3 289 3 326 1 357 1 220 1 239 1 240 1 114 1 
303 1 1 2 253 1 162 1 17 2 190 1 259 2 30 2 289 2 240 1 
249 1 264 1 348 1 284 1 304 1 144 1 89 1 375 1 259 1 312 1 289 1 168 1 344 1 237 1 152 1 
249 1 264 1 348 1 304 1 144 1 89 1 375 1 353 1 259 1 312 1 31 1 289 1 168 1 237 1 152 1 
86 1 363 1 253 2 120 1 202 1 47 1 129 1 50 2 265 1 303 2 283 1 99 2 185 1 187 1 106 1 133 1 245 2 214 1 291 1 111 2 222 1 358 4 293 1 273 1 
17 1 259 1 30 1 1 1 40 1 289 1 239 1 114 1 
1 4 100 1 162 1 174 1 17 4 190 2 259 5 312 1 30 5 232 1 148 1 289 5 220 1 240 1 
17 2 259 2 40 1 30 2 1 2 289 2 44 1 239 1 
69 1 301 1 257 1 
69 2 39 1 175 1 70 1 379 1 301 2 
69 1 301 1 
69 1 301 1 
175 1 70 1 
175 1 70 1 
175 1 70 1 
69 1 158 1 301 1 
69 1 158 1 301 1 
69 1 158 1 301 1 
69 1 143 1 301 1 
69 1 143 1 301 1 
69 1 143 1 301 1 
250 2 80 1 88 2 42 2 131 2 104 1 35 1 69 2 379 1 338 3 32 1 301 2 370 2 357 1 203 2 85 2 262 1 127 1 225 1 
315 1 250 1 1 2 88 1 42 1 257 1 69 1 259 2 30 2 343 1 201 1 301 1 370 1 203 1 95 1 77 1 53 1 131 1 17 2 312 1 338 1 289 2 224 1 225 1 
107 1 119 1 223 2 229 2 310 1 
340 1 119 1 229 1 
340 1 229 1 310 1 
107 1 119 2 139 1 223 1 229 3 310 1 
165 1 107 1 119 1 223 1 229 2 310 1 
315 1 250 5 317 1 362 3 252 1 198 1 172 1 120 1 342 1 343 1 150 1 371 3 328 2 202 1 260 1 45 1 12 2 53 1 78 1 266 1 332 1 372 1 374 2 14 1 185 1 131 5 333 1 287 4 191 2 291 1 357 2 83 1 
315 4 62 5 250 9 317 2 362 9 252 1 198 2 67 1 120 3 324 1 150 3 371 8 278 1 328 6 202 3 260 1 154 1 263 1 76 1 12 6 78 3 266 1 332 2 372 2 374 6 14 6 185 3 131 9 333 1 287 7 350 5 108 1 291 3 357 5 83 2 
315 1 250 3 317 1 362 4 198 1 120 1 342 1 371 3 150 1 328 2 202 1 45 1 154 1 12 2 78 2 266 1 332 1 372 1 374 2 185 1 131 3 287 2 191 1 357 3 83 1 291 1 
315 2 250 4 317 1 362 7 198 1 120 2 67 1 342 1 371 5 150 2 278 1 328 4 202 2 45 1 154 1 76 1 12 4 78 3 266 1 332 1 372 1 374 4 185 2 131 4 287 3 191 2 357 4 83 1 291 2 
74 1 
271 1 237 1 292 1 
237 1 221 1 
304 1 237 1 
91 1 271 2 304 1 237 3 364 1 89 1 
304 1 237 1 89 1 
248 1 237 1 
115 2 99 4 120 1 308 1 209 1 122 1 366 1 355 1 135 1 82 1 277 1 124 1 291 1 111 3 293 2 125 1 358 7 47 3 
115 3 120 4 122 2 90 1 366 1 277 1 94 1 124 2 150 3 202 3 47 10 155 1 10 1 265 1 99 16 185 3 308 5 187 1 309 3 209 1 57 1 133 1 355 1 245 2 135 2 82 2 214 1 313 4 290 1 272 1 291 4 111 15 358 31 293 5 
115 1 120 2 122 1 366 1 277 1 325 1 124 1 46 1 47 3 265 1 99 5 308 1 187 1 209 1 133 1 245 2 135 1 214 1 82 1 218 1 291 2 111 4 358 9 293 2 
115 2 99 4 120 1 308 1 209 1 122 1 366 1 355 1 135 1 82 1 277 1 124 1 291 1 111 3 293 2 358 7 47 3 
115 2 99 4 120 1 308 1 209 1 122 1 366 1 355 1 135 1 82 1 277 1 124 1 291 1 111 3 293 2 358 7 47 3 
249 1 251 1 144 1 26 1 173 1 151 2 237 1 152 1 264 1 349 2 79 1 205 1 304 1 285 1 101 1 375 1 163 1 164 1 189 1 377 1 18 2 167 2 168 1 
340 1 249 1 196 1 119 1 144 1 229 2 173 1 149 1 151 1 345 1 152 1 204 1 52 1 264 1 349 1 206 1 268 1 101 1 163 1 310 1 189 1 18 1 167 1 168 1 217 1 139 1 
340 1 249 1 341 1 196 1 41 1 119 1 121 1 144 1 229 2 173 2 149 1 151 1 345 1 152 1 52 1 264 1 349 1 206 1 268 1 101 1 163 1 310 1 211 1 189 2 18 1 167 1 168 1 216 1 217 1 139 1 
340 1 249 1 251 1 341 2 196 1 41 1 119 1 121 1 144 1 229 2 173 3 151 1 345 1 152 1 204 1 264 1 349 1 206 1 268 1 101 1 15 1 163 1 310 1 211 1 189 3 18 1 167 1 168 1 139 1 217 1 
249 1 340 1 341 2 196 1 41 1 119 1 121 1 144 1 229 2 173 2 151 1 152 1 204 1 264 1 349 1 268 1 15 1 310 1 211 1 189 2 18 1 167 1 168 1 217 1 139 1 
378 1 
250 5 249 2 252 1 2 1 43 2 198 1 255 1 144 1 146 1 259 1 299 1 260 3 152 2 264 1 266 1 205 1 159 4 304 1 100 1 13 1 14 6 161 1 210 2 269 2 60 2 168 2 356 1 357 2 114 1 226 1 316 2 317 1 170 1 362 2 319 1 24 1 28 1 30 1 235 2 371 2 328 2 237 1 238 1 239 1 78 2 79 1 130 1 332 1 372 1 131 5 375 2 380 2 289 1 192 1 194 1 
250 3 255 1 24 1 146 1 28 1 259 1 30 1 235 1 260 1 238 1 239 1 159 2 184 1 100 1 13 1 14 2 131 3 161 1 289 1 356 1 192 1 114 1 
250 3 255 1 24 1 146 1 28 1 259 1 30 1 260 1 238 1 239 1 266 1 159 3 184 1 100 1 13 1 14 1 131 3 161 1 210 1 289 1 356 1 192 1 357 1 114 1 
250 3 255 1 24 1 146 1 28 1 259 1 30 1 235 1 260 1 238 1 239 1 266 1 159 3 184 1 100 1 13 1 14 2 131 3 161 1 210 1 60 1 289 1 356 1 192 1 357 1 114 1 
250 5 252 1 198 1 43 2 255 1 146 1 147 1 259 1 299 1 260 3 49 1 96 1 266 5 159 6 13 1 100 1 14 7 161 1 210 4 269 2 60 4 356 1 357 5 114 1 316 2 317 1 170 1 24 1 28 1 30 1 369 1 235 4 371 1 328 1 239 1 238 1 182 1 78 2 184 1 372 1 131 5 289 1 380 2 192 1 
250 4 252 1 198 1 43 2 255 1 146 1 259 1 299 1 260 2 266 1 159 4 13 1 100 1 14 4 161 1 210 2 269 2 60 2 356 1 357 2 114 1 316 2 317 1 170 1 362 2 319 1 24 1 28 1 30 1 371 1 235 2 328 1 239 1 238 1 78 2 372 1 131 4 289 1 380 2 192 1 
316 2 250 4 317 1 170 1 252 1 43 2 198 1 255 1 24 1 146 1 28 1 147 1 259 1 30 1 299 1 235 2 371 1 328 1 260 2 238 1 239 1 182 1 49 1 78 2 266 1 159 4 100 1 13 1 372 1 14 4 131 4 161 1 210 2 269 2 60 2 380 2 289 1 356 1 192 1 357 1 114 1 
316 2 250 4 317 1 170 1 252 1 43 2 198 1 255 1 24 1 146 1 28 1 147 1 259 1 30 1 299 1 235 2 371 1 328 1 260 2 238 1 239 1 182 1 49 1 78 2 266 1 159 4 100 1 13 1 372 1 14 4 131 4 161 1 210 2 269 2 60 2 380 2 289 1 356 1 192 1 357 1 114 1 
250 4 317 1 361 2 170 1 197 1 362 2 252 1 198 1 255 1 24 1 146 1 28 1 258 2 259 1 30 1 235 2 371 1 328 1 260 2 238 1 239 1 49 1 266 1 159 4 100 1 13 1 372 1 14 4 373 1 208 1 131 4 161 1 210 2 269 2 60 2 380 2 289 1 356 1 192 1 357 1 114 1 
316 2 250 4 317 1 170 1 252 1 43 2 198 1 255 1 24 1 146 1 28 1 147 1 259 1 30 1 299 1 369 1 371 1 235 3 328 1 260 2 238 1 239 1 182 1 49 1 78 2 266 1 159 5 372 1 100 1 13 1 14 5 131 4 161 1 210 3 269 2 60 3 380 2 289 1 356 1 192 1 357 1 114 1 
316 2 250 4 317 1 170 1 252 1 43 2 198 1 255 1 24 1 146 1 28 1 147 1 259 1 30 1 299 1 369 1 371 1 235 3 328 1 260 2 238 1 239 1 182 1 49 1 78 2 266 1 159 5 372 1 100 1 13 1 14 5 131 4 161 1 210 3 269 2 60 3 380 2 289 1 356 1 192 1 357 1 114 1 
250 4 252 1 198 1 255 1 146 1 259 1 258 2 260 2 266 1 159 4 13 1 100 1 14 4 208 1 161 1 210 2 269 2 60 2 356 1 357 1 114 1 317 1 170 1 361 2 362 2 319 1 24 1 28 1 30 1 371 1 235 2 328 1 239 1 238 1 372 1 131 4 289 1 380 2 192 1 
0 1 249 8 1 1 363 2 144 2 259 1 30 1 176 1 73 1 237 3 152 7 7 1 9 1 204 1 264 2 265 2 79 1 205 1 304 2 99 1 187 2 375 2 311 1 17 1 133 2 190 1 245 4 214 2 289 1 138 1 168 8 216 1 109 1 20 1 111 1 222 2 358 2 339 2 273 1 
1 1 363 1 253 1 120 1 323 1 259 1 30 1 150 1 202 1 47 1 240 1 50 1 303 1 265 1 99 1 185 1 187 1 162 1 243 1 17 1 133 1 245 2 214 1 289 1 291 1 111 2 293 1 222 1 358 3 
115 1 363 1 253 1 120 1 122 1 366 1 277 1 47 2 50 1 303 1 265 1 99 3 187 1 209 1 133 1 312 2 245 2 82 1 214 1 291 1 292 1 111 3 222 1 293 2 358 6 273 1 
363 1 253 11 120 1 68 1 323 1 176 1 94 1 150 2 202 2 47 2 50 11 265 2 303 4 99 8 102 1 185 1 308 1 187 2 309 3 188 1 311 1 133 2 312 1 245 4 214 2 19 1 313 3 290 1 291 2 111 6 293 1 222 2 358 14 
249 1 1 1 363 1 144 1 89 1 200 1 323 1 259 2 30 1 176 1 344 1 327 1 237 1 329 1 152 1 264 1 348 1 303 1 265 1 304 1 284 1 99 1 187 1 375 1 311 1 133 1 17 1 190 1 312 1 245 2 214 1 289 2 168 1 381 1 220 1 111 1 222 1 358 2 
249 3 1 1 253 7 144 2 89 2 259 3 344 2 150 2 202 2 152 3 261 1 47 8 204 1 50 7 264 2 265 3 348 2 303 7 304 2 99 10 307 1 308 4 351 1 209 1 352 2 311 1 17 1 312 2 214 3 168 3 220 1 111 10 222 3 358 20 115 1 360 2 363 3 120 3 122 1 366 1 323 1 176 1 30 1 277 1 237 2 126 2 284 2 185 2 187 3 375 1 133 3 190 1 36 2 245 6 136 2 82 1 289 3 291 3 293 4 
50 1 303 1 265 1 86 1 99 2 363 1 253 1 308 1 187 1 133 1 245 2 214 1 202 1 291 1 358 2 222 1 47 1 273 1 
50 1 129 1 303 1 265 1 363 1 253 1 185 1 120 1 187 1 133 1 245 2 214 1 111 2 293 1 358 2 222 1 47 1 273 1 
363 1 253 2 120 1 150 1 202 1 47 2 50 2 265 1 303 2 99 2 185 1 308 1 187 1 133 1 245 2 214 1 291 1 111 2 222 1 358 4 293 1 273 1 
50 1 303 1 265 1 86 1 99 2 363 1 253 1 308 1 187 1 133 1 245 2 214 1 202 1 291 1 358 2 7 1 222 1 47 1 
50 1 129 1 303 1 265 1 363 1 253 1 185 1 120 1 187 1 133 1 245 2 214 1 111 2 293 1 358 2 7 1 222 1 47 1 
363 1 253 2 120 1 150 1 202 1 7 1 47 2 50 2 265 1 303 2 99 2 185 1 308 1 187 1 133 1 245 2 214 1 291 1 111 2 222 1 358 4 293 1 
50 2 303 2 265 1 99 2 363 1 185 1 253 2 120 1 308 1 187 1 133 1 245 2 214 1 150 1 202 1 291 1 111 2 293 1 222 1 358 4 47 2 
249 1 363 1 144 1 89 1 259 1 176 1 344 1 237 1 152 1 126 1 264 1 348 1 265 1 304 1 284 1 99 1 187 1 375 1 311 1 133 1 312 1 245 2 214 1 289 1 168 1 111 1 358 2 222 1 
249 1 363 1 144 1 89 1 259 1 176 1 31 1 237 1 152 1 264 1 348 1 265 1 304 1 99 1 187 1 375 1 311 1 353 1 133 1 312 1 245 2 214 1 289 1 168 1 111 1 358 2 113 1 222 1 
363 1 253 2 120 1 323 1 150 1 202 1 47 2 50 2 265 1 303 2 99 2 185 1 308 1 187 1 133 1 245 2 214 1 291 1 111 2 222 1 358 4 293 1 
249 1 360 1 363 1 253 2 120 1 144 1 89 1 259 1 344 1 150 1 237 1 202 1 152 1 126 1 47 2 50 2 264 1 303 2 348 1 265 1 284 1 304 1 99 2 185 1 308 1 187 1 133 1 245 2 214 1 289 1 168 1 216 1 291 1 111 2 293 1 358 4 222 1 
1 1 363 1 253 1 120 1 323 1 259 1 30 1 150 1 202 1 47 1 240 1 50 1 265 1 303 1 99 2 185 1 308 1 103 1 187 1 162 1 17 1 133 1 245 2 214 1 289 1 291 1 111 1 222 1 358 3 
142 1 120 3 298 1 325 1 179 1 94 1 150 3 202 3 47 6 265 2 267 1 99 9 286 1 185 3 132 1 308 3 242 1 187 2 309 1 133 2 245 4 270 2 214 2 61 2 313 2 290 1 291 3 111 10 293 3 358 19 
142 1 120 2 228 1 123 1 297 1 298 2 325 1 179 1 150 3 202 3 47 4 10 2 265 3 267 2 99 14 286 1 306 1 185 2 308 2 187 3 309 2 105 1 133 3 245 6 270 1 214 3 61 4 313 2 247 1 290 2 291 3 111 12 293 2 358 26 
115 1 142 1 227 1 120 5 228 1 122 1 366 1 123 1 297 1 298 2 277 1 325 1 179 1 94 1 150 4 202 4 47 8 10 1 265 3 267 1 99 20 306 1 286 1 185 4 308 4 242 1 187 3 309 3 105 1 209 1 133 3 245 6 270 1 82 1 214 3 61 4 313 4 247 1 290 3 291 5 111 21 293 4 358 41 
115 1 142 1 227 1 120 4 228 1 122 1 366 1 123 1 297 1 298 2 277 1 325 1 179 1 94 1 150 4 202 4 47 7 10 2 265 4 267 1 99 20 306 1 286 1 185 3 308 3 242 1 187 4 309 3 105 1 209 1 133 4 245 8 270 1 82 1 214 4 61 4 313 4 247 1 290 3 291 5 111 18 293 4 358 38 
115 1 142 1 120 8 228 1 122 1 366 1 123 1 297 1 298 1 277 1 325 1 179 1 94 2 150 7 202 7 47 14 10 1 265 2 267 1 99 27 306 1 286 1 185 7 308 7 187 2 309 4 105 1 209 1 133 2 245 4 270 1 82 1 214 2 61 4 19 2 313 4 247 1 290 2 291 8 111 25 293 7 358 52 
35 1 69 1 379 1 88 1 301 1 42 1 370 1 104 1 280 1 203 1 
257 1 95 1 
69 1 88 1 34 1 301 1 42 1 370 1 335 1 203 1 16 1 
250 1 80 1 88 1 42 1 131 1 104 1 35 1 69 1 379 1 338 2 32 1 301 1 370 1 357 1 203 1 85 1 262 1 225 1 
250 1 80 1 88 1 42 1 131 1 104 1 35 1 69 1 379 1 338 2 32 1 301 1 370 1 357 1 203 1 85 1 262 1 225 1 
250 1 80 1 88 1 42 1 131 1 104 1 35 1 69 1 379 1 338 2 32 1 301 1 370 1 357 1 203 1 85 1 262 1 225 1 
39 1 158 1 169 1 
39 1 158 1 169 1 
368 1 143 1 
39 1 368 1 143 1 
201 1 224 1 
315 1 250 1 1 2 88 1 42 1 257 1 259 2 69 1 343 1 201 1 30 2 300 1 301 1 370 1 203 1 262 1 95 1 77 1 53 1 131 1 287 1 17 2 312 1 338 1 289 2 85 1 224 1 
158 1 169 1 
39 1 368 1 143 1 
249 2 363 1 22 1 118 1 144 1 323 1 259 2 30 2 176 1 237 1 346 1 152 2 9 1 264 1 265 1 304 1 99 1 187 1 311 1 133 1 245 2 59 1 214 1 289 2 168 2 109 1 84 1 111 1 222 1 358 2 339 2 
264 1 249 1 79 1 205 1 304 1 144 1 375 1 164 1 81 1 18 1 137 1 168 1 237 1 152 1 
340 1 264 1 249 1 268 1 119 1 25 1 144 1 229 2 310 1 337 1 18 1 137 1 168 1 139 1 217 1 345 1 152 1 204 1 
340 1 264 1 249 2 268 1 119 1 144 1 25 1 229 2 310 1 337 1 18 1 137 1 168 2 139 1 216 1 217 1 345 1 152 2 204 1 
11 1 340 1 249 1 264 1 268 1 119 1 144 1 229 2 310 1 337 1 18 1 168 1 139 1 217 1 345 1 152 1 204 1 
233 1 
282 1 317 1 266 1 252 1 372 1 198 1 371 1 328 1 357 1 8 1 
116 1 141 2 12 5 78 5 362 10 374 5 185 2 120 2 36 1 150 2 371 5 328 5 202 2 291 2 357 5 
250 1 266 1 14 1 131 1 357 1 260 1 
226 1 249 4 250 3 317 2 294 1 318 2 252 1 198 2 144 1 371 2 237 1 236 1 328 2 260 2 152 4 154 1 330 1 264 1 79 1 130 1 205 1 304 1 332 2 372 2 14 4 131 3 375 2 168 4 194 2 
282 1 266 1 371 1 328 1 357 1 292 1 8 1 
316 1 250 1 317 1 252 1 362 1 198 1 43 1 299 1 371 1 328 1 260 1 78 1 266 1 372 1 14 1 131 1 357 2 
141 2 249 3 250 5 248 2 252 4 198 4 255 2 144 3 89 3 6 2 150 2 260 3 202 2 152 3 8 1 12 6 264 4 266 2 304 3 98 1 14 5 354 2 271 2 168 3 216 1 357 8 221 3 116 2 63 1 317 4 318 1 362 12 364 1 120 2 177 2 371 9 236 1 237 10 328 8 180 2 282 1 78 6 331 1 332 2 372 4 374 6 185 2 131 5 336 2 375 1 36 2 37 2 291 2 194 1 
116 1 141 2 250 1 317 2 362 6 252 2 198 2 120 2 228 1 199 1 297 1 371 8 150 2 328 5 260 1 202 2 12 5 78 3 266 2 332 1 372 2 14 1 374 5 306 1 185 2 131 1 309 1 105 1 313 1 247 1 290 1 357 5 291 2 193 1 194 1 
116 1 141 2 250 1 317 1 1 1 252 1 198 1 254 1 120 1 122 1 322 1 259 1 366 1 30 1 371 2 328 2 44 1 302 1 239 1 182 1 372 1 131 1 162 1 17 1 82 1 289 1 218 1 291 2 
249 1 1 2 363 1 254 1 144 1 89 1 259 3 176 1 30 2 344 1 237 1 152 1 126 1 264 1 348 1 265 1 284 1 304 1 288 1 187 1 162 2 375 1 133 1 17 2 312 1 245 2 214 1 289 3 168 1 111 1 358 1 222 1 
115 1 12 2 78 2 317 1 266 2 332 1 362 4 252 1 372 1 374 2 198 1 371 1 328 2 357 4 194 1 
244 1 35 1 201 1 370 1 203 1 
274 1 370 1 203 1 
274 1 370 1 203 1 
274 1 370 1 203 1 
156 1 370 1 203 1 
156 1 370 1 203 1 
156 1 370 1 203 1 
370 1 203 1 
69 1 301 1 
265 1 99 5 308 2 120 2 187 1 122 2 133 1 366 1 245 2 214 1 82 2 325 1 218 1 291 2 111 5 293 3 358 10 47 5 
265 1 99 2 308 1 187 1 133 1 245 2 214 1 325 1 202 1 291 1 358 2 47 1 
265 1 99 2 185 1 120 1 308 1 187 1 133 1 245 2 214 1 325 1 150 1 202 1 291 1 111 2 293 1 358 4 47 2 
265 3 99 1 308 1 242 1 187 3 122 1 133 3 245 6 178 1 214 3 82 1 325 1 111 2 358 3 293 1 47 2 10 1 
115 1 64 1 120 5 122 3 90 1 366 2 277 1 178 1 325 1 94 1 150 3 202 3 47 12 10 2 265 5 99 16 185 3 308 5 242 1 187 5 309 3 209 1 57 1 133 5 245 10 82 3 214 5 313 4 290 1 272 1 291 5 111 18 358 34 293 7 
115 1 265 2 99 4 120 1 308 1 187 2 209 1 122 1 133 2 366 1 245 4 214 2 277 1 82 1 291 1 111 4 358 8 293 2 47 3 10 1 
115 1 99 3 120 1 209 1 122 1 366 1 277 1 82 1 291 1 111 3 292 1 293 2 358 6 47 2 
265 1 64 1 99 2 185 1 120 1 308 1 187 1 133 1 245 2 214 1 150 1 202 1 291 1 111 2 293 1 358 4 47 2 
99 3 185 1 120 1 308 1 309 1 313 2 290 1 94 1 150 1 202 1 291 1 111 4 293 1 358 7 47 2 
115 1 120 3 122 2 366 1 277 1 178 1 150 2 94 1 202 2 47 9 10 2 265 2 99 11 185 2 308 4 309 2 187 2 188 1 209 1 133 2 245 4 82 2 214 2 19 1 313 2 291 3 111 12 358 23 293 5 
313 1 111 1 358 1 
99 1 309 1 358 1 
265 1 64 1 99 3 185 1 308 1 120 1 187 1 133 1 36 1 245 2 214 1 150 1 202 1 291 1 111 3 358 6 293 2 47 3 
120 2 228 1 297 1 325 1 150 2 202 2 47 2 265 1 99 6 306 1 185 2 308 1 309 1 187 1 105 1 133 1 245 2 214 1 313 1 247 1 290 1 291 2 111 6 358 12 293 1 
99 3 120 1 308 1 122 1 366 1 82 1 291 1 111 3 358 6 293 1 47 2 
265 1 99 1 308 1 187 1 209 1 122 1 133 1 245 2 82 1 178 1 214 1 277 1 111 2 293 1 358 3 47 2 10 1 
115 1 265 1 99 4 120 1 187 1 309 1 105 1 209 1 122 1 133 1 366 1 245 2 82 1 277 1 214 1 325 1 313 1 290 1 291 1 111 4 293 2 358 8 47 2 
115 1 64 1 120 1 122 1 366 1 277 1 325 1 94 1 150 1 202 1 47 3 265 2 99 6 308 1 187 2 309 1 105 1 209 1 133 2 245 4 82 1 214 2 313 2 290 1 291 2 111 5 293 2 358 11 
115 1 64 1 120 3 228 1 122 1 366 1 297 1 277 1 325 1 150 2 202 2 47 4 10 1 265 3 99 9 306 1 185 2 308 1 309 1 187 3 105 1 209 1 133 3 245 6 82 1 214 3 313 1 247 1 290 1 291 3 111 10 358 19 293 3 
115 1 64 1 120 2 228 1 122 1 366 1 297 1 277 1 325 1 150 2 202 2 47 5 10 1 265 3 99 10 306 1 185 1 308 2 309 1 187 3 105 1 209 1 133 3 245 6 82 1 214 3 313 1 247 1 290 1 291 3 111 7 358 17 293 3 
115 1 265 1 99 4 120 1 187 1 309 1 105 1 209 1 122 1 133 1 366 1 245 2 82 1 277 1 214 1 325 1 313 1 290 1 291 1 111 4 293 2 358 8 47 2 
120 2 228 1 297 1 325 1 150 2 202 2 47 2 265 1 99 6 306 1 185 2 308 1 309 1 187 1 105 1 133 1 245 2 214 1 313 1 247 1 290 1 291 2 111 6 358 12 293 1 
115 1 64 1 120 2 228 1 122 1 366 1 297 1 277 1 325 1 150 2 202 2 47 5 10 2 265 4 99 10 306 1 185 1 308 2 187 4 309 1 105 1 209 1 133 4 245 8 82 1 214 4 313 1 247 1 290 1 291 3 111 8 358 18 293 3 
120 2 228 1 297 1 325 1 150 3 202 3 47 6 10 2 265 4 99 9 306 1 185 2 308 3 187 4 242 1 309 1 105 1 133 4 245 8 214 4 313 1 247 1 290 1 291 3 111 7 358 16 293 3 
99 3 120 1 308 3 209 2 122 3 366 1 277 1 82 3 291 1 111 4 358 7 293 3 47 6 
115 1 120 2 228 1 122 1 366 1 297 1 277 1 325 1 150 2 202 2 47 4 10 2 265 4 99 10 306 1 185 1 308 1 187 4 242 1 309 1 105 1 209 1 133 4 245 8 82 1 214 4 313 1 247 1 290 1 291 3 111 8 358 18 293 3 
259 1 195 1 312 1 30 1 232 1 289 1 100 1 
48 1 259 1 195 1 183 1 312 1 30 1 232 1 289 1 100 1 334 1 279 1 27 1 
264 1 249 4 79 1 205 1 304 1 144 1 375 1 215 1 168 4 216 1 237 1 152 4 347 1 
128 1 249 2 264 2 318 1 304 1 144 1 351 1 89 1 29 1 58 1 168 2 237 1 152 2 112 1 
340 1 264 1 249 1 268 1 168 1 144 1 152 1 229 1 310 1 375 1 
249 2 264 1 304 1 144 1 59 1 168 2 216 1 237 1 152 2 9 1 204 1 
249 5 264 2 79 1 318 1 205 1 304 2 144 2 375 1 168 5 216 1 73 1 237 3 20 1 152 4 347 1 9 1 
249 5 264 2 79 1 318 1 205 1 304 2 144 2 375 1 367 1 168 5 216 1 237 3 20 1 152 4 347 1 9 1 
264 1 249 1 79 1 205 1 304 1 168 1 237 1 144 1 292 1 152 1 375 1 
264 1 249 1 348 1 1 1 304 1 144 1 89 1 375 1 17 1 190 1 259 2 312 1 30 1 289 2 168 1 344 1 237 1 152 1 
248 1 264 1 249 1 348 1 1 2 318 1 304 2 13 1 144 1 89 2 17 1 190 1 259 2 312 1 30 2 37 1 289 2 168 1 344 1 237 3 152 1 239 1 114 1 
249 2 248 1 1 2 318 1 144 1 89 2 259 2 30 2 31 1 237 3 152 2 239 1 264 1 348 1 304 2 13 1 17 1 190 1 312 1 215 1 37 1 289 2 168 2 114 1 
249 3 250 2 248 1 318 1 255 1 144 1 89 1 231 1 72 1 237 4 152 3 264 1 266 1 304 1 14 1 131 2 375 1 271 1 215 1 37 1 168 3 357 1 221 1 
248 1 264 1 250 2 249 3 266 1 318 1 304 1 14 1 255 1 131 2 144 1 89 1 375 1 354 1 271 1 215 1 37 1 168 3 237 4 357 1 152 3 221 1 
264 1 249 1 0 1 168 1 144 1 152 1 
0 1 249 7 264 3 304 2 364 1 144 2 89 1 375 2 365 1 58 1 138 1 168 7 216 1 73 1 237 3 20 1 152 6 112 1 339 1 9 1 204 1 
249 1 1 1 253 1 144 1 89 1 259 2 344 1 152 1 47 2 50 1 264 1 303 1 265 2 348 1 304 1 99 3 352 1 209 1 17 1 312 2 214 2 168 1 216 1 111 3 222 2 358 6 115 1 360 1 363 2 118 1 120 1 122 1 323 1 366 1 30 1 277 1 237 1 126 1 284 1 187 2 133 2 190 1 245 4 82 1 289 2 291 1 293 2 
250 3 249 1 317 2 252 2 198 2 255 1 177 1 371 1 328 1 236 1 237 2 260 1 152 1 180 1 8 1 282 1 266 1 372 2 14 2 131 3 287 1 375 1 336 1 354 1 271 1 168 1 357 1 221 1 
0 1 249 2 264 2 331 1 304 1 364 1 144 1 89 1 271 1 168 2 216 1 237 2 152 2 
264 1 249 1 348 1 1 1 304 1 144 1 89 1 375 1 17 1 190 1 259 2 312 1 30 1 31 1 289 2 168 1 237 1 152 1 
249 1 264 2 318 1 304 1 364 1 144 1 89 1 365 1 58 1 168 1 237 1 152 1 112 1 
22 1 275 1 55 1 321 1 259 1 30 1 289 1 346 1 84 1 
234 1 219 1 55 1 
312 1 51 1 275 1 55 1 321 1 
250 2 51 2 266 1 13 1 55 1 275 2 255 1 3 1 131 2 287 1 24 1 321 2 312 1 234 1 326 1 219 1 357 1 239 1 114 1 
211 1 189 1 52 1 41 1 101 1 121 1 163 1 173 1 
341 2 41 2 65 1 101 1 320 1 121 2 163 1 173 4 189 4 211 3 212 1 93 1 38 1 181 1 
52 1 157 1 341 1 41 1 101 1 256 1 4 1 121 1 163 1 173 2 211 1 189 2 
52 1 41 1 65 2 101 1 305 1 320 1 121 1 163 1 173 3 211 1 189 3 212 2 
211 2 160 1 241 2 5 1 
189 1 52 1 87 1 101 1 163 1 173 1 
211 1 189 2 52 1 341 1 117 1 41 1 101 1 121 1 163 1 173 2 
134 1 
211 1 189 1 52 1 41 1 101 1 121 1 163 1 173 1 
211 1 41 1 121 1 292 1 
211 1 189 1 41 1 101 1 121 1 163 1 173 1 
349 1 167 1 173 1 
52 1 97 1 41 1 65 1 101 1 320 1 121 1 163 1 173 3 211 1 189 3 212 2 
211 1 189 2 341 1 41 1 101 1 121 1 153 1 163 1 173 2 
52 1 340 1 101 1 119 1 229 1 163 1 173 1 189 1 211 1 246 1 181 1 
211 1 189 1 52 1 41 1 101 1 163 1 173 1 
189 1 52 1 41 2 101 1 121 1 163 1 173 1 
52 1 41 1 101 2 23 1 163 2 173 2 211 1 189 2 166 1 75 1 
52 1 117 1 341 2 41 1 101 1 121 1 163 1 173 3 189 3 211 2 71 1 38 1 181 1 
52 1 340 1 341 1 41 1 101 1 119 1 121 1 229 2 310 1 163 1 173 2 211 1 189 2 213 1 139 1 
52 1 359 1 341 2 41 1 101 2 121 1 163 2 173 4 189 4 211 2 38 1 181 1 153 1 
52 1 341 1 117 1 41 1 101 1 121 1 163 1 173 3 189 3 211 1 212 1 
211 1 93 1 181 1 38 1 
211 1 41 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 1 0 9 234 2 261 1 212 1 339 2 158 1 298 1 10 2 299 4 55 1 165 1 323 2 95 1 139 1 80 1 344 2 79 3 141 6 379 1 274 1 347 1 123 2 200 2 352 9 280 1 228 5 229 1 
43 1 0 9 234 2 261 1 212 1 339 2 158 1 298 1 10 2 299 4 55 1 165 1 323 2 95 1 139 1 80 1 344 2 79 3 141 6 379 1 274 1 347 1 123 2 200 2 352 9 280 1 228 5 229 1 
43 1 0 10 234 2 261 1 212 1 339 2 158 1 298 1 10 2 299 5 55 1 165 1 323 2 95 1 139 1 80 1 344 2 79 4 141 7 379 1 274 1 347 1 123 2 200 2 352 10 280 1 228 6 229 1 
43 1 0 7 234 2 261 1 212 1 339 1 158 1 298 1 10 2 299 3 55 1 165 1 323 2 95 1 139 1 80 1 344 2 79 2 141 4 379 1 274 1 347 1 123 2 200 2 352 7 228 4 229 1 
43 1 0 4 323 1 80 1 79 1 344 1 141 3 261 1 347 1 123 1 200 1 339 2 352 4 158 1 10 1 299 2 280 1 228 3 
43 1 0 2 14 1 80 1 344 1 234 1 347 1 123 1 200 1 156 1 176 1 352 2 298 1 10 1 228 1 55 1 
43 1 0 3 165 1 80 1 344 2 234 1 79 1 141 1 347 1 123 2 352 3 299 1 228 2 
43 1 0 9 234 1 261 1 339 2 158 1 299 4 10 1 165 1 323 1 95 1 80 1 79 3 344 2 141 7 347 1 123 2 200 1 84 1 104 1 352 9 228 5 229 1 280 1 
43 1 0 9 234 1 261 1 339 2 158 1 299 4 10 1 165 1 323 1 95 1 80 1 79 3 344 2 141 7 347 1 123 2 200 1 84 1 104 1 352 9 228 5 229 1 280 1 
56 1 118 1 180 1 
355 2 118 1 226 1 
322 2 120 1 172 2 114 1 33 2 175 2 41 2 49 2 
313 1 314 1 236 1 68 2 90 1 49 2 4 1 296 1 316 2 114 1 365 1 363 1 29 2 368 1 322 3 164 1 372 1 74 1 120 1 375 1 33 2 77 1 303 1 34 1 196 2 143 1 171 1 172 2 124 1 310 1 276 2 127 1 128 1 175 2 227 1 178 1 41 3 
5 1 322 1 204 1 172 1 114 1 33 1 175 1 94 1 41 1 49 1 
322 1 118 1 180 1 301 1 204 1 76 1 138 1 286 1 153 1 294 1 83 1 172 1 201 1 41 1 
322 1 118 1 180 1 204 1 76 1 33 1 138 1 153 1 49 1 294 2 83 2 172 1 201 1 175 1 41 1 
197 1 294 1 83 1 53 1 354 1 
197 1 118 1 180 1 294 2 83 2 53 1 289 1 182 1 
294 1 83 1 53 1 
322 1 204 1 33 1 49 1 5 1 197 1 294 1 83 1 172 1 114 1 239 1 175 1 94 1 41 1 
118 1 
292 1 197 1 118 1 180 1 294 2 83 2 53 1 182 1 
118 1 180 1 150 1 15 2 377 1 307 1 182 1 91 1 70 1 197 2 294 5 83 5 7 2 202 1 53 2 23 2 278 1 218 1 353 1 
56 1 120 1 
322 2 120 2 33 1 206 1 308 1 49 1 172 2 175 1 41 2 
51 1 103 1 320 1 
322 1 74 1 120 1 375 1 236 1 258 1 90 1 196 1 316 1 310 1 363 1 227 1 29 1 368 1 178 1 41 1 
322 2 74 1 112 1 375 1 33 1 236 1 90 1 49 1 196 1 172 1 316 1 310 1 103 1 363 1 227 1 368 1 29 1 178 1 72 1 41 2 
322 5 301 1 275 1 120 1 172 5 112 2 144 1 33 4 175 1 270 1 72 1 308 1 41 5 49 4 
5 1 322 2 223 1 204 1 172 2 33 2 41 2 49 2 
322 3 120 1 112 1 172 3 33 3 175 1 41 3 49 3 
5 1 322 1 204 1 172 1 33 1 41 1 49 1 
322 1 204 1 172 1 33 1 175 1 206 1 41 1 49 1 308 1 
204 1 112 1 313 1 314 1 236 1 68 2 90 1 153 1 49 3 4 1 294 1 316 1 114 1 365 1 363 1 368 1 29 1 72 1 322 4 164 1 74 1 120 1 375 1 76 1 77 1 138 1 194 1 33 3 248 1 308 1 196 1 143 1 83 1 172 3 124 1 201 1 310 1 276 1 127 1 128 1 175 2 227 1 178 1 41 4 
322 2 301 1 120 1 172 2 112 1 144 1 33 1 41 2 49 1 
322 3 118 1 204 1 112 2 76 1 33 3 194 1 138 1 153 1 308 1 49 3 294 1 83 1 172 3 201 1 175 1 240 1 72 1 41 3 
322 2 112 1 33 2 308 1 49 2 51 1 172 2 103 1 175 1 41 2 
322 1 74 1 120 1 375 1 236 1 90 1 196 1 316 1 310 1 363 1 227 1 29 1 368 1 178 1 41 1 
322 1 74 1 120 1 236 1 90 1 196 1 316 1 310 1 363 1 214 1 227 1 29 1 187 1 178 1 41 1 
68 2 4 1 296 2 359 1 51 2 365 1 157 1 213 1 9 1 370 1 320 2 136 1 164 2 166 1 97 1 143 1 82 1 124 1 103 2 127 1 128 1 276 4 277 1 62 1 
322 1 223 1 204 1 172 1 201 1 33 1 41 1 49 1 
260 1 300 1 
260 1 300 1 
45 1 181 1 
45 1 181 1 
45 1 181 1 
48 1 260 1 300 1 
140 1 260 1 300 1 
45 1 256 1 181 1 260 2 300 2 27 1 
48 1 260 1 300 1 
48 1 260 1 300 1 
17 1 260 1 300 1 
17 1 260 1 300 1 
17 1 260 1 300 1 
322 2 132 1 119 1 120 1 267 1 33 2 2 1 140 1 304 1 3 1 260 1 49 2 295 1 224 1 294 1 327 1 83 1 172 2 185 1 174 1 21 1 11 1 41 2 300 1 
147 1 254 1 132 3 118 1 256 1 59 1 304 2 260 2 69 1 327 2 294 2 224 1 83 2 185 2 135 2 100 1 174 2 252 1 300 2 
323 1 200 1 10 1 
200 1 176 1 10 1 
323 2 200 3 125 1 176 1 241 1 87 1 
323 1 200 2 176 1 241 1 87 1 281 1 
323 1 200 2 176 1 241 2 87 1 
355 3 42 1 180 1 284 1 46 2 150 2 2 1 288 2 152 1 3 1 182 1 70 1 294 5 359 1 7 1 157 1 9 1 53 1 11 1 321 1 118 2 246 1 15 1 35 2 377 3 97 1 250 1 197 4 83 5 226 1 23 1 88 1 
355 9 180 1 284 2 150 6 2 4 357 1 67 1 288 6 182 1 291 1 70 1 294 9 359 3 7 2 157 3 9 3 53 6 321 3 75 5 118 5 246 2 266 1 15 2 35 6 377 8 97 3 307 1 197 7 83 9 226 3 23 2 231 1 354 5 283 1 88 1 
355 4 180 1 42 1 284 1 46 1 150 2 2 1 152 1 288 2 294 3 359 1 7 1 157 1 9 1 321 1 118 3 246 1 15 1 377 3 35 2 97 1 307 1 197 2 83 3 226 2 23 1 
355 7 180 1 42 1 284 1 46 2 150 4 2 2 357 1 288 4 152 1 291 1 294 4 359 2 7 1 157 2 9 2 321 2 118 4 246 1 15 1 35 4 377 5 97 2 307 1 197 3 83 4 226 3 23 1 231 1 
56 1 363 1 98 1 
363 1 318 1 
18 1 
310 1 363 1 90 1 
363 1 253 1 
310 1 363 1 
310 1 363 3 235 1 90 1 332 1 98 2 
137 1 164 3 133 1 65 1 66 1 121 1 60 1 99 1 154 1 82 3 296 4 359 1 209 2 157 1 276 7 145 1 62 2 
137 1 164 3 133 1 65 1 66 1 121 1 60 1 99 1 154 1 82 3 296 4 359 1 209 2 157 1 276 7 145 1 62 2 
137 1 164 3 133 1 65 1 66 1 121 1 151 1 60 1 99 1 154 1 82 3 296 4 359 1 209 2 157 1 276 7 145 1 62 2 
133 1 65 1 66 2 68 2 4 1 290 1 336 4 154 1 296 16 209 3 359 4 210 3 157 4 9 3 321 3 137 2 164 15 244 1 374 1 121 2 249 1 97 3 60 5 99 2 143 1 38 1 82 10 124 1 329 1 127 1 276 31 145 1 130 1 62 5 
133 1 44 1 66 1 68 4 4 2 154 1 296 5 359 1 209 2 157 1 115 1 137 1 164 4 121 1 60 1 99 1 143 2 82 4 124 2 127 2 276 9 130 1 145 1 62 3 
131 1 43 1 0 2 255 1 234 1 236 1 316 1 238 1 317 1 297 1 367 1 29 1 10 1 243 1 323 1 326 1 78 1 80 1 344 1 141 1 196 1 347 1 123 1 200 2 125 1 176 1 227 1 352 2 228 1 230 1 
131 1 43 1 0 3 315 1 255 1 234 1 236 1 316 1 317 1 211 1 297 1 367 1 29 1 10 1 243 1 323 1 326 1 78 1 80 1 344 1 141 2 196 1 122 1 123 1 200 2 125 1 176 1 227 1 352 3 228 1 
131 1 43 1 0 2 234 1 236 1 316 1 317 1 211 1 297 1 367 1 29 1 10 1 243 1 323 1 326 1 80 1 141 2 196 1 122 1 200 2 125 1 176 1 227 1 352 2 228 1 
131 2 0 1 26 1 315 1 234 2 236 1 259 1 155 1 316 1 363 1 367 2 29 1 74 1 326 2 344 1 196 1 123 1 349 1 382 1 328 1 310 1 227 1 352 1 
131 1 0 1 323 1 255 1 78 1 326 1 234 1 344 1 236 1 196 1 347 1 123 1 316 1 200 2 317 1 125 1 211 1 176 1 297 1 227 1 367 1 352 1 29 1 10 1 243 1 230 1 
6 1 
180 1 286 1 236 1 182 3 337 2 294 5 184 1 7 1 53 6 186 1 54 1 189 1 301 1 246 1 193 4 15 1 138 1 196 2 348 1 201 1 102 2 310 1 203 2 23 1 63 1 355 2 109 2 204 1 110 1 150 2 259 1 153 1 70 1 155 1 316 2 363 1 215 1 29 2 216 1 116 2 322 1 118 2 74 2 76 1 325 2 324 1 376 1 377 2 271 2 83 5 172 1 225 1 226 2 227 1 41 1 
204 1 110 1 286 1 153 1 182 1 292 1 294 3 184 1 216 1 186 1 53 2 322 1 301 1 193 2 76 1 138 1 325 1 348 1 83 3 172 1 201 1 41 1 
204 1 180 1 110 1 286 1 153 1 182 1 292 1 294 3 184 1 216 1 53 1 186 1 116 1 322 1 301 1 118 1 193 3 76 1 138 1 348 1 83 3 172 1 201 1 41 1 
204 1 180 1 110 1 286 1 153 1 182 1 292 1 294 3 184 1 216 1 186 1 53 2 116 1 322 1 301 1 118 1 193 3 76 1 138 1 325 1 348 1 83 3 172 1 201 1 102 1 41 1 
180 5 286 1 182 3 292 1 337 2 294 5 184 1 7 1 186 1 53 7 54 1 189 1 301 1 193 6 138 1 15 1 348 1 201 1 102 4 203 2 23 1 109 2 204 1 110 1 150 1 153 1 70 1 113 1 216 1 160 1 116 4 117 1 322 1 118 5 76 1 325 4 168 1 170 1 377 1 271 2 83 5 172 1 226 2 41 1 
180 1 286 1 182 2 337 2 294 4 184 1 7 1 186 1 53 4 54 1 189 1 301 1 193 4 138 1 15 1 348 1 201 1 102 2 203 2 23 1 109 2 355 2 204 1 110 1 150 1 153 1 70 1 216 1 116 2 322 1 118 2 76 1 325 2 377 1 271 2 83 4 172 1 225 1 226 2 41 1 
109 2 180 1 204 1 110 1 150 1 286 1 153 1 182 2 70 1 337 2 294 4 184 1 7 1 216 1 53 4 186 1 116 2 54 1 117 1 189 1 322 1 118 1 301 1 193 4 76 1 325 2 138 1 15 1 168 1 170 1 377 1 271 2 348 1 83 4 172 1 201 1 102 2 226 2 203 2 23 1 41 1 
109 2 180 1 204 1 110 1 150 1 286 1 153 1 182 2 70 1 337 2 294 4 184 1 7 1 216 1 53 4 186 1 116 2 54 1 117 1 189 1 322 1 118 1 301 1 193 4 76 1 325 2 138 1 15 1 168 1 170 1 377 1 271 2 348 1 83 4 172 1 201 1 102 2 226 2 203 2 23 1 41 1 
355 2 109 2 180 1 204 1 110 1 150 1 286 1 153 1 182 2 207 2 70 1 294 4 184 1 7 1 264 1 216 1 53 4 186 1 116 2 54 1 117 1 322 1 118 1 301 1 193 4 76 1 325 2 138 1 15 1 16 1 377 1 271 2 348 1 83 4 172 1 201 1 102 2 350 1 23 1 146 2 41 1 
109 2 180 1 204 1 110 1 150 1 286 1 153 1 182 2 70 1 337 2 294 4 113 1 184 1 7 1 216 1 186 1 53 5 54 1 116 3 117 1 189 1 322 1 118 1 301 1 193 5 76 1 15 1 138 1 325 3 168 1 170 1 377 1 271 2 348 1 83 4 172 1 201 1 102 3 226 2 203 2 23 1 41 1 
109 2 180 1 204 1 110 1 150 1 286 1 153 1 182 2 70 1 337 2 294 4 113 1 184 1 7 1 216 1 186 1 53 5 54 1 116 3 117 1 189 1 322 1 118 1 301 1 193 5 76 1 15 1 138 1 325 3 168 1 170 1 377 1 271 2 348 1 83 4 172 1 201 1 102 3 226 2 203 2 23 1 41 1 
180 1 286 1 182 2 294 4 184 1 7 1 186 1 53 4 54 1 301 1 193 4 138 1 15 1 348 1 201 1 350 1 102 2 23 1 146 2 109 2 355 2 204 1 110 1 150 1 153 1 207 2 70 1 216 1 116 2 322 1 118 1 76 1 325 2 377 1 271 2 83 4 172 1 225 1 41 1 
133 1 66 1 68 2 4 1 154 1 296 3 51 1 359 1 209 1 365 1 157 1 370 1 320 1 56 1 164 3 120 2 99 1 143 1 82 2 124 1 103 1 127 1 128 1 276 6 145 1 62 2 
314 1 68 4 4 2 336 3 296 8 359 2 51 4 210 3 365 1 157 1 9 2 371 1 320 11 321 2 164 6 374 1 120 1 58 1 34 1 97 1 60 1 346 1 82 2 143 2 38 1 124 2 103 11 127 2 128 2 276 14 129 1 177 1 62 1 
148 1 112 1 314 1 236 1 258 1 68 2 90 1 49 1 4 1 296 1 51 1 316 1 363 1 365 1 368 1 29 1 72 1 322 2 74 1 164 1 120 1 375 1 33 1 58 1 34 1 196 1 143 1 172 1 124 1 310 1 101 1 127 1 128 1 276 2 227 1 178 1 311 1 41 2 
133 1 236 2 90 2 49 1 4 3 296 10 51 7 9 2 342 2 302 1 58 1 97 2 306 2 60 4 196 3 99 1 143 3 310 2 103 7 145 1 62 4 112 1 66 1 314 1 68 6 154 1 209 1 359 3 316 3 211 1 365 3 363 2 157 3 29 3 368 2 72 1 320 7 321 2 322 3 164 10 74 1 120 2 375 2 33 1 77 2 32 2 169 2 34 1 82 8 172 1 124 3 128 3 127 3 276 20 227 2 39 1 331 1 178 2 41 3 
335 1 112 1 314 1 233 1 236 2 68 4 259 1 49 1 4 2 296 1 155 1 238 1 316 7 211 1 362 1 363 3 365 2 29 8 370 1 322 1 192 1 74 2 164 1 219 1 33 1 303 2 221 1 34 1 196 8 143 2 172 1 124 2 310 2 20 1 127 2 128 2 276 2 227 2 41 1 
68 2 49 1 4 1 296 1 51 1 359 1 365 1 157 1 9 1 320 1 321 1 322 1 164 2 33 1 58 1 220 1 97 1 308 1 82 1 143 1 172 1 124 1 103 1 175 1 127 1 128 1 276 3 62 1 41 1 
68 2 60 1 4 1 82 1 143 1 296 2 51 1 359 1 124 1 103 1 365 1 276 2 128 1 127 1 277 1 9 1 370 1 320 1 
136 1 164 2 68 2 97 1 4 1 82 1 143 1 51 1 124 1 103 1 365 1 276 2 128 1 127 1 157 1 62 1 370 1 320 1 
68 2 4 1 296 2 359 1 51 2 365 1 157 1 9 1 370 1 321 1 320 2 164 2 97 1 60 1 143 1 82 2 124 1 103 2 127 1 128 1 276 4 62 1 
219 1 68 2 60 1 4 1 82 1 143 1 296 2 51 1 359 1 124 1 103 1 365 1 276 2 128 1 127 1 277 1 9 1 320 1 
136 1 164 2 219 1 68 2 97 1 4 1 82 1 143 1 51 1 124 1 103 1 365 1 276 2 128 1 127 1 157 1 62 1 320 1 
68 2 4 1 296 2 359 1 51 2 365 1 157 1 9 1 321 1 320 2 164 2 219 1 97 1 60 1 143 1 82 2 124 1 103 2 127 1 128 1 276 4 62 1 
68 2 4 1 296 2 359 1 51 2 365 1 157 1 9 1 321 1 320 2 164 2 97 1 60 1 143 1 82 2 124 1 103 2 276 4 127 1 128 1 62 1 
314 1 236 1 68 2 90 1 4 1 296 1 316 1 363 1 365 1 368 1 29 1 322 1 74 1 164 1 120 1 375 1 77 1 34 1 196 1 143 1 124 1 310 1 276 2 128 1 127 1 227 1 178 1 41 1 
111 1 314 1 236 1 68 2 90 1 4 1 296 1 316 1 363 1 365 1 214 1 29 1 187 1 322 1 74 1 164 1 120 1 34 1 196 1 143 1 124 1 310 1 276 2 128 1 127 1 227 1 178 1 41 1 
68 2 4 1 296 2 359 1 51 2 365 1 157 1 9 1 321 1 320 2 164 2 58 1 97 1 60 1 143 1 82 2 124 1 103 2 127 1 128 1 276 4 62 1 
236 1 68 2 90 1 4 1 296 2 51 2 359 1 316 1 238 1 363 1 365 1 157 1 368 1 29 1 9 1 320 2 321 1 322 1 164 2 375 1 77 1 97 1 60 1 306 1 196 1 82 2 143 1 124 1 310 1 103 2 276 4 128 1 127 1 227 1 178 1 62 1 41 1 
68 2 49 1 4 1 296 2 359 1 51 1 365 1 157 1 9 1 321 1 320 1 322 1 164 1 33 1 58 1 96 1 97 1 60 1 308 1 82 1 143 1 172 1 124 1 103 1 175 1 127 1 128 1 276 3 41 1 
334 1 68 4 4 2 336 2 296 9 262 1 359 3 360 1 210 1 157 3 115 1 9 3 369 2 321 3 31 1 164 10 374 1 247 1 195 1 97 3 60 3 143 2 38 1 82 6 381 1 124 2 127 2 276 19 105 2 62 3 
334 2 205 1 68 6 4 3 208 1 336 2 296 14 359 3 360 1 210 2 157 2 115 1 9 3 30 1 217 1 369 4 321 3 31 1 164 12 374 2 247 2 195 1 97 2 60 2 272 1 37 1 82 4 143 3 124 3 127 3 276 26 105 1 130 2 62 2 
133 1 334 1 205 1 66 1 68 6 4 3 208 1 336 4 154 1 296 20 262 1 209 1 359 5 360 1 210 3 157 5 115 1 9 4 30 1 217 1 369 4 321 4 31 1 164 21 374 3 247 2 195 1 97 4 60 4 99 1 37 1 272 1 143 3 38 1 82 8 124 3 127 3 276 41 105 1 330 1 145 1 130 1 62 4 
133 1 334 1 205 1 66 1 68 8 4 4 208 1 336 4 154 1 296 20 262 1 209 1 359 5 360 1 210 3 157 4 115 1 9 4 30 1 217 1 369 4 321 4 31 1 164 18 374 3 247 2 195 1 97 3 60 3 99 1 37 1 272 1 143 4 38 1 82 7 124 4 127 4 276 38 105 1 330 1 145 1 130 2 62 4 
133 1 334 1 205 1 66 1 68 4 4 2 208 1 336 4 154 1 296 27 209 1 359 8 360 1 210 4 157 8 115 1 9 7 30 1 217 1 369 4 371 2 321 7 31 1 164 25 374 2 247 1 195 1 97 7 60 7 99 1 37 1 272 1 143 2 38 2 82 14 124 2 127 2 276 52 105 1 145 1 130 1 62 7 
147 1 134 1 327 1 185 1 100 1 174 1 256 1 304 1 260 1 300 1 
295 1 140 1 
327 1 1 1 185 1 174 1 8 1 22 1 304 1 260 1 300 1 
287 1 48 1 
17 1 279 1 27 1 
147 1 254 1 132 2 118 1 256 1 304 1 260 1 69 1 224 1 294 1 327 1 83 1 185 1 135 1 100 1 174 1 252 1 300 1 
147 1 254 1 132 2 118 1 256 1 304 1 260 1 69 1 224 1 294 1 327 1 83 1 185 1 135 1 100 1 174 1 252 1 300 1 
147 1 254 1 132 2 118 1 256 1 304 1 260 1 69 1 224 1 294 1 327 1 83 1 185 1 135 1 100 1 174 1 252 1 300 1 
287 1 48 1 27 1 
287 1 48 1 27 1 
17 1 279 1 
17 1 279 1 27 1 
267 1 21 1 
254 1 132 1 2 1 260 1 3 1 49 2 294 1 295 1 135 1 185 1 11 1 300 1 322 2 12 1 119 1 120 1 267 1 33 2 140 1 304 1 197 1 327 1 83 1 172 2 174 1 21 1 41 2 
24 1 314 1 233 1 236 1 68 2 4 1 296 1 316 2 363 1 365 1 29 2 322 2 164 1 303 2 58 1 221 1 34 1 305 1 196 2 273 1 143 1 172 2 124 1 310 1 351 1 128 1 127 1 276 2 227 1 61 1 41 2 
131 1 323 1 343 1 285 1 255 1 236 1 196 2 316 2 238 1 200 2 317 1 125 1 211 1 176 1 297 1 227 1 28 1 29 2 10 1 
131 1 13 1 323 1 343 1 255 1 236 1 196 1 316 1 200 2 317 1 125 1 211 1 176 1 297 1 227 1 29 1 10 1 
131 1 74 1 312 1 236 1 259 1 196 1 155 1 316 1 328 1 310 1 363 1 227 1 28 1 29 1 
131 1 323 1 343 1 285 1 255 1 236 1 196 1 316 1 200 2 317 1 125 1 211 1 176 1 297 1 227 1 28 1 29 1 10 1 
36 1 
56 1 118 1 180 1 150 1 202 1 377 1 218 1 
355 1 180 1 150 1 182 1 70 1 337 1 294 1 7 1 53 1 189 1 118 2 15 1 377 1 83 1 226 1 203 1 23 1 
180 2 232 2 236 2 235 1 288 6 90 2 182 3 183 1 294 5 238 1 7 4 53 5 9 2 246 2 15 4 97 2 196 3 98 2 142 1 19 1 309 2 310 2 202 1 251 1 23 4 63 1 355 12 356 2 150 8 257 2 70 4 359 2 316 3 318 3 363 7 157 2 29 3 218 1 321 2 73 1 74 1 118 8 76 2 268 2 32 2 377 9 35 6 83 5 226 6 227 3 85 2 179 1 282 2 
355 6 180 2 205 1 150 5 288 5 182 1 336 1 70 2 294 1 359 2 210 1 7 2 340 1 157 2 53 1 9 2 30 1 217 1 321 2 118 5 374 1 246 1 15 2 35 5 377 8 97 2 345 1 272 1 37 1 83 1 309 2 226 3 23 2 63 1 282 1 
204 1 150 2 66 1 49 1 5 1 70 1 294 1 359 2 114 1 7 1 239 1 319 1 157 1 94 1 322 1 15 1 33 1 170 1 377 2 99 1 83 1 309 2 172 1 175 1 23 1 145 1 41 1 282 1 
180 1 118 1 15 1 150 1 377 1 70 1 7 1 202 1 23 1 218 1 
355 10 118 5 32 1 150 5 288 5 35 5 377 5 97 2 359 2 309 2 226 5 157 2 9 2 282 1 321 2 
118 1 180 1 294 1 83 1 53 1 182 1 
25 1 150 2 236 1 259 1 182 2 70 1 294 3 155 1 316 4 7 2 363 1 215 1 29 4 53 4 245 1 73 1 74 2 246 2 15 2 376 1 377 2 307 1 196 4 83 3 19 2 310 1 227 1 23 2 63 2 
313 1 314 1 236 1 68 2 90 1 49 2 4 1 316 1 114 1 363 1 365 1 29 1 368 1 322 3 164 1 74 1 120 1 375 1 33 2 77 1 196 1 143 1 172 2 124 1 310 1 276 1 127 1 175 2 128 1 227 1 178 1 41 3 
355 4 180 2 118 4 246 1 150 2 15 1 288 2 35 2 377 1 70 1 209 1 7 1 226 2 23 1 63 1 
327 1 304 1 162 1 
237 1 327 1 100 1 267 1 304 1 
327 1 304 1 162 1 
327 1 304 1 162 1 
373 1 327 1 304 1 
373 1 327 1 304 1 
373 1 327 1 304 1 
327 1 304 1 
260 1 300 1 
164 4 133 1 66 1 68 4 60 1 4 2 154 1 99 1 296 4 82 3 143 2 209 1 359 1 124 2 157 1 276 8 127 2 145 1 130 1 62 2 
56 1 164 3 133 1 66 1 154 1 99 1 82 2 296 3 209 1 359 1 276 6 157 1 145 1 62 2 
164 2 269 1 97 1 68 2 60 1 4 1 82 2 143 1 296 2 359 1 124 1 157 1 127 1 276 4 9 1 62 1 321 1 
164 4 374 1 97 1 60 1 336 2 296 3 38 1 82 2 359 1 210 1 157 1 276 7 9 1 62 1 321 1 
133 1 66 2 68 4 4 2 336 2 154 1 296 11 209 1 359 3 210 2 361 1 157 3 9 2 371 1 321 2 164 12 97 2 60 4 99 2 82 9 38 1 143 2 124 2 276 23 127 2 177 1 145 1 130 2 62 5 
336 1 164 1 276 1 
296 1 210 1 276 1 
164 3 32 1 269 1 68 2 97 1 60 1 4 1 143 1 296 3 82 3 359 1 124 1 127 1 276 6 157 1 9 1 62 2 321 1 
205 1 68 2 4 1 336 1 296 6 359 2 210 1 157 2 115 1 9 2 30 1 217 1 321 2 164 6 374 1 97 2 60 1 272 1 37 1 143 1 82 2 124 1 276 12 127 1 62 1 
164 3 66 1 60 1 99 1 296 3 82 2 359 1 276 6 157 1 145 1 62 1 
164 2 133 1 66 1 68 2 60 1 4 1 99 1 154 1 296 1 82 2 143 1 124 1 361 1 276 3 127 1 130 1 62 1 
164 5 66 2 68 2 60 2 4 1 99 2 143 1 82 5 296 5 359 2 124 1 127 1 319 1 276 10 157 2 115 1 145 1 62 3 
68 2 60 1 4 1 143 1 296 2 82 1 359 1 124 1 127 1 276 2 115 1 9 1 
164 2 97 1 68 2 60 1 4 1 82 2 143 1 296 2 359 1 124 1 157 1 127 1 276 4 115 1 9 1 62 1 321 1 
164 2 66 1 68 6 60 1 4 3 99 1 143 3 82 2 296 1 262 1 124 3 361 1 276 3 127 3 115 1 130 1 62 1 
133 1 66 3 68 10 290 1 4 5 336 4 154 1 296 16 209 1 262 1 359 5 210 3 361 1 157 5 115 1 9 3 321 3 164 18 374 1 249 1 269 1 97 3 60 5 99 3 143 5 38 1 82 12 124 5 329 1 127 5 276 34 145 2 130 2 62 7 
133 1 66 1 68 2 4 1 336 1 154 1 296 4 209 1 359 1 210 1 157 1 115 1 30 1 164 4 374 1 99 1 143 1 82 2 124 1 276 8 127 1 145 1 62 2 
133 1 66 1 68 4 4 2 336 2 154 1 296 6 209 1 359 2 210 1 157 1 115 1 9 1 30 1 321 1 164 5 374 1 269 1 60 1 99 1 143 2 38 1 82 3 124 2 276 11 127 2 145 1 62 2 
133 1 205 1 66 1 68 6 4 3 336 1 154 1 296 9 209 1 359 3 210 1 157 3 115 1 9 2 30 1 217 1 321 2 164 10 374 1 269 1 97 2 60 1 99 1 272 1 37 1 143 3 82 4 124 3 276 19 127 3 145 1 130 1 62 3 
133 1 205 1 66 1 68 6 4 3 336 1 154 1 296 10 209 1 359 3 210 1 157 2 115 1 9 2 30 1 217 1 321 2 164 7 374 1 269 1 97 1 60 2 99 1 272 1 37 1 143 3 82 5 124 3 276 17 127 3 145 1 130 1 62 3 
133 1 66 1 68 2 4 1 336 1 154 1 296 4 209 1 359 1 210 1 157 1 115 1 30 1 164 4 374 1 99 1 143 1 82 2 124 1 276 8 127 1 145 1 62 2 
205 1 68 2 4 1 336 1 296 6 359 2 210 1 157 2 115 1 9 2 30 1 217 1 321 2 164 6 374 1 97 2 60 1 272 1 37 1 143 1 82 2 124 1 276 12 127 1 62 1 
133 1 205 1 66 1 68 8 4 4 336 1 154 1 296 10 209 1 359 3 210 1 157 2 115 1 9 2 30 1 217 1 321 2 164 8 374 1 269 1 97 1 60 2 99 1 272 1 37 1 143 4 82 5 124 4 276 18 127 4 145 1 130 2 62 3 
205 1 68 8 4 4 336 1 296 9 262 1 359 3 210 1 157 2 115 1 9 3 30 1 217 1 321 3 164 7 374 1 97 2 60 3 272 1 37 1 143 4 82 6 124 4 276 16 127 4 130 2 62 3 
164 4 133 1 66 3 60 3 154 2 99 3 82 6 296 3 359 1 157 1 276 7 145 1 62 3 
133 1 205 1 66 1 68 8 4 4 336 1 154 1 296 10 209 1 262 1 359 3 210 1 157 2 115 1 9 2 30 1 217 1 321 2 164 8 374 1 97 1 60 1 99 1 272 1 37 1 143 4 82 4 124 4 276 18 127 4 145 1 130 2 62 3 
322 1 301 1 265 1 120 1 172 1 144 1 41 1 
190 1 322 1 301 1 265 1 120 1 47 1 358 1 338 1 172 1 144 1 364 1 41 1 
56 1 74 1 155 1 316 1 310 1 363 1 227 1 29 1 236 1 259 1 196 1 
322 2 74 1 120 1 112 1 33 1 236 1 90 1 49 1 196 1 172 1 316 1 310 1 363 1 227 1 29 1 368 1 178 1 41 2 
204 2 112 1 236 1 90 2 153 1 49 1 316 1 363 2 159 1 368 1 29 1 322 2 120 1 33 2 196 1 19 1 172 2 201 1 310 2 227 1 178 1 41 2 179 1 
204 2 112 1 236 1 90 2 153 1 49 1 316 1 363 2 214 1 159 1 29 1 322 2 120 1 33 2 196 1 19 1 172 2 201 1 310 2 227 1 178 1 41 2 179 1 
204 1 180 1 236 1 90 1 49 1 5 1 294 2 316 1 114 1 239 1 363 3 318 1 29 1 53 1 94 1 322 1 118 1 76 1 33 1 98 1 196 1 380 1 83 2 172 1 19 1 310 1 175 1 227 1 40 1 41 1 179 1 
204 1 180 1 236 1 90 1 49 1 5 1 294 2 316 1 114 1 363 3 318 1 239 1 29 1 53 1 94 1 322 1 118 1 76 1 33 1 98 1 196 1 83 2 172 1 19 1 310 1 175 1 227 1 85 1 41 1 179 1 
192 1 316 1 227 1 29 1 236 1 196 1 
192 1 74 2 335 1 303 1 233 1 235 1 236 2 90 1 196 7 238 1 316 6 211 1 310 2 20 1 362 1 363 3 126 1 227 3 29 7 161 1 333 1 
133 1 236 1 90 1 49 1 4 2 296 3 51 1 238 1 342 1 58 1 306 1 196 1 99 1 143 2 310 1 103 1 145 1 62 2 112 1 24 1 66 1 68 4 154 1 359 1 209 1 316 1 365 2 363 1 157 1 368 1 29 1 320 1 322 2 164 3 375 1 120 2 77 1 33 1 82 2 172 1 124 2 128 2 127 2 276 6 227 1 178 1 41 2 
180 1 232 1 356 1 150 1 182 1 70 2 294 3 316 1 7 2 318 1 363 2 29 1 53 2 218 1 118 1 74 1 73 1 76 1 15 2 268 1 377 1 196 1 98 1 197 1 83 3 202 1 85 1 23 2 
192 1 235 1 236 1 90 1 98 1 196 2 142 1 238 1 316 2 310 1 363 2 227 2 29 2 
64 1 74 1 236 1 259 1 196 4 155 1 316 4 238 1 310 1 363 1 227 1 29 4 188 1 
236 1 90 1 196 2 293 1 19 1 316 2 263 1 310 1 363 1 126 1 227 2 39 1 29 2 333 1 
74 1 316 1 200 1 317 1 176 1 227 1 29 1 236 1 10 1 196 1 
316 2 238 1 310 1 351 1 211 1 363 1 227 1 233 1 29 2 236 1 196 2 
74 1 233 1 236 2 259 1 196 5 155 1 19 1 316 4 238 1 310 2 362 1 363 3 20 1 227 2 29 5 188 1 
74 1 167 1 233 1 236 2 259 1 196 5 155 1 19 1 316 4 238 1 310 2 363 3 20 1 227 2 29 5 188 1 
322 2 74 1 120 1 112 1 33 1 236 1 90 1 49 1 196 1 172 1 316 1 310 1 363 1 227 1 214 1 29 1 178 1 41 2 
235 1 236 1 90 1 196 1 19 1 316 1 310 1 363 1 126 1 227 2 29 1 161 1 333 1 
149 1 120 1 199 1 57 1 173 1 
107 1 108 1 118 1 180 1 204 1 149 1 120 1 76 1 57 2 194 1 138 1 153 1 197 1 294 2 83 2 199 2 201 1 173 2 86 1 
322 1 273 1 149 1 172 1 199 1 173 1 61 1 305 1 41 1 
107 1 108 1 149 1 
56 1 43 1 80 1 228 1 
43 1 0 1 123 1 80 1 352 1 344 1 228 1 
0 1 326 1 234 1 
92 1 81 1 43 1 347 1 0 3 123 1 366 1 80 1 352 3 344 1 298 2 228 1 
43 1 0 2 123 1 339 1 80 1 352 2 344 1 228 1 141 1 
347 1 0 1 123 1 323 1 200 1 158 1 352 1 344 1 10 1 299 1 228 1 
43 1 347 1 0 1 123 1 352 1 344 1 228 1 
43 2 347 1 0 1 123 1 80 1 352 1 344 1 
43 1 163 1 0 2 344 2 347 1 123 2 71 1 52 1 352 2 228 1 
43 1 0 3 95 1 80 1 344 1 79 1 141 2 347 1 123 1 352 3 299 1 229 1 228 2 
43 1 0 2 323 1 80 1 344 1 141 1 347 1 198 1 123 1 200 2 125 1 176 1 352 2 10 1 228 1 
43 1 0 4 80 1 344 2 79 1 141 2 347 1 123 2 339 1 352 4 299 1 280 1 228 2 
43 1 347 1 0 1 123 1 80 1 352 1 344 1 228 1 
43 2 0 4 80 2 344 1 79 1 141 2 81 1 123 1 366 1 352 4 298 1 106 1 299 1 228 3 
43 1 0 2 344 1 80 1 141 1 347 1 50 1 123 1 84 1 352 2 242 1 228 1 
81 2 43 1 347 1 0 3 123 1 366 1 80 1 352 3 344 1 298 2 378 1 228 1 
93 2 89 1 222 1 228 2 
347 1 0 1 123 1 352 1 344 1 341 1 
43 1 347 1 0 2 123 1 95 1 80 1 352 2 344 1 228 1 141 1 
191 1 
43 1 347 1 0 1 123 1 80 1 352 1 344 1 228 1 
43 1 0 3 95 1 344 1 80 1 141 1 347 1 123 1 352 3 298 1 228 1 
79 1 106 1 299 1 228 1 
43 1 228 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 248 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 254 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (218,253) (218,253) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 287 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 125 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 125 327 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 138 261 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 83 91 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 44 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 44 271 320 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 44 271 320 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 44 271 171 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 83 91 8 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 83 91 8 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 44 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (218,253) (218,253) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (218,253) (218,253) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (218,253) (218,253) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 287 105 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 248 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 93 (18,330) 110 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 140 28 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (13,135) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (20,307) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (226,232) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
180 1 182 1 141 2 57 1 144 2 14 1 62 1 64 1 68 1 72 1 23 2 230 1 280 1 73 1 192 4 285 6 117 9 199 1 237 2 200 1 288 1 126 2 205 3 94 2 252 2 301 1 95 9 336 5 
180 1 182 1 141 2 57 1 144 2 14 1 62 1 64 1 68 1 72 1 23 2 230 1 280 1 73 1 192 4 285 6 117 9 199 1 237 2 200 1 288 1 126 2 205 3 94 2 252 2 301 1 95 9 336 5 
180 1 182 1 141 2 57 1 144 2 14 1 62 1 64 1 68 1 72 1 23 2 230 1 280 1 73 1 192 5 285 7 117 10 199 1 237 2 200 1 288 1 126 2 205 4 94 2 252 2 301 1 95 10 336 6 
180 1 182 1 141 2 57 1 144 2 14 1 62 1 64 1 68 1 72 1 23 1 230 1 280 1 73 1 192 3 285 4 117 7 199 1 237 2 288 1 126 2 205 2 94 2 252 2 301 1 95 7 336 4 
180 1 117 4 237 1 200 1 57 1 144 1 126 1 64 1 205 1 72 1 94 1 23 2 252 1 230 1 192 2 95 4 336 3 285 3 
180 1 117 2 38 1 237 1 141 1 126 1 64 1 153 1 72 1 94 1 280 1 252 1 95 2 301 1 336 1 31 1 
180 1 117 3 141 1 126 2 64 1 205 1 72 1 94 2 73 1 192 1 95 3 336 2 285 1 
180 1 141 1 57 1 144 1 14 1 187 1 64 1 72 1 23 2 192 4 73 1 230 1 285 7 117 9 237 1 200 1 288 1 126 2 205 3 94 2 175 1 252 1 95 9 336 5 
180 1 141 1 57 1 144 1 14 1 187 1 64 1 72 1 23 2 192 4 73 1 230 1 285 7 117 9 237 1 200 1 288 1 126 2 205 3 94 2 175 1 252 1 95 9 336 5 
248 1 
216 1 11 1 244 1 43 1 45 1 63 1 310 1 47 1 52 1 159 1 30 1 
310 1 63 1 47 1 216 2 76 1 11 1 52 1 209 1 159 1 210 1 30 1 43 1 
292 1 216 1 
292 1 216 1 
216 1 
292 1 216 1 
292 1 216 1 
324 1 292 1 216 2 198 1 260 1 111 1 
7 1 58 2 268 1 63 2 223 1 67 1 279 1 22 1 316 1 159 1 283 1 74 1 29 2 284 1 232 1 201 1 203 1 88 1 52 2 251 2 209 1 210 1 302 1 
169 1 248 1 
5 1 76 1 63 2 169 2 52 2 209 1 26 1 159 2 210 1 
204 1 189 1 302 1 
0 1 232 1 7 1 58 1 268 1 63 1 169 1 67 1 88 1 279 1 52 1 251 1 283 1 74 1 29 1 284 1 
63 3 169 1 76 1 201 1 52 3 209 3 159 3 210 3 
63 1 11 1 52 1 209 1 159 1 210 1 146 1 
63 1 76 1 5 1 11 1 52 1 209 1 26 1 159 1 210 1 
1 1 216 1 5 1 76 1 11 1 201 1 43 1 63 2 310 1 47 1 223 1 52 2 209 2 159 2 254 1 210 2 30 1 
63 2 169 1 90 1 52 2 201 1 209 1 159 2 210 1 45 1 
1 1 216 1 11 1 201 1 122 1 43 1 63 1 310 1 223 1 47 1 52 1 209 1 159 1 210 1 30 1 
5 1 76 1 201 1 63 2 189 1 52 2 209 2 159 2 210 2 302 1 
232 1 7 1 58 1 268 1 63 1 169 1 67 1 88 1 279 1 52 1 251 1 283 1 74 1 29 1 284 1 
137 1 7 1 58 1 63 1 169 1 67 1 88 1 279 1 20 1 52 1 251 1 283 1 74 1 29 1 284 1 
303 1 99 1 55 4 2 1 6 1 143 1 148 1 272 1 274 1 17 1 189 2 195 2 118 1 166 1 41 2 290 2 204 2 207 1 333 1 300 1 177 1 176 1 178 1 302 2 
63 1 47 1 11 1 52 1 209 1 321 1 159 1 210 1 
5 1 76 1 78 1 201 2 45 1 63 5 223 1 188 1 169 1 90 1 52 5 209 4 159 5 210 4 
63 2 11 1 52 2 321 1 209 2 159 2 210 2 146 1 
108 1 81 1 
108 1 81 1 
331 1 243 1 
331 1 243 1 
331 1 243 1 
247 1 108 1 81 1 
247 1 108 1 81 1 
108 1 151 1 81 1 
53 1 108 2 56 1 331 1 81 2 243 1 
247 1 108 1 81 1 
108 1 228 1 81 1 
108 1 228 1 81 1 
108 1 228 1 81 1 
216 2 240 1 218 1 81 2 42 2 291 2 246 2 86 2 108 2 133 1 250 2 253 1 160 1 
216 1 287 1 81 1 42 1 291 1 63 1 246 1 86 1 108 1 250 1 52 1 209 1 159 1 160 1 210 1 
237 1 144 1 252 1 
153 1 237 1 252 1 
153 1 237 3 144 2 299 1 282 1 220 1 
153 1 237 2 144 1 299 1 220 1 124 1 
153 1 237 2 144 1 299 1 220 2 
292 1 216 1 215 1 
292 2 216 2 136 1 172 1 103 1 
292 1 324 1 216 2 198 1 260 1 208 1 157 1 265 1 111 1 15 1 125 1 
216 1 260 1 198 1 265 1 15 1 125 1 324 1 327 1 208 1 157 1 111 1 
248 1 7 1 173 1 
7 1 114 1 
21 1 
88 1 7 1 
134 1 67 1 88 1 7 3 173 2 186 1 
67 1 88 1 7 1 
206 1 7 1 
195 4 213 1 99 1 55 7 101 1 263 1 145 1 41 3 121 1 60 1 274 3 17 2 312 1 92 1 174 1 333 1 281 2 
195 4 213 1 99 1 55 7 101 1 263 1 145 1 41 3 121 1 60 1 274 3 17 2 312 1 92 1 174 1 333 1 281 2 
195 4 213 1 99 1 55 7 101 1 183 1 263 1 145 1 41 3 121 1 60 1 274 3 17 2 312 1 92 1 174 1 333 1 281 2 
303 3 213 1 55 31 99 4 258 1 101 1 140 1 263 2 143 1 145 2 60 1 185 3 272 1 274 10 17 5 227 1 312 5 71 1 281 3 195 16 118 1 164 4 41 15 121 2 290 2 46 1 48 3 207 1 92 2 130 1 174 1 300 3 333 4 179 1 
213 1 99 1 55 9 258 1 101 1 263 1 143 2 145 1 221 1 272 2 274 4 17 3 312 1 281 2 317 1 195 5 118 2 121 1 41 4 290 4 207 2 92 1 174 1 333 1 
255 1 180 1 141 1 104 1 144 1 58 1 106 1 64 1 109 1 69 1 153 1 72 1 74 1 282 1 29 1 285 1 284 1 34 1 117 2 237 2 241 1 322 1 126 1 293 1 89 1 251 1 94 1 252 1 95 2 336 1 
255 1 141 1 104 1 144 1 58 1 308 1 64 1 109 1 153 1 315 1 72 1 282 1 74 1 29 1 285 2 284 1 34 1 117 3 237 2 241 1 80 1 322 1 126 1 293 1 89 1 251 1 94 1 252 1 95 3 336 1 
255 1 141 1 104 1 58 1 144 1 308 1 64 1 109 1 153 1 72 1 74 1 282 1 29 1 285 2 284 1 117 2 237 2 241 1 80 1 322 1 89 1 251 1 252 1 95 2 336 1 
54 1 117 1 7 1 141 2 306 1 104 2 58 1 322 2 126 1 88 1 278 1 109 2 314 1 315 1 190 1 94 1 251 1 24 1 74 1 95 1 283 1 29 1 284 1 
255 1 180 1 141 1 104 1 144 1 58 1 109 1 69 1 153 1 74 1 282 1 29 1 284 1 34 1 117 1 237 2 241 1 80 1 322 1 126 1 293 1 89 1 251 1 94 1 252 1 95 1 
328 1 
216 1 260 1 198 1 138 1 261 1 58 1 170 1 208 1 157 1 251 1 111 1 283 1 29 1 
212 1 100 1 216 2 11 1 266 1 83 1 43 1 123 1 244 1 45 1 63 1 310 1 47 1 275 1 52 1 159 1 30 1 
212 1 100 1 216 2 11 1 266 1 123 1 244 1 43 1 45 1 63 1 310 1 47 1 275 1 131 1 52 1 159 1 30 1 
212 1 100 1 216 2 11 1 266 1 83 1 123 1 244 1 43 1 45 1 63 1 310 1 47 1 275 1 91 1 52 1 159 1 30 1 
216 1 
212 1 216 2 100 1 260 1 11 1 266 1 219 1 63 1 310 1 275 1 157 1 111 1 159 1 30 1 32 1 198 1 39 1 244 1 123 1 43 1 44 1 45 1 47 1 170 1 298 1 249 1 52 1 
212 1 216 2 100 1 260 1 11 1 266 1 219 1 271 1 310 1 63 1 275 1 276 1 157 1 111 1 159 1 30 1 32 1 320 1 198 1 39 1 43 1 244 1 123 1 44 1 45 1 47 1 170 1 298 1 249 1 52 1 
212 1 216 2 100 1 260 1 11 1 266 1 219 1 271 1 310 1 63 1 275 1 276 1 157 1 111 1 159 1 30 1 32 1 320 1 198 1 39 1 43 1 244 1 123 1 44 1 45 1 47 1 170 1 298 1 249 1 52 1 
212 1 100 1 216 2 11 1 266 1 123 1 244 1 43 1 44 1 45 1 271 1 63 1 310 1 47 1 275 1 171 1 249 1 52 1 159 1 30 1 32 1 
212 1 100 1 216 2 8 1 11 1 266 1 83 1 123 1 244 1 43 1 45 1 63 1 310 1 47 1 275 1 91 1 52 1 159 1 30 1 
212 1 100 1 216 2 8 1 11 1 266 1 83 1 123 1 244 1 43 1 45 1 63 1 310 1 47 1 275 1 91 1 52 1 159 1 30 1 
212 1 216 2 100 1 260 1 11 1 266 1 63 1 310 1 275 1 157 1 111 1 159 1 30 1 32 1 198 1 79 1 39 1 244 1 123 1 43 1 44 1 45 1 47 1 170 1 296 1 249 1 52 1 
213 1 55 6 99 1 101 1 263 1 143 1 148 1 272 1 274 2 17 2 189 1 281 1 195 3 118 1 166 1 41 3 290 2 204 1 169 2 248 1 207 1 92 1 174 1 333 1 176 1 302 1 
303 1 55 14 99 1 259 1 140 1 143 2 12 1 185 3 148 1 272 2 274 2 17 1 227 1 312 1 189 4 155 1 229 1 195 8 118 2 164 3 166 2 41 6 290 4 127 1 204 11 48 2 325 1 169 1 168 1 207 2 300 2 333 2 302 11 
0 1 55 2 7 1 102 1 143 1 58 1 268 1 61 1 148 1 272 1 63 2 223 1 67 1 279 1 189 1 155 1 74 1 283 1 159 1 29 1 284 1 232 1 195 1 118 1 166 1 201 1 41 1 290 2 245 1 127 1 325 1 169 1 88 1 207 1 251 1 52 2 209 1 210 1 
99 3 101 1 7 2 263 1 268 2 269 1 272 3 274 8 17 4 279 2 189 7 19 1 281 1 283 1 29 3 284 2 195 10 118 3 201 1 41 10 290 6 127 1 204 7 48 2 207 3 52 3 209 1 300 2 210 1 302 7 303 2 213 1 214 2 55 20 143 3 58 3 148 3 63 3 224 1 223 1 225 2 67 2 312 4 155 1 159 1 74 2 231 2 232 2 80 1 166 3 84 2 325 1 169 2 88 2 92 1 330 2 174 1 251 3 333 3 
55 2 54 1 139 1 7 3 143 2 58 8 106 1 148 2 63 1 272 2 313 1 152 1 155 1 314 1 159 1 74 2 283 2 29 7 284 2 35 1 195 1 118 2 80 1 77 1 166 2 201 1 82 1 41 1 290 4 203 2 325 1 88 2 207 2 132 1 52 1 251 8 209 1 176 1 210 1 
303 1 55 3 99 1 5 1 143 1 148 1 272 1 63 1 274 1 65 1 17 1 189 1 159 1 195 1 76 1 118 1 166 1 41 2 290 2 204 1 127 1 48 1 207 1 52 1 209 1 300 1 333 1 210 1 302 1 
195 2 55 2 118 1 166 1 143 1 290 2 148 1 272 1 274 1 204 1 312 1 189 1 207 1 300 1 333 1 176 1 178 1 302 1 
303 1 55 2 99 1 118 1 166 1 143 1 41 2 290 2 148 1 272 1 274 1 204 1 17 1 189 1 207 1 176 1 177 1 302 1 
303 1 195 2 99 1 55 4 118 1 166 1 143 1 41 2 290 2 148 1 272 1 274 2 204 2 48 1 17 1 312 1 189 2 207 1 300 1 333 1 176 1 302 2 
195 2 55 2 118 1 139 1 166 1 143 1 290 2 148 1 272 1 274 1 204 1 312 1 189 1 207 1 300 1 333 1 178 1 302 1 
303 1 55 2 99 1 118 1 139 1 166 1 143 1 41 2 290 2 148 1 272 1 274 1 204 1 17 1 189 1 207 1 177 1 302 1 
303 1 195 2 99 1 55 4 118 1 139 1 166 1 143 1 41 2 290 2 148 1 272 1 274 2 204 2 48 1 17 1 312 1 189 2 207 1 300 1 333 1 302 2 
303 1 195 2 99 1 55 4 118 1 166 1 143 1 41 2 290 2 148 1 272 1 274 2 204 2 48 1 17 1 312 1 189 2 207 1 300 1 333 1 302 2 
55 2 7 1 143 1 58 1 268 1 148 1 63 1 272 1 225 1 67 1 279 1 155 1 74 1 283 1 29 1 284 1 232 1 195 1 118 1 166 1 41 1 290 2 325 1 169 1 88 1 207 1 251 1 52 1 
55 2 137 1 7 1 262 1 143 1 58 1 148 1 63 1 272 1 67 1 279 1 155 1 20 1 74 1 283 1 29 1 284 1 195 1 118 1 166 1 41 1 290 2 325 1 169 1 88 1 207 1 251 1 52 1 
303 1 195 2 99 1 55 4 118 1 166 1 143 1 41 2 290 2 148 1 272 1 274 2 204 2 127 1 48 1 17 1 312 1 189 2 207 1 300 1 333 1 302 2 
303 1 214 1 99 1 55 4 7 1 143 1 58 1 268 1 106 1 148 1 63 1 272 1 274 2 225 1 17 1 67 1 312 1 189 2 279 1 74 1 29 1 284 1 232 1 195 2 118 1 166 1 41 2 290 2 204 2 48 1 88 1 207 1 251 1 52 1 333 1 300 1 302 2 
303 1 99 1 55 3 5 1 143 1 148 1 272 1 63 1 274 1 312 1 189 1 159 1 195 2 36 1 76 1 118 1 166 1 41 1 290 2 127 1 48 1 204 1 207 1 52 1 209 1 300 1 333 1 210 1 302 1 
99 5 3 1 258 1 101 1 263 1 185 3 272 3 274 8 17 4 191 1 28 1 281 1 286 1 195 20 194 1 118 3 40 2 41 21 290 6 48 4 207 3 50 1 129 1 300 4 303 4 213 1 55 41 140 3 143 3 221 1 149 1 227 1 311 1 66 1 312 4 162 1 163 1 235 4 164 4 92 1 329 1 174 1 333 5 
303 3 213 1 258 2 3 1 55 38 99 4 101 1 140 3 263 1 143 4 185 3 221 1 149 1 272 4 274 7 17 4 66 1 311 1 227 1 312 3 191 1 281 1 28 1 286 1 162 1 163 1 194 1 195 20 235 4 118 4 164 4 40 2 41 18 290 8 48 4 50 1 207 4 329 1 92 1 129 1 174 1 300 4 333 5 
303 7 213 1 258 1 3 1 55 52 99 8 101 1 140 2 263 1 143 2 12 2 185 4 221 1 149 1 272 2 274 14 17 7 311 1 227 2 312 7 191 1 281 1 28 1 286 1 162 1 163 1 194 1 195 27 235 4 118 2 164 4 40 1 41 25 290 4 48 7 207 2 329 1 92 1 129 1 174 1 300 7 333 8 
303 3 55 19 99 3 140 1 143 2 185 1 221 1 149 2 272 2 274 6 17 3 227 1 312 3 191 1 286 1 318 1 194 1 195 9 235 2 118 2 164 2 40 1 41 10 290 4 48 3 50 1 207 2 329 1 300 3 333 3 
303 2 258 2 99 2 55 26 3 1 140 2 143 3 185 2 221 1 149 1 272 3 274 4 17 2 311 1 312 2 191 2 28 1 286 1 162 1 163 1 194 1 195 14 235 4 118 3 164 2 40 2 41 12 290 6 48 3 207 3 329 1 129 1 300 3 333 3 
53 1 246 1 86 1 108 1 305 1 156 1 9 1 81 1 42 1 291 1 
151 1 98 1 
273 1 246 1 294 1 86 1 108 1 112 1 81 1 42 1 291 1 
216 1 240 1 218 1 81 1 42 1 291 1 246 1 86 1 108 1 133 1 250 2 253 1 160 1 
216 1 240 1 218 1 81 1 42 1 291 1 246 1 86 1 108 1 133 1 250 2 253 1 160 1 
216 1 240 1 218 1 81 1 42 1 291 1 246 1 86 1 108 1 133 1 250 2 253 1 160 1 
247 1 234 1 56 1 
247 1 234 1 56 1 
228 1 335 1 
228 1 56 1 335 1 
87 1 96 1 
216 1 240 1 287 1 105 1 81 1 42 1 291 1 292 1 246 1 86 1 108 1 133 1 250 1 
247 1 234 1 
228 1 56 1 335 1 
256 1 55 2 7 1 10 1 143 1 58 2 147 1 148 1 270 1 272 1 63 2 152 1 155 1 25 1 74 1 159 2 29 2 284 1 195 1 118 1 77 1 166 1 41 1 290 2 127 1 203 2 325 1 88 1 207 1 251 2 52 2 
181 1 237 2 241 1 80 1 104 1 144 1 58 2 184 1 106 1 293 1 153 1 89 1 251 2 252 1 282 1 74 1 29 2 334 1 284 1 
237 2 241 1 80 1 104 1 144 1 58 1 293 1 153 1 89 1 297 1 251 1 252 1 282 1 74 1 29 1 334 1 284 1 
54 1 181 1 7 1 104 1 58 1 88 1 314 1 190 1 251 1 74 1 283 1 27 1 29 1 284 1 
181 1 237 2 241 1 80 1 104 1 144 1 58 1 184 1 293 1 153 1 89 1 251 1 252 1 282 1 74 1 29 1 334 1 284 1 
150 1 
135 1 248 1 39 1 13 1 
170 1 198 1 260 1 298 1 39 1 157 1 111 1 219 1 
260 1 198 1 7 2 58 1 267 1 186 1 18 1 67 1 170 1 88 1 208 1 110 1 93 1 157 1 251 1 111 1 74 1 283 1 29 1 114 1 284 2 
170 1 164 1 198 1 260 1 140 1 39 1 157 1 111 1 28 1 185 1 
197 1 257 2 99 1 216 1 260 1 198 1 101 1 263 1 39 2 276 1 170 1 92 1 157 1 333 2 111 1 113 1 
135 1 170 1 198 1 260 1 39 1 111 1 
303 1 48 1 99 1 157 1 39 1 333 1 300 1 
251 1 58 1 283 1 29 1 
170 1 198 1 260 1 208 1 39 1 157 1 332 1 111 1 
86 1 165 1 42 1 
86 1 165 1 42 1 
86 1 87 1 305 1 119 1 42 1 
86 1 165 1 42 1 
86 1 42 1 309 1 
86 1 42 1 309 1 
86 1 42 1 309 1 
86 1 42 1 
108 1 81 1 
213 1 99 1 55 8 101 1 140 1 263 1 143 1 185 1 221 1 272 1 274 2 17 2 281 1 28 1 195 4 118 1 164 1 41 4 290 2 207 1 92 1 174 1 333 1 
213 1 99 1 55 11 101 1 140 1 263 1 143 2 185 1 221 1 272 2 274 3 17 2 227 1 312 1 281 1 28 1 193 1 195 6 118 2 164 2 41 5 290 4 48 1 207 2 92 1 174 1 300 1 333 2 
303 2 213 1 55 19 3 1 99 3 258 1 101 1 140 1 263 1 143 3 185 1 221 1 272 3 274 4 17 3 311 1 312 1 281 1 28 1 193 1 163 1 195 9 118 3 164 1 41 10 290 6 48 2 207 3 92 1 129 1 174 1 300 2 333 3 
303 1 213 1 258 1 55 17 3 1 99 2 101 1 140 1 263 1 143 3 185 1 221 1 272 3 274 5 17 3 311 1 312 2 281 1 28 1 193 1 163 1 195 10 118 3 164 1 41 7 290 6 48 2 207 3 92 1 129 1 174 1 300 2 333 3 
213 1 99 1 55 8 101 1 140 1 263 1 143 1 185 1 221 1 272 1 274 2 17 2 281 1 28 1 195 4 118 1 164 1 41 4 290 2 207 1 92 1 174 1 333 1 
303 2 55 12 3 1 99 2 140 1 143 1 185 1 221 1 272 1 274 2 17 1 311 1 312 1 28 1 163 1 195 6 118 1 164 1 41 6 290 2 48 2 207 1 129 1 300 2 333 2 
303 1 213 1 55 18 3 1 99 2 258 2 101 1 140 1 263 1 143 4 185 1 221 1 272 4 274 5 17 3 311 1 312 2 281 1 28 1 163 1 193 1 195 10 118 4 164 1 41 8 290 8 48 2 207 4 92 1 129 1 174 1 300 2 333 3 
303 2 55 16 3 1 99 2 258 2 140 1 143 4 185 1 221 1 272 4 274 6 17 3 311 1 312 3 28 1 163 1 195 9 118 4 164 1 41 7 290 8 48 3 207 4 50 1 129 1 300 3 333 3 
213 1 195 3 99 1 55 7 101 1 263 3 41 4 274 6 17 3 312 3 92 3 174 2 333 1 
303 1 213 1 55 18 3 1 99 2 258 2 101 1 140 1 263 1 143 4 185 1 221 1 272 4 274 4 17 3 311 1 312 1 281 1 28 1 163 1 195 10 118 4 164 1 41 8 290 8 48 2 207 4 50 1 92 1 129 1 174 1 300 2 333 3 
195 4 213 1 99 1 55 8 258 1 118 2 101 1 263 1 143 2 41 4 290 4 272 2 274 3 17 2 312 1 207 2 92 1 174 1 333 1 281 1 
213 1 195 3 55 6 99 1 101 1 263 1 41 3 274 2 17 2 248 1 92 1 174 1 333 1 281 1 
303 1 193 1 195 2 99 1 55 4 118 1 143 1 41 2 290 2 272 1 274 2 48 1 17 1 207 1 312 1 300 1 333 1 
303 1 195 3 99 1 55 7 164 2 140 1 41 4 185 1 48 1 274 2 17 1 227 1 312 1 300 1 333 1 
303 2 213 1 55 23 99 3 258 2 259 1 101 1 263 2 143 2 12 1 185 2 272 2 274 9 17 5 227 1 312 4 281 1 195 11 118 2 164 2 41 12 290 4 48 2 49 1 207 2 92 2 174 1 333 3 300 2 
55 1 164 1 41 1 
195 1 55 1 185 1 
193 1 303 1 195 3 55 6 99 1 118 1 143 1 41 3 290 2 272 1 48 1 274 3 17 2 207 1 312 1 300 1 333 1 231 1 
303 2 55 12 3 1 99 2 140 1 143 1 185 1 221 1 272 1 274 2 17 1 311 1 312 1 28 1 163 1 195 6 118 1 164 1 41 6 290 2 48 2 207 1 129 1 300 2 333 2 
195 3 55 6 99 1 101 1 263 1 41 3 274 2 17 1 312 1 92 1 333 1 
195 1 213 1 55 3 258 1 118 1 263 1 143 1 41 2 290 2 272 1 274 2 17 1 49 1 312 1 207 1 92 1 174 1 
195 5 197 1 55 10 99 2 118 1 101 1 263 2 143 1 41 5 290 2 221 1 272 1 274 5 17 3 207 1 312 2 92 2 333 2 
195 2 55 2 118 1 143 1 290 2 221 1 272 1 274 1 207 1 312 1 300 1 333 1 
303 1 195 2 99 1 55 4 118 1 143 1 41 2 290 2 221 1 272 1 274 2 48 1 17 1 207 1 312 1 300 1 333 1 
195 1 258 1 55 3 118 3 263 1 143 3 41 2 290 6 221 1 272 3 274 2 17 1 49 1 50 1 207 3 312 1 92 1 
303 3 213 1 258 2 55 34 99 5 101 2 140 1 263 3 143 5 185 3 221 1 272 5 274 12 17 7 227 1 312 5 71 1 281 1 193 1 195 16 118 5 164 4 41 18 290 10 46 1 48 3 49 1 50 1 207 5 92 3 174 1 300 3 333 5 179 1 
63 1 169 1 128 1 90 1 52 1 159 1 45 1 
4 1 236 1 217 1 59 1 45 1 63 1 169 1 128 1 90 1 52 1 159 1 115 1 
54 1 88 1 248 1 7 1 314 1 251 1 58 1 74 1 283 1 29 1 284 1 
232 1 7 1 201 1 58 1 63 2 169 1 67 1 88 1 279 1 52 2 251 1 209 1 159 1 283 1 74 1 210 1 29 1 284 1 
7 3 11 1 264 1 58 1 63 2 67 2 279 1 74 1 159 2 29 1 284 1 232 1 201 1 43 1 47 1 169 1 326 1 88 2 206 1 251 1 52 2 209 1 210 2 
7 3 11 1 264 1 58 2 63 2 67 2 279 1 20 1 74 1 159 2 29 2 284 1 201 1 43 1 47 1 169 1 326 1 88 2 206 1 295 1 251 2 52 2 209 1 210 2 
326 1 216 1 7 1 307 1 251 1 58 1 29 1 114 1 
226 1 326 1 216 1 7 1 251 1 58 1 29 1 114 1 
313 1 251 1 58 1 74 1 29 1 284 1 
35 1 7 3 142 1 80 1 77 1 58 7 82 1 202 1 186 1 106 1 203 1 67 1 88 2 313 1 154 1 132 1 251 7 283 2 74 2 29 6 284 3 
256 1 99 1 101 1 7 1 263 1 268 1 106 1 272 2 274 2 17 2 189 1 279 1 281 1 29 1 284 1 195 3 118 2 201 1 41 3 290 4 127 1 204 1 207 2 52 2 209 1 210 1 302 1 213 1 214 1 55 6 143 2 58 1 148 2 63 2 225 1 67 1 159 1 74 1 232 1 166 2 169 2 88 1 92 1 330 1 251 1 174 1 333 1 
292 1 216 1 
7 2 58 2 267 1 186 1 106 1 67 1 88 1 313 1 173 1 251 2 74 1 29 2 284 2 
233 1 54 1 7 1 58 4 106 1 88 1 295 1 314 1 251 4 283 1 74 1 29 4 284 1 
7 1 142 1 58 2 326 1 277 1 67 1 88 1 19 1 154 1 251 2 74 1 29 2 161 1 284 2 
153 1 89 1 237 1 251 1 58 1 252 1 74 1 283 1 29 1 284 1 
88 1 7 1 77 1 10 1 80 1 251 2 58 2 74 1 29 2 284 1 106 1 
233 1 35 1 54 1 7 3 77 1 58 5 82 1 106 1 326 1 88 2 314 1 251 5 283 1 74 2 29 4 284 2 
233 1 35 1 54 1 7 3 77 1 58 5 106 1 85 1 326 1 88 2 314 1 251 5 283 1 74 2 29 4 284 2 
7 1 201 1 58 1 63 2 169 1 67 1 88 1 279 1 20 1 52 2 251 1 209 1 159 1 283 1 74 1 210 1 29 1 284 1 
7 1 142 1 58 1 202 1 186 1 326 1 67 1 88 1 154 1 251 1 74 1 29 1 284 2 
319 1 107 1 169 1 211 1 33 1 
319 2 1 1 216 2 239 1 11 1 43 1 292 1 310 1 47 1 107 1 169 1 158 1 211 2 30 1 337 1 33 2 
63 1 319 1 107 1 52 1 25 1 159 1 211 1 147 1 270 1 
107 1 239 1 158 1 
64 1 248 1 72 1 336 1 
64 1 117 1 72 1 94 1 95 1 336 1 126 1 
117 1 141 1 322 1 
64 1 180 1 117 3 51 1 72 1 94 1 280 2 95 3 289 1 336 1 16 1 126 1 
64 1 117 2 72 1 23 1 94 1 95 2 336 1 285 1 126 1 
180 1 117 1 237 1 144 1 94 1 252 1 192 1 230 1 95 1 336 1 126 1 
64 1 180 1 117 1 94 1 95 1 336 1 126 1 
64 2 180 1 117 1 72 1 94 1 95 1 126 1 
196 1 180 1 117 2 37 1 222 1 126 2 64 1 94 2 95 2 336 1 
180 1 117 3 288 1 14 1 126 1 64 1 205 1 72 1 94 1 192 1 95 3 336 2 285 2 
180 1 117 2 237 2 144 1 126 1 167 1 64 1 153 1 72 1 94 1 252 1 95 2 282 1 336 1 285 1 
180 1 117 4 200 1 126 2 64 1 205 1 72 1 94 2 23 1 192 1 95 4 336 2 285 2 
64 1 180 1 117 1 72 1 94 1 95 1 336 1 126 1 
117 4 238 1 289 1 16 1 126 1 64 2 205 1 72 2 94 1 280 1 192 1 95 4 336 3 285 2 
64 1 116 1 180 1 117 2 72 1 94 1 175 1 95 2 336 1 285 1 75 1 126 1 
64 1 180 1 70 1 117 3 72 1 94 1 280 2 95 3 289 1 336 1 16 2 126 1 
304 2 120 1 97 1 336 2 
180 1 117 1 94 1 242 1 95 1 126 1 
64 1 180 1 117 2 72 1 288 1 94 1 95 2 336 1 285 1 126 1 
323 1 
64 1 180 1 117 1 72 1 94 1 95 1 336 1 126 1 
180 1 117 3 288 1 126 1 64 1 94 1 72 1 280 1 95 3 336 1 285 1 
205 1 238 1 192 1 336 1 
64 1 336 1 

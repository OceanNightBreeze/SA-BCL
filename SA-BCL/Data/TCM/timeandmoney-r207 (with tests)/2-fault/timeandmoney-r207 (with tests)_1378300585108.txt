#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 1 339 1 247 2 173 2 121 2 219 2 26 5 50 2 248 1 361 1 291 1 200 9 176 1 128 1 56 1 179 1 131 1 80 6 255 3 231 1 232 1 285 1 377 1 117 2 171 1 356 4 215 2 74 9 
94 1 339 1 247 2 173 2 121 2 219 2 26 5 50 2 248 1 361 1 291 1 200 9 176 1 128 1 56 1 179 1 131 1 80 6 255 3 231 1 232 1 285 1 377 1 117 2 171 1 356 4 215 2 74 9 
94 1 339 1 247 2 173 2 121 2 219 2 26 6 50 2 248 1 361 1 291 1 200 10 176 1 128 1 56 1 179 1 131 1 80 7 255 4 231 1 232 1 285 1 377 1 117 2 171 1 356 5 215 2 74 10 
94 1 339 1 247 2 173 2 121 2 219 2 26 4 50 2 248 1 361 1 291 1 200 7 176 1 128 1 179 1 131 1 80 4 255 2 231 1 232 1 285 1 377 1 117 1 171 1 356 3 215 2 74 7 
94 1 255 1 173 1 247 1 219 1 26 3 121 1 248 1 291 1 200 4 377 1 117 2 56 1 179 1 80 3 356 2 215 1 74 4 
94 1 247 1 173 1 26 1 219 1 50 1 361 1 291 1 200 2 176 1 168 1 89 1 179 1 215 1 74 2 82 1 
94 1 247 2 255 1 26 2 50 1 291 1 200 3 179 1 171 1 356 1 80 1 215 2 74 3 
94 1 247 2 173 1 26 5 121 1 219 1 50 1 248 1 291 1 200 9 34 1 128 1 179 1 56 1 80 7 36 1 255 3 232 1 377 1 117 2 356 4 171 1 215 2 74 9 
94 1 247 2 173 1 26 5 121 1 219 1 50 1 248 1 291 1 200 9 34 1 128 1 179 1 56 1 80 7 36 1 255 3 232 1 377 1 117 2 356 4 171 1 215 2 74 9 
340 1 227 1 217 1 
340 1 197 1 372 2 
147 2 323 2 123 2 29 1 283 2 75 2 222 1 87 2 
147 3 317 1 6 1 123 2 29 1 268 1 9 2 75 2 222 1 102 1 153 2 297 1 367 1 202 1 104 2 323 3 181 1 275 1 158 1 137 2 230 1 206 1 348 2 347 1 60 1 350 1 62 1 139 1 283 2 87 2 375 1 20 1 64 1 311 1 260 1 119 1 193 1 
147 1 3 1 323 1 123 1 91 1 283 1 143 1 75 1 222 1 87 1 
147 1 18 1 340 1 319 1 283 1 249 1 21 1 323 1 44 1 143 1 48 1 81 1 134 1 217 1 
147 1 18 1 340 1 123 1 283 1 75 1 87 1 249 2 21 1 323 1 143 1 48 1 81 1 134 2 217 1 
379 1 83 1 134 1 120 1 249 1 
340 1 83 1 312 1 338 1 134 2 120 1 249 2 217 1 
134 1 120 1 249 1 
147 1 3 1 83 1 123 1 283 1 222 1 75 1 124 1 87 1 249 1 323 1 91 1 143 1 134 1 
340 1 
340 1 239 1 83 1 338 1 134 2 120 1 249 2 217 1 
340 1 359 1 265 2 328 1 83 2 11 1 249 5 54 1 321 2 298 1 55 1 13 1 66 1 381 1 338 1 134 5 38 2 120 2 217 1 
227 1 29 1 
147 2 123 1 283 2 29 2 75 1 87 1 78 1 323 2 244 1 
16 1 211 1 342 1 
230 1 147 1 348 1 60 1 317 1 350 1 19 1 29 1 9 1 153 1 64 1 202 1 323 1 181 1 119 1 193 1 
230 1 0 1 16 1 147 2 348 1 60 1 350 1 317 1 283 1 9 1 75 1 87 1 64 1 153 1 202 1 323 2 181 1 92 1 119 1 193 1 
0 1 147 3 323 3 123 1 29 1 283 3 75 3 87 3 
147 1 323 1 91 1 283 1 143 1 75 1 87 1 
147 1 323 1 123 1 283 1 143 1 75 1 244 1 87 1 78 1 
172 1 0 1 147 4 317 1 123 2 29 1 268 1 9 1 75 3 222 1 102 1 249 1 153 1 78 1 297 1 202 1 104 2 323 4 14 1 181 1 81 1 134 1 275 1 137 1 230 1 206 1 347 1 18 1 348 1 60 1 350 1 139 1 283 3 87 3 375 1 64 1 21 1 311 1 260 1 143 1 119 1 92 1 48 1 193 1 
0 1 147 2 323 2 44 1 335 1 29 1 283 2 75 1 87 1 
0 2 172 1 147 3 18 1 340 1 123 1 283 3 75 3 87 3 249 1 353 1 78 1 21 1 323 3 143 1 134 1 92 1 48 1 81 1 
0 1 16 1 147 2 323 2 123 1 283 2 342 1 75 2 87 2 78 1 
230 1 147 1 348 1 60 1 317 1 350 1 29 1 9 1 153 1 64 1 202 1 323 1 181 1 119 1 193 1 
230 1 147 1 348 1 60 1 350 1 199 1 29 1 9 1 152 1 153 1 64 1 202 1 323 1 181 1 193 1 
2 1 97 1 196 1 27 1 266 1 6 2 268 1 342 2 125 1 224 1 102 1 271 1 297 1 104 2 35 1 137 4 206 1 16 2 375 1 211 2 311 1 336 1 260 2 70 1 
147 1 323 1 283 1 143 1 81 1 75 1 273 1 87 1 
0 2 147 5 195 1 123 1 283 5 29 1 75 4 373 1 87 4 78 1 323 5 44 1 335 1 92 1 
147 2 323 2 91 1 283 2 143 1 273 1 75 2 87 2 
65 1 37 1 
65 1 37 1 
194 1 69 1 
194 1 69 1 
194 1 69 1 
65 1 192 1 37 1 
65 1 37 1 235 1 
194 1 65 2 116 1 5 1 69 1 37 2 
65 1 192 1 37 1 
65 1 192 1 37 1 
65 1 242 1 37 1 
65 1 242 1 37 1 
65 1 242 1 37 1 
146 2 340 1 207 2 305 1 28 2 86 1 76 1 249 2 376 2 103 1 32 1 320 1 65 2 116 1 343 2 299 1 134 2 37 2 144 3 
146 1 147 2 28 1 29 1 75 2 249 1 103 1 366 1 343 1 323 2 134 1 203 1 37 1 205 1 349 1 189 1 283 2 87 2 376 1 235 1 310 1 65 1 289 1 144 1 
173 1 219 1 121 1 
173 1 219 1 82 1 
173 3 121 2 39 1 175 1 294 1 82 1 
173 2 121 1 282 1 175 1 294 1 82 1 
173 2 121 1 175 2 294 1 82 1 
218 1 340 2 2 1 265 1 97 1 196 1 197 1 249 5 271 1 156 1 321 1 13 2 55 3 129 1 134 5 203 1 38 1 205 1 349 1 83 4 372 3 284 2 112 1 111 1 42 2 380 2 66 1 23 1 338 1 313 1 120 1 217 1 
340 5 51 1 2 3 265 2 97 3 196 3 197 3 223 1 249 9 271 3 156 3 321 2 13 6 55 8 129 1 134 9 203 4 38 2 346 1 328 1 83 7 372 9 112 2 111 2 114 1 42 6 379 5 380 6 66 1 170 5 338 1 120 6 262 1 49 1 217 1 
218 1 340 3 2 1 265 1 97 1 196 1 197 2 249 3 271 1 321 1 156 1 55 3 13 2 134 3 203 1 38 1 328 1 83 2 372 4 284 1 112 1 111 1 42 2 380 2 313 1 217 1 
218 1 340 4 51 1 2 2 265 1 97 2 196 2 197 3 249 4 271 2 321 1 156 2 55 5 13 4 134 4 203 2 38 1 346 1 328 1 83 3 372 7 284 2 112 1 111 1 42 4 380 4 313 1 217 1 49 1 
227 1 133 1 193 1 
43 1 193 1 
241 1 
202 1 193 1 
127 1 202 1 350 1 133 2 326 1 193 3 
202 1 350 1 193 1 
109 1 193 1 
145 1 137 7 229 1 358 1 97 1 220 2 371 1 267 1 6 4 125 3 113 1 271 1 237 1 336 2 260 3 243 1 57 1 
145 1 137 7 229 1 358 1 97 1 220 2 371 1 267 1 6 4 125 3 113 1 271 1 237 1 336 2 260 3 243 1 57 1 
145 1 137 7 229 1 138 1 358 1 97 1 220 2 371 1 267 1 6 4 125 3 113 1 271 1 237 1 336 2 260 3 243 1 57 1 
229 1 137 1 145 1 220 1 6 1 267 2 140 1 
145 1 358 1 97 1 220 2 6 5 267 1 268 2 125 4 102 2 126 1 271 1 297 2 104 4 57 1 160 1 137 9 279 1 371 1 113 1 237 1 311 2 336 3 260 4 243 1 
94 1 247 1 173 2 26 1 219 1 121 1 174 1 50 1 96 1 362 1 291 1 9 1 200 2 153 1 53 1 250 1 179 1 325 1 180 1 80 1 345 1 82 1 230 1 348 1 39 1 64 1 118 1 240 1 215 1 74 2 
94 1 247 1 173 2 26 1 219 1 121 1 174 1 50 1 362 1 291 1 9 1 200 3 153 1 53 1 250 1 180 1 80 2 345 1 82 1 304 1 230 1 348 1 39 1 64 1 354 1 118 1 240 1 67 1 215 1 74 3 
94 1 173 2 26 1 174 1 121 1 219 1 50 1 362 1 291 1 9 1 200 2 153 1 180 1 80 2 345 1 82 1 304 1 230 1 348 1 39 1 64 1 118 1 240 1 67 1 74 2 
230 1 247 1 348 1 50 2 360 1 200 1 9 1 364 1 64 1 153 1 354 1 118 2 202 1 240 2 258 1 180 2 181 1 215 1 204 1 216 1 193 1 303 1 74 1 
247 1 173 2 219 1 121 1 174 1 50 1 96 1 362 1 9 1 200 1 153 1 53 1 250 1 179 1 180 1 345 1 82 1 304 1 230 1 348 1 39 1 64 1 118 1 240 1 215 1 74 1 
85 1 
147 1 340 2 95 1 197 2 150 1 8 1 9 2 249 5 153 2 295 2 202 1 13 2 55 2 252 1 204 1 348 2 18 1 351 1 64 1 111 1 21 1 66 1 212 1 357 2 120 6 217 1 25 1 265 1 318 2 319 1 364 1 77 1 321 1 323 1 181 2 134 5 81 1 182 1 135 1 38 1 230 1 186 2 84 2 283 1 372 2 141 1 191 4 332 1 337 2 44 1 90 2 338 3 143 1 48 1 193 1 
147 1 95 1 150 1 319 1 249 3 252 1 323 1 134 3 81 1 18 1 186 1 283 1 141 1 21 1 191 2 239 1 44 1 212 1 143 1 338 1 48 1 120 2 
147 1 95 1 340 1 150 1 319 1 249 3 252 1 323 1 134 3 81 1 18 1 283 1 141 1 21 1 191 3 239 1 44 1 212 1 337 1 143 1 338 1 48 1 120 1 217 1 
147 1 95 1 340 1 150 1 319 1 249 3 252 1 323 1 134 3 81 1 18 1 186 1 84 1 283 1 141 1 21 1 191 3 239 1 44 1 212 1 337 1 338 1 143 1 48 1 120 2 217 1 
147 1 95 1 340 5 4 1 150 1 197 2 249 5 295 2 252 1 251 1 55 1 13 1 157 1 18 1 351 1 21 1 212 1 66 1 261 1 68 1 357 2 120 7 217 5 265 1 318 2 319 1 321 1 323 1 81 1 134 5 182 1 38 1 186 4 84 4 283 1 141 1 191 6 239 1 44 1 337 4 90 2 143 1 338 3 48 1 
147 1 95 1 340 2 150 1 197 2 249 4 295 2 252 1 55 1 13 1 18 1 351 1 21 1 66 1 212 1 357 2 120 4 217 1 25 1 265 1 318 2 319 1 321 1 323 1 182 1 81 1 134 4 38 1 186 2 84 2 283 1 141 1 372 2 191 4 44 1 337 2 90 2 143 1 338 2 48 1 
147 1 340 1 95 1 265 1 197 2 150 1 318 2 319 1 249 4 295 2 321 1 13 1 55 1 252 1 323 1 157 1 182 1 134 4 81 1 38 1 186 2 18 1 84 2 351 1 283 1 141 1 21 1 191 4 337 2 44 1 212 1 66 1 90 2 261 1 338 2 143 1 48 1 68 1 357 2 120 4 217 1 
147 1 340 1 95 1 265 1 197 2 150 1 318 2 319 1 249 4 295 2 321 1 13 1 55 1 252 1 323 1 157 1 182 1 134 4 81 1 38 1 186 2 18 1 84 2 351 1 283 1 141 1 21 1 191 4 337 2 44 1 212 1 66 1 90 2 261 1 338 2 143 1 48 1 68 1 357 2 120 4 217 1 
147 1 340 1 95 1 265 1 150 1 319 1 249 4 270 1 295 2 321 1 55 1 13 1 252 1 323 1 134 4 81 1 274 2 38 1 186 2 18 1 17 1 84 2 351 1 283 1 330 2 372 2 141 1 21 1 191 4 337 2 44 1 212 1 66 1 261 1 338 2 143 1 48 1 357 2 120 4 290 1 217 1 
147 1 340 1 95 1 265 1 197 2 150 1 318 2 319 1 249 4 295 2 321 1 13 1 55 1 252 1 251 1 323 1 157 1 182 1 134 4 81 1 38 1 18 1 186 3 84 3 351 1 283 1 141 1 21 1 191 5 66 1 44 1 212 1 337 3 90 2 261 1 338 2 143 1 68 1 48 1 357 2 120 5 217 1 
147 1 340 1 95 1 265 1 197 2 150 1 318 2 319 1 249 4 295 2 321 1 13 1 55 1 252 1 251 1 323 1 157 1 182 1 134 4 81 1 38 1 18 1 186 3 84 3 351 1 283 1 141 1 21 1 191 5 66 1 44 1 212 1 337 3 90 2 261 1 338 2 143 1 68 1 48 1 357 2 120 5 217 1 
147 1 95 1 340 1 150 1 249 4 295 2 252 1 13 1 55 1 18 1 351 1 21 1 66 1 212 1 357 2 120 4 217 1 25 1 265 1 319 1 270 1 321 1 323 1 81 1 134 4 274 2 38 1 186 2 84 2 283 1 141 1 372 2 330 2 191 4 44 1 337 2 143 1 338 2 48 1 
97 1 220 1 6 3 268 1 29 2 342 1 125 2 102 1 271 1 227 1 297 1 104 2 35 1 57 1 137 6 16 1 206 1 371 1 375 1 113 1 237 1 211 1 311 1 336 2 260 3 243 1 
358 1 2 1 196 2 97 1 6 8 29 1 221 1 268 2 342 4 10 1 125 2 102 2 271 2 156 2 297 2 104 4 275 1 15 1 302 1 137 14 206 1 16 11 187 3 62 1 308 1 331 1 165 3 375 2 211 11 311 2 336 1 260 6 314 1 
0 1 147 2 317 1 6 1 29 1 268 1 9 1 342 1 75 1 153 1 102 1 297 1 202 1 322 1 323 2 104 2 181 1 275 1 108 1 230 1 137 2 348 1 206 1 60 1 350 1 19 1 62 1 283 1 308 1 87 1 64 1 375 1 169 1 311 1 260 1 119 1 92 1 193 1 
0 1 147 3 2 2 97 3 196 2 6 10 9 3 342 7 292 1 293 2 153 3 102 3 156 2 297 3 202 2 104 6 300 1 57 1 304 1 348 3 206 3 347 2 16 7 60 2 350 2 61 1 306 2 62 1 308 1 352 2 64 2 113 1 211 7 311 3 260 10 119 2 358 4 220 1 317 2 29 2 268 3 75 1 125 8 271 3 323 3 181 1 275 1 137 20 230 2 371 1 283 1 87 1 375 3 237 1 41 2 336 4 243 1 92 1 193 2 
0 1 147 1 52 1 6 1 268 2 9 8 75 1 364 1 153 7 102 2 154 1 297 2 202 2 368 1 323 1 104 4 325 1 35 1 181 2 275 1 158 2 204 1 159 1 304 1 230 2 137 2 348 8 206 2 280 1 62 1 329 1 283 1 87 1 64 2 375 2 311 2 260 1 245 1 193 3 
147 1 2 1 196 1 97 1 123 1 6 1 268 1 342 1 75 1 125 1 102 1 78 1 296 1 271 1 156 1 297 1 104 2 323 1 137 3 16 1 206 1 283 1 308 1 87 1 375 1 211 1 311 1 336 1 260 2 
137 2 16 1 206 1 358 1 196 1 6 2 268 1 342 1 125 1 224 1 375 1 102 1 271 1 297 1 211 1 311 1 104 2 35 1 
137 2 16 1 206 1 2 1 97 1 266 1 268 1 342 1 125 1 375 1 102 1 297 1 211 1 311 1 104 2 336 1 35 1 260 2 
137 4 16 2 206 1 358 1 2 1 97 1 196 1 6 2 268 1 342 2 125 2 375 1 102 1 271 1 156 1 297 1 211 2 311 1 104 2 336 1 35 1 260 2 
137 2 16 1 206 1 358 1 196 1 6 2 268 1 342 1 125 1 224 1 154 1 375 1 102 1 271 1 297 1 211 1 311 1 104 2 
137 2 16 1 206 1 2 1 97 1 266 1 268 1 342 1 125 1 154 1 375 1 102 1 297 1 211 1 311 1 104 2 336 1 260 2 
137 4 16 2 206 1 358 1 2 1 97 1 196 1 6 2 268 1 342 2 125 2 154 1 375 1 102 1 271 1 156 1 297 1 211 2 311 1 104 2 336 1 260 2 
137 4 16 2 206 1 358 1 2 1 97 1 196 1 6 2 268 1 342 2 125 2 375 1 102 1 271 1 156 1 297 1 211 2 311 1 104 2 336 1 260 2 
147 1 317 1 6 1 29 1 268 1 9 1 153 1 102 1 297 1 202 1 323 1 104 2 181 1 275 1 137 2 230 1 347 1 348 1 206 1 60 1 350 1 62 1 64 1 375 1 311 1 260 1 119 1 193 1 
147 1 199 1 6 1 29 1 268 1 9 1 152 1 153 1 102 1 297 1 202 1 323 1 104 2 181 1 275 1 137 2 230 1 348 1 206 1 60 1 350 1 62 1 64 1 375 1 88 1 311 1 260 1 193 1 
137 4 16 2 206 1 358 1 2 1 97 1 196 1 6 2 268 1 342 2 308 1 125 2 375 1 102 1 271 1 156 1 297 1 211 2 311 1 104 2 336 1 260 2 
147 1 358 1 2 1 97 1 196 1 317 1 6 2 268 1 342 2 9 1 125 2 153 1 102 1 271 1 156 1 297 1 202 1 323 1 104 2 325 1 137 4 230 1 16 2 347 1 348 1 206 1 60 1 350 1 306 1 64 1 375 1 211 2 311 1 336 1 260 2 119 1 193 1 
263 1 147 1 358 1 2 1 97 1 196 1 123 1 6 2 268 1 342 1 75 1 125 1 102 1 78 1 271 1 156 1 297 1 104 2 323 1 137 3 206 1 16 1 283 1 308 1 87 1 375 1 211 1 311 1 260 1 
358 3 2 3 98 1 196 3 97 3 6 9 268 2 125 6 102 2 177 1 155 1 126 1 271 3 156 3 297 2 104 4 130 1 15 1 228 1 185 1 137 19 187 2 161 2 307 2 331 1 165 1 311 2 336 3 260 10 73 1 
358 2 2 2 97 2 98 2 196 3 6 14 100 1 268 3 125 4 30 1 102 3 177 1 126 1 271 3 156 3 297 3 104 6 130 1 132 1 344 1 228 1 15 2 137 26 279 2 187 2 161 1 307 4 233 1 309 1 165 2 311 3 336 2 260 12 73 2 
358 4 2 4 220 1 98 2 196 4 97 5 6 20 100 1 268 3 125 8 30 1 102 3 177 1 126 1 271 5 156 4 297 3 104 6 130 1 344 1 132 1 57 1 15 3 228 1 185 1 137 41 279 1 187 4 161 1 371 1 307 4 233 1 331 1 309 1 165 3 167 1 113 1 237 1 311 3 336 4 260 21 243 1 73 1 
358 3 2 3 220 1 98 2 196 4 97 4 6 20 100 1 268 4 125 7 30 1 102 4 177 1 126 1 271 5 156 4 297 4 104 8 130 1 344 1 132 1 57 1 15 3 228 1 185 1 137 38 279 2 187 4 161 1 371 1 307 4 233 1 331 1 309 1 165 3 167 1 113 1 237 1 311 4 336 4 260 18 243 1 73 1 
358 7 2 7 220 1 98 1 196 7 97 8 6 27 100 1 221 2 268 2 125 14 30 1 102 2 177 1 126 1 271 8 156 7 297 2 104 4 130 1 344 1 132 1 57 1 15 2 228 1 137 52 279 1 187 4 161 1 371 1 307 4 233 1 331 2 309 1 165 4 113 1 237 1 311 2 336 7 260 25 243 1 73 1 
32 1 320 1 146 1 65 1 116 1 343 1 28 1 363 1 37 1 376 1 
189 1 235 1 
315 1 146 1 65 1 12 1 343 1 28 1 37 1 59 1 376 1 
146 1 340 1 207 1 305 1 28 1 86 1 249 1 103 1 376 1 32 1 320 1 65 1 116 1 343 1 299 1 134 1 37 1 144 2 
146 1 340 1 207 1 305 1 28 1 86 1 249 1 103 1 376 1 32 1 320 1 65 1 116 1 343 1 299 1 134 1 37 1 144 2 
146 1 340 1 207 1 305 1 28 1 86 1 249 1 103 1 376 1 32 1 320 1 65 1 116 1 343 1 299 1 134 1 37 1 144 2 
5 1 22 1 192 1 
5 1 22 1 192 1 
242 1 136 1 
5 1 242 1 136 1 
310 1 289 1 
147 2 146 1 28 1 29 1 75 2 249 1 366 1 343 1 323 2 134 1 203 1 37 1 205 1 349 1 207 1 83 1 189 1 283 2 163 1 86 1 87 2 376 1 235 1 310 1 65 1 289 1 144 1 
22 1 192 1 
5 1 242 1 136 1 
147 2 1 1 316 1 6 1 268 1 9 2 102 1 153 2 297 1 202 1 323 2 104 2 275 1 158 2 254 1 230 1 137 2 348 2 206 1 280 1 62 1 283 2 234 1 308 1 64 1 375 1 238 1 311 1 260 1 245 1 193 1 
230 1 304 1 173 2 348 2 219 1 121 1 39 1 362 1 9 2 151 1 40 1 64 1 153 2 53 1 325 1 180 1 214 1 82 1 345 1 
304 1 230 1 173 2 348 1 219 1 121 1 39 1 362 1 9 1 151 1 153 1 53 1 64 1 324 1 180 1 82 1 345 1 
230 1 348 1 9 1 364 1 64 1 153 1 202 1 180 1 181 1 214 1 93 1 216 1 204 1 193 1 
230 1 304 1 173 2 348 1 219 1 121 1 39 1 362 1 9 1 151 1 40 1 153 1 53 1 64 1 180 1 214 1 82 1 345 1 
355 1 
54 1 340 1 227 1 298 1 55 1 13 1 217 1 
340 2 265 1 197 1 318 1 372 1 249 1 321 1 55 1 13 1 66 1 90 1 338 1 134 1 182 1 120 1 38 1 217 1 
340 8 2 2 196 2 97 2 197 6 9 3 153 3 249 5 54 1 156 2 298 1 202 3 55 9 13 8 58 2 348 3 350 3 256 2 208 1 352 2 109 2 64 3 111 2 21 2 115 2 66 4 259 1 120 5 217 2 24 2 265 4 365 1 77 1 31 2 271 2 321 4 33 1 325 1 181 1 326 1 272 2 133 2 134 5 38 4 230 4 372 12 142 2 190 1 286 2 43 3 42 6 380 6 338 3 193 10 
340 5 265 2 2 2 196 2 97 2 197 3 198 1 77 1 30 1 249 1 269 1 271 2 321 2 156 2 55 8 13 5 132 1 344 1 134 1 15 1 38 2 187 1 256 2 233 1 372 6 309 1 165 1 111 1 286 1 42 5 380 5 66 2 338 1 120 1 217 2 
147 1 265 1 97 1 3 1 123 1 222 1 75 1 124 1 249 1 271 2 321 1 13 2 55 2 323 1 369 1 57 1 134 1 38 1 256 2 283 1 87 1 286 1 237 1 66 1 91 1 143 1 68 1 243 1 
340 1 265 1 54 1 321 1 298 1 13 1 55 1 66 1 38 1 217 1 
340 5 2 2 196 2 97 2 197 5 256 2 372 10 352 1 286 1 271 2 156 2 42 5 13 5 55 5 380 5 
340 1 338 1 134 1 249 1 120 1 217 1 
265 2 8 1 9 4 364 1 365 2 77 2 153 4 249 3 321 2 202 1 33 1 55 2 13 2 181 2 134 3 135 1 204 1 38 2 327 1 230 1 348 4 328 1 64 1 111 2 66 1 45 1 338 2 193 1 120 4 
147 3 317 1 123 2 29 1 268 1 9 1 75 2 222 1 102 1 153 1 297 1 202 1 104 2 323 3 181 1 275 1 137 1 230 1 348 1 347 1 206 1 60 1 350 1 139 1 283 2 87 2 64 1 375 1 311 1 260 1 119 1 193 1 
340 4 265 1 220 1 197 2 372 4 77 1 111 1 321 1 42 2 13 2 55 1 380 2 66 1 38 1 217 2 
148 1 28 1 376 1 
310 1 320 1 188 1 28 1 376 1 
148 1 28 1 376 1 
148 1 28 1 376 1 
28 1 47 1 376 1 
28 1 47 1 376 1 
28 1 47 1 376 1 
28 1 376 1 
65 1 37 1 
137 8 358 1 279 1 220 1 97 1 371 1 6 4 268 2 125 3 102 2 113 1 271 1 237 1 297 2 311 2 104 4 336 2 260 4 243 1 57 1 
137 6 220 1 97 1 371 1 6 3 125 2 113 1 237 1 271 1 227 1 336 2 260 3 57 1 243 1 
137 4 358 1 2 1 97 1 196 1 6 2 268 1 374 1 125 2 102 1 271 1 156 1 297 1 311 1 104 2 336 1 260 2 
137 7 358 1 2 1 97 1 187 2 196 1 6 3 331 1 165 1 125 2 271 1 156 1 336 1 260 4 15 1 
358 4 2 2 220 1 196 2 97 3 6 11 221 1 268 2 10 1 125 9 102 2 271 3 156 2 297 2 104 4 57 2 137 23 279 2 187 2 371 1 331 1 165 2 166 1 113 1 237 2 311 2 336 5 260 12 243 1 
137 1 187 1 260 1 
137 1 6 1 165 1 
137 6 358 1 2 1 196 1 97 1 6 3 268 1 374 1 352 1 125 3 102 1 271 1 156 1 297 1 104 2 311 1 336 2 260 3 
358 1 2 2 196 2 97 2 6 6 268 1 125 2 102 1 30 1 126 1 271 2 156 2 297 1 104 2 132 1 344 1 15 1 137 12 187 1 233 1 165 1 309 1 311 1 336 1 260 6 
137 6 358 1 97 1 6 3 125 2 271 1 237 1 336 1 260 3 243 1 57 1 
137 3 358 1 279 1 371 1 6 1 268 1 125 2 166 1 102 1 113 1 237 1 297 1 311 1 104 2 336 1 260 2 57 1 
137 10 358 2 97 2 6 5 268 1 125 5 102 1 126 1 237 2 271 2 297 1 104 2 311 1 336 3 260 5 369 1 57 2 243 1 
137 2 358 1 196 1 6 2 268 1 125 1 102 1 126 1 271 1 297 1 311 1 104 2 
137 4 358 1 2 1 97 1 196 1 6 2 268 1 125 2 102 1 126 1 271 1 156 1 297 1 311 1 104 2 336 1 260 2 
185 1 137 3 358 1 279 1 6 1 268 3 166 1 125 2 102 3 126 1 237 1 297 3 311 3 104 6 336 1 260 2 57 1 
358 5 2 3 220 1 196 3 97 5 99 1 6 16 268 5 125 12 102 5 126 1 271 5 156 3 297 5 104 10 105 1 57 3 15 1 185 1 137 34 279 2 187 4 371 1 374 1 331 1 166 1 165 3 113 1 237 3 236 1 311 5 336 7 260 18 243 2 
220 1 97 1 6 4 268 1 125 2 102 1 126 1 271 1 297 1 104 2 57 1 15 1 137 8 187 1 371 1 233 1 165 1 113 1 237 1 311 1 336 2 260 4 243 1 
358 1 220 1 97 1 196 1 6 6 268 2 125 3 102 2 126 1 271 2 156 1 297 2 104 4 57 1 15 1 137 11 187 2 371 1 233 1 374 1 331 1 165 1 113 1 237 1 311 2 336 2 260 5 243 1 
358 1 2 2 220 1 196 2 97 3 6 9 268 3 125 4 30 1 102 3 126 1 271 3 156 2 297 3 104 6 132 1 344 1 57 1 15 1 137 19 279 1 187 1 371 1 233 1 374 1 165 1 309 1 113 1 237 1 311 3 336 3 260 10 243 1 
358 2 2 1 220 1 196 2 97 2 6 10 268 3 125 5 102 3 30 1 126 1 271 3 156 2 297 3 104 6 132 1 344 1 57 1 15 1 137 17 279 1 187 1 371 1 233 1 374 1 165 1 309 1 113 1 237 1 311 3 336 3 260 7 243 1 
220 1 97 1 6 4 268 1 125 2 102 1 126 1 271 1 297 1 104 2 57 1 15 1 137 8 187 1 371 1 233 1 165 1 113 1 237 1 311 1 336 2 260 4 243 1 
358 1 2 2 196 2 97 2 6 6 268 1 125 2 102 1 30 1 126 1 271 2 156 2 297 1 104 2 132 1 344 1 15 1 137 12 187 1 233 1 165 1 309 1 311 1 336 1 260 6 
358 2 2 1 220 1 196 2 97 2 6 10 268 4 125 5 30 1 102 4 126 1 271 3 156 2 297 4 104 8 132 1 344 1 57 1 15 1 137 18 279 2 187 1 371 1 233 1 374 1 309 1 165 1 113 1 237 1 311 4 336 3 260 8 243 1 
358 3 2 2 196 3 97 2 6 9 268 4 125 6 30 1 102 4 126 1 271 3 156 3 297 4 104 8 132 1 344 1 15 1 137 16 185 1 279 2 187 1 233 1 309 1 165 1 311 4 336 3 260 7 
137 7 358 3 97 1 371 1 6 3 125 6 113 2 237 3 271 1 336 3 260 4 57 3 243 1 
358 1 2 1 220 1 196 2 97 2 6 10 268 4 125 4 30 1 102 4 126 1 271 3 156 2 297 4 104 8 132 1 344 1 57 1 15 1 137 18 185 1 279 2 187 1 371 1 233 1 309 1 165 1 113 1 237 1 311 4 336 3 260 8 243 1 
147 1 323 1 44 1 335 1 29 1 283 1 72 1 
147 1 162 1 29 1 283 1 209 1 378 1 333 1 287 1 323 1 335 1 44 1 72 1 
230 1 348 1 227 1 202 1 9 1 181 1 364 1 204 1 64 1 193 1 153 1 
230 1 0 1 147 2 348 1 60 1 350 1 317 1 29 1 283 1 9 1 75 1 87 1 153 1 64 1 202 1 323 2 181 1 193 1 
0 1 24 1 147 2 317 1 29 1 9 1 75 2 365 1 153 1 202 2 323 2 81 1 230 1 348 1 60 1 350 2 283 2 87 1 109 1 64 1 143 1 48 1 193 3 
0 1 24 1 147 2 199 1 29 1 9 2 75 2 365 1 153 2 202 2 323 2 106 1 81 1 230 1 348 2 60 1 350 2 283 2 87 1 109 1 64 1 143 1 48 1 193 3 
24 1 230 1 348 3 340 1 350 1 122 1 9 3 365 1 109 1 249 2 153 3 64 1 21 1 43 1 202 1 106 1 181 1 133 1 134 2 183 1 193 4 120 1 217 1 
24 1 230 1 348 3 340 1 350 1 9 3 365 1 109 1 249 2 153 3 64 1 21 1 43 1 202 1 106 1 181 1 272 1 133 1 134 2 193 4 120 1 217 1 
230 1 348 1 329 1 9 1 64 1 153 1 
304 1 230 3 348 7 280 1 350 1 52 1 329 1 9 7 153 6 64 2 202 2 368 1 325 1 181 2 326 1 301 1 158 1 246 1 276 1 193 3 159 1 
0 1 147 2 97 1 6 3 342 1 9 1 293 1 153 1 102 2 297 2 202 1 104 4 57 1 254 1 347 1 348 1 206 2 16 1 60 1 350 1 306 1 308 1 64 1 113 1 211 1 311 2 260 3 119 1 317 1 220 1 268 2 29 2 75 1 125 2 271 1 323 2 325 1 230 1 137 6 371 1 283 1 87 1 375 2 237 1 336 2 243 1 193 1 
340 1 265 2 9 1 153 1 249 3 54 1 321 2 298 1 33 1 55 1 13 1 181 1 272 1 133 1 134 3 58 1 38 2 348 1 83 1 142 1 21 1 115 1 43 1 66 2 338 1 193 2 120 2 217 1 
230 2 348 2 350 1 329 1 9 2 153 2 64 1 202 1 325 1 259 1 133 1 326 1 193 2 
230 1 348 4 63 1 9 4 364 1 153 4 64 1 202 1 325 1 106 1 181 1 204 1 193 1 
278 1 230 2 348 2 264 1 350 1 61 1 9 2 365 1 153 2 64 1 202 1 301 1 246 1 193 1 
230 1 173 1 348 1 219 1 362 1 9 1 181 1 64 1 153 1 82 1 
304 1 230 1 348 2 1 1 280 1 9 2 153 2 64 1 202 1 325 1 193 1 
230 2 348 5 280 1 63 1 9 5 364 1 365 1 153 4 64 2 202 2 368 1 325 1 181 1 204 1 193 3 159 1 
230 2 348 5 280 1 63 1 9 5 364 1 365 1 153 4 64 2 202 2 325 1 181 1 204 1 71 1 193 3 159 1 
230 1 0 1 147 2 348 1 60 1 350 1 199 1 29 1 283 1 9 1 75 1 87 1 153 1 64 1 202 1 323 2 181 1 193 1 
230 2 348 1 350 1 9 1 365 1 153 1 64 1 202 1 326 1 301 1 246 1 276 1 193 1 
147 1 238 1 316 1 323 1 283 1 234 1 107 1 164 1 110 1 
341 1 107 1 257 1 
281 1 29 1 164 1 107 1 110 1 
172 1 18 1 340 1 341 1 83 1 281 2 29 1 164 2 249 2 257 1 110 2 21 1 143 1 81 1 48 1 107 1 134 2 217 1 184 1 
94 1 26 1 227 1 291 1 
94 1 247 1 26 1 291 1 200 1 215 1 74 1 
50 1 240 1 74 1 
94 1 370 1 247 1 26 1 149 1 200 3 291 1 176 2 334 1 179 1 215 1 74 3 
94 1 247 1 26 1 117 1 291 1 200 2 80 1 215 1 74 2 
247 1 173 1 26 1 121 1 219 1 200 1 377 1 179 1 356 1 215 1 74 1 
247 1 26 1 179 1 291 1 200 1 215 1 74 1 
94 1 247 1 179 1 291 2 200 1 215 1 74 1 
247 2 26 1 291 1 200 2 226 1 179 1 46 1 213 1 215 2 74 2 
94 1 247 1 255 1 26 2 232 1 291 1 200 3 128 1 179 1 80 2 356 1 215 1 74 3 
94 1 173 2 247 1 26 1 39 1 121 1 219 1 291 1 200 2 225 1 179 1 80 1 215 1 82 1 74 2 
94 1 247 2 255 1 26 2 291 1 200 4 117 1 179 1 56 1 80 2 356 1 215 2 74 4 
94 1 247 1 26 1 179 1 291 1 200 1 215 1 74 1 
94 2 247 1 255 1 26 3 149 1 291 2 200 4 176 1 201 1 334 1 80 2 356 1 215 1 74 4 
94 1 247 1 26 1 291 1 200 2 34 1 179 1 288 1 253 1 80 1 215 1 74 2 
94 1 247 1 26 1 149 1 200 3 291 1 176 2 210 1 334 2 179 1 215 1 74 3 
26 2 79 1 178 1 277 2 
247 1 179 1 200 1 101 1 215 1 74 1 
94 1 247 1 26 1 128 1 179 1 291 1 200 2 80 1 215 1 74 2 
7 1 
94 1 247 1 26 1 179 1 291 1 200 1 215 1 74 1 
94 1 247 1 26 1 200 3 291 1 176 1 128 1 179 1 80 1 215 1 74 3 
201 1 255 1 26 1 356 1 
26 1 291 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 280 21 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 280 21 226 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 280 21 226 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 280 21 226 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 5 245 1 151 1 224 6 202 2 40 2 279 2 15 1 70 1 375 1 181 1 238 4 48 1 90 9 161 1 239 1 51 1 52 2 22 2 23 2 76 1 55 1 217 2 361 1 187 1 164 1 78 3 100 9 
149 5 245 1 151 1 224 6 202 2 40 2 279 2 15 1 70 1 375 1 181 1 238 4 48 1 90 9 161 1 239 1 51 1 52 2 22 2 23 2 76 1 55 1 217 2 361 1 187 1 164 1 78 3 100 9 
149 6 245 1 151 1 224 7 202 2 40 2 279 2 15 1 70 1 375 1 181 1 238 5 48 1 90 10 161 1 239 1 51 1 52 2 22 2 23 2 76 1 55 1 217 2 361 1 187 1 164 1 78 4 100 10 
149 4 245 1 151 1 224 4 202 2 40 2 279 2 15 1 70 1 375 1 238 3 48 1 90 7 161 1 239 1 51 1 52 2 22 1 23 2 76 1 55 1 217 2 361 1 187 1 164 1 78 2 100 7 
149 3 245 1 224 3 181 1 238 2 161 1 90 4 239 1 22 2 202 1 23 1 40 1 217 1 187 1 78 1 279 1 15 1 100 4 
149 1 245 1 161 1 90 2 239 1 51 1 52 1 105 1 23 1 202 1 76 1 40 1 217 1 63 1 176 1 100 2 
149 2 245 1 224 1 238 1 161 1 90 3 239 1 52 1 23 2 217 2 164 1 78 1 100 3 
149 5 245 1 224 7 202 1 40 1 279 1 308 1 15 1 355 1 181 1 238 4 48 1 90 9 161 1 239 1 52 1 22 2 23 2 217 2 361 1 187 1 164 1 78 3 100 9 
149 5 245 1 224 7 202 1 40 1 279 1 308 1 15 1 355 1 181 1 238 4 48 1 90 9 161 1 239 1 52 1 22 2 23 2 217 2 361 1 187 1 164 1 78 3 100 9 
34 1 155 1 372 1 
34 1 312 1 323 2 
174 2 321 2 26 1 236 2 121 2 328 2 96 1 378 2 
345 1 321 2 121 2 272 2 123 2 347 1 102 1 351 1 230 1 174 3 135 1 175 1 305 1 11 1 328 2 281 1 373 1 69 1 47 2 236 2 378 3 111 1 185 1 74 1 360 1 92 1 26 1 218 1 340 2 219 1 116 1 96 1 166 2 192 1 146 1 168 1 320 1 
174 1 205 1 321 1 26 1 236 1 121 1 160 1 328 1 128 1 378 1 
321 1 171 1 34 1 334 1 378 1 174 1 317 1 205 1 77 1 155 1 27 1 278 1 79 1 319 1 
321 1 121 1 236 1 171 1 34 1 334 1 378 1 174 1 317 1 205 1 155 1 27 1 79 2 328 1 319 2 
213 1 227 1 79 1 118 1 319 1 
34 1 155 1 227 1 79 2 110 1 228 1 118 1 319 2 
227 1 79 1 319 1 
321 1 121 1 236 1 61 1 160 1 128 1 378 1 174 1 205 1 26 1 79 1 328 1 118 1 319 1 
34 1 
34 1 155 1 227 1 79 2 287 1 110 1 118 1 319 2 
300 1 214 1 34 1 254 1 227 2 275 2 109 2 110 1 258 1 241 1 133 1 337 1 155 1 79 5 191 1 329 2 107 1 118 2 319 5 
174 3 321 3 236 3 121 3 363 1 328 1 96 1 378 3 
174 1 205 1 321 1 236 1 121 1 160 1 378 1 
174 1 205 1 321 1 236 1 121 1 94 1 328 1 200 1 378 1 
321 3 121 3 171 1 272 1 123 1 200 1 351 1 230 1 174 4 205 1 135 1 175 1 305 1 11 1 328 2 281 1 373 1 283 1 69 1 47 2 236 3 334 1 185 1 378 4 111 1 74 1 360 1 92 1 317 1 26 1 218 1 318 1 340 1 363 1 27 1 116 1 79 1 96 1 166 1 192 1 98 1 168 1 319 1 320 1 
299 1 174 2 321 2 77 1 236 1 121 1 363 1 96 1 378 2 
331 1 321 3 171 1 121 3 236 3 34 1 334 1 200 1 378 3 174 3 205 1 317 1 363 2 27 1 79 1 328 1 283 1 98 1 319 1 
321 2 121 2 236 2 200 1 378 2 174 2 216 1 363 1 328 1 99 1 
272 1 123 1 378 1 111 1 185 1 360 1 351 1 230 1 174 1 218 1 175 1 96 1 166 1 192 1 281 1 
272 1 123 1 378 1 111 1 185 1 230 1 174 1 218 1 175 1 96 1 166 1 14 1 192 1 281 1 330 1 
198 2 101 1 347 2 3 1 135 1 305 1 11 1 43 1 158 1 373 1 17 1 47 2 285 1 74 1 163 1 216 2 340 4 264 1 116 1 95 1 99 2 59 1 194 1 320 2 
174 1 205 1 321 1 236 1 121 1 27 1 307 1 378 1 
96 1 372 1 
321 2 121 1 236 1 200 1 378 2 174 2 94 1 328 1 96 2 
216 1 198 1 99 1 
272 1 123 1 378 1 111 1 185 1 360 1 351 1 230 1 174 1 218 1 175 1 379 1 96 1 166 1 281 1 192 1 
321 1 121 1 236 1 272 1 123 1 185 1 378 2 111 1 360 1 351 1 230 1 174 2 175 1 218 1 363 1 166 1 281 1 192 1 99 1 283 1 
299 1 321 5 121 4 236 4 349 1 200 1 378 5 174 5 261 1 77 1 363 2 328 1 96 1 283 1 
174 2 205 1 321 2 236 2 121 2 307 1 160 1 378 2 
139 1 243 1 209 1 
139 1 243 1 83 1 
139 1 243 1 83 1 
139 1 243 1 83 1 
139 1 243 1 
139 1 243 1 
58 1 210 1 
58 1 210 1 
58 1 210 1 
139 1 243 1 209 1 
139 1 243 1 209 1 
139 1 243 1 112 1 
139 2 243 2 58 1 97 1 68 1 210 1 
139 2 34 1 91 1 132 2 260 2 9 1 316 2 57 2 87 1 243 2 115 1 295 1 79 2 44 1 371 1 97 1 67 2 319 2 82 3 
321 2 121 2 301 1 132 1 174 2 12 1 67 1 139 1 236 2 284 1 89 1 377 1 215 1 378 2 112 1 316 1 57 1 243 1 115 1 79 1 96 1 266 1 82 1 319 1 
202 1 40 1 279 1 
202 1 40 1 176 1 
202 3 176 1 172 1 20 1 294 1 279 2 
202 2 176 1 172 1 20 1 183 1 279 1 
202 2 176 1 172 2 20 1 279 1 
301 1 122 1 101 1 34 2 227 1 275 1 348 1 323 3 325 1 229 2 133 2 155 1 177 1 208 1 329 1 310 1 254 1 376 2 312 1 285 1 89 1 109 1 110 1 114 2 289 1 337 3 163 1 341 1 79 5 95 1 118 4 266 1 319 5 
101 3 348 1 155 1 208 2 213 5 19 1 310 2 254 1 312 3 109 2 110 1 358 1 114 6 315 1 163 3 362 1 79 9 118 7 266 4 319 9 34 5 227 6 275 2 323 9 133 6 229 6 370 1 42 1 177 3 329 2 285 3 337 8 339 5 341 3 191 1 95 3 148 1 
34 3 101 1 275 1 323 4 325 1 133 2 229 2 155 1 177 1 208 1 329 1 310 1 376 1 312 2 285 1 109 1 358 1 289 1 114 2 337 3 163 1 341 1 79 3 191 1 95 1 118 2 266 1 319 3 
34 4 101 2 275 1 323 7 325 1 229 4 133 4 155 1 42 1 177 2 208 1 329 1 19 1 310 1 376 2 312 3 285 2 109 1 358 1 114 4 289 1 337 5 163 2 341 2 79 4 191 1 95 2 118 3 266 2 148 1 319 4 
175 1 281 1 
175 1 218 1 262 1 207 1 281 3 290 2 
281 1 372 1 290 1 
184 1 281 1 
129 1 
175 1 218 1 281 1 
352 1 281 1 
195 1 347 4 49 1 225 1 285 1 199 1 104 1 276 2 163 1 188 1 41 1 340 7 145 1 158 3 80 1 59 2 320 3 
195 1 347 4 49 1 225 1 285 1 199 1 104 1 276 2 163 1 188 1 41 1 340 7 145 1 158 3 80 1 59 2 320 3 
159 1 195 1 347 4 49 1 225 1 285 1 199 1 104 1 276 2 163 1 188 1 41 1 340 7 145 1 158 3 80 1 59 2 320 3 
195 5 223 1 101 3 347 16 225 1 1 1 199 2 6 1 104 2 276 3 135 1 305 1 41 2 158 10 47 2 49 2 285 4 141 1 162 3 74 1 163 4 188 1 145 1 340 31 116 1 341 3 80 1 95 3 381 4 117 1 59 5 193 1 169 1 320 15 
195 1 47 4 347 5 49 1 285 1 199 1 104 1 257 1 74 2 276 2 163 1 135 2 188 1 305 2 41 1 145 1 340 9 116 2 80 1 158 4 343 1 193 1 59 3 320 4 
149 1 245 1 224 1 123 1 272 1 125 1 230 1 202 2 40 1 176 1 279 1 309 1 332 1 356 1 255 1 90 2 161 1 239 1 288 1 52 1 23 1 217 1 294 1 81 1 342 1 166 1 192 1 268 1 100 2 269 1 
149 1 245 1 123 1 272 1 224 2 125 1 324 1 230 1 202 2 40 1 249 1 176 1 279 1 332 1 356 1 255 1 286 1 90 3 239 1 52 1 23 1 217 1 294 1 81 1 342 1 166 1 192 1 268 1 100 3 269 1 
149 1 245 1 123 1 272 1 224 2 125 1 230 1 202 2 40 1 249 1 176 1 279 1 356 1 255 1 286 1 90 2 239 1 52 1 294 1 81 1 342 1 166 1 192 1 268 1 100 2 
123 1 272 1 273 1 124 1 324 1 230 1 175 1 232 1 45 1 281 1 46 1 356 2 140 1 90 1 111 1 52 2 23 1 217 1 81 2 166 1 192 1 100 1 268 2 
332 1 272 1 123 1 356 1 125 1 255 1 161 1 90 1 286 1 288 1 52 1 202 2 230 1 23 1 40 1 217 1 176 1 294 1 279 1 342 1 81 1 166 1 192 1 269 1 100 1 268 1 
267 1 
197 2 302 1 350 2 7 1 205 1 155 1 156 1 310 1 254 1 312 2 109 1 110 3 111 2 359 1 317 1 77 1 27 1 165 1 79 5 166 2 265 2 319 5 270 1 170 2 32 1 321 1 171 1 34 2 272 2 123 2 124 1 227 6 275 1 173 1 323 2 326 2 39 1 133 2 230 1 174 1 175 1 136 1 178 2 278 1 329 1 281 1 46 1 334 1 50 1 378 1 53 2 336 4 337 2 192 1 298 1 
321 1 171 1 227 2 334 1 287 1 350 1 110 1 7 1 378 1 359 1 336 2 174 1 205 1 317 1 136 1 77 1 27 1 165 1 278 1 79 3 298 1 319 3 
321 1 171 1 34 1 227 1 7 1 174 1 205 1 136 1 155 1 278 1 178 1 334 1 287 1 110 1 378 1 359 1 336 3 317 1 77 1 27 1 165 1 79 3 298 1 319 3 
321 1 171 1 34 1 227 2 350 1 7 1 174 1 205 1 136 1 155 1 278 1 178 1 334 1 287 1 110 1 378 1 359 1 53 1 336 3 317 1 77 1 27 1 165 1 79 3 298 1 319 3 
197 2 302 1 350 4 7 1 205 1 155 5 157 1 212 1 254 1 312 2 109 1 110 3 359 1 317 1 77 1 27 1 165 1 79 5 265 2 319 5 170 2 321 1 171 1 34 5 35 1 227 7 275 1 39 1 326 2 367 1 133 1 174 1 136 1 278 1 178 4 329 1 334 1 287 1 378 1 53 4 336 6 337 1 292 1 298 1 
197 2 302 1 350 2 7 1 205 1 155 1 254 1 312 2 109 1 110 2 359 1 317 1 77 1 27 1 165 1 79 4 265 2 319 4 170 2 321 1 171 1 34 2 227 4 275 1 323 2 39 1 326 2 133 1 174 1 136 1 278 1 178 2 329 1 334 1 50 1 378 1 53 2 336 4 337 1 298 1 
170 2 321 1 197 2 171 1 34 1 302 1 35 1 227 4 275 1 350 2 326 2 39 1 7 1 133 1 174 1 205 1 136 1 155 1 178 2 278 1 329 1 212 1 254 1 312 2 334 1 109 1 110 2 378 1 53 2 359 1 336 4 337 1 317 1 292 1 77 1 27 1 165 1 79 4 265 2 298 1 319 4 
170 2 321 1 197 2 171 1 34 1 302 1 35 1 227 4 275 1 350 2 326 2 39 1 7 1 133 1 174 1 205 1 136 1 155 1 178 2 278 1 329 1 212 1 254 1 312 2 334 1 109 1 110 2 378 1 53 2 359 1 336 4 337 1 317 1 292 1 77 1 27 1 165 1 79 4 265 2 298 1 319 4 
170 2 244 1 321 1 171 1 34 1 227 4 86 1 275 1 350 2 323 2 326 2 39 1 7 1 133 1 174 1 205 1 136 1 155 1 178 2 278 1 329 1 254 1 72 2 334 1 109 1 110 2 378 1 53 2 359 1 336 4 337 1 24 1 317 1 56 2 292 1 77 1 27 1 165 1 79 4 298 1 319 4 
170 2 321 1 197 2 171 1 34 1 302 1 35 1 227 5 275 1 350 3 326 2 39 1 7 1 133 1 174 1 205 1 136 1 155 1 157 1 278 1 178 3 329 1 212 1 254 1 312 2 334 1 109 1 110 2 378 1 359 1 53 3 336 5 337 1 317 1 292 1 77 1 27 1 165 1 79 4 265 2 298 1 319 4 
170 2 321 1 197 2 171 1 34 1 302 1 35 1 227 5 275 1 350 3 326 2 39 1 7 1 133 1 174 1 205 1 136 1 155 1 157 1 278 1 178 3 329 1 212 1 254 1 312 2 334 1 109 1 110 2 378 1 359 1 53 3 336 5 337 1 317 1 292 1 77 1 27 1 165 1 79 4 265 2 298 1 319 4 
350 2 7 1 205 1 155 1 254 1 72 2 109 1 110 2 359 1 317 1 77 1 27 1 165 1 79 4 319 4 170 2 321 1 171 1 34 1 227 4 86 1 275 1 323 2 39 1 326 2 133 1 174 1 136 1 278 1 178 2 329 1 334 1 50 1 378 1 53 2 336 4 337 1 56 2 298 1 
195 1 47 2 198 1 101 1 347 2 3 1 285 1 74 1 216 1 135 1 305 1 340 2 11 1 116 1 158 1 99 1 373 1 194 1 
47 2 198 1 74 1 216 1 163 1 135 1 305 1 340 2 11 1 116 1 43 1 158 1 95 1 59 1 99 1 373 1 194 1 320 2 
195 1 198 2 101 1 347 2 135 1 305 1 11 1 158 2 373 1 47 2 285 1 74 1 216 2 163 1 340 4 341 1 116 1 95 1 99 2 59 1 194 1 320 2 
195 1 47 2 198 1 101 1 347 2 3 1 285 1 74 1 216 1 135 1 305 1 340 2 11 1 116 1 190 1 158 1 99 1 373 1 
47 2 198 1 74 1 216 1 163 1 135 1 305 1 340 2 11 1 116 1 43 1 190 1 158 1 95 1 59 1 99 1 373 1 320 2 
195 1 198 2 101 1 347 2 135 1 305 1 11 1 158 2 373 1 47 2 285 1 74 1 216 2 163 1 340 4 341 1 116 1 190 1 95 1 99 2 59 1 320 2 
195 1 198 2 101 1 347 2 135 1 305 1 11 1 158 2 373 1 47 2 285 1 74 1 216 2 163 1 340 4 341 1 116 1 95 1 99 2 59 1 320 2 
123 1 272 1 347 1 351 1 230 1 174 1 175 1 135 1 305 1 11 1 281 1 373 1 47 2 185 1 111 1 378 1 360 1 74 1 92 1 218 1 340 2 116 1 96 1 166 1 192 1 146 1 168 1 320 1 
123 1 272 1 347 1 230 1 174 1 175 1 135 1 305 1 11 1 14 1 281 1 373 1 330 1 47 2 333 1 185 1 111 1 378 1 74 1 92 1 218 1 340 2 116 1 96 1 166 1 192 1 146 1 320 1 
195 1 198 2 101 1 347 2 135 1 305 1 327 1 11 1 158 2 373 1 47 2 285 1 74 1 216 2 163 1 340 4 341 1 116 1 95 1 99 2 59 1 320 2 
195 1 0 1 198 2 101 1 123 1 272 1 347 2 351 1 230 1 174 1 175 1 135 1 305 1 11 1 158 2 309 1 281 1 373 1 47 2 285 1 185 1 378 1 360 1 74 1 163 1 216 2 218 1 340 4 116 1 341 1 95 1 166 1 192 1 59 1 99 2 168 1 320 2 
195 1 321 1 121 1 198 1 101 1 347 2 200 1 174 1 135 1 305 1 327 1 11 1 158 1 328 1 373 1 47 2 236 1 285 1 378 1 74 1 163 1 216 1 340 3 116 1 341 1 95 1 222 1 99 1 320 1 
198 1 347 3 104 1 276 1 135 1 305 1 41 1 11 1 158 2 372 1 373 1 47 2 285 1 74 1 216 1 163 1 188 1 145 1 340 6 116 1 80 1 96 2 99 1 59 2 194 1 320 3 
195 1 198 11 101 2 347 8 366 1 135 2 305 2 327 1 11 1 158 2 373 2 47 4 285 2 162 3 74 2 92 1 216 4 163 1 242 1 340 14 116 2 341 2 296 1 95 1 117 1 96 1 381 3 380 1 146 1 59 1 99 11 320 6 169 1 
321 1 120 1 121 1 123 1 272 1 347 1 2 1 351 1 230 1 174 2 175 1 135 1 327 1 305 1 11 1 281 1 282 1 373 1 283 1 47 2 236 1 185 1 111 1 378 2 360 1 74 1 92 1 216 1 218 1 379 1 363 1 340 2 116 1 96 1 166 1 192 1 146 1 320 1 
195 4 0 2 198 7 101 2 347 10 104 1 8 1 351 2 305 3 11 3 158 8 73 1 111 1 74 3 360 2 163 3 216 7 218 2 363 1 364 2 116 3 365 2 80 1 166 3 168 2 320 10 85 2 321 1 121 1 123 3 272 3 230 2 276 1 174 3 135 3 175 2 327 1 41 1 281 2 283 1 373 3 47 6 236 1 285 3 286 1 378 3 185 2 92 1 54 1 188 1 145 1 340 20 341 2 95 2 96 2 192 2 146 1 59 4 99 7 
344 1 119 1 321 1 121 1 123 8 272 7 347 1 102 2 124 1 230 2 174 1 135 2 175 2 306 1 305 2 11 2 309 1 281 3 373 2 46 1 47 4 236 1 357 1 286 1 378 1 111 2 259 1 74 2 92 1 263 1 363 1 340 2 116 2 190 1 166 8 192 2 146 1 194 1 320 1 
321 1 198 1 121 1 101 1 347 1 200 1 174 1 135 1 305 1 327 1 11 1 158 1 328 1 373 1 47 2 236 1 285 1 378 1 74 1 216 1 163 1 340 3 116 1 341 1 95 1 59 1 99 1 147 1 320 2 
195 3 101 3 246 1 347 9 226 1 135 2 305 2 251 1 158 6 234 1 47 4 21 1 285 3 335 1 162 1 74 2 186 2 163 3 93 2 340 19 116 2 221 1 341 3 95 3 381 2 117 1 343 1 59 3 320 10 169 1 
47 2 347 3 226 1 21 2 162 1 74 1 186 2 135 1 305 1 340 6 221 1 116 1 251 2 280 1 381 1 117 1 343 1 320 3 
195 2 101 2 246 1 347 9 226 1 135 2 305 2 251 2 158 3 280 1 47 4 21 1 285 2 335 1 162 2 74 2 186 3 163 2 93 1 340 19 189 1 116 2 221 1 341 2 95 2 381 3 117 2 343 1 59 1 320 10 169 1 
195 2 101 2 246 1 347 9 226 1 135 2 305 2 251 2 158 4 280 1 47 4 21 1 285 2 335 1 162 2 74 2 186 3 163 2 93 1 340 19 189 1 116 2 221 1 341 2 95 2 381 3 117 2 343 1 59 2 320 10 169 1 
195 2 101 2 347 11 226 1 104 1 276 1 135 1 305 1 41 1 251 1 158 5 280 1 47 2 21 1 285 3 162 2 74 1 186 2 163 3 188 1 242 1 145 1 340 21 116 1 221 1 341 2 80 1 95 2 381 2 117 1 343 1 59 3 320 10 169 1 
139 1 34 1 91 1 132 1 260 1 9 1 316 1 57 1 87 1 115 1 243 1 79 1 44 1 371 1 97 1 67 1 319 1 82 2 
139 1 34 1 91 1 132 1 260 1 9 1 316 1 57 1 87 1 115 1 243 1 79 1 44 1 371 1 97 1 67 1 319 1 82 2 
139 1 34 1 91 1 132 1 260 1 9 1 316 1 57 1 87 1 115 1 243 1 79 1 44 1 371 1 97 1 67 1 319 1 82 2 
209 1 65 1 68 1 
209 1 65 1 68 1 
29 1 83 1 
29 1 68 1 83 1 
284 1 215 1 
321 2 121 2 301 1 132 1 174 2 12 1 67 1 16 1 139 1 236 2 284 1 89 1 377 1 215 1 378 2 91 1 112 1 260 1 316 1 57 1 243 1 79 1 96 1 118 1 266 1 319 1 82 1 
9 1 139 1 316 1 57 1 243 1 44 1 106 1 97 1 67 1 132 1 
12 1 112 1 
139 1 316 1 57 1 243 1 4 1 67 1 130 1 113 1 132 1 
209 1 65 1 
29 1 68 1 83 1 
321 2 123 2 272 2 347 1 102 2 201 1 368 1 230 1 174 2 175 1 135 1 327 1 250 1 305 1 11 1 281 1 373 1 47 2 378 2 259 1 74 1 92 1 314 1 25 1 263 1 340 2 116 1 166 2 192 1 146 1 320 1 
332 1 272 2 123 2 303 1 125 1 255 1 286 1 202 2 230 1 40 1 153 1 176 1 294 1 279 1 309 1 166 2 192 1 167 1 268 1 
332 1 272 1 123 1 125 1 255 1 286 1 202 2 203 1 230 1 40 1 153 1 176 1 294 1 279 1 166 1 192 1 268 1 
272 1 123 1 124 1 111 1 230 1 313 1 175 1 232 1 166 1 192 1 281 1 167 1 268 1 46 1 
332 1 272 1 123 1 303 1 125 1 255 1 286 1 202 2 230 1 40 1 153 1 176 1 294 1 279 1 166 1 167 1 192 1 268 1 
131 1 
337 1 34 1 155 1 107 1 372 1 241 1 133 1 
197 1 34 2 302 1 227 1 275 1 323 1 133 1 155 1 329 1 254 1 312 1 109 1 110 1 337 1 79 1 265 1 319 1 
346 2 101 2 103 2 155 1 108 1 310 2 254 3 312 6 109 3 110 3 111 1 358 2 114 6 163 2 218 1 262 1 220 2 79 5 166 1 319 5 30 1 85 2 271 2 32 1 171 2 272 1 123 1 34 7 274 2 227 5 275 3 323 12 38 1 229 6 133 7 230 2 175 1 177 2 329 3 281 6 184 3 285 2 290 2 337 8 341 2 95 2 192 1 
32 1 34 5 101 2 227 1 322 1 275 2 323 6 229 5 133 5 204 1 277 1 231 1 155 2 177 2 329 2 233 1 310 1 182 1 254 2 312 3 285 2 109 2 110 1 162 1 358 1 114 5 337 8 338 1 163 2 341 2 79 1 95 2 381 1 117 1 319 1 
321 1 121 1 35 1 61 1 275 1 128 1 104 1 133 2 174 1 205 1 41 1 137 1 177 2 329 1 328 1 236 1 254 1 160 1 285 2 109 1 378 1 358 1 337 2 163 1 26 1 188 1 79 1 319 1 
34 1 254 1 275 1 109 1 241 1 133 1 337 1 155 1 329 1 107 1 
101 1 34 2 285 1 312 2 323 4 358 1 133 2 229 2 114 2 337 2 163 1 177 1 341 1 95 1 
34 1 155 1 227 1 79 1 110 1 319 1 
270 1 32 2 123 4 272 4 124 1 227 4 275 2 133 2 230 1 175 1 156 1 252 2 329 2 13 1 281 1 46 1 88 1 310 2 254 1 109 2 110 2 111 2 143 1 337 2 191 1 79 3 166 4 192 1 319 3 
321 2 121 2 123 1 272 1 351 1 230 1 174 3 175 1 135 1 305 1 11 1 328 2 281 1 373 1 69 1 47 2 236 2 111 1 378 3 185 1 74 1 360 1 92 1 26 1 218 1 340 1 116 1 96 1 166 1 192 1 168 1 320 1 
32 1 310 1 34 4 254 1 312 2 275 1 323 4 109 1 229 2 114 2 133 2 337 1 276 1 155 2 329 1 
316 1 18 1 57 1 
316 1 57 1 247 1 
316 1 57 1 247 1 
316 1 57 1 247 1 
316 1 57 1 
139 1 243 1 
316 1 18 1 57 1 
316 1 18 1 57 1 
9 1 33 1 316 1 57 1 215 1 
195 1 47 4 347 4 285 1 104 1 74 2 276 1 163 1 135 2 188 1 305 2 340 8 145 1 41 1 116 2 158 3 80 1 59 2 193 1 320 4 
276 1 163 1 188 1 340 6 347 3 41 1 145 1 285 1 158 2 80 1 372 1 59 2 104 1 320 3 
195 1 47 2 101 1 347 2 285 1 74 1 75 1 163 1 135 1 305 1 340 4 116 1 341 1 95 1 158 2 59 1 320 2 
195 1 101 1 347 3 285 1 162 1 163 1 340 7 341 1 95 1 158 2 117 1 381 2 59 1 320 4 169 1 
195 4 101 2 150 1 347 11 104 2 276 1 135 2 305 2 41 2 158 9 47 4 285 3 162 2 74 2 163 3 188 1 242 1 145 1 340 23 341 2 116 2 80 1 95 2 381 2 380 1 59 5 193 2 169 1 320 12 
340 1 381 1 320 1 
340 1 347 1 162 1 
195 1 47 2 101 1 347 3 285 1 74 1 75 1 163 1 135 1 305 1 340 6 116 1 341 1 158 3 95 1 59 2 85 1 320 3 
195 1 101 2 347 6 204 1 135 1 277 1 305 1 158 2 233 1 47 2 182 1 285 2 162 1 74 1 338 1 163 2 340 12 116 1 341 2 95 2 381 1 117 1 343 1 59 1 320 6 
195 1 347 3 285 1 104 1 163 1 188 1 340 6 41 1 158 2 59 1 320 3 
195 1 47 2 150 1 347 1 104 1 74 1 135 1 305 1 41 1 340 3 145 1 116 1 158 2 80 1 59 1 193 1 320 2 
195 2 47 2 347 5 285 2 104 2 74 1 163 2 135 1 188 1 305 1 137 1 41 2 340 10 116 1 158 5 343 1 59 3 320 5 
195 1 47 2 101 1 347 2 285 1 74 1 135 1 305 1 340 2 116 1 158 1 343 1 
195 1 47 2 101 1 347 2 285 1 74 1 163 1 135 1 305 1 340 4 116 1 341 1 95 1 158 2 343 1 59 1 320 2 
195 1 47 6 150 1 246 1 347 1 104 1 74 3 135 3 305 3 340 3 41 1 116 3 158 2 343 1 193 1 59 1 320 2 
223 1 195 5 150 1 101 3 246 1 347 16 1 1 104 3 276 1 135 5 305 5 41 3 158 12 47 10 285 5 141 1 162 3 74 5 75 1 163 5 188 2 145 1 340 34 116 5 341 3 80 1 95 3 381 4 117 1 343 1 193 2 59 7 320 18 169 1 
47 2 347 4 285 1 104 1 162 1 74 1 338 1 276 1 163 1 135 1 188 1 305 1 41 1 145 1 340 8 116 1 158 2 80 1 343 1 117 1 381 1 59 2 320 4 
195 1 101 1 347 6 104 1 276 1 135 2 305 2 41 1 158 3 47 4 285 2 162 1 74 2 338 1 75 1 163 1 188 1 145 1 340 11 116 2 341 1 80 1 381 2 117 1 343 1 59 2 320 5 169 1 
195 1 101 2 347 9 104 1 276 1 204 1 135 3 277 1 305 3 41 1 158 4 233 1 47 6 182 1 285 3 162 1 74 3 338 1 75 1 163 3 188 1 145 1 340 19 116 3 341 2 80 1 95 2 381 1 117 1 343 1 59 3 193 1 320 10 
195 2 101 2 347 10 104 1 276 1 204 1 135 3 277 1 305 3 41 1 158 5 233 1 47 6 182 1 285 3 162 1 74 3 338 1 75 1 163 2 188 1 145 1 340 17 116 3 341 2 80 1 95 1 381 1 117 1 343 1 193 1 59 3 320 7 
47 2 347 4 285 1 104 1 162 1 74 1 338 1 276 1 163 1 135 1 188 1 305 1 41 1 145 1 340 8 116 1 158 2 80 1 343 1 117 1 381 1 59 2 320 4 
195 1 101 2 347 6 204 1 135 1 277 1 305 1 158 2 233 1 47 2 182 1 285 2 162 1 74 1 338 1 163 2 340 12 116 1 341 2 95 2 381 1 117 1 343 1 59 1 320 6 
195 2 101 2 347 10 104 1 276 1 204 1 135 4 277 1 305 4 41 1 158 5 233 1 47 8 182 1 285 3 162 1 74 4 338 1 75 1 163 2 188 1 145 1 340 18 116 4 341 2 80 1 95 1 381 1 117 1 343 1 59 3 193 2 320 8 
195 3 101 3 246 1 347 9 204 1 135 4 277 1 305 4 158 6 233 1 47 8 182 1 285 3 162 1 74 4 338 1 163 2 340 16 116 4 341 3 95 2 381 1 117 1 343 1 59 3 193 2 320 7 
195 3 347 3 285 1 104 3 163 1 188 1 340 7 145 1 41 3 80 2 158 6 59 3 320 4 
195 1 101 2 246 1 347 10 104 1 276 1 204 1 135 4 277 1 305 4 41 1 158 4 233 1 47 8 182 1 285 3 162 1 74 4 338 1 163 2 188 1 145 1 340 18 116 4 341 2 80 1 95 1 381 1 117 1 343 1 59 3 193 2 320 8 
299 1 174 1 10 1 321 1 77 1 96 1 378 1 
299 1 174 1 10 1 321 1 180 1 77 1 28 1 96 1 378 1 60 1 353 1 62 1 
230 1 175 1 123 1 272 1 124 1 166 1 192 1 281 1 372 1 111 1 46 1 
321 1 121 1 236 1 272 1 123 1 185 1 378 2 111 1 351 1 230 1 174 2 175 1 218 1 363 1 96 1 166 1 281 1 192 1 
321 2 121 1 123 1 272 1 351 1 230 1 174 2 205 1 175 2 352 1 252 1 281 3 236 2 334 1 378 2 185 1 142 1 218 2 363 1 27 1 96 1 166 1 192 1 
321 2 121 1 123 2 272 2 126 1 230 1 174 2 205 1 175 2 352 1 252 1 281 3 330 1 236 2 334 1 378 2 185 1 142 1 218 2 363 1 27 1 96 1 166 2 192 1 
171 1 123 3 272 3 34 1 126 1 227 1 230 1 175 1 352 1 154 1 155 1 252 1 281 4 184 1 142 1 111 1 290 1 218 1 79 2 166 3 192 1 319 2 31 1 
271 1 171 1 34 1 272 3 123 3 126 1 227 1 184 1 111 1 142 1 290 1 230 1 352 1 175 1 218 1 155 1 252 1 79 2 166 3 281 4 192 1 319 2 
230 1 123 1 272 1 357 1 166 1 192 1 
344 1 119 1 272 6 123 7 102 1 357 1 286 1 5 1 111 2 230 3 248 1 262 1 218 1 175 2 263 1 306 1 309 1 166 7 297 1 281 3 192 2 
0 1 198 1 347 3 104 1 351 1 305 2 250 1 11 2 309 1 158 2 360 1 74 2 216 1 163 1 218 1 363 1 365 1 116 2 80 1 166 1 168 1 320 3 321 1 121 1 123 1 272 1 230 1 174 2 276 1 135 2 175 1 327 1 41 1 281 1 373 2 47 4 236 1 285 1 378 2 185 1 188 1 145 1 340 6 96 2 192 1 59 2 99 1 
271 1 346 1 171 1 34 1 272 1 123 1 274 1 227 2 275 2 103 1 133 1 155 1 329 2 13 1 107 1 281 2 254 2 184 1 109 2 110 1 111 1 241 1 290 1 337 1 79 3 166 1 118 1 319 3 
272 2 123 2 357 1 290 1 230 2 262 1 218 1 175 1 309 1 166 2 281 2 192 1 30 1 
230 1 175 1 291 1 123 4 272 4 124 1 126 1 309 1 166 4 192 1 281 1 111 1 46 1 
272 2 123 2 230 2 54 1 304 1 134 1 248 1 218 1 175 1 252 1 166 2 297 1 281 1 192 1 
202 1 230 1 40 1 176 1 123 1 272 1 255 1 166 1 192 1 111 1 
272 2 123 2 286 1 368 1 230 1 175 1 263 1 309 1 166 2 281 1 192 1 
344 1 272 4 123 5 124 1 111 1 230 2 175 2 291 1 263 1 306 1 252 1 309 1 166 5 281 3 192 2 46 1 
344 1 272 4 123 5 124 1 37 1 111 1 230 2 175 2 291 1 263 1 252 1 309 1 166 5 281 3 192 2 46 1 
321 1 121 1 236 1 272 1 123 1 185 1 378 2 111 1 230 1 174 2 175 1 218 1 363 1 96 1 166 1 281 1 192 1 330 1 
272 1 123 1 5 1 230 2 248 1 262 1 218 1 175 1 252 1 166 1 297 1 281 1 192 1 
211 1 179 1 174 1 314 1 321 1 25 1 256 1 378 1 201 1 
211 1 253 1 127 1 
179 1 211 1 96 1 256 1 240 1 
211 1 179 2 171 1 34 1 127 1 334 1 256 2 240 2 205 1 317 1 155 1 144 1 27 1 253 1 79 2 96 1 118 1 98 1 319 2 
149 1 245 1 239 1 372 1 
23 1 149 1 217 1 245 1 90 1 239 1 100 1 
81 1 52 1 100 1 
149 1 374 1 245 1 71 1 161 1 90 3 51 2 239 1 23 1 217 1 293 1 100 3 
23 1 149 1 217 1 245 1 224 1 90 2 239 1 22 1 100 2 
202 1 23 1 40 1 149 1 217 1 238 1 279 1 90 1 161 1 15 1 100 1 
23 1 149 1 217 1 90 1 161 1 239 1 100 1 
23 1 217 1 245 1 90 1 161 1 239 2 100 1 
149 1 196 1 161 1 90 2 152 1 239 1 23 2 369 1 217 2 100 2 
149 2 245 1 224 2 48 1 238 1 161 1 90 3 239 1 23 1 217 1 361 1 78 1 100 3 
149 1 245 1 224 1 161 1 90 2 239 1 202 2 23 1 40 1 217 1 176 1 64 1 294 1 279 1 100 2 
149 2 245 1 224 2 181 1 238 1 161 1 90 4 239 1 22 1 23 2 217 2 78 1 100 4 
23 1 149 1 217 1 245 1 90 1 161 1 239 1 100 1 
149 3 374 1 245 2 224 2 71 1 238 1 90 4 51 1 239 2 23 1 206 1 217 1 78 1 100 4 
23 1 149 1 217 1 245 1 224 1 308 1 90 2 161 1 66 1 239 1 354 1 100 2 
23 1 149 1 374 1 217 1 245 1 71 2 311 1 90 3 161 1 239 1 51 2 100 3 
149 2 237 2 36 1 138 1 
23 1 217 1 90 1 161 1 84 1 100 1 
23 1 149 1 361 1 217 1 245 1 224 1 90 2 161 1 239 1 100 2 
235 1 
23 1 149 1 217 1 245 1 90 1 161 1 239 1 100 1 
149 1 224 1 245 1 161 1 90 3 51 1 239 1 23 1 217 1 361 1 100 3 
149 1 206 1 238 1 78 1 
149 1 239 1 

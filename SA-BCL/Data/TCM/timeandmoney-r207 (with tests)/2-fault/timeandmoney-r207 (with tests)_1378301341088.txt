#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 346 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 173 279 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
208 7 294 9 365 5 295 1 312 1 193 3 174 1 314 1 261 2 146 1 264 1 126 4 150 2 350 9 282 1 66 1 320 1 284 1 198 1 200 2 256 1 335 1 47 1 273 1 
208 7 294 9 365 5 295 1 312 1 193 3 174 1 314 1 261 2 146 1 264 1 126 4 150 2 350 9 282 1 66 1 320 1 284 1 198 1 200 2 256 1 335 1 47 1 273 1 
294 9 295 2 365 5 208 6 312 1 193 3 236 1 174 1 261 2 146 1 264 1 319 1 126 4 150 2 350 9 282 2 320 2 66 1 284 1 375 1 39 1 198 1 328 1 200 2 256 1 335 2 47 1 112 1 
294 9 295 2 365 5 208 6 312 1 193 3 236 1 174 1 261 2 146 1 264 1 319 1 126 4 150 2 350 9 282 2 320 2 66 1 284 1 375 1 39 1 198 1 328 1 200 2 256 1 335 2 47 1 112 1 
294 10 295 2 365 6 208 7 312 1 193 4 236 1 174 1 261 2 146 1 264 1 319 1 126 5 150 2 350 10 282 2 320 2 66 1 284 1 375 1 39 1 198 1 328 1 200 2 256 1 335 2 47 1 112 1 
294 7 295 2 365 4 208 4 193 2 236 1 174 1 261 2 146 1 264 1 319 1 126 3 150 2 350 7 282 2 320 2 66 1 284 1 375 1 39 1 198 1 328 1 200 1 256 1 335 2 47 1 112 1 
295 1 294 4 208 3 365 3 312 1 193 1 174 1 261 1 146 1 198 1 200 2 126 2 150 1 282 1 350 4 320 1 47 1 284 1 
365 1 294 2 295 1 174 1 261 1 119 1 146 1 39 1 328 1 333 1 107 1 150 1 350 2 335 1 282 1 284 1 
294 3 365 2 208 1 193 1 174 1 261 2 146 1 264 1 126 1 150 2 350 3 335 1 284 1 
240 1 374 1 136 1 
240 1 96 2 296 1 
360 2 313 2 367 2 352 2 141 1 229 2 156 2 364 1 
115 1 209 1 24 1 89 1 313 2 367 2 341 1 25 2 57 1 120 1 369 1 345 1 61 1 242 1 352 3 153 1 322 1 373 1 6 1 73 1 131 1 33 1 221 1 37 2 156 2 325 1 38 1 269 2 288 2 360 2 44 1 141 1 309 1 229 3 48 2 232 1 364 1 
87 1 360 1 246 1 313 1 367 1 352 1 141 1 97 1 229 1 156 1 
275 1 374 1 171 1 117 1 212 1 156 1 358 1 254 1 240 1 159 1 46 1 352 1 229 1 97 1 
275 1 374 1 171 1 367 1 313 1 212 1 156 1 358 2 240 1 360 1 159 2 46 1 352 1 229 1 97 1 
60 1 159 1 67 1 358 1 144 1 
240 1 60 1 219 1 374 1 159 2 336 1 358 2 144 1 
60 1 159 1 358 1 
87 1 246 1 367 1 313 1 358 1 156 1 144 1 360 1 159 1 141 1 352 1 97 1 229 1 258 1 
240 1 
240 1 60 1 219 1 374 1 159 2 163 1 358 2 144 1 
219 1 374 1 135 2 211 1 358 5 144 2 26 1 137 1 59 1 3 1 305 1 240 1 361 1 60 2 159 5 371 1 18 1 70 2 283 2 
136 1 364 1 
367 1 313 1 156 2 326 1 360 1 45 1 352 2 229 2 364 2 
197 1 332 1 191 1 
131 1 24 1 89 1 25 1 120 1 345 1 269 1 61 1 242 1 17 1 352 1 229 1 48 1 6 1 232 1 364 1 
131 1 191 1 24 1 89 1 194 1 313 1 25 1 156 1 120 1 345 1 269 1 360 1 61 1 242 1 16 1 352 2 229 2 6 1 48 1 232 1 
360 4 291 1 16 1 367 1 313 4 194 2 45 1 152 1 352 5 229 5 156 5 254 1 364 1 274 1 
360 2 53 1 246 1 313 2 352 2 97 1 229 2 156 2 
360 3 367 1 194 1 313 3 352 3 229 3 156 3 364 1 
360 1 246 1 313 1 352 1 97 1 229 1 156 1 
360 1 313 1 367 1 45 1 352 1 97 1 229 1 156 1 326 1 
275 1 171 1 24 1 89 1 367 2 313 3 194 1 341 1 212 1 25 1 57 1 120 1 369 1 345 1 61 1 242 1 352 4 97 1 373 1 6 1 353 1 73 1 131 1 33 1 221 1 37 2 156 3 358 1 38 1 269 1 288 1 360 3 159 1 44 1 16 1 46 1 45 1 141 1 309 1 229 4 48 1 232 1 364 1 169 1 
360 1 313 1 194 1 352 2 229 2 156 2 254 1 364 1 274 1 
275 1 171 1 367 1 194 2 313 3 212 1 358 1 156 3 240 1 360 3 159 1 16 1 45 1 46 1 352 3 362 1 97 1 229 3 353 1 
191 1 194 1 367 1 313 2 156 2 360 2 332 1 45 1 352 2 229 2 
131 1 24 1 89 1 25 1 120 1 345 1 269 1 61 1 242 1 352 1 229 1 48 1 6 1 232 1 364 1 
131 1 89 1 172 1 25 1 120 1 345 1 269 1 61 1 242 1 352 1 229 1 68 1 48 1 6 1 364 1 
115 2 260 1 191 2 234 1 57 1 369 1 297 1 262 1 266 1 73 1 197 2 221 1 9 1 37 2 38 2 199 1 331 1 307 1 288 4 332 2 43 1 44 1 309 1 113 1 
275 1 360 1 53 1 313 1 352 1 97 1 229 1 156 1 
243 1 155 1 
243 1 155 1 
252 1 40 1 
252 1 40 1 
252 1 40 1 
245 1 243 1 155 1 
245 1 243 1 155 1 
23 1 243 1 155 1 
287 1 55 1 243 2 252 1 155 2 40 1 
245 1 243 1 155 1 
370 1 243 1 155 1 
370 1 243 1 155 1 
370 1 243 1 155 1 
23 1 277 1 313 2 124 1 94 1 352 2 243 1 218 1 178 1 7 1 101 1 154 1 155 1 358 1 156 2 222 1 181 1 360 2 105 1 159 1 187 1 363 1 229 2 364 1 
302 1 287 1 277 2 155 2 358 2 223 1 240 1 105 2 159 2 94 2 265 1 109 1 187 2 30 1 243 2 363 3 206 1 7 1 167 2 
295 1 282 1 320 1 
295 1 333 1 282 1 
86 1 338 1 295 3 333 1 320 2 359 1 
99 1 338 1 295 2 333 1 320 1 359 1 
338 2 295 2 333 1 320 1 359 1 
259 2 296 1 144 4 27 2 3 2 240 2 60 1 93 2 151 1 266 1 96 3 127 1 283 1 70 1 218 1 178 1 219 1 286 1 374 1 135 1 154 1 9 1 358 5 137 3 199 1 331 1 361 1 159 5 161 1 228 1 165 1 20 1 
296 3 144 7 59 1 27 6 3 6 240 5 60 6 215 1 93 6 63 5 151 1 266 3 96 9 67 5 127 3 218 4 70 2 283 2 72 1 74 1 219 1 374 1 303 1 135 2 9 3 358 9 137 8 199 3 138 1 331 3 361 1 159 9 161 2 228 2 337 1 
259 1 296 2 144 2 59 1 27 2 3 2 240 3 93 2 266 1 96 4 283 1 70 1 218 1 127 1 374 1 286 1 135 1 9 1 358 3 137 3 199 1 331 1 159 3 161 1 228 1 165 1 
259 2 296 3 144 3 59 1 27 4 3 4 240 4 93 4 266 2 96 7 283 1 70 1 218 2 127 2 74 1 374 1 286 1 303 1 135 1 9 2 358 4 137 5 199 2 331 2 159 4 161 1 228 1 165 1 337 1 
131 1 136 1 250 1 
131 1 52 1 
306 1 
131 1 61 1 89 1 
131 1 116 1 
131 1 89 1 
131 3 61 1 89 1 250 2 111 1 280 1 
115 4 35 1 9 1 213 1 38 3 297 3 331 1 288 7 43 2 348 1 196 1 205 1 84 1 129 1 130 1 378 2 355 1 
115 4 35 1 9 1 213 1 38 3 297 3 331 1 288 7 43 2 348 1 196 1 205 1 84 1 129 1 130 1 378 2 355 1 
115 4 339 1 35 1 9 1 213 1 38 3 297 3 331 1 288 7 43 2 348 1 196 1 205 1 129 1 84 1 130 1 378 2 355 1 
115 16 213 1 343 1 57 1 369 1 344 1 297 10 123 1 175 1 348 2 196 5 266 3 71 3 127 3 129 1 355 1 130 2 73 1 35 2 9 4 37 2 249 1 38 15 199 3 331 4 270 1 288 31 202 1 43 5 44 1 186 4 205 2 84 1 378 3 
288 1 115 1 346 1 44 1 102 1 348 1 37 2 57 1 369 1 378 1 130 1 73 1 
207 1 86 1 365 1 208 1 294 2 295 2 174 1 25 1 261 1 146 1 345 1 150 1 349 1 282 1 350 2 320 1 128 1 6 1 244 1 323 1 284 1 269 1 103 1 289 1 333 1 335 1 48 1 164 1 85 1 49 1 
86 1 207 1 365 1 294 3 208 2 295 2 174 1 25 1 261 1 146 1 345 1 150 1 282 1 350 3 320 1 98 1 128 1 6 1 244 1 323 1 269 1 103 1 333 1 160 1 335 1 110 1 48 1 164 1 85 1 49 1 
207 1 86 1 365 1 294 2 208 2 295 2 174 1 25 1 146 1 345 1 350 2 282 1 320 1 98 1 128 1 6 1 323 1 269 1 103 1 333 1 335 1 110 1 48 1 85 1 49 1 
294 1 89 1 25 1 261 1 120 1 345 1 29 1 150 1 350 1 64 1 217 1 69 1 6 1 128 2 131 1 79 1 269 1 103 2 160 1 335 2 48 1 85 2 168 1 
207 1 86 1 294 1 295 2 25 1 261 1 345 1 150 1 349 1 282 1 350 1 320 1 128 1 6 1 244 1 323 1 284 1 269 1 103 1 333 1 335 1 110 1 48 1 164 1 85 1 49 1 
318 1 
275 1 51 3 170 3 171 1 117 1 368 1 212 1 296 2 143 1 2 2 239 2 3 1 240 1 60 5 149 3 352 1 97 1 299 1 321 1 283 1 70 1 219 2 374 1 132 1 356 1 100 2 135 1 36 1 267 2 156 1 77 1 358 4 268 1 137 1 254 1 184 1 361 1 159 4 46 1 229 1 376 1 310 5 
275 1 51 3 170 3 171 1 117 1 368 1 212 1 296 2 143 1 2 2 239 2 3 1 240 1 60 5 149 3 352 1 97 1 321 1 299 1 283 1 70 1 219 2 374 1 132 1 356 1 100 2 135 1 36 1 267 2 156 1 77 1 358 4 268 1 137 1 254 1 184 1 361 1 159 4 46 1 229 1 376 1 310 5 
51 2 170 2 171 1 117 1 212 1 2 2 3 1 60 4 352 1 70 1 8 1 219 2 356 1 132 1 135 1 358 4 77 1 268 1 137 1 82 2 14 1 361 1 229 1 310 4 275 1 235 2 239 2 240 1 149 2 97 1 96 2 321 1 283 1 374 1 36 1 156 1 254 1 159 4 46 1 
51 2 170 2 171 1 117 1 212 1 296 2 2 2 120 2 345 1 3 2 60 6 125 1 64 1 352 1 70 1 6 1 8 1 131 1 219 3 132 1 356 1 135 1 267 2 358 5 77 1 79 1 268 1 137 2 269 2 13 1 361 1 228 1 229 1 310 4 275 1 89 1 25 2 315 1 143 1 239 2 240 2 149 2 96 2 97 1 321 1 283 1 374 1 100 2 36 1 156 1 254 1 201 1 159 5 46 1 48 2 
275 1 170 1 171 1 117 1 212 1 60 2 352 1 97 1 321 1 219 1 132 1 356 1 156 1 77 1 358 3 268 1 254 1 159 3 46 1 163 1 229 1 310 2 
275 1 51 1 171 1 117 1 212 1 240 1 60 1 352 1 97 1 321 1 219 1 132 1 356 1 374 1 156 1 77 1 358 3 268 1 254 1 159 3 46 1 163 1 229 1 310 3 
275 1 51 1 170 1 171 1 117 1 212 1 240 1 60 2 149 1 352 1 97 1 321 1 219 1 132 1 356 1 374 1 156 1 77 1 358 3 268 1 254 1 159 3 46 1 163 1 229 1 310 3 
275 1 51 4 170 4 171 1 117 1 368 1 212 1 296 2 143 1 2 2 239 2 3 1 91 1 240 5 60 7 149 4 352 1 97 1 299 1 321 1 283 1 70 1 219 3 374 5 132 1 356 1 100 2 135 1 36 1 267 2 156 1 77 1 358 5 268 1 137 1 254 1 184 1 361 1 159 5 46 1 163 1 229 1 376 1 310 6 
51 2 170 2 171 1 117 1 212 1 296 2 2 2 3 1 60 4 352 1 70 1 8 1 219 2 356 1 132 1 135 1 267 2 358 4 77 1 268 1 137 1 361 1 229 1 310 4 275 1 143 1 239 2 240 2 149 2 97 1 96 2 321 1 283 1 374 1 100 2 36 1 156 1 254 1 159 4 46 1 
275 1 51 2 170 2 171 1 117 1 212 1 368 1 296 2 143 1 2 2 239 2 3 1 240 1 60 4 149 2 352 1 97 1 321 1 299 1 70 1 283 1 219 2 374 1 132 1 356 1 100 2 135 1 36 1 267 2 156 1 77 1 358 4 268 1 137 1 254 1 184 1 361 1 159 4 46 1 229 1 310 4 
275 1 51 2 170 2 171 1 117 1 212 1 368 1 296 2 143 1 2 2 239 2 3 1 240 1 60 4 149 2 352 1 97 1 321 1 299 1 70 1 283 1 219 2 374 1 132 1 356 1 100 2 135 1 36 1 267 2 156 1 77 1 358 4 268 1 137 1 254 1 184 1 361 1 159 4 46 1 229 1 310 4 
275 1 51 2 170 2 171 1 366 1 235 2 117 1 212 1 2 2 239 2 3 1 240 1 60 4 149 2 352 1 96 2 97 1 321 1 70 1 283 1 219 2 374 1 132 1 356 1 135 1 36 1 156 1 77 1 358 4 268 1 137 1 10 1 254 1 184 1 82 2 14 1 361 1 159 4 46 1 229 1 310 4 
115 3 191 1 57 1 213 1 369 1 297 2 129 1 355 1 73 1 197 1 221 1 136 1 35 1 9 1 37 2 38 3 331 1 307 1 288 6 332 1 43 2 44 1 309 1 205 1 378 1 364 2 
115 8 233 1 190 1 191 11 57 2 369 2 344 1 297 2 175 1 196 1 266 1 71 3 127 2 73 2 33 1 197 11 221 2 9 2 37 4 325 1 38 6 199 2 140 1 331 1 288 14 43 1 106 1 332 4 44 2 186 3 309 1 364 1 379 1 
115 1 210 1 24 1 89 1 313 1 194 1 25 1 57 1 120 1 345 1 369 1 61 1 242 1 351 1 352 2 6 1 73 1 131 1 33 1 221 1 133 1 37 2 156 1 38 1 325 1 269 1 140 1 360 1 288 2 332 1 44 1 16 1 17 1 309 1 229 2 48 1 232 1 364 1 
115 10 118 2 213 1 57 3 120 1 345 2 297 8 61 2 352 3 266 2 6 2 127 2 129 1 355 1 73 3 131 2 180 2 221 3 9 3 269 3 140 1 360 1 15 1 185 1 16 1 229 3 309 3 232 2 364 2 21 1 191 7 24 2 194 1 313 1 89 2 25 3 369 3 242 2 196 4 373 2 33 1 197 7 35 1 37 6 156 1 325 1 38 10 327 2 199 2 331 3 288 20 43 4 332 7 44 3 108 2 110 1 205 1 48 3 378 1 
115 1 313 1 194 1 89 2 25 8 57 2 120 2 345 2 369 2 214 1 64 1 352 1 153 2 6 2 32 1 73 2 131 3 33 1 221 2 304 1 37 4 156 1 325 1 38 1 79 1 12 1 269 7 224 1 289 1 307 1 360 1 288 2 44 2 257 1 110 1 229 1 309 2 48 8 380 1 
115 1 191 1 313 1 367 1 57 1 369 1 297 1 352 1 266 1 127 1 73 1 197 1 221 1 9 1 37 2 156 1 38 2 199 1 140 1 331 1 360 1 288 3 43 1 332 1 44 1 45 1 309 1 229 1 231 1 
260 1 115 2 197 1 191 1 221 1 9 1 37 2 57 1 369 1 297 1 199 1 288 2 307 1 332 1 44 1 196 1 309 1 73 1 
197 1 191 1 221 1 37 2 57 1 38 2 369 1 297 1 331 1 288 2 307 1 43 1 332 1 44 1 309 1 266 1 73 1 113 1 
115 2 191 2 57 1 369 1 297 2 196 1 266 1 127 1 73 1 197 2 221 1 9 1 37 2 38 2 199 1 331 1 307 1 288 4 332 2 43 1 44 1 309 1 
260 1 115 2 197 1 191 1 221 1 9 1 37 2 57 1 369 1 297 1 199 1 288 2 332 1 44 1 257 1 196 1 309 1 73 1 
197 1 191 1 221 1 37 2 57 1 38 2 369 1 297 1 331 1 288 2 43 1 332 1 44 1 257 1 309 1 266 1 73 1 113 1 
115 2 191 2 57 1 369 1 297 2 196 1 266 1 127 1 73 1 197 2 221 1 9 1 37 2 38 2 199 1 331 1 288 4 332 2 43 1 44 1 257 1 309 1 
115 2 197 2 191 2 221 1 9 1 37 2 57 1 38 2 369 1 297 2 199 1 331 1 288 4 43 1 332 2 44 1 266 1 196 1 309 1 127 1 73 1 
115 1 24 1 89 1 25 1 57 1 120 1 345 1 369 1 61 1 242 1 352 1 373 1 6 1 73 1 131 1 33 1 221 1 37 2 325 1 38 1 269 1 288 2 44 1 229 1 309 1 48 1 232 1 364 1 
115 1 89 1 172 1 25 1 57 1 120 1 345 1 369 1 147 1 61 1 242 1 352 1 68 1 6 1 73 1 131 1 33 1 221 1 37 2 325 1 38 1 269 1 288 2 44 1 229 1 309 1 48 1 364 1 
115 2 191 2 57 1 369 1 297 2 196 1 266 1 127 1 73 1 197 2 221 1 9 1 37 2 38 2 199 1 140 1 331 1 288 4 332 2 43 1 44 1 309 1 
115 2 191 2 24 1 89 1 25 1 57 1 345 1 369 1 297 2 61 1 242 1 352 1 266 1 196 1 373 1 6 1 127 1 73 1 131 1 197 2 221 1 9 1 37 2 38 2 199 1 327 1 269 1 331 1 288 4 289 1 43 1 332 2 44 1 229 1 309 1 48 1 232 1 
276 1 115 2 191 1 313 1 367 1 57 1 369 1 297 1 352 1 266 1 196 1 127 1 73 1 197 1 221 1 9 1 37 2 156 1 38 1 199 1 140 1 331 1 360 1 288 3 332 1 44 1 45 1 309 1 229 1 
115 20 54 1 57 3 213 1 58 1 344 1 297 8 175 3 298 1 266 4 127 4 71 3 300 1 129 1 355 1 73 3 134 1 9 5 357 1 186 4 192 1 369 3 28 1 317 2 196 4 324 4 247 1 102 1 35 1 37 6 249 1 38 21 253 1 199 4 331 5 288 41 41 1 43 4 44 3 162 1 205 1 378 1 381 1 
115 20 192 1 54 1 213 1 57 4 58 1 369 4 344 1 297 7 175 3 28 1 317 2 298 1 196 3 266 3 71 3 127 4 129 1 300 1 355 1 324 4 73 4 134 1 247 1 35 1 102 1 357 1 9 5 249 2 37 8 253 1 38 18 199 4 331 4 288 38 41 1 43 4 44 4 162 1 186 4 205 1 378 1 381 1 
115 27 192 1 54 1 213 1 57 2 58 1 369 2 344 2 297 14 175 2 28 1 317 1 298 1 196 7 266 7 71 4 127 7 129 1 300 1 355 1 324 4 73 2 247 1 35 1 102 1 357 1 9 8 249 1 37 4 253 1 38 25 199 7 331 8 288 52 41 1 43 7 44 2 186 4 205 1 378 1 379 2 381 1 
115 9 192 1 54 1 57 2 58 1 369 2 344 1 297 6 175 1 317 1 196 3 266 3 71 1 127 3 300 1 324 2 73 2 134 1 102 1 9 3 37 4 38 10 11 1 199 3 331 3 288 19 43 3 44 2 186 2 381 2 
115 14 192 2 54 1 57 3 58 1 369 3 297 4 175 2 28 1 317 2 298 1 196 2 266 2 71 2 127 3 300 1 324 4 73 3 247 1 102 1 357 1 9 3 249 2 37 6 38 12 253 1 199 3 331 2 288 26 41 1 43 2 44 3 186 2 381 1 
220 1 105 1 287 1 277 1 94 1 187 1 243 1 206 1 155 1 223 1 
124 1 23 1 
105 1 277 1 272 1 94 1 187 1 243 1 155 1 145 1 292 1 
245 1 204 1 
55 1 370 1 148 1 
287 1 277 1 358 1 155 1 223 1 240 1 105 1 159 1 94 1 265 1 109 1 187 1 30 1 243 1 363 2 206 1 7 1 167 1 
287 1 277 1 358 1 155 1 223 1 240 1 105 1 159 1 94 1 265 1 109 1 187 1 30 1 243 1 363 2 206 1 7 1 167 1 
287 1 277 1 358 1 155 1 223 1 240 1 105 1 159 1 94 1 265 1 109 1 187 1 30 1 243 1 363 2 206 1 7 1 167 1 
245 1 55 1 204 1 
245 1 55 1 204 1 
370 1 148 1 
55 1 370 1 148 1 
222 1 181 1 
23 1 277 1 313 2 237 1 144 1 124 1 94 1 352 2 30 1 243 1 218 1 178 1 101 1 154 1 358 1 155 1 156 2 222 1 181 1 360 2 105 1 159 1 187 1 229 2 363 1 364 1 167 1 
115 1 89 1 90 1 25 2 56 1 57 1 345 1 121 1 369 1 214 1 92 1 347 1 352 2 153 2 6 1 73 1 131 1 33 1 221 1 37 2 156 2 325 1 38 1 269 2 224 1 140 1 288 2 44 1 309 1 229 2 48 2 
86 1 295 2 22 1 25 2 345 1 269 2 281 1 289 1 333 1 308 1 282 1 320 1 110 1 6 1 48 2 164 1 85 1 49 1 323 1 
86 1 295 2 342 1 25 1 345 1 269 1 281 1 333 1 282 1 320 1 110 1 48 1 164 1 6 1 85 1 49 1 323 1 
131 1 89 1 25 1 120 1 79 1 345 1 269 1 308 1 203 1 64 1 217 1 6 1 48 1 85 1 
86 1 295 2 22 1 25 1 345 1 269 1 281 1 333 1 308 1 282 1 320 1 110 1 6 1 48 1 164 1 85 1 49 1 323 1 
76 1 
24 1 313 2 367 2 341 1 89 1 25 1 57 1 120 1 369 1 345 1 61 1 242 1 352 3 373 1 6 1 73 1 131 1 33 1 221 1 37 2 156 2 38 1 269 1 288 1 360 2 44 1 141 1 229 3 309 1 48 1 232 1 364 1 
374 2 135 1 296 2 137 1 27 2 3 2 240 4 361 1 93 2 201 1 228 1 96 4 70 1 283 1 378 1 
240 1 374 1 136 1 18 1 211 1 137 1 3 1 
296 1 143 1 3 1 240 2 60 1 96 1 283 1 70 1 219 1 374 1 100 1 135 1 267 1 358 1 137 1 361 1 159 1 
52 3 116 2 340 2 211 1 212 2 296 6 120 1 345 3 3 8 176 2 60 5 5 1 61 3 65 2 266 2 6 4 70 4 127 2 179 1 131 10 219 3 180 2 135 4 9 2 358 5 78 2 137 9 269 3 139 1 361 4 227 1 18 1 228 2 89 3 25 3 27 6 240 8 93 6 195 2 96 12 283 4 285 2 374 2 250 2 199 2 331 2 289 1 290 1 201 1 159 5 334 2 48 3 377 2 111 1 
340 1 296 3 27 5 175 1 3 5 240 5 60 1 93 5 298 1 96 6 266 2 283 2 70 2 71 1 127 2 219 1 374 2 247 1 135 2 357 1 9 2 358 1 253 1 137 8 199 2 331 2 226 1 41 1 361 2 201 1 159 1 334 2 186 1 228 1 189 1 
87 1 340 1 367 1 313 1 368 1 213 1 3 2 352 1 97 1 283 1 70 1 246 1 135 1 35 1 9 2 358 1 156 1 137 2 331 1 360 1 361 1 159 1 334 2 141 1 229 1 205 1 166 1 258 1 
374 1 135 1 211 1 137 1 3 1 240 1 361 1 18 1 70 1 283 1 
180 1 340 1 9 2 296 5 137 5 199 2 27 5 3 5 331 2 240 5 93 5 334 2 96 10 266 2 127 2 
240 1 60 1 219 1 374 1 159 1 358 1 
89 1 142 1 315 1 25 4 120 2 59 1 345 1 3 2 125 1 60 4 64 1 6 1 283 2 70 2 131 1 219 2 135 2 358 3 79 1 137 2 269 4 139 1 361 1 201 2 159 3 227 2 228 2 188 1 48 4 
94 1 177 1 187 1 
94 1 177 1 187 1 
4 1 94 1 187 1 206 1 222 1 
94 1 177 1 187 1 
94 1 187 1 157 1 
94 1 187 1 157 1 
94 1 187 1 157 1 
94 1 187 1 
243 1 155 1 
115 4 57 1 213 1 369 1 297 2 175 1 298 1 71 1 129 1 355 1 73 1 102 1 35 1 9 1 37 2 38 4 331 1 288 8 43 2 44 1 186 1 205 1 378 1 
115 6 213 1 57 2 369 2 344 1 297 3 175 1 298 1 196 1 71 1 127 1 129 1 355 1 73 2 35 1 102 1 9 2 37 4 38 5 199 1 331 1 288 11 43 2 42 1 44 2 186 2 205 1 378 1 
115 9 213 1 57 3 369 3 297 4 175 1 298 1 196 1 266 2 71 1 127 2 129 1 355 1 73 3 247 1 35 1 102 1 357 1 9 3 37 6 249 1 38 10 253 1 199 2 331 3 288 19 41 1 42 1 43 3 44 3 186 1 205 1 378 1 
115 10 213 1 57 3 369 3 297 5 175 1 298 1 196 2 266 1 71 1 127 2 129 1 355 1 73 3 247 1 35 1 102 1 357 1 9 3 249 1 37 6 38 7 253 1 199 2 331 2 288 17 41 1 42 1 43 3 44 3 186 1 205 1 378 1 
115 4 57 1 213 1 369 1 297 2 175 1 298 1 71 1 129 1 355 1 73 1 102 1 35 1 9 1 37 2 38 4 331 1 288 8 43 2 44 1 186 1 205 1 378 1 
115 6 57 1 369 1 297 2 175 1 298 1 196 1 266 2 71 1 127 2 73 1 247 1 102 1 357 1 9 2 37 2 38 6 253 1 199 2 331 2 288 12 41 1 43 1 44 1 186 1 
115 10 213 1 57 4 369 4 297 5 175 1 298 1 196 2 266 1 71 1 127 2 129 1 355 1 73 4 247 1 35 1 102 1 357 1 9 3 37 8 249 2 38 8 253 1 199 2 331 2 288 18 41 1 42 1 43 3 44 4 186 1 205 1 378 1 
115 9 57 4 369 4 297 6 175 1 298 1 196 3 266 2 71 1 127 3 73 4 134 1 247 1 102 1 357 1 9 3 37 8 249 2 38 7 253 1 199 3 331 2 288 16 41 1 43 3 44 4 186 1 
115 3 35 3 9 1 213 1 38 4 297 6 331 1 288 7 43 3 196 3 205 3 129 2 355 1 
115 10 213 1 57 4 369 4 297 4 175 1 298 1 196 1 266 1 71 1 127 2 129 1 355 1 73 4 134 1 247 1 35 1 102 1 357 1 9 3 37 8 249 2 38 8 253 1 199 2 331 2 288 18 41 1 43 3 44 4 186 1 205 1 378 1 
115 4 35 1 9 1 37 4 249 1 213 1 57 2 38 4 369 2 297 3 331 1 288 8 43 2 44 2 196 1 205 1 129 1 378 1 355 1 73 2 
115 3 136 1 35 1 9 1 213 1 38 3 297 2 331 1 288 6 43 2 205 1 129 1 378 1 355 1 
115 2 9 1 37 2 57 1 38 2 369 1 297 2 199 1 331 1 288 4 43 1 42 1 44 1 266 1 196 1 127 1 73 1 
115 3 9 1 38 4 344 1 199 1 297 2 175 1 331 1 288 7 43 1 186 2 266 1 196 1 71 1 127 1 
115 11 190 1 213 1 57 2 278 1 344 1 369 2 297 9 196 4 266 2 127 2 71 2 129 1 355 1 73 2 35 2 9 3 249 2 37 4 38 12 199 2 331 3 288 23 43 5 44 2 186 2 205 2 378 1 379 1 
288 1 186 1 38 1 
288 1 115 1 71 1 
115 3 180 1 9 1 37 2 57 1 38 3 369 1 199 1 297 3 331 1 288 6 42 1 43 2 44 1 196 1 266 1 127 1 73 1 
115 6 57 1 369 1 297 2 175 1 298 1 196 1 266 2 71 1 127 2 73 1 247 1 102 1 357 1 9 2 37 2 38 6 253 1 199 2 331 2 288 12 41 1 43 1 44 1 186 1 
115 3 35 1 9 1 213 1 38 3 297 2 331 1 288 6 43 1 196 1 205 1 
115 1 35 1 249 1 37 2 278 1 57 1 38 2 369 1 297 2 288 3 43 1 44 1 196 1 205 1 129 1 355 1 73 1 
115 5 102 1 35 2 9 2 37 2 57 1 213 1 38 5 369 1 297 5 331 2 288 10 43 3 44 1 196 2 205 2 166 1 73 1 
115 2 102 1 9 1 37 2 57 1 369 1 199 1 297 1 288 2 44 1 196 1 73 1 
115 2 102 1 9 1 37 2 57 1 38 2 369 1 297 2 199 1 331 1 288 4 43 1 44 1 266 1 196 1 127 1 73 1 
115 1 134 1 102 1 35 1 249 1 37 6 278 1 57 3 38 2 369 3 297 2 288 3 43 1 44 3 196 1 205 1 73 3 
115 16 213 2 278 1 57 5 369 5 344 1 123 1 297 12 175 1 196 5 266 3 71 3 127 3 129 1 355 1 73 5 134 1 35 3 102 1 9 5 249 2 37 10 38 18 199 3 270 1 331 5 288 34 202 1 42 1 43 7 44 5 186 4 205 3 378 1 
173 1 352 1 229 1 156 1 254 1 364 1 274 1 
316 1 372 1 173 1 251 1 279 1 255 1 
131 1 89 1 136 1 64 1 25 1 6 1 79 1 48 1 120 1 345 1 269 1 
131 1 89 1 194 1 313 1 25 1 156 1 120 1 345 1 269 1 360 1 61 1 242 1 352 2 229 2 6 1 48 1 232 1 364 1 
275 1 131 3 116 1 171 1 89 2 194 1 313 1 25 1 156 2 345 1 269 1 360 2 61 2 227 1 242 1 195 1 352 2 97 1 229 2 6 1 48 1 232 1 364 1 
275 1 131 3 116 1 171 1 89 2 194 1 313 1 25 2 156 2 345 1 269 2 158 1 360 2 61 2 227 1 242 1 195 1 352 2 97 1 229 2 68 1 6 1 48 2 364 1 
131 4 374 1 52 1 116 1 89 1 212 1 25 3 250 1 358 2 120 1 345 1 269 3 158 1 240 1 60 1 159 2 61 1 227 1 195 1 6 1 48 3 31 1 19 1 
131 4 374 1 52 1 116 1 89 1 212 1 25 3 250 1 358 2 120 1 345 1 269 3 158 1 240 1 60 1 159 2 61 1 227 1 195 1 6 1 48 3 377 1 
25 1 6 1 48 1 345 1 269 1 32 1 
131 3 304 1 89 2 25 7 120 2 12 1 345 2 269 6 224 1 289 1 263 1 216 1 61 1 110 1 153 1 48 7 6 3 50 1 111 1 32 1 380 1 
115 3 118 1 57 2 213 1 345 1 297 2 61 1 352 2 6 1 129 1 355 1 73 2 131 1 221 2 9 1 269 1 140 1 360 1 229 2 309 2 232 1 364 2 191 1 24 1 194 1 313 1 89 1 25 1 369 2 92 1 242 1 373 1 197 1 35 1 37 4 156 1 38 3 327 1 331 1 289 1 288 6 332 1 43 2 44 2 205 1 48 1 378 1 
52 1 211 1 25 1 212 1 120 1 144 1 3 1 176 1 240 1 60 2 65 1 283 2 70 2 131 2 219 1 374 1 135 2 250 1 358 3 78 1 137 1 269 1 139 1 361 2 159 3 18 1 48 1 377 1 
131 2 89 1 250 1 25 2 345 1 269 2 289 1 290 1 61 1 48 2 6 2 111 1 32 1 
131 1 89 1 25 4 120 1 79 1 345 1 183 1 269 4 158 1 289 1 64 1 6 1 48 4 
21 1 131 1 89 1 25 2 345 1 269 2 104 1 216 1 227 1 61 1 48 2 354 1 6 2 50 1 
295 1 333 1 282 1 25 1 6 1 48 1 120 1 345 1 323 1 269 1 
131 1 89 1 25 2 90 1 345 1 269 2 224 1 289 1 110 1 48 2 6 1 
131 3 304 1 89 2 25 5 79 1 120 1 345 2 12 1 183 1 269 4 224 1 289 1 227 1 64 1 48 5 6 2 
131 3 89 2 25 5 79 1 120 1 345 2 12 1 183 1 269 4 224 1 329 1 289 1 227 1 64 1 48 5 6 2 
131 1 89 1 194 1 313 1 25 1 156 1 120 1 345 1 269 1 360 1 61 1 242 1 352 2 229 2 68 1 6 1 48 1 364 1 
131 1 89 1 25 1 345 1 269 1 263 1 216 1 227 1 61 1 48 1 6 2 50 1 111 1 
311 1 34 1 1 1 230 1 364 1 
275 1 311 1 34 2 374 1 171 1 88 1 1 2 212 1 358 2 144 1 225 1 240 1 159 2 46 1 97 1 230 2 353 1 364 1 301 1 
311 1 34 1 347 1 352 1 229 1 56 1 156 1 230 1 121 1 
225 1 311 1 88 1 
208 1 294 3 365 1 174 1 261 1 146 1 328 1 150 1 256 1 350 3 284 1 
365 1 126 1 83 1 193 1 
365 1 146 1 
365 1 136 1 174 1 146 1 
365 1 294 1 150 1 350 1 174 1 261 1 146 1 
294 1 335 1 103 1 
365 1 294 3 75 1 174 1 261 1 80 1 146 1 328 2 330 1 150 1 350 3 284 1 
200 1 365 1 208 1 294 2 150 1 350 2 174 1 261 1 146 1 
295 1 365 1 294 1 126 1 150 1 282 1 350 1 320 1 261 1 47 1 284 1 
365 1 294 1 150 1 350 1 261 1 146 1 284 1 
294 1 150 1 350 1 174 1 261 1 146 2 284 1 
114 1 365 1 294 2 0 1 261 2 146 1 150 2 350 2 95 1 284 1 
294 3 208 2 365 2 193 1 174 1 261 1 146 1 126 1 150 1 256 1 350 3 66 1 284 1 
86 1 365 1 295 2 294 2 208 1 174 1 261 1 146 1 333 1 150 1 350 2 282 1 320 1 284 1 293 1 
294 4 208 2 365 2 312 1 193 1 174 1 261 2 146 1 200 1 126 1 150 2 350 4 284 1 
365 1 294 1 150 1 350 1 174 1 261 1 146 1 284 1 
208 2 294 4 365 3 193 1 75 1 174 2 261 1 146 2 328 1 330 1 126 1 83 1 150 1 350 4 
365 1 294 2 208 1 174 1 261 1 146 1 241 1 62 1 150 1 350 2 284 1 273 1 
365 1 294 3 75 2 174 1 261 1 146 1 328 2 330 1 81 1 150 1 350 3 284 1 
365 2 238 2 122 1 182 1 
294 1 150 1 350 1 248 1 261 1 284 1 
365 1 208 1 294 2 256 1 150 1 350 2 174 1 261 1 146 1 284 1 
271 1 
365 1 294 1 150 1 350 1 174 1 261 1 146 1 284 1 

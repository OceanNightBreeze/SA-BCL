#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (176,321) 259 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (219,334) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (73,161,240) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (219,334) (219,334) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 39 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (73,161,240) (73,161,240) 1 298 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 39 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 177 243 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (176,321) (176,321) (37,135) 74 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (176,321) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (176,321) (176,321) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (219,334) (219,334) 169 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (176,321) 259 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 138 (25,50) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 138 (25,50) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 138 (100,296) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 138 (100,296) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 235 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 1 52 1 266 1 5 2 267 5 139 2 99 9 190 9 271 3 61 4 16 1 273 1 233 1 238 2 159 1 199 6 32 2 204 1 289 1 249 2 174 1 251 2 127 1 93 1 299 1 339 1 340 1 130 2 
51 1 52 1 266 1 5 2 267 5 139 2 99 9 190 9 271 3 61 4 16 1 273 1 233 1 238 2 159 1 199 6 32 2 204 1 289 1 249 2 174 1 251 2 127 1 93 1 299 1 339 1 340 1 130 2 
51 1 52 1 266 1 5 2 267 6 139 2 99 10 190 10 271 4 61 5 16 1 273 1 233 1 238 2 159 1 199 7 32 2 204 1 289 1 249 2 174 1 251 2 127 1 93 1 299 1 339 1 340 1 130 2 
51 1 52 1 266 1 5 2 267 4 139 2 99 7 190 7 271 2 61 3 16 1 273 1 233 1 238 2 159 1 199 4 32 2 204 1 289 1 249 2 174 1 251 1 127 1 93 1 339 1 340 1 130 2 
51 1 52 1 5 1 199 3 267 3 99 4 32 1 190 4 271 1 61 2 249 1 204 1 174 1 251 2 93 1 299 1 130 1 238 1 
159 1 52 1 267 1 5 1 99 2 139 1 190 2 32 1 170 1 249 1 289 1 173 1 206 1 174 1 93 1 130 1 
52 1 5 2 267 2 199 1 99 3 139 1 190 3 271 1 61 1 249 2 174 1 16 1 93 1 
51 1 52 1 5 2 267 5 139 1 99 9 190 9 61 4 271 3 16 1 273 1 233 1 238 1 160 1 199 7 32 1 249 2 204 1 174 1 251 2 253 1 93 1 299 1 130 1 
51 1 52 1 5 2 267 5 139 1 99 9 190 9 61 4 271 3 16 1 273 1 233 1 238 1 160 1 199 7 32 1 249 2 204 1 174 1 251 2 253 1 93 1 299 1 130 1 
114 1 39 1 308 1 
114 1 213 1 154 2 
22 2 320 2 38 2 91 1 42 2 47 2 108 2 
111 1 259 1 22 1 23 2 320 1 76 2 321 1 118 1 226 1 142 1 38 1 313 2 91 1 42 1 108 1 47 1 
22 1 320 1 334 1 38 1 91 1 42 1 47 1 108 1 
240 1 82 1 320 1 161 1 38 1 47 1 
240 1 22 1 320 1 38 1 42 1 47 1 108 1 
73 1 261 1 62 1 175 1 305 1 
73 2 62 1 175 2 114 1 27 1 305 1 308 1 81 1 
73 1 62 1 175 1 
73 1 22 1 320 1 175 1 334 1 38 1 91 1 305 1 42 1 47 1 108 1 219 1 
114 1 
73 2 62 1 175 2 114 1 98 1 305 1 308 1 81 1 
73 5 114 1 137 1 8 1 305 2 306 2 308 1 81 1 269 1 171 1 326 1 248 1 62 2 175 5 211 1 146 2 234 1 215 2 94 1 
39 1 
220 1 22 1 310 1 320 2 38 2 42 1 108 1 47 2 
22 1 320 3 294 1 38 3 42 3 47 3 108 3 
320 1 38 1 42 1 47 1 108 1 
220 1 22 1 310 1 320 1 38 1 42 1 47 1 108 1 
22 1 310 1 320 2 294 1 38 2 42 2 47 2 108 2 95 1 
82 1 320 2 294 1 38 2 103 1 42 1 47 2 108 1 
320 1 294 1 38 1 42 1 47 1 108 1 95 1 
22 1 310 1 320 1 38 1 42 1 47 1 108 1 
23 1 76 1 313 1 118 1 
23 1 76 1 313 1 118 1 
60 1 209 1 263 1 254 2 274 1 102 1 275 1 186 1 
286 1 320 1 38 1 42 1 47 1 108 1 
23 1 320 1 294 1 76 1 38 1 313 1 118 1 42 1 47 1 108 1 95 1 
82 1 22 1 310 1 2 1 320 5 294 2 113 1 38 5 103 1 42 4 95 1 47 5 108 4 
320 1 38 1 42 1 47 1 108 1 
68 1 59 1 
68 1 59 1 
87 1 179 1 
87 1 179 1 
87 1 179 1 
145 1 68 1 59 1 
145 1 68 1 59 1 
158 1 68 1 59 1 
15 1 87 1 68 2 200 1 179 1 59 2 
145 1 68 1 59 1 
68 1 151 1 59 1 
68 1 151 1 59 1 
68 1 151 1 59 1 
73 2 300 1 114 1 222 2 200 1 304 2 284 1 57 1 33 2 246 1 202 2 59 2 292 3 175 2 101 1 68 2 41 2 40 1 45 1 
155 1 73 1 158 1 157 1 320 2 77 1 222 1 304 1 120 1 57 1 202 1 59 1 227 1 292 1 175 1 68 1 38 2 41 1 42 2 237 1 46 1 47 2 108 2 
32 1 130 1 238 1 
173 1 32 1 130 1 
260 1 110 1 173 1 163 1 32 3 238 2 
260 1 250 1 173 1 163 1 32 2 238 1 
260 2 173 1 163 1 32 2 238 1 
134 1 265 1 136 1 187 1 305 4 306 1 307 2 308 1 227 1 62 1 193 1 67 2 146 1 234 3 277 1 154 3 73 5 157 1 166 1 114 2 119 1 283 1 81 1 247 1 83 2 326 2 175 5 213 1 92 1 215 1 94 1 46 1 
261 5 134 2 136 3 187 3 305 7 306 2 308 1 269 1 62 6 272 1 193 1 67 6 146 2 234 8 236 1 154 9 73 9 109 1 157 4 114 5 119 3 283 3 34 1 122 1 123 5 81 1 247 3 83 6 326 6 175 9 86 1 213 3 92 2 215 2 94 1 
134 1 265 1 136 1 187 1 305 2 306 1 307 1 308 1 269 1 67 2 146 1 234 3 277 1 154 4 73 3 157 1 114 3 119 1 283 1 247 1 326 2 83 2 175 3 213 2 92 1 215 1 
134 1 265 1 136 2 187 2 305 3 306 1 307 2 308 1 269 1 272 1 67 4 146 1 234 5 277 1 154 7 73 4 157 2 114 4 119 2 283 2 122 1 247 2 83 4 326 4 175 4 86 1 213 3 92 1 215 1 
167 1 39 1 10 1 
164 1 167 1 
64 1 
167 1 216 1 
156 1 167 3 194 1 224 1 10 2 216 1 
167 1 224 1 216 1 
3 1 167 1 
112 1 165 1 136 1 119 1 290 1 207 1 291 4 208 7 295 1 126 3 66 1 19 1 20 3 315 2 297 1 182 1 217 2 
112 1 165 1 136 1 119 1 290 1 207 1 291 4 208 7 295 1 126 3 66 1 19 1 20 3 315 2 297 1 182 1 217 2 
112 1 165 1 136 1 119 1 290 1 207 1 291 4 208 7 295 1 126 3 66 1 19 1 20 3 314 1 315 2 297 1 182 1 217 2 
4 1 263 1 136 4 186 1 187 3 66 2 232 3 102 1 275 1 19 1 315 3 20 10 112 2 280 1 165 2 322 1 283 3 119 4 35 1 247 3 290 1 84 4 205 1 125 1 207 1 208 31 291 16 295 5 254 2 126 15 297 1 129 1 182 2 217 5 
302 1 263 2 136 1 186 2 66 1 102 2 275 2 19 1 315 2 20 4 72 1 112 1 165 1 119 1 125 1 290 1 208 9 291 5 207 1 295 1 254 4 126 4 182 1 217 3 
52 1 267 1 5 1 6 1 99 2 139 1 188 1 190 2 309 1 313 1 104 1 105 1 238 1 110 1 23 1 162 1 241 1 76 1 199 1 32 2 203 1 327 1 325 1 249 1 173 1 174 1 330 1 93 1 130 1 218 1 
54 1 267 1 5 1 6 1 99 3 139 1 188 1 190 3 309 1 313 1 238 1 110 1 23 1 162 1 241 1 76 1 199 2 30 1 32 2 203 1 327 1 325 1 249 1 329 1 173 1 174 1 330 1 93 1 130 1 218 1 
54 1 267 1 6 1 139 1 99 2 188 1 190 2 309 1 313 1 238 1 110 1 23 1 162 1 241 1 76 1 199 2 30 1 32 2 203 1 327 1 173 1 174 1 93 1 130 1 218 1 
281 1 23 1 282 1 76 1 167 1 5 1 28 1 139 2 99 1 118 1 188 2 31 1 190 1 203 1 309 2 327 2 329 1 249 1 18 1 313 1 216 1 316 1 218 1 
52 1 5 1 6 1 99 1 139 1 188 1 190 1 309 1 313 1 105 1 238 1 110 1 23 1 162 1 241 1 76 1 30 1 32 2 203 1 327 1 325 1 249 1 173 1 330 1 130 1 218 1 
56 1 
1 1 306 1 62 2 229 1 146 1 234 1 313 2 276 1 18 1 240 1 73 2 320 1 161 1 23 2 76 2 115 1 167 1 118 2 31 1 203 1 81 1 82 1 36 1 326 1 175 2 38 1 92 1 338 1 298 1 215 1 94 1 216 1 47 1 218 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 73 2 1 1 320 1 161 1 98 1 115 1 81 1 82 1 62 1 175 2 38 1 298 1 338 1 47 1 
240 1 73 1 1 1 320 1 161 1 115 1 306 1 82 1 175 1 146 1 38 1 215 1 298 1 338 1 94 1 47 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 82 1 73 1 1 1 320 1 161 1 175 1 115 1 38 1 338 1 298 1 47 1 
240 1 73 1 1 1 320 1 161 1 115 1 306 1 82 1 175 1 146 1 38 1 215 1 298 1 338 1 94 1 47 1 
112 1 263 1 165 1 136 1 186 1 60 1 290 1 208 2 291 2 207 1 209 1 274 1 254 2 275 1 102 1 39 1 19 1 315 1 20 1 217 1 
243 1 263 1 186 1 60 1 84 1 291 1 208 2 274 1 254 2 126 1 177 1 232 1 275 1 102 1 71 1 
279 1 320 1 263 1 268 1 186 1 60 1 291 1 208 2 294 1 126 1 254 2 274 1 102 1 38 1 275 1 336 1 71 1 42 1 44 1 95 1 108 1 47 1 
263 1 135 1 186 1 60 1 274 1 275 1 102 1 71 1 313 1 108 1 279 1 74 1 320 1 23 1 76 1 321 1 118 1 208 1 294 1 176 1 254 2 126 1 38 1 42 1 47 1 95 1 
23 1 263 1 76 1 186 1 118 1 60 1 208 1 291 1 14 1 274 1 254 2 275 1 102 1 336 1 313 1 128 1 
263 1 186 1 136 1 187 1 60 1 310 1 274 1 102 1 275 1 71 1 108 1 196 1 22 1 320 1 283 1 119 1 247 1 291 1 208 2 254 2 126 1 38 1 42 1 47 1 
75 1 263 1 186 1 136 1 187 1 60 1 208 1 291 1 209 1 274 1 254 2 275 1 102 1 
263 1 186 1 119 1 60 1 247 1 143 1 208 1 209 1 274 1 254 2 126 1 275 1 102 1 
263 1 186 1 136 1 187 1 119 1 283 1 247 1 60 1 208 2 291 1 209 1 126 1 274 1 254 2 275 1 102 1 
75 1 263 1 186 1 136 1 187 1 60 1 208 1 14 1 291 1 274 1 254 2 275 1 102 1 
263 1 186 1 119 1 60 1 247 1 143 1 208 1 14 1 274 1 254 2 126 1 275 1 102 1 
263 1 186 1 136 1 187 1 119 1 283 1 247 1 60 1 208 2 14 1 291 1 126 1 274 1 254 2 275 1 102 1 
263 1 186 1 136 1 187 1 119 1 283 1 247 1 60 1 291 1 208 2 126 1 274 1 254 2 275 1 102 1 
23 1 76 1 321 1 313 1 118 1 
23 1 76 1 264 1 313 1 118 1 
263 1 186 1 136 1 187 1 119 1 283 1 247 1 60 1 208 2 291 1 126 1 274 1 254 2 275 1 102 1 71 1 
23 1 176 1 76 1 321 1 313 1 104 1 
263 1 186 1 136 1 187 1 60 1 310 1 274 1 102 1 275 1 71 1 108 1 22 1 320 1 283 1 119 1 247 1 291 1 208 2 254 2 333 1 126 1 38 1 42 1 47 1 
263 2 303 2 55 1 186 2 136 2 187 2 189 1 102 2 275 2 149 1 20 4 72 1 197 1 79 1 283 2 119 2 324 1 247 2 208 12 291 6 252 2 295 2 126 6 254 4 255 1 217 2 
263 1 303 1 55 1 186 1 136 1 187 1 102 1 275 1 72 1 197 1 79 2 283 1 119 1 324 1 247 1 208 8 291 4 252 2 126 4 254 2 255 2 
263 2 303 1 55 1 186 2 136 1 187 1 189 1 102 2 275 2 20 1 72 1 197 1 79 2 283 1 119 1 324 1 247 1 208 8 291 4 252 2 295 1 126 4 254 4 255 1 132 1 
263 2 303 1 55 1 186 2 136 1 187 1 189 1 102 2 275 2 20 2 72 1 197 1 79 2 283 1 119 1 324 1 247 1 208 8 291 4 252 2 295 1 126 4 254 4 255 1 217 1 132 1 
263 1 303 1 55 1 186 1 136 3 187 1 102 1 275 1 19 2 20 4 315 2 72 1 197 1 112 2 165 2 79 1 283 1 119 3 324 1 247 1 290 2 208 18 291 10 207 2 295 1 252 2 126 8 254 2 255 1 217 3 
101 1 222 1 68 1 200 1 223 1 304 1 41 1 45 1 202 1 59 1 
158 1 120 1 
13 1 222 1 68 1 89 1 304 1 41 1 11 1 202 1 59 1 
73 1 300 1 114 1 222 1 200 1 304 1 284 1 57 1 33 1 202 1 59 1 292 2 175 1 101 1 68 1 41 1 40 1 45 1 
73 1 300 1 114 1 222 1 200 1 304 1 284 1 57 1 33 1 202 1 59 1 292 2 175 1 101 1 68 1 41 1 40 1 45 1 
73 1 300 1 114 1 222 1 200 1 304 1 284 1 57 1 33 1 202 1 59 1 292 2 175 1 101 1 68 1 41 1 40 1 45 1 
15 1 145 1 9 1 
15 1 145 1 9 1 
151 1 183 1 
15 1 151 1 183 1 
77 1 237 1 
222 1 304 1 305 1 59 1 227 1 68 1 237 1 108 2 73 1 155 1 157 1 158 1 320 2 77 1 33 1 120 1 121 1 202 1 292 1 175 1 38 2 40 1 41 1 42 2 46 1 47 2 
145 1 9 1 
15 1 151 1 183 1 
320 2 53 1 38 2 278 1 150 1 47 2 
0 1 110 1 23 2 241 1 76 2 97 1 6 1 30 1 32 2 203 1 124 1 327 1 173 1 330 1 313 2 104 1 130 1 238 1 218 1 
110 1 23 1 241 1 76 1 6 1 117 1 30 1 32 2 203 1 124 1 327 1 173 1 330 1 313 1 130 1 238 1 218 1 
0 1 23 1 76 1 167 1 28 1 118 1 31 1 203 1 327 1 313 1 337 1 18 1 216 1 218 1 
0 1 110 1 23 1 241 1 76 1 97 1 6 1 30 1 32 2 203 1 124 1 327 1 173 1 330 1 313 1 130 1 238 1 218 1 
210 1 
326 1 248 1 114 1 234 1 39 1 8 1 308 1 
306 1 308 1 62 1 146 1 234 1 147 1 154 1 73 1 242 1 114 2 81 1 326 1 175 1 213 1 178 1 215 1 94 1 
262 2 3 2 8 1 187 2 10 2 270 2 194 1 276 1 104 1 106 1 21 2 23 3 25 2 114 8 116 2 118 1 283 2 119 2 203 3 37 2 213 6 215 4 216 3 218 4 131 1 136 2 224 3 140 1 225 2 58 2 306 4 308 2 62 5 230 1 67 6 146 4 234 9 313 3 152 1 154 12 73 5 164 3 76 3 167 10 81 3 247 2 248 1 83 6 326 8 85 2 175 5 92 2 256 2 94 4 
301 1 4 1 136 2 187 2 306 2 308 2 62 1 63 1 67 5 146 2 232 1 234 8 276 1 317 1 21 1 154 6 73 1 114 5 116 2 283 2 119 2 285 1 81 1 247 2 288 1 83 5 326 5 84 1 175 1 332 1 88 1 213 3 92 1 215 2 94 2 
136 1 306 1 146 1 69 1 234 2 108 1 73 1 22 1 112 1 320 1 165 1 116 2 119 1 169 1 326 1 207 1 175 1 334 1 38 1 91 1 215 1 42 1 94 1 219 1 47 1 
114 1 8 1 306 1 308 1 248 1 326 1 146 1 234 1 215 1 94 1 
114 5 116 2 136 2 187 2 283 2 119 2 247 2 326 5 83 5 67 5 213 5 234 5 256 1 21 1 154 10 
73 1 62 1 175 1 114 1 308 1 81 1 
306 2 269 1 62 4 229 1 312 1 146 2 234 2 313 4 276 2 18 1 106 2 152 1 73 3 23 4 76 4 167 1 118 2 31 1 323 1 203 1 81 2 36 1 326 2 175 3 92 2 215 2 216 1 94 1 218 1 
22 1 259 1 23 1 320 1 76 1 321 1 38 1 313 1 91 1 118 1 42 1 47 1 108 1 
114 4 306 1 308 2 83 2 326 2 67 2 213 2 146 1 234 1 92 1 276 1 315 1 215 1 94 1 154 4 
304 1 257 1 202 1 
304 1 257 1 202 1 
77 1 101 1 304 1 245 1 202 1 
304 1 257 1 202 1 
335 1 304 1 202 1 
335 1 304 1 202 1 
335 1 304 1 202 1 
304 1 202 1 
68 1 59 1 
112 1 263 2 165 1 136 1 186 2 119 1 125 1 290 1 207 1 208 8 291 4 295 1 126 4 254 4 275 2 102 2 19 1 315 1 20 3 217 2 
112 1 165 1 136 1 119 1 290 1 207 1 291 3 208 6 126 3 39 1 19 1 315 1 20 2 217 2 
48 1 263 1 186 1 136 1 187 1 119 1 283 1 247 1 291 2 208 4 295 1 126 2 254 2 275 1 102 1 20 2 217 1 
4 1 136 1 187 1 119 1 283 1 247 1 84 2 208 7 291 3 295 1 126 4 232 1 129 1 20 2 217 1 
263 2 185 1 136 3 186 2 187 2 232 2 275 2 102 2 19 1 315 1 20 9 112 2 165 2 78 1 283 2 119 3 247 2 290 1 84 2 125 2 207 1 291 11 208 23 295 4 126 12 254 4 177 1 129 1 217 5 
84 1 208 1 126 1 
208 1 291 1 232 1 
48 1 263 1 186 1 136 1 187 1 283 1 119 1 247 1 208 6 291 3 295 1 254 2 126 3 102 1 275 1 20 3 256 1 217 2 
301 1 4 1 263 1 186 1 136 2 187 2 63 1 232 1 102 1 275 1 20 2 72 1 283 2 119 2 285 1 247 2 84 1 208 12 291 6 295 1 332 1 126 6 254 2 88 1 217 1 
112 1 208 6 291 3 207 1 295 1 165 1 126 3 136 1 20 2 119 1 217 1 
112 1 165 1 263 1 78 1 186 1 125 1 290 1 291 1 208 3 295 1 126 2 254 2 275 1 102 1 19 1 20 2 217 1 
72 1 112 2 263 1 165 2 186 1 136 2 119 2 169 1 291 5 208 10 207 1 295 2 254 2 126 5 102 1 275 1 20 5 217 3 
72 1 263 1 186 1 136 1 187 1 291 2 208 2 295 1 254 2 275 1 102 1 20 1 
72 1 263 1 186 1 136 1 187 1 119 1 283 1 247 1 291 2 208 4 295 1 126 2 254 2 275 1 102 1 20 2 217 1 
72 1 112 1 263 3 165 1 78 1 186 3 189 1 125 1 208 3 291 1 295 1 126 2 254 6 275 3 102 3 20 2 217 1 
48 1 4 1 263 5 186 5 136 5 187 3 189 1 232 3 102 5 275 5 19 1 315 1 20 12 72 1 112 3 280 1 165 3 78 1 322 1 283 3 119 5 247 3 290 1 125 2 84 4 205 1 207 2 208 34 291 16 295 5 126 18 254 10 129 1 217 7 
301 1 4 1 263 1 136 1 186 1 232 1 102 1 275 1 19 1 315 1 20 2 72 1 112 1 165 1 119 1 84 1 290 1 208 8 291 4 207 1 126 4 254 2 217 2 
48 1 301 1 4 1 263 2 186 2 136 2 187 1 232 1 102 2 275 2 19 1 315 1 20 3 72 1 112 1 165 1 119 1 283 1 290 1 84 2 207 1 208 11 291 6 295 1 126 5 254 4 129 1 217 2 
48 1 301 1 4 1 263 3 186 3 136 3 187 2 63 1 232 1 102 3 275 3 19 1 315 1 20 4 72 1 112 1 165 1 283 2 119 3 285 1 247 2 290 1 84 1 125 1 207 1 208 19 291 9 295 1 332 1 126 10 254 6 88 1 217 3 
48 1 301 1 4 1 263 3 186 3 136 3 187 2 63 1 232 1 102 3 275 3 19 1 315 1 20 5 72 1 112 1 165 1 283 2 119 2 285 1 247 1 290 1 125 1 84 1 207 1 208 17 291 10 295 2 332 1 126 7 254 6 88 1 217 3 
301 1 4 1 263 1 136 1 186 1 232 1 102 1 275 1 19 1 315 1 20 2 72 1 112 1 165 1 119 1 84 1 290 1 208 8 291 4 207 1 126 4 254 2 217 2 
301 1 4 1 263 1 186 1 136 2 187 2 63 1 232 1 102 1 275 1 20 2 72 1 283 2 119 2 285 1 247 2 84 1 208 12 291 6 295 1 332 1 126 6 254 2 88 1 217 1 
48 1 301 1 4 1 263 4 186 4 136 3 187 2 63 1 232 1 102 4 275 4 19 1 315 1 20 5 72 1 112 1 165 1 283 2 119 2 285 1 247 1 290 1 84 1 125 2 207 1 208 18 291 10 295 2 332 1 126 8 254 8 88 1 217 3 
301 1 4 1 263 4 186 4 136 3 187 3 189 1 63 1 232 1 102 4 275 4 20 6 72 1 283 3 119 2 285 1 247 2 84 1 125 2 208 16 291 9 295 3 332 1 126 7 254 8 88 1 217 3 
112 3 165 3 136 1 119 1 290 1 208 7 207 1 291 3 295 3 126 4 19 2 20 6 217 3 
301 1 4 1 263 4 186 4 136 3 187 2 189 1 63 1 232 1 102 4 275 4 19 1 315 1 20 4 72 1 112 1 165 1 283 2 119 2 285 1 247 1 290 1 84 1 125 2 207 1 208 18 291 10 295 1 332 1 126 8 254 8 88 1 217 3 
82 1 328 1 320 1 38 1 103 1 47 1 
24 1 320 1 133 1 82 1 328 1 17 1 70 1 38 1 103 1 96 1 47 1 
23 1 76 1 167 1 39 1 18 1 313 1 118 1 31 1 216 1 218 1 203 1 
320 1 23 1 50 1 76 1 167 1 138 1 224 1 118 1 203 1 294 1 38 1 313 1 42 1 216 1 218 1 108 1 47 1 
320 1 23 1 50 1 76 1 167 1 138 1 224 1 203 1 294 1 38 1 313 1 42 1 216 1 106 1 218 1 108 1 47 1 
320 1 23 1 76 1 167 1 138 1 224 1 203 1 294 1 296 1 38 1 313 1 42 1 216 1 106 1 218 1 108 1 47 1 
73 2 262 1 23 3 3 1 76 3 164 1 114 1 168 1 167 4 118 1 224 1 225 1 10 1 308 1 203 1 62 1 175 2 100 1 313 3 43 1 216 1 106 1 218 1 
73 2 262 1 23 3 3 1 76 3 25 1 164 1 114 1 167 4 118 1 224 1 225 1 10 1 308 1 203 1 62 1 175 2 313 3 43 1 216 1 106 1 218 1 
23 1 76 1 313 1 201 1 218 1 203 1 
49 1 23 7 76 7 221 1 167 3 30 1 118 2 224 1 201 1 226 1 192 1 203 2 144 1 194 1 313 6 104 1 181 1 216 2 258 1 195 1 218 3 
320 1 294 1 38 1 42 1 47 1 108 1 
8 1 305 1 10 1 225 1 306 2 58 1 308 1 62 2 146 2 234 1 313 1 152 1 73 3 23 1 76 1 25 1 164 1 114 1 167 2 118 1 81 1 326 1 248 1 85 1 175 3 37 1 215 2 94 2 
23 2 76 2 167 2 224 1 10 1 201 1 203 1 230 1 194 1 313 2 104 1 216 1 218 2 
23 4 76 4 167 1 118 1 141 1 31 1 203 1 313 4 18 1 43 1 104 1 216 1 218 1 
23 2 76 2 26 1 167 1 224 1 203 1 231 1 313 2 214 1 106 1 216 1 258 1 195 1 218 2 
173 1 23 1 76 1 6 1 313 1 118 1 32 1 130 1 218 1 203 1 
23 2 76 2 167 1 221 1 313 2 30 1 104 1 216 1 12 1 218 1 203 1 
23 5 76 5 221 1 167 3 118 1 141 1 31 1 192 1 203 2 144 1 18 1 313 4 104 1 106 1 216 2 218 2 
23 5 76 5 221 1 167 3 118 1 141 1 31 1 203 2 144 1 331 1 18 1 313 4 104 1 106 1 216 2 218 2 
320 1 23 1 76 1 167 1 138 1 224 1 118 1 203 1 294 1 296 1 38 1 313 1 42 1 216 1 218 1 108 1 47 1 
49 1 23 1 76 1 167 1 224 1 203 1 194 1 313 1 106 1 216 1 258 1 195 1 218 2 
320 1 184 1 53 1 38 1 180 1 150 1 278 1 153 1 47 1 
90 1 235 1 180 1 
319 1 184 1 180 1 153 1 
73 1 319 1 184 1 175 1 244 1 90 1 235 1 305 1 180 1 153 1 
174 1 267 1 39 1 93 1 
249 1 174 1 267 1 5 1 99 1 93 1 190 1 
139 1 99 1 309 1 
318 1 159 2 52 1 267 1 5 1 29 1 99 3 190 3 249 1 228 1 174 1 93 1 
249 1 174 1 251 1 267 1 199 1 5 1 99 2 93 1 190 2 
61 1 204 1 249 1 52 1 267 1 5 1 99 1 32 1 190 1 130 1 238 1 
249 1 174 1 52 1 267 1 5 1 99 1 190 1 
249 1 174 2 52 1 5 1 99 1 93 1 190 1 
52 1 267 1 5 2 99 2 190 2 80 1 249 2 174 1 293 1 148 1 
61 1 271 1 249 1 174 1 273 1 52 1 267 2 199 2 233 1 5 1 99 3 93 1 190 3 
110 1 52 1 267 1 5 1 199 1 99 2 32 2 190 2 191 1 249 1 173 1 174 1 93 1 238 1 130 1 
52 1 5 2 199 2 267 2 99 4 190 4 271 1 61 1 249 2 174 1 251 1 93 1 299 1 
249 1 174 1 52 1 267 1 5 1 99 1 93 1 190 1 
318 1 159 1 199 2 5 1 267 3 99 4 190 4 271 1 61 1 172 1 249 1 228 1 174 2 93 2 
198 1 52 1 267 1 5 1 199 1 99 2 190 2 249 1 174 1 253 1 212 1 93 1 
318 2 159 2 52 1 267 1 5 1 7 1 99 3 190 3 249 1 228 1 174 1 93 1 
287 1 65 2 267 2 107 1 
239 1 249 1 52 1 5 1 99 1 190 1 
249 1 174 1 52 1 267 1 199 1 233 1 5 1 99 2 93 1 190 2 
311 1 
249 1 174 1 52 1 267 1 5 1 99 1 93 1 190 1 
159 1 52 1 199 1 5 1 267 1 99 3 190 3 249 1 174 1 233 1 93 1 
61 1 271 1 172 1 267 1 
174 1 267 1 

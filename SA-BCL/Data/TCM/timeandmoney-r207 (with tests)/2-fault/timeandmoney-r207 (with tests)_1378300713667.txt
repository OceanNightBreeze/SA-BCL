#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 2 121 1 18 3 332 1 28 2 138 1 90 1 199 1 367 1 162 3 348 1 76 1 147 2 
192 1 55 2 121 1 3 2 28 2 199 4 367 1 348 2 277 2 171 1 302 1 34 1 250 1 147 5 254 2 355 1 18 9 332 3 150 2 73 1 115 1 138 6 90 1 206 1 162 9 45 1 164 1 76 1 
192 1 55 2 121 1 3 2 28 2 199 4 367 1 348 2 277 2 171 1 302 1 34 1 250 1 147 5 254 2 355 1 18 9 332 3 150 2 73 1 115 1 138 6 90 1 206 1 162 9 45 1 164 1 76 1 
192 1 55 2 121 1 3 2 28 2 199 5 367 1 348 2 277 2 171 1 302 1 34 1 250 1 147 6 254 2 355 1 18 10 332 4 150 2 73 1 115 1 138 7 90 1 206 1 162 10 45 1 164 1 76 1 
192 1 55 2 121 1 3 2 28 2 199 3 367 1 348 2 277 1 302 1 34 1 250 1 147 4 254 2 355 1 18 7 332 2 150 2 73 1 115 1 138 4 90 1 206 1 162 7 45 1 164 1 76 1 
254 1 55 1 121 1 332 1 3 1 18 4 150 1 28 1 73 1 138 3 90 1 199 2 367 1 162 4 277 2 171 1 302 1 147 3 
254 1 55 1 121 1 18 2 3 1 101 1 28 1 90 1 139 1 225 1 367 1 45 1 162 2 348 1 250 1 147 1 
254 2 55 1 355 1 121 1 3 1 18 9 332 3 150 1 73 1 28 2 366 1 138 7 90 1 199 4 367 1 277 2 162 9 335 1 348 1 164 1 171 1 302 1 76 1 147 5 
254 2 55 1 355 1 121 1 3 1 18 9 332 3 150 1 73 1 28 2 366 1 138 7 90 1 199 4 367 1 277 2 162 9 335 1 348 1 164 1 171 1 302 1 76 1 147 5 
141 1 168 1 256 1 99 1 365 1 202 1 334 1 204 1 289 1 368 1 61 1 371 1 290 1 51 1 
163 1 
119 1 368 2 289 2 336 1 163 1 370 1 365 1 322 1 
109 1 309 1 233 1 19 1 365 2 126 1 9 2 289 5 368 5 336 1 163 1 370 1 24 2 166 1 322 2 292 1 173 1 251 1 280 2 
163 1 370 1 169 1 
15 1 163 1 155 2 
141 2 256 1 99 2 290 2 49 1 51 2 334 2 204 2 
141 3 294 1 212 2 296 1 99 2 194 1 272 1 223 1 198 1 226 1 276 1 228 2 248 2 62 1 107 1 36 1 256 1 308 1 307 1 40 1 356 1 110 1 284 1 334 2 205 1 204 2 236 2 286 1 376 1 185 1 186 2 377 1 290 3 49 1 51 2 339 1 140 1 
141 1 168 1 256 1 99 1 61 1 371 1 290 1 51 1 334 1 204 1 
141 1 306 1 168 1 41 1 312 1 289 1 368 1 163 1 370 1 290 1 51 1 352 1 68 1 242 1 
141 1 306 1 168 1 99 1 312 1 334 1 204 1 368 2 289 2 163 1 370 1 290 1 51 1 68 1 242 1 
148 1 368 1 289 1 365 1 322 1 
368 2 289 2 336 1 163 1 370 1 365 1 322 1 182 1 
368 1 289 1 322 1 
141 2 210 1 99 1 334 1 204 1 25 1 290 2 51 2 49 2 
207 1 30 1 122 1 
141 1 294 1 356 1 110 1 272 1 236 1 186 1 185 1 276 1 248 1 62 1 290 1 49 1 67 1 140 1 339 1 
49 1 169 1 
141 2 294 1 99 1 258 1 356 1 110 1 272 1 334 1 236 1 30 1 185 1 186 1 276 1 248 1 62 1 290 2 51 1 339 1 140 1 241 1 
95 1 141 5 210 1 99 4 258 1 41 1 137 1 334 4 204 1 66 1 290 5 51 5 49 1 241 2 
141 2 346 1 168 1 99 2 371 1 290 2 51 2 334 2 
141 3 99 3 290 3 49 1 51 3 334 3 204 1 241 1 
141 1 168 1 99 1 371 1 290 1 51 1 334 1 
141 1 210 1 168 1 99 1 25 1 290 1 51 1 334 1 204 1 
210 1 141 4 294 1 212 2 168 1 296 1 99 3 272 1 273 1 198 1 226 1 276 1 368 1 228 1 248 1 62 1 107 1 36 1 68 1 306 1 256 1 40 1 258 1 356 1 110 1 312 1 112 1 284 1 334 3 204 2 236 1 286 1 376 1 185 1 186 1 289 1 377 1 290 4 49 1 51 3 339 1 140 1 241 1 242 1 
95 1 141 2 99 1 41 1 290 2 49 1 51 2 334 1 241 1 
210 1 141 3 306 1 168 1 99 3 258 1 312 1 136 1 112 1 334 3 204 1 368 1 289 1 163 1 290 3 51 3 242 1 241 2 68 1 
210 1 141 2 99 2 334 2 204 1 207 1 30 1 290 2 51 2 241 1 
141 1 294 1 356 1 110 1 272 1 236 1 186 1 185 1 276 1 248 1 62 1 290 1 49 1 140 1 339 1 
141 1 294 1 356 1 110 1 195 1 236 1 186 1 75 1 185 1 276 1 248 1 62 1 290 1 49 1 339 1 
96 1 341 1 212 2 57 1 122 2 198 1 30 2 226 1 228 4 107 1 305 1 69 1 308 2 40 1 176 1 149 1 43 1 284 2 286 1 207 2 376 1 288 1 261 1 48 1 
141 1 306 1 168 1 346 1 99 1 290 1 51 1 334 1 
132 1 238 1 178 1 
170 1 132 2 238 2 190 1 180 1 33 1 
132 1 238 1 
132 1 238 1 
190 1 33 1 
190 1 33 1 
190 1 33 1 
132 1 315 1 238 1 
132 1 315 1 238 1 
132 1 315 1 238 1 
132 1 238 1 321 1 
132 1 238 1 321 1 
132 1 238 1 321 1 
141 2 167 1 54 1 99 2 2 1 220 1 124 1 29 1 326 1 368 1 279 1 230 1 132 1 178 1 334 2 113 1 374 1 285 1 238 1 289 1 290 2 49 1 51 2 380 1 
230 2 132 2 54 3 2 2 27 1 357 1 113 1 123 1 20 1 170 1 124 2 326 2 238 2 289 2 368 2 208 1 163 1 320 1 351 2 
139 1 255 2 55 2 150 1 102 1 
55 1 3 1 150 1 
139 1 55 1 3 1 
139 1 255 1 55 3 150 2 102 1 189 1 
139 1 255 1 55 2 150 1 102 1 72 1 
77 1 215 2 57 1 365 4 344 1 220 1 103 2 9 1 368 5 370 1 145 1 85 1 279 1 35 1 280 1 251 3 69 1 15 1 88 2 233 2 155 3 374 1 116 1 288 1 261 1 289 5 336 1 163 2 24 1 322 1 240 1 292 1 
78 1 215 6 57 3 365 7 220 4 344 1 126 1 9 2 368 9 370 1 329 1 145 2 330 1 280 2 251 8 38 1 69 3 15 3 148 5 88 6 233 6 311 5 155 9 154 1 116 2 288 3 261 3 289 9 336 1 318 1 163 5 24 2 322 6 240 3 292 1 
77 1 215 2 57 1 365 2 220 1 103 1 126 1 9 1 368 3 370 1 145 1 85 1 280 1 251 3 69 1 15 2 233 2 88 2 155 4 116 1 288 1 289 3 261 1 163 3 24 1 240 1 
77 1 78 1 215 4 57 2 365 3 220 2 103 2 126 1 9 1 368 4 370 1 145 1 85 1 330 1 280 1 251 5 69 2 15 3 88 4 233 4 155 7 116 1 288 2 289 4 261 2 318 1 163 4 24 1 240 2 
130 1 
62 1 328 1 169 1 
52 1 62 1 
185 1 62 1 339 1 
274 1 62 1 
62 1 339 1 
301 1 185 1 62 3 328 2 313 1 339 1 
353 1 69 1 16 1 342 1 257 1 308 4 176 2 149 3 100 1 270 2 57 1 284 3 375 1 237 1 260 1 161 1 228 7 281 1 
212 2 342 1 270 3 100 2 57 4 59 1 7 3 198 1 226 1 228 31 107 1 350 1 229 1 281 2 353 1 131 1 69 4 16 2 257 2 308 16 176 5 40 1 149 10 310 4 179 1 284 15 237 1 314 1 260 1 288 3 261 3 161 5 317 1 240 3 
212 4 342 1 270 2 100 1 57 1 198 2 226 2 228 9 107 2 303 1 281 1 353 1 69 1 175 1 16 1 308 5 257 1 40 2 176 3 149 4 284 4 237 1 161 1 317 1 
353 1 69 1 16 1 342 1 257 1 308 4 176 2 149 3 100 1 270 2 57 1 284 3 237 1 260 1 161 1 228 7 281 1 
353 1 69 1 16 1 342 1 257 1 308 4 176 2 149 3 100 1 270 2 57 1 284 3 237 1 260 1 161 1 228 7 281 1 
293 1 211 1 254 1 294 1 18 1 356 1 110 1 58 2 44 1 219 2 28 1 236 1 83 1 8 1 186 1 348 2 162 1 248 1 369 2 62 1 118 1 146 1 339 1 
53 1 294 1 214 1 55 2 121 1 3 1 58 1 142 1 219 1 28 1 6 1 369 1 248 1 348 1 127 1 254 1 373 1 18 1 150 1 110 1 236 1 139 1 186 1 188 1 162 1 189 1 
53 1 294 1 214 1 55 2 121 1 3 1 58 1 142 1 4 1 219 1 28 1 6 1 367 1 369 1 248 1 348 1 127 1 147 1 254 1 373 1 18 2 150 1 110 1 236 1 138 1 90 1 139 1 186 1 162 2 189 1 
211 1 294 1 214 1 55 2 3 1 56 1 58 1 142 1 219 1 28 1 6 1 367 1 369 1 248 1 348 1 127 1 147 1 254 1 373 1 18 3 150 1 110 1 236 1 138 2 90 1 139 1 186 1 188 1 162 3 189 1 
294 1 373 1 55 2 3 1 18 2 150 1 110 1 56 1 58 1 142 1 219 1 236 1 138 2 90 1 139 1 186 1 367 1 127 1 162 2 188 1 248 1 369 1 348 1 189 1 147 1 
50 1 
141 1 340 2 294 1 244 1 9 1 347 4 248 2 62 1 145 1 64 2 249 1 146 1 251 2 352 1 68 1 15 2 306 1 356 2 110 1 151 1 312 1 358 2 155 2 71 1 74 1 163 2 24 1 322 6 209 1 267 2 168 1 82 2 325 1 224 2 227 1 368 5 370 1 280 1 134 2 177 1 233 2 41 1 283 1 44 1 236 2 91 1 287 1 186 2 289 5 336 3 290 1 51 1 292 1 339 1 242 1 
141 1 267 1 119 1 168 1 244 1 368 3 347 2 352 1 68 1 306 1 41 1 312 1 283 1 91 1 287 1 289 3 336 1 290 1 322 2 51 1 209 1 242 1 
141 1 119 1 168 1 244 1 82 1 368 3 347 3 370 1 352 1 68 1 306 1 41 1 312 1 283 1 91 1 287 1 289 3 336 1 163 1 322 1 290 1 51 1 209 1 242 1 
141 1 267 1 119 1 168 1 244 1 82 1 368 3 347 3 370 1 64 1 352 1 68 1 306 1 41 1 312 1 283 1 91 1 287 1 289 3 336 1 163 1 290 1 322 2 51 1 209 1 242 1 
141 1 340 2 244 1 245 1 9 1 347 6 63 1 64 4 68 1 352 1 251 1 14 1 306 1 15 2 312 1 358 2 163 5 24 1 322 7 266 1 209 1 267 4 119 1 168 1 82 4 325 1 224 2 368 5 227 1 370 5 280 1 372 1 134 2 41 1 233 1 283 1 91 1 287 1 289 5 336 3 290 1 51 1 292 1 242 1 
141 1 340 2 244 1 9 1 347 4 64 2 68 1 352 1 251 1 306 1 15 2 312 1 358 2 155 2 74 1 163 2 24 1 322 4 209 1 267 2 168 1 325 1 82 2 224 2 368 4 227 1 370 1 280 1 134 2 41 1 233 1 283 1 91 1 287 1 289 4 336 2 290 1 51 1 292 1 242 1 
267 2 141 1 340 2 168 1 244 1 245 1 82 2 325 1 224 2 9 1 227 1 368 4 347 4 370 1 63 1 64 2 251 1 280 1 352 1 68 1 14 1 15 2 306 1 134 2 233 1 41 1 312 1 283 1 358 2 91 1 287 1 289 4 336 2 163 1 24 1 322 4 290 1 51 1 292 1 209 1 242 1 
267 2 141 1 340 2 168 1 244 1 245 1 82 2 325 1 224 2 9 1 227 1 368 4 347 4 370 1 63 1 64 2 251 1 280 1 352 1 68 1 14 1 15 2 306 1 134 2 233 1 41 1 312 1 283 1 358 2 91 1 287 1 289 4 336 2 163 1 24 1 322 4 290 1 51 1 292 1 209 1 242 1 
267 2 141 1 340 2 168 1 244 1 82 2 125 2 222 2 246 1 224 2 9 1 227 1 368 4 347 4 370 1 63 1 106 1 64 2 251 1 280 1 352 1 68 1 306 1 233 1 41 1 312 1 283 1 155 2 91 1 287 1 289 4 336 2 263 1 163 1 24 1 322 4 290 1 51 1 292 1 209 1 242 1 
141 1 267 3 340 2 168 1 244 1 245 1 325 1 82 3 224 2 9 1 227 1 368 4 347 5 370 1 63 1 64 3 251 1 280 1 352 1 68 1 14 1 15 2 306 1 372 1 134 2 233 1 41 1 312 1 283 1 358 2 91 1 287 1 289 4 336 2 163 1 24 1 290 1 322 5 51 1 292 1 209 1 242 1 
141 1 267 3 340 2 168 1 244 1 245 1 325 1 82 3 224 2 9 1 227 1 368 4 347 5 370 1 63 1 64 3 251 1 280 1 352 1 68 1 14 1 15 2 306 1 372 1 134 2 233 1 41 1 312 1 283 1 358 2 91 1 287 1 289 4 336 2 163 1 24 1 290 1 322 5 51 1 292 1 209 1 242 1 
141 1 340 2 244 1 9 1 347 4 64 2 68 1 352 1 251 1 306 1 312 1 155 2 74 1 263 1 163 1 24 1 322 4 209 1 267 2 168 1 82 2 125 2 222 2 224 2 368 4 227 1 370 1 280 1 41 1 233 1 283 1 91 1 287 1 289 4 336 2 290 1 51 1 292 1 242 1 
141 1 294 2 212 4 324 1 296 1 99 1 4 1 198 2 226 2 248 7 228 2 62 3 107 2 32 1 65 1 146 1 13 1 305 1 39 1 307 1 308 1 40 2 356 2 110 2 333 1 334 1 284 1 44 1 205 2 236 8 286 2 376 2 186 8 188 1 117 1 290 1 51 1 241 1 339 2 
210 1 141 1 212 2 99 1 57 1 122 1 5 1 30 1 198 1 226 1 228 3 107 1 174 1 69 1 308 1 176 1 40 1 149 1 334 1 284 2 204 1 286 1 207 1 376 1 288 1 261 1 290 1 51 1 240 1 
212 2 342 1 270 1 57 1 122 1 169 1 30 1 198 1 226 1 228 6 107 1 305 1 353 1 69 1 16 1 257 1 308 3 40 1 176 2 149 2 284 3 286 1 207 1 237 1 376 1 49 2 
212 4 296 1 0 1 57 2 59 1 122 11 7 3 221 1 144 1 198 2 30 11 226 2 228 14 107 2 174 1 131 1 69 1 307 1 308 8 176 1 40 2 133 1 149 2 310 3 284 6 286 1 207 4 376 2 288 1 261 2 161 1 49 1 240 2 
141 2 294 1 212 2 295 1 296 1 99 1 272 1 198 1 226 1 276 1 248 1 228 2 62 1 107 1 67 1 174 1 201 1 307 1 308 1 40 1 356 1 258 1 110 1 42 1 334 1 284 1 236 1 286 1 207 1 376 1 185 1 186 1 290 2 49 1 51 1 339 1 140 1 241 1 
141 3 294 2 342 1 296 1 99 1 57 3 60 1 198 3 248 3 62 2 107 3 252 1 353 1 69 3 16 1 17 2 70 2 257 1 307 1 308 10 356 1 258 1 149 8 110 2 207 7 261 2 161 4 212 6 362 2 270 1 272 2 122 7 30 7 226 3 275 2 276 2 228 20 36 2 174 1 176 4 40 3 232 1 284 10 334 1 236 3 286 3 237 1 376 3 186 3 185 2 288 2 188 1 290 3 49 2 51 1 240 2 241 1 140 2 339 2 
305 1 212 2 308 2 40 1 149 1 57 1 43 1 122 1 286 1 207 1 30 1 198 1 376 1 226 1 261 1 161 1 228 2 107 1 
305 1 212 2 69 1 176 1 40 1 149 1 122 1 284 2 286 1 207 1 30 1 198 1 376 1 226 1 288 1 228 2 107 1 48 1 
212 2 57 1 122 2 198 1 30 2 226 1 228 4 107 1 305 1 69 1 308 2 40 1 176 1 149 2 284 2 286 1 207 2 376 1 288 1 261 1 161 1 240 1 
212 2 324 1 308 2 40 1 149 1 57 1 43 1 122 1 286 1 207 1 30 1 198 1 376 1 226 1 261 1 161 1 228 2 107 1 
212 2 69 1 324 1 176 1 40 1 149 1 122 1 284 2 286 1 207 1 30 1 198 1 376 1 226 1 288 1 228 2 107 1 48 1 
212 2 324 1 57 1 122 2 198 1 30 2 226 1 228 4 107 1 69 1 308 2 40 1 176 1 149 2 284 2 286 1 207 2 376 1 288 1 261 1 161 1 240 1 
69 1 212 2 308 2 176 1 40 1 149 2 57 1 284 2 122 2 286 1 207 2 30 2 198 1 376 1 288 1 226 1 261 1 161 1 228 4 107 1 240 1 
141 1 294 1 212 2 296 1 272 1 198 1 226 1 276 1 228 2 248 1 62 1 107 1 36 1 308 1 307 1 40 1 356 1 110 1 284 1 236 1 286 1 376 1 185 1 186 1 290 1 49 1 339 1 140 1 
141 1 294 1 212 2 296 1 195 1 198 1 226 1 276 1 228 2 248 1 62 1 107 1 308 1 307 1 40 1 356 1 110 1 284 1 236 1 286 1 376 1 185 1 75 1 186 1 379 1 290 1 49 1 339 1 
212 2 57 1 122 2 198 1 30 2 226 1 228 4 107 1 174 1 69 1 308 2 40 1 176 1 149 2 284 2 286 1 207 2 376 1 288 1 261 1 161 1 240 1 
141 1 294 1 212 2 272 1 57 1 4 1 122 2 30 2 198 1 226 1 276 1 275 1 228 4 248 1 62 1 107 1 36 1 69 1 308 2 176 1 40 1 149 2 110 1 284 2 236 1 286 1 207 2 376 1 288 1 185 1 186 1 261 1 161 1 290 1 240 1 140 1 339 1 
210 1 141 1 212 2 99 1 57 1 122 1 197 1 198 1 30 1 226 1 228 3 107 1 174 1 69 1 308 2 40 1 149 1 284 1 334 1 204 1 286 1 207 1 376 1 288 1 261 1 161 1 290 1 51 1 240 1 
212 4 57 3 343 1 59 1 7 1 198 2 226 2 200 1 228 19 107 2 131 1 69 3 175 1 308 9 176 3 40 2 149 6 87 2 310 2 135 1 235 2 284 10 158 1 288 3 261 3 264 1 161 3 47 1 165 1 240 3 
212 6 57 3 300 1 7 2 198 3 226 3 200 1 228 26 107 3 69 2 131 2 175 1 308 14 176 2 40 3 149 4 87 1 111 1 135 2 310 2 234 1 235 4 259 1 203 1 284 12 288 2 261 3 161 2 317 2 264 1 47 2 165 1 23 1 240 3 
342 1 57 5 343 1 59 1 300 1 7 3 198 3 200 1 107 3 353 1 69 5 16 1 308 20 257 1 149 8 310 4 111 1 259 1 203 1 261 4 161 4 264 1 317 1 23 1 165 1 212 6 270 1 226 3 228 41 131 3 175 1 40 3 176 4 87 1 135 2 234 1 235 4 284 21 237 1 288 4 47 1 337 1 240 4 
212 8 342 1 270 1 57 5 343 1 300 1 59 1 7 3 198 4 226 4 200 1 228 38 107 4 353 1 131 3 69 4 16 1 175 1 257 1 308 20 176 4 40 4 149 7 87 1 111 1 310 4 135 2 234 1 203 1 259 1 235 4 284 18 237 1 288 3 261 4 317 2 264 1 161 3 47 1 165 1 23 1 337 1 240 4 
212 4 342 1 270 1 57 8 300 1 59 2 7 4 198 2 226 2 200 1 228 52 107 2 353 1 131 2 69 8 16 1 175 1 257 1 308 27 176 7 40 2 133 2 149 14 87 1 111 1 310 4 135 1 234 1 203 1 259 1 235 4 284 25 237 1 288 7 261 7 317 1 264 1 161 7 47 1 165 1 23 1 240 7 
170 1 124 1 354 1 230 1 132 1 326 1 238 1 2 1 357 1 123 1 
285 1 178 1 
124 1 230 1 132 1 326 1 105 1 238 1 2 1 79 1 93 1 
315 1 187 1 
364 1 321 1 180 1 
230 1 132 1 54 2 2 1 27 1 357 1 113 1 123 1 20 1 170 1 124 1 326 1 238 1 289 1 368 1 163 1 320 1 351 1 
230 1 132 1 54 2 2 1 27 1 357 1 113 1 123 1 20 1 170 1 124 1 326 1 238 1 289 1 368 1 163 1 320 1 351 1 
230 1 132 1 54 2 2 1 27 1 357 1 113 1 123 1 20 1 170 1 124 1 326 1 238 1 289 1 368 1 163 1 320 1 351 1 
315 1 187 1 180 1 
315 1 187 1 180 1 
364 1 321 1 
364 1 321 1 180 1 
29 1 380 1 
141 2 167 1 54 1 99 2 2 1 365 1 220 1 124 1 29 1 104 1 326 1 368 1 279 1 351 1 230 1 132 1 178 1 374 1 334 2 20 1 285 1 238 1 289 1 290 2 49 1 380 1 51 2 
141 2 294 1 212 2 296 1 216 1 198 1 226 1 228 2 248 2 62 1 107 1 32 1 12 1 253 1 174 1 282 1 39 1 307 1 308 1 40 1 110 1 284 1 205 2 236 2 286 1 376 1 186 2 290 2 51 2 191 1 339 1 
294 1 363 1 356 1 110 1 58 1 44 1 236 1 8 1 186 1 248 1 62 1 146 1 339 1 94 1 
294 1 55 2 3 1 150 1 110 1 58 1 142 1 6 1 236 1 139 1 186 1 188 1 248 1 127 1 349 1 189 1 239 1 94 1 
294 1 55 2 3 1 150 1 110 1 58 1 142 1 4 1 6 1 236 2 139 1 186 2 188 1 248 2 127 1 349 1 189 1 239 1 94 1 
294 1 55 2 3 1 271 1 150 1 110 1 58 1 142 1 6 1 236 1 139 1 186 1 188 1 248 1 127 1 189 1 239 1 
331 1 
109 1 19 1 233 1 9 1 370 1 163 1 24 1 292 1 280 1 251 1 
15 5 69 2 268 1 362 1 215 5 233 5 88 5 57 2 155 10 288 2 261 2 163 5 46 2 240 2 251 5 
368 1 289 1 336 1 163 1 370 1 322 1 
294 1 345 2 126 1 9 2 368 3 248 4 62 1 145 2 11 1 249 1 146 1 280 2 129 1 251 2 37 1 356 2 110 1 177 1 233 2 71 2 44 1 236 4 186 4 289 3 336 2 24 2 322 4 292 1 339 1 
109 1 163 1 370 1 233 1 19 1 251 1 169 1 
325 1 9 1 368 1 370 1 251 1 280 1 15 1 134 1 233 1 358 1 155 1 289 1 336 1 163 2 24 1 322 1 292 1 
52 3 294 3 57 2 4 1 345 1 301 1 9 4 248 3 62 10 145 2 251 9 15 6 69 2 109 1 356 1 110 4 19 1 153 2 155 12 71 1 261 2 360 2 163 8 24 4 322 5 268 2 362 2 215 6 217 1 274 2 327 2 84 2 368 5 370 2 328 2 128 2 129 1 280 4 88 6 233 8 183 1 236 3 185 3 186 3 288 2 289 5 336 3 46 2 92 1 338 2 292 4 240 2 339 3 242 2 
268 1 215 5 57 2 300 1 7 1 9 2 368 1 370 2 145 1 251 8 280 2 131 1 15 3 69 2 88 5 310 1 233 5 234 1 155 6 259 1 203 1 71 1 316 1 288 2 289 1 261 2 336 1 163 5 319 1 46 2 23 1 24 2 322 1 292 2 240 2 
141 1 268 1 168 1 99 1 80 1 57 2 9 1 368 1 61 1 371 1 280 1 251 2 14 1 353 1 69 1 16 1 256 1 257 1 233 2 202 1 334 1 204 1 289 1 46 2 24 1 290 1 51 1 292 1 
141 3 294 1 212 2 296 1 99 2 272 1 198 1 226 1 276 1 228 1 248 1 62 1 107 1 36 1 256 1 40 1 356 1 110 1 284 1 334 2 204 2 236 1 286 1 376 1 186 1 185 1 377 1 290 3 49 1 51 2 140 1 339 1 
15 2 215 2 270 1 88 2 233 2 155 4 71 1 9 1 370 2 163 4 145 1 24 1 292 1 280 1 251 1 
124 1 29 1 22 1 326 1 357 1 
124 1 326 1 86 1 
124 1 326 1 86 1 
124 1 326 1 86 1 
124 1 326 1 1 1 
124 1 326 1 1 1 
124 1 326 1 1 1 
124 1 326 1 
132 1 238 1 
353 1 212 2 69 2 175 1 16 2 257 2 308 5 40 1 176 3 149 5 80 1 57 2 284 5 198 1 226 1 161 2 228 10 107 1 
212 2 175 1 308 2 40 1 149 1 57 1 198 1 226 1 261 1 228 2 161 1 107 1 
69 1 212 2 175 1 308 2 176 1 40 1 149 2 57 1 284 2 198 1 288 1 226 1 261 1 228 4 161 1 107 1 240 1 
212 6 175 1 16 1 257 1 308 1 297 1 40 3 176 1 149 2 343 1 284 2 198 3 226 3 317 1 228 3 161 1 107 3 
213 1 212 10 342 1 297 1 270 1 57 5 343 1 59 1 7 3 198 5 226 5 228 34 107 5 350 1 229 1 353 2 131 1 69 5 16 3 175 1 257 3 308 16 40 5 176 7 149 12 310 4 179 1 284 18 237 1 288 3 261 3 317 2 161 5 240 3 
353 1 69 1 212 4 342 1 16 1 308 4 257 1 176 2 40 2 270 1 149 3 57 1 284 4 198 2 237 1 226 2 228 8 161 1 317 1 107 2 
353 1 69 1 342 1 16 1 257 1 308 3 176 2 270 1 149 2 57 1 284 3 169 1 237 1 228 6 
69 1 213 1 212 2 308 2 176 1 40 1 149 2 57 1 284 2 198 1 288 1 226 1 261 1 228 4 161 1 107 1 240 1 
69 1 131 1 308 3 176 1 149 2 310 2 57 1 59 1 284 4 7 1 288 1 261 1 228 7 161 1 240 1 
212 4 342 1 297 1 270 1 57 3 59 1 7 2 144 1 198 2 226 2 228 23 107 2 353 1 69 3 16 2 257 2 308 11 176 5 40 2 149 9 133 1 310 2 284 12 237 1 288 2 261 2 161 4 317 2 240 2 
228 1 310 1 284 1 
308 1 228 1 7 1 
212 2 213 1 69 1 362 1 308 3 40 1 176 2 149 3 57 1 284 3 198 1 226 1 288 1 261 1 228 6 161 1 107 1 240 1 
212 2 57 2 300 1 7 1 198 1 226 1 228 12 107 1 131 1 69 2 175 1 308 6 40 1 176 1 149 2 310 1 234 1 259 1 203 1 284 6 288 2 261 2 161 1 23 1 240 2 
353 1 69 1 16 1 308 3 257 1 176 1 149 2 57 1 284 3 228 6 161 1 
212 2 16 1 342 1 308 1 257 1 176 1 297 1 40 1 149 2 284 2 198 1 237 1 226 1 161 1 228 3 317 1 107 1 
212 2 342 1 270 1 57 1 7 1 198 1 226 1 228 8 107 1 353 1 69 1 131 1 175 1 16 1 308 4 257 1 40 1 176 2 149 2 310 1 259 1 284 4 237 1 
212 4 213 1 342 1 270 1 57 2 59 1 7 1 198 2 226 2 228 11 107 2 353 1 69 1 131 1 16 1 175 1 257 1 308 6 176 2 40 2 149 3 310 2 259 1 284 5 237 1 261 1 161 1 240 1 
213 1 212 6 342 1 270 1 57 3 300 1 7 1 198 3 226 3 228 19 107 3 353 1 131 1 69 3 16 1 175 1 257 1 308 9 40 3 176 3 149 4 310 1 234 1 259 1 203 1 284 10 237 1 288 2 261 2 161 1 317 1 23 1 240 2 
213 1 212 6 342 1 270 1 57 3 300 1 7 1 198 3 226 3 228 17 107 3 353 1 131 1 69 2 16 1 175 1 257 1 308 10 40 3 176 3 149 5 310 1 234 1 259 1 203 1 284 7 237 1 288 1 261 2 317 1 161 2 23 1 240 2 
212 2 342 1 270 1 57 1 7 1 198 1 226 1 228 8 107 1 353 1 69 1 131 1 175 1 16 1 308 4 257 1 40 1 176 2 149 2 310 1 259 1 284 4 237 1 
212 2 57 2 300 1 7 1 198 1 226 1 228 12 107 1 131 1 69 2 175 1 308 6 40 1 176 1 149 2 310 1 234 1 259 1 203 1 284 6 288 2 261 2 161 1 23 1 240 2 
213 1 212 8 342 1 270 1 57 3 300 1 7 1 198 4 226 4 228 18 107 4 353 1 131 1 69 2 16 1 175 1 257 1 308 10 40 4 176 3 149 5 310 1 234 1 259 1 203 1 284 8 237 1 288 1 261 2 161 2 317 2 23 1 240 2 
212 8 57 3 343 1 300 1 7 1 198 4 226 4 228 16 107 4 131 1 69 2 175 1 308 9 40 4 176 3 149 6 310 1 234 1 259 1 203 1 284 7 288 2 261 3 161 3 317 2 23 1 240 3 
353 1 69 1 342 2 16 3 257 3 308 3 176 3 149 6 57 1 284 4 237 1 228 7 161 3 
212 8 342 1 270 1 57 3 343 1 300 1 7 1 198 4 226 4 228 18 107 4 353 1 131 1 69 2 16 1 175 1 257 1 308 10 40 4 176 3 149 4 310 1 234 1 259 1 203 1 284 8 237 1 288 1 261 2 161 1 317 2 23 1 240 2 
141 1 95 1 41 1 290 1 49 1 51 1 181 1 
95 1 141 1 98 1 269 1 41 1 181 1 265 1 31 1 361 1 290 1 49 1 51 1 
294 1 356 1 110 1 4 1 44 1 236 4 247 1 186 4 248 4 62 1 278 1 146 1 339 1 
294 1 110 2 60 1 143 1 236 2 345 1 186 2 185 1 248 2 62 1 10 1 172 1 108 1 339 1 
236 1 294 1 139 1 55 1 186 1 3 1 127 1 248 1 356 1 110 1 
236 2 294 1 186 2 188 1 248 2 110 1 62 1 32 1 12 1 4 1 339 1 
13 1 294 2 356 1 110 2 333 1 4 1 44 1 236 5 345 1 247 1 186 5 248 4 62 3 32 1 146 1 339 2 
13 1 294 2 356 1 110 2 4 1 44 1 236 5 345 1 247 1 186 5 248 4 62 3 378 1 32 1 146 1 339 2 
236 1 294 1 186 1 248 1 356 1 110 1 62 1 146 1 44 1 339 1 169 1 
141 2 294 1 99 1 356 1 110 1 334 1 236 1 185 1 186 1 276 1 248 1 62 1 290 2 49 1 51 1 339 1 241 1 140 1 
141 2 294 1 168 1 99 2 345 1 274 1 276 1 248 1 62 3 68 1 306 1 110 1 334 1 236 1 186 1 185 2 360 1 290 2 49 1 51 2 140 1 241 1 339 2 
141 2 294 1 168 1 99 2 195 1 345 1 274 1 276 1 248 2 62 3 278 1 68 1 306 1 110 1 334 1 236 2 186 2 185 2 360 1 290 2 49 1 51 2 241 1 339 2 
52 1 294 1 356 1 231 1 110 1 81 1 236 3 345 1 274 1 185 1 186 3 289 2 368 2 248 3 163 1 370 1 360 1 62 4 328 1 278 1 322 1 242 1 339 1 
52 1 294 1 356 1 110 1 153 1 236 3 345 1 274 1 185 1 186 3 289 2 368 2 248 3 163 1 370 1 360 1 62 4 328 1 278 1 322 1 242 1 339 1 
236 1 294 1 186 1 248 1 110 1 117 1 
13 1 294 2 356 2 110 3 152 1 333 1 4 1 205 1 143 1 236 7 301 1 186 7 185 1 188 1 248 6 62 3 117 1 32 1 65 1 172 1 339 2 
141 2 294 1 212 4 342 1 99 1 270 1 272 1 57 1 4 1 122 1 30 1 198 2 226 2 276 1 275 1 228 6 248 1 62 1 107 2 36 1 353 1 174 1 69 1 16 1 17 1 308 3 257 1 176 2 40 2 149 2 110 1 284 3 334 1 236 1 286 2 207 1 237 1 376 2 185 1 186 1 290 2 49 2 51 1 191 1 339 1 241 1 140 1 
52 1 365 1 9 2 368 3 84 1 248 1 370 1 62 2 328 1 128 1 251 1 280 2 129 1 109 1 356 1 233 1 19 1 153 1 236 1 186 1 289 3 336 1 163 1 24 2 322 2 292 2 338 1 242 1 
294 1 110 2 4 1 183 1 236 2 301 1 186 2 185 1 248 2 62 2 328 1 117 1 339 1 
141 2 294 1 99 1 356 1 110 1 195 1 334 1 236 1 185 1 186 1 276 1 248 1 62 1 290 2 49 1 51 1 339 1 241 1 
294 1 110 2 152 1 143 1 236 1 345 1 301 1 186 1 185 1 248 1 62 1 172 1 339 1 
304 1 193 1 262 1 49 1 291 1 
304 2 306 1 168 1 193 1 312 1 365 1 112 1 160 1 114 1 289 2 368 2 262 2 163 1 370 1 49 1 291 2 242 1 68 1 323 1 
253 1 141 1 304 1 282 1 193 1 216 1 262 1 290 1 51 1 
114 1 160 1 193 1 
254 1 90 1 367 1 121 1 18 1 162 1 147 1 28 1 
254 1 97 1 120 1 18 4 332 1 28 1 138 2 196 1 90 2 199 1 367 2 45 1 162 4 147 3 
254 1 243 1 121 1 18 2 157 1 28 1 138 1 90 1 367 1 162 2 335 1 147 1 
254 1 120 2 121 1 18 3 218 1 28 1 196 1 90 1 367 1 162 3 45 2 147 1 
159 2 26 1 147 2 156 1 
254 1 121 1 18 1 162 1 298 1 28 1 
254 1 138 1 90 1 367 1 121 1 18 2 162 2 164 1 147 1 28 1 
299 1 
254 1 90 1 367 1 121 1 18 1 162 1 147 1 28 1 
90 1 367 1 147 1 169 1 
254 1 90 1 367 1 18 1 162 1 147 1 28 1 
348 1 369 1 18 1 
254 1 120 1 121 1 18 3 28 1 21 1 196 1 90 1 367 1 162 3 45 2 147 1 
254 1 138 1 90 1 367 1 277 1 18 2 162 2 147 1 28 1 
254 1 55 1 199 1 121 1 3 1 18 1 162 1 150 1 147 1 73 1 28 1 
254 1 90 1 121 1 18 1 162 1 147 1 28 1 
254 1 90 2 367 1 121 1 18 1 162 1 28 1 
254 1 359 1 121 1 18 1 162 1 89 1 28 1 
254 1 121 1 355 1 18 3 332 1 28 1 138 2 90 1 199 1 367 1 162 3 164 1 147 2 
254 1 55 2 121 1 18 2 3 1 150 1 28 1 184 1 138 1 90 1 139 1 367 1 162 2 189 1 147 1 
254 2 121 1 18 4 332 1 28 2 138 2 90 1 199 1 367 1 162 4 277 1 171 1 147 2 
254 1 138 1 90 1 367 1 121 1 45 1 18 3 162 3 164 1 147 1 28 1 
97 1 199 1 332 1 147 1 
90 1 147 1 

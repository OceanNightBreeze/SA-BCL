#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 334 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
338 1 0 4 90 9 91 1 2 1 362 1 3 2 341 1 95 5 23 1 300 2 181 1 229 9 246 2 204 1 66 1 105 6 249 1 250 2 77 1 109 1 375 1 239 1 218 1 256 3 54 2 380 2 242 2 
338 1 0 4 90 9 91 1 2 1 362 1 3 2 341 1 95 5 23 1 300 2 181 1 229 9 246 2 204 1 66 1 105 6 249 1 250 2 77 1 109 1 375 1 239 1 218 1 256 3 54 2 380 2 242 2 
338 1 0 5 90 10 91 1 2 1 362 1 3 2 341 1 95 6 23 1 300 2 181 1 229 10 246 2 204 1 66 1 105 7 249 1 250 2 77 1 109 1 375 1 239 1 218 1 256 4 54 2 380 2 242 2 
338 1 0 3 90 7 91 1 2 1 362 1 3 2 341 1 95 4 23 1 300 2 181 1 229 7 246 2 204 1 66 1 105 4 250 1 77 1 109 1 375 1 239 1 218 1 256 2 54 2 380 2 242 2 
0 2 90 4 91 1 2 1 23 1 95 3 375 1 300 1 181 1 229 4 246 1 256 1 54 1 380 1 105 3 249 1 250 2 242 1 
90 2 91 1 165 1 3 1 109 1 95 1 375 1 181 1 229 2 142 1 218 1 246 1 145 1 54 1 380 1 242 1 
0 1 90 3 91 1 3 1 95 2 375 1 181 1 229 3 246 2 256 1 66 1 54 2 105 1 
0 4 90 9 91 1 2 1 3 1 95 5 23 1 299 1 300 1 181 1 229 9 246 2 66 1 105 7 249 1 250 2 77 1 375 1 239 1 256 3 196 1 54 2 380 1 242 1 
0 4 90 9 91 1 2 1 3 1 95 5 23 1 299 1 300 1 181 1 229 9 246 2 66 1 105 7 249 1 250 2 77 1 375 1 239 1 256 3 196 1 54 2 380 1 242 1 
294 1 319 1 88 1 
115 2 189 1 319 1 
195 2 327 1 52 2 257 1 237 2 197 2 228 2 171 2 
58 1 339 1 151 1 363 2 92 1 366 1 228 3 342 1 324 1 101 1 231 1 232 1 344 1 71 1 73 2 9 1 40 2 278 1 349 2 327 1 237 3 80 1 253 2 192 1 171 2 331 1 34 1 316 1 84 1 14 1 195 2 85 1 222 1 52 2 257 1 320 1 197 2 
43 1 195 1 52 1 257 1 307 1 237 1 197 1 228 1 171 1 98 1 
312 1 294 1 43 2 137 1 237 2 191 1 228 2 171 1 98 1 376 1 217 1 157 1 195 2 52 1 257 1 307 1 319 1 197 1 
312 1 294 1 43 2 137 1 237 2 22 1 191 1 228 2 98 1 171 2 217 1 195 2 52 2 257 1 307 1 319 1 197 2 76 1 
99 1 280 1 22 1 163 1 76 1 
294 1 99 1 280 1 378 1 22 2 319 1 162 1 76 2 
99 1 22 1 76 1 
312 1 43 1 280 1 237 1 22 1 228 1 98 1 171 1 195 1 52 1 257 1 307 1 197 1 76 1 
319 1 
294 1 99 1 280 1 325 1 22 2 319 1 162 1 76 2 
236 1 263 1 294 1 280 2 150 2 30 1 22 5 47 1 374 1 351 1 123 2 302 1 99 2 333 2 184 1 308 1 319 1 162 1 76 5 
327 1 88 1 
327 2 237 2 228 2 171 1 156 1 195 2 52 1 69 1 197 1 
51 1 25 1 347 1 
264 1 349 1 327 1 151 1 237 1 253 1 366 1 192 1 228 1 84 1 342 1 101 1 85 1 344 1 320 1 40 1 
149 1 349 1 151 1 237 2 253 1 269 1 192 1 366 1 228 2 171 1 342 1 84 1 85 1 195 1 101 1 344 1 52 1 347 1 320 1 40 1 
149 1 195 3 327 1 52 3 237 3 197 1 228 3 171 3 
43 1 195 1 52 1 307 1 237 1 228 1 171 1 
156 1 43 1 195 1 52 1 69 1 237 1 197 1 228 1 171 1 
149 1 43 1 44 1 137 1 237 2 329 1 191 1 269 1 228 2 171 2 217 1 156 1 195 2 52 2 197 1 
149 1 112 1 195 2 327 1 52 1 237 2 228 2 376 1 171 1 
149 1 43 1 44 1 137 1 237 1 269 1 191 1 228 1 171 1 217 1 195 1 52 1 334 1 
149 1 237 2 228 2 171 2 156 1 195 2 52 2 25 1 347 1 197 1 
349 1 327 1 151 1 237 1 253 1 366 1 192 1 228 1 84 1 342 1 101 1 85 1 344 1 40 1 320 1 
349 1 327 1 237 1 253 1 36 1 245 1 192 1 228 1 84 1 342 1 101 1 85 1 344 1 40 1 320 1 
358 1 363 4 153 1 268 1 324 1 102 1 231 1 25 2 71 2 39 1 347 2 73 2 80 1 81 1 284 1 34 1 331 2 316 1 13 1 14 1 219 1 51 2 17 1 291 1 
43 1 195 1 1 1 52 1 137 1 237 1 228 1 171 1 
149 2 327 1 237 5 269 1 228 5 376 1 171 4 216 1 112 1 156 1 195 5 286 1 52 4 197 1 
1 1 43 1 195 2 52 2 307 1 237 2 228 2 171 2 
146 1 330 1 
146 1 330 1 
285 1 357 1 
285 1 357 1 
285 1 357 1 
212 1 146 1 330 1 
212 1 146 1 330 1 
6 1 146 1 330 1 
285 1 357 1 372 1 146 2 323 1 330 2 
212 1 146 1 330 1 
373 1 146 1 330 1 
373 1 146 1 330 1 
373 1 146 1 330 1 
372 1 313 1 361 2 29 1 295 3 20 1 122 2 31 1 22 2 330 2 24 1 143 1 318 2 194 2 379 1 146 2 319 1 27 2 76 2 
360 1 361 1 295 1 122 1 266 1 22 1 97 1 24 1 228 2 6 1 132 1 348 1 76 1 327 1 237 2 282 1 330 1 171 2 318 1 194 1 195 2 52 2 53 1 146 1 
380 1 300 1 242 1 
145 1 380 1 242 1 
145 1 271 1 380 3 300 2 18 1 178 1 
145 1 380 2 300 1 261 1 18 1 178 1 
145 1 380 2 300 1 178 1 18 2 
358 1 294 1 150 1 153 1 364 1 22 5 123 1 302 1 124 1 99 1 102 1 184 3 162 1 348 1 132 1 76 5 280 4 328 1 189 1 283 1 351 2 284 1 332 1 353 1 115 3 333 1 53 1 319 2 147 1 381 2 262 2 225 2 
358 3 294 1 150 2 227 1 153 3 364 2 22 9 61 1 123 2 302 1 124 1 99 6 303 1 102 3 126 5 184 8 306 1 162 1 132 4 163 5 76 9 252 1 280 7 47 1 189 3 351 6 284 3 332 3 353 2 115 9 333 2 117 1 319 5 381 6 262 6 
358 1 294 1 150 1 153 1 364 1 22 3 123 1 102 1 184 3 132 1 76 3 280 2 328 1 189 2 47 1 351 2 284 1 332 1 353 1 333 1 115 4 319 3 147 1 381 2 225 1 262 2 
358 2 294 1 150 1 153 2 364 1 22 4 123 1 303 1 102 2 184 5 306 1 132 2 76 4 252 1 280 3 328 1 189 3 47 1 351 4 284 2 332 2 353 1 115 7 333 1 319 4 147 1 381 4 262 4 225 2 
206 1 320 1 88 1 
320 1 321 1 
28 1 
342 1 320 1 
342 1 84 1 326 1 206 2 8 1 320 3 
342 1 84 1 320 1 
317 1 320 1 
209 1 45 2 243 1 363 7 281 1 60 1 331 3 284 1 13 3 102 1 15 1 288 1 130 1 71 4 290 1 119 1 291 2 
209 1 45 2 243 1 363 7 281 1 60 1 331 3 284 1 13 3 102 1 15 1 288 1 130 1 71 4 290 1 119 1 291 2 
209 1 45 2 243 1 363 7 281 1 60 1 331 3 284 1 13 3 102 1 15 1 288 1 130 1 71 4 259 1 290 1 119 1 291 2 
358 3 243 2 363 31 153 3 60 2 365 4 102 4 231 1 345 1 130 1 186 3 71 16 73 2 106 1 209 2 45 3 167 1 281 1 80 1 49 1 170 1 34 1 331 15 284 4 316 1 13 10 332 3 287 1 15 2 288 1 119 1 118 1 290 5 291 5 
363 9 243 1 60 1 340 1 244 1 102 1 231 2 130 1 71 5 73 4 209 1 45 2 167 1 281 1 80 2 284 1 34 2 331 4 316 2 13 4 15 1 290 1 119 1 291 3 
90 2 91 1 57 1 3 1 152 1 201 1 95 1 300 1 181 1 64 1 229 2 246 1 127 1 68 1 70 1 271 1 105 1 40 1 349 1 253 1 375 1 192 1 113 1 220 1 85 1 145 1 54 1 355 1 380 2 242 1 
90 3 57 1 3 1 152 1 201 1 95 1 300 1 181 1 64 1 229 3 246 1 127 1 271 1 70 1 105 2 40 1 349 1 41 1 314 1 253 1 375 1 192 1 83 1 220 1 85 1 145 1 54 1 355 1 380 2 242 1 
90 2 349 1 152 1 3 1 314 1 253 1 201 1 95 1 375 1 300 1 192 1 181 1 64 1 229 2 83 1 85 1 220 1 145 1 271 1 70 1 380 2 355 1 105 2 40 1 242 1 
90 1 3 2 201 2 229 1 342 1 246 1 101 1 70 2 40 1 10 1 75 1 208 1 164 1 349 1 41 1 253 1 190 1 315 1 192 1 85 1 54 1 355 2 320 1 
90 1 91 1 57 1 3 1 152 1 201 1 300 1 64 1 229 1 246 1 127 1 70 1 271 1 40 1 349 1 253 1 192 1 83 1 113 1 220 1 85 1 145 1 54 1 355 1 380 2 242 1 
179 1 
150 1 297 1 4 1 302 1 342 1 99 6 247 1 100 2 101 2 157 1 160 2 161 1 162 3 40 2 164 1 349 2 43 1 315 1 253 2 351 2 254 2 217 1 114 1 115 2 16 1 319 1 320 1 19 2 121 1 59 2 364 1 22 4 228 1 123 1 370 2 184 2 129 1 76 4 276 1 78 2 188 1 136 1 137 1 237 1 189 2 191 1 192 1 376 1 141 1 333 1 85 1 195 1 241 2 
121 1 43 1 136 1 297 1 137 1 237 1 22 1 191 1 228 1 376 1 217 1 99 1 157 1 195 1 129 1 161 1 76 1 78 1 
121 1 43 1 136 1 297 1 137 1 237 1 22 1 191 1 228 1 376 1 217 1 100 1 157 1 195 1 129 1 160 1 161 1 76 1 
121 1 297 1 22 2 228 1 99 2 157 1 100 1 129 1 160 1 325 1 161 1 162 1 76 2 78 1 43 1 136 1 137 1 237 1 191 1 376 1 217 1 195 1 19 1 
121 1 294 1 297 1 22 2 5 1 228 2 98 1 99 2 157 1 100 1 129 1 325 1 160 1 307 1 161 1 162 1 76 2 78 1 312 1 43 2 136 1 137 1 237 2 191 1 171 1 376 1 217 1 195 2 52 1 257 1 319 1 197 1 19 1 
294 1 150 1 297 1 4 1 302 1 99 4 157 1 100 2 247 1 160 2 161 1 162 2 43 1 351 1 254 2 217 1 114 1 115 2 319 1 19 2 121 1 59 2 22 3 228 1 123 1 370 2 184 1 129 1 76 3 78 2 136 1 137 1 237 1 189 2 191 1 376 1 195 1 333 1 241 2 
121 1 294 1 150 1 297 1 59 2 4 1 180 1 22 3 228 1 123 1 302 1 99 4 7 1 100 2 157 1 370 2 184 1 129 1 160 2 161 1 162 2 76 3 78 2 133 1 43 1 136 1 137 1 237 1 189 2 191 1 351 1 376 1 254 2 217 1 114 1 195 1 333 1 319 1 19 2 241 2 
294 1 150 1 297 1 4 1 98 1 302 1 7 1 99 4 157 1 100 2 160 2 307 1 161 1 162 2 312 1 43 2 171 1 351 1 254 2 217 1 114 1 52 1 257 1 319 1 19 2 121 1 180 1 59 2 22 3 228 2 123 1 370 2 129 1 184 1 76 3 78 2 133 1 136 1 137 1 237 2 189 2 191 1 376 1 333 1 195 2 197 1 241 2 
148 1 294 1 150 1 297 1 4 1 98 1 302 1 99 4 157 1 100 2 160 2 307 1 161 1 162 2 312 1 43 2 214 2 171 1 351 1 217 1 115 2 52 1 257 1 319 1 19 2 121 1 22 3 228 2 123 1 370 2 128 2 129 1 184 1 76 3 78 2 133 1 135 1 136 1 137 1 237 2 191 1 82 1 376 1 333 1 195 2 197 1 241 2 
294 1 150 1 297 1 4 1 98 1 302 1 7 1 99 5 100 3 157 1 343 1 160 3 307 1 161 1 162 2 312 1 43 2 171 1 351 1 254 2 217 1 114 1 52 1 257 1 319 1 19 3 121 1 180 1 59 2 22 3 228 2 123 1 370 2 129 1 184 1 76 3 78 3 133 1 136 1 137 1 237 2 189 2 191 1 376 1 195 2 333 1 197 1 241 2 
121 1 294 1 150 1 297 1 59 2 4 1 180 1 22 3 228 1 123 1 302 1 99 5 7 1 157 1 100 3 370 2 343 1 184 1 129 1 160 3 161 1 162 2 76 3 78 3 133 1 43 1 136 1 137 1 237 1 189 2 191 1 351 1 376 1 254 2 217 1 114 1 333 1 195 1 319 1 241 2 19 3 
294 1 150 1 297 1 4 1 98 1 302 1 99 4 157 1 100 2 247 1 160 2 307 1 161 1 162 2 312 1 43 2 214 2 171 1 351 1 217 1 115 2 52 1 257 1 319 1 19 2 121 1 22 3 228 2 123 1 370 2 128 2 184 1 129 1 76 3 78 2 136 1 137 1 237 2 191 1 82 1 376 1 195 2 333 1 197 1 241 2 
243 1 363 6 324 1 102 1 231 1 25 1 130 1 71 3 347 1 73 2 209 1 327 2 45 1 281 1 80 1 34 1 284 1 331 3 316 1 13 2 14 1 51 1 17 1 119 1 291 2 88 1 
358 2 58 1 265 1 363 14 153 1 365 3 324 2 102 2 231 2 345 1 25 4 185 1 186 3 71 8 347 11 73 4 327 1 350 1 80 2 140 1 238 1 331 6 34 2 284 1 13 2 316 2 332 2 14 1 222 1 51 11 290 1 118 1 291 1 
149 1 264 1 58 1 151 1 363 2 269 1 366 1 228 2 155 1 342 1 324 1 101 1 344 1 231 1 25 1 71 1 73 2 40 1 310 1 349 1 42 1 327 1 350 1 237 2 253 1 80 1 192 1 171 1 34 1 331 1 84 1 316 1 85 1 14 1 195 1 222 1 52 1 320 1 
149 1 151 2 243 1 153 2 96 1 154 2 342 2 101 1 102 3 344 2 346 2 347 7 40 3 209 1 349 3 45 1 350 1 253 3 171 1 316 3 13 8 14 3 222 1 51 7 52 1 258 1 119 1 320 2 358 2 359 1 58 1 363 20 267 2 269 1 366 2 228 3 324 3 231 3 232 2 130 1 25 7 71 10 73 6 327 2 281 1 237 3 80 3 192 2 284 3 331 10 34 3 83 1 84 2 332 2 195 1 85 2 290 4 291 4 292 2 
149 1 58 1 199 1 363 2 228 1 342 2 324 2 101 2 270 1 231 2 68 1 71 1 73 4 40 7 11 1 278 2 164 1 349 8 213 1 237 1 253 8 80 2 315 1 110 1 192 2 171 1 34 2 331 1 83 1 316 2 195 1 85 2 14 2 222 1 52 1 223 1 17 1 320 3 224 1 
358 1 363 3 153 1 228 1 324 1 156 1 183 1 102 1 231 1 25 1 71 1 347 1 73 2 350 1 237 1 80 1 171 1 34 1 284 1 331 2 13 1 316 1 332 1 14 1 195 1 51 1 52 1 291 1 197 1 
358 1 363 2 80 1 268 1 34 1 13 1 316 1 324 1 14 1 51 1 102 1 231 1 25 1 17 1 71 2 347 1 290 1 73 2 
363 2 153 1 80 1 34 1 284 1 331 2 13 1 316 1 324 1 14 1 51 1 231 1 25 1 17 1 347 1 39 1 73 2 291 1 
358 1 363 4 153 1 324 1 102 1 231 1 25 2 71 2 347 2 73 2 80 1 34 1 284 1 331 2 316 1 13 2 332 1 14 1 51 2 17 1 290 1 291 1 
358 1 363 2 80 1 268 1 34 1 13 1 316 1 324 1 14 1 51 1 102 1 231 1 25 1 71 2 347 1 290 1 73 2 224 1 
363 2 153 1 80 1 34 1 284 1 331 2 13 1 316 1 324 1 14 1 51 1 231 1 25 1 347 1 39 1 73 2 291 1 224 1 
358 1 363 4 153 1 324 1 102 1 231 1 25 2 71 2 347 2 73 2 80 1 34 1 284 1 331 2 316 1 13 2 332 1 14 1 51 2 290 1 224 1 291 1 
358 1 363 4 153 1 324 1 102 1 231 1 25 2 71 2 347 2 73 2 80 1 34 1 284 1 331 2 316 1 13 2 332 1 14 1 51 2 290 1 291 1 
58 1 151 1 363 2 366 1 228 1 342 1 324 1 101 1 344 1 232 1 231 1 71 1 73 2 40 1 349 1 327 1 237 1 253 1 80 1 192 1 34 1 331 1 84 1 316 1 85 1 14 1 222 1 320 1 
58 1 363 2 36 1 245 1 228 1 342 1 324 1 101 1 344 1 231 1 71 1 73 2 40 1 349 1 327 1 237 1 253 1 80 1 192 1 172 1 34 1 331 1 84 1 316 1 85 1 14 1 222 1 320 1 
358 1 363 4 153 1 324 1 102 1 231 1 25 2 71 2 347 2 73 2 350 1 80 1 34 1 284 1 331 2 316 1 13 2 332 1 14 1 51 2 290 1 291 1 
358 1 151 1 363 4 153 1 267 1 366 1 228 1 342 1 324 1 102 1 344 1 232 1 231 1 68 1 25 2 71 2 347 2 73 2 40 1 349 1 237 1 253 1 80 1 192 1 331 2 284 1 34 1 13 2 84 1 316 1 332 1 85 1 14 1 51 2 290 1 291 1 320 1 
358 1 363 3 153 1 228 1 324 1 156 1 102 1 231 1 25 1 71 2 347 1 73 2 350 1 237 1 80 1 171 1 331 1 284 1 34 1 111 1 13 1 316 1 332 1 14 1 195 1 51 1 52 1 290 1 197 1 
358 3 363 19 153 3 365 2 244 1 203 1 102 3 231 2 345 1 103 1 186 1 71 9 104 1 73 4 371 2 166 1 80 2 169 1 34 2 331 10 284 3 316 2 13 6 332 3 50 1 116 2 118 1 290 3 291 3 293 1 
358 3 363 26 153 2 200 1 365 2 244 1 203 2 102 3 231 3 103 1 345 2 71 14 186 2 272 1 104 1 73 6 371 1 210 1 167 2 80 3 138 1 169 2 284 2 331 12 34 3 13 4 316 3 332 3 173 1 50 1 116 4 240 1 290 2 291 2 
243 1 153 4 200 1 244 1 203 1 102 5 103 1 345 3 305 1 104 1 209 1 166 1 210 1 45 1 167 1 169 2 13 8 316 3 173 1 50 1 116 4 118 1 119 1 358 4 363 41 365 4 231 3 130 1 71 20 186 3 272 1 73 6 371 1 281 1 80 3 138 1 284 5 331 21 34 3 332 4 240 1 290 4 291 4 
358 4 243 1 363 38 153 3 200 1 365 4 244 1 203 1 102 5 231 4 305 1 345 3 103 1 130 1 272 1 186 3 71 20 104 1 73 8 371 1 209 1 166 1 45 1 210 1 167 2 281 1 138 1 80 4 169 2 34 4 331 18 284 4 316 4 13 7 332 4 173 1 50 1 116 4 240 1 119 1 118 1 290 3 291 4 
358 7 243 1 363 52 153 7 200 1 365 4 244 1 203 1 102 8 231 2 345 2 103 1 130 1 272 1 186 4 71 27 104 1 73 4 371 1 209 1 45 1 210 1 167 1 281 1 138 1 80 2 169 1 238 2 34 2 331 25 284 8 316 2 13 14 332 7 173 1 50 1 116 4 240 1 119 1 118 2 290 7 291 7 
318 1 372 1 313 1 361 1 194 1 122 1 379 1 146 1 330 1 301 1 
6 1 97 1 
193 1 318 1 361 1 194 1 122 1 205 1 146 1 32 1 330 1 
372 1 313 1 361 1 29 1 295 2 122 1 31 1 22 1 330 1 24 1 143 1 318 1 194 1 379 1 146 1 319 1 27 1 76 1 
372 1 313 1 361 1 29 1 295 2 122 1 31 1 22 1 330 1 24 1 143 1 318 1 194 1 379 1 146 1 319 1 27 1 76 1 
372 1 313 1 361 1 29 1 295 2 122 1 31 1 22 1 330 1 24 1 143 1 318 1 194 1 379 1 146 1 319 1 27 1 76 1 
255 1 212 1 323 1 
255 1 212 1 323 1 
67 1 373 1 
67 1 373 1 323 1 
360 1 266 1 
360 1 361 1 295 1 122 1 266 1 22 1 97 1 228 2 6 1 369 1 27 1 132 1 348 1 76 1 29 1 280 1 327 1 237 2 282 1 330 1 171 2 318 1 194 1 195 2 52 2 53 1 146 1 
255 1 212 1 
67 1 373 1 323 1 
336 1 58 1 363 2 228 2 342 1 324 1 231 1 248 1 71 1 131 1 73 2 40 2 11 1 278 2 349 2 279 1 350 1 213 1 237 2 253 2 80 1 192 1 34 1 331 1 316 1 85 1 14 1 195 2 222 1 320 1 260 1 
349 2 57 1 322 1 253 2 201 1 300 1 192 1 64 1 83 1 354 1 85 1 220 1 145 1 68 1 271 1 380 2 40 2 335 1 242 1 
349 1 57 1 253 1 201 1 300 1 192 1 64 1 83 1 220 1 85 1 145 1 271 1 176 1 380 2 40 1 335 1 242 1 
164 1 349 1 253 1 201 1 315 1 192 1 342 1 354 1 85 1 101 1 158 1 320 1 40 1 10 1 
349 1 57 1 322 1 253 1 201 1 300 1 192 1 64 1 83 1 354 1 85 1 220 1 145 1 271 1 380 2 40 1 335 1 242 1 
56 1 
294 1 184 1 308 1 319 1 374 1 88 1 351 1 
294 1 150 1 59 1 22 1 189 1 123 1 351 1 302 1 254 1 99 1 114 1 115 1 333 1 184 1 162 1 319 2 76 1 
198 1 294 2 150 4 153 2 93 2 302 4 342 3 99 5 101 1 102 2 206 2 308 1 40 3 162 3 349 3 12 1 253 3 351 8 317 2 221 2 115 12 320 10 319 8 321 3 262 6 120 2 358 2 364 2 22 5 62 2 63 2 123 4 182 2 125 1 68 1 184 9 273 1 326 1 76 5 277 2 189 6 139 1 374 1 192 3 141 1 284 2 84 3 332 2 85 4 333 4 289 2 87 2 292 2 381 6 
358 2 294 2 150 2 364 1 153 2 200 1 22 1 365 1 123 2 302 2 99 1 102 2 38 1 184 8 345 1 186 1 272 1 162 1 76 1 210 1 138 1 189 3 351 5 141 1 284 2 332 2 115 6 333 2 175 1 240 1 87 1 289 2 319 5 381 5 262 5 
150 1 243 1 22 1 228 1 123 1 98 1 302 1 7 1 102 2 184 2 130 1 307 1 274 1 76 1 312 1 209 1 43 1 237 1 351 2 171 1 284 1 333 1 195 1 52 1 257 1 87 1 289 2 197 1 
294 1 150 1 374 1 123 1 351 1 302 1 333 1 184 1 308 1 319 1 
358 2 153 2 189 5 351 5 284 2 332 2 115 10 102 2 184 5 87 1 289 2 292 1 319 5 381 5 262 5 
294 1 99 1 22 1 319 1 162 1 76 1 
150 2 364 2 22 3 123 2 302 1 342 1 125 1 99 4 101 2 184 2 40 4 162 2 276 1 76 3 188 1 164 1 251 1 349 4 47 1 253 4 315 1 139 2 33 1 192 1 351 2 141 2 85 1 333 2 320 1 
339 1 151 1 363 1 366 1 228 3 342 1 324 1 101 1 232 1 344 1 231 1 73 2 40 1 349 1 327 1 237 3 80 1 253 1 192 1 171 2 331 1 34 1 316 1 84 1 195 2 85 1 14 1 222 1 52 2 257 1 320 1 197 2 
294 2 150 1 45 1 364 1 189 2 351 2 123 1 302 1 141 1 115 4 333 1 184 1 319 4 381 2 262 2 
361 1 194 1 275 1 
361 1 194 1 275 1 
108 1 361 1 194 1 379 1 266 1 
361 1 194 1 275 1 
361 1 194 1 304 1 
361 1 194 1 304 1 
361 1 194 1 304 1 
361 1 194 1 
146 1 330 1 
209 1 45 1 167 1 363 8 243 1 281 1 80 2 284 1 331 4 34 2 13 3 316 2 102 1 231 2 130 1 71 4 290 1 73 4 119 1 291 2 
209 1 45 1 243 1 363 6 281 1 331 3 284 1 13 2 102 1 130 1 71 3 119 1 291 2 88 1 
358 1 363 4 153 1 80 1 215 1 331 2 284 1 34 1 13 2 316 1 332 1 102 1 231 1 71 2 73 2 290 1 291 1 
358 1 363 7 153 1 365 2 284 1 331 4 13 2 332 1 102 1 345 1 186 1 71 3 118 1 290 1 291 1 
358 2 337 1 243 2 363 23 265 1 153 2 365 2 102 3 231 2 130 1 71 11 186 2 73 4 209 2 45 1 167 2 281 1 80 2 238 1 331 12 284 3 34 2 13 9 316 2 332 2 119 1 290 4 118 1 291 5 
331 1 363 1 365 1 
363 1 71 1 186 1 
358 1 363 6 153 1 80 1 215 1 34 1 331 3 284 1 316 1 13 3 332 1 102 1 231 1 71 3 73 2 290 1 292 1 291 2 
358 2 363 12 153 2 200 1 365 1 244 1 102 2 231 1 345 1 186 1 71 6 272 1 73 2 210 1 138 1 80 1 331 6 34 1 284 2 316 1 13 2 332 2 240 1 290 1 291 1 
209 1 363 6 243 1 284 1 331 3 13 2 102 1 130 1 71 3 290 1 291 1 
209 1 337 1 167 1 243 1 363 3 281 1 80 1 331 2 34 1 13 2 316 1 231 1 71 1 290 1 119 1 73 2 291 1 
209 2 243 2 363 10 80 1 244 1 34 1 331 5 284 2 316 1 13 5 102 2 231 1 130 1 71 5 73 2 290 2 291 3 274 1 
358 1 363 2 80 1 244 1 34 1 316 1 13 1 102 1 231 1 71 2 73 2 290 1 
358 1 363 4 153 1 80 1 244 1 331 2 284 1 34 1 13 2 316 1 332 1 102 1 231 1 71 2 73 2 290 1 291 1 
337 1 209 1 166 1 167 1 363 3 243 1 80 3 244 1 331 2 34 3 316 3 13 2 231 3 71 1 73 6 290 1 291 1 
337 1 358 3 243 3 363 34 153 3 365 4 244 1 102 5 231 5 345 1 130 2 186 3 71 16 106 1 73 10 209 3 166 1 45 1 167 2 281 1 80 5 170 1 215 1 331 18 34 5 284 5 316 5 13 12 332 3 287 1 119 1 118 1 290 5 291 7 
363 8 243 1 365 1 244 1 102 1 231 1 345 1 130 1 186 1 71 4 73 2 209 1 45 1 281 1 138 1 80 1 284 1 331 4 34 1 316 1 13 2 119 1 291 2 
358 1 243 1 363 11 365 2 244 1 102 2 231 2 345 1 130 1 186 1 71 6 73 4 209 1 45 1 281 1 138 1 80 2 215 1 284 1 331 5 34 2 316 2 13 3 332 1 119 1 118 1 290 1 291 2 
358 2 243 1 363 19 153 2 200 1 365 1 244 1 102 3 231 3 345 1 130 1 186 1 71 9 272 1 73 6 209 1 45 1 210 1 167 1 281 1 138 1 80 3 215 1 331 10 34 3 284 3 316 3 13 4 332 2 240 1 119 1 290 1 291 3 
358 2 243 1 363 17 153 1 200 1 365 1 244 1 102 3 231 3 345 1 130 1 186 1 71 10 272 1 73 6 209 1 45 1 210 1 167 1 281 1 138 1 80 3 215 1 331 7 34 3 284 2 316 3 13 5 332 2 240 1 119 1 290 2 291 3 
363 8 243 1 365 1 244 1 102 1 231 1 345 1 130 1 186 1 71 4 73 2 209 1 45 1 281 1 138 1 80 1 284 1 331 4 34 1 316 1 13 2 119 1 291 2 
358 2 363 12 153 2 200 1 365 1 244 1 102 2 231 1 345 1 186 1 71 6 272 1 73 2 210 1 138 1 80 1 331 6 34 1 284 2 316 1 13 2 332 2 240 1 290 1 291 1 
358 2 243 1 363 18 153 1 200 1 365 1 244 1 102 3 231 4 345 1 130 1 186 1 71 10 272 1 73 8 209 1 45 1 210 1 167 2 281 1 138 1 80 4 215 1 331 8 34 4 284 2 316 4 13 5 332 2 240 1 119 1 290 2 291 3 
358 3 363 16 153 2 200 1 365 1 244 1 102 3 231 4 345 1 186 1 71 9 272 1 73 8 166 1 210 1 167 2 138 1 80 4 331 7 34 4 284 2 316 4 13 6 332 3 240 1 290 3 291 3 
209 3 363 7 243 3 281 1 331 4 284 1 13 6 102 1 130 1 71 3 119 2 290 3 291 3 
358 2 243 1 363 18 153 1 200 1 365 1 244 1 102 3 231 4 345 1 130 1 186 1 71 10 272 1 73 8 209 1 166 1 45 1 210 1 167 2 281 1 138 1 80 4 331 8 34 4 284 2 316 4 13 4 332 2 240 1 119 1 290 1 291 3 
112 1 195 1 327 1 237 1 74 1 228 1 376 1 
327 1 168 1 237 1 46 1 202 1 228 1 376 1 112 1 195 1 144 1 74 1 89 1 
342 1 164 1 349 1 85 1 101 1 315 1 253 1 320 1 40 1 192 1 88 1 
149 1 349 1 327 1 237 2 253 1 366 1 192 1 228 2 171 1 342 1 84 1 85 1 195 1 101 1 344 1 52 1 320 1 40 1 
149 1 349 1 43 1 327 1 137 1 237 2 93 1 253 1 191 1 139 1 366 1 192 1 228 2 171 2 342 2 84 2 317 1 85 1 195 2 344 1 52 1 320 3 40 1 
149 1 93 1 36 1 228 2 342 2 344 1 40 2 349 2 43 1 327 1 137 1 237 2 253 2 48 1 139 1 191 1 192 1 171 2 84 2 317 1 195 2 85 1 52 1 320 3 
120 1 294 1 22 2 93 1 298 1 342 1 230 1 99 1 101 1 206 1 40 3 76 2 349 3 253 3 48 1 139 1 192 1 84 1 317 1 85 1 320 4 319 1 321 1 
120 1 294 1 349 3 93 1 22 2 253 3 48 1 139 1 192 1 342 1 84 1 182 1 317 1 99 1 101 1 85 1 206 1 319 1 40 3 320 4 321 1 76 2 
349 1 85 1 223 1 253 1 40 1 192 1 
278 1 349 7 213 1 199 1 253 7 110 1 192 2 83 1 84 1 342 2 352 1 101 2 85 3 270 1 68 1 223 1 326 1 72 1 207 1 40 6 320 3 
149 1 151 1 243 1 154 1 342 1 102 1 344 1 347 1 40 1 209 1 349 1 45 1 350 1 253 1 171 1 316 2 13 2 14 2 51 1 52 1 119 1 320 1 363 6 267 1 366 1 228 2 324 2 232 1 231 2 68 1 25 1 130 1 71 3 131 1 73 4 327 2 281 1 237 2 80 2 192 1 34 2 284 1 331 3 84 1 195 1 85 1 291 2 
120 1 294 1 150 2 22 3 123 2 63 1 302 2 182 1 125 1 99 2 101 1 184 1 206 1 308 1 40 1 162 1 76 3 277 1 349 1 280 1 253 1 374 1 351 1 333 2 221 1 319 1 320 2 321 1 
349 2 12 1 253 2 192 1 84 1 342 1 85 2 68 1 223 1 326 1 206 1 40 2 320 2 
164 1 349 4 226 1 253 4 315 1 48 1 192 1 342 1 85 1 101 1 68 1 40 4 320 1 
359 1 349 2 79 1 253 2 139 1 192 1 84 1 342 1 352 1 85 2 72 1 40 2 320 1 107 1 
349 1 85 1 220 1 101 1 145 1 380 1 253 1 40 1 192 1 242 1 
349 2 279 1 213 1 253 2 192 1 83 1 342 1 85 1 68 1 40 2 320 1 
164 1 349 5 226 1 199 1 213 1 315 1 253 5 139 1 192 2 342 2 101 1 85 2 270 1 68 1 40 4 320 3 
164 1 349 5 226 1 213 1 315 1 253 5 94 1 139 1 192 2 342 2 101 1 85 2 270 1 68 1 40 4 320 3 
149 1 349 1 327 1 237 2 253 1 36 1 192 1 228 2 171 1 342 1 84 1 85 1 195 1 101 1 344 1 52 1 320 1 40 1 
349 1 253 1 139 1 192 1 84 1 342 1 352 1 85 2 326 1 72 1 207 1 40 1 320 1 
235 1 65 1 327 1 86 1 356 1 
294 1 22 1 228 1 98 1 65 1 307 1 311 1 309 1 187 1 76 1 235 1 312 1 44 1 280 1 43 2 137 1 237 1 191 1 171 1 217 1 195 1 52 1 86 1 257 1 356 1 319 1 197 1 
235 1 336 1 65 1 195 1 248 1 237 1 356 1 228 1 260 1 
356 1 311 1 309 1 
95 1 375 1 88 1 181 1 
229 1 90 1 246 1 54 1 95 1 375 1 181 1 
229 1 3 1 355 1 
90 3 91 1 95 1 375 1 181 1 229 3 246 1 368 1 218 2 159 1 54 1 55 1 
229 2 90 2 246 1 54 1 105 1 95 1 375 1 250 1 181 1 
0 1 90 1 91 1 2 1 95 1 300 1 229 1 246 1 54 1 380 1 242 1 
229 1 90 1 246 1 91 1 54 1 95 1 181 1 
229 1 90 1 246 1 91 1 54 1 375 1 181 2 
377 1 229 2 37 1 90 2 246 2 91 1 174 1 54 2 95 1 181 1 
239 1 0 1 229 3 90 3 246 1 91 1 256 1 54 1 105 2 95 2 375 1 181 1 77 1 
90 2 91 1 296 1 95 1 375 1 300 1 181 1 229 2 246 1 145 1 54 1 271 1 380 2 105 1 242 1 
0 1 90 4 91 1 95 2 375 1 181 1 229 4 246 2 256 1 54 2 105 2 249 1 250 1 
229 1 90 1 246 1 91 1 54 1 95 1 375 1 181 1 
0 1 90 4 95 3 375 2 181 2 229 4 218 1 368 1 246 1 256 1 54 1 105 2 55 1 177 1 
229 2 134 1 90 2 246 1 91 1 196 1 54 1 105 1 95 1 375 1 234 1 181 1 
90 3 91 1 95 1 375 1 367 1 181 1 229 3 246 1 368 2 218 2 54 1 55 1 
211 1 26 2 95 2 35 1 
229 1 90 1 246 1 91 1 233 1 54 1 
229 2 90 2 246 1 91 1 54 1 105 1 95 1 375 1 181 1 77 1 
21 1 
229 1 90 1 246 1 91 1 54 1 95 1 375 1 181 1 
229 3 90 3 218 1 246 1 91 1 54 1 105 1 95 1 375 1 181 1 77 1 
0 1 256 1 95 1 177 1 
95 1 181 1 

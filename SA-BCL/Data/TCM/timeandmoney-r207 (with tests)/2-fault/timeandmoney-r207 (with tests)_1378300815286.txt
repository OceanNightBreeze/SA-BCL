#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (29,240) 2 (90,287) (90,287) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (29,240) 2 (90,287) (90,287) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (29,240) 2 (90,287) (90,287) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (29,240) 2 (90,287) (90,287) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
370 1 277 1 126 1 287 1 210 1 236 1 2 1 140 1 250 1 90 1 29 1 
370 1 277 1 126 1 287 1 210 1 236 1 2 1 140 1 250 1 90 1 29 1 
370 1 277 1 126 1 287 1 210 1 236 1 2 1 140 1 250 1 90 1 29 1 
370 1 277 1 126 1 287 1 210 1 236 1 2 1 140 1 250 1 90 1 29 1 
210 1 145 2 306 1 106 1 250 4 347 3 11 1 31 1 85 1 277 4 321 2 45 1 86 1 126 1 236 1 281 1 298 1 171 3 
370 1 210 1 92 1 306 1 242 1 250 2 347 1 11 1 348 1 277 2 126 1 86 1 219 1 236 1 281 1 140 1 
321 1 370 1 277 3 126 2 210 1 236 2 281 1 250 3 347 2 11 1 240 1 171 1 85 1 
370 1 210 1 145 2 306 1 106 1 250 9 347 5 11 1 134 1 215 1 31 1 205 1 85 3 45 1 277 9 321 4 86 1 126 2 236 2 281 1 298 1 340 1 240 1 171 7 
370 1 210 1 145 2 306 1 106 1 250 9 347 5 11 1 134 1 215 1 31 1 205 1 85 3 45 1 277 9 321 4 86 1 126 2 236 2 281 1 298 1 340 1 240 1 171 7 
193 1 159 1 333 1 
159 1 239 1 217 2 
156 2 206 2 288 2 249 2 376 2 274 1 378 2 97 1 
118 1 37 1 144 1 66 1 366 1 288 2 368 1 265 1 190 1 174 1 267 1 4 2 97 1 192 1 156 2 176 1 76 1 270 1 77 2 329 1 51 1 198 1 52 1 102 1 249 2 274 1 252 1 28 2 135 2 59 1 259 1 206 3 337 1 376 2 378 3 116 1 209 2 
156 1 258 1 206 1 288 1 249 1 241 1 376 1 274 1 357 1 378 1 
288 1 164 1 241 1 41 1 175 1 349 1 136 1 193 1 159 1 206 1 247 1 314 1 378 1 302 1 
288 1 164 2 249 1 241 1 41 1 175 1 349 1 136 1 193 1 156 1 159 1 206 1 376 1 314 2 378 1 
164 1 228 1 314 1 142 1 74 1 
193 1 159 1 164 2 103 1 314 2 142 1 330 1 74 1 
164 1 314 1 74 1 
164 1 288 1 249 1 241 1 274 1 214 1 156 1 258 1 206 1 376 1 142 1 314 1 357 1 378 1 
159 1 
193 1 159 1 246 1 164 2 103 1 314 2 142 1 74 1 
188 2 164 5 103 1 39 1 147 1 111 1 71 1 72 1 216 1 74 2 310 1 193 1 159 1 237 1 32 2 142 2 314 5 100 1 179 2 
333 1 97 1 
120 1 288 2 249 1 97 2 156 1 206 2 376 1 378 2 331 1 
54 1 207 1 343 1 
51 1 198 1 52 1 190 1 252 1 4 1 28 1 267 1 319 1 97 1 192 1 206 1 77 1 329 1 378 1 116 1 
51 1 198 1 365 1 52 1 288 1 249 1 54 1 190 1 252 1 267 1 4 1 28 1 192 1 206 2 77 1 355 1 376 1 329 1 378 2 116 1 
156 1 365 1 206 3 288 3 249 3 376 3 378 3 97 1 
206 1 288 1 249 1 241 1 376 1 357 1 378 1 
120 1 156 1 206 1 288 1 249 1 241 1 376 1 378 1 331 1 
37 1 365 1 66 1 366 1 288 3 368 1 241 1 190 1 41 1 174 1 267 1 175 1 4 1 349 1 97 1 192 1 156 2 176 1 76 1 270 1 77 1 355 1 329 1 331 1 51 1 198 1 52 1 164 1 249 3 274 1 252 1 28 1 135 2 59 1 136 1 13 1 168 1 206 4 337 1 376 3 314 1 116 1 378 4 209 1 
222 1 206 2 365 1 288 2 249 1 376 1 247 1 378 2 97 1 
358 1 365 2 164 1 288 3 249 3 241 1 41 1 175 1 349 1 136 1 156 1 159 1 206 3 168 1 355 1 376 3 314 1 378 3 331 1 
365 1 288 2 249 2 54 1 156 1 206 2 376 2 378 2 343 1 331 1 
51 1 198 1 52 1 190 1 252 1 4 1 28 1 267 1 97 1 192 1 206 1 77 1 329 1 378 1 116 1 
198 1 52 1 190 1 252 1 4 1 28 1 267 1 73 1 97 1 192 1 206 1 77 1 325 1 329 1 378 1 
37 1 366 1 290 1 42 1 292 1 245 1 176 1 21 1 76 1 270 1 195 1 371 1 82 1 102 2 54 2 166 1 135 2 59 2 279 1 337 1 207 2 64 1 209 4 343 2 
206 1 288 1 249 1 226 1 241 1 376 1 349 1 378 1 
156 1 222 1 206 5 365 2 288 5 249 4 355 1 376 4 247 1 79 1 378 5 361 1 97 1 331 1 
206 2 288 2 226 1 249 2 241 1 376 2 357 1 378 2 
56 1 34 1 
56 1 34 1 
311 1 170 1 
311 1 170 1 
311 1 170 1 
324 1 56 1 34 1 
262 1 56 1 34 1 
311 1 200 1 56 2 34 2 186 1 170 1 
324 1 56 1 34 1 
324 1 56 1 34 1 
363 1 56 1 34 1 
363 1 56 1 34 1 
363 1 56 1 34 1 
332 1 359 1 182 1 164 2 191 1 150 2 56 2 186 1 295 1 159 1 322 2 312 2 99 2 313 2 115 1 34 2 314 2 163 3 35 1 
288 2 150 1 268 1 97 1 322 1 163 1 9 1 182 1 164 1 249 2 56 1 133 1 12 1 137 1 206 2 312 1 376 2 313 1 262 1 261 1 89 1 34 1 314 1 378 2 
45 1 86 1 306 1 
86 1 306 1 348 1 
45 2 86 3 227 1 108 1 348 1 112 1 
45 1 86 2 108 1 299 1 348 1 112 1 
45 1 86 2 108 2 348 1 112 1 
188 1 39 1 290 1 292 1 152 2 217 3 153 1 74 1 193 1 159 2 195 1 48 2 271 1 9 1 80 1 100 3 179 1 181 1 24 1 371 1 164 5 103 1 203 2 110 1 133 1 111 2 137 1 32 1 239 1 314 5 142 4 172 1 
188 2 289 5 39 1 290 3 43 1 292 3 72 1 152 6 217 9 153 3 74 6 193 1 158 1 159 5 195 3 48 6 326 1 271 2 100 8 179 2 181 2 371 3 164 9 103 1 201 1 228 5 111 6 137 4 113 1 377 1 32 2 239 3 314 9 142 7 172 1 
188 1 290 1 292 1 72 1 152 2 217 4 153 1 193 1 159 3 195 1 48 2 271 1 80 1 100 3 179 1 181 1 371 1 164 3 203 1 110 1 111 2 137 1 32 1 239 2 142 2 314 3 
188 1 290 2 292 2 152 4 72 1 217 7 153 2 193 1 159 4 195 2 48 4 271 1 80 1 100 5 179 1 181 1 371 2 164 4 201 1 203 2 110 1 111 4 137 2 113 1 377 1 32 1 239 3 314 4 142 3 
198 1 333 1 151 1 
198 1 33 1 
38 1 
198 1 267 1 
218 1 198 3 353 1 52 1 151 2 267 1 
198 1 52 1 267 1 
119 1 198 1 
371 1 82 2 65 1 264 1 27 1 223 1 102 4 166 3 290 1 59 3 244 1 323 1 283 1 300 2 63 1 364 1 209 7 
371 1 82 2 65 1 264 1 27 1 223 1 102 4 166 3 290 1 59 3 244 1 323 1 283 1 300 2 63 1 364 1 209 7 
371 1 82 2 65 1 264 1 27 1 223 1 102 4 166 3 290 1 59 3 244 1 323 1 283 1 356 1 300 2 63 1 364 1 209 7 
0 3 345 1 65 1 264 5 37 1 366 1 146 4 367 1 290 4 292 3 153 3 244 2 320 1 176 1 76 1 323 2 195 3 300 3 371 4 82 5 27 2 223 1 225 1 102 16 166 10 275 1 84 1 58 1 135 2 59 15 283 1 63 1 364 2 209 31 
37 2 264 1 65 1 366 2 290 1 244 1 7 1 176 2 127 1 76 2 323 1 300 2 371 1 82 3 27 1 223 1 102 5 166 4 84 1 135 4 59 4 283 1 209 9 364 1 
315 1 210 1 3 1 190 1 347 1 69 1 4 1 348 1 192 1 45 1 126 1 194 1 20 1 77 1 177 1 49 1 303 1 370 1 306 1 227 1 250 2 11 1 309 1 28 1 277 2 86 2 236 1 281 1 285 1 171 1 
315 1 190 1 347 1 69 1 4 1 348 1 192 1 45 1 126 1 20 1 77 1 177 1 162 1 49 1 303 1 370 1 248 1 306 1 227 1 250 3 231 1 11 1 309 1 28 1 277 3 86 2 236 1 281 1 285 1 171 2 
190 1 347 1 69 1 4 1 348 1 192 1 45 1 20 1 77 1 162 1 49 1 370 1 303 1 248 1 306 1 227 1 250 2 11 1 309 1 28 1 277 2 86 2 281 1 285 1 171 2 
370 2 303 2 198 1 372 1 184 1 190 1 250 1 231 1 309 2 267 1 4 1 28 1 254 1 192 1 44 1 277 1 126 1 236 1 77 1 178 1 49 2 329 1 180 1 
315 1 210 1 190 1 69 1 4 1 348 1 192 1 45 1 126 1 194 1 20 1 77 1 177 1 49 1 303 1 370 1 248 1 306 1 227 1 250 1 309 1 28 1 277 1 86 2 236 1 285 1 
169 1 
188 1 288 1 241 1 39 1 190 1 41 1 4 2 349 1 192 1 44 1 193 1 296 4 159 2 247 1 47 1 100 2 302 1 305 1 198 1 165 2 164 5 53 1 103 3 57 2 111 2 206 1 114 1 15 2 314 5 117 1 211 1 68 1 266 1 267 1 175 1 318 1 217 2 18 2 74 6 77 2 329 2 179 1 180 1 181 1 26 2 334 1 335 1 374 2 28 2 136 1 138 2 87 1 32 1 239 2 378 1 
117 1 288 1 241 1 41 1 175 1 349 1 18 1 74 2 296 2 246 1 247 1 47 1 302 1 305 1 164 3 103 1 334 1 335 1 136 1 206 1 314 3 378 1 
117 1 288 1 241 1 41 1 175 1 349 1 74 1 193 1 296 3 159 1 246 1 247 1 47 1 302 1 305 1 164 3 103 1 334 1 335 1 57 1 136 1 206 1 314 3 378 1 
117 1 288 1 241 1 41 1 175 1 349 1 18 1 74 2 193 1 296 3 159 1 246 1 247 1 47 1 302 1 26 1 305 1 164 3 103 1 334 1 335 1 57 1 136 1 206 1 314 3 378 1 
188 1 288 1 241 1 39 1 41 1 349 1 193 5 296 6 159 5 246 1 47 1 247 1 100 1 302 1 305 1 164 5 53 1 165 2 103 3 57 4 111 1 204 1 206 1 15 2 314 5 117 1 122 1 68 1 175 1 18 4 74 7 220 1 78 1 179 1 26 4 334 1 335 1 374 2 233 1 136 1 138 2 32 1 239 2 378 1 
188 1 288 1 241 1 39 1 41 1 349 1 193 1 296 4 159 2 47 1 247 1 100 1 302 1 305 1 53 1 164 4 165 2 103 2 111 1 57 2 206 1 114 1 15 2 314 4 117 1 68 1 175 1 217 2 74 4 18 2 179 1 26 2 334 1 335 1 374 2 136 1 138 2 32 1 239 2 378 1 
188 1 117 1 122 1 288 1 241 1 39 1 68 1 41 1 175 1 349 1 18 2 74 4 193 1 296 4 159 1 78 1 247 1 47 1 100 1 179 1 302 1 26 2 305 1 165 2 53 1 164 4 103 2 334 1 335 1 57 2 111 1 374 2 204 1 136 1 138 2 206 1 32 1 15 2 239 2 314 4 378 1 
188 1 117 1 122 1 288 1 241 1 39 1 68 1 41 1 175 1 349 1 18 2 74 4 193 1 296 4 159 1 78 1 247 1 47 1 100 1 179 1 302 1 26 2 305 1 165 2 53 1 164 4 103 2 334 1 335 1 57 2 111 1 374 2 204 1 136 1 138 2 206 1 32 1 15 2 239 2 314 4 378 1 
188 1 117 1 189 1 288 1 241 1 39 1 68 1 41 1 175 1 217 2 349 1 18 2 74 4 193 1 296 4 159 1 161 2 247 1 47 1 100 1 179 1 302 1 26 2 305 1 164 4 103 2 334 1 55 1 335 1 57 2 111 1 255 2 374 2 204 1 256 1 136 1 206 1 32 1 15 2 314 4 378 1 
188 1 117 1 122 1 288 1 241 1 39 1 68 1 41 1 175 1 349 1 18 3 74 5 193 1 296 5 159 1 78 1 247 1 47 1 100 1 179 1 302 1 26 3 305 1 165 2 53 1 164 4 103 2 334 1 335 1 111 1 57 3 374 2 204 1 233 1 136 1 138 2 206 1 32 1 15 2 239 2 314 4 378 1 
188 1 117 1 122 1 288 1 241 1 39 1 68 1 41 1 175 1 349 1 18 3 74 5 193 1 296 5 159 1 78 1 247 1 47 1 100 1 179 1 302 1 26 3 305 1 165 2 53 1 164 4 103 2 334 1 335 1 111 1 57 3 374 2 204 1 233 1 136 1 138 2 206 1 32 1 15 2 239 2 314 4 378 1 
188 1 288 1 241 1 39 1 41 1 349 1 193 1 296 4 159 1 47 1 247 1 161 2 100 1 302 1 305 1 164 4 103 2 111 1 57 2 255 2 256 1 206 1 114 1 15 2 314 4 117 1 68 1 175 1 217 2 74 4 18 2 179 1 26 2 334 1 335 1 374 2 136 1 32 1 378 1 
37 1 65 1 366 1 42 1 290 1 244 1 97 2 176 1 76 1 270 1 300 1 82 2 371 1 223 1 333 1 102 3 54 1 166 2 135 2 59 3 337 1 207 1 283 1 343 1 364 1 209 6 
0 3 264 1 37 2 146 3 366 2 367 1 368 1 94 1 40 1 290 1 292 2 153 2 97 1 124 1 176 2 76 2 270 2 195 1 82 1 371 2 225 1 102 8 166 2 54 11 202 1 135 4 59 6 259 1 337 1 207 11 187 1 209 14 343 4 
37 1 365 1 288 1 366 1 368 1 190 1 40 1 267 1 4 1 319 1 97 1 192 1 176 1 297 1 76 1 77 1 270 1 355 1 329 1 51 1 198 1 52 1 273 1 249 1 102 1 252 1 28 1 135 2 59 1 206 2 259 1 337 1 139 1 376 1 116 1 378 2 343 1 209 2 
37 3 288 1 93 2 190 2 290 3 40 1 292 2 4 3 153 2 97 2 244 1 192 2 195 2 355 1 300 1 51 2 198 2 248 1 52 2 249 1 102 10 54 7 166 8 252 2 59 10 257 2 259 1 206 3 207 7 61 2 116 2 364 1 209 20 173 1 65 1 264 4 365 1 366 3 368 1 174 2 267 2 176 3 76 3 77 3 270 3 329 1 82 4 371 3 223 1 229 1 28 3 135 6 337 3 376 1 283 1 379 1 378 3 344 2 343 7 
37 2 365 1 144 2 288 1 366 2 368 1 3 1 190 2 42 1 293 1 4 7 267 2 96 1 192 2 44 1 176 2 76 2 77 8 270 2 329 2 180 1 198 3 248 1 199 1 249 1 102 1 28 8 375 1 135 4 59 1 234 1 206 1 259 1 337 2 376 1 60 1 238 1 378 1 209 2 
37 1 366 1 288 1 40 1 290 1 292 1 153 1 156 1 176 1 76 1 270 1 195 1 331 1 82 1 371 1 249 1 102 1 166 1 54 1 135 2 59 2 206 1 337 1 207 1 376 1 378 1 343 1 143 1 209 3 
371 1 264 1 37 1 366 1 102 2 166 1 54 1 42 1 292 1 135 2 176 1 21 1 76 1 337 1 270 1 207 1 343 1 209 2 
82 1 37 1 366 1 166 1 54 1 42 1 290 1 135 2 59 2 176 1 76 1 337 1 270 1 207 1 195 1 64 1 343 1 209 2 
37 1 264 1 366 1 42 1 290 1 292 1 153 1 176 1 76 1 270 1 195 1 371 1 82 1 102 2 54 2 166 2 135 2 59 2 337 1 207 2 209 4 343 2 
371 1 264 1 37 1 366 1 102 2 166 1 54 1 292 1 135 2 176 1 21 1 76 1 337 1 270 1 207 1 238 1 343 1 209 2 
82 1 37 1 366 1 166 1 54 1 290 1 135 2 59 2 176 1 76 1 337 1 270 1 207 1 195 1 238 1 64 1 343 1 209 2 
37 1 264 1 366 1 290 1 292 1 153 1 176 1 76 1 270 1 195 1 371 1 82 1 102 2 54 2 166 2 135 2 59 2 337 1 207 2 238 1 209 4 343 2 
37 1 264 1 366 1 290 1 292 1 153 1 176 1 76 1 270 1 195 1 371 1 82 1 102 2 54 2 166 2 135 2 59 2 337 1 207 2 209 4 343 2 
37 1 366 1 368 1 190 1 174 1 267 1 4 1 97 1 192 1 176 1 76 1 77 1 270 1 329 1 51 1 198 1 52 1 102 1 252 1 28 1 135 2 59 1 259 1 206 1 337 1 116 1 378 1 209 2 
37 1 366 1 368 1 190 1 267 1 4 1 73 1 97 1 192 1 176 1 76 1 77 1 270 1 325 1 329 1 198 1 52 1 102 1 252 1 28 1 30 1 135 2 59 1 259 1 206 1 337 1 378 1 209 2 
37 1 264 1 366 1 40 1 290 1 292 1 153 1 176 1 76 1 270 1 195 1 371 1 82 1 102 2 54 2 166 2 135 2 59 2 337 1 207 2 209 4 343 2 
264 1 37 1 366 1 190 1 3 1 290 1 292 1 174 1 4 1 267 1 153 1 192 1 176 1 76 1 77 1 270 1 195 1 82 1 371 1 51 1 198 1 52 1 102 2 166 2 54 2 252 1 28 1 135 2 59 2 206 1 337 1 207 2 116 1 378 1 343 2 209 4 344 1 
264 1 37 1 67 1 366 1 288 1 290 1 40 1 292 1 153 1 156 1 176 1 76 1 270 1 195 1 331 1 371 1 249 1 102 2 166 1 54 1 135 2 59 1 206 1 337 1 207 1 376 1 378 1 209 3 343 1 
0 1 37 2 264 3 146 2 366 2 367 1 17 1 290 3 292 3 153 3 154 2 7 1 176 2 98 1 76 2 128 1 195 3 22 1 83 2 82 3 371 3 225 1 102 9 166 6 132 1 253 1 135 4 59 10 338 1 209 19 
0 2 37 1 366 1 146 2 290 1 292 1 153 1 154 1 7 1 176 1 76 1 128 2 195 1 22 1 83 4 371 1 102 8 225 2 253 1 232 1 132 1 135 2 59 8 338 2 362 1 209 16 
0 3 37 2 264 2 146 4 366 2 367 1 17 1 290 2 292 2 153 2 154 1 7 1 176 2 76 2 128 2 195 2 22 1 83 4 82 1 371 2 373 1 225 3 102 11 166 3 132 1 232 1 253 1 135 4 59 12 362 1 338 1 209 23 
0 3 37 2 264 2 146 4 366 2 367 1 17 1 290 2 292 2 153 2 154 1 7 1 176 2 76 2 128 2 195 2 22 1 83 4 82 2 371 2 373 1 225 3 102 11 166 4 132 1 232 1 253 1 135 4 59 12 362 1 338 1 209 23 
0 4 65 3 37 1 264 5 146 4 366 1 367 2 290 8 292 5 153 5 154 1 244 3 124 2 7 1 176 1 76 1 128 1 195 5 22 1 300 3 83 4 82 8 371 8 223 3 225 2 102 27 166 13 132 1 232 1 253 1 135 2 59 24 362 1 338 1 283 3 364 3 209 51 
295 1 322 1 312 1 313 1 327 1 56 1 150 1 34 1 186 1 35 1 
262 1 89 1 
322 1 312 1 251 1 313 1 56 1 150 1 34 1 301 1 75 1 
332 1 359 1 182 1 164 1 191 1 150 1 56 1 186 1 295 1 159 1 322 1 312 1 99 1 313 1 314 1 34 1 163 2 35 1 
332 1 359 1 182 1 164 1 191 1 150 1 56 1 186 1 295 1 159 1 322 1 312 1 99 1 313 1 314 1 34 1 163 2 35 1 
332 1 359 1 182 1 164 1 191 1 150 1 56 1 186 1 295 1 159 1 322 1 312 1 99 1 313 1 314 1 34 1 163 2 35 1 
200 1 324 1 141 1 
200 1 324 1 141 1 
363 1 272 1 
200 1 363 1 272 1 
261 1 268 1 
288 2 191 1 150 1 268 1 97 1 322 1 99 1 163 1 9 1 10 1 164 1 249 2 56 1 133 1 12 1 137 1 206 2 312 1 376 2 313 1 262 1 261 1 89 1 314 1 142 1 34 1 378 2 
324 1 141 1 
200 1 363 1 272 1 
37 1 123 1 144 2 212 1 288 2 366 1 368 1 190 1 40 1 293 1 267 1 4 2 243 1 192 1 176 1 76 1 77 2 270 1 221 1 198 1 102 1 307 1 28 2 375 1 135 2 59 1 206 2 259 1 337 1 378 2 209 2 
315 1 248 1 306 1 227 1 190 1 3 1 69 1 4 2 28 2 348 1 192 1 155 1 45 1 278 1 86 2 20 1 77 2 49 1 81 1 
315 1 248 1 306 1 227 1 190 1 69 1 4 1 28 1 348 1 192 1 45 1 278 1 86 2 20 1 77 1 196 1 49 1 
50 1 198 1 190 1 267 1 4 1 28 1 192 1 155 1 44 1 77 1 329 1 49 1 178 1 180 1 
315 1 248 1 306 1 227 1 190 1 69 1 4 1 28 1 348 1 192 1 155 1 45 1 278 1 86 2 20 1 77 1 49 1 81 1 
160 1 
193 1 159 1 333 1 237 1 111 1 71 1 100 1 
188 1 39 1 217 1 74 1 193 1 159 2 100 1 179 1 165 1 53 1 164 1 103 1 111 1 138 1 32 1 239 1 314 1 
188 4 91 2 3 1 190 3 39 4 290 2 149 1 292 2 4 3 151 2 152 6 153 2 350 2 192 4 193 2 353 1 159 8 195 2 48 6 100 9 101 1 198 10 52 3 164 5 103 3 360 2 107 1 111 8 257 2 314 5 119 2 317 2 71 1 267 3 175 2 217 12 74 5 77 3 328 2 329 1 179 4 181 2 371 2 224 1 131 2 28 3 87 1 336 2 237 1 282 2 32 4 284 1 33 3 239 6 
188 1 0 1 91 1 288 1 146 1 241 1 39 1 95 1 214 1 152 2 217 2 156 1 193 1 159 2 48 2 100 2 357 1 179 1 181 1 249 1 225 1 274 1 232 1 111 2 258 1 87 1 206 1 376 1 282 1 32 1 239 1 378 1 
188 1 91 2 36 1 65 1 288 1 241 1 39 1 290 1 214 1 244 1 156 1 78 1 100 2 357 1 179 1 371 2 164 1 249 1 274 1 111 2 258 1 206 1 376 1 282 1 32 1 314 1 378 1 364 1 
188 1 39 1 71 1 111 1 193 1 159 1 237 1 32 1 100 1 179 1 
371 2 91 2 290 2 292 2 111 5 152 5 217 10 153 2 257 1 159 5 195 2 282 1 48 5 239 5 100 5 
193 1 159 1 164 1 103 1 314 1 74 1 
188 2 211 1 190 1 39 1 316 1 266 1 72 1 267 1 4 4 192 1 74 4 44 1 77 4 329 2 100 2 179 2 101 1 181 2 180 1 198 1 164 3 103 2 107 2 111 2 28 4 280 1 87 2 32 2 314 3 
37 1 66 1 366 1 288 2 368 1 190 1 174 1 4 1 267 1 97 1 192 1 156 2 176 1 76 1 77 1 270 1 329 1 51 1 198 1 52 1 249 2 274 1 252 1 28 1 135 2 59 1 206 3 337 1 376 2 378 3 116 1 209 1 
188 1 39 1 111 2 152 2 217 4 193 2 159 4 87 1 48 2 32 1 239 2 300 1 100 1 179 1 181 1 
312 1 313 1 380 1 
260 1 312 1 313 1 268 1 35 1 
312 1 313 1 380 1 
312 1 313 1 380 1 
312 1 313 1 62 1 
312 1 313 1 62 1 
312 1 313 1 62 1 
312 1 313 1 
56 1 34 1 
371 1 82 2 65 1 264 1 37 2 223 1 366 2 102 4 166 3 290 1 84 1 135 4 59 4 244 1 176 2 76 2 283 1 300 1 209 8 364 1 
82 2 371 1 65 1 333 1 223 1 102 3 166 2 290 1 59 3 244 1 283 1 300 1 364 1 209 6 
82 1 371 1 37 1 264 1 366 1 102 2 166 2 290 1 230 1 292 1 135 2 153 1 59 2 176 1 76 1 195 1 209 4 
82 1 0 1 371 1 264 1 146 2 225 1 102 3 367 1 166 2 290 1 292 1 153 1 59 4 195 1 209 7 
0 2 65 1 264 4 37 2 146 2 366 2 367 1 94 1 290 3 292 2 153 2 244 2 124 1 176 2 76 2 195 2 369 1 300 1 371 3 82 5 223 1 102 11 166 9 84 2 135 4 59 12 283 1 364 2 209 23 
146 1 209 1 59 1 
0 1 102 1 209 1 
371 1 82 2 37 1 264 1 366 1 102 3 166 3 290 1 230 1 292 1 135 2 153 1 59 3 257 1 176 1 76 1 195 1 209 6 
0 1 37 1 366 1 146 1 102 1 225 1 232 1 135 2 59 1 7 1 176 1 76 1 209 2 
371 1 82 1 65 1 264 1 102 3 166 2 290 1 59 3 244 1 209 6 364 1 
82 1 264 1 37 1 223 1 366 1 102 1 166 2 84 1 135 2 244 1 59 2 176 1 76 1 369 1 283 1 364 1 209 3 
82 3 371 2 37 1 36 1 264 2 65 1 366 1 102 5 166 5 290 2 135 2 244 2 59 5 7 1 176 1 76 1 364 2 209 10 
371 1 37 1 264 1 366 1 102 2 166 1 292 1 135 2 7 1 176 1 76 1 209 2 
82 1 371 1 37 1 264 1 366 1 102 2 166 2 290 1 292 1 135 2 153 1 59 2 7 1 176 1 76 1 195 1 209 4 
82 1 37 3 264 1 366 3 102 1 166 2 17 1 84 1 135 6 59 2 244 1 7 1 176 3 76 3 369 1 209 3 364 1 
0 3 65 2 37 5 264 5 146 4 366 5 367 1 17 1 290 5 292 3 153 3 244 3 320 1 7 1 176 5 76 5 195 3 369 1 300 1 371 5 82 7 223 1 225 1 102 16 166 12 230 1 84 2 275 1 58 1 135 10 59 18 283 1 364 3 209 34 
0 1 36 1 65 2 264 4 37 2 146 1 366 2 148 1 290 4 292 2 153 2 244 2 7 1 19 1 176 2 76 2 195 1 129 1 300 1 371 5 82 5 223 1 225 1 102 14 166 9 104 1 232 1 84 1 135 4 59 10 283 1 364 2 209 24 
0 1 65 1 37 3 264 2 146 2 366 3 367 1 148 1 290 2 292 3 153 3 244 1 7 1 19 1 176 3 76 3 195 1 129 1 300 1 82 3 371 4 223 1 225 1 102 12 104 1 166 5 232 1 230 1 84 1 135 6 59 8 283 1 364 1 209 20 
0 1 264 1 36 1 65 2 37 2 146 1 366 2 290 3 244 2 7 1 176 2 76 2 300 1 371 3 82 3 223 1 225 1 102 8 166 4 232 1 230 1 135 4 59 7 283 1 209 15 364 2 
0 1 36 1 65 2 264 3 37 2 146 1 366 2 290 3 244 2 7 1 176 2 76 2 300 1 371 3 82 4 223 1 225 1 102 8 166 7 232 1 230 1 135 4 59 7 283 1 209 15 364 2 
0 1 36 1 65 2 264 4 37 2 146 1 366 2 148 1 290 4 292 2 153 2 244 2 7 1 19 1 176 2 76 2 195 1 129 1 300 1 371 5 82 5 223 1 225 1 102 14 166 9 104 1 232 1 84 1 135 4 59 10 283 1 364 2 209 24 
0 1 37 1 366 1 146 1 102 1 225 1 232 1 135 2 59 1 7 1 176 1 76 1 209 2 
0 1 37 2 366 2 146 1 102 1 225 1 230 1 232 1 135 4 59 1 7 1 176 2 76 2 209 2 
0 1 37 2 366 2 146 1 102 1 225 1 17 1 232 1 135 4 59 1 7 1 176 2 76 2 209 2 
82 3 371 1 264 3 65 1 223 2 102 3 166 6 290 1 59 4 244 3 283 1 209 7 364 3 
0 1 37 2 366 2 146 1 102 1 225 1 17 1 232 1 135 4 59 1 7 1 176 2 76 2 209 2 
222 1 206 1 288 1 247 1 185 1 378 1 97 1 
222 1 288 1 308 1 185 1 97 1 157 1 352 1 206 1 354 1 247 1 342 1 378 1 
198 1 333 1 77 1 190 1 267 1 28 1 4 1 329 1 192 1 180 1 44 1 
51 1 198 1 365 1 52 1 288 1 249 1 190 1 252 1 267 1 4 1 28 1 97 1 192 1 206 2 77 1 376 1 329 1 378 2 
119 1 365 1 288 2 241 1 190 1 41 1 4 1 267 2 349 1 97 1 192 1 77 1 51 1 198 3 52 2 249 1 107 1 252 1 28 1 206 2 336 1 376 2 378 2 
119 1 286 1 365 1 288 2 241 1 190 1 41 1 4 2 267 2 349 1 97 1 192 1 77 2 325 1 198 3 52 2 249 1 107 1 252 1 28 2 206 2 336 1 376 2 378 2 
119 1 286 1 198 4 52 1 164 2 107 1 190 1 213 1 175 1 267 1 4 3 28 3 5 1 151 1 192 1 74 1 193 1 159 1 336 1 77 3 33 1 314 2 329 1 
119 1 286 1 198 4 52 1 164 2 107 1 190 1 131 1 175 1 267 1 4 3 28 3 151 1 192 1 74 1 193 1 159 1 336 1 77 3 33 1 314 2 329 1 
234 1 77 1 190 1 28 1 4 1 192 1 
25 1 198 3 144 1 248 1 52 1 199 1 3 1 105 1 190 2 109 1 4 6 28 7 267 2 375 1 96 1 192 3 234 1 353 1 77 7 60 1 329 2 
37 2 288 1 93 1 3 1 190 1 40 1 290 1 4 1 243 1 192 1 244 1 97 2 300 1 51 1 198 1 52 1 249 1 102 3 166 2 54 1 252 1 59 3 206 2 207 1 116 1 364 1 209 6 65 1 365 1 366 2 174 1 267 1 176 2 76 2 77 1 270 2 82 2 371 1 223 1 28 1 135 4 337 2 376 1 283 1 378 2 343 1 344 1 
188 2 39 2 317 1 71 1 4 1 151 1 175 1 350 1 74 2 193 1 159 1 77 1 100 1 329 1 179 2 101 1 198 2 164 3 103 1 360 1 131 1 111 1 28 1 237 1 32 2 33 1 314 3 142 1 
198 2 52 1 3 1 190 1 151 1 4 2 28 2 267 1 192 2 234 1 353 1 77 2 284 1 
286 1 198 1 3 1 190 1 4 4 28 4 267 1 192 1 6 1 44 1 77 4 329 1 180 1 
25 1 198 1 130 1 52 1 107 1 190 1 109 1 229 1 4 2 28 2 267 1 192 2 77 2 208 1 
86 1 306 1 77 1 190 1 69 1 28 1 4 1 348 1 329 1 192 1 
198 1 248 1 212 1 3 1 190 1 4 2 28 2 267 1 375 1 192 1 77 2 
198 3 199 1 107 1 3 1 190 2 4 4 28 5 267 2 375 1 192 2 6 1 44 1 77 5 60 1 329 1 180 1 
198 3 199 1 107 1 3 1 190 2 291 1 4 4 28 5 267 2 375 1 192 2 6 1 44 1 77 5 329 1 180 1 
198 1 365 1 52 1 288 1 249 1 190 1 252 1 267 1 4 1 28 1 97 1 192 1 206 2 77 1 376 1 325 1 329 1 378 2 
25 1 198 1 52 1 107 1 105 1 190 1 109 1 4 1 28 1 267 1 192 2 353 1 77 1 
70 1 341 1 8 1 97 1 351 1 
164 2 241 1 41 1 70 1 175 1 167 1 349 1 97 1 351 2 136 1 193 1 159 1 168 1 235 1 142 1 314 2 341 2 8 2 263 1 
206 1 123 1 288 1 307 1 70 1 221 1 341 1 8 1 378 1 
70 1 167 1 263 1 
333 1 281 1 347 1 11 1 
277 1 126 1 236 1 281 1 250 1 347 1 11 1 
370 1 250 1 309 1 
277 3 126 1 210 1 236 1 281 1 242 2 250 3 347 1 11 1 276 1 269 1 23 1 
277 2 126 1 145 1 236 1 281 1 250 2 347 1 11 1 171 1 
45 1 321 1 277 1 86 1 126 1 210 1 306 1 236 1 250 1 347 1 298 1 
277 1 126 1 210 1 236 1 250 1 347 1 11 1 
277 1 126 1 210 1 236 1 281 1 250 1 11 2 
277 2 121 1 126 2 304 1 210 1 236 2 250 2 347 1 11 1 16 1 
321 1 277 3 126 1 210 1 236 1 281 1 250 3 347 2 340 1 11 1 134 1 85 1 171 2 
210 1 306 1 227 1 250 2 347 1 11 1 348 1 277 2 45 1 86 2 126 1 236 1 281 1 197 1 171 1 
321 1 277 4 126 2 210 1 145 1 236 2 281 1 106 1 250 4 347 2 11 1 85 1 171 2 
277 1 126 1 210 1 236 1 281 1 250 1 347 1 11 1 
242 1 250 4 347 3 11 2 269 1 85 1 277 4 321 1 126 1 236 1 281 2 46 1 171 2 23 1 
277 2 126 1 210 1 1 1 236 1 281 1 88 1 250 2 347 1 11 1 171 1 205 1 
277 3 125 1 126 1 210 1 236 1 281 1 242 2 250 3 347 1 11 1 269 1 23 2 
183 1 14 1 347 2 294 2 
277 1 126 1 210 1 236 1 339 1 250 1 
277 2 126 1 210 1 236 1 281 1 250 2 347 1 11 1 134 1 171 1 
346 1 
277 1 126 1 210 1 236 1 281 1 250 1 347 1 11 1 
277 3 126 1 210 1 236 1 281 1 242 1 250 3 347 1 11 1 134 1 171 1 
321 1 46 1 347 1 85 1 
347 1 11 1 

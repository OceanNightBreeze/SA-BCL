#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 121 2 30 6 99 1 168 1 101 1 100 2 192 1 191 9 193 4 150 1 301 1 5 1 12 1 153 2 277 1 202 1 13 2 87 2 14 9 18 1 309 3 137 1 235 2 72 1 381 2 212 1 239 5 
73 1 121 2 30 6 99 1 168 1 101 1 100 2 192 1 191 9 193 4 150 1 301 1 5 1 12 1 153 2 277 1 202 1 13 2 87 2 14 9 18 1 309 3 137 1 235 2 72 1 381 2 212 1 239 5 
73 1 121 2 30 7 99 1 168 1 101 1 100 2 192 1 191 10 193 5 150 1 301 1 5 1 12 1 153 2 277 1 202 1 13 2 87 2 14 10 18 1 309 4 137 1 235 2 72 1 381 2 212 1 239 6 
73 1 121 2 30 4 99 1 168 1 100 2 192 1 191 7 193 3 150 1 301 1 5 1 12 1 153 2 277 1 202 1 13 2 87 2 14 7 18 1 309 2 137 1 235 1 72 1 381 2 212 1 239 4 
153 1 121 1 13 1 202 1 14 4 30 3 18 1 101 1 100 1 192 1 191 4 193 2 309 1 5 1 235 2 381 1 212 1 239 3 
153 1 73 1 121 1 202 1 13 1 14 2 87 1 192 1 191 2 137 1 195 1 83 1 345 1 381 1 239 1 212 1 
153 2 121 2 202 1 14 3 87 1 30 1 192 1 191 3 193 1 309 1 72 1 212 1 239 2 
121 2 30 7 168 1 100 1 101 1 192 1 191 9 193 4 5 1 153 2 277 1 202 1 13 1 87 1 14 9 284 1 18 1 309 3 289 1 235 2 72 1 381 1 212 1 239 5 
121 2 30 7 168 1 100 1 101 1 192 1 191 9 193 4 5 1 153 2 277 1 202 1 13 1 87 1 14 9 284 1 18 1 309 3 289 1 235 2 72 1 381 1 212 1 239 5 
29 1 176 1 80 1 
29 1 315 1 206 2 
181 2 34 2 335 2 36 2 152 2 318 1 227 2 180 1 
241 1 335 2 28 1 270 1 318 1 361 1 2 1 3 1 34 2 36 2 82 2 7 2 152 2 130 1 346 1 251 1 227 3 322 1 66 1 349 1 67 1 283 1 133 1 134 1 373 2 306 2 258 1 205 1 113 1 180 1 181 3 357 1 210 1 142 2 119 1 94 1 266 1 
181 1 34 1 228 1 335 1 36 1 152 1 128 1 227 1 194 1 180 1 
216 1 29 1 176 1 228 1 1 1 76 1 77 1 181 1 34 1 103 1 64 1 314 1 70 1 227 1 
216 1 29 1 176 1 335 1 228 1 1 2 77 1 181 1 34 1 103 1 36 1 314 1 152 1 70 2 227 1 
364 1 1 1 338 1 70 1 295 1 
364 1 184 1 29 1 176 1 1 2 70 2 295 1 25 1 
364 1 1 1 70 1 
228 1 282 1 335 1 1 1 295 1 194 1 180 1 181 1 34 1 36 1 152 1 128 1 70 1 227 1 
29 1 
364 1 55 1 29 1 176 1 1 2 70 2 295 1 25 1 
74 1 278 1 359 1 29 1 176 1 148 2 177 2 178 1 1 5 295 2 247 1 300 1 311 1 364 2 185 2 65 1 70 5 237 1 25 1 
80 1 318 1 
335 1 88 1 318 2 181 2 34 2 36 1 152 1 188 1 227 2 
132 1 166 1 242 1 
349 1 67 1 283 1 17 1 133 1 373 1 306 1 258 1 270 1 318 1 181 1 2 1 82 1 130 1 119 1 227 1 
181 3 232 1 34 3 335 3 36 1 152 3 318 1 227 3 
181 1 34 1 228 1 335 1 152 1 128 1 227 1 
181 1 34 1 228 1 335 1 88 1 36 1 152 1 188 1 227 1 
241 1 216 1 335 3 1 1 270 1 77 1 318 1 361 1 2 1 3 1 103 1 34 3 36 2 82 1 7 2 152 3 130 1 227 4 322 1 66 1 349 1 67 1 283 1 228 1 230 1 133 1 354 1 373 1 258 1 306 1 205 1 113 1 180 1 181 4 232 1 357 1 117 1 314 1 142 1 188 1 70 1 119 1 94 1 266 1 
181 2 232 1 34 2 335 1 64 1 152 1 318 1 171 1 227 2 
216 1 29 1 228 1 335 3 1 1 354 1 77 1 181 3 299 1 232 2 34 3 103 1 36 1 117 1 314 1 152 3 188 1 70 1 227 3 
181 2 232 1 34 2 335 2 166 1 36 1 152 2 188 1 242 1 227 2 
67 1 349 1 283 1 133 1 373 1 306 1 258 1 270 1 318 1 181 1 2 1 82 1 130 1 119 1 227 1 
67 1 349 1 283 1 373 1 306 1 270 1 318 1 222 1 181 1 2 1 226 1 82 1 130 1 119 1 227 1 
54 1 241 1 165 1 166 2 242 2 3 1 366 1 7 2 346 2 322 1 10 1 41 1 66 1 132 2 370 1 285 1 113 1 259 1 91 1 263 1 357 1 211 1 142 4 266 2 
181 1 34 1 173 1 228 1 335 1 314 1 152 1 227 1 
349 1 67 1 283 1 335 1 166 1 133 1 373 1 270 1 258 1 306 1 181 2 2 1 232 1 34 1 117 1 82 1 152 1 119 1 130 1 227 2 
335 4 318 1 171 1 181 5 232 2 34 5 64 1 36 1 117 1 379 1 22 1 152 4 188 1 227 5 
181 2 173 1 34 2 228 1 335 2 152 2 128 1 227 2 
302 1 145 1 
302 1 145 1 
238 1 135 1 
238 1 135 1 
238 1 135 1 
302 1 146 1 145 1 
302 1 146 1 145 1 
246 1 302 1 145 1 
348 1 302 2 145 2 238 1 333 1 135 1 
302 1 146 1 145 1 
302 1 145 1 303 1 
302 1 145 1 303 1 
302 1 145 1 303 1 
189 1 75 1 29 1 58 2 287 2 1 2 339 2 374 2 271 2 79 1 261 1 329 3 53 1 37 1 70 2 302 2 23 1 145 2 333 1 
96 1 335 2 56 1 58 1 1 1 339 1 318 1 271 1 246 1 34 2 152 2 302 1 227 2 350 1 287 1 181 2 49 1 261 1 329 1 70 1 186 1 187 1 145 1 26 1 
13 1 100 1 381 1 
13 1 195 1 381 1 
13 3 195 1 273 1 38 1 100 2 332 1 
13 2 195 1 273 1 38 1 100 1 201 1 
13 2 195 1 273 1 100 1 38 2 
358 1 54 1 96 1 29 2 148 1 1 5 295 4 300 2 364 1 274 1 366 1 319 2 65 3 344 2 320 1 10 1 131 1 175 1 176 1 177 1 254 1 112 1 206 3 155 2 49 1 91 1 185 1 70 5 186 1 315 1 237 1 25 1 
54 3 359 1 29 5 148 2 1 9 338 5 295 7 221 1 245 1 62 1 300 6 364 6 274 2 366 3 319 6 275 1 65 8 344 6 320 2 10 3 131 3 176 1 177 2 112 1 206 9 288 5 91 3 185 2 186 4 70 9 315 3 163 1 237 1 164 1 25 1 
358 1 54 1 359 1 29 3 148 1 1 3 295 2 300 2 274 1 366 1 319 2 65 3 320 1 344 2 10 1 175 1 131 1 176 1 177 1 155 1 206 4 91 1 185 1 70 3 186 1 315 2 
358 1 54 2 359 1 29 4 148 1 1 4 295 3 62 1 300 4 274 1 366 2 319 4 275 1 65 5 344 4 320 1 10 2 175 1 131 2 176 1 177 1 206 7 155 2 91 2 185 1 70 4 186 2 315 3 163 1 
92 1 349 1 80 1 
349 1 104 1 
264 1 
349 1 270 1 
92 2 349 3 270 1 119 1 199 1 114 1 
349 1 270 1 119 1 
349 1 280 1 
54 1 253 1 217 1 32 1 170 1 362 1 259 3 78 1 91 1 158 2 105 1 262 1 198 1 211 2 142 7 346 4 266 3 
54 1 253 1 217 1 32 1 170 1 362 1 259 3 78 1 91 1 158 2 105 1 262 1 198 1 211 2 142 7 346 4 266 3 
54 1 253 1 217 1 32 1 170 1 362 1 259 3 78 1 157 1 91 1 158 2 105 1 262 1 198 1 211 2 142 7 346 4 266 3 
54 4 241 1 268 1 217 2 32 1 170 1 362 2 272 1 78 2 105 2 198 1 7 2 366 3 9 3 346 16 322 1 10 3 131 3 253 5 203 1 325 1 353 1 113 1 259 10 183 1 158 3 91 4 262 1 357 1 139 4 211 5 142 31 331 1 266 15 
54 1 241 2 217 1 32 1 362 1 78 1 105 1 7 4 198 1 346 5 322 2 253 1 203 1 324 1 113 2 259 4 91 1 158 2 262 1 357 2 211 3 142 9 93 1 266 4 
121 1 30 1 100 1 61 1 192 1 191 2 172 1 2 1 195 1 82 1 343 1 153 1 110 1 202 1 13 2 14 2 87 1 67 1 352 1 255 1 373 1 306 1 46 1 207 1 308 1 144 1 332 1 381 1 239 1 212 1 
121 1 30 2 60 1 100 1 61 1 192 1 191 3 172 1 2 1 195 1 82 1 81 1 343 1 153 1 13 2 14 3 87 1 67 1 352 1 255 1 373 1 256 1 306 1 207 1 308 1 332 1 144 1 381 1 239 1 212 1 
30 2 60 1 61 1 100 1 192 1 191 2 2 1 195 1 82 1 81 1 343 1 13 2 87 1 14 2 67 1 352 1 373 1 306 1 207 1 308 1 144 1 332 1 381 1 239 1 212 1 
153 1 121 1 67 1 349 1 87 2 14 1 19 1 256 1 373 1 270 1 306 1 191 1 207 2 308 2 2 1 208 1 161 1 82 1 129 1 144 2 130 1 200 1 213 1 
121 1 100 1 61 1 191 1 172 1 2 1 195 1 82 1 81 1 343 1 153 1 110 1 202 1 13 2 14 1 87 1 67 1 352 1 255 1 373 1 306 1 207 1 308 1 144 1 332 1 381 1 
365 1 
240 2 148 1 190 1 1 5 243 2 244 1 2 1 103 1 300 2 151 1 64 1 65 2 107 2 11 2 349 1 67 1 68 2 306 2 257 1 206 2 20 1 159 2 356 2 160 1 161 1 314 1 70 5 315 2 25 3 216 1 29 2 76 1 270 1 77 1 126 1 34 1 364 6 274 1 82 2 129 1 85 1 130 2 227 1 281 1 176 1 228 1 177 1 326 1 373 2 90 1 181 1 50 1 185 1 294 4 237 1 
55 1 216 1 281 1 228 1 326 1 1 3 76 1 257 1 77 1 20 1 181 1 34 1 103 1 364 2 356 1 160 1 314 1 64 1 294 2 70 3 227 1 25 1 
11 1 55 1 216 1 281 1 29 1 176 1 228 1 326 1 1 3 76 1 257 1 77 1 20 1 181 1 34 1 103 1 364 1 160 1 314 1 64 1 294 3 70 3 227 1 25 1 
55 1 216 1 29 1 1 3 76 1 77 1 243 1 103 1 34 1 364 2 64 1 227 1 11 1 281 1 228 1 176 1 326 1 257 1 20 1 181 1 160 1 356 1 314 1 70 3 294 3 25 1 
240 2 55 1 148 1 190 1 1 5 243 4 103 1 248 1 300 1 64 1 65 1 107 2 11 4 351 1 257 1 68 2 20 1 159 2 356 4 160 1 314 1 70 5 315 2 25 3 216 1 29 5 31 1 76 1 77 1 126 1 34 1 364 7 227 1 281 1 228 1 176 5 177 1 326 1 181 1 48 1 290 1 185 1 294 6 237 1 
240 2 148 1 190 1 1 4 243 2 103 1 300 1 64 1 65 1 107 2 11 2 257 1 68 2 20 1 206 2 159 2 160 1 356 2 314 1 70 4 315 2 25 2 216 1 29 2 76 1 77 1 126 1 34 1 364 4 227 1 281 1 228 1 176 1 177 1 326 1 90 1 181 1 185 1 294 4 237 1 
240 2 216 1 29 1 148 1 190 1 1 4 31 1 76 1 243 2 77 1 126 1 103 1 34 1 364 4 300 1 64 1 65 1 107 2 227 1 11 2 281 1 176 1 228 1 351 1 177 1 326 1 68 2 257 1 20 1 181 1 48 1 159 2 356 2 160 1 314 1 185 1 70 4 294 4 315 2 237 1 25 2 
240 2 216 1 29 1 148 1 190 1 1 4 31 1 76 1 243 2 77 1 126 1 103 1 34 1 364 4 300 1 64 1 65 1 107 2 227 1 11 2 281 1 176 1 228 1 351 1 177 1 326 1 68 2 257 1 20 1 181 1 48 1 159 2 356 2 160 1 314 1 185 1 70 4 294 4 315 2 237 1 25 2 
216 1 29 1 148 1 1 4 59 2 76 1 243 2 77 1 126 1 103 1 34 1 364 4 300 1 4 1 64 1 342 1 65 1 227 1 11 2 281 1 176 1 228 1 351 1 177 1 326 1 204 1 68 2 257 1 206 2 20 1 181 1 159 2 356 2 160 1 314 1 185 1 70 4 294 4 71 2 237 1 25 2 
240 2 335 1 148 1 190 1 1 4 243 3 194 1 103 1 248 1 300 1 64 1 152 1 65 1 107 2 11 3 351 1 257 1 68 2 20 1 159 2 356 3 160 1 314 1 70 4 315 2 25 2 216 1 29 1 31 1 76 1 77 1 126 1 34 2 364 5 36 1 128 1 227 2 281 1 282 1 228 2 176 1 177 1 326 1 180 1 181 2 48 1 185 1 294 5 237 1 
240 2 335 1 148 1 190 1 1 4 243 3 194 1 103 1 248 1 300 1 64 1 152 1 65 1 107 2 11 3 351 1 257 1 68 2 20 1 159 2 356 3 160 1 314 1 70 4 315 2 25 2 216 1 29 1 31 1 76 1 77 1 126 1 34 2 364 5 36 1 128 1 227 2 281 1 282 1 228 2 176 1 177 1 326 1 180 1 181 2 48 1 185 1 294 5 237 1 
148 1 1 4 59 2 243 2 103 1 300 1 64 1 65 1 11 2 204 1 257 1 68 2 20 1 206 2 159 2 160 1 356 2 314 1 70 4 71 2 25 2 216 1 29 1 76 1 77 1 126 1 34 1 364 4 227 1 281 1 228 1 176 1 177 1 326 1 90 1 181 1 185 1 294 4 237 1 
54 1 66 1 241 1 132 1 370 1 166 1 217 1 32 1 242 1 318 2 113 1 259 2 3 1 158 1 91 1 80 1 105 1 262 1 357 1 198 1 211 2 7 2 142 6 346 3 266 3 322 1 
54 2 241 2 124 1 166 11 242 4 318 1 3 2 197 1 7 4 366 1 9 3 251 1 346 8 322 2 10 2 66 1 253 1 131 2 132 11 305 1 325 1 205 1 113 2 259 2 183 1 91 1 138 1 139 3 233 1 357 2 211 1 142 14 266 6 
267 1 241 1 335 1 270 1 242 1 318 1 298 1 2 1 3 1 34 1 82 1 7 2 152 1 130 1 227 2 251 1 346 1 322 1 66 1 349 1 67 1 283 1 305 1 133 1 17 1 373 1 258 1 306 1 376 1 205 1 113 1 181 2 232 1 117 1 357 1 142 2 119 1 266 1 
54 3 241 3 335 1 242 7 2 2 3 3 63 2 105 1 198 1 7 6 152 1 251 1 346 10 10 2 66 3 253 4 67 2 349 2 305 1 16 2 306 3 258 2 205 1 113 3 259 8 158 1 262 1 357 3 117 1 211 4 119 2 266 10 360 1 166 7 217 1 32 1 169 1 270 2 318 2 361 2 34 1 81 1 82 3 366 2 130 1 227 3 322 3 131 2 132 7 283 2 371 2 133 2 89 1 373 3 181 3 232 1 91 3 52 2 142 20 
241 2 335 1 219 1 102 1 270 2 223 1 2 2 3 2 34 1 225 1 81 1 82 8 7 4 152 1 130 2 129 1 227 1 251 1 346 1 322 2 66 2 67 2 349 3 370 1 286 1 111 1 134 2 373 7 306 8 46 1 205 1 307 1 113 2 181 1 232 1 357 2 161 1 142 2 266 1 
54 1 241 1 335 1 166 1 317 1 242 1 3 1 34 1 36 1 7 2 366 1 152 1 227 1 346 1 322 1 10 1 66 1 131 1 132 1 305 1 113 1 181 1 259 1 91 1 357 1 211 1 142 3 188 1 266 2 
10 1 66 1 54 1 253 1 241 1 132 1 370 1 166 1 285 1 242 1 113 1 259 1 3 1 357 1 7 2 142 2 346 2 322 1 
66 1 241 1 132 1 165 1 370 1 166 1 242 1 113 1 259 1 3 1 91 1 357 1 211 1 7 2 366 1 142 2 322 1 266 2 
10 1 66 1 54 1 253 1 241 1 131 1 132 2 370 1 166 2 242 2 113 1 259 2 3 1 91 1 357 1 211 1 366 1 7 2 142 4 346 2 266 2 322 1 
10 1 66 1 54 1 253 1 241 1 132 1 166 1 285 1 242 1 113 1 223 1 259 1 3 1 357 1 7 2 142 2 346 2 322 1 
66 1 241 1 132 1 165 1 166 1 242 1 113 1 223 1 259 1 3 1 91 1 357 1 211 1 7 2 366 1 142 2 322 1 266 2 
10 1 66 1 54 1 253 1 241 1 131 1 132 2 166 2 242 2 113 1 223 1 259 2 3 1 91 1 357 1 211 1 366 1 7 2 142 4 346 2 266 2 322 1 
10 1 66 1 54 1 253 1 241 1 131 1 132 2 166 2 242 2 113 1 259 2 3 1 91 1 357 1 211 1 366 1 7 2 142 4 346 2 266 2 322 1 
241 1 270 1 318 1 361 1 2 1 3 1 82 1 7 2 130 1 346 1 251 1 227 1 322 1 66 1 67 1 349 1 283 1 133 1 373 1 258 1 306 1 205 1 113 1 181 1 357 1 142 2 119 1 266 1 
241 1 270 1 318 1 222 1 2 1 3 1 226 1 82 1 7 2 130 1 346 1 251 1 347 1 227 1 322 1 66 1 67 1 349 1 283 1 373 1 306 1 205 1 113 1 181 1 357 1 142 2 119 1 266 1 
10 1 66 1 54 1 253 1 241 1 131 1 132 2 166 2 305 1 242 2 113 1 259 2 3 1 91 1 357 1 211 1 366 1 7 2 142 4 346 2 266 2 322 1 
54 1 241 1 166 2 242 2 270 1 361 1 2 1 3 1 82 1 366 1 7 2 346 2 227 1 322 1 10 1 66 1 253 1 131 1 132 2 67 1 349 1 283 1 371 1 133 1 373 1 258 1 306 1 46 1 113 1 181 1 259 2 91 1 357 1 211 1 142 4 119 1 266 2 
54 1 241 1 335 1 166 1 242 1 3 1 34 1 36 1 366 1 7 2 152 1 227 1 346 2 322 1 10 1 66 1 253 1 131 1 132 1 305 1 113 1 181 1 259 1 91 1 357 1 293 1 142 3 188 1 266 1 
54 3 241 2 215 1 224 2 249 1 7 4 366 3 9 1 346 9 322 2 10 3 131 3 253 3 86 1 279 1 325 1 69 2 113 2 378 1 259 6 183 1 91 3 139 2 357 2 211 3 265 1 142 19 93 1 95 1 266 10 
54 3 241 3 215 1 224 4 249 1 106 1 7 6 366 2 9 2 39 1 346 14 322 3 323 1 10 3 253 2 131 3 203 2 279 1 15 1 325 2 69 1 113 3 378 2 259 4 91 2 313 1 357 3 139 2 211 2 234 1 265 2 142 26 93 1 266 12 
54 5 241 3 334 1 105 1 106 1 249 1 7 6 198 1 9 3 346 20 10 4 253 4 203 1 15 1 69 1 113 3 259 8 158 1 313 1 262 1 357 3 211 4 265 2 266 21 215 1 217 1 32 1 224 4 366 4 39 1 322 3 323 1 131 4 279 1 325 3 378 1 91 5 183 1 139 4 234 1 142 41 93 1 95 1 
54 5 241 4 215 1 334 1 217 1 32 1 224 4 105 1 249 1 106 1 198 1 7 8 366 3 9 3 39 1 346 20 322 4 323 1 10 4 131 4 253 3 203 2 279 1 15 1 325 3 69 1 113 4 378 1 259 7 158 1 183 1 91 4 313 1 262 1 139 4 357 4 211 4 234 1 265 2 142 38 93 1 95 1 266 18 
54 8 241 2 215 1 217 1 32 1 224 4 105 1 249 1 106 1 198 1 7 4 366 7 9 4 39 1 346 27 322 2 323 1 10 7 131 7 253 7 203 1 279 1 15 1 325 2 69 1 113 2 378 1 259 14 158 1 183 2 91 8 313 1 138 2 262 1 139 4 357 2 211 7 234 1 265 1 142 52 93 1 266 25 
271 1 189 1 58 1 53 1 236 1 287 1 339 1 302 1 145 1 333 1 
246 1 187 1 
271 1 182 1 58 1 287 1 339 1 302 1 120 1 154 1 145 1 
189 1 29 1 58 1 1 1 287 1 339 1 374 1 271 1 79 1 261 1 329 2 53 1 37 1 70 1 302 1 23 1 145 1 333 1 
189 1 29 1 58 1 1 1 287 1 339 1 374 1 271 1 79 1 261 1 329 2 53 1 37 1 70 1 302 1 23 1 145 1 333 1 
189 1 29 1 58 1 1 1 287 1 339 1 374 1 271 1 79 1 261 1 329 2 53 1 37 1 70 1 302 1 23 1 145 1 333 1 
33 1 348 1 146 1 
33 1 348 1 146 1 
260 1 303 1 
260 1 348 1 303 1 
56 1 26 1 
123 1 96 1 56 1 335 2 58 1 1 1 295 1 339 1 318 1 271 1 246 1 79 1 34 2 152 2 302 1 227 2 350 1 287 1 374 1 181 2 49 1 329 1 70 1 186 1 187 1 145 1 26 1 
33 1 146 1 
260 1 348 1 303 1 
241 1 219 1 270 1 2 1 3 1 34 2 82 2 367 1 7 2 321 1 227 2 251 1 346 1 322 1 66 1 67 1 349 1 305 1 286 1 134 2 373 2 306 2 47 1 355 1 205 1 113 1 181 2 310 1 357 1 142 2 266 1 
13 2 67 1 352 1 327 1 373 2 100 1 306 2 46 1 172 1 2 1 195 1 81 1 82 2 292 1 35 1 343 1 332 1 144 1 381 1 
13 2 67 1 352 1 327 1 373 1 100 1 306 1 297 1 172 1 2 1 195 1 81 1 82 1 343 1 332 1 144 1 381 1 
67 1 349 1 42 1 373 1 270 1 306 1 2 1 82 1 292 1 161 1 130 1 144 1 129 1 200 1 
13 2 67 1 352 1 327 1 373 1 100 1 306 1 172 1 2 1 195 1 81 1 82 1 292 1 35 1 343 1 332 1 144 1 381 1 
220 1 
74 1 278 1 300 1 29 1 176 1 80 1 65 1 
240 1 29 2 148 1 190 1 1 1 300 1 364 1 65 1 107 1 176 1 177 1 206 1 185 1 70 1 315 1 237 1 25 1 
54 2 148 4 1 5 296 2 2 2 104 3 300 8 65 9 344 6 108 2 10 2 67 1 349 6 306 2 114 1 206 12 312 2 162 1 70 5 119 1 315 6 25 3 27 1 214 1 74 1 216 2 29 8 125 2 270 1 364 5 274 2 82 2 366 2 319 6 130 1 278 1 131 2 176 2 177 4 179 1 372 2 373 2 375 2 46 1 136 2 50 1 92 2 91 2 185 4 52 2 237 4 
54 2 29 5 98 1 148 2 1 1 364 1 300 5 274 1 106 1 366 2 319 5 65 8 344 5 9 1 39 1 323 1 10 2 131 2 15 1 176 2 177 2 325 1 372 2 206 6 136 1 50 1 51 1 91 2 139 1 185 2 234 1 70 1 315 3 237 2 25 1 
54 2 335 1 148 1 217 1 1 1 194 1 34 1 300 2 105 1 36 1 198 1 152 1 128 1 84 1 65 2 227 1 228 1 282 1 177 1 372 2 180 1 136 1 181 1 48 1 91 1 185 1 70 1 237 1 
74 1 278 1 176 1 29 1 148 1 177 1 300 1 185 1 65 1 237 1 
10 2 54 2 131 2 29 5 372 2 206 10 136 1 91 2 300 5 52 1 366 2 319 5 65 5 344 5 315 5 
364 1 29 1 176 1 1 1 70 1 25 1 
359 1 148 2 1 3 270 1 363 1 2 1 364 4 300 2 151 1 196 1 82 4 274 2 65 2 85 1 130 2 129 1 67 1 349 1 177 2 373 4 306 4 50 2 161 1 185 2 162 1 70 3 24 2 237 1 25 2 
241 1 335 2 270 1 318 1 361 1 2 1 3 1 34 2 82 1 36 2 7 2 152 2 130 1 227 3 322 1 66 1 67 1 349 1 283 1 133 1 373 1 306 1 258 1 205 1 113 1 180 1 181 3 357 1 142 1 119 1 94 1 266 1 
176 2 29 4 148 1 177 1 206 4 158 1 50 1 300 2 274 1 185 1 319 2 65 1 344 2 315 2 237 1 
167 1 287 1 339 1 
167 1 287 1 339 1 
56 1 6 1 53 1 287 1 339 1 
167 1 287 1 339 1 
140 1 287 1 339 1 
140 1 287 1 339 1 
140 1 287 1 339 1 
287 1 339 1 
302 1 145 1 
54 1 253 1 241 2 203 1 217 1 32 1 113 2 259 3 158 1 91 1 262 1 105 1 357 2 198 1 211 2 7 4 142 8 346 4 266 4 322 2 
54 1 217 1 32 1 259 2 158 1 91 1 80 1 262 1 105 1 211 2 198 1 142 6 346 3 266 3 
10 1 54 1 241 1 131 1 253 1 147 1 113 1 259 2 91 1 357 1 211 1 366 1 7 2 142 4 346 2 266 2 322 1 
10 1 54 1 131 1 253 1 325 1 259 2 91 1 183 1 139 2 211 1 366 1 142 7 9 1 346 3 266 4 
54 3 241 2 124 1 217 2 32 1 269 1 105 2 198 1 366 2 7 4 9 2 346 11 322 2 10 2 253 4 131 2 203 2 113 2 259 9 158 1 183 1 91 3 138 1 262 1 139 2 357 2 211 5 142 23 266 12 
139 1 142 1 266 1 
142 1 9 1 346 1 
10 1 54 1 241 1 131 1 253 1 147 1 113 1 259 3 91 1 357 1 7 2 52 1 366 1 211 2 142 6 346 3 322 1 266 3 
54 2 241 1 106 1 7 2 366 2 9 1 39 1 346 6 322 1 323 1 10 2 253 1 131 2 15 1 325 1 113 1 259 2 91 2 139 1 357 1 211 1 234 1 142 12 93 1 266 6 
54 1 253 1 217 1 259 2 91 1 105 1 198 1 211 1 142 6 346 3 266 3 
253 1 241 1 203 1 217 1 269 1 32 1 113 1 259 2 105 1 262 1 357 1 211 1 7 2 142 3 346 1 266 2 322 1 
54 2 241 1 253 2 217 2 113 1 259 5 91 2 105 2 357 1 7 2 211 3 198 1 142 10 93 1 84 1 346 5 322 1 266 5 
10 1 54 1 241 1 253 1 113 1 259 1 357 1 7 2 142 2 93 1 346 2 322 1 
10 1 54 1 241 1 131 1 253 1 113 1 259 2 91 1 357 1 211 1 366 1 7 2 142 4 93 1 346 2 266 2 322 1 
241 3 253 1 203 1 217 1 269 1 113 3 259 2 105 1 357 3 7 6 211 1 142 3 93 1 346 1 95 1 266 2 322 3 
54 5 241 5 147 1 217 3 32 1 269 1 272 1 105 3 198 2 7 10 366 3 9 3 346 16 322 5 10 3 131 3 253 5 203 2 353 1 325 1 113 5 259 12 158 1 183 1 91 5 262 1 139 4 357 5 211 7 142 34 331 1 93 1 266 18 95 1 
54 1 241 1 217 1 32 1 105 1 7 2 198 1 9 1 39 1 346 4 322 1 325 1 113 1 259 2 158 1 91 1 262 1 139 1 357 1 211 2 142 8 93 1 266 4 
54 2 241 2 147 1 217 1 32 1 105 1 198 1 7 4 9 1 39 1 346 6 322 2 10 1 131 1 253 1 325 1 113 2 259 3 158 1 91 1 183 1 262 1 139 2 357 2 211 2 142 11 93 1 266 5 
54 3 241 3 147 1 217 1 32 1 105 1 106 1 198 1 7 6 366 2 9 1 39 1 346 9 322 3 323 1 10 2 253 1 131 2 203 1 15 1 325 1 113 3 259 4 158 1 91 3 262 1 139 1 357 3 211 3 234 1 142 19 93 1 266 10 
54 3 241 3 147 1 217 1 32 1 105 1 106 1 198 1 7 6 366 1 9 1 39 1 346 10 322 3 323 1 10 2 253 2 131 2 203 1 15 1 325 1 113 3 259 5 158 1 91 2 262 1 139 1 357 3 211 3 234 1 142 17 93 1 266 7 
54 1 241 1 217 1 32 1 105 1 7 2 198 1 9 1 39 1 346 4 322 1 325 1 113 1 259 2 158 1 91 1 262 1 139 1 357 1 211 2 142 8 93 1 266 4 
54 2 241 1 106 1 7 2 366 2 9 1 39 1 346 6 322 1 323 1 10 2 253 1 131 2 15 1 325 1 113 1 259 2 91 2 139 1 357 1 211 1 234 1 142 12 93 1 266 6 
54 3 241 4 147 1 217 1 32 1 105 1 106 1 198 1 7 8 366 1 9 1 39 1 346 10 322 4 323 1 10 2 253 2 131 2 203 2 15 1 325 1 113 4 259 5 158 1 91 2 262 1 139 1 357 4 211 3 234 1 142 18 93 1 266 8 
54 3 241 4 106 1 7 8 366 2 9 1 39 1 346 9 322 4 323 1 10 3 253 3 131 3 203 2 15 1 325 1 113 4 259 6 91 2 139 1 357 4 211 3 234 1 142 16 93 1 266 7 95 1 
54 1 253 3 217 3 32 1 259 6 91 1 262 2 105 3 211 3 198 1 142 7 346 3 266 4 
54 3 241 4 217 1 32 1 105 1 106 1 198 1 7 8 366 1 9 1 39 1 346 10 322 4 323 1 10 2 253 1 131 2 203 2 15 1 325 1 113 4 259 4 158 1 91 2 262 1 139 1 357 4 211 3 234 1 142 18 93 1 266 8 95 1 
181 1 34 1 64 1 45 1 318 1 227 1 171 1 
122 1 45 1 318 1 171 1 181 1 34 1 291 1 116 1 64 1 276 1 227 1 252 1 
2 1 67 1 349 1 80 1 161 1 82 1 373 1 270 1 129 1 306 1 130 1 
349 1 67 1 283 1 335 1 373 1 270 1 306 1 258 1 318 1 181 2 2 1 232 1 34 1 82 1 152 1 119 1 130 1 227 2 
280 1 349 3 67 1 228 1 283 1 335 2 218 1 373 1 77 1 270 2 306 1 258 1 318 1 181 2 2 1 232 1 34 2 314 1 82 1 152 1 119 2 24 1 227 2 
335 2 0 1 218 1 270 2 77 1 318 1 2 1 34 2 226 1 82 2 152 1 227 2 67 1 349 3 280 1 283 1 228 1 373 2 306 2 181 2 232 1 314 1 119 2 24 1 
216 1 97 1 29 1 0 1 1 2 218 1 270 1 2 1 364 1 104 1 82 3 8 1 130 1 67 1 349 4 280 1 176 1 373 3 306 3 92 1 70 2 119 1 24 1 
216 1 280 1 349 4 67 1 29 1 176 1 0 1 1 2 218 1 373 3 270 1 306 3 2 1 92 1 104 1 364 1 82 3 70 2 130 1 119 1 24 1 108 1 
2 1 67 1 82 1 111 1 373 1 306 1 
349 3 67 2 286 1 111 1 134 1 373 6 102 1 306 7 270 2 46 1 328 1 307 1 114 1 377 1 2 3 225 1 81 1 82 7 141 1 130 2 119 1 
54 1 241 2 335 1 242 1 2 1 3 2 105 1 7 4 198 1 152 1 346 3 66 2 67 1 349 1 305 1 16 1 258 1 306 1 113 2 259 2 158 1 262 1 357 2 211 2 119 1 266 3 166 1 217 1 32 1 270 1 318 2 361 1 34 1 82 1 227 2 322 2 132 1 283 1 371 1 133 1 373 1 46 1 47 1 181 2 232 1 91 1 142 6 
74 1 216 1 29 1 148 2 1 3 295 1 125 1 300 1 104 1 364 2 82 1 65 1 130 1 108 1 278 1 349 2 176 1 177 2 373 1 306 1 375 1 92 1 312 1 185 2 162 1 70 3 237 2 25 1 
349 2 67 1 111 1 179 1 373 1 306 1 270 1 114 1 2 2 92 1 82 1 264 1 119 1 
349 1 67 1 0 1 57 1 373 4 306 4 270 1 46 1 2 1 82 4 161 1 130 1 129 1 
304 1 349 1 67 1 89 1 373 2 306 2 270 1 328 1 377 1 2 2 82 2 119 1 24 1 250 1 
2 1 13 1 67 1 195 1 82 1 343 1 373 1 306 1 130 1 381 1 
349 1 67 1 286 1 373 2 306 2 270 1 46 1 2 1 310 1 82 2 81 1 
349 3 67 2 57 1 286 1 373 4 306 5 102 1 270 2 46 1 2 2 225 1 161 1 82 5 129 1 130 1 24 1 
349 3 67 2 57 1 286 1 373 4 306 5 270 2 46 1 156 1 2 2 225 1 161 1 82 5 129 1 130 1 24 1 
349 1 67 1 283 1 335 1 373 1 270 1 306 1 318 1 181 2 2 1 232 1 34 1 226 1 82 1 152 1 119 1 130 1 227 2 
349 1 67 1 373 1 306 1 270 1 328 1 114 1 377 1 2 2 82 1 141 1 119 1 24 1 
181 1 149 1 109 1 34 1 367 1 143 1 321 1 227 1 355 1 
149 1 43 1 44 1 
149 1 109 1 209 1 143 1 318 1 
109 2 369 1 216 1 29 1 176 1 228 1 43 1 44 1 1 2 354 1 295 1 77 1 318 1 149 1 103 1 209 2 314 1 70 2 143 2 
80 1 192 1 239 1 212 1 
153 1 121 1 14 1 192 1 191 1 239 1 212 1 
87 1 14 1 207 1 
153 1 121 1 202 1 14 3 336 1 191 3 192 1 137 2 340 1 127 1 239 1 212 1 
153 1 121 1 14 2 30 1 235 1 192 1 191 2 239 1 212 1 
153 1 121 1 202 1 13 1 14 1 18 1 100 1 191 1 193 1 381 1 239 1 
153 1 121 1 202 1 14 1 191 1 239 1 212 1 
153 1 121 1 202 1 14 1 192 1 191 1 212 2 
153 2 121 2 202 1 14 2 191 2 174 1 330 1 239 1 212 1 40 1 
153 1 277 1 121 1 202 1 14 3 30 2 168 1 192 1 191 3 193 1 309 1 212 1 239 2 
153 1 121 1 13 2 202 1 14 2 30 1 100 1 192 1 191 2 195 1 118 1 332 1 381 1 239 1 212 1 
153 2 121 2 202 1 14 4 30 2 101 1 192 1 191 4 193 1 309 1 235 1 212 1 239 2 
153 1 121 1 202 1 14 1 192 1 191 1 239 1 212 1 
153 1 121 1 14 4 30 2 337 1 192 2 191 4 193 1 309 1 137 1 340 1 127 1 212 2 239 3 
153 1 121 1 202 1 14 2 284 1 30 1 231 1 191 2 192 1 21 1 239 1 212 1 
153 1 121 1 202 1 14 3 191 3 192 1 137 2 340 1 380 1 127 2 239 1 212 1 
229 1 341 2 239 2 368 1 
153 1 121 1 202 1 14 1 316 1 191 1 
277 1 153 1 121 1 202 1 14 2 30 1 192 1 191 2 239 1 212 1 
115 1 
153 1 121 1 202 1 14 1 192 1 191 1 239 1 212 1 
153 1 277 1 121 1 202 1 14 3 30 1 191 3 192 1 137 1 212 1 239 1 
309 1 337 1 193 1 239 1 
239 1 212 1 

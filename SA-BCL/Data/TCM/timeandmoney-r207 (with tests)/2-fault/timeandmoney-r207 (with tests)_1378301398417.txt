#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
359 9 58 3 308 2 60 1 330 1 269 1 149 1 334 1 153 9 338 1 191 1 340 2 177 1 156 2 317 2 75 5 226 6 198 1 277 1 232 1 254 1 257 4 163 1 300 2 98 2 203 2 55 1 206 1 
359 9 58 3 308 2 60 1 330 1 269 1 149 1 334 1 153 9 338 1 191 1 340 2 177 1 156 2 317 2 75 5 226 6 198 1 277 1 232 1 254 1 257 4 163 1 300 2 98 2 203 2 55 1 206 1 
359 10 58 4 308 2 60 1 330 1 269 1 149 1 334 1 153 10 338 1 191 1 340 2 177 1 156 2 317 2 75 6 226 7 198 1 277 1 232 1 254 1 257 5 163 1 300 2 98 2 203 2 55 1 206 1 
359 7 58 2 308 2 60 1 330 1 269 1 149 1 334 1 153 7 338 1 191 1 340 2 177 1 156 2 317 2 75 4 226 4 198 1 277 1 254 1 257 3 163 1 300 1 98 2 203 2 55 1 206 1 
317 1 58 1 359 4 308 1 226 3 75 3 198 1 232 1 269 1 257 2 153 4 300 2 338 1 98 1 340 1 203 1 206 1 55 1 
196 1 366 1 359 2 75 1 308 1 146 1 198 1 277 1 60 1 153 2 338 1 98 1 340 1 203 1 156 1 206 1 
359 3 58 1 308 2 75 2 226 1 198 1 254 1 257 1 153 3 338 1 340 2 156 1 206 1 
317 1 359 9 58 3 75 5 308 2 226 7 198 1 330 1 232 1 269 1 254 1 334 1 257 4 249 1 300 2 153 9 338 1 98 1 340 2 203 1 66 1 156 1 55 1 206 1 
317 1 359 9 58 3 75 5 308 2 226 7 198 1 330 1 232 1 269 1 254 1 334 1 257 4 249 1 300 2 153 9 338 1 98 1 340 2 203 1 66 1 156 1 55 1 206 1 
358 1 39 1 328 1 
271 2 358 1 130 1 
316 1 337 2 303 1 217 2 3 2 29 2 283 2 268 2 
284 2 0 2 119 1 57 2 3 2 29 3 268 2 148 1 170 2 213 1 337 2 63 1 217 2 218 1 193 1 87 1 316 1 90 1 227 1 16 1 319 1 372 1 321 1 47 1 114 1 136 1 50 1 94 1 52 1 79 1 164 1 181 1 303 1 377 1 182 2 283 3 205 1 
316 1 179 1 337 1 313 1 217 1 3 1 29 1 283 1 349 1 268 1 
358 1 179 1 29 1 352 1 187 1 312 1 302 1 217 1 67 1 283 1 378 1 23 1 85 1 328 1 
358 1 179 1 3 1 29 1 268 1 352 2 312 1 337 1 302 2 217 1 67 1 283 1 378 1 85 1 328 1 
241 1 302 1 371 1 363 1 352 1 
241 1 358 1 301 1 302 2 363 1 5 1 328 1 352 2 
241 1 302 1 352 1 
316 1 179 1 337 1 313 1 302 1 217 1 3 1 29 1 363 1 283 1 349 1 268 1 110 1 352 1 
358 1 
241 1 358 1 302 2 363 1 142 1 5 1 328 1 352 2 
184 1 71 1 241 2 358 1 287 1 225 2 243 2 210 1 267 1 246 1 5 1 247 1 352 5 140 1 324 2 302 5 363 2 328 1 195 1 
284 1 57 1 16 1 3 1 47 1 289 1 29 2 148 1 268 1 173 1 63 1 164 1 377 1 217 1 218 1 182 1 283 2 84 1 193 1 87 1 
39 1 303 1 
3 1 29 2 268 1 337 1 303 2 217 2 304 1 65 1 283 2 
158 1 81 1 84 1 
284 1 57 1 16 1 29 1 47 1 148 1 63 1 164 1 303 1 377 1 218 1 238 1 182 1 283 1 193 1 87 1 
173 1 337 1 303 1 217 3 3 3 29 3 283 3 268 3 
179 1 313 1 217 1 3 1 29 1 283 1 268 1 
179 1 337 1 217 1 3 1 304 1 65 1 29 1 283 1 268 1 
284 1 0 2 119 1 57 1 120 1 3 3 29 4 289 1 148 1 268 3 170 1 213 1 312 1 173 1 337 2 63 1 217 3 218 1 67 1 193 1 87 1 316 1 179 1 227 1 16 1 319 1 46 1 372 1 321 1 47 1 136 1 50 1 352 1 94 1 79 1 164 1 303 1 377 1 302 1 304 1 182 1 283 4 378 1 85 1 
187 1 173 1 273 1 303 1 217 2 3 1 29 2 283 2 268 1 
358 1 179 1 120 1 3 3 289 1 29 3 268 3 352 1 173 2 312 1 337 1 236 1 302 1 304 1 217 3 67 1 283 3 378 1 85 1 
3 2 29 2 268 2 173 1 337 1 304 1 217 2 81 1 283 2 84 1 
284 1 57 1 16 1 29 1 47 1 148 1 63 1 164 1 303 1 377 1 218 1 182 1 283 1 87 1 193 1 
284 1 57 1 367 1 16 1 29 1 47 1 148 1 63 1 164 1 303 1 218 1 182 1 283 1 83 1 193 1 
0 2 331 1 332 1 170 4 213 1 172 1 311 1 270 1 72 1 158 2 159 1 227 1 13 1 321 1 372 2 136 1 50 1 95 1 79 1 181 2 22 1 282 1 81 2 84 2 
179 1 235 1 217 1 3 1 29 1 283 1 85 1 268 1 
187 1 173 2 273 1 337 1 21 1 303 1 304 1 217 5 3 4 166 1 289 1 29 5 283 5 268 4 
179 1 313 1 235 1 217 2 3 2 29 2 283 2 268 2 
43 1 135 1 
43 1 135 1 
221 1 211 1 
221 1 211 1 
221 1 211 1 
178 1 43 1 135 1 
43 1 219 1 135 1 
221 1 41 1 43 2 211 1 135 2 180 1 
178 1 43 1 135 1 
178 1 43 1 135 1 
132 1 43 1 135 1 
132 1 43 1 135 1 
132 1 43 1 135 1 
101 1 358 1 145 2 43 2 17 1 135 2 186 2 180 1 169 2 352 2 280 2 272 3 323 1 20 1 302 2 192 1 64 1 99 2 10 1 
101 1 207 1 145 1 3 2 29 2 268 2 169 1 123 1 272 1 217 2 219 1 295 1 197 1 43 1 135 1 352 1 93 1 256 1 280 1 303 1 302 1 99 1 283 2 183 1 
317 1 98 1 203 1 
366 1 98 1 203 1 
37 1 366 1 317 2 98 3 92 1 127 1 
37 1 366 1 317 1 199 1 98 2 127 1 
37 2 366 1 317 1 98 2 127 1 
184 1 241 1 27 1 358 2 286 1 147 1 243 1 362 1 210 3 5 1 332 1 270 1 271 3 216 2 363 4 88 2 72 1 197 1 130 1 225 1 253 1 93 1 352 5 96 2 140 2 324 1 22 1 302 5 117 1 183 1 328 1 56 1 
184 1 241 6 27 3 358 5 286 2 147 1 243 2 210 8 246 1 5 1 62 1 332 3 171 1 270 3 271 9 216 6 176 5 363 7 72 3 224 1 130 3 225 2 371 5 201 1 352 9 96 6 140 6 324 2 22 3 302 9 165 1 380 1 183 4 328 1 56 2 
27 1 358 3 286 1 243 1 362 1 210 3 246 1 332 1 270 1 271 4 216 2 363 2 88 1 72 1 130 2 225 1 253 1 352 3 96 2 324 1 140 2 302 3 22 1 183 1 328 1 56 1 
27 2 358 4 286 1 243 1 362 1 210 5 246 1 62 1 332 2 171 1 270 2 271 7 216 4 363 3 88 2 72 2 130 3 225 1 253 1 352 4 96 4 324 1 140 4 302 4 22 2 380 1 183 2 328 1 56 1 
39 1 193 1 36 1 
30 1 193 1 
124 1 
63 1 193 1 
63 1 164 1 190 1 185 1 193 3 36 2 
63 1 164 1 193 1 
80 1 193 1 
72 1 159 3 42 1 59 1 372 3 161 1 105 1 332 1 106 2 170 7 7 1 311 2 51 1 97 1 181 4 157 1 327 1 
72 1 159 3 42 1 59 1 372 3 161 1 105 1 332 1 106 2 170 7 7 1 311 2 51 1 97 1 181 4 157 1 327 1 
72 1 159 3 42 1 320 1 59 1 372 3 161 1 105 1 332 1 106 2 170 7 7 1 311 2 51 1 97 1 181 4 157 1 327 1 
0 2 27 3 167 4 59 1 105 1 170 31 106 3 332 4 7 1 213 1 311 5 293 1 270 3 274 1 157 2 72 4 159 10 222 1 42 1 344 3 227 1 321 1 372 15 161 2 19 1 50 1 51 2 258 1 97 5 181 16 22 3 325 1 306 1 327 2 
0 4 59 1 212 1 105 1 332 1 170 9 106 2 213 2 311 3 157 1 72 1 159 4 227 2 42 1 321 2 372 4 161 1 50 2 51 1 97 1 181 5 326 1 306 1 327 1 
284 1 102 1 57 1 359 2 308 1 209 1 148 1 150 1 153 2 338 1 340 1 341 1 156 1 194 1 314 1 366 1 317 1 75 1 226 1 198 1 16 1 92 1 278 1 116 1 98 2 203 1 182 1 82 1 206 1 143 1 
284 1 102 1 57 1 359 3 308 1 103 1 148 1 150 1 153 3 338 1 340 1 341 1 156 1 194 1 314 1 366 1 317 1 75 1 226 2 198 1 16 1 92 1 348 1 18 1 278 1 116 1 98 2 203 1 182 1 143 1 
284 1 102 1 57 1 359 2 148 1 150 1 153 2 338 1 341 1 156 1 314 1 366 1 317 1 75 1 226 2 198 1 16 1 92 1 348 1 18 1 278 1 98 2 182 1 203 1 143 1 
284 1 102 2 57 1 359 1 308 1 16 1 91 1 297 1 103 1 133 1 347 1 148 1 150 2 153 1 63 1 8 1 340 1 218 1 182 1 193 1 156 2 220 1 143 2 
284 1 102 1 57 1 359 1 308 1 209 1 148 1 150 1 153 1 340 1 341 1 156 1 194 1 314 1 366 1 317 1 16 1 92 1 348 1 278 1 116 1 98 2 203 1 182 1 206 1 143 1 
2 1 
184 1 284 2 241 6 57 2 243 1 5 3 148 1 61 2 333 1 188 2 187 1 63 1 67 1 68 2 250 4 342 2 193 1 70 1 16 1 251 1 351 1 352 5 255 1 354 1 302 5 204 1 23 1 85 1 25 2 358 2 210 2 309 2 29 1 271 2 312 1 174 1 32 2 218 2 217 1 315 1 179 1 130 2 225 1 91 1 133 1 322 1 140 2 324 1 182 2 283 1 378 1 239 1 328 1 56 1 240 1 
25 1 241 2 29 1 5 1 187 1 312 1 217 1 67 1 250 2 179 1 251 1 322 1 352 3 255 1 354 1 302 3 283 1 378 1 142 1 239 1 23 1 85 1 
241 1 358 1 29 1 5 1 187 1 312 1 217 1 67 1 250 3 342 1 179 1 251 1 322 1 352 3 255 1 354 1 302 3 283 1 378 1 142 1 239 1 23 1 85 1 328 1 
25 1 241 2 358 1 309 1 29 1 5 1 187 1 312 1 217 1 67 1 250 3 342 1 179 1 251 1 322 1 352 3 255 1 354 1 302 3 142 1 283 1 378 1 239 1 23 1 85 1 328 1 
184 1 241 7 243 1 5 3 61 2 187 1 188 2 67 1 250 6 68 2 342 4 296 1 251 1 352 5 255 1 354 1 302 5 85 1 23 1 25 4 118 1 358 5 210 1 309 4 29 1 214 1 312 1 174 1 32 2 217 1 179 1 225 1 130 2 322 1 376 1 324 1 140 1 234 1 378 1 283 1 142 1 239 1 328 5 240 1 
184 1 241 4 243 1 5 2 61 2 187 1 188 2 67 1 250 4 68 2 342 2 251 1 351 1 352 4 255 1 354 1 302 4 85 1 23 1 25 2 358 2 210 1 309 2 29 1 312 1 271 2 174 1 32 2 217 1 179 1 225 1 130 2 322 1 324 1 140 1 378 1 283 1 239 1 328 1 240 1 
25 2 118 1 184 1 241 4 358 1 243 1 210 1 309 2 29 1 5 2 61 2 188 2 187 1 312 1 174 1 32 2 217 1 67 1 68 2 250 4 342 2 179 1 130 2 225 1 296 1 251 1 322 1 352 4 255 1 354 1 140 1 324 1 234 1 302 4 283 1 378 1 239 1 23 1 85 1 328 1 240 1 
25 2 118 1 184 1 241 4 358 1 243 1 210 1 309 2 29 1 5 2 61 2 188 2 187 1 312 1 174 1 32 2 217 1 67 1 68 2 250 4 342 2 179 1 130 2 225 1 296 1 251 1 322 1 352 4 255 1 354 1 140 1 324 1 234 1 302 4 283 1 378 1 239 1 23 1 85 1 328 1 240 1 
25 2 118 1 184 1 241 4 358 1 243 1 265 2 210 1 309 2 29 1 5 2 61 2 248 1 187 1 271 2 312 1 174 1 32 2 175 1 217 1 67 1 250 4 342 2 343 1 179 1 225 1 112 2 251 1 322 1 352 4 255 1 354 1 140 1 324 1 302 4 283 1 378 1 239 1 23 1 85 1 328 1 
118 1 184 1 25 3 241 5 358 1 243 1 210 1 309 3 29 1 5 2 61 2 188 2 187 1 312 1 174 1 32 2 217 1 67 1 68 2 250 5 342 3 179 1 130 2 225 1 296 1 251 1 322 1 352 4 255 1 376 1 354 1 140 1 324 1 234 1 302 4 283 1 378 1 239 1 23 1 85 1 328 1 240 1 
118 1 184 1 25 3 241 5 358 1 243 1 210 1 309 3 29 1 5 2 61 2 188 2 187 1 312 1 174 1 32 2 217 1 67 1 68 2 250 5 342 3 179 1 130 2 225 1 296 1 251 1 322 1 352 4 255 1 376 1 354 1 140 1 324 1 234 1 302 4 283 1 378 1 239 1 23 1 85 1 328 1 240 1 
184 1 241 4 243 1 5 2 61 2 187 1 67 1 250 4 343 1 342 2 112 2 251 1 351 1 352 4 255 1 354 1 302 4 85 1 23 1 25 2 358 1 210 1 265 2 309 2 29 1 312 1 271 2 174 1 32 2 217 1 179 1 225 1 322 1 324 1 140 1 378 1 283 1 239 1 328 1 
158 1 72 1 0 2 159 2 39 1 227 1 42 1 59 1 372 3 321 1 161 1 136 1 105 1 106 1 170 6 332 1 50 1 213 1 311 2 172 1 79 1 303 2 181 3 81 1 84 1 157 1 
0 4 27 2 167 3 266 1 122 1 170 14 332 2 213 2 311 1 293 1 270 1 129 1 158 11 72 1 159 2 222 1 227 2 344 3 76 1 372 6 231 1 321 2 114 1 136 1 50 2 94 1 97 1 79 2 303 1 181 8 22 2 81 4 84 11 
284 1 0 2 57 1 3 1 266 1 29 2 289 1 148 1 268 1 170 2 213 1 173 1 63 1 218 1 217 1 108 1 193 1 87 1 227 1 16 1 318 1 47 1 321 1 372 1 136 1 114 1 50 1 94 1 79 1 164 1 303 1 377 1 181 1 182 1 238 1 81 1 283 2 379 1 
284 3 0 6 57 3 59 1 3 1 289 1 148 2 105 1 106 1 332 3 292 2 63 2 193 2 157 1 72 3 158 7 159 8 74 2 16 2 348 1 161 1 114 1 79 3 164 2 303 2 22 2 81 7 84 7 27 2 29 3 266 1 268 1 170 20 213 3 311 4 215 1 173 1 270 2 218 1 217 1 35 2 87 2 38 1 40 2 42 1 227 3 319 2 372 10 321 3 47 2 48 1 136 3 50 3 94 1 97 4 377 2 181 10 182 3 283 3 
284 7 0 4 57 8 288 1 3 1 29 1 168 1 268 1 148 2 170 2 213 2 172 1 294 1 173 1 63 2 339 1 217 1 218 2 193 3 227 2 16 2 91 1 348 1 346 1 133 1 321 2 113 1 372 1 136 2 114 1 50 2 94 1 52 2 79 2 181 1 237 1 182 8 82 1 283 1 
0 2 27 1 3 1 266 1 29 1 268 1 332 1 170 3 213 1 311 1 270 1 337 1 217 1 158 1 72 1 159 1 227 1 321 1 372 2 136 1 350 1 50 1 79 1 22 1 181 1 304 1 81 1 283 1 84 1 
158 1 0 2 159 1 227 1 321 1 136 1 170 2 50 1 332 1 213 1 172 1 97 1 79 1 22 1 181 2 282 1 81 1 84 1 
158 1 0 2 72 1 159 1 227 1 321 1 372 2 136 1 331 1 170 2 50 1 213 1 311 1 172 1 270 1 79 1 81 1 84 1 
0 2 27 1 332 1 170 4 213 1 172 1 311 1 270 1 158 2 72 1 159 2 227 1 321 1 372 2 136 1 50 1 79 1 97 1 181 2 22 1 81 2 84 2 
158 1 0 2 159 1 227 1 113 1 321 1 136 1 170 2 50 1 332 1 213 1 97 1 79 1 22 1 181 2 282 1 81 1 84 1 
158 1 0 2 72 1 159 1 227 1 113 1 321 1 372 2 136 1 331 1 170 2 50 1 213 1 311 1 270 1 79 1 81 1 84 1 
0 2 27 1 332 1 170 4 213 1 311 1 270 1 158 2 72 1 159 2 227 1 321 1 113 1 372 2 136 1 50 1 79 1 97 1 181 2 22 1 81 2 84 2 
72 1 158 2 0 2 159 2 27 1 227 1 372 2 321 1 136 1 50 1 332 1 170 4 213 1 311 1 270 1 97 1 79 1 22 1 181 2 81 2 84 2 
284 1 0 2 57 1 29 1 148 1 170 2 213 1 63 1 218 1 87 1 193 1 227 1 16 1 319 1 47 1 321 1 372 1 114 1 136 1 50 1 94 1 79 1 164 1 181 1 303 1 377 1 182 1 283 1 
284 1 0 2 57 1 29 1 148 1 170 2 213 1 63 1 218 1 193 1 367 1 227 1 16 1 47 1 321 1 372 1 114 1 136 1 50 1 94 1 79 1 164 1 181 1 303 1 182 1 83 1 141 1 283 1 
0 2 27 1 266 1 332 1 170 4 213 1 311 1 270 1 158 2 72 1 159 2 227 1 321 1 372 2 136 1 50 1 79 1 97 1 181 2 22 1 81 2 84 2 
284 1 0 2 27 1 57 1 29 1 148 1 170 4 332 1 213 1 311 1 270 1 63 1 35 1 87 1 193 1 72 1 158 2 159 2 227 1 16 1 319 1 372 2 47 1 321 1 136 1 50 1 97 1 79 1 164 1 181 2 22 1 377 1 182 1 81 2 82 1 283 1 84 2 
0 2 27 1 3 1 266 1 29 1 268 1 332 1 170 3 213 1 270 1 337 1 217 1 72 1 158 1 159 1 227 1 200 1 372 1 321 1 136 1 50 1 97 1 79 1 22 1 181 2 304 1 283 1 81 1 84 1 
0 4 27 2 167 2 1 1 28 1 290 1 104 1 170 13 332 2 213 2 311 1 293 1 270 2 34 1 72 2 159 2 222 1 227 2 344 1 321 2 372 7 77 1 374 1 252 1 50 2 97 1 181 6 22 2 326 1 
0 6 27 3 1 1 167 2 121 1 28 2 170 26 332 3 213 3 311 1 270 2 336 1 31 1 34 4 126 1 72 2 159 3 222 2 227 3 344 2 160 1 372 12 321 3 134 1 77 2 374 1 252 1 50 3 202 1 97 2 181 14 22 3 306 2 326 1 
0 4 27 2 167 2 1 1 28 1 104 1 170 13 332 2 213 2 311 1 293 1 270 1 34 2 72 1 159 2 222 1 227 2 344 1 321 2 372 6 134 1 77 1 374 1 252 1 50 2 97 1 181 7 22 2 326 1 
0 4 27 2 167 2 1 1 28 1 104 1 170 13 332 2 213 2 311 1 293 1 270 1 34 2 72 1 159 2 222 1 227 2 344 1 321 2 372 6 134 1 77 1 374 1 252 1 50 2 97 1 181 7 22 2 326 1 
0 4 27 7 167 4 1 1 121 1 28 1 59 1 122 2 105 1 106 1 170 52 332 8 213 2 311 6 293 2 270 7 336 1 31 1 34 4 126 1 157 1 72 8 159 12 222 2 42 1 227 2 344 4 160 1 321 2 372 25 134 1 161 1 77 1 374 1 252 1 50 2 202 1 97 6 181 27 22 7 306 1 326 1 
280 1 145 1 20 1 43 1 192 1 99 1 135 1 155 1 180 1 169 1 
295 1 219 1 
263 1 280 1 145 1 33 1 43 1 99 1 135 1 162 1 169 1 
101 1 358 1 145 1 43 1 17 1 135 1 186 1 180 1 352 1 169 1 280 1 272 2 20 1 302 1 192 1 64 1 99 1 10 1 
101 1 358 1 145 1 43 1 17 1 135 1 186 1 180 1 352 1 169 1 280 1 272 2 20 1 302 1 192 1 64 1 99 1 10 1 
101 1 358 1 145 1 43 1 17 1 135 1 186 1 180 1 352 1 169 1 280 1 272 2 20 1 302 1 192 1 64 1 99 1 10 1 
178 1 41 1 345 1 
178 1 41 1 345 1 
353 1 132 1 
353 1 41 1 132 1 
207 1 123 1 
207 1 145 1 86 1 3 2 29 2 186 1 268 2 169 1 123 1 272 1 217 2 363 1 219 1 10 1 295 1 197 1 43 1 135 1 352 1 93 1 256 1 280 1 303 1 302 1 283 2 99 1 183 1 
178 1 345 1 
353 1 41 1 132 1 
284 2 0 2 57 2 264 1 266 1 29 2 168 1 148 1 170 2 213 1 152 1 63 1 217 2 193 1 109 1 89 1 227 1 16 1 321 1 372 1 136 1 114 1 50 1 94 1 52 2 79 1 53 1 181 1 237 1 182 2 283 2 
284 2 285 1 366 1 317 1 57 2 102 1 16 1 92 1 348 1 298 1 148 1 98 2 203 1 182 2 356 1 82 1 341 1 194 1 314 1 
284 1 366 1 317 1 57 1 102 1 16 1 92 1 348 1 298 1 148 1 98 2 259 1 203 1 182 1 341 1 194 1 314 1 
284 1 102 1 57 1 63 1 16 1 91 1 297 1 370 1 133 1 218 1 356 1 182 1 193 1 148 1 
284 1 285 1 366 1 317 1 57 1 102 1 16 1 92 1 348 1 298 1 148 1 98 2 203 1 182 1 356 1 341 1 194 1 314 1 
12 1 
358 1 287 1 39 1 140 1 210 1 267 1 328 1 
184 1 241 1 358 2 243 1 210 1 5 1 188 1 271 1 68 1 130 1 225 1 352 1 140 1 324 1 302 1 328 1 240 1 
184 4 284 3 100 2 241 5 329 2 57 3 287 1 242 2 243 4 148 3 5 3 332 2 151 1 335 2 63 3 190 1 154 1 67 2 193 10 72 2 74 2 14 1 16 4 111 2 352 5 115 1 164 3 302 5 22 2 82 1 204 1 80 2 305 2 24 2 27 2 358 8 210 9 267 1 30 3 271 12 270 2 216 6 218 1 275 1 36 2 225 4 228 2 130 6 96 6 324 4 140 8 182 3 328 2 56 2 
184 2 329 1 26 1 241 1 27 2 167 1 358 5 242 2 243 2 121 1 210 8 5 1 332 2 271 6 270 2 336 1 31 1 216 5 126 1 72 2 222 1 225 2 130 3 344 1 229 1 352 1 96 5 202 1 324 2 140 5 302 1 22 2 204 1 56 1 328 2 
184 1 329 1 242 2 243 1 210 2 3 1 29 1 268 1 105 1 332 2 337 1 313 1 217 1 110 1 157 1 316 1 72 1 179 1 225 1 296 1 161 1 349 1 352 1 375 1 324 1 140 2 302 1 283 1 
184 1 358 1 287 1 225 1 243 1 210 1 267 1 324 1 140 1 328 1 
329 1 72 2 27 2 74 1 358 5 242 2 130 5 210 5 332 2 271 10 270 2 96 5 140 5 22 2 216 5 
241 1 358 1 302 1 5 1 328 1 352 1 
208 1 184 1 284 4 241 4 57 4 243 2 210 2 246 1 148 1 5 2 333 1 63 1 218 2 275 2 193 1 315 1 225 2 16 1 14 1 91 1 133 1 49 1 352 3 324 2 140 2 302 3 182 4 204 2 56 2 
284 1 0 2 119 1 57 1 3 2 29 3 268 2 148 1 170 1 213 1 337 2 63 1 218 1 217 2 87 1 193 1 316 1 227 1 16 1 319 1 372 1 321 1 47 1 136 1 50 1 94 1 79 1 164 1 303 1 377 1 182 1 283 3 
184 1 358 4 130 2 225 1 243 1 210 1 106 1 271 4 96 2 140 2 324 1 216 2 204 1 56 1 328 2 
280 1 245 1 99 1 
280 1 223 1 192 1 99 1 123 1 
280 1 245 1 99 1 
280 1 245 1 99 1 
280 1 4 1 99 1 
280 1 4 1 99 1 
280 1 4 1 99 1 
280 1 99 1 
43 1 135 1 
72 1 0 4 159 3 227 2 42 1 59 1 372 4 321 2 161 1 105 1 106 1 332 1 170 8 50 2 213 2 311 2 97 1 181 4 306 1 157 1 
72 1 159 2 39 1 42 1 59 1 372 3 161 1 105 1 106 1 332 1 170 6 311 2 181 3 157 1 
72 1 0 2 159 2 27 1 227 1 372 2 321 1 50 1 332 1 170 4 213 1 311 1 270 1 138 1 97 1 22 1 181 2 
72 1 27 1 159 2 222 1 167 2 344 1 372 4 170 7 332 1 311 1 270 1 293 1 97 1 181 3 22 1 
0 4 27 2 167 2 244 1 59 1 122 1 105 1 106 1 332 3 170 23 213 2 311 5 293 1 270 2 157 2 72 3 159 9 42 1 344 2 227 2 372 12 231 1 321 2 161 2 50 2 97 4 22 2 181 11 306 2 
167 1 372 1 170 1 
344 1 181 1 170 1 
0 2 72 1 27 1 159 3 74 1 227 1 321 1 372 3 50 1 170 6 332 1 213 1 311 2 138 1 270 1 97 1 22 1 181 3 
0 2 27 2 167 1 121 1 170 12 332 2 213 1 311 1 270 2 31 1 336 1 126 1 72 2 159 2 222 1 344 1 227 1 372 6 321 1 50 1 202 1 97 1 181 6 22 2 326 1 
72 1 159 2 372 3 161 1 105 1 332 1 170 6 311 1 97 1 181 3 157 1 
0 2 159 2 42 1 227 1 244 1 59 1 372 2 321 1 161 1 170 3 50 1 213 1 311 1 97 1 181 1 306 1 157 1 
0 2 72 2 159 5 227 1 321 1 372 5 161 2 105 1 50 1 170 10 332 2 213 1 311 3 375 1 97 2 181 5 326 1 157 2 
0 2 159 1 227 1 321 1 50 1 332 1 170 2 213 1 97 1 22 1 181 2 326 1 
72 1 0 2 159 2 27 1 227 1 372 2 321 1 50 1 332 1 170 4 213 1 311 1 270 1 97 1 22 1 181 2 326 1 
0 6 159 2 227 3 244 1 372 2 321 3 161 1 104 1 170 3 50 3 213 3 311 1 97 1 181 1 306 1 326 1 157 1 
0 10 27 3 167 4 244 1 59 1 104 1 105 2 106 1 170 34 332 5 213 5 311 7 293 1 270 3 274 1 157 3 72 5 159 12 222 1 42 1 227 5 344 3 372 18 321 5 161 3 19 1 50 5 138 1 258 1 97 5 181 16 22 3 306 2 326 1 
0 2 167 1 59 1 105 1 106 1 332 1 170 8 213 1 311 2 126 1 157 1 72 1 159 2 222 1 344 1 227 1 42 1 372 4 321 1 161 1 50 1 181 4 326 1 
0 4 27 1 167 2 59 1 105 1 106 1 170 11 332 2 213 2 311 2 293 1 126 1 157 1 72 1 159 3 222 1 42 1 227 2 344 1 372 5 321 2 161 1 50 2 138 1 97 1 181 6 22 1 326 1 
0 6 27 2 167 1 121 1 59 1 105 1 106 1 170 19 332 3 213 3 311 3 270 2 31 1 336 1 126 1 157 1 72 3 159 4 222 1 42 1 344 1 227 3 372 10 321 3 161 1 50 3 138 1 202 1 97 1 181 9 22 2 326 1 306 1 
0 6 27 2 167 1 121 1 59 1 105 1 106 1 170 17 332 3 213 3 311 3 270 1 31 1 336 1 126 1 157 1 72 2 159 5 222 1 42 1 344 1 227 3 372 7 321 3 161 1 50 3 138 1 202 1 97 2 181 10 22 2 306 1 326 1 
0 2 167 1 59 1 105 1 106 1 332 1 170 8 213 1 311 2 126 1 157 1 72 1 159 2 222 1 344 1 227 1 42 1 372 4 321 1 161 1 50 1 181 4 326 1 
0 2 27 2 167 1 121 1 170 12 332 2 213 1 311 1 270 2 31 1 336 1 126 1 72 2 159 2 222 1 344 1 227 1 372 6 321 1 50 1 202 1 97 1 181 6 22 2 326 1 
0 8 27 2 167 1 121 1 59 1 105 1 106 1 170 18 332 3 213 4 311 3 270 1 336 1 31 1 126 1 157 1 72 2 159 5 222 1 42 1 227 4 344 1 372 8 321 4 161 1 50 4 138 1 202 1 97 2 181 10 22 2 326 1 306 2 
0 8 27 3 167 1 121 1 104 1 170 16 332 3 213 4 311 3 270 2 336 1 31 1 126 1 72 2 159 6 222 1 227 4 344 1 372 7 321 4 50 4 202 1 97 3 181 9 22 3 326 1 306 2 
72 1 159 6 42 2 59 1 372 4 161 3 105 1 170 7 332 1 311 3 97 3 181 3 157 3 
0 8 27 2 167 1 121 1 59 1 104 1 105 1 106 1 170 18 332 3 213 4 311 3 270 1 336 1 31 1 126 1 157 1 72 2 159 4 222 1 42 1 227 4 344 1 372 8 321 4 161 1 50 4 202 1 97 1 181 10 22 2 326 1 306 2 
187 1 273 1 44 1 303 1 217 1 29 1 283 1 
144 1 360 1 44 1 29 1 6 1 187 1 273 1 303 1 355 1 217 1 283 1 261 1 
284 1 57 1 39 1 63 1 16 1 91 1 133 1 218 1 182 1 193 1 148 1 
284 1 57 1 16 1 3 1 47 1 29 2 268 1 148 1 173 1 63 1 164 1 303 1 377 1 217 1 218 1 182 1 283 2 193 1 
284 1 100 1 57 1 3 1 29 2 148 1 268 2 173 1 63 2 217 2 275 1 193 3 179 1 16 1 47 1 164 2 303 1 377 1 182 1 283 2 378 1 80 1 85 1 
284 2 100 1 57 2 3 1 29 2 148 1 268 2 125 1 173 1 63 2 217 2 275 1 193 3 179 1 367 1 16 1 47 1 164 2 303 1 182 2 283 2 378 1 80 1 85 1 
284 3 100 1 241 1 57 3 358 1 148 1 30 1 125 1 63 1 218 1 275 1 67 1 193 4 36 1 131 1 16 1 352 2 164 1 302 2 54 1 182 3 80 1 328 1 
100 1 284 3 241 1 358 1 57 3 16 1 111 1 148 1 352 2 30 1 125 1 63 1 164 1 302 2 218 1 67 1 275 1 182 3 80 1 193 4 328 1 36 1 
284 1 57 1 16 1 339 1 182 1 148 1 
284 6 57 7 15 1 16 3 348 1 288 1 346 1 168 1 148 2 294 1 52 1 139 1 63 2 339 1 190 1 164 1 218 2 182 7 82 1 69 1 193 3 
284 1 0 4 57 1 3 1 59 1 148 1 105 1 332 1 106 1 63 1 193 1 157 1 72 1 158 1 159 2 16 1 161 1 79 2 164 1 303 2 81 1 82 1 84 1 264 1 29 2 266 1 268 1 170 6 213 2 311 2 173 1 217 1 35 1 87 1 40 1 227 2 42 1 319 1 321 2 47 1 372 3 136 2 50 2 377 1 181 3 182 1 283 2 
284 1 184 2 24 1 241 2 358 1 57 1 287 1 243 2 210 1 267 1 5 1 30 1 335 1 218 1 363 1 67 1 193 2 36 1 225 2 228 1 14 1 111 1 352 3 140 1 324 2 302 3 182 1 328 1 
284 2 57 2 16 2 148 1 115 1 63 1 339 1 190 1 164 1 182 2 82 1 193 2 36 1 
284 4 57 4 16 1 91 1 133 1 78 1 148 1 125 1 63 1 218 1 182 4 82 1 193 1 
284 2 57 2 15 1 16 2 48 1 310 1 148 1 63 1 164 1 275 1 182 2 69 1 193 1 262 1 
284 1 366 1 57 1 16 1 98 1 218 1 203 1 182 1 148 1 314 1 
284 2 57 2 152 1 63 1 16 1 348 1 182 2 82 1 193 1 168 1 148 1 
284 4 57 5 16 2 91 1 133 1 288 1 168 1 78 1 148 2 294 1 63 2 218 1 275 1 182 5 82 1 193 3 
284 4 57 5 16 2 91 1 133 1 288 1 168 1 78 1 137 1 148 2 63 2 218 1 275 1 182 5 82 1 193 3 
284 1 57 1 367 1 16 1 3 1 47 1 29 2 268 1 148 1 173 1 63 1 164 1 303 1 217 1 218 1 182 1 283 2 193 1 
284 1 57 1 15 1 16 2 148 1 139 1 63 1 190 1 164 1 275 1 182 1 69 1 193 1 
73 1 281 1 303 1 45 1 276 1 
73 1 358 1 179 1 368 1 120 1 45 2 291 1 352 2 312 1 281 2 303 1 302 2 9 1 67 1 363 1 378 1 85 1 276 2 328 1 
73 1 29 1 281 1 53 1 217 1 283 1 276 1 109 1 89 1 
73 1 9 1 291 1 
39 1 75 1 198 1 338 1 
359 1 153 1 75 1 308 1 198 1 338 1 340 1 
150 1 359 1 156 1 
359 3 75 1 308 1 198 1 60 2 153 3 107 1 338 1 340 1 260 1 206 1 364 1 
300 1 359 2 153 2 75 1 226 1 308 1 198 1 338 1 340 1 
317 1 359 1 308 1 75 1 257 1 153 1 98 1 340 1 203 1 206 1 55 1 
359 1 153 1 75 1 308 1 198 1 340 1 206 1 
359 1 153 1 308 1 198 2 338 1 340 1 206 1 
359 2 75 1 307 1 308 2 198 1 230 1 153 2 340 2 357 1 206 1 
359 3 58 1 308 1 226 2 75 2 198 1 330 1 334 1 257 1 153 3 338 1 340 1 206 1 
366 1 317 1 359 2 75 1 308 1 226 1 198 1 92 1 153 2 233 1 338 1 98 2 340 1 203 1 206 1 
359 4 58 1 308 2 226 2 75 2 198 1 232 1 257 1 153 4 300 1 338 1 340 2 206 1 
359 1 153 1 75 1 308 1 198 1 338 1 340 1 206 1 
359 4 58 1 226 2 308 1 75 3 198 2 60 1 279 1 257 1 107 1 153 4 338 2 340 1 260 1 
365 1 359 2 75 1 308 1 226 1 198 1 369 1 249 1 153 2 338 1 340 1 206 1 
359 3 75 1 308 1 198 1 60 2 153 3 107 2 338 1 340 1 260 1 206 1 11 1 
75 2 373 1 128 2 299 1 
189 1 359 1 153 1 308 1 340 1 206 1 
334 1 359 2 153 2 75 1 226 1 308 1 198 1 338 1 340 1 206 1 
361 1 
359 1 153 1 75 1 308 1 198 1 338 1 340 1 206 1 
359 3 226 1 308 1 75 1 198 1 60 1 334 1 153 3 338 1 340 1 206 1 
257 1 58 1 75 1 279 1 
75 1 198 1 

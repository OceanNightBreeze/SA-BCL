#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 77 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
260 1 140 1 2 1 91 2 287 2 262 2 311 2 120 1 313 4 10 9 335 2 53 1 202 1 243 9 364 1 269 2 17 1 249 1 78 1 158 1 301 2 61 5 304 1 160 1 349 1 351 3 32 6 136 1 
260 1 140 1 2 1 91 2 262 2 311 2 287 2 120 1 313 4 10 9 335 2 53 1 202 1 243 9 364 1 269 2 17 1 249 1 78 1 158 1 301 2 61 5 304 1 160 1 349 1 351 3 32 6 136 1 
260 1 140 1 2 1 91 2 262 2 311 2 287 2 120 1 313 5 10 10 335 2 53 1 202 1 243 10 364 1 269 2 17 1 249 1 78 1 158 1 301 2 61 6 304 1 160 1 349 1 351 4 32 7 136 1 
260 1 2 1 91 2 262 2 311 2 287 1 120 1 313 3 10 7 335 2 53 1 202 1 243 7 364 1 269 2 17 1 249 1 78 1 158 1 301 2 61 4 304 1 160 1 349 1 351 2 32 4 136 1 
140 1 91 1 311 1 287 2 158 1 313 2 301 1 61 3 10 4 335 1 304 1 202 1 243 4 160 1 364 1 269 1 351 1 32 3 
91 1 311 1 262 1 61 1 301 1 10 2 335 1 304 1 202 1 243 2 160 1 56 1 43 1 37 1 17 1 136 1 
2 1 311 2 262 1 313 1 301 2 61 2 10 3 304 1 202 1 243 3 160 1 351 1 32 1 
260 1 2 1 140 1 91 1 262 1 311 2 287 2 313 4 10 9 335 1 53 1 202 1 243 9 364 1 269 1 19 1 158 1 301 2 61 5 304 1 160 1 134 1 351 3 32 7 
260 1 2 1 140 1 91 1 262 1 311 2 287 2 313 4 10 9 335 1 53 1 202 1 243 9 364 1 269 1 19 1 158 1 301 2 61 5 304 1 160 1 134 1 351 3 32 7 
13 1 295 1 299 1 
66 1 299 1 111 2 
296 2 106 2 48 2 355 1 267 2 268 2 151 1 258 2 
1 1 334 1 93 1 48 2 355 1 6 1 314 1 145 2 360 1 175 1 267 3 268 2 177 1 124 1 16 1 57 1 151 1 322 2 185 2 274 1 296 3 106 2 344 2 212 1 107 1 22 1 23 1 129 1 372 1 130 1 217 1 305 1 68 1 133 2 162 1 258 2 221 1 
219 1 296 1 106 1 245 1 206 1 48 1 267 1 268 1 151 1 258 1 
233 1 106 1 296 1 59 1 235 1 299 1 119 1 219 1 376 1 295 1 267 1 321 1 38 1 193 1 
233 1 59 2 106 1 296 1 48 1 299 1 119 1 219 1 376 2 295 1 268 1 267 1 321 1 258 1 193 1 
376 1 59 1 74 1 15 1 70 1 
137 1 376 2 59 2 295 1 74 1 299 1 15 1 127 1 
376 1 59 1 15 1 
59 1 106 1 296 1 74 1 48 1 9 1 219 1 376 1 245 1 206 1 268 1 267 1 151 1 258 1 
299 1 
137 1 376 2 59 2 295 1 74 1 299 1 15 1 323 1 
137 1 59 5 108 1 74 2 79 2 353 2 169 1 299 1 141 1 279 1 34 2 12 1 376 5 190 1 295 1 82 1 116 1 15 2 320 1 
13 1 355 1 
106 2 296 2 48 1 355 2 7 1 318 1 267 2 268 1 258 1 
272 1 316 1 255 1 
296 1 274 1 344 1 22 1 355 1 23 1 129 1 372 1 130 1 122 1 305 1 133 1 175 1 267 1 124 1 322 1 
274 1 168 1 106 1 296 2 344 1 22 1 23 1 129 1 372 1 130 1 305 1 255 1 133 1 69 1 175 1 124 1 268 1 267 2 258 1 322 1 
296 3 106 3 69 1 48 1 355 1 267 3 268 3 258 3 
219 1 296 1 106 1 206 1 267 1 268 1 258 1 
219 1 296 1 106 1 318 1 48 1 267 1 268 1 7 1 258 1 
334 1 168 1 93 1 48 2 355 1 119 1 6 1 7 1 143 1 145 1 360 1 175 1 124 1 267 4 268 3 16 1 57 1 151 1 321 1 322 1 233 1 185 2 274 1 296 4 106 3 59 1 344 1 212 1 107 1 22 1 23 1 129 1 372 1 130 1 217 1 219 1 305 1 376 1 133 1 69 1 162 1 115 1 258 3 193 1 
242 1 296 2 106 2 69 1 355 1 267 2 268 1 38 1 258 1 
233 1 59 1 168 1 106 3 296 3 48 1 299 1 119 1 7 1 143 1 219 1 376 1 330 1 69 2 268 3 267 3 321 1 258 3 193 1 
272 1 296 2 106 2 255 1 69 1 48 1 267 2 268 2 7 1 258 2 
296 1 274 1 344 1 22 1 355 1 23 1 129 1 372 1 130 1 305 1 133 1 175 1 267 1 124 1 322 1 
296 1 285 1 274 1 344 1 22 1 355 1 23 1 129 1 372 1 130 1 133 1 175 1 267 1 339 1 322 1 
86 1 1 2 334 2 47 1 93 1 6 1 145 4 316 2 366 1 16 1 57 1 272 2 39 1 185 2 212 1 107 1 80 1 24 1 27 1 373 1 81 1 40 1 255 2 283 1 
352 1 219 1 296 1 106 1 267 1 268 1 321 1 258 1 
106 5 296 5 168 1 48 1 355 1 7 1 226 1 242 1 146 1 69 2 268 4 267 5 38 1 258 4 
352 1 219 1 296 2 106 2 206 1 267 2 268 2 258 2 
144 1 225 1 
144 1 225 1 
8 1 76 1 
8 1 76 1 
8 1 76 1 
144 1 294 1 225 1 
144 1 294 1 225 1 
144 1 225 1 152 1 
144 2 378 1 225 2 62 1 8 1 76 1 
144 1 294 1 225 1 
144 1 28 1 225 1 
144 1 28 1 225 1 
144 1 28 1 225 1 
237 3 59 2 261 2 215 1 251 2 299 1 225 2 62 1 144 2 63 1 376 2 36 1 256 2 247 1 29 2 150 1 257 1 18 1 165 2 
234 1 237 1 296 2 106 2 59 1 261 1 214 1 251 1 355 1 312 1 225 1 25 1 329 1 63 1 144 1 376 1 29 1 100 1 267 2 268 2 282 1 152 1 258 2 165 1 
335 1 91 1 269 1 
335 1 91 1 43 1 
172 1 91 3 269 2 43 1 178 1 289 1 
172 1 91 2 269 1 43 1 178 1 236 1 
172 1 91 2 269 1 43 1 178 2 
137 1 139 2 310 1 47 1 353 1 74 4 34 1 12 1 174 1 295 1 230 2 100 1 15 1 319 2 320 3 369 1 39 1 59 5 79 1 214 1 299 2 24 1 110 1 111 3 279 2 112 1 81 1 376 5 306 1 66 1 282 1 259 1 
137 1 139 6 310 3 47 3 286 1 74 7 353 2 169 1 315 1 336 1 34 2 12 1 295 1 230 6 207 1 15 6 340 1 320 8 270 5 369 2 39 3 59 9 214 4 79 2 299 5 24 3 110 2 111 9 279 6 81 3 376 9 66 3 70 5 71 1 259 1 
139 2 310 1 47 1 74 2 353 1 169 1 34 1 295 1 174 1 230 2 320 3 319 1 369 1 39 1 59 3 79 1 214 1 299 3 110 1 24 1 279 2 111 4 81 1 306 1 376 3 66 2 
139 4 310 2 47 2 286 1 353 1 74 3 169 1 34 1 295 1 174 1 230 4 207 1 320 5 319 2 369 1 39 2 59 4 79 1 214 2 299 4 110 1 24 2 111 7 279 4 81 2 376 4 306 1 66 3 71 1 
359 1 13 1 129 1 
132 1 129 1 
246 1 
22 1 129 1 
359 2 274 1 22 1 204 1 327 1 129 3 
274 1 22 1 129 1 
238 1 129 1 
334 3 1 4 47 1 213 1 263 1 24 1 373 2 252 1 11 2 200 1 145 7 65 1 293 1 375 1 338 1 281 1 283 3 
334 3 1 4 47 1 213 1 263 1 24 1 373 2 252 1 11 2 200 1 145 7 65 1 293 1 375 1 338 1 281 1 283 3 
250 1 334 3 1 4 47 1 213 1 263 1 24 1 373 2 252 1 11 2 200 1 145 7 65 1 375 1 293 1 338 1 281 1 283 3 
334 15 1 16 310 3 47 4 6 1 263 2 51 1 291 1 200 1 11 3 356 1 145 31 293 2 338 2 16 1 154 4 232 1 211 3 39 3 185 2 212 1 213 5 107 1 24 4 252 1 373 5 81 3 65 1 375 1 348 1 220 1 281 2 84 1 283 10 
1 5 334 4 47 1 95 1 6 2 263 1 51 1 11 2 200 1 145 9 293 1 338 1 16 2 185 4 212 2 107 2 213 1 24 1 373 3 375 1 65 1 281 1 333 1 283 4 
197 1 91 2 311 1 262 1 97 1 289 1 10 2 335 1 202 1 243 2 171 1 35 1 269 1 322 1 181 1 370 1 344 1 276 1 23 1 61 1 371 1 301 1 372 1 304 1 160 1 133 1 377 1 43 1 191 1 32 1 
91 2 311 1 262 1 92 1 289 1 97 1 142 1 10 3 335 1 202 1 243 3 171 1 35 1 269 1 322 1 58 1 370 1 344 1 276 1 23 1 61 1 371 1 301 1 372 1 160 1 133 1 377 1 43 1 191 1 32 2 
91 2 262 1 92 1 97 1 289 1 142 1 10 2 335 1 202 1 243 2 35 1 269 1 322 1 344 1 276 1 23 1 61 1 371 1 372 1 160 1 133 1 377 1 43 1 191 1 32 2 
308 1 311 1 262 2 10 1 243 1 203 1 35 2 175 1 341 1 322 1 58 1 344 1 22 1 23 1 371 2 301 1 129 1 372 1 302 1 133 1 114 1 377 2 163 1 
91 2 311 1 262 1 97 1 289 1 142 1 10 1 335 1 243 1 171 1 35 1 269 1 322 1 181 1 370 1 344 1 276 1 23 1 371 1 301 1 372 1 304 1 133 1 377 1 43 1 191 1 
284 1 
137 3 239 2 4 1 50 2 12 1 203 1 295 1 15 6 209 1 343 1 59 5 106 1 296 1 344 2 22 1 109 2 299 2 60 1 23 1 110 1 111 2 253 2 347 1 219 1 66 2 308 1 72 1 353 1 354 1 119 1 227 2 265 1 34 1 173 1 175 2 267 1 320 2 321 1 322 2 38 1 233 1 273 1 79 1 326 4 235 1 129 1 372 1 279 2 376 5 41 1 189 2 133 2 135 2 379 1 193 1 
209 1 137 1 72 1 233 1 59 3 106 1 296 1 326 2 354 1 235 1 119 1 219 1 347 1 376 3 189 1 15 2 379 1 267 1 321 1 38 1 323 1 193 1 
72 1 137 1 354 1 119 1 227 1 295 1 15 1 267 1 321 1 38 1 323 1 209 1 233 1 296 1 106 1 59 3 326 3 235 1 299 1 347 1 219 1 376 3 379 1 193 1 
137 1 72 1 354 1 119 1 227 1 295 1 267 1 15 2 321 1 38 1 323 1 209 1 233 1 296 1 106 1 59 3 326 3 235 1 299 1 347 1 219 1 376 3 189 1 379 1 135 1 193 1 
137 3 239 2 50 2 12 1 295 5 15 7 149 1 209 1 296 1 59 5 106 1 109 2 299 5 60 1 253 2 219 1 347 1 66 2 72 1 223 1 354 1 353 1 119 1 227 4 34 1 317 1 267 1 320 1 321 1 38 1 323 1 233 1 273 1 326 6 79 1 235 1 279 1 131 1 188 1 376 5 189 4 135 4 379 1 193 1 
137 2 239 2 50 2 12 1 295 1 15 4 209 1 296 1 106 1 59 4 109 2 60 1 299 2 111 2 253 2 219 1 347 1 66 2 72 1 353 1 354 1 119 1 227 2 34 1 267 1 320 1 321 1 38 1 273 1 233 1 326 4 79 1 235 1 279 1 376 4 189 2 41 1 379 1 135 2 193 1 
137 2 72 1 223 1 239 2 354 1 353 1 119 1 50 2 227 2 34 1 12 1 295 1 15 4 267 1 149 1 320 1 321 1 38 1 209 1 273 1 233 1 296 1 106 1 59 4 109 2 326 4 79 1 235 1 299 1 60 1 279 1 253 2 347 1 219 1 188 1 376 4 189 2 66 2 135 2 379 1 193 1 
137 2 72 1 223 1 239 2 354 1 353 1 119 1 50 2 227 2 34 1 12 1 295 1 15 4 267 1 149 1 320 1 321 1 38 1 209 1 273 1 233 1 296 1 106 1 59 4 109 2 326 4 79 1 235 1 299 1 60 1 279 1 253 2 347 1 219 1 188 1 376 4 189 2 66 2 135 2 379 1 193 1 
137 2 72 1 3 1 354 1 353 1 119 1 288 1 227 2 34 1 12 1 295 1 15 4 267 1 149 1 179 1 320 1 321 1 38 1 209 1 233 1 125 2 296 1 106 1 59 4 109 2 326 4 79 1 235 1 299 1 60 1 111 2 279 1 253 2 347 1 219 1 376 4 189 2 135 2 379 1 85 2 193 1 
137 2 72 1 223 1 239 2 353 1 354 1 119 1 50 2 227 3 34 1 12 1 295 1 267 1 15 5 149 1 320 1 321 1 38 1 209 1 273 1 233 1 296 1 106 1 59 4 109 2 79 1 326 5 235 1 299 1 60 1 279 1 131 1 253 2 347 1 219 1 188 1 376 4 66 2 189 3 379 1 135 3 193 1 
137 2 72 1 223 1 239 2 353 1 354 1 119 1 50 2 227 3 34 1 12 1 295 1 267 1 15 5 149 1 320 1 321 1 38 1 209 1 273 1 233 1 296 1 106 1 59 4 109 2 79 1 326 5 235 1 299 1 60 1 279 1 131 1 253 2 347 1 219 1 188 1 376 4 66 2 189 3 379 1 135 3 193 1 
137 2 12 1 295 1 15 4 209 1 296 1 106 1 59 4 109 2 60 1 299 1 111 2 253 2 219 1 347 1 72 1 353 1 354 1 119 1 227 2 34 1 267 1 179 1 320 1 321 1 38 1 233 1 125 2 326 4 79 1 235 1 279 1 376 4 189 2 41 1 379 1 135 2 85 2 193 1 
272 1 334 3 1 3 47 1 185 2 107 1 212 1 93 1 355 2 6 1 263 1 24 1 373 2 11 1 200 1 145 6 40 1 65 1 375 1 316 1 13 1 255 1 338 1 57 1 16 1 283 2 
222 1 334 6 1 8 310 2 47 1 93 1 355 1 6 2 290 1 291 1 145 14 316 11 16 2 57 2 154 3 272 4 182 1 211 3 39 2 185 4 213 1 212 2 107 2 24 2 373 1 218 1 81 1 64 1 68 1 255 11 162 1 220 1 283 2 
334 1 1 1 168 1 33 1 93 1 355 1 6 1 122 1 201 1 145 2 175 1 124 1 267 2 268 1 57 1 16 1 322 1 272 1 274 1 296 2 106 1 185 2 344 1 22 1 212 1 107 1 23 1 129 1 372 1 26 1 130 1 64 1 305 1 68 1 133 1 69 1 162 1 258 1 
334 10 1 10 47 3 93 3 6 3 142 1 11 1 200 1 145 20 338 1 16 3 57 3 210 2 106 1 296 3 298 1 344 3 107 3 212 3 22 2 213 4 156 2 345 2 23 2 24 3 217 2 64 1 65 1 305 2 68 1 255 7 69 1 162 1 258 1 166 2 310 2 168 1 355 2 263 1 316 7 175 1 268 1 267 3 124 2 322 3 272 7 39 2 185 6 274 2 278 1 129 2 372 2 373 4 130 2 81 2 375 1 133 3 332 1 283 8 
308 1 197 1 1 1 334 1 199 1 89 1 93 2 6 2 314 2 264 1 142 1 145 2 203 1 175 2 267 1 268 1 367 1 16 2 57 2 322 7 296 1 106 1 185 4 344 8 212 2 107 2 22 2 23 2 129 3 372 2 303 1 346 1 187 1 40 1 68 1 133 8 69 1 162 1 258 1 
310 1 1 1 334 2 47 1 48 1 93 1 6 1 7 1 96 1 145 3 316 1 268 1 267 1 16 1 57 1 272 1 39 1 185 2 106 1 296 1 212 1 107 1 24 1 373 1 81 1 64 1 255 1 258 1 283 1 
272 1 39 1 1 2 185 2 213 1 107 1 212 1 93 1 6 1 24 1 27 1 145 2 40 1 316 1 255 1 57 1 16 1 283 1 
272 1 334 2 185 2 47 1 107 1 212 1 93 1 6 1 373 1 81 1 145 2 40 1 316 1 255 1 366 1 57 1 16 1 283 1 
1 2 310 1 334 2 47 1 93 1 6 1 145 4 316 2 16 1 57 1 272 2 39 1 185 2 212 1 107 1 213 1 24 1 373 1 81 1 40 1 255 2 283 2 
272 1 39 1 1 2 185 2 89 1 213 1 107 1 212 1 93 1 6 1 24 1 27 1 145 2 316 1 255 1 57 1 16 1 283 1 
272 1 334 2 185 2 47 1 89 1 107 1 212 1 93 1 6 1 373 1 81 1 145 2 316 1 255 1 366 1 57 1 16 1 283 1 
1 2 310 1 334 2 47 1 89 1 93 1 6 1 145 4 316 2 16 1 57 1 272 2 39 1 185 2 212 1 107 1 213 1 24 1 373 1 81 1 255 2 283 2 
1 2 310 1 334 2 47 1 93 1 6 1 145 4 316 2 16 1 57 1 272 2 39 1 185 2 212 1 107 1 213 1 24 1 373 1 81 1 255 2 283 2 
1 1 334 1 93 1 355 1 6 1 145 2 175 1 124 1 267 1 57 1 16 1 322 1 274 1 296 1 185 2 344 1 22 1 107 1 212 1 23 1 129 1 372 1 130 1 217 1 305 1 68 1 133 1 162 1 
1 1 334 1 285 1 93 1 355 1 6 1 145 2 175 1 339 1 267 1 57 1 16 1 322 1 105 1 274 1 296 1 185 2 344 1 22 1 107 1 212 1 23 1 129 1 372 1 130 1 68 1 133 1 162 1 
1 2 310 1 334 2 47 1 93 1 6 1 145 4 316 2 16 1 57 1 272 2 39 1 185 2 212 1 107 1 213 1 24 1 373 1 81 1 64 1 255 2 283 2 
166 1 334 2 1 2 197 1 310 1 47 1 93 1 6 1 145 4 316 2 124 1 267 1 57 1 16 1 322 1 272 2 39 1 274 1 296 1 185 2 344 1 213 1 22 1 107 1 212 1 23 1 24 1 129 1 372 1 373 1 130 1 217 1 81 1 305 1 255 2 133 1 283 2 
334 1 310 1 1 2 47 1 224 1 48 1 93 1 6 1 7 1 145 3 316 1 268 1 267 1 16 1 57 1 272 1 39 1 185 2 106 1 296 1 213 1 212 1 107 1 24 1 81 1 64 1 255 1 258 1 283 1 
194 1 196 1 88 1 1 20 334 21 47 5 46 1 240 1 6 3 5 4 51 1 291 3 52 1 200 1 11 1 145 41 99 1 338 1 16 3 154 4 211 3 213 4 107 3 212 3 24 5 65 1 220 1 309 1 310 4 73 2 263 1 170 1 266 1 229 1 365 1 180 1 39 4 185 6 373 3 81 4 375 1 333 1 283 7 
194 1 196 1 88 1 1 20 334 18 47 4 46 1 240 1 6 4 5 4 51 2 291 3 52 1 200 1 11 1 145 38 99 1 338 1 16 4 154 4 211 3 213 3 107 4 212 4 24 5 65 1 220 1 309 1 310 4 73 2 263 1 170 1 266 1 229 1 365 1 180 1 39 4 185 8 373 4 81 3 375 1 333 1 283 7 
194 1 88 1 309 1 73 1 334 25 1 27 310 7 46 1 47 8 5 4 6 2 263 1 51 1 170 1 290 2 52 1 291 2 11 1 200 1 145 52 99 1 266 1 229 1 338 1 365 1 16 2 154 4 180 1 211 4 39 7 185 4 212 2 107 2 213 7 24 8 373 7 81 7 65 1 375 1 220 2 333 1 283 14 
194 1 309 1 73 1 334 10 1 9 310 3 46 1 47 3 240 1 5 2 6 2 170 2 291 1 145 19 98 1 229 1 16 2 154 2 211 1 39 3 185 4 212 2 107 2 213 3 24 3 373 3 81 3 220 1 333 1 283 6 
194 1 88 1 309 2 334 12 73 2 1 14 310 3 47 2 46 1 5 4 6 3 51 2 170 1 52 1 291 2 145 26 99 1 266 1 229 1 365 1 16 3 154 2 180 1 211 2 39 3 185 6 213 1 212 3 107 3 24 3 373 1 81 2 333 1 283 2 
144 1 183 1 261 1 36 1 29 1 251 1 225 1 257 1 62 1 165 1 
234 1 152 1 
144 1 123 1 261 1 29 1 251 1 225 1 75 1 118 1 165 1 
237 2 59 1 261 1 215 1 251 1 299 1 225 1 62 1 63 1 144 1 376 1 36 1 256 1 247 1 29 1 150 1 257 1 165 1 
237 2 59 1 261 1 215 1 251 1 299 1 225 1 62 1 63 1 144 1 376 1 36 1 256 1 247 1 29 1 150 1 257 1 165 1 
237 2 59 1 261 1 215 1 251 1 299 1 225 1 62 1 63 1 144 1 376 1 36 1 256 1 247 1 29 1 150 1 257 1 165 1 
294 1 378 1 277 1 
294 1 378 1 277 1 
28 1 55 1 
28 1 55 1 378 1 
312 1 25 1 
237 1 261 1 74 1 355 1 225 1 312 1 292 1 144 1 100 1 267 2 268 2 150 1 152 1 234 1 296 2 59 1 106 2 214 1 251 1 25 1 329 1 376 1 256 1 29 1 282 1 258 2 165 1 
294 1 277 1 
28 1 55 1 378 1 
1 1 334 1 199 1 93 1 6 1 314 2 264 1 337 1 145 2 267 2 57 1 16 1 322 2 153 1 184 1 296 2 106 2 185 2 344 2 22 1 107 1 212 1 23 1 328 1 129 1 372 1 64 1 68 1 133 2 307 1 162 1 
167 1 197 1 344 2 91 2 276 1 23 1 289 1 372 1 142 1 335 1 358 1 171 1 133 2 362 1 377 1 269 1 43 1 191 1 322 2 
344 1 91 2 276 1 23 1 289 1 128 1 372 1 142 1 335 1 358 1 171 1 133 1 377 1 269 1 43 1 191 1 322 1 
308 1 344 1 22 1 23 1 129 1 372 1 302 1 113 1 203 1 133 1 362 1 175 1 377 1 322 1 
167 1 344 1 91 2 276 1 23 1 289 1 372 1 142 1 335 1 358 1 171 1 133 1 362 1 377 1 269 1 43 1 191 1 322 1 
101 1 
13 1 295 1 108 1 299 1 320 1 141 1 279 1 
137 1 239 1 353 1 50 1 34 1 12 1 295 1 15 1 320 1 273 1 59 1 79 1 299 2 279 1 111 1 376 1 66 1 
325 1 274 1 77 1 344 1 22 1 79 1 353 1 23 1 129 2 372 2 34 1 12 1 132 1 133 1 204 1 175 1 322 1 
87 1 137 1 88 1 139 5 310 2 47 2 353 2 291 1 34 2 12 2 99 1 266 1 295 2 230 5 176 2 365 1 15 1 320 8 154 1 180 1 211 1 39 2 343 1 59 1 79 2 157 1 299 5 110 1 24 2 111 6 279 5 81 2 376 1 66 3 164 1 
47 1 353 1 48 1 263 1 9 1 34 1 12 1 245 1 206 1 338 1 176 2 267 1 268 1 320 2 151 1 296 1 59 1 106 1 79 1 24 2 279 2 219 1 188 1 65 1 376 1 42 1 258 1 164 1 
108 1 79 1 353 1 299 1 141 1 279 1 34 1 12 1 295 1 320 1 
139 5 310 2 39 2 47 2 345 1 299 5 24 2 279 5 111 10 81 2 66 5 230 5 176 2 320 5 164 1 
137 1 376 1 59 1 295 1 299 1 15 1 
137 2 308 1 90 1 353 2 169 1 4 1 34 2 12 1 361 2 203 1 173 1 175 2 15 4 320 2 322 4 343 2 59 3 344 4 22 1 79 2 126 1 23 1 129 1 110 2 372 1 279 2 376 3 67 1 133 4 
334 1 48 2 93 1 355 1 6 1 145 1 360 1 175 1 267 3 268 2 124 1 16 1 151 1 57 1 322 1 185 2 296 3 106 2 274 1 344 1 212 1 22 1 107 1 23 1 129 1 372 1 130 1 217 1 305 1 133 1 162 1 258 2 
139 2 343 1 79 1 353 1 299 4 110 1 111 4 279 2 11 1 34 1 12 1 66 2 295 2 230 2 320 1 
29 1 251 1 102 1 
29 1 251 1 102 1 
357 1 36 1 29 1 251 1 312 1 
29 1 251 1 102 1 
147 1 29 1 251 1 
147 1 29 1 251 1 
147 1 29 1 251 1 
29 1 251 1 
144 1 225 1 
334 4 1 4 47 1 6 1 263 1 291 1 11 1 200 1 145 8 99 1 338 1 16 1 154 1 211 1 185 2 212 1 107 1 24 1 373 2 375 1 65 1 333 1 283 2 
334 5 1 6 310 1 47 1 6 2 49 1 263 1 291 1 11 1 200 1 145 11 99 1 338 1 16 2 154 2 211 1 39 1 185 4 212 2 107 2 213 1 24 2 373 2 65 1 375 1 220 1 333 1 283 3 
88 1 334 10 1 9 310 2 47 3 49 1 6 3 263 1 51 1 291 1 11 1 200 1 145 19 99 1 266 1 338 1 365 1 16 3 154 1 180 1 211 1 39 2 185 6 213 1 212 3 107 3 24 3 373 3 81 2 65 1 375 1 333 1 283 4 
88 1 334 7 1 10 310 2 47 2 49 1 6 3 263 1 51 1 291 1 11 1 200 1 145 17 99 1 266 1 338 1 365 1 16 3 154 1 180 1 211 1 39 2 185 6 213 2 212 3 107 3 24 3 373 3 81 1 65 1 375 1 333 1 283 5 
334 4 1 4 47 1 6 1 263 1 291 1 11 1 200 1 145 8 99 1 338 1 16 1 154 1 211 1 185 2 212 1 107 1 24 1 373 2 375 1 65 1 333 1 283 2 
88 1 334 6 1 6 310 2 47 2 6 1 291 1 145 12 99 1 266 1 365 1 16 1 154 1 180 1 211 1 39 2 185 2 213 1 212 1 107 1 24 2 373 1 81 2 333 1 283 2 
88 1 334 8 1 10 310 2 47 2 49 1 6 4 263 1 51 2 291 1 11 1 200 1 145 18 99 1 266 1 338 1 365 1 16 4 154 1 180 1 211 1 39 2 185 8 213 2 212 4 107 4 24 3 373 3 81 1 65 1 375 1 333 1 283 5 
88 1 334 7 1 9 310 3 47 2 240 1 6 4 51 2 291 1 145 16 99 1 266 1 365 1 16 4 154 1 180 1 211 1 39 3 185 8 213 3 212 4 107 4 24 3 373 3 81 2 333 1 283 6 
334 4 1 3 47 1 213 3 263 3 24 1 373 3 200 1 145 7 375 2 65 1 338 3 283 6 
88 1 334 8 1 10 310 2 47 2 240 1 6 4 263 1 51 2 291 1 11 1 200 1 145 18 99 1 266 1 338 1 365 1 16 4 154 1 180 1 211 1 39 2 185 8 213 1 212 4 107 4 24 3 373 3 81 1 65 1 375 1 333 1 283 4 
334 4 1 4 47 1 185 4 213 1 107 2 212 2 6 2 263 1 24 1 51 1 373 2 11 1 200 1 145 8 65 1 375 1 338 1 16 2 283 3 
334 3 1 3 47 1 263 1 24 1 373 2 11 1 200 1 145 6 375 1 65 1 13 1 338 1 283 2 
334 2 310 1 39 1 1 2 47 1 185 2 107 1 212 1 213 1 49 1 6 1 24 1 373 1 81 1 145 4 16 1 283 2 
334 4 211 1 1 3 310 1 39 1 47 1 213 1 24 1 373 1 291 1 81 1 145 7 220 1 154 2 283 2 
310 2 1 11 334 12 47 3 6 2 263 2 51 2 290 1 11 1 200 1 145 23 338 2 16 2 154 2 182 1 39 2 211 2 185 4 213 4 107 2 212 2 24 3 373 5 81 2 65 1 375 1 220 1 350 1 283 9 
145 1 334 1 154 1 
145 1 1 1 211 1 
334 3 310 1 39 1 1 3 185 2 47 1 212 1 107 1 213 1 345 1 6 1 49 1 24 1 373 2 81 1 145 6 16 1 283 3 
88 1 334 6 1 6 310 2 47 2 6 1 291 1 145 12 99 1 266 1 365 1 16 1 154 1 180 1 211 1 39 2 185 2 213 1 212 1 107 1 24 2 373 1 81 2 333 1 283 2 
1 3 334 3 47 1 213 1 263 1 24 1 373 1 145 6 65 1 338 1 283 2 
1 1 334 2 185 2 213 1 107 1 212 1 6 1 263 1 51 1 373 1 200 1 145 3 375 1 338 1 350 1 16 1 283 2 
1 5 334 5 185 2 47 2 212 1 107 1 213 2 6 1 263 2 24 2 373 3 145 10 65 1 42 1 338 2 16 1 333 1 283 5 
39 1 1 2 185 2 107 1 212 1 213 1 6 1 24 1 145 2 16 1 333 1 283 1 
334 2 310 1 39 1 1 2 47 1 185 2 107 1 212 1 213 1 6 1 24 1 373 1 81 1 145 4 16 1 333 1 283 2 
334 2 1 1 185 6 107 3 212 3 213 1 240 1 6 3 263 1 51 1 373 1 145 3 338 1 350 1 16 3 333 1 283 2 
334 18 1 16 310 3 47 5 240 1 49 1 6 5 263 3 51 2 291 1 11 1 200 1 356 1 145 34 338 3 16 5 154 4 211 3 39 3 185 10 212 5 107 5 213 5 24 5 373 7 81 3 65 2 375 1 348 1 350 1 220 1 333 1 84 1 283 12 
242 1 296 1 106 1 275 1 355 1 267 1 38 1 
195 1 20 1 106 1 296 1 275 1 355 1 242 1 54 1 148 1 161 1 267 1 38 1 
308 1 13 1 203 1 344 1 22 1 133 1 175 1 23 1 129 1 372 1 322 1 
274 1 106 1 296 2 344 1 22 1 355 1 23 1 129 1 372 1 130 1 133 1 69 1 175 1 268 1 267 2 124 1 258 1 322 1 
274 2 106 2 296 2 238 1 344 1 22 2 355 1 23 1 129 3 372 1 130 1 219 1 361 1 133 1 69 1 268 1 267 2 124 1 321 1 208 1 258 2 322 1 193 1 
285 1 238 1 355 1 361 1 267 2 268 1 368 1 321 1 322 2 208 1 296 2 106 2 274 2 344 2 22 2 23 1 129 3 372 1 130 1 219 1 133 2 69 1 258 2 193 1 
233 1 274 1 59 2 238 1 344 3 22 1 299 1 23 1 129 4 372 1 359 1 376 2 361 1 132 1 295 1 133 3 175 1 15 1 368 1 208 1 104 1 322 3 324 1 
233 1 274 1 59 2 238 1 344 3 22 1 299 1 23 1 129 4 372 1 359 1 159 1 376 2 361 1 132 1 295 1 133 3 175 1 15 1 368 1 208 1 322 3 
344 1 133 1 23 1 372 1 322 1 303 1 
197 1 199 1 274 1 344 7 22 2 300 1 23 2 314 1 129 3 372 3 303 1 142 1 346 1 187 1 14 1 133 7 204 1 175 2 248 1 367 1 322 6 
166 1 334 3 1 3 197 1 47 1 93 2 355 2 6 2 263 1 11 1 200 1 145 6 316 1 338 1 267 2 268 1 124 1 57 2 16 2 322 1 272 1 184 1 210 1 274 1 296 2 106 1 185 4 344 1 22 1 212 2 107 2 23 1 24 1 129 1 372 1 373 2 130 1 217 1 64 1 65 1 375 1 305 1 255 1 133 1 69 1 258 1 283 2 
137 1 353 2 74 1 141 1 34 2 12 2 359 1 295 1 175 1 15 2 320 1 322 1 233 1 59 3 344 1 108 1 79 2 126 1 186 1 299 1 216 1 129 2 279 1 159 1 376 3 132 1 133 1 117 1 
325 1 197 1 274 1 344 2 22 1 23 1 129 2 372 2 303 1 359 1 133 2 204 1 322 2 
308 1 197 1 21 1 344 4 22 1 23 1 129 1 372 1 203 1 133 4 175 1 368 1 322 4 
274 1 298 1 344 2 22 1 94 1 23 1 129 1 372 2 14 1 361 1 133 2 228 1 248 1 322 2 
335 1 344 1 91 1 133 1 175 1 276 1 43 1 23 1 372 1 322 1 
197 1 199 1 344 2 22 1 23 1 129 1 372 1 142 1 133 2 322 2 153 1 
308 1 197 1 199 1 21 1 344 5 22 2 23 2 129 3 372 2 346 1 361 1 203 1 133 5 175 1 367 1 322 4 
308 1 197 1 199 1 21 1 344 5 22 2 23 2 129 3 372 2 346 1 361 1 203 1 133 5 175 1 231 1 322 4 
274 1 106 1 296 2 285 1 344 1 22 1 355 1 23 1 129 1 372 1 130 1 133 1 69 1 175 1 268 1 267 2 258 1 322 1 
274 1 344 1 22 1 300 1 23 1 129 1 372 2 14 1 361 1 133 1 204 1 248 1 322 1 
138 1 198 1 254 1 355 1 45 1 
233 1 138 2 59 2 198 2 297 1 74 1 355 1 299 1 119 1 143 1 219 1 376 2 295 1 244 1 205 1 254 2 321 1 193 1 45 1 
138 1 198 1 106 1 296 1 328 1 337 1 307 1 267 1 45 1 
244 1 297 1 45 1 
202 1 13 1 160 1 61 1 
202 1 243 1 160 1 311 1 61 1 301 1 10 1 
243 1 262 1 371 1 
311 1 61 1 301 1 10 3 304 1 243 3 202 1 160 1 363 1 83 1 103 1 17 2 
202 1 243 2 160 1 287 1 311 1 61 1 301 1 32 1 10 2 
335 1 304 1 243 1 91 1 311 1 269 1 158 1 313 1 61 1 301 1 10 1 
304 1 202 1 243 1 311 1 61 1 301 1 10 1 
304 1 202 2 243 1 160 1 311 1 301 1 10 1 
155 1 311 2 121 1 61 1 301 2 10 2 241 1 304 1 202 1 243 2 
260 1 311 1 313 1 301 1 61 2 10 3 304 1 53 1 202 1 243 3 160 1 351 1 32 2 
271 1 91 2 311 1 289 1 61 1 301 1 10 2 335 1 304 1 202 1 243 2 160 1 43 1 269 1 32 1 
140 1 311 2 287 1 313 1 301 2 61 2 10 4 304 1 202 1 243 4 160 1 351 1 32 2 
304 1 202 1 243 1 160 1 311 1 61 1 301 1 10 1 
311 1 313 1 301 1 61 3 10 4 202 2 243 4 160 2 83 1 351 1 31 1 103 1 32 2 17 1 
19 1 311 1 61 1 301 1 10 2 304 1 202 1 243 2 374 1 160 1 32 1 342 1 
0 1 311 1 61 1 301 1 10 3 304 1 243 3 202 1 160 1 83 1 103 2 17 2 
331 2 280 1 61 2 44 1 
304 1 243 1 311 1 192 1 301 1 10 1 
53 1 304 1 202 1 243 2 160 1 311 1 61 1 301 1 32 1 10 2 
30 1 
304 1 202 1 243 1 160 1 311 1 61 1 301 1 10 1 
53 1 304 1 202 1 243 3 160 1 311 1 61 1 301 1 32 1 17 1 10 3 
313 1 351 1 31 1 61 1 
202 1 61 1 

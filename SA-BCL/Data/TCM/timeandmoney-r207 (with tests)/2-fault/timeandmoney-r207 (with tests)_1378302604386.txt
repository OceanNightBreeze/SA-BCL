#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
363 1 364 1 63 9 367 4 91 1 201 1 143 1 9 1 144 1 145 1 177 3 146 2 208 1 308 1 353 1 80 1 52 6 213 1 112 2 337 2 83 1 53 2 188 1 275 2 85 5 298 2 35 2 163 9 
363 1 364 1 63 9 367 4 91 1 201 1 143 1 9 1 144 1 145 1 177 3 146 2 208 1 308 1 353 1 80 1 52 6 213 1 337 2 83 1 112 2 53 2 188 1 275 2 85 5 298 2 35 2 163 9 
363 1 364 1 63 10 367 5 91 1 201 1 143 1 9 1 144 1 145 1 177 4 146 2 208 1 308 1 353 1 80 1 52 7 213 1 337 2 83 1 112 2 53 2 188 1 275 2 85 6 298 2 35 2 163 10 
363 1 364 1 63 7 367 3 91 1 201 1 143 1 9 1 144 1 177 2 146 2 208 1 308 1 353 1 80 1 52 4 213 1 337 2 83 1 112 1 53 2 188 1 275 2 85 4 298 2 35 2 163 7 
363 1 63 4 353 1 367 2 52 3 213 1 337 1 112 2 53 1 143 1 275 1 9 1 177 1 145 1 85 3 298 1 35 1 163 4 
363 1 63 2 199 1 80 1 91 1 41 1 213 1 337 1 53 1 141 1 143 1 275 1 85 1 146 1 35 1 163 2 
363 1 63 3 208 1 367 1 52 1 213 1 337 2 143 1 177 1 85 2 146 1 35 2 163 3 
363 1 63 9 208 1 353 1 367 4 52 7 213 1 112 2 83 1 337 2 53 1 188 1 45 1 227 1 143 1 275 1 9 1 145 1 85 5 177 3 298 1 146 1 35 2 163 9 
363 1 63 9 208 1 353 1 367 4 52 7 213 1 112 2 83 1 337 2 53 1 188 1 45 1 227 1 143 1 275 1 9 1 145 1 85 5 177 3 298 1 146 1 35 2 163 9 
256 1 316 1 356 1 
51 1 316 1 160 2 
164 2 315 1 19 1 84 2 304 2 162 2 336 2 168 2 
164 2 135 2 19 1 324 1 284 1 252 1 374 1 94 1 168 3 229 2 304 3 258 1 257 1 287 1 77 1 48 1 147 1 307 1 13 1 153 2 184 2 155 2 211 1 336 2 215 1 187 1 315 1 157 1 217 1 84 2 362 1 56 1 339 1 340 1 162 2 196 1 281 1 
164 1 315 1 136 1 84 1 304 1 162 1 346 1 336 1 168 1 338 1 
62 1 164 1 136 1 344 1 346 2 168 2 256 1 172 1 304 2 330 1 150 1 359 1 336 2 338 1 315 1 84 1 316 1 193 1 319 1 194 1 162 1 
164 1 150 2 344 1 359 2 336 1 346 1 168 1 256 1 84 1 316 1 304 1 193 1 319 1 194 1 162 1 
26 1 150 1 219 1 359 1 203 1 
256 1 26 1 209 1 316 1 150 2 266 1 219 1 359 2 
26 1 150 1 359 1 
164 1 136 1 150 1 359 1 346 1 336 1 168 1 338 1 315 1 84 1 330 1 304 1 219 1 162 1 
316 1 
256 1 26 1 316 1 150 2 266 1 219 1 225 1 359 2 
262 2 282 1 292 1 372 1 150 5 312 2 128 2 357 1 266 1 359 5 314 1 44 1 361 1 256 1 26 2 316 1 219 2 350 1 342 1 
19 1 356 1 
164 1 19 2 336 2 168 2 84 1 304 2 99 1 180 1 162 1 
238 1 186 1 30 1 
135 1 19 1 153 1 184 1 324 1 211 1 168 1 157 1 304 1 244 1 339 1 257 1 258 1 340 1 48 1 196 1 
135 1 153 1 184 1 324 1 211 1 325 1 186 1 336 1 168 2 347 1 157 1 84 1 304 2 339 1 258 1 257 1 340 1 48 1 162 1 196 1 
164 1 19 1 371 1 325 2 373 1 346 1 336 5 168 5 347 1 96 1 84 4 172 1 304 5 99 1 162 4 36 1 
136 1 84 2 304 2 195 1 162 2 346 1 336 2 168 2 
164 1 19 1 84 3 304 3 325 1 162 3 336 3 168 3 
136 1 84 1 304 1 162 1 346 1 336 1 168 1 
164 1 84 1 304 1 99 1 180 1 162 1 346 1 336 1 168 1 
164 2 135 1 19 1 344 1 284 1 324 1 252 1 325 1 374 1 346 1 168 4 347 1 228 1 229 2 304 4 258 1 257 1 287 1 288 1 99 1 77 1 48 1 147 1 13 1 150 1 153 1 184 1 155 1 211 1 359 1 336 3 215 1 315 1 157 1 84 3 56 1 339 1 193 1 340 1 319 1 194 1 162 3 196 1 281 1 
19 1 325 1 373 1 346 1 336 2 168 2 84 1 172 1 304 2 162 1 36 1 
164 1 150 1 344 1 325 2 359 1 346 1 336 3 168 3 347 1 71 1 84 3 316 1 304 3 193 1 99 1 288 1 319 1 194 1 162 3 
164 1 325 1 186 1 30 1 336 2 168 2 84 2 304 2 99 1 162 2 
135 1 19 1 153 1 184 1 324 1 211 1 168 1 157 1 304 1 339 1 257 1 258 1 340 1 48 1 196 1 
135 1 19 1 153 1 184 1 324 1 211 1 168 1 122 1 157 1 304 1 257 1 258 1 48 1 351 1 196 1 
252 1 200 1 374 1 43 1 328 1 7 1 124 1 229 2 98 1 77 1 100 1 147 1 205 1 238 2 13 1 182 1 155 4 186 2 30 2 215 1 360 1 362 2 32 1 56 2 
84 1 304 1 194 1 162 1 195 1 346 1 336 1 168 1 
37 1 202 1 
37 1 202 1 
334 1 110 1 
334 1 110 1 
334 1 110 1 
37 1 270 1 202 1 
37 1 31 1 202 1 
37 2 305 1 334 1 110 1 202 2 60 1 
37 1 270 1 202 1 
37 1 270 1 202 1 
37 1 181 1 202 1 
37 1 181 1 202 1 
37 1 181 1 202 1 
19 1 37 1 137 1 40 1 168 2 304 2 76 1 260 1 202 1 333 1 150 1 313 1 268 1 359 1 336 2 272 1 190 1 84 2 31 1 158 1 317 1 86 1 162 2 322 1 
333 3 37 2 121 1 38 2 150 2 1 1 268 2 359 2 272 2 190 2 316 1 305 1 286 1 317 2 57 1 202 2 204 1 322 1 235 1 
275 1 298 1 53 1 
141 1 275 1 53 1 
141 1 207 1 93 1 298 2 295 1 53 3 
141 1 207 1 93 1 298 1 224 1 53 2 
141 1 207 1 93 2 298 1 53 2 
372 3 200 1 140 1 171 2 26 1 256 1 124 1 7 1 76 1 98 1 97 1 290 2 51 1 262 1 292 1 128 1 312 1 150 5 240 1 266 1 359 5 316 2 158 1 296 1 219 4 86 1 160 3 320 2 161 1 220 1 342 2 301 1 
197 1 365 1 372 8 223 1 200 3 140 2 26 6 256 1 124 3 7 3 175 1 98 3 97 1 203 5 290 6 51 3 262 2 292 1 150 9 312 2 128 2 152 1 266 1 359 9 314 1 111 5 54 1 316 5 86 4 219 7 160 9 320 6 161 3 342 6 301 2 
372 3 200 1 140 1 171 1 256 1 124 1 7 1 98 1 290 2 51 2 262 1 128 1 312 1 150 3 359 3 314 1 316 3 296 1 219 2 86 1 160 4 220 1 161 1 320 2 342 2 301 1 
197 1 365 1 372 5 200 2 140 1 171 2 256 1 124 2 7 2 175 1 98 2 290 4 51 3 262 1 128 1 312 1 150 4 359 4 314 1 316 4 296 1 86 2 219 3 160 7 320 4 220 1 161 2 342 4 301 1 
157 1 129 1 356 1 
157 1 173 1 
293 1 
157 1 258 1 196 1 
157 1 343 1 
157 1 258 1 
254 1 157 3 129 2 258 1 280 1 196 1 
247 1 102 1 104 1 182 2 155 7 24 1 302 1 328 3 25 2 379 1 271 1 124 1 7 1 362 4 56 3 245 1 306 1 
247 1 102 1 104 1 182 2 155 7 24 1 302 1 328 3 25 2 379 1 271 1 124 1 7 1 362 4 56 3 245 1 306 1 
247 1 102 1 104 1 182 2 155 7 24 1 302 1 328 3 25 2 379 1 271 1 124 1 7 1 362 4 56 3 47 1 245 1 306 1 
247 1 221 1 120 3 369 1 252 1 345 1 200 3 24 2 374 1 302 1 72 1 25 3 328 10 7 4 124 4 229 2 98 3 77 1 306 2 28 1 102 1 104 2 182 5 294 1 14 4 155 31 215 1 271 1 379 2 243 1 362 16 56 15 161 3 245 5 
247 1 65 1 252 2 24 1 374 2 302 1 25 2 328 4 124 1 7 1 174 1 229 4 77 2 306 1 104 1 182 3 294 1 155 9 215 2 379 1 271 1 362 5 56 4 245 1 
363 1 135 1 63 2 20 1 68 1 141 1 46 1 143 1 230 1 10 1 146 1 257 1 237 1 103 1 311 1 52 1 184 1 153 1 211 1 212 1 213 1 295 1 337 1 53 2 275 1 218 1 85 1 298 1 35 1 163 2 
363 1 135 1 63 3 250 1 68 1 141 1 46 1 143 1 230 1 176 1 10 1 146 1 257 1 237 1 103 1 52 2 184 1 153 1 211 1 212 1 295 1 337 1 53 2 275 1 218 1 85 1 298 1 35 1 163 3 119 1 
363 1 135 1 63 2 68 1 141 1 46 1 143 1 230 1 176 1 146 1 10 1 257 1 237 1 52 2 184 1 153 1 211 1 295 1 53 2 275 1 218 1 85 1 298 1 163 2 119 1 
135 1 250 1 63 1 153 1 184 1 324 1 211 1 337 1 156 1 157 1 276 1 218 2 230 2 257 1 258 1 178 1 146 2 10 2 117 1 35 1 34 1 58 1 163 1 
135 1 63 1 20 1 68 1 141 1 46 1 230 1 176 1 10 1 146 1 257 1 237 1 103 1 184 1 153 1 211 1 212 1 213 1 295 1 337 1 53 2 275 1 218 1 298 1 35 1 163 1 
2 1 
135 2 344 1 139 1 42 2 140 1 346 1 95 2 256 1 6 1 304 1 258 1 257 1 352 2 51 2 101 1 262 1 105 1 150 5 312 1 153 2 266 3 211 1 267 1 359 5 214 1 157 1 273 1 274 2 115 1 316 2 319 1 160 2 58 1 62 1 366 2 372 2 324 2 167 1 375 1 168 1 329 2 26 6 172 1 377 1 178 1 236 2 292 1 128 1 184 2 336 1 193 1 87 4 194 1 300 1 342 2 
62 1 344 1 150 3 266 1 139 1 225 1 359 3 167 1 346 1 375 1 336 1 168 1 329 1 273 1 26 2 172 1 304 1 377 1 193 1 87 2 319 1 194 1 
62 1 344 1 150 2 139 1 359 2 167 1 346 1 375 1 336 1 168 1 273 1 172 1 304 1 377 1 193 1 87 3 319 1 194 1 236 1 
62 1 344 1 139 1 42 1 225 1 167 1 375 1 346 1 168 1 329 1 26 2 172 1 304 1 377 1 236 1 150 3 266 1 359 3 336 1 273 1 193 1 319 1 87 3 194 1 
136 1 344 1 139 1 42 4 346 2 95 2 256 2 304 2 352 2 51 2 262 1 106 1 150 5 312 1 266 3 359 5 214 1 315 1 273 1 274 2 115 1 316 2 159 1 319 1 162 1 164 1 62 1 366 2 372 1 285 1 67 1 225 1 167 1 375 1 168 2 329 4 26 7 172 1 330 1 377 1 236 3 291 1 292 1 128 1 336 2 338 1 84 1 193 1 87 5 194 1 342 1 
344 1 139 1 42 2 346 1 95 2 256 1 6 1 304 1 352 2 51 2 262 1 150 4 312 1 266 2 359 4 214 1 273 1 274 2 115 1 316 2 319 1 160 2 62 1 366 2 372 1 167 1 375 1 168 1 329 2 26 4 172 1 377 1 236 2 292 1 128 1 336 1 193 1 87 4 194 1 342 1 
62 1 366 2 372 1 344 1 285 1 67 1 139 1 42 2 167 1 375 1 346 1 168 1 329 2 95 2 256 1 26 4 172 1 304 1 377 1 352 2 236 2 291 1 51 2 262 1 292 1 150 4 312 1 128 1 266 2 359 4 214 1 336 1 273 1 274 2 115 1 316 1 193 1 319 1 87 4 194 1 342 1 
62 1 366 2 372 1 344 1 285 1 67 1 139 1 42 2 167 1 375 1 346 1 168 1 329 2 95 2 256 1 26 4 172 1 304 1 377 1 352 2 236 2 291 1 51 2 262 1 292 1 150 4 312 1 128 1 266 2 359 4 214 1 336 1 273 1 274 2 115 1 316 1 193 1 319 1 87 4 194 1 342 1 
62 1 372 1 344 1 139 1 42 2 167 1 375 1 346 1 168 1 329 2 95 2 170 2 256 1 26 4 172 1 304 1 377 1 236 2 291 1 262 1 292 1 150 4 312 1 128 1 265 1 266 2 359 4 336 1 273 1 274 2 17 1 115 1 316 1 278 2 193 1 319 1 87 4 160 2 194 1 342 1 246 1 
62 1 366 2 372 1 344 1 67 1 285 1 139 1 42 3 167 1 375 1 346 1 168 1 95 2 329 3 256 1 26 5 172 1 304 1 377 1 352 2 236 3 291 1 51 2 262 1 292 1 106 1 128 1 312 1 150 4 266 2 359 4 214 1 336 1 273 1 274 2 115 1 316 1 193 1 319 1 87 5 194 1 342 1 
62 1 366 2 372 1 344 1 67 1 285 1 139 1 42 3 167 1 375 1 346 1 168 1 95 2 329 3 256 1 26 5 172 1 304 1 377 1 352 2 236 3 291 1 51 2 262 1 292 1 106 1 128 1 312 1 150 4 266 2 359 4 214 1 336 1 273 1 274 2 115 1 316 1 193 1 319 1 87 5 194 1 342 1 
62 1 372 1 344 1 139 1 42 2 167 1 375 1 346 1 168 1 329 2 95 2 170 2 256 1 26 4 6 1 172 1 304 1 377 1 236 2 262 1 292 1 128 1 312 1 150 4 266 2 359 4 336 1 273 1 274 2 17 1 115 1 316 1 278 2 193 1 319 1 87 4 160 2 194 1 342 1 
247 1 19 2 252 1 24 1 374 1 302 1 328 2 25 1 7 1 124 1 229 2 77 1 147 1 306 1 238 1 13 1 182 2 356 1 155 6 186 1 30 1 215 1 271 1 360 1 362 3 56 3 
19 1 120 3 252 2 345 1 200 1 374 2 94 1 328 2 5 1 123 1 7 2 124 1 229 4 98 2 287 1 77 2 147 2 28 1 238 11 13 1 182 1 14 3 155 14 186 11 269 1 30 4 215 2 189 1 362 8 56 6 297 1 161 2 245 1 
135 1 19 1 324 1 252 1 325 1 69 1 374 1 94 1 168 2 347 1 123 1 304 2 229 2 258 1 257 1 287 1 48 1 77 1 147 1 13 1 184 1 153 1 211 1 155 2 30 1 336 1 215 1 157 1 84 1 244 1 362 1 192 1 56 1 339 1 116 1 340 1 162 1 196 1 
247 1 135 3 252 3 200 2 302 1 94 1 347 1 303 2 7 3 304 3 257 2 258 2 98 2 48 2 147 3 306 1 13 3 153 3 155 20 211 2 215 3 271 1 216 1 157 2 362 10 56 10 162 1 161 2 19 2 222 2 283 2 324 1 284 2 325 1 24 1 374 3 168 3 25 1 328 8 123 1 124 3 229 6 176 1 332 1 287 1 77 3 238 7 182 4 184 3 186 7 336 1 30 7 380 2 242 1 84 1 339 2 340 2 196 2 245 4 
135 7 90 1 324 2 252 2 325 1 374 2 94 1 168 1 73 1 304 1 229 4 176 1 257 2 178 1 258 2 287 1 232 1 49 1 77 2 147 2 307 2 239 1 13 2 309 1 311 1 184 8 153 8 211 2 155 2 336 1 215 2 360 1 157 3 84 1 362 1 56 1 341 1 162 1 58 1 
164 1 252 1 200 1 374 1 168 1 328 1 123 1 7 1 124 1 229 2 304 1 98 1 99 1 77 1 261 1 147 1 238 1 13 1 182 1 155 3 186 1 30 1 336 1 215 1 84 1 362 1 56 2 162 1 161 1 
238 1 13 1 252 1 155 2 186 1 374 1 30 1 215 1 328 1 360 1 7 1 229 2 362 2 98 1 77 1 245 1 100 1 147 1 
238 1 13 1 182 1 252 1 155 2 200 1 186 1 374 1 30 1 215 1 328 1 360 1 124 1 229 2 56 2 77 1 147 1 205 1 
252 1 200 1 374 1 328 2 7 1 124 1 229 2 98 1 77 1 147 1 238 2 13 1 182 1 155 4 186 2 30 2 215 1 360 1 362 2 56 2 161 1 245 1 
238 1 13 1 252 1 155 2 186 1 374 1 30 1 215 1 328 1 73 1 7 1 229 2 362 2 98 1 77 1 245 1 100 1 147 1 
238 1 13 1 182 1 252 1 155 2 200 1 186 1 374 1 30 1 215 1 328 1 73 1 124 1 229 2 56 2 77 1 147 1 205 1 
252 1 200 1 374 1 328 2 73 1 7 1 124 1 229 2 98 1 77 1 147 1 238 2 13 1 182 1 155 4 186 2 30 2 215 1 362 2 56 2 161 1 245 1 
238 2 13 1 182 1 252 1 200 1 155 4 186 2 374 1 30 2 215 1 328 2 124 1 7 1 229 2 362 2 56 2 98 1 77 1 161 1 245 1 147 1 
135 1 19 1 284 1 324 1 252 1 374 1 94 1 168 1 304 1 229 2 258 1 257 1 287 1 48 1 77 1 147 1 13 1 184 1 153 1 155 2 211 1 215 1 157 1 362 1 56 1 339 1 340 1 196 1 
135 1 19 1 324 1 252 1 374 1 94 1 168 1 122 1 304 1 229 2 258 1 257 1 287 1 48 1 77 1 351 1 147 1 13 1 79 1 184 1 153 1 155 2 211 1 215 1 157 1 362 1 56 1 196 1 
252 1 200 1 374 1 328 2 123 1 7 1 124 1 229 2 98 1 77 1 147 1 238 2 13 1 182 1 155 4 186 2 30 2 215 1 362 2 56 2 161 1 245 1 
135 1 284 1 252 1 200 1 374 1 168 1 328 2 303 1 124 1 7 1 304 1 229 2 98 1 257 1 258 1 48 1 77 1 147 1 238 2 13 1 182 1 311 1 184 1 153 1 155 4 211 1 186 2 30 2 215 1 157 1 362 2 56 2 339 1 340 1 161 1 245 1 196 1 
164 1 252 1 200 1 374 1 168 1 328 1 123 1 124 1 7 1 229 2 304 1 98 1 99 1 77 1 147 1 238 1 13 1 155 3 186 1 336 1 30 1 215 1 132 1 84 1 362 2 56 1 162 1 161 1 245 1 
368 1 22 1 65 1 120 3 0 1 252 2 3 2 345 1 200 4 374 2 327 1 328 4 7 4 124 4 229 4 126 1 98 4 77 2 50 1 27 1 28 3 206 1 148 1 182 1 210 1 183 3 108 1 14 4 155 32 215 2 55 1 362 15 56 17 318 1 161 4 245 3 
368 1 22 1 65 1 120 3 0 1 252 3 3 2 345 1 200 3 374 3 327 1 328 5 7 4 124 3 229 6 126 1 98 4 77 3 50 1 27 1 28 3 206 1 148 1 182 2 210 1 183 4 108 1 294 1 14 4 155 33 215 3 55 1 362 17 56 16 318 1 161 4 245 3 
247 1 22 1 65 1 120 4 0 1 252 2 3 1 345 2 200 7 24 1 374 2 327 1 302 1 25 1 328 14 5 2 7 8 124 8 229 4 126 1 98 7 77 2 27 1 306 1 28 2 206 1 148 1 182 7 210 1 183 4 108 1 294 1 14 4 155 52 215 2 271 1 55 1 362 27 56 25 318 1 161 7 245 7 
65 1 120 1 252 2 3 1 345 1 200 3 374 2 327 1 328 6 7 3 124 3 229 4 259 1 98 3 77 2 50 1 27 1 28 1 182 3 183 2 108 1 14 2 155 19 215 2 55 1 362 9 56 10 318 2 161 3 245 3 
65 1 120 2 22 1 0 1 252 2 3 2 200 2 374 2 327 1 328 1 124 2 7 3 229 4 126 1 98 3 77 2 27 1 28 2 206 1 148 1 210 1 183 3 108 1 294 1 14 2 155 24 215 2 55 2 362 13 56 11 318 1 161 3 245 1 
272 1 37 1 190 1 121 1 305 1 286 1 165 1 317 1 268 1 202 1 
31 1 40 1 
272 1 37 1 190 1 310 1 251 1 317 1 268 1 202 1 114 1 
270 1 113 1 
335 1 181 1 60 1 
333 2 37 1 121 1 38 1 150 1 1 1 359 1 268 1 272 1 190 1 316 1 305 1 286 1 317 1 202 1 204 1 322 1 235 1 
333 2 37 1 121 1 38 1 150 1 1 1 359 1 268 1 272 1 190 1 316 1 305 1 286 1 317 1 202 1 204 1 322 1 235 1 
333 2 37 1 121 1 38 1 150 1 1 1 359 1 268 1 272 1 190 1 316 1 305 1 286 1 317 1 202 1 204 1 322 1 235 1 
270 1 113 1 60 1 
270 1 113 1 60 1 
335 1 181 1 
335 1 181 1 60 1 
137 1 313 1 
19 1 37 1 137 1 38 1 40 1 168 2 304 2 76 1 260 1 202 1 235 1 333 1 150 1 313 1 359 1 268 1 336 2 272 1 190 1 31 1 84 2 191 1 158 1 317 1 219 1 86 1 162 2 
135 2 252 1 374 1 226 1 94 1 168 2 169 1 123 1 304 2 229 2 231 1 257 1 258 1 287 1 232 1 49 1 77 1 147 1 307 2 13 1 184 2 153 2 211 1 154 1 155 2 336 2 215 1 157 1 362 1 56 1 33 1 
135 2 237 1 78 1 103 1 311 1 151 1 153 2 184 2 68 1 211 1 295 1 53 2 141 1 275 1 218 1 176 1 298 1 257 1 179 1 
135 1 237 1 103 1 21 1 151 1 153 1 184 1 68 1 211 1 295 1 53 2 141 1 275 1 218 1 176 1 298 1 257 1 
135 1 153 1 184 1 324 1 211 1 157 1 125 1 218 1 276 1 257 1 258 1 178 1 179 1 58 1 
135 1 237 1 78 1 103 1 151 1 153 1 184 1 68 1 211 1 295 1 53 2 141 1 275 1 218 1 176 1 298 1 257 1 179 1 
11 1 
256 1 316 1 282 1 372 1 356 1 357 1 342 1 
366 1 372 1 26 1 256 1 352 1 51 1 262 1 292 1 128 1 312 1 150 1 266 1 359 1 214 1 316 2 160 1 342 1 
135 3 138 1 344 2 343 2 140 2 200 2 253 2 142 2 256 2 7 2 257 3 258 3 98 2 349 2 51 6 262 4 311 1 105 1 312 4 150 5 153 3 357 1 266 3 211 4 16 1 358 2 359 5 157 10 316 8 279 1 280 1 160 12 320 6 161 2 118 2 18 2 323 1 282 1 222 2 372 9 324 1 26 5 124 2 173 3 290 6 292 4 128 4 129 2 184 3 185 2 241 1 196 3 342 8 134 2 
120 1 22 1 0 1 372 7 200 2 256 1 7 2 124 2 98 2 28 1 290 5 206 1 148 1 51 3 262 1 210 1 292 1 128 1 312 1 14 1 316 4 160 6 320 5 161 2 342 4 
164 1 136 1 372 2 67 1 24 1 253 2 326 1 346 1 302 1 168 1 7 2 124 1 304 1 330 1 306 1 262 1 292 1 128 1 312 1 150 1 359 1 336 1 338 1 315 1 84 1 162 1 342 2 134 1 
262 1 292 1 282 1 312 1 128 1 372 1 357 1 256 1 316 1 342 1 
290 5 51 5 222 1 372 5 200 2 253 2 7 2 316 5 124 2 98 2 160 10 161 2 320 5 342 5 134 1 
256 1 26 1 316 1 150 1 266 1 359 1 
135 4 138 2 323 1 372 2 324 2 140 2 26 4 257 1 258 1 178 1 262 2 292 1 105 2 263 1 128 2 312 2 150 3 264 1 184 4 153 4 266 2 211 1 267 1 359 3 314 1 157 1 300 1 58 1 342 2 
135 1 164 2 19 1 324 1 284 1 252 1 374 1 168 3 229 2 304 3 257 1 258 1 287 1 77 1 48 1 147 1 13 1 184 1 153 1 155 1 211 1 336 2 215 1 315 1 157 1 84 2 56 1 339 1 340 1 162 2 196 1 281 1 
290 2 51 2 262 1 292 1 105 1 312 1 128 1 372 1 140 1 25 1 256 2 316 4 160 4 320 2 342 2 
272 1 370 1 268 1 
272 1 121 1 92 1 313 1 268 1 
272 1 370 1 268 1 
272 1 370 1 268 1 
272 1 15 1 268 1 
272 1 15 1 268 1 
272 1 15 1 268 1 
272 1 268 1 
37 1 202 1 
247 1 182 2 294 1 252 2 155 8 24 1 374 2 302 1 215 2 25 1 328 3 271 1 124 1 7 1 229 4 362 4 56 4 77 2 245 1 306 1 
247 1 182 2 356 1 155 6 24 1 302 1 25 1 328 2 271 1 7 1 124 1 362 3 56 3 306 1 
182 1 149 1 252 1 200 1 155 4 374 1 215 1 328 2 124 1 7 1 229 2 362 2 56 2 98 1 77 1 161 1 245 1 
182 1 120 1 14 2 200 1 155 7 345 1 328 2 124 1 7 1 362 3 56 4 98 1 161 1 245 1 28 1 
247 1 120 2 66 1 252 2 345 1 200 2 24 2 374 2 302 1 25 1 328 9 5 1 7 3 124 3 229 4 98 2 77 2 306 2 182 5 294 2 14 2 155 23 269 1 215 2 271 1 362 11 56 12 161 2 245 4 
56 1 14 1 155 1 
120 1 362 1 155 1 
182 2 222 1 149 1 252 1 155 6 200 1 374 1 215 1 328 3 7 1 124 1 229 2 362 3 56 3 98 1 77 1 161 1 245 1 
120 1 65 1 22 1 0 1 252 1 200 2 374 1 328 2 7 2 124 2 229 2 98 2 77 1 28 1 206 1 148 1 182 1 210 1 14 1 155 12 215 1 362 6 56 6 161 2 245 1 
182 1 155 6 24 1 302 1 328 2 7 1 124 1 362 3 56 3 245 1 306 1 
247 1 182 1 66 1 294 1 252 1 155 3 24 1 374 1 215 1 328 2 271 1 229 2 362 1 56 2 77 1 245 1 306 1 
247 1 120 1 65 1 252 1 24 1 374 1 302 1 25 1 328 2 124 1 7 1 229 2 77 1 28 1 306 1 182 2 210 1 14 1 155 8 215 1 271 1 362 4 56 4 
247 1 65 1 120 1 252 2 345 1 24 1 374 2 302 1 25 1 328 3 124 1 7 2 229 4 98 1 77 2 306 1 28 1 182 2 210 1 149 1 14 2 155 11 215 2 271 1 362 6 56 5 161 1 245 1 
120 1 65 1 22 1 0 1 252 2 200 2 374 2 328 1 7 2 124 2 229 4 98 2 77 2 28 1 206 1 148 1 210 1 149 1 14 1 155 13 215 2 362 6 56 7 161 2 245 1 
247 1 120 1 65 1 22 1 0 1 252 3 200 1 24 1 374 3 302 1 25 1 328 5 7 3 124 2 229 6 98 2 77 3 306 1 28 1 206 1 148 1 182 3 210 1 149 1 294 1 14 1 155 17 215 3 271 1 362 10 56 7 161 2 245 2 
247 1 120 1 65 1 252 1 24 1 374 1 302 1 25 1 328 2 124 1 7 1 229 2 77 1 28 1 306 1 182 2 210 1 14 1 155 8 215 1 271 1 362 4 56 4 
120 1 65 1 22 1 0 1 252 1 200 2 374 1 328 2 7 2 124 2 229 2 98 2 77 1 28 1 206 1 148 1 182 1 210 1 14 1 155 12 215 1 362 6 56 6 161 2 245 1 
65 1 120 1 22 1 0 1 252 3 200 1 374 3 328 1 7 2 124 1 229 6 98 2 77 3 28 1 206 1 148 1 210 1 149 1 294 1 14 1 155 12 215 3 362 7 56 5 161 2 245 1 
65 1 120 1 22 1 0 1 252 3 200 1 374 3 328 4 7 2 124 1 229 6 98 2 77 3 50 1 28 1 206 1 148 1 182 2 210 1 294 1 14 1 155 12 215 3 362 7 56 5 161 2 245 2 
247 2 182 3 155 7 24 3 302 1 328 6 271 1 124 1 7 1 362 3 56 4 245 3 306 3 
65 1 120 1 22 1 0 1 252 3 200 1 374 3 328 1 7 2 124 1 229 6 98 2 77 3 50 1 28 1 206 1 148 1 210 1 294 1 14 1 155 12 215 3 362 7 56 5 161 2 245 1 
65 1 182 3 252 1 155 10 24 2 374 1 326 1 302 1 215 1 328 5 7 2 124 2 229 2 362 5 56 5 77 1 245 2 306 2 
65 1 252 1 155 2 374 1 215 1 328 1 7 1 229 2 362 2 98 1 77 1 245 1 
182 1 65 1 252 1 200 1 155 4 374 1 215 1 328 2 124 1 7 1 229 2 362 2 56 2 98 1 77 1 161 1 245 1 
65 1 182 1 66 1 294 1 252 3 155 3 24 1 374 3 215 3 328 2 229 6 362 1 56 2 77 3 50 1 245 1 306 1 
247 1 221 1 65 1 120 3 66 1 252 5 345 1 200 3 24 3 374 5 302 2 25 1 72 1 328 12 7 5 124 5 229 10 98 3 77 5 50 1 306 3 28 1 182 7 149 1 294 2 14 4 155 34 215 5 271 1 243 1 362 16 56 18 161 3 245 5 
19 1 373 1 346 1 336 1 168 1 172 1 304 1 277 1 36 1 
248 1 19 1 29 1 130 1 373 1 4 1 346 1 336 1 168 1 172 1 304 1 277 1 36 1 12 1 
135 1 157 1 356 1 184 1 153 1 324 1 257 1 258 1 178 1 211 1 58 1 
135 1 19 1 153 1 184 1 324 1 211 1 325 1 336 1 168 2 157 1 84 1 304 2 339 1 258 1 257 1 48 1 162 1 196 1 
135 1 19 1 138 1 343 1 153 1 184 1 211 1 325 1 346 1 336 2 168 2 157 3 84 2 304 2 193 1 339 1 258 2 257 1 349 1 194 1 48 1 162 1 196 2 
135 2 19 1 138 1 343 1 325 1 70 1 346 1 168 2 122 1 304 2 257 1 258 2 349 1 48 1 184 2 153 2 211 1 336 2 157 3 84 2 193 1 194 1 162 1 196 2 
135 3 64 1 127 1 138 1 344 1 343 1 150 2 129 1 153 3 184 3 324 1 211 1 359 2 70 1 157 4 256 1 26 1 316 1 173 1 258 1 257 1 349 1 196 1 
135 3 138 1 344 1 343 1 150 2 129 1 153 3 184 3 324 1 211 1 358 1 359 2 70 1 157 4 256 1 26 1 316 1 173 1 258 1 257 1 349 1 196 1 
135 1 90 1 184 1 153 1 257 1 211 1 
307 1 135 6 90 1 239 1 309 1 311 1 39 1 153 7 184 7 324 2 211 3 157 3 74 1 176 1 258 2 257 2 88 1 280 1 341 1 49 1 196 1 
135 1 247 1 252 2 302 1 303 1 7 1 304 2 257 1 258 1 48 1 147 2 306 1 13 2 311 1 153 1 211 1 155 6 215 2 271 1 157 1 362 3 56 3 162 1 19 2 284 1 325 1 24 1 374 2 168 2 328 2 25 1 123 1 124 1 229 4 231 1 77 2 238 1 182 2 184 1 186 1 30 1 336 1 380 1 84 1 339 1 340 1 196 1 
135 1 18 1 282 1 323 1 372 1 344 1 324 1 142 1 256 1 26 2 173 1 262 2 292 2 128 2 312 2 150 3 129 1 153 1 184 1 357 1 266 1 358 1 359 3 157 2 316 1 219 1 342 1 118 1 
135 2 90 1 311 1 129 1 153 2 184 2 16 1 211 2 157 2 258 1 257 1 280 1 196 1 
135 4 311 1 153 4 184 4 324 1 211 1 70 1 157 1 75 1 178 1 258 1 257 1 58 1 
135 2 138 1 153 2 184 2 211 2 157 1 376 1 74 1 332 1 258 1 257 1 88 1 133 1 196 1 
141 1 135 1 237 1 275 1 184 1 153 1 324 1 257 1 211 1 53 1 
135 2 157 1 311 1 184 2 153 2 176 1 257 1 258 1 211 1 33 1 49 1 
135 4 239 1 138 1 311 1 153 5 184 5 324 1 211 2 157 3 75 1 178 1 258 2 257 2 49 1 341 1 58 1 
135 4 138 1 311 1 153 5 184 5 324 1 23 1 211 2 157 3 75 1 178 1 258 2 257 2 49 1 341 1 58 1 
135 1 19 1 153 1 184 1 324 1 211 1 325 1 336 1 168 2 122 1 157 1 84 1 304 2 258 1 257 1 48 1 162 1 196 1 
135 1 138 1 39 1 153 1 184 1 211 2 157 1 74 1 258 1 257 1 88 1 280 1 196 1 
19 1 198 1 131 1 59 1 234 1 
19 1 198 1 344 1 150 2 109 1 359 2 131 2 346 1 256 1 316 1 348 1 193 1 219 1 331 1 288 1 319 1 194 1 59 2 234 2 
198 1 154 1 226 1 336 1 169 1 168 1 304 1 59 1 234 1 
198 1 109 1 331 1 
363 1 143 1 356 1 85 1 
363 1 63 1 143 1 85 1 35 1 163 1 337 1 
63 1 230 1 146 1 
363 1 249 1 63 3 91 2 82 1 81 1 213 1 337 1 143 1 85 1 35 1 163 3 
363 1 63 2 143 1 52 1 85 1 35 1 163 2 112 1 337 1 
63 1 367 1 213 1 337 1 53 1 275 1 9 1 85 1 298 1 35 1 163 1 
363 1 63 1 85 1 35 1 213 1 163 1 337 1 
363 2 63 1 143 1 35 1 213 1 163 1 337 1 
363 1 63 2 107 1 85 1 299 1 35 2 213 1 321 1 163 2 337 2 
363 1 63 3 367 1 52 2 213 1 337 1 83 1 188 1 143 1 177 1 85 2 35 1 163 3 
363 1 63 2 52 1 213 1 295 1 337 1 53 2 141 1 143 1 275 1 85 1 298 1 35 1 163 2 233 1 
363 1 63 4 367 1 52 2 213 1 337 2 112 1 143 1 145 1 177 1 85 2 35 2 163 4 
363 1 63 1 143 1 85 1 35 1 213 1 163 1 337 1 
363 2 89 1 249 1 63 4 367 1 91 1 52 2 81 1 337 1 143 2 177 1 85 3 35 1 163 4 
363 1 63 2 52 1 213 1 337 1 255 1 227 1 143 1 85 1 35 1 163 2 289 1 
363 1 249 1 63 3 143 1 91 2 85 1 81 2 378 1 35 1 213 1 163 3 337 1 
61 1 355 1 85 2 166 2 
63 1 354 1 35 1 213 1 163 1 337 1 
363 1 63 2 143 1 52 1 85 1 35 1 213 1 163 2 337 1 188 1 
8 1 
363 1 63 1 143 1 85 1 35 1 213 1 163 1 337 1 
363 1 63 3 52 1 91 1 213 1 337 1 188 1 143 1 85 1 35 1 163 3 
89 1 367 1 85 1 177 1 
363 1 85 1 

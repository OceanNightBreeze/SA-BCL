#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 317 286 78 305 (211,235) (211,235) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 317 286 78 305 (211,235) (211,235) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 317 286 78 305 (211,235) (211,235) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 317 286 78 305 (211,235) (211,235) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 317 286 78 305 357 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 317 286 78 305 357 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 315 297 (52,216) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 317 286 78 305 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
136 2 225 2 3 1 358 1 112 1 201 1 338 1 211 1 286 2 317 2 253 1 371 4 87 1 305 1 7 2 78 2 343 1 193 1 271 1 235 1 296 4 44 1 
136 2 225 2 3 1 358 1 112 1 201 1 338 1 211 1 286 2 317 2 253 1 371 4 87 1 305 1 7 2 78 2 343 1 193 1 271 1 235 1 296 4 44 1 
136 2 225 2 3 1 358 1 112 1 201 1 338 1 211 1 286 2 317 2 253 1 371 4 87 1 305 1 7 2 78 2 343 1 193 1 271 1 235 1 296 4 44 1 
136 2 225 2 3 1 358 1 112 1 201 1 338 1 211 1 286 2 317 2 253 1 371 4 87 1 305 1 7 2 78 2 343 1 193 1 271 1 235 1 296 4 44 1 
136 1 3 1 4 1 201 1 112 3 286 2 371 4 317 3 287 1 87 1 7 1 254 2 78 1 290 1 193 1 207 1 311 1 296 4 
136 1 225 1 358 1 4 1 63 1 98 1 201 1 219 1 338 1 317 1 371 2 87 1 7 1 193 1 207 1 296 2 
136 2 225 1 4 1 112 1 286 1 371 3 253 1 317 2 7 2 78 1 193 1 207 1 296 3 
136 2 357 1 225 1 112 2 286 2 317 2 371 4 253 1 372 1 305 1 7 2 78 2 343 1 193 1 296 4 
136 2 357 1 225 1 112 2 286 2 317 2 371 4 253 1 372 1 305 1 7 2 78 2 343 1 193 1 296 4 
213 1 124 1 50 1 
77 1 213 1 356 2 
76 1 157 1 191 2 106 2 269 2 182 2 353 2 379 2 
262 1 200 2 157 1 48 1 182 3 319 2 204 1 76 1 242 2 322 2 268 1 341 1 244 1 106 3 269 2 329 1 79 1 298 1 299 1 187 1 110 1 190 1 301 1 191 2 303 1 281 1 143 1 39 1 283 1 177 1 353 2 43 1 91 1 69 1 379 2 120 2 151 1 
157 1 327 1 191 1 106 1 269 1 147 1 178 1 182 1 353 1 379 1 
82 1 191 1 360 1 124 1 182 1 88 1 17 1 289 1 340 1 213 1 175 1 106 1 178 1 121 1 
82 2 191 1 360 1 124 1 182 1 17 2 340 1 213 1 175 1 269 1 106 1 178 1 353 1 379 1 121 1 
82 1 265 1 152 1 17 1 307 1 
82 2 213 1 258 1 124 1 265 1 369 1 17 2 307 1 
82 1 265 1 17 1 
82 1 157 1 191 1 64 1 182 1 307 1 17 1 327 1 147 1 269 1 106 1 178 1 353 1 379 1 
213 1 
82 2 213 1 62 1 124 1 265 1 369 1 17 2 307 1 
82 5 70 1 203 1 14 1 124 1 265 2 307 2 17 5 332 1 232 2 373 2 68 1 213 1 324 1 194 1 270 1 328 1 369 1 248 2 
76 1 50 1 
263 1 191 2 182 2 23 1 76 2 106 2 269 1 353 1 379 1 
336 1 291 1 370 1 
299 1 187 1 48 1 182 1 319 1 204 1 76 1 242 1 143 1 268 1 341 1 104 1 244 1 106 1 43 1 120 1 
299 1 187 1 97 1 48 1 191 1 182 2 319 1 204 1 242 1 341 1 268 1 143 1 291 1 244 1 269 1 106 2 43 1 379 1 120 1 167 1 
97 2 263 1 191 5 85 1 182 5 88 1 76 1 269 4 106 5 353 1 368 1 379 4 167 1 380 1 
192 1 327 1 191 2 106 2 269 2 178 1 182 2 379 2 
76 1 97 1 191 3 106 3 269 3 182 3 353 1 379 3 
327 1 191 1 106 1 269 1 178 1 182 1 379 1 
263 1 191 1 106 1 269 1 178 1 182 1 353 1 379 1 23 1 
96 1 97 1 200 2 263 1 157 1 48 1 360 1 182 4 319 1 204 1 76 1 242 1 322 1 341 1 268 1 340 1 244 1 106 4 269 3 329 1 79 1 167 1 298 1 299 1 187 1 82 1 110 1 301 1 191 3 303 1 281 1 17 1 143 1 175 1 40 1 177 1 178 1 43 1 353 2 91 1 379 3 120 1 121 1 151 1 
76 1 97 1 191 2 106 2 269 1 85 1 182 2 379 1 88 1 
82 1 198 1 96 1 97 2 263 1 191 3 360 1 182 3 17 1 340 1 213 1 175 1 269 3 106 3 178 1 353 1 379 3 121 1 167 1 
97 1 336 1 263 1 191 2 182 2 291 1 269 2 106 2 353 1 379 2 
187 1 299 1 48 1 182 1 319 1 204 1 76 1 242 1 143 1 268 1 341 1 244 1 106 1 43 1 120 1 
187 1 299 1 48 1 182 1 319 1 76 1 242 1 143 1 233 1 341 1 244 1 106 1 43 1 120 1 216 1 
355 1 155 1 336 2 200 2 361 1 102 1 322 4 291 2 132 1 329 1 79 1 110 1 301 1 210 1 331 1 172 1 303 2 370 2 304 1 173 1 281 1 117 1 283 2 91 1 
340 1 191 1 192 1 106 1 269 1 178 1 182 1 379 1 
42 1 18 1 
42 1 18 1 
144 1 57 1 
144 1 57 1 
144 1 57 1 
300 1 42 1 18 1 
300 1 42 1 18 1 
285 1 42 1 18 1 
144 1 224 1 42 2 57 1 66 1 18 2 
300 1 42 1 18 1 
199 1 42 1 18 1 
199 1 42 1 18 1 
199 1 42 1 18 1 
82 1 314 1 71 1 140 1 285 1 191 2 202 1 264 1 181 1 182 2 142 1 17 1 76 1 163 1 351 1 375 1 106 2 269 2 42 1 273 1 107 1 379 2 18 1 122 1 
82 2 188 1 140 2 71 1 226 1 33 1 66 1 142 2 17 2 163 2 213 1 375 3 41 1 42 2 148 1 107 2 90 2 18 2 31 1 
3 1 201 1 87 1 
201 1 219 1 87 1 
333 1 11 1 3 2 201 3 219 1 171 1 
333 1 3 1 201 2 219 1 171 1 67 1 
333 2 3 1 201 2 219 1 171 1 
1 2 356 3 314 1 155 1 337 1 202 1 124 1 181 1 361 1 265 1 21 2 127 1 77 1 128 1 184 1 328 1 369 1 330 1 248 1 82 5 109 1 331 1 173 1 17 5 307 4 332 2 232 1 373 1 213 2 194 3 308 2 215 1 
1 6 356 9 155 3 181 4 124 1 361 3 265 6 49 5 241 1 77 3 324 1 326 1 184 2 369 1 328 1 330 3 248 2 82 9 109 1 331 3 173 3 17 9 307 7 332 6 232 2 256 1 373 2 213 5 234 1 194 8 308 6 215 2 261 1 150 1 152 5 
1 2 356 4 337 1 155 1 124 1 181 1 361 1 21 1 77 2 128 1 324 1 184 1 330 1 248 1 82 3 331 1 173 1 307 2 17 3 332 2 232 1 373 1 213 3 194 3 308 2 215 1 
1 4 356 7 337 1 155 2 124 1 181 2 361 2 21 2 241 1 77 3 128 1 324 1 184 1 330 2 248 1 82 4 331 2 173 2 17 4 307 3 332 4 232 1 373 1 213 4 234 1 194 5 308 4 215 1 261 1 
299 1 260 1 50 1 
299 1 60 1 
115 1 
299 1 244 1 48 1 
299 1 185 1 
299 1 48 1 
299 3 255 1 244 1 48 1 146 1 260 2 
81 1 108 1 250 1 155 1 251 1 210 3 361 1 303 3 320 2 322 7 174 1 132 2 283 4 259 1 197 1 30 1 381 1 
81 1 108 1 250 1 155 1 251 1 210 3 361 1 303 3 320 2 322 7 174 1 132 2 283 4 259 1 197 1 30 1 381 1 
81 1 0 1 108 1 250 1 155 1 251 1 210 3 361 1 303 3 320 2 322 7 174 1 132 2 283 4 259 1 197 1 30 1 381 1 
155 4 200 2 158 1 5 1 361 4 22 1 320 3 322 31 132 5 293 1 30 1 329 1 330 3 81 2 250 1 108 2 61 4 110 1 251 5 301 1 210 10 331 3 303 15 280 1 173 3 281 1 174 2 376 1 283 16 259 1 197 1 378 1 238 3 381 2 
155 1 200 4 361 1 159 1 320 2 322 9 292 1 132 3 30 1 329 2 81 1 250 1 108 1 110 2 251 1 301 2 210 4 303 4 281 2 174 1 376 1 283 5 197 1 381 1 
3 1 4 1 201 2 219 1 317 1 319 1 7 1 339 1 242 1 366 1 222 1 207 1 58 1 296 2 136 1 275 1 187 1 11 1 84 1 225 1 189 1 112 1 252 1 371 2 87 1 36 1 193 1 176 1 43 1 120 1 
180 1 3 1 4 1 201 2 219 1 317 1 319 1 7 1 339 1 242 1 222 1 207 1 58 1 296 3 136 1 11 1 275 1 187 1 84 1 225 1 13 1 112 2 252 1 371 3 87 1 36 1 119 1 176 1 43 1 120 1 
3 1 4 1 201 2 219 1 317 1 319 1 339 1 242 1 222 1 207 1 296 2 275 1 187 1 11 1 84 1 225 1 13 1 112 2 252 1 371 2 87 1 36 1 119 1 43 1 120 1 
45 1 180 1 19 1 48 1 319 1 7 1 242 1 222 2 245 1 296 1 136 1 187 1 275 2 299 1 84 2 225 2 345 1 371 1 143 1 145 1 43 1 120 1 93 1 
136 1 11 1 187 1 275 1 84 1 225 1 3 1 189 1 201 2 219 1 252 1 371 1 87 1 339 1 7 1 319 1 36 1 242 1 222 1 193 1 176 1 119 1 43 1 120 1 58 1 296 1 
350 1 
95 1 48 1 101 1 160 1 6 1 242 2 289 1 340 1 245 1 106 1 295 2 247 1 248 1 299 1 12 1 113 2 16 1 347 1 348 2 17 5 213 2 175 1 118 2 178 1 354 2 120 2 121 1 312 1 179 4 356 2 360 1 124 1 265 6 182 1 319 2 77 2 184 1 369 3 328 1 82 5 187 1 83 2 191 1 278 1 141 1 88 1 332 2 38 1 232 1 373 1 143 2 194 2 43 1 335 2 93 1 
95 1 360 1 182 1 265 2 160 1 6 1 289 1 340 1 106 1 369 1 82 3 12 1 62 1 191 1 278 1 88 1 17 3 175 1 178 1 354 1 121 1 179 2 
95 1 360 1 124 1 265 1 182 1 160 1 6 1 289 1 340 1 106 1 369 1 82 3 12 1 62 1 191 1 278 1 113 1 88 1 17 3 213 1 175 1 178 1 121 1 179 3 
95 1 360 1 124 1 182 1 265 2 160 1 6 1 289 1 340 1 106 1 369 1 82 3 12 1 83 1 62 1 191 1 278 1 113 1 88 1 17 3 213 1 175 1 178 1 354 1 121 1 179 3 
95 1 360 1 124 5 265 7 182 1 363 1 160 1 6 1 77 2 289 1 340 1 325 1 10 1 106 1 295 2 328 1 369 3 248 1 82 5 12 1 83 4 62 1 191 1 278 1 113 4 348 2 88 1 17 5 332 1 38 1 232 1 373 1 213 5 175 1 194 1 118 2 352 1 178 1 335 2 354 4 312 1 149 1 121 1 179 6 
95 1 6 1 160 1 101 1 340 1 289 1 106 1 295 2 248 1 12 1 113 2 348 2 17 4 213 2 175 1 118 2 178 1 354 2 312 1 121 1 179 4 356 2 360 1 124 1 182 1 265 4 77 2 328 1 369 2 82 4 83 2 191 1 278 1 88 1 332 1 232 1 38 1 373 1 194 1 335 2 
95 1 360 1 124 1 265 4 182 1 160 1 6 1 77 2 289 1 340 1 106 1 10 1 369 2 295 2 328 1 248 1 82 4 83 2 12 1 191 1 278 1 113 2 348 2 88 1 17 4 332 1 38 1 232 1 373 1 213 1 175 1 194 1 118 2 352 1 178 1 354 2 335 2 312 1 121 1 149 1 179 4 
95 1 360 1 124 1 265 4 182 1 160 1 6 1 77 2 289 1 340 1 106 1 10 1 369 2 295 2 328 1 248 1 82 4 83 2 12 1 191 1 278 1 113 2 348 2 88 1 17 4 332 1 38 1 232 1 373 1 213 1 175 1 194 1 118 2 352 1 178 1 354 2 335 2 312 1 121 1 149 1 179 4 
95 1 356 2 360 1 124 1 265 4 182 1 74 2 160 1 6 1 289 1 340 1 105 2 106 1 206 1 369 2 295 2 328 1 248 1 82 4 83 2 12 1 191 1 170 1 278 1 113 2 279 1 348 2 88 1 17 4 332 1 38 1 232 1 373 1 213 1 175 1 194 1 352 1 178 1 354 2 121 1 179 4 
95 1 360 1 124 1 182 1 265 5 363 1 160 1 6 1 77 2 289 1 340 1 10 1 106 1 369 2 295 2 328 1 248 1 82 4 12 1 83 3 191 1 278 1 113 3 348 2 88 1 17 4 332 1 38 1 232 1 373 1 213 1 175 1 194 1 118 2 352 1 178 1 335 2 354 3 312 1 121 1 149 1 179 5 
95 1 360 1 124 1 182 1 265 5 363 1 160 1 6 1 77 2 289 1 340 1 10 1 106 1 369 2 295 2 328 1 248 1 82 4 12 1 83 3 191 1 278 1 113 3 348 2 88 1 17 4 332 1 38 1 232 1 373 1 213 1 175 1 194 1 118 2 352 1 178 1 335 2 354 3 312 1 121 1 149 1 179 5 
95 1 6 1 160 1 101 1 340 1 289 1 105 2 106 1 295 2 248 1 12 1 113 2 348 2 17 4 213 1 175 1 178 1 354 2 121 1 179 4 356 2 360 1 124 1 182 1 265 4 74 2 328 1 369 2 82 4 83 2 191 1 278 1 279 1 88 1 332 1 232 1 38 1 373 1 194 1 
336 1 155 1 200 2 361 1 50 1 320 1 76 2 102 1 322 6 291 1 132 2 30 1 329 1 79 1 250 1 108 1 110 1 301 1 210 2 303 3 370 1 281 1 174 1 283 3 197 1 91 1 
155 2 336 4 200 4 361 1 76 1 161 1 221 1 322 14 291 11 223 1 132 1 344 1 329 2 79 2 330 2 298 1 61 3 251 1 110 2 190 1 301 2 210 2 331 1 303 6 370 11 280 1 173 2 281 2 374 1 283 8 378 1 91 1 238 3 
336 1 97 1 200 2 48 1 182 2 51 1 319 1 204 1 76 1 242 1 161 1 341 1 268 1 322 2 54 1 104 1 244 1 106 2 269 1 79 1 329 1 167 1 298 1 299 1 187 1 276 1 110 1 191 1 301 1 190 1 303 1 281 1 143 1 283 1 43 1 120 1 91 1 379 1 
97 1 336 7 155 3 200 6 48 2 239 2 204 2 242 3 161 1 341 2 291 7 244 2 106 3 167 1 298 1 299 2 108 1 250 1 110 3 251 4 301 3 210 8 303 10 173 2 349 2 174 1 257 1 119 1 177 2 120 3 72 1 361 3 182 3 319 3 320 1 76 2 322 20 268 2 132 4 269 1 30 1 329 3 79 3 330 2 187 2 190 1 191 1 277 2 331 2 86 1 370 7 281 3 143 1 283 10 197 1 196 2 43 2 379 1 91 3 
217 1 97 1 200 4 48 2 182 1 319 8 24 1 75 1 366 1 242 8 102 1 322 2 342 1 245 1 106 1 269 1 367 1 329 2 79 2 298 1 187 2 299 3 110 2 191 1 301 2 111 1 190 1 346 1 303 1 281 2 143 2 119 1 283 1 43 2 379 1 120 7 91 2 69 2 93 1 
336 1 155 1 263 1 200 2 182 1 361 1 161 1 322 3 291 1 132 1 269 1 106 1 329 1 79 1 330 1 249 1 110 1 301 1 191 1 210 1 331 1 370 1 303 2 173 1 281 1 283 1 353 1 379 1 91 1 
251 1 336 1 110 1 155 1 200 2 301 1 210 1 370 1 304 1 173 1 281 1 322 2 102 1 291 1 283 2 91 1 79 1 329 1 
336 1 110 1 200 2 301 1 210 1 331 1 361 1 370 1 303 2 281 1 322 2 102 1 291 1 117 1 132 1 91 1 79 1 329 1 
155 1 336 2 200 2 361 1 102 1 322 4 291 2 132 1 329 1 79 1 330 1 110 1 251 1 301 1 210 2 331 1 370 2 303 2 173 1 281 1 283 2 91 1 
251 1 336 1 110 1 155 1 200 2 111 1 301 1 210 1 370 1 304 1 173 1 281 1 322 2 291 1 283 2 91 1 79 1 329 1 
336 1 110 1 200 2 111 1 301 1 210 1 331 1 361 1 370 1 303 2 281 1 322 2 291 1 117 1 132 1 91 1 79 1 329 1 
155 1 336 2 200 2 361 1 322 4 291 2 132 1 329 1 79 1 330 1 110 1 251 1 301 1 111 1 210 2 331 1 370 2 303 2 173 1 281 1 283 2 91 1 
155 1 336 2 200 2 361 1 322 4 291 2 132 1 329 1 79 1 330 1 110 1 251 1 301 1 210 2 331 1 370 2 303 2 173 1 281 1 283 2 91 1 
200 2 48 1 182 1 319 1 204 1 76 1 242 1 322 2 341 1 268 1 244 1 106 1 79 1 329 1 298 1 187 1 299 1 110 1 190 1 301 1 303 1 281 1 143 1 283 1 177 1 43 1 120 1 91 1 
200 2 48 1 182 1 319 1 76 1 242 1 322 2 341 1 244 1 106 1 79 1 329 1 80 1 298 1 187 1 299 1 110 1 190 1 301 1 303 1 281 1 233 1 143 1 283 1 43 1 216 1 120 1 91 1 
155 1 336 2 200 2 361 1 161 1 322 4 291 2 132 1 329 1 79 1 330 1 110 1 251 1 301 1 210 2 331 1 370 2 303 2 173 1 281 1 283 2 91 1 
336 2 155 1 200 2 48 1 361 1 182 1 319 1 204 1 242 1 366 1 322 4 341 1 268 1 291 2 244 1 132 1 106 1 79 1 329 1 330 1 187 1 299 1 251 1 110 1 301 1 210 2 331 1 303 2 370 2 173 1 281 1 283 2 177 1 196 1 43 1 120 1 91 1 
155 1 336 1 263 1 200 2 361 1 182 1 161 1 322 3 291 1 269 1 106 1 329 1 79 1 330 1 135 1 251 1 110 1 301 1 191 1 210 1 331 1 303 1 370 1 173 1 281 1 283 2 353 1 379 1 91 1 
155 3 200 4 361 3 364 2 159 1 321 1 205 1 322 19 130 1 132 3 294 2 272 1 329 2 330 3 166 1 61 2 110 2 251 3 301 2 228 1 210 6 34 1 331 3 303 10 280 1 173 3 281 2 283 9 378 1 238 1 
155 3 200 6 46 1 361 2 364 4 266 1 159 1 288 1 321 1 53 1 205 2 322 26 132 2 294 1 329 3 330 3 166 2 61 2 251 2 110 3 301 3 228 1 210 4 34 1 331 2 303 12 280 2 173 3 281 3 195 1 377 1 376 2 283 14 238 2 
155 5 46 1 200 6 361 5 266 1 364 4 318 1 288 1 159 1 320 1 321 1 53 1 205 2 322 41 130 1 132 4 294 1 30 1 329 3 330 4 166 1 108 1 250 1 61 4 110 3 251 4 301 3 228 1 210 8 34 1 331 4 303 21 280 3 173 4 281 3 174 1 195 1 377 1 376 1 283 20 197 1 378 1 238 3 
155 5 46 1 200 8 361 4 266 1 364 4 318 1 288 1 159 1 320 1 321 1 53 1 205 2 322 38 130 1 132 4 294 1 30 1 329 4 330 4 166 1 108 1 250 1 61 4 110 4 251 3 301 4 228 1 210 7 34 1 331 3 303 18 280 3 173 4 281 4 174 1 195 1 377 1 376 2 283 20 197 1 378 1 238 3 
155 8 46 1 200 4 361 8 266 1 364 4 288 1 159 1 320 1 321 1 53 1 205 1 322 52 132 7 294 1 30 1 329 2 330 7 166 1 108 1 250 1 61 4 110 2 251 7 301 2 228 1 210 14 34 1 331 7 303 25 280 2 173 7 281 2 374 2 174 1 195 1 376 1 377 1 283 27 197 1 378 2 238 4 
163 1 140 1 226 1 359 1 42 1 107 1 66 1 142 1 18 1 31 1 
285 1 273 1 
163 1 243 1 140 1 42 1 208 1 107 1 142 1 18 1 240 1 
300 1 139 1 
199 1 224 1 35 1 
82 1 188 1 71 1 140 1 226 1 33 1 66 1 142 1 17 1 163 1 213 1 375 2 41 1 42 1 107 1 90 1 18 1 31 1 
82 1 188 1 71 1 140 1 226 1 33 1 66 1 142 1 17 1 163 1 213 1 375 2 41 1 42 1 107 1 90 1 18 1 31 1 
82 1 188 1 71 1 140 1 226 1 33 1 66 1 142 1 17 1 163 1 213 1 375 2 41 1 42 1 107 1 90 1 18 1 31 1 
300 1 139 1 224 1 
300 1 139 1 224 1 
199 1 35 1 
199 1 224 1 35 1 
264 1 122 1 
314 1 285 1 202 1 264 1 181 1 182 2 76 1 163 1 106 2 269 2 273 1 107 1 82 1 140 1 191 2 33 1 142 1 17 1 307 1 375 1 351 1 42 1 214 1 90 1 379 2 18 1 122 1 
217 1 218 1 200 2 48 1 182 2 319 2 242 2 161 1 322 2 323 1 165 1 106 2 79 1 329 1 168 1 298 1 187 1 299 1 32 1 110 1 191 2 301 1 190 1 346 1 303 1 281 1 283 1 43 1 91 1 69 2 120 2 
11 1 187 1 84 1 3 1 201 2 219 1 230 1 87 1 319 2 339 1 36 1 242 2 334 1 366 1 119 1 43 1 120 2 237 1 58 1 
123 1 11 1 187 1 84 1 3 1 201 2 219 1 230 1 87 1 319 1 339 1 36 1 242 1 119 1 43 1 120 1 58 1 
187 1 299 1 19 1 84 1 48 1 319 1 242 1 334 1 143 1 27 1 245 1 43 1 120 1 93 1 
11 1 187 1 84 1 3 1 201 2 219 1 230 1 87 1 319 1 339 1 36 1 242 1 334 1 119 1 43 1 120 1 237 1 58 1 
100 1 
332 1 213 1 70 1 194 1 203 1 124 1 50 1 
356 1 124 1 265 1 77 1 328 1 369 1 248 1 82 1 17 1 332 1 232 1 373 1 213 2 194 1 118 1 335 1 312 1 
1 6 155 2 48 3 203 1 239 2 242 3 162 2 55 1 244 3 8 1 246 2 248 4 60 3 299 10 169 2 347 1 173 2 306 2 17 5 212 2 255 1 213 8 308 6 120 3 260 2 121 2 70 1 356 12 315 2 124 2 265 5 361 2 220 1 319 3 366 1 77 6 129 1 184 2 29 1 185 2 328 4 369 3 330 2 187 4 82 5 331 2 332 8 231 2 232 4 373 4 143 1 194 9 43 3 236 2 
1 5 356 6 155 2 46 1 124 2 265 1 361 2 266 1 365 1 288 1 53 1 77 3 183 1 184 1 369 1 328 2 330 2 248 2 82 1 61 1 331 2 347 1 280 1 173 2 17 1 332 5 231 2 232 2 373 2 213 5 194 8 377 1 308 5 236 1 238 1 
155 2 157 1 182 1 361 1 73 1 327 1 106 1 10 1 269 1 328 1 248 1 82 1 108 1 191 1 64 1 17 1 332 2 231 2 232 1 373 1 174 1 194 2 147 1 178 1 197 1 236 1 353 1 379 1 
70 1 203 1 124 1 332 1 232 1 373 1 213 1 194 1 328 1 248 1 
1 5 356 10 155 2 239 1 331 2 361 2 173 2 332 5 231 2 77 5 213 5 194 5 308 5 236 1 330 2 
82 1 213 1 124 1 265 1 369 1 17 1 
153 1 48 1 265 4 319 4 242 4 324 1 55 1 184 2 245 1 29 2 328 1 369 2 248 2 187 1 299 1 82 3 141 1 16 1 347 2 17 3 282 1 332 2 232 2 373 2 143 2 194 2 43 1 120 4 93 1 
200 2 157 1 48 1 182 3 319 1 204 1 76 1 242 1 322 1 268 1 341 1 244 1 106 3 269 2 329 1 79 1 298 1 187 1 299 1 110 1 301 1 191 2 303 1 281 1 143 1 177 1 353 2 43 1 120 1 379 2 91 1 151 1 
1 2 356 4 124 2 347 1 320 1 332 2 77 2 232 1 373 1 213 4 184 1 194 1 308 2 328 1 248 1 
209 1 140 1 142 1 
209 1 140 1 142 1 
313 1 140 1 142 1 31 1 122 1 
209 1 140 1 142 1 
154 1 140 1 142 1 
154 1 140 1 142 1 
154 1 140 1 142 1 
140 1 142 1 
42 1 18 1 
250 1 108 1 155 1 251 1 110 2 200 4 301 2 210 3 361 1 303 4 281 2 320 1 322 8 174 1 132 2 376 1 283 4 197 1 30 1 329 2 
250 1 108 1 155 1 210 2 361 1 303 3 50 1 320 1 322 6 174 1 132 2 283 3 197 1 30 1 
110 1 155 1 251 1 200 2 316 1 301 1 210 2 361 1 331 1 303 2 173 1 281 1 322 4 132 1 283 2 329 1 330 1 
61 2 155 1 251 1 210 2 361 1 331 1 303 4 280 1 173 1 322 7 132 1 283 3 378 1 330 1 238 1 
155 3 200 4 361 3 320 1 322 23 223 1 132 5 30 1 329 2 330 2 108 2 250 1 61 2 251 4 110 2 301 2 210 9 331 2 303 12 173 2 281 2 116 1 374 1 174 2 376 2 283 11 197 1 378 1 238 2 
322 1 61 1 303 1 
322 1 283 1 238 1 
110 1 155 1 251 1 200 2 301 1 316 1 210 3 239 1 331 1 361 1 303 3 173 1 281 1 322 6 132 2 283 3 329 1 330 1 
155 2 46 1 200 2 361 2 266 1 159 1 288 1 53 1 322 12 132 1 329 1 330 2 61 1 251 1 110 1 301 1 210 2 331 2 303 6 280 1 173 2 281 1 377 1 283 6 238 1 
108 1 155 1 251 1 210 2 361 1 303 3 322 6 174 1 132 1 283 3 197 1 
108 1 250 1 251 1 110 1 200 2 301 1 210 2 303 2 281 1 116 1 322 3 174 1 132 1 376 1 283 1 30 1 329 1 
108 2 110 1 251 2 155 2 200 2 301 1 210 5 361 2 303 5 73 1 281 1 159 1 322 10 174 2 132 3 283 5 197 1 329 1 
110 1 155 1 251 1 200 2 301 1 210 1 173 1 159 1 281 1 322 2 283 2 329 1 
110 1 155 1 251 1 200 2 301 1 210 2 361 1 331 1 303 2 173 1 159 1 281 1 322 4 132 1 283 2 329 1 330 1 
108 1 110 3 251 1 200 6 301 3 210 2 303 2 159 1 281 3 116 1 322 3 174 1 130 1 376 1 132 1 283 1 329 3 
155 5 200 10 158 1 316 1 361 5 22 1 159 1 320 1 322 34 130 1 293 1 132 7 30 1 329 5 330 3 108 3 250 1 61 4 110 5 251 5 301 5 210 12 331 3 303 18 280 1 173 3 281 5 116 1 174 3 376 2 283 16 197 2 378 1 238 3 
155 1 46 1 200 2 361 1 159 1 320 1 322 8 132 2 30 1 329 1 250 1 108 1 61 1 110 1 301 1 210 2 303 4 280 1 281 1 174 1 283 4 197 1 238 1 
155 2 46 1 200 4 316 1 361 1 159 1 320 1 322 11 132 2 30 1 329 2 330 1 108 1 250 1 61 2 110 2 251 1 301 2 210 3 303 5 280 1 173 1 281 2 174 1 283 6 197 1 378 1 238 1 
155 3 46 1 200 6 316 1 361 3 266 1 159 1 288 1 320 1 53 1 322 19 132 3 30 1 329 3 330 2 108 1 250 1 61 1 251 1 110 3 301 3 210 4 331 2 303 10 280 1 173 2 281 3 174 1 376 1 377 1 283 9 197 1 238 1 
155 3 46 1 200 6 316 1 361 2 266 1 159 1 288 1 320 1 53 1 322 17 132 3 30 1 329 3 330 2 108 1 250 1 61 1 251 2 110 3 301 3 210 5 331 1 303 7 280 1 173 2 281 3 174 1 376 1 377 1 283 10 197 1 238 1 
155 1 46 1 200 2 361 1 159 1 320 1 322 8 132 2 30 1 329 1 250 1 108 1 61 1 110 1 301 1 210 2 303 4 280 1 281 1 174 1 283 4 197 1 238 1 
155 2 46 1 200 2 361 2 266 1 159 1 288 1 53 1 322 12 132 1 329 1 330 2 61 1 251 1 110 1 301 1 210 2 331 2 303 6 280 1 173 2 281 1 377 1 283 6 238 1 
155 3 46 1 200 8 316 1 361 2 266 1 159 1 288 1 320 1 53 1 322 18 132 3 30 1 329 4 330 2 108 1 250 1 61 1 251 2 110 4 301 4 210 5 331 1 303 8 280 1 173 2 281 4 174 1 377 1 376 2 283 10 197 1 238 1 
155 3 46 1 200 8 361 2 266 1 159 1 288 1 53 1 322 16 130 1 132 3 329 4 330 3 61 1 251 3 110 4 301 4 210 6 331 2 303 7 280 1 173 3 281 4 377 1 376 2 283 9 238 1 
250 1 108 3 251 3 155 1 210 6 361 1 303 4 322 7 174 3 132 3 283 3 197 1 30 2 
155 3 46 1 200 8 361 2 266 1 159 1 288 1 320 1 53 1 322 18 130 1 132 3 30 1 329 4 330 2 108 1 250 1 61 1 251 1 110 4 301 4 210 4 331 1 303 8 280 1 173 2 281 4 174 1 377 1 376 2 283 10 197 1 238 1 
76 1 191 1 106 1 85 1 182 1 88 1 126 1 
191 1 85 1 125 1 182 1 362 1 65 1 126 1 88 1 267 1 76 1 106 1 309 1 
187 1 299 1 242 1 143 1 48 1 245 1 43 1 120 1 50 1 319 1 93 1 
299 1 187 1 97 1 48 1 191 1 182 2 319 1 76 1 242 1 341 1 143 1 268 1 244 1 269 1 106 2 43 1 379 1 120 1 
97 1 315 1 48 2 360 1 182 2 319 1 76 1 242 1 268 1 341 1 340 1 244 2 106 2 269 2 29 1 185 1 187 1 299 3 191 2 178 1 43 1 120 1 379 1 
97 1 156 1 315 1 48 2 360 1 182 2 319 2 76 1 242 2 341 1 340 1 244 2 106 2 269 2 29 1 185 1 187 1 299 3 191 2 178 1 43 1 216 1 120 2 379 1 
82 1 60 1 299 4 187 1 315 1 48 1 52 1 319 1 17 1 242 1 244 1 29 1 185 1 43 1 120 1 260 1 297 1 
187 1 82 2 60 1 299 4 169 1 156 1 315 1 48 1 124 1 265 1 319 3 17 2 242 3 143 1 213 1 244 1 29 1 185 1 43 1 120 3 260 1 121 1 
187 1 242 1 43 1 120 1 319 1 24 1 
299 3 187 3 2 1 48 2 99 1 346 1 319 7 24 1 75 1 366 1 242 7 143 2 255 1 342 1 244 1 119 1 367 1 134 1 43 2 69 1 120 6 
336 1 97 1 155 1 200 4 48 1 204 1 242 1 161 1 341 1 291 1 244 1 106 2 299 1 250 1 108 1 110 2 301 2 210 2 303 3 174 1 177 1 120 1 182 2 361 1 319 1 320 1 366 1 76 2 268 1 322 6 269 1 132 2 30 1 329 2 79 2 187 1 32 1 277 1 191 1 370 1 281 2 283 3 196 1 197 1 43 1 379 1 91 2 
70 1 203 1 124 1 265 2 319 1 242 1 162 1 55 1 246 1 328 2 369 1 248 2 82 3 60 1 299 2 169 1 17 3 307 1 332 1 212 1 232 2 143 1 373 2 213 1 194 1 120 1 260 1 121 1 
299 2 187 2 48 1 319 2 24 1 366 1 242 2 255 1 244 1 8 1 43 1 260 1 120 2 
187 1 299 1 156 1 48 1 319 4 242 4 366 1 143 1 9 1 245 1 43 1 120 4 93 1 
299 1 187 2 2 1 48 1 72 1 99 1 319 2 89 1 242 2 244 1 29 1 43 1 120 2 92 1 
187 1 242 1 143 1 201 1 219 1 43 1 87 1 120 1 319 1 36 1 
187 1 299 1 242 2 366 1 48 1 119 1 43 1 346 1 120 2 319 2 168 1 
299 3 187 2 48 2 346 1 319 5 242 5 366 1 143 1 342 1 9 1 245 1 29 1 367 1 43 2 120 4 93 1 
299 3 187 2 48 2 346 1 319 5 242 5 366 1 143 1 342 1 28 1 9 1 245 1 29 1 43 2 120 4 93 1 
299 1 187 1 97 1 48 1 191 1 182 2 319 1 76 1 242 1 341 1 143 1 244 1 269 1 106 2 43 1 379 1 120 1 216 1 
299 1 187 2 2 1 48 1 99 1 319 1 242 1 255 1 244 1 29 1 134 1 43 1 120 1 
274 1 76 1 131 1 227 1 37 1 
59 1 274 2 82 2 138 1 96 1 360 1 227 1 124 1 307 1 17 2 37 2 76 1 340 1 213 1 164 1 175 1 131 2 178 1 121 1 
274 1 218 1 227 1 191 1 182 1 323 1 165 1 131 1 106 1 
59 1 138 1 227 1 
4 1 207 1 317 1 50 1 
136 1 4 1 207 1 317 1 371 1 296 1 7 1 
275 1 225 1 371 1 
136 1 20 1 4 1 338 2 317 1 371 3 7 1 56 1 193 1 207 1 296 3 94 1 
136 1 4 1 112 1 207 1 317 1 371 2 254 1 296 2 7 1 
136 1 3 1 201 1 286 1 371 1 317 1 87 1 7 1 193 1 311 1 296 1 
136 1 193 1 207 1 317 1 371 1 296 1 7 1 
136 1 4 1 193 1 207 2 371 1 296 1 7 1 
136 2 137 1 302 1 317 1 371 2 7 2 103 1 193 1 207 1 296 2 
136 1 78 1 343 1 193 1 286 1 317 1 371 1 305 1 296 1 7 1 
136 1 11 1 3 1 4 1 201 2 112 1 219 1 229 1 317 1 371 2 87 1 7 1 193 1 207 1 296 2 
136 2 4 1 112 2 286 1 371 4 317 2 287 1 7 2 254 1 78 1 193 1 207 1 296 4 
136 1 4 1 193 1 207 1 317 1 371 1 296 1 7 1 
136 1 4 2 112 2 338 1 286 1 371 4 317 3 114 1 7 1 78 1 56 1 207 2 296 4 94 1 
136 1 284 1 4 1 112 1 317 1 371 2 372 1 7 1 25 1 193 1 207 1 296 2 
136 1 4 1 338 2 317 1 371 3 15 1 7 1 56 2 193 1 207 1 296 3 94 1 
26 1 133 1 317 2 186 2 
136 1 193 1 310 1 371 1 296 1 7 1 
136 1 4 1 371 1 114 1 7 1 343 1 193 1 207 1 296 1 
47 1 
136 1 4 1 193 1 207 1 317 1 371 1 296 1 7 1 
136 1 343 1 4 1 193 1 338 1 207 1 317 1 371 2 296 2 7 1 
78 1 286 1 317 1 114 1 
207 1 317 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 92 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
326 2 61 1 86 3 274 1 254 9 228 1 229 4 308 2 257 1 143 1 50 1 70 9 341 2 144 1 364 2 343 5 187 6 73 1 265 1 347 1 244 1 76 2 352 2 247 1 199 1 37 1 96 1 372 2 
326 2 61 1 86 3 274 1 254 9 228 1 229 4 308 2 257 1 143 1 50 1 70 9 341 2 144 1 364 2 343 5 187 6 73 1 265 1 347 1 244 1 76 2 352 2 247 1 199 1 37 1 96 1 372 2 
326 2 61 1 86 4 274 1 254 10 228 1 229 5 308 2 257 1 143 1 50 1 70 10 341 2 144 1 364 2 343 6 187 7 73 1 265 1 347 1 244 1 76 2 352 2 247 1 199 1 37 1 96 1 372 2 
326 1 61 1 86 2 274 1 254 7 228 1 229 3 308 2 257 1 50 1 70 7 341 2 144 1 364 2 343 4 187 4 73 1 265 1 347 1 244 1 76 2 352 2 247 1 199 1 37 1 96 1 372 2 
143 1 144 1 341 1 70 4 326 2 364 1 187 3 343 3 347 1 61 1 86 1 76 1 352 1 254 4 228 1 229 2 96 1 372 1 
144 1 341 1 70 2 50 1 167 1 358 1 343 1 364 1 61 1 244 1 76 1 352 1 254 2 120 1 308 1 96 1 
144 1 341 2 70 3 343 2 187 1 61 1 86 1 352 2 254 3 229 1 247 1 308 1 96 1 
39 1 326 2 61 1 86 3 254 9 228 1 229 4 181 1 308 1 257 1 70 9 341 2 144 1 143 1 187 7 343 5 364 1 347 1 76 1 352 2 247 1 37 1 96 1 372 1 
39 1 326 2 61 1 86 3 254 9 228 1 229 4 181 1 308 1 257 1 70 9 341 2 144 1 143 1 187 7 343 5 364 1 347 1 76 1 352 2 247 1 37 1 96 1 372 1 
190 1 193 1 209 1 
190 1 232 1 259 2 
176 2 371 2 337 2 130 1 281 2 200 2 180 2 273 1 
356 1 126 1 221 1 176 3 130 1 42 1 222 1 202 1 27 1 180 2 273 1 337 2 135 2 136 1 281 2 256 1 137 1 87 1 163 2 140 1 311 1 284 1 165 1 113 1 30 2 90 1 149 1 344 1 54 2 350 1 168 1 371 2 269 1 246 1 271 1 200 3 318 2 
176 1 371 1 337 1 11 1 281 1 300 1 24 1 200 1 180 1 273 1 
176 1 51 1 11 1 365 1 12 1 267 1 330 1 190 1 253 1 193 1 105 1 337 1 200 1 97 1 
176 1 51 2 11 1 12 1 330 2 180 1 190 1 253 1 193 1 105 1 371 1 337 1 281 1 200 1 97 1 
114 1 51 1 323 1 290 1 330 1 
190 1 193 1 51 2 323 1 128 1 173 1 290 1 330 2 
51 1 323 1 330 1 
176 1 51 1 238 1 11 1 300 1 290 1 24 1 330 1 273 1 180 1 371 1 337 1 281 1 200 1 
190 1 
190 1 193 1 312 1 51 2 323 1 173 1 290 1 330 2 
297 1 285 1 40 2 51 5 147 1 323 2 239 1 264 1 290 2 14 2 201 1 330 5 189 1 190 1 361 1 193 1 172 1 173 1 219 2 
130 1 209 1 
176 2 83 1 130 2 180 1 371 1 336 1 337 2 281 1 200 2 
275 1 72 1 127 1 
284 1 176 1 90 1 130 1 344 1 202 1 27 1 151 1 135 1 136 1 246 1 87 1 271 1 200 1 163 1 318 1 
284 1 176 2 90 1 344 1 241 1 177 1 202 1 27 1 180 1 275 1 337 1 135 1 246 1 136 1 281 1 87 1 271 1 200 2 163 1 318 1 
176 3 371 1 337 3 130 1 281 3 241 1 200 3 180 3 
176 1 337 1 11 1 281 1 300 1 200 1 180 1 
176 1 371 1 83 1 336 1 337 1 11 1 281 1 200 1 180 1 
221 1 176 4 83 1 130 1 42 1 101 1 202 1 177 1 224 1 330 1 27 1 180 3 273 1 253 1 105 1 337 3 135 1 136 1 256 1 281 3 137 1 87 1 163 1 311 1 284 1 165 1 113 1 30 2 90 1 51 1 11 1 344 1 12 1 241 1 54 1 350 1 168 1 371 2 269 1 246 1 271 1 200 4 97 1 318 1 
237 1 176 2 337 2 130 1 281 1 241 1 267 1 200 2 180 1 
176 3 83 1 51 1 298 1 11 1 12 1 241 2 177 1 224 1 330 1 180 3 190 1 253 1 105 1 371 1 337 3 281 3 200 3 97 1 
176 2 72 1 83 1 241 1 180 2 275 1 371 1 337 2 281 2 200 2 
284 1 176 1 90 1 130 1 344 1 202 1 27 1 135 1 136 1 246 1 87 1 271 1 200 1 163 1 318 1 
284 1 176 1 90 1 130 1 23 1 344 1 27 1 135 1 246 1 87 1 271 1 200 1 163 1 318 1 89 1 
250 1 221 2 127 2 42 1 85 1 222 2 275 2 28 1 137 1 340 1 311 1 165 1 113 1 30 2 342 1 72 2 31 1 346 1 75 1 54 4 119 1 350 1 
192 1 176 1 337 1 11 1 12 1 281 1 200 1 180 1 
237 1 176 5 83 1 130 1 241 2 267 1 177 1 180 4 371 1 337 5 162 1 281 4 8 1 200 5 
192 1 176 2 337 2 11 1 281 2 300 1 200 2 180 2 
156 1 263 1 
156 1 263 1 
280 1 366 1 
280 1 366 1 
280 1 366 1 
46 1 156 1 263 1 
46 1 156 1 263 1 
156 1 263 1 3 1 
280 1 156 2 263 2 366 1 354 1 102 1 
46 1 156 1 263 1 
133 1 156 1 263 1 
133 1 156 1 263 1 
133 1 156 1 263 1 
286 1 51 2 263 2 131 1 242 1 188 2 272 1 104 2 330 2 367 1 190 1 255 1 95 1 156 2 354 1 218 2 68 2 69 2 20 3 
176 2 130 1 3 1 272 1 329 1 104 1 330 1 180 2 335 1 337 2 281 2 88 1 310 1 138 1 69 1 51 1 263 1 188 1 169 1 156 1 200 2 218 1 20 1 21 1 
364 1 372 1 76 1 
358 1 364 1 76 1 
332 1 220 1 358 1 372 2 359 1 76 3 
332 1 220 1 333 1 358 1 372 1 76 2 
220 1 332 2 358 1 372 1 76 2 
176 1 40 1 323 1 330 5 273 1 180 1 334 1 337 1 281 1 339 1 340 1 88 1 232 1 139 1 234 1 238 1 51 5 11 1 239 3 346 1 290 4 14 1 189 1 190 2 193 1 200 1 295 1 24 1 300 1 361 2 362 2 259 3 112 2 117 1 31 1 119 1 371 1 173 1 80 2 219 1 
176 1 40 1 323 3 330 5 180 1 273 1 337 1 281 1 339 1 340 1 88 1 232 1 234 1 186 1 238 1 51 5 11 1 239 3 346 1 290 4 14 1 189 1 190 2 16 2 193 1 200 1 295 1 24 1 300 1 305 1 361 2 259 3 112 2 114 2 117 1 31 1 119 1 371 1 173 1 80 2 219 1 
176 1 40 1 300 1 24 1 201 1 330 3 180 1 273 1 361 2 334 1 337 1 362 1 281 1 339 1 232 1 88 1 139 1 234 1 259 2 112 1 238 1 51 3 11 1 239 1 31 1 290 2 14 1 119 1 190 2 193 1 371 1 200 1 80 1 295 1 219 1 
40 1 201 1 330 2 361 2 334 1 362 1 339 1 232 1 88 1 139 1 259 2 234 1 112 1 51 2 239 1 31 1 14 1 290 1 119 1 92 1 190 1 80 1 295 1 219 1 
284 1 325 1 209 1 
284 1 44 1 
198 1 
284 1 87 1 
284 3 325 2 246 1 182 1 87 1 327 1 
284 1 246 1 87 1 
284 1 214 1 
71 1 221 3 363 1 100 1 119 1 222 4 54 7 62 1 268 1 132 1 150 3 351 1 306 1 35 1 106 2 340 1 67 2 
71 1 221 3 363 1 100 1 119 1 222 4 54 7 62 1 268 1 132 1 150 3 351 1 306 1 35 1 106 2 340 1 67 2 
71 1 221 3 363 1 100 1 119 1 222 4 54 7 62 1 268 1 132 1 150 3 351 1 279 1 306 1 35 1 106 2 340 1 67 2 
221 15 58 4 42 1 100 2 222 16 203 1 62 2 132 1 331 1 306 1 227 1 106 3 282 3 339 3 137 1 340 4 67 3 211 1 71 1 165 1 113 1 30 2 363 2 287 1 31 3 346 3 289 1 54 31 119 4 268 1 351 2 150 8 35 5 248 1 
221 4 42 2 100 1 222 5 62 1 132 1 276 1 306 1 106 3 137 2 340 1 67 2 165 2 113 2 30 4 363 1 148 1 287 1 119 1 54 9 268 1 150 4 351 1 35 1 
358 1 328 1 61 1 178 1 359 1 360 1 254 2 135 1 308 1 163 1 233 1 70 2 341 1 144 1 29 1 10 1 343 1 187 1 364 1 344 1 76 2 352 1 34 1 94 1 122 1 271 1 96 1 372 1 318 1 249 1 
98 1 358 1 328 1 61 1 359 1 360 1 254 3 135 1 308 1 163 1 233 1 70 3 341 1 145 1 10 1 343 1 364 1 187 2 344 1 345 1 76 2 352 1 34 1 94 1 122 1 271 1 96 1 372 1 318 1 249 1 
98 1 358 1 61 1 359 1 360 1 254 2 135 1 308 1 163 1 233 1 70 2 10 1 343 1 187 2 364 1 344 1 345 1 76 2 94 1 122 1 271 1 96 1 318 1 372 1 249 1 
284 1 341 1 70 1 145 1 115 1 344 1 251 1 27 1 93 1 360 2 352 1 254 1 135 1 157 1 174 1 308 2 87 1 122 2 271 1 107 1 163 1 318 1 233 2 
98 1 358 1 328 1 359 1 360 1 254 1 135 1 308 1 163 1 233 1 70 1 341 1 144 1 29 1 10 1 364 1 344 1 76 2 352 1 34 1 94 1 122 1 271 1 372 1 318 1 249 1 
319 1 
321 1 176 1 40 1 323 6 324 1 43 1 84 2 223 1 330 5 45 2 135 2 337 1 87 1 232 2 284 1 51 5 239 2 11 1 344 1 12 1 53 1 91 2 14 1 189 1 190 2 191 2 193 1 194 1 197 2 200 1 19 1 97 1 295 1 296 2 159 1 251 1 301 1 27 2 361 2 253 1 105 1 107 1 163 2 108 1 259 2 261 2 365 1 267 1 369 4 79 1 173 3 271 1 318 2 124 1 219 1 
312 1 176 1 51 3 323 2 324 1 11 1 53 1 12 1 159 1 365 1 91 1 301 1 267 1 223 1 330 3 253 1 369 2 105 1 337 1 173 1 200 1 97 1 
176 1 323 1 324 1 159 1 301 1 223 1 330 3 253 1 105 1 337 1 312 1 51 3 11 1 365 1 12 1 53 1 267 1 191 1 190 1 369 3 193 1 173 1 200 1 97 1 
176 1 324 1 323 2 159 1 84 1 301 1 223 1 330 3 253 1 105 1 337 1 312 1 51 3 11 1 365 1 12 1 53 1 91 1 267 1 191 1 190 1 369 3 193 1 173 1 200 1 97 1 
176 1 40 1 323 7 324 1 84 4 223 1 179 1 330 5 134 1 45 2 337 1 231 1 232 2 141 1 51 5 11 1 239 1 53 1 12 1 91 4 14 1 349 1 189 1 191 4 190 5 193 5 194 1 197 2 200 1 97 1 296 2 159 1 301 1 253 1 361 1 105 1 312 1 261 2 365 1 267 1 369 6 173 3 79 1 219 1 
176 1 40 1 324 1 323 4 84 2 223 1 330 4 45 2 337 1 232 2 51 4 11 1 239 1 53 1 12 1 14 1 91 2 189 1 191 2 190 2 193 1 194 1 197 2 200 1 97 1 296 2 159 1 301 1 253 1 361 1 105 1 259 2 108 1 261 2 365 1 267 1 369 4 79 1 173 2 219 1 
176 1 40 1 323 4 324 1 159 1 84 2 301 1 223 1 179 1 330 4 361 1 253 1 105 1 134 1 45 2 337 1 231 1 232 2 51 4 261 2 239 1 11 1 365 1 12 1 53 1 91 2 14 1 267 1 189 1 190 1 191 2 193 1 369 4 194 1 173 2 79 1 197 2 200 1 97 1 219 1 296 2 
176 1 40 1 323 4 324 1 159 1 84 2 301 1 223 1 179 1 330 4 361 1 253 1 105 1 134 1 45 2 337 1 231 1 232 2 51 4 261 2 239 1 11 1 365 1 12 1 53 1 91 2 14 1 267 1 189 1 190 1 191 2 193 1 369 4 194 1 173 2 79 1 197 2 200 1 97 1 219 1 296 2 
176 1 40 1 323 4 324 1 159 1 2 1 84 2 301 1 223 1 204 1 330 4 361 1 253 1 105 1 134 1 45 2 337 1 210 2 259 2 51 4 239 1 11 1 365 1 12 1 53 1 91 2 14 1 267 1 189 1 190 1 191 2 193 1 369 4 153 2 155 1 173 2 79 1 200 1 97 1 219 1 296 2 
176 1 40 1 324 1 323 5 159 1 84 3 301 1 223 1 179 1 330 4 361 1 253 1 105 1 134 1 45 2 337 1 231 1 232 2 51 4 261 2 239 1 11 1 365 1 12 1 53 1 14 1 91 3 267 1 349 1 189 1 190 1 191 3 193 1 369 5 194 1 173 2 79 1 197 2 200 1 97 1 219 1 296 2 
176 1 40 1 324 1 323 5 159 1 84 3 301 1 223 1 179 1 330 4 361 1 253 1 105 1 134 1 45 2 337 1 231 1 232 2 51 4 261 2 239 1 11 1 365 1 12 1 53 1 14 1 91 3 267 1 349 1 189 1 190 1 191 3 193 1 369 5 194 1 173 2 79 1 197 2 200 1 97 1 219 1 296 2 
176 1 40 1 323 4 324 1 159 1 84 2 301 1 223 1 330 4 361 1 253 1 105 1 45 2 337 1 210 2 108 1 259 2 51 4 239 1 11 1 365 1 12 1 53 1 91 2 14 1 267 1 189 1 190 1 191 2 193 1 369 4 153 2 155 1 173 2 79 1 200 1 97 1 219 1 296 2 
165 1 221 3 342 1 30 2 113 1 72 1 127 1 130 2 42 1 54 6 222 3 119 1 350 1 62 1 268 1 132 1 150 2 351 1 275 1 306 1 209 1 106 2 137 1 340 1 67 1 311 1 
221 4 58 3 127 10 130 1 42 2 222 8 203 1 252 1 275 10 282 3 137 2 339 2 49 1 211 1 311 1 165 2 113 2 30 4 72 3 262 1 149 1 31 2 213 1 54 12 119 2 350 2 168 1 150 1 35 1 36 1 
176 2 221 1 130 1 42 1 222 1 202 1 177 1 27 1 180 1 278 1 135 1 337 1 47 1 136 1 281 1 87 1 137 1 163 1 49 1 311 1 284 1 165 1 30 2 113 1 90 1 72 1 149 1 344 1 241 1 54 2 350 1 215 1 168 1 151 1 246 1 271 1 200 2 318 1 
221 2 176 2 0 1 127 2 41 1 42 2 222 3 177 1 180 1 275 2 135 1 337 1 338 1 136 1 281 1 137 2 87 1 339 1 49 1 284 1 90 1 344 1 241 1 54 5 350 2 150 1 246 1 200 2 202 1 302 1 27 1 106 1 256 1 163 1 311 2 165 2 113 2 30 4 72 2 313 1 31 1 119 1 168 1 271 1 318 1 
98 1 176 1 221 1 42 2 222 1 251 1 178 1 27 2 180 1 207 1 337 1 135 8 281 1 137 2 87 2 258 1 107 1 163 7 140 2 311 2 284 3 165 2 342 1 113 2 30 4 149 1 344 2 314 1 348 1 241 1 54 2 350 2 292 1 168 1 195 1 271 2 200 1 318 8 373 1 
176 1 221 2 83 1 127 1 42 1 222 1 180 1 275 1 337 1 106 1 281 1 137 1 339 1 340 1 49 1 66 1 311 1 165 1 113 1 30 2 72 1 31 1 346 1 119 1 54 3 350 1 150 1 371 1 200 1 
250 1 165 1 342 1 30 2 113 1 72 1 127 1 42 1 31 1 54 2 119 1 222 2 350 1 275 1 137 1 311 1 
165 1 221 2 342 1 30 2 113 1 72 1 127 1 42 1 346 1 54 2 350 1 150 1 275 1 28 1 106 1 137 1 340 1 311 1 
165 1 342 1 30 2 113 1 72 1 127 1 42 1 31 1 54 2 119 1 222 2 350 1 275 1 137 1 339 1 311 1 
250 1 165 1 30 2 113 1 72 1 127 1 42 1 31 1 54 2 119 1 222 2 350 1 275 1 137 1 373 1 311 1 
165 1 221 2 30 2 113 1 72 1 127 1 42 1 346 1 54 2 350 1 150 1 275 1 28 1 106 1 137 1 340 1 373 1 311 1 
165 1 30 2 113 1 72 1 127 1 42 1 31 1 54 2 119 1 222 2 350 1 275 1 137 1 339 1 373 1 311 1 
165 1 30 2 113 1 72 1 127 1 42 1 31 1 119 1 222 2 54 2 350 1 275 1 137 1 339 1 311 1 
176 1 221 1 130 1 42 1 222 1 202 1 27 1 135 1 136 1 256 1 87 1 137 1 163 1 311 1 284 1 165 1 30 2 113 1 90 1 149 1 344 1 54 2 350 1 168 1 246 1 271 1 200 1 318 1 
176 1 221 1 299 1 130 1 23 1 42 1 222 1 27 1 135 1 87 1 137 1 163 1 89 1 311 1 284 1 165 1 30 2 113 1 90 1 149 1 344 1 54 2 350 1 168 1 246 1 271 1 200 1 318 1 
165 1 30 2 113 1 72 1 127 1 42 1 31 1 54 2 119 1 222 2 350 1 275 1 137 1 339 1 49 1 311 1 
176 1 127 1 42 1 222 2 202 1 178 1 275 1 338 1 135 1 136 1 256 1 87 1 137 1 339 1 163 1 311 1 284 1 165 1 30 2 113 1 72 1 90 1 31 1 344 1 54 2 119 1 350 1 246 1 271 1 200 1 318 1 
221 1 176 1 83 1 127 1 42 1 222 2 180 1 275 1 337 1 281 1 137 1 339 1 340 1 49 1 311 1 235 1 165 1 113 1 30 2 31 1 346 1 119 1 54 3 350 1 371 1 200 1 
221 5 357 1 58 2 42 2 222 6 203 1 276 1 282 1 183 1 137 2 339 2 340 1 164 1 211 1 110 1 165 2 113 2 30 4 240 1 13 1 31 2 346 1 54 11 119 2 150 1 56 1 35 1 18 1 
221 9 357 2 58 2 42 2 222 12 6 1 276 1 106 1 282 2 183 1 137 2 339 3 9 1 340 1 164 3 211 2 185 1 236 1 110 2 165 2 166 1 113 2 30 4 287 1 13 1 31 3 346 1 54 21 266 1 119 3 150 1 370 1 56 1 
221 8 357 1 58 2 42 2 222 7 203 1 276 1 282 1 183 1 137 2 339 2 9 1 340 2 164 2 211 1 110 1 165 2 113 2 30 4 240 1 13 1 31 2 346 2 54 15 119 2 150 1 56 1 35 1 
221 8 357 1 58 2 42 2 222 7 203 1 276 1 282 1 183 1 137 2 339 2 9 1 340 2 164 2 211 1 110 1 165 2 113 2 30 4 240 1 13 1 31 2 346 2 54 15 119 2 150 1 56 1 35 1 
221 15 357 1 58 3 42 2 222 18 6 1 203 1 62 1 132 1 276 1 306 1 106 2 282 2 183 1 137 2 339 4 9 1 340 3 164 4 67 1 211 2 185 1 236 1 110 1 165 2 166 1 113 2 30 4 287 1 13 1 31 4 346 2 54 33 119 5 266 1 268 1 351 1 150 4 370 1 35 2 56 1 
286 1 255 1 156 1 1 1 263 1 188 1 354 1 218 1 104 1 69 1 
335 1 3 1 
277 1 156 1 263 1 60 1 188 1 125 1 218 1 104 1 69 1 
286 1 51 1 263 1 131 1 188 1 272 1 330 1 104 1 367 1 190 1 255 1 95 1 156 1 354 1 218 1 68 1 69 1 20 2 
286 1 51 1 263 1 131 1 188 1 272 1 330 1 104 1 367 1 190 1 255 1 95 1 156 1 354 1 218 1 68 1 69 1 20 2 
286 1 51 1 263 1 131 1 188 1 272 1 330 1 104 1 367 1 190 1 255 1 95 1 156 1 354 1 218 1 68 1 69 1 20 2 
38 1 46 1 102 1 
38 1 46 1 102 1 
133 1 293 1 
133 1 293 1 102 1 
169 1 138 1 
176 2 130 1 3 1 329 1 330 1 104 1 180 2 335 1 337 2 281 2 88 1 310 1 138 1 68 1 69 1 51 1 263 1 290 1 188 1 367 1 169 1 156 1 294 1 200 2 218 1 20 1 21 1 
38 1 46 1 
133 1 293 1 102 1 
176 2 221 1 42 1 222 1 304 1 135 2 337 2 87 1 137 1 258 1 49 1 163 2 140 2 311 1 283 1 284 1 165 1 30 2 113 1 149 1 344 1 212 1 54 2 350 1 292 1 168 1 170 1 121 1 271 1 200 2 318 2 
98 1 10 1 82 1 358 1 364 1 344 1 359 1 178 1 76 2 360 1 34 1 135 2 309 1 271 1 217 1 372 1 163 2 318 2 249 1 
98 1 10 1 358 1 364 1 344 1 359 1 76 2 205 1 360 1 34 1 135 1 309 1 271 1 372 1 163 1 318 1 249 1 
284 1 82 1 344 1 118 1 251 1 27 1 360 1 93 1 135 1 87 1 271 1 107 1 163 1 318 1 
98 1 10 1 82 1 358 1 364 1 344 1 359 1 76 2 360 1 34 1 135 1 309 1 271 1 217 1 372 1 163 1 318 1 249 1 
48 1 
190 1 361 1 193 1 285 1 239 1 209 1 264 1 
40 1 323 1 330 1 361 1 232 1 259 1 51 1 261 1 239 1 14 1 189 1 190 2 193 1 194 1 173 1 197 1 219 1 
0 1 40 2 325 1 323 2 327 1 59 1 330 2 27 1 44 2 206 1 361 3 63 1 64 1 135 1 339 1 87 1 232 2 163 1 259 4 284 4 112 2 51 2 52 1 239 2 31 1 344 2 14 2 119 1 189 2 368 1 190 2 78 1 246 1 173 1 271 1 80 2 97 1 318 1 295 1 320 1 219 2 
40 2 58 1 323 1 43 1 6 1 225 1 330 1 160 1 361 5 64 2 282 1 339 2 232 3 340 2 259 6 211 1 236 1 112 5 166 1 51 1 239 8 31 2 346 2 14 2 266 1 119 2 189 2 190 5 370 1 193 2 173 1 123 1 80 5 295 1 219 2 
176 1 40 1 300 1 24 1 62 1 225 1 330 1 132 1 273 1 180 1 361 2 64 2 337 1 231 1 281 1 340 1 51 1 238 1 11 1 239 2 288 1 14 1 119 2 189 1 351 1 371 1 200 1 219 1 
40 1 285 1 239 1 264 1 14 1 189 1 361 1 190 1 193 1 219 1 
190 1 361 2 112 1 31 1 339 1 232 1 119 1 80 1 259 2 
190 1 193 1 51 1 323 1 173 1 330 1 
321 1 322 1 40 2 323 4 43 2 201 1 251 1 27 2 330 3 361 2 307 1 135 4 87 1 107 1 163 4 284 1 111 1 51 3 239 2 344 1 14 2 189 1 171 2 173 2 271 1 318 4 124 1 295 2 219 2 
221 1 176 3 130 1 42 1 202 1 27 1 180 2 273 1 135 1 337 2 136 1 281 2 256 1 137 1 87 1 163 1 311 1 284 1 165 1 113 1 30 2 90 1 344 1 54 1 350 1 168 1 371 2 269 1 246 1 271 1 200 3 318 1 
112 2 40 1 239 1 43 1 14 1 189 1 361 2 190 4 193 2 232 2 80 2 295 1 67 1 219 1 259 4 
218 1 355 1 69 1 
218 1 355 1 69 1 
208 1 286 1 138 1 218 1 69 1 
218 1 355 1 69 1 
32 1 218 1 69 1 
32 1 218 1 69 1 
32 1 218 1 69 1 
218 1 69 1 
156 1 263 1 
165 2 221 4 30 4 113 2 287 1 42 2 119 1 54 8 222 4 268 1 62 1 132 1 150 3 351 1 306 1 35 1 106 2 137 2 340 1 67 1 
150 2 351 1 221 3 306 1 209 1 106 2 340 1 54 6 222 3 119 1 62 1 268 1 67 1 132 1 
165 1 30 2 113 1 22 1 42 1 31 1 119 1 222 2 54 2 137 1 339 1 
221 4 58 2 31 1 346 1 54 7 222 3 119 1 203 1 150 1 35 1 282 1 339 1 340 1 211 1 
221 10 58 2 42 1 222 13 203 1 62 2 132 2 306 1 106 4 282 2 339 2 137 1 340 4 67 1 165 1 30 2 113 1 287 1 262 1 288 1 31 2 346 1 213 1 119 5 54 23 268 1 351 2 150 8 35 4 
221 1 58 1 54 1 
282 1 54 1 222 1 
221 3 0 1 31 1 346 1 54 6 119 1 222 3 150 1 35 1 339 1 340 1 
221 5 58 1 42 2 222 6 6 1 276 1 106 1 282 1 137 2 339 2 340 1 211 1 236 1 166 1 165 2 113 2 30 4 287 1 31 2 346 1 54 11 266 1 119 2 150 2 370 1 35 1 
150 2 351 1 221 3 35 1 106 1 340 1 54 6 222 3 119 1 62 1 132 1 
165 1 221 2 30 2 113 1 287 1 42 1 222 1 54 3 62 1 268 1 150 2 351 1 306 1 35 1 106 1 137 1 374 1 
165 1 221 5 113 1 30 2 42 1 288 1 222 5 54 10 119 2 62 2 132 1 351 2 150 5 276 1 106 3 35 2 137 1 340 2 
165 1 30 2 113 1 42 1 31 1 119 1 222 2 54 2 276 1 137 1 
165 1 30 2 113 1 42 1 31 1 119 1 222 2 54 2 276 1 137 1 339 1 
165 3 221 2 30 6 113 3 287 1 240 1 42 3 54 3 222 1 62 1 351 1 150 2 276 1 106 1 35 1 137 3 374 1 
221 18 58 4 22 1 42 5 222 16 203 1 62 3 132 2 331 1 276 1 306 1 106 4 282 3 137 5 339 3 340 5 67 1 211 1 165 5 113 5 30 10 287 2 240 1 31 3 346 3 289 1 54 34 119 5 268 1 351 3 150 9 35 5 248 1 374 1 
221 4 58 1 42 1 222 4 62 1 132 1 276 1 306 1 106 2 282 1 137 1 340 1 67 1 211 1 166 1 165 1 113 1 30 2 119 1 54 8 268 1 351 1 150 2 
221 5 58 2 22 1 42 2 222 6 203 1 62 1 132 1 276 1 306 1 106 2 282 1 137 2 339 1 340 1 67 1 211 1 166 1 165 2 113 2 30 4 31 1 54 11 119 2 268 1 351 1 150 3 35 1 
221 8 58 1 22 1 42 3 222 9 6 1 62 1 132 1 276 1 306 1 106 3 282 1 137 3 339 2 340 2 67 1 211 1 236 1 166 1 165 3 113 3 30 6 287 1 31 2 346 1 54 17 266 1 119 3 268 1 351 1 150 4 370 1 35 1 
221 11 58 1 22 1 42 3 222 13 6 1 62 2 132 2 276 1 306 1 106 4 282 1 137 3 339 2 340 4 67 1 211 1 236 1 166 1 165 3 113 3 30 6 287 1 288 1 31 2 346 1 54 24 266 1 119 5 268 1 351 2 150 7 370 1 35 3 
221 4 58 1 42 1 222 4 62 1 132 1 276 1 306 1 106 2 282 1 137 1 340 1 67 1 211 1 166 1 165 1 113 1 30 2 119 1 54 8 268 1 351 1 150 2 
221 5 58 1 42 2 222 6 6 1 276 1 106 1 282 1 137 2 339 2 340 1 211 1 236 1 166 1 165 2 113 2 30 4 287 1 31 2 346 1 54 11 266 1 119 2 150 2 370 1 35 1 
221 5 58 1 22 1 42 3 222 6 6 1 276 1 106 1 282 1 137 3 339 2 340 1 211 1 236 1 166 1 165 3 113 3 30 6 287 1 31 2 346 1 54 11 266 1 119 2 150 1 370 1 
221 5 58 1 42 4 222 9 6 1 276 1 106 2 282 1 137 4 339 3 340 1 211 1 236 1 166 1 165 4 113 4 30 8 287 2 240 1 31 3 346 1 54 14 266 1 119 3 150 5 370 1 35 3 
221 4 54 7 119 1 222 3 268 2 62 3 132 1 351 3 150 6 306 1 106 3 35 3 340 1 
221 5 58 1 42 3 222 6 6 1 276 1 106 1 282 1 137 3 339 2 340 1 211 1 236 1 166 1 165 3 113 3 30 6 287 1 240 1 31 2 346 1 54 11 266 1 119 2 150 1 370 1 
237 1 176 1 337 1 130 1 200 1 267 1 5 1 
237 1 176 1 130 1 267 1 103 1 245 1 5 1 15 1 154 1 337 1 200 1 142 1 
284 1 135 1 209 1 344 1 87 1 271 1 251 1 107 1 318 1 163 1 27 1 
284 1 176 2 90 1 130 1 344 1 241 1 27 1 180 1 337 1 135 1 246 1 136 1 281 1 87 1 271 1 200 2 163 1 318 1 
176 2 130 1 26 1 180 2 253 1 135 1 337 2 136 1 281 1 87 2 163 1 284 3 90 1 11 1 344 1 12 1 241 1 214 1 171 1 246 2 271 1 200 2 318 1 
176 2 130 1 23 1 26 1 303 1 180 2 253 1 135 2 337 2 281 1 87 2 163 2 284 3 90 1 11 1 344 1 12 1 241 1 214 1 171 1 246 2 271 1 200 2 318 2 
325 1 323 1 26 1 303 1 44 1 330 2 27 1 226 1 135 3 230 1 87 1 163 3 284 4 51 2 344 1 214 1 190 1 193 1 171 1 246 1 271 1 318 3 97 1 
284 4 51 2 323 1 325 1 344 1 214 1 26 1 303 1 27 1 330 2 44 1 206 1 190 1 193 1 171 1 135 3 246 1 87 1 271 1 97 1 163 3 318 3 
207 1 135 1 344 1 271 1 318 1 163 1 
284 3 98 1 116 1 344 3 314 1 327 1 348 1 178 1 27 2 315 1 207 1 161 1 135 7 195 1 246 1 87 2 271 2 258 1 163 6 318 7 140 1 
176 2 221 3 127 1 41 1 130 2 42 2 222 3 178 1 180 1 132 1 275 1 338 1 135 1 337 1 136 1 281 1 137 2 87 1 340 1 49 1 284 1 90 1 344 1 241 1 54 6 350 2 351 1 150 2 246 1 200 2 202 1 62 1 304 1 306 1 106 2 256 1 163 1 67 1 311 2 165 2 113 2 30 4 72 1 119 1 268 1 271 1 318 1 
40 2 323 2 325 1 27 1 330 3 44 1 206 1 361 1 135 1 163 1 284 2 111 1 285 1 51 3 52 1 239 1 264 1 14 2 290 1 189 2 368 1 190 1 193 1 78 1 173 1 318 1 97 1 219 2 
284 2 325 1 344 2 327 1 59 1 178 1 207 1 135 2 246 1 87 1 271 1 163 2 318 2 
284 1 344 1 4 1 251 1 178 1 303 1 27 1 135 4 87 1 271 1 107 1 163 4 318 4 
109 1 284 1 129 1 344 2 291 1 315 1 171 1 161 1 135 2 246 1 87 1 271 1 163 2 318 2 
10 1 358 1 135 1 364 1 344 1 271 1 318 1 163 1 76 1 27 1 
284 1 170 1 98 1 135 2 344 1 87 1 271 1 258 1 318 2 163 2 178 1 
284 3 344 2 348 1 4 1 251 1 178 1 27 1 171 1 135 5 195 1 87 2 271 2 107 1 258 1 163 4 318 5 
284 3 344 2 348 1 4 1 251 1 178 1 27 1 171 1 135 5 196 1 87 2 271 2 107 1 258 1 163 4 318 5 
284 1 176 2 90 1 130 1 344 1 23 1 241 1 27 1 180 1 337 1 135 1 246 1 281 1 87 1 271 1 200 2 163 1 318 1 
284 1 116 1 344 2 327 1 315 1 171 1 161 1 135 1 246 1 87 1 271 1 163 1 318 1 
152 1 130 1 270 1 57 1 81 1 
260 1 51 2 130 1 11 1 12 1 290 1 224 1 330 2 190 1 253 1 193 1 105 1 152 2 270 1 57 2 7 1 97 1 353 1 81 2 
176 1 212 1 337 1 270 1 121 1 57 1 200 1 81 1 283 1 
270 1 7 1 353 1 
209 1 343 1 96 1 61 1 
70 1 341 1 254 1 352 1 343 1 96 1 61 1 
254 1 308 1 122 1 
70 3 341 1 144 1 254 3 352 1 343 1 74 1 25 1 96 1 61 1 244 2 158 1 
70 2 341 1 254 2 352 1 326 1 343 1 187 1 96 1 61 1 
144 1 341 1 70 1 343 1 364 1 76 1 352 1 254 1 228 1 229 1 372 1 
70 1 341 1 144 1 254 1 352 1 343 1 96 1 
70 1 341 1 144 1 254 1 352 1 96 2 61 1 
70 2 341 2 144 1 254 2 352 2 146 1 317 1 343 1 184 1 96 1 
144 1 341 1 70 3 187 2 343 2 61 1 86 1 352 1 254 3 229 1 257 1 37 1 96 1 
144 1 341 1 70 2 358 1 343 1 364 1 187 1 61 1 359 1 76 2 352 1 254 2 17 1 96 1 372 1 
144 1 341 2 70 4 143 1 326 1 187 2 343 2 61 1 86 1 352 2 254 4 229 1 96 1 
70 1 341 1 144 1 254 1 352 1 343 1 96 1 61 1 
70 4 341 1 187 2 343 3 74 1 244 1 61 2 86 1 254 4 352 1 316 1 229 1 158 1 96 2 
144 1 341 1 70 2 343 1 187 1 243 1 61 1 352 1 254 2 216 1 181 1 96 1 
144 1 341 1 70 3 343 1 74 2 244 2 61 1 77 1 352 1 254 3 158 1 96 1 
65 2 55 1 343 2 175 1 
70 1 341 1 144 1 254 1 352 1 99 1 
70 2 341 1 144 1 254 2 352 1 343 1 187 1 37 1 96 1 61 1 
33 1 
70 1 341 1 144 1 254 1 352 1 343 1 96 1 61 1 
144 1 341 1 70 3 187 1 343 1 244 1 61 1 352 1 254 3 37 1 96 1 
316 1 229 1 343 1 86 1 
343 1 96 1 

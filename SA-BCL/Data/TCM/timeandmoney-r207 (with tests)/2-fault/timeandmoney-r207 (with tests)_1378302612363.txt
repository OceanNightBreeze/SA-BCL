#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 87 121 55 45 342 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 87 121 55 45 342 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 87 121 55 45 (12,151) (12,151) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 87 121 55 45 (12,151) (12,151) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 87 121 55 45 (12,151) (12,151) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 87 121 55 45 (12,151) (12,151) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 87 121 55 45 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
87 2 306 1 76 1 318 2 128 2 45 1 196 4 230 1 77 1 342 1 177 2 108 4 322 1 55 2 121 2 
87 2 306 1 76 1 318 2 128 2 45 1 196 4 230 1 77 1 342 1 177 2 108 4 322 1 55 2 121 2 
87 2 306 2 318 1 111 1 128 2 45 1 230 1 196 4 354 1 77 1 103 1 90 1 70 1 177 2 263 1 12 1 151 1 108 4 322 1 55 2 292 1 121 2 
87 2 306 2 318 1 111 1 128 2 45 1 230 1 196 4 354 1 77 1 103 1 90 1 70 1 177 2 263 1 12 1 151 1 108 4 322 1 55 2 292 1 121 2 
87 2 306 2 318 1 111 1 128 2 45 1 230 1 196 4 354 1 77 1 103 1 90 1 70 1 177 2 263 1 12 1 151 1 108 4 322 1 55 2 292 1 121 2 
87 2 306 2 318 1 111 1 128 2 45 1 230 1 196 4 354 1 77 1 103 1 90 1 70 1 177 2 263 1 12 1 151 1 108 4 322 1 55 2 292 1 121 2 
87 3 318 3 128 1 68 1 196 4 77 1 103 1 70 1 177 1 165 2 10 1 108 4 360 1 55 1 292 1 121 2 42 1 153 1 
87 1 306 1 251 1 128 1 68 1 196 2 354 1 77 1 327 1 70 1 177 1 53 1 263 1 108 2 292 1 42 1 
306 1 87 2 318 1 128 2 68 1 196 3 230 1 77 1 177 2 108 3 55 1 121 1 42 1 
222 1 23 1 200 1 
79 2 353 1 23 1 
143 2 66 2 29 1 207 2 303 2 215 2 20 1 168 2 
143 3 171 1 66 2 44 2 220 1 29 1 285 1 259 1 52 1 34 2 202 1 262 1 94 1 8 1 357 1 180 1 316 2 122 1 336 1 184 1 157 1 296 1 207 2 208 2 341 1 209 1 20 1 300 1 168 3 238 2 213 1 274 1 303 2 215 2 379 1 241 1 279 1 
143 1 66 1 144 1 29 1 195 1 207 1 231 1 303 1 215 1 168 1 
143 1 66 1 365 1 127 1 221 1 222 1 231 1 168 1 5 1 83 1 23 1 291 1 56 1 62 1 
143 1 66 1 127 1 221 1 222 1 207 1 231 1 168 1 5 2 83 1 23 1 215 1 303 1 62 2 56 1 
254 1 287 1 244 1 62 1 5 1 
242 1 222 1 23 1 254 1 244 1 62 2 345 1 5 2 
244 1 62 1 5 1 
143 1 144 1 66 1 29 1 195 1 207 1 231 1 254 1 5 1 168 1 7 1 215 1 303 1 62 1 
23 1 
222 1 286 1 23 1 254 1 244 1 62 2 345 1 5 2 
0 1 320 1 222 1 18 1 254 2 244 2 233 2 345 1 5 5 148 1 347 2 330 2 23 1 191 1 24 1 216 1 62 5 27 1 193 1 
20 1 200 1 
143 2 66 2 89 1 207 1 20 2 168 2 215 1 303 1 75 1 
1 1 351 1 299 1 
143 1 122 1 184 1 259 1 157 1 296 1 208 1 20 1 256 1 300 1 168 1 34 1 357 1 316 1 180 1 241 1 
143 3 66 3 321 1 207 3 215 1 303 3 20 1 168 3 
143 1 66 1 195 1 207 1 231 1 303 1 168 1 
143 1 66 1 89 1 207 1 231 1 303 1 215 1 168 1 75 1 
143 4 171 1 66 3 44 1 220 1 29 1 259 1 221 1 51 1 52 1 5 1 34 1 262 1 8 1 357 1 180 1 316 1 56 1 75 1 122 1 336 1 184 1 296 1 157 1 127 1 207 3 231 1 208 1 341 1 209 1 20 1 300 1 168 4 238 2 321 1 83 1 136 1 215 2 303 3 379 1 241 1 109 1 62 1 279 1 
143 2 66 2 80 1 321 1 365 1 207 1 303 1 20 1 168 2 
143 3 66 3 221 1 127 1 207 3 231 1 5 1 168 3 321 2 83 1 23 1 136 1 215 1 303 3 109 1 62 1 14 1 56 1 75 1 
143 2 66 2 1 1 207 2 168 2 321 1 351 1 215 1 303 2 75 1 
143 1 122 1 184 1 259 1 157 1 296 1 208 1 20 1 300 1 168 1 34 1 357 1 316 1 180 1 241 1 
143 1 122 1 184 1 259 1 157 1 296 1 208 1 245 1 20 1 168 1 34 1 357 1 316 1 180 1 359 1 
171 1 173 1 258 1 44 4 1 2 220 1 285 2 30 1 93 1 312 1 52 1 293 1 336 2 341 1 299 2 210 1 167 1 238 2 39 1 351 2 350 1 190 1 379 1 279 1 
143 1 66 1 207 1 231 1 303 1 56 1 305 1 168 1 
122 1 143 2 66 1 1 1 184 1 296 1 157 1 259 1 207 1 208 1 300 1 168 2 34 1 321 1 357 1 180 1 316 1 303 1 241 1 109 1 
143 5 66 5 365 1 207 4 20 1 168 5 80 1 321 2 303 4 215 1 109 1 323 1 205 1 75 1 
143 2 66 2 195 1 207 2 231 1 303 2 305 1 168 2 
147 1 261 1 
147 1 261 1 
145 1 137 1 
145 1 137 1 
145 1 137 1 
308 1 147 1 261 1 
308 1 147 1 261 1 
147 1 163 1 261 1 
337 1 145 1 137 1 147 2 261 2 280 1 
308 1 147 1 261 1 
147 1 235 1 261 1 
147 1 235 1 261 1 
147 1 235 1 261 1 
125 1 363 2 269 3 158 1 229 1 340 2 147 2 255 1 116 1 50 2 261 2 5 2 81 1 346 2 23 1 140 2 267 1 62 2 280 1 
143 2 66 2 43 1 147 1 261 1 50 1 5 1 267 1 36 1 363 1 269 1 207 2 160 1 163 1 20 1 104 1 168 2 375 1 346 1 377 1 214 1 303 2 140 1 62 1 
292 1 103 1 70 1 
53 1 292 1 70 1 
117 1 53 1 174 1 26 1 103 2 292 3 
117 1 53 1 194 1 26 1 103 1 292 2 
117 1 53 1 26 2 103 1 292 2 
43 1 353 1 173 1 222 1 309 1 115 1 244 1 5 5 149 1 11 2 330 1 227 1 126 1 17 2 18 3 254 4 233 1 210 1 345 1 167 1 79 3 375 1 347 1 348 2 39 1 275 1 377 1 106 1 23 2 216 1 62 5 193 2 
43 4 353 3 173 3 222 1 175 1 287 5 115 2 244 6 310 1 313 1 5 9 149 1 11 6 264 5 330 2 227 3 253 1 17 6 18 8 254 7 233 2 210 3 345 1 167 3 79 9 376 1 347 2 170 1 39 3 275 2 23 5 191 1 216 1 62 9 193 6 
43 1 353 2 173 1 222 1 309 1 115 1 5 3 11 2 330 1 126 1 227 1 18 3 17 2 254 2 233 1 210 1 167 1 79 4 347 1 348 1 39 1 275 1 23 3 191 1 62 3 193 2 
43 2 353 3 173 2 222 1 309 1 115 1 313 1 5 4 11 4 330 1 126 1 227 2 17 4 18 5 254 3 233 1 210 2 167 2 79 7 376 1 347 1 170 1 348 2 39 2 275 1 23 4 191 1 62 4 193 4 
184 1 86 1 200 1 
184 1 4 1 
88 1 
122 1 184 1 
122 1 184 3 314 1 257 1 180 1 86 2 
122 1 184 1 180 1 
184 1 219 1 
294 1 336 3 173 1 172 1 44 7 285 4 270 1 198 1 234 2 93 3 212 1 131 1 54 1 39 1 350 2 189 1 183 1 
294 1 336 3 173 1 172 1 44 7 285 4 270 1 198 1 234 2 93 3 212 1 131 1 54 1 39 1 350 2 189 1 183 1 
294 1 336 3 173 1 172 1 44 7 285 4 146 1 270 1 198 1 234 2 93 3 212 1 131 1 54 1 39 1 350 2 189 1 183 1 
171 1 282 1 44 31 173 4 172 5 285 16 243 1 3 3 198 1 69 1 93 10 52 1 54 2 355 1 119 1 183 2 294 1 227 3 336 15 270 2 341 1 234 3 210 3 212 1 167 3 236 1 131 2 238 2 240 1 39 4 189 1 350 5 40 4 279 1 
171 2 173 1 44 9 172 1 285 5 198 1 93 4 52 2 54 1 119 1 183 1 336 4 228 1 270 1 341 2 234 2 212 1 131 1 301 1 238 4 39 1 350 3 189 1 279 2 
87 1 306 1 307 1 259 1 174 1 68 1 196 2 70 1 177 1 34 1 53 1 96 1 9 1 316 1 248 1 292 2 318 1 157 1 128 1 129 1 208 1 77 1 103 1 373 1 302 1 188 1 349 1 108 2 142 1 42 1 
87 1 306 1 307 1 174 1 259 1 68 1 196 3 32 1 70 1 177 1 34 1 53 1 9 1 316 1 248 1 292 2 318 2 157 1 128 1 129 1 208 1 103 1 186 1 273 1 302 1 188 1 349 1 108 3 142 1 42 1 
87 1 306 1 307 1 259 1 174 1 68 1 196 2 32 1 70 1 34 1 53 1 316 1 248 1 292 2 318 2 157 1 208 1 103 1 186 1 302 1 188 1 349 1 108 2 142 1 42 1 
306 2 259 1 196 1 177 1 311 1 34 1 6 1 357 1 316 1 248 2 59 1 122 1 184 1 157 1 338 1 128 1 208 1 344 1 273 1 188 2 276 1 349 2 108 1 
306 1 307 1 174 1 157 1 259 1 129 1 128 1 196 1 208 1 77 1 103 1 70 1 177 1 34 1 53 1 186 1 9 1 96 1 302 1 188 1 316 1 349 1 108 1 248 1 292 2 142 1 
268 1 
64 1 143 1 281 1 66 1 353 2 110 1 221 1 222 1 326 2 244 5 5 4 330 1 289 1 152 1 335 1 291 1 266 1 56 1 57 1 123 3 365 1 127 1 18 1 231 1 233 1 345 2 78 1 168 1 132 1 237 3 239 2 347 1 134 1 272 3 22 2 83 1 23 1 139 2 216 1 62 4 193 1 324 5 
143 1 64 1 281 1 66 1 353 2 110 1 221 1 222 1 326 2 244 5 5 4 330 1 289 1 152 1 335 1 291 1 266 1 56 1 57 1 123 3 365 1 127 1 18 1 231 1 233 1 345 2 78 1 168 1 132 1 237 3 239 2 347 1 134 1 272 3 22 2 83 1 23 1 139 2 216 1 62 4 193 1 324 5 
143 1 66 1 221 1 222 1 244 4 5 4 330 1 289 1 13 1 152 1 291 1 266 1 56 1 57 1 123 2 365 1 127 1 18 1 231 1 161 1 164 2 233 1 345 2 168 1 237 2 79 2 132 1 272 2 134 1 347 1 22 2 83 1 23 1 139 2 216 1 218 2 62 4 193 1 324 4 
143 1 281 1 326 2 244 6 5 5 330 1 289 1 290 1 152 1 291 1 56 1 57 1 338 1 157 1 18 2 208 2 161 1 211 1 345 3 168 1 347 1 22 2 23 2 216 1 62 5 66 1 353 2 259 1 221 1 222 1 115 1 34 2 357 2 316 2 266 1 123 2 122 1 184 1 365 1 127 1 231 1 233 1 237 2 79 2 132 1 239 2 272 2 134 1 135 1 276 1 83 1 378 1 139 2 193 2 324 4 
143 1 66 1 221 1 286 1 244 2 5 3 289 1 291 1 266 1 56 1 57 1 365 1 127 1 231 1 345 1 168 1 132 1 237 1 134 1 83 1 62 3 324 2 
143 1 66 1 221 1 222 1 286 1 244 1 5 3 289 1 291 1 266 1 56 1 57 1 365 1 127 1 231 1 345 1 168 1 132 1 134 1 272 1 83 1 23 1 62 3 324 3 
143 1 66 1 221 1 286 1 222 1 244 2 5 3 289 1 291 1 266 1 56 1 57 1 123 1 365 1 127 1 231 1 345 1 168 1 132 1 237 1 134 1 272 1 83 1 23 1 62 3 324 3 
143 1 281 1 286 1 326 2 244 7 5 5 330 1 289 1 152 1 332 1 291 1 335 1 56 1 57 1 18 1 345 3 168 1 347 1 22 2 23 5 216 1 62 5 64 1 66 1 110 1 353 2 221 1 222 5 266 1 123 4 127 1 365 1 231 1 233 1 78 1 237 4 132 1 239 2 134 1 272 4 83 1 139 2 193 1 324 6 
143 1 281 1 326 2 244 4 5 4 330 1 289 1 152 1 291 1 56 1 57 1 18 1 161 1 345 2 168 1 347 1 22 2 23 2 216 1 62 4 66 1 353 2 221 1 222 1 266 1 123 2 127 1 365 1 231 1 233 1 132 1 79 2 237 2 239 2 134 1 272 2 83 1 139 2 193 1 324 4 
143 1 64 1 281 1 66 1 353 2 221 1 222 1 326 2 244 4 5 4 330 1 289 1 152 1 335 1 291 1 266 1 56 1 57 1 123 2 365 1 127 1 18 1 231 1 233 1 345 2 168 1 78 1 237 2 132 1 239 2 272 2 134 1 347 1 22 2 83 1 23 1 139 2 216 1 62 4 193 1 324 4 
143 1 64 1 281 1 66 1 353 2 221 1 222 1 326 2 244 4 5 4 330 1 289 1 152 1 335 1 291 1 266 1 56 1 57 1 123 2 365 1 127 1 18 1 231 1 233 1 345 2 168 1 78 1 237 2 132 1 239 2 272 2 134 1 347 1 22 2 83 1 23 1 139 2 216 1 62 4 193 1 324 4 
143 1 66 1 221 1 222 1 244 4 5 4 330 1 289 1 13 1 152 1 335 1 291 1 266 1 204 1 56 1 57 1 123 2 185 1 365 1 127 1 18 1 231 1 164 2 233 1 345 2 168 1 237 2 79 2 132 1 272 2 134 1 347 1 22 2 83 1 23 1 139 2 216 1 218 2 62 4 193 1 324 4 
171 1 1 1 258 1 173 1 44 6 220 1 285 3 198 1 200 1 93 2 52 1 54 1 183 1 336 3 341 1 234 1 299 1 20 2 212 1 238 2 39 1 351 1 189 1 350 2 379 1 279 1 
171 2 282 1 172 1 44 14 1 11 173 2 220 1 285 8 3 3 93 2 52 2 202 1 262 1 355 1 288 1 227 2 336 6 156 1 370 1 102 1 341 2 232 1 299 11 20 1 210 2 167 1 238 4 39 1 350 1 351 4 40 3 379 2 279 2 
143 2 171 1 66 1 44 2 220 1 259 1 285 1 34 1 52 1 262 1 202 1 357 1 288 1 180 1 316 1 122 1 184 1 336 1 296 1 157 1 207 1 208 1 341 1 20 1 256 1 300 1 168 2 321 1 238 2 351 1 303 1 241 1 217 1 379 1 109 1 381 1 192 1 279 1 
143 3 44 20 1 7 285 10 198 1 93 8 52 3 202 1 54 1 288 1 58 1 336 10 157 2 296 2 101 2 207 1 208 3 341 3 298 2 209 2 299 7 20 2 210 2 212 1 300 2 168 3 167 2 105 1 350 4 351 7 303 1 109 1 66 1 171 3 173 3 172 4 220 3 259 2 34 3 262 1 357 1 315 2 316 3 180 2 183 1 122 2 227 2 184 2 368 2 234 1 186 1 238 6 321 1 39 3 189 1 379 3 241 2 279 3 325 1 
143 1 65 1 66 1 171 2 258 1 44 2 220 2 259 2 285 1 199 1 328 1 34 8 52 2 202 1 262 1 94 2 356 1 357 2 316 7 122 2 184 3 336 1 364 1 37 1 157 2 338 1 207 1 130 1 208 8 341 2 373 1 168 1 186 1 321 1 238 4 276 1 303 1 379 2 279 2 
143 1 171 1 66 1 1 1 173 1 44 3 220 1 285 1 93 1 52 1 288 1 75 1 227 1 336 2 207 1 341 1 299 1 210 1 168 1 167 1 238 2 39 1 350 1 351 1 215 1 303 1 379 1 141 1 279 1 
171 1 172 1 1 1 44 2 258 1 173 1 220 1 285 2 341 1 299 1 210 1 93 1 52 1 238 2 351 1 379 1 293 1 279 1 
171 1 1 1 44 2 258 1 336 2 220 1 30 1 341 1 299 1 93 1 52 1 167 1 238 2 39 1 350 1 351 1 379 1 279 1 
171 1 173 1 258 1 44 4 1 2 172 1 220 1 285 2 93 2 52 1 227 1 336 2 341 1 299 2 210 1 167 1 238 2 39 1 351 2 350 1 379 1 279 1 
171 1 172 1 1 1 44 2 173 1 220 1 285 2 341 1 199 1 299 1 210 1 93 1 52 1 238 2 351 1 379 1 293 1 279 1 
171 1 1 1 44 2 336 2 220 1 30 1 341 1 199 1 299 1 93 1 52 1 167 1 238 2 39 1 350 1 351 1 379 1 279 1 
171 1 173 1 44 4 1 2 172 1 220 1 285 2 199 1 93 2 52 1 227 1 336 2 341 1 299 2 210 1 167 1 238 2 39 1 351 2 350 1 379 1 279 1 
171 1 44 4 173 1 1 2 172 1 220 1 285 2 93 2 52 1 227 1 336 2 341 1 299 2 210 1 167 1 238 2 39 1 351 2 350 1 379 1 279 1 
143 1 171 1 44 2 220 1 285 1 259 1 34 1 52 1 202 1 262 1 357 1 180 1 316 1 122 1 184 1 336 1 296 1 157 1 208 1 341 1 209 1 20 1 300 1 168 1 238 2 241 1 379 1 279 1 
143 1 171 1 44 2 220 1 285 1 259 1 245 1 34 1 52 1 202 1 262 1 118 1 357 1 180 1 316 1 359 1 122 1 184 1 336 1 296 1 157 1 208 1 341 1 20 1 168 1 238 2 379 1 279 1 
171 1 173 1 44 4 1 2 172 1 220 1 285 2 93 2 52 1 288 1 227 1 336 2 341 1 299 2 210 1 167 1 238 2 39 1 351 2 350 1 379 1 279 1 
143 1 171 1 172 1 1 2 44 4 173 1 220 1 285 2 259 1 93 2 34 1 52 1 315 1 180 1 316 1 122 1 227 1 336 2 184 1 296 1 157 1 208 1 341 1 299 2 209 1 210 1 300 1 167 1 373 1 168 1 238 2 39 1 350 1 351 2 241 1 379 1 279 1 
143 1 171 1 66 1 172 1 173 1 44 3 1 1 220 1 285 2 93 1 52 1 288 1 75 1 227 1 336 1 207 1 341 1 299 1 210 1 167 1 168 1 238 2 39 1 351 1 215 1 303 1 379 1 380 1 279 1 
171 2 282 1 44 19 173 3 172 3 285 9 3 1 91 1 49 1 93 6 52 2 355 1 154 1 227 3 336 10 295 1 228 1 341 2 162 1 210 3 167 3 133 2 238 4 39 3 350 3 138 2 40 2 41 1 278 1 279 2 
28 1 171 3 172 2 44 26 282 2 173 3 285 14 3 2 46 1 91 2 49 1 93 4 52 3 119 2 97 1 333 1 154 1 227 3 336 12 295 1 228 1 341 3 210 3 372 1 167 2 133 1 238 6 39 2 350 2 277 1 138 4 40 2 278 2 279 3 
44 41 282 3 285 20 3 3 46 1 198 1 91 2 49 1 93 8 52 3 54 1 97 1 333 1 154 1 336 21 295 1 341 3 162 1 210 4 212 1 167 4 350 4 171 3 28 1 172 4 173 5 355 1 119 1 226 1 183 1 227 4 228 1 234 1 372 1 238 6 133 1 39 5 277 1 189 1 138 4 40 4 279 3 278 1 
28 1 171 4 282 3 44 38 173 5 172 3 285 20 3 3 46 1 198 1 91 2 49 1 93 7 52 4 54 1 355 1 119 2 226 1 97 1 333 1 183 1 154 1 227 4 336 18 295 1 228 1 341 4 162 1 234 1 210 4 212 1 372 1 167 3 133 1 238 8 39 4 189 1 277 1 350 4 138 4 40 4 278 1 279 4 
28 1 171 2 282 2 44 52 173 8 172 7 285 27 3 4 46 1 198 1 91 1 49 1 93 14 52 2 54 1 355 2 119 1 97 1 333 1 183 1 154 1 227 7 336 25 295 1 228 1 370 2 341 2 234 1 210 7 212 1 372 1 167 7 133 1 238 4 39 8 189 1 277 1 350 7 138 4 40 4 278 1 279 2 
363 1 346 1 158 1 229 1 147 1 140 1 178 1 261 1 50 1 280 1 
36 1 163 1 
201 1 124 1 363 1 346 1 147 1 140 1 343 1 261 1 50 1 
125 1 363 1 269 2 158 1 229 1 340 1 147 1 255 1 116 1 50 1 261 1 5 1 346 1 23 1 140 1 267 1 62 1 280 1 
125 1 363 1 269 2 158 1 229 1 340 1 147 1 255 1 116 1 50 1 261 1 5 1 346 1 23 1 140 1 267 1 62 1 280 1 
125 1 363 1 269 2 158 1 229 1 340 1 147 1 255 1 116 1 50 1 261 1 5 1 346 1 23 1 140 1 267 1 62 1 280 1 
337 1 308 1 113 1 
337 1 308 1 113 1 
235 1 166 1 
337 1 235 1 166 1 
214 1 104 1 
143 2 43 1 66 2 147 1 261 1 50 1 5 1 36 1 125 1 363 1 269 1 369 1 207 2 340 1 160 1 254 1 163 1 20 1 104 1 168 2 375 1 346 1 377 1 214 1 303 2 140 1 62 1 
308 1 113 1 
337 1 235 1 166 1 
143 2 65 1 171 1 66 2 44 2 220 1 2 1 259 1 285 1 260 1 71 1 34 2 52 1 202 1 262 1 94 2 356 1 288 1 316 2 98 1 122 1 184 1 336 1 157 1 319 1 208 2 341 1 168 2 238 2 379 1 279 1 
174 1 157 1 259 1 208 2 48 1 103 1 70 1 34 2 373 1 53 1 186 1 9 1 302 1 188 1 316 2 249 1 61 1 292 2 142 1 
174 1 259 1 157 1 208 1 48 1 103 1 70 1 34 1 53 1 186 1 9 1 302 1 188 1 316 1 25 1 292 2 142 1 
122 1 184 1 157 1 259 1 338 1 208 1 47 1 311 1 34 1 357 1 188 1 316 1 276 1 249 1 
174 1 157 1 259 1 208 1 48 1 103 1 70 1 34 1 53 1 186 1 9 1 302 1 188 1 316 1 249 1 61 1 292 2 142 1 
92 1 
143 3 66 2 171 1 44 1 29 1 220 1 259 1 52 1 34 1 262 1 8 1 357 1 316 1 180 1 122 1 336 1 184 1 157 1 296 1 207 2 208 1 341 1 209 1 20 1 300 1 168 3 238 2 303 2 215 2 241 1 379 1 279 1 
353 2 222 2 17 2 18 1 115 1 234 1 233 1 79 4 11 2 347 1 330 1 23 4 378 1 216 1 193 2 
0 1 148 1 222 1 18 1 23 1 193 1 200 1 
281 1 353 1 222 1 326 1 244 1 5 1 330 1 18 1 233 1 345 1 79 1 239 1 347 1 23 2 216 1 62 1 193 1 
0 1 244 5 4 3 5 5 148 1 11 6 330 4 331 2 99 2 157 4 339 2 101 2 159 2 18 9 17 6 208 3 297 1 210 2 345 3 167 2 347 4 257 1 23 8 216 4 62 5 219 2 353 6 173 2 259 3 221 2 222 2 115 2 225 1 34 3 357 1 73 2 180 3 316 3 181 2 317 1 122 3 227 2 184 10 362 1 367 1 233 4 373 1 374 2 79 12 82 2 39 2 378 1 86 2 193 8 
282 1 353 3 173 2 222 2 3 1 46 1 115 1 244 1 72 1 5 1 95 1 11 5 330 2 97 1 333 1 99 1 227 2 339 2 17 5 18 8 233 2 210 2 345 1 372 1 167 2 79 6 347 2 39 2 23 5 277 1 378 1 40 1 216 2 62 1 193 5 
143 1 144 1 66 1 173 2 29 1 195 1 198 1 5 1 7 1 54 1 330 1 183 1 99 1 339 2 207 1 18 2 231 1 233 1 168 1 78 1 347 1 39 1 215 1 303 1 84 1 216 1 62 1 193 2 
0 1 222 1 18 1 233 1 148 1 347 1 330 1 23 1 216 1 193 1 
99 1 227 2 173 2 353 5 101 1 339 2 17 5 18 5 210 2 167 2 79 10 11 5 39 2 23 5 193 5 
222 1 23 1 244 1 62 1 345 1 5 1 
283 1 67 1 259 2 115 2 244 4 225 2 34 4 5 3 357 2 330 2 180 1 316 4 290 1 182 1 15 1 122 2 184 2 157 3 338 1 252 1 18 2 208 4 297 1 233 2 345 2 347 2 21 1 135 1 276 1 191 1 378 2 216 1 62 3 193 2 
203 1 363 1 140 1 
203 1 363 1 140 1 
363 1 158 1 214 1 140 1 361 1 
203 1 363 1 140 1 
363 1 140 1 176 1 
363 1 140 1 176 1 
363 1 140 1 176 1 
363 1 140 1 
147 1 261 1 
171 2 173 1 336 4 44 8 172 1 285 4 198 1 341 2 234 1 93 3 212 1 52 2 54 1 119 1 238 4 39 1 350 2 189 1 279 2 183 1 
336 3 173 1 44 6 285 3 198 1 234 1 200 1 212 1 93 2 54 1 39 1 189 1 350 2 183 1 
171 1 227 1 336 2 173 1 44 4 172 1 285 2 341 1 19 1 210 1 93 2 167 1 52 1 238 2 39 1 350 1 279 1 
227 1 282 1 336 4 44 7 173 1 172 1 285 3 3 1 210 1 93 2 167 1 355 1 39 1 350 1 40 2 
171 2 172 4 173 3 44 23 285 11 112 1 3 2 198 1 93 9 52 2 54 2 355 1 119 2 183 2 227 2 336 12 156 1 370 1 341 2 234 1 210 2 212 1 167 2 238 4 39 3 189 1 350 5 40 2 279 2 
44 1 336 1 40 1 
44 1 285 1 3 1 
171 1 227 1 336 3 44 6 173 1 172 1 285 3 101 1 341 1 19 1 210 1 93 3 52 1 167 1 238 2 39 1 350 2 279 1 
171 1 172 1 44 12 282 1 173 2 285 6 3 1 46 1 93 2 52 1 97 1 333 1 227 2 336 6 228 1 341 1 210 2 372 1 167 2 238 2 39 2 277 1 350 1 40 1 279 1 
173 1 44 6 336 3 172 1 285 3 198 1 93 2 54 1 39 1 350 1 183 1 
171 1 172 1 336 2 44 3 285 1 112 1 341 1 93 2 212 1 52 1 54 1 119 1 238 2 350 1 189 1 183 1 279 1 
171 1 172 2 44 10 336 5 173 2 285 5 228 1 341 1 198 1 93 5 52 1 54 2 238 2 39 2 350 3 84 1 279 1 183 2 
171 1 173 1 44 2 172 1 285 2 228 1 341 1 210 1 93 1 52 1 238 2 279 1 
171 1 227 1 336 2 173 1 44 4 172 1 285 2 228 1 341 1 210 1 93 2 167 1 52 1 238 2 39 1 350 1 279 1 
171 3 336 2 44 3 172 1 112 1 285 1 228 1 341 3 162 1 93 2 52 3 54 1 119 1 238 6 350 1 279 3 183 1 
171 5 282 1 44 34 173 5 172 5 112 1 285 16 243 1 3 3 198 2 69 1 93 12 52 5 54 3 355 1 119 2 183 3 227 3 336 18 228 1 341 5 234 1 162 1 19 1 210 3 212 1 236 1 167 3 238 10 39 5 189 1 350 7 40 4 279 5 
171 1 173 1 44 8 282 1 285 4 3 1 198 1 93 2 52 1 54 1 183 1 336 4 228 1 341 1 234 1 212 1 372 1 238 2 39 1 189 1 350 2 40 1 279 1 
171 2 44 11 282 1 173 2 172 1 285 6 3 1 198 1 93 3 52 2 54 1 355 1 183 1 227 1 336 5 228 1 341 2 234 1 19 1 210 1 212 1 372 1 238 4 39 1 350 2 189 1 40 2 279 2 
171 3 172 1 44 19 282 1 173 3 285 9 3 1 46 1 198 1 93 4 52 3 54 1 119 1 97 1 333 1 183 1 227 2 336 10 228 1 341 3 234 1 19 1 210 2 212 1 372 1 167 2 238 6 39 3 189 1 277 1 350 3 40 1 279 3 
171 3 172 2 44 17 282 1 173 3 285 10 3 1 46 1 198 1 93 5 52 3 54 1 119 1 97 1 333 1 183 1 227 2 336 7 228 1 341 3 234 1 19 1 210 2 212 1 372 1 167 1 238 6 39 2 189 1 277 1 350 3 40 1 279 3 
171 1 173 1 44 8 282 1 285 4 3 1 198 1 93 2 52 1 54 1 183 1 336 4 228 1 341 1 234 1 212 1 372 1 238 2 39 1 189 1 350 2 40 1 279 1 
171 1 172 1 44 12 282 1 173 2 285 6 3 1 46 1 93 2 52 1 97 1 333 1 227 2 336 6 228 1 341 1 210 2 372 1 167 2 238 2 39 2 277 1 350 1 40 1 279 1 
171 4 172 2 44 18 282 1 173 3 285 10 3 1 46 1 198 1 93 5 52 4 54 1 119 2 97 1 333 1 183 1 227 2 336 8 228 1 341 4 234 1 19 1 210 2 212 1 372 1 167 1 238 8 39 2 189 1 277 1 350 3 40 1 279 4 
171 4 172 3 44 16 282 1 173 3 285 9 3 1 46 1 93 6 52 4 119 2 97 1 333 1 227 3 336 7 228 1 341 4 162 1 210 3 372 1 167 2 238 8 39 2 277 1 350 3 40 1 279 4 
336 4 44 7 172 3 173 1 285 3 198 1 212 1 93 6 54 3 39 1 189 2 350 3 183 3 
171 4 172 1 44 18 282 1 173 3 285 10 3 1 46 1 198 1 93 4 52 4 54 1 119 2 97 1 333 1 183 1 227 2 336 8 228 1 341 4 234 1 162 1 210 2 212 1 372 1 167 1 238 8 39 2 189 1 277 1 350 3 40 1 279 4 
143 1 66 1 80 1 150 1 365 1 20 1 168 1 
143 1 66 1 365 1 31 1 20 1 271 1 168 1 150 1 80 1 247 1 120 1 74 1 
122 1 184 1 157 1 259 1 338 1 357 1 276 1 316 1 208 1 200 1 34 1 
122 1 143 2 66 1 184 1 296 1 157 1 259 1 207 1 208 1 20 1 168 2 34 1 321 1 357 1 180 1 316 1 303 1 241 1 
122 2 143 2 66 2 184 3 127 1 296 1 157 1 259 1 207 1 231 1 208 1 20 1 225 1 168 2 34 1 374 1 321 1 180 2 316 1 303 2 241 1 219 1 56 1 
143 2 66 2 259 1 245 1 225 1 34 2 316 2 180 2 56 1 122 2 184 3 60 1 157 1 296 1 127 1 207 1 208 2 231 1 20 1 168 2 374 1 321 1 303 2 219 1 
259 1 221 1 222 1 244 1 4 1 223 1 225 1 34 3 5 2 357 1 316 3 180 1 358 1 122 1 184 4 60 1 157 1 208 3 374 1 23 1 86 1 62 2 219 1 
122 1 184 4 60 1 221 1 157 1 259 1 222 1 208 3 244 1 4 1 225 1 5 2 34 3 374 1 357 1 82 1 180 1 316 3 23 1 219 1 62 2 86 1 
364 1 157 1 259 1 316 1 208 1 34 1 
122 2 184 3 364 1 37 1 259 2 157 3 130 1 208 7 328 1 373 1 34 7 94 1 186 1 356 1 357 2 169 1 257 1 21 1 316 6 180 1 182 1 
143 2 44 6 1 1 285 3 198 1 93 2 52 2 54 1 288 1 98 1 336 3 157 1 296 1 207 1 208 1 341 2 209 1 299 1 20 2 300 1 212 1 168 2 351 1 350 2 303 1 66 1 171 2 173 1 220 2 259 1 34 1 315 1 316 1 180 1 183 1 122 1 184 1 368 1 234 1 373 1 238 4 321 1 39 1 189 1 241 1 379 2 279 2 
0 1 221 1 222 1 244 2 4 1 34 1 5 3 148 1 357 1 330 2 316 1 331 1 181 1 184 2 159 1 18 1 254 1 208 1 297 1 233 2 345 1 347 2 82 1 23 1 216 2 62 3 86 1 193 1 
122 1 362 1 184 2 364 1 259 1 157 2 208 2 373 1 34 2 257 1 316 2 180 1 86 1 
122 1 184 1 60 1 157 1 338 1 259 1 208 4 34 4 373 1 357 1 316 4 276 1 334 1 
122 1 184 1 67 1 259 1 157 2 208 2 225 1 34 2 21 1 316 2 180 1 182 1 15 1 58 1 
53 1 157 1 259 1 357 1 316 1 208 1 292 1 70 1 142 1 34 1 
122 1 184 1 259 1 157 1 208 2 71 1 373 1 34 2 186 1 356 1 316 2 
122 2 184 3 338 1 37 1 259 2 157 2 208 5 225 1 34 5 373 1 328 1 356 1 357 1 276 1 316 4 334 1 
122 2 184 3 338 1 259 2 157 2 208 5 225 1 34 5 373 1 328 1 356 1 357 1 276 1 316 4 334 1 85 1 
122 1 143 2 66 1 184 1 296 1 157 1 259 1 207 1 208 1 245 1 20 1 168 2 34 1 321 1 357 1 180 1 316 1 303 1 
122 1 184 1 157 2 259 1 257 1 169 1 21 1 180 1 316 1 208 1 182 1 225 1 34 1 
143 1 66 1 2 1 319 1 197 1 260 1 168 1 265 1 352 1 
206 1 114 1 352 1 
179 1 197 1 265 1 352 1 20 1 
206 1 221 1 127 1 222 1 231 1 254 1 197 2 114 1 371 1 20 1 5 2 179 2 83 1 23 1 136 1 265 2 352 1 56 1 62 2 
87 1 263 1 128 1 68 1 196 2 108 2 322 1 77 1 42 1 177 1 
87 1 250 1 55 1 121 1 
87 1 68 1 
87 1 68 1 42 1 200 1 
87 1 128 1 68 1 196 1 108 1 42 1 177 1 
306 1 349 1 196 1 
87 1 284 1 128 1 366 1 68 1 196 3 77 1 224 1 177 1 263 2 108 3 42 1 
87 1 318 1 128 1 68 1 196 2 108 2 42 1 165 1 177 1 
87 1 128 1 196 1 77 1 103 1 70 1 177 1 10 1 108 1 292 1 121 1 
87 1 128 1 68 1 196 1 108 1 77 1 177 1 
128 1 68 2 196 1 108 1 77 1 42 1 177 1 
87 1 128 2 68 1 196 2 77 1 33 1 177 2 246 1 187 1 108 2 
87 1 128 1 45 1 196 1 108 1 322 1 77 1 55 1 121 1 177 1 
87 1 318 1 174 1 128 1 68 1 196 2 38 1 77 1 103 1 70 1 177 1 53 1 108 2 292 2 42 1 
87 2 318 2 128 2 68 1 196 4 77 1 177 2 165 1 108 4 55 1 121 1 42 1 153 1 
87 1 128 1 68 1 196 1 108 1 77 1 42 1 177 1 
87 3 318 2 284 1 366 1 128 1 68 2 196 4 177 1 263 1 250 1 108 4 55 1 121 1 42 2 
87 1 76 1 318 1 100 1 128 1 68 1 196 2 107 1 108 2 77 1 42 1 177 1 
87 1 263 2 155 1 284 1 366 2 128 1 68 1 196 3 108 3 77 1 42 1 177 1 
87 2 329 1 304 1 63 2 
128 1 35 1 196 1 108 1 77 1 177 1 
128 1 68 1 196 1 77 1 177 1 250 1 108 1 322 1 42 1 
16 1 
87 1 128 1 68 1 196 1 108 1 77 1 42 1 177 1 

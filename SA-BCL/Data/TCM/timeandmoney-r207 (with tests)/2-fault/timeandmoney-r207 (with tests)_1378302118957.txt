#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
29 9 31 1 311 1 63 1 107 6 35 1 170 2 37 1 195 2 370 2 319 1 12 2 292 1 246 2 97 1 295 3 250 4 229 1 272 1 48 2 205 1 118 1 99 1 209 9 305 1 138 2 328 1 259 5 
29 9 31 1 311 1 63 1 107 6 35 1 170 2 37 1 195 2 370 2 319 1 12 2 246 2 292 1 97 1 295 3 250 4 229 1 272 1 48 2 205 1 118 1 99 1 209 9 305 1 138 2 328 1 259 5 
29 10 31 1 311 1 63 1 107 7 35 1 170 2 37 1 195 2 370 2 319 1 12 2 246 2 292 1 97 1 295 4 250 5 229 1 272 1 48 2 205 1 118 1 99 1 209 10 305 1 138 2 328 1 259 6 
29 7 31 1 311 1 63 1 107 4 35 1 170 2 37 1 195 2 370 2 319 1 12 1 246 2 292 1 97 1 295 2 250 3 229 1 272 1 48 2 205 1 118 1 209 7 305 1 138 2 328 1 259 4 
246 1 29 4 295 1 311 1 250 2 229 1 63 1 272 1 48 1 107 3 195 1 99 1 370 1 209 4 138 1 319 1 12 2 259 3 
360 1 29 2 311 1 229 1 48 1 205 1 6 1 37 1 170 1 195 1 370 1 209 2 138 1 189 1 319 1 259 1 
29 3 295 1 311 1 250 1 229 1 107 1 170 1 118 1 195 2 370 2 209 3 319 1 259 2 
29 9 311 1 63 1 107 7 35 1 170 1 195 2 370 2 319 1 12 2 246 1 295 3 148 1 250 4 299 1 229 1 272 1 48 1 118 1 99 1 209 9 305 1 138 1 259 5 
29 9 311 1 63 1 107 7 35 1 170 1 195 2 370 2 319 1 12 2 246 1 295 3 148 1 250 4 299 1 229 1 272 1 48 1 118 1 99 1 209 9 305 1 138 1 259 5 
43 1 367 1 344 1 
185 2 367 1 345 1 
184 2 334 2 362 2 165 1 149 2 126 2 301 1 331 2 
334 2 362 3 260 1 363 1 59 1 165 1 365 1 194 1 126 3 36 1 65 1 66 1 130 1 71 1 39 1 38 2 343 1 41 1 223 1 10 2 96 1 322 1 114 2 249 1 149 2 300 1 301 1 47 2 49 1 22 1 184 2 100 1 51 1 357 2 81 1 102 1 331 2 
73 1 196 1 184 1 334 1 362 1 283 1 149 1 126 1 301 1 331 1 
73 1 104 1 362 1 203 1 285 1 149 1 367 1 126 1 353 1 77 1 173 1 72 1 344 1 306 1 
73 1 334 1 104 1 362 1 203 1 149 1 367 1 126 1 184 1 77 2 173 2 72 1 344 1 331 1 306 1 
77 1 310 1 226 1 173 1 182 1 
2 1 77 2 310 1 226 1 173 2 235 1 367 1 344 1 
77 1 226 1 173 1 
73 1 293 1 334 1 362 1 310 1 283 1 149 1 301 1 126 1 196 1 184 1 77 1 173 1 331 1 
367 1 
77 2 310 1 226 1 173 2 235 1 367 1 330 1 344 1 
13 1 282 1 310 2 115 1 33 2 226 2 269 2 262 1 367 1 302 1 218 1 77 5 173 5 256 1 94 1 235 1 344 1 214 1 374 2 
43 1 165 1 
334 1 362 2 165 2 149 2 287 1 126 2 184 1 372 1 331 1 
253 1 53 1 240 1 
362 1 322 1 114 1 59 1 363 1 165 1 365 1 126 1 49 1 100 1 51 1 38 1 343 1 39 1 120 1 10 1 
362 2 322 1 363 1 59 1 114 1 365 1 149 1 126 2 49 1 253 1 184 1 51 1 100 1 354 1 39 1 38 1 343 1 40 1 10 1 331 1 
334 1 184 3 362 3 165 1 149 3 40 1 126 3 331 3 
73 1 196 1 184 1 362 1 149 1 126 1 331 1 
73 1 184 1 334 1 362 1 372 1 149 1 287 1 126 1 331 1 
104 1 334 2 362 4 363 1 59 1 165 1 365 1 124 1 194 1 126 4 36 1 65 1 66 1 171 1 372 1 173 1 71 1 39 1 343 1 38 1 40 1 72 1 41 1 223 1 10 1 96 1 73 1 322 1 114 1 249 1 203 1 149 3 300 1 301 1 47 1 49 1 184 3 51 1 100 1 354 1 77 1 357 2 331 3 306 1 
353 1 184 1 362 2 165 1 149 2 28 1 40 1 126 2 331 1 
73 1 334 1 104 1 362 3 203 1 149 3 367 1 126 3 171 1 184 3 340 1 354 1 77 1 372 1 173 1 72 1 40 2 331 3 306 1 
334 1 362 2 149 2 126 2 240 1 253 1 184 2 372 1 40 1 331 2 
362 1 322 1 114 1 59 1 363 1 165 1 365 1 126 1 49 1 100 1 51 1 38 1 343 1 39 1 10 1 
362 1 322 1 114 1 59 1 363 1 165 1 365 1 126 1 34 1 49 1 51 1 38 1 289 1 39 1 10 1 
260 2 60 1 194 2 125 1 240 2 36 1 65 1 66 1 131 1 91 1 71 1 95 1 41 1 201 1 45 1 150 1 181 1 270 1 300 1 47 4 253 2 357 2 53 2 54 1 
73 1 184 1 362 1 296 1 149 1 126 1 306 1 331 1 
23 1 353 1 57 1 334 1 184 4 354 1 362 5 165 1 372 1 149 5 28 1 40 2 126 5 331 4 
73 1 196 1 184 2 296 1 362 2 149 2 126 2 331 2 
304 1 238 1 
304 1 238 1 
288 1 21 1 
288 1 21 1 
288 1 21 1 
304 1 152 1 238 1 
304 1 152 1 238 1 
304 1 238 1 373 1 
304 2 154 1 288 1 187 1 238 2 21 1 
304 1 152 1 238 1 
294 1 304 1 238 1 
294 1 304 1 238 1 
294 1 304 1 238 1 
160 2 178 2 349 3 337 1 204 1 367 1 238 2 369 1 275 1 75 2 108 1 304 2 144 2 77 2 154 1 173 2 200 2 318 1 381 1 
160 1 224 1 362 2 178 1 165 1 180 1 349 1 149 2 126 2 238 1 172 1 277 1 304 1 144 1 184 2 233 1 77 1 173 1 200 1 320 1 373 1 381 1 331 2 266 1 
246 1 138 1 48 1 
6 1 138 1 48 1 
207 1 246 2 6 1 347 1 85 1 138 3 
207 1 246 1 6 1 61 1 85 1 138 2 
246 1 207 2 6 1 85 1 138 2 
191 2 359 1 0 1 1 1 310 4 60 1 33 1 367 2 167 1 142 1 173 5 94 2 95 1 345 1 374 1 344 1 321 2 266 1 224 1 226 1 150 1 269 1 270 1 134 2 185 3 233 1 77 5 256 3 139 1 235 1 214 1 158 1 
122 1 359 1 0 2 310 7 60 3 33 2 166 5 367 5 142 2 218 1 173 9 242 1 94 6 95 3 345 3 344 1 374 2 321 6 266 4 297 1 226 6 150 3 269 2 151 1 270 3 182 5 276 1 134 6 185 9 77 9 211 1 256 8 235 1 214 1 158 3 
191 1 0 1 310 2 60 1 33 1 367 3 167 1 142 1 218 1 173 3 94 2 95 1 344 1 345 2 374 1 266 1 321 2 150 1 269 1 270 1 134 2 185 4 77 3 256 3 139 1 158 1 
191 2 0 1 310 3 60 2 33 1 367 4 167 1 142 1 218 1 173 4 242 1 94 4 95 2 344 1 345 3 374 1 321 4 266 2 297 1 150 2 269 1 151 1 270 2 134 4 185 7 77 4 256 5 139 1 158 2 
43 1 106 1 49 1 
70 1 49 1 
82 1 
39 1 49 1 
363 1 106 2 39 1 227 1 133 1 49 3 
363 1 39 1 49 1 
232 1 49 1 
201 3 361 2 260 4 225 1 194 3 284 1 270 1 47 7 231 1 7 1 25 1 220 1 316 1 91 2 356 1 95 1 80 1 
201 3 361 2 260 4 225 1 194 3 284 1 270 1 47 7 231 1 7 1 25 1 220 1 316 1 91 2 356 1 95 1 80 1 
201 3 361 2 260 4 323 1 225 1 194 3 284 1 270 1 47 7 231 1 7 1 25 1 220 1 316 1 91 2 356 1 95 1 80 1 
215 1 83 1 161 1 361 3 260 16 60 3 194 15 284 2 36 1 65 1 66 1 89 4 7 5 220 1 316 2 91 5 109 1 342 3 71 1 95 4 201 10 111 1 225 1 150 3 270 4 47 31 231 1 153 1 25 2 356 2 186 1 357 2 80 1 158 3 
361 2 260 5 284 1 194 4 36 2 65 2 66 2 127 1 7 1 220 1 316 1 91 3 71 2 95 1 110 1 201 4 270 1 47 9 231 1 153 1 25 1 356 1 357 4 80 1 
29 2 59 1 311 1 261 1 107 1 170 1 6 1 195 1 370 1 341 1 38 1 10 1 319 1 246 1 14 1 347 1 114 1 179 1 229 1 271 1 230 1 48 1 116 1 278 1 209 2 51 1 280 1 138 2 79 1 259 1 
29 3 59 1 311 1 261 1 338 1 107 2 168 1 170 1 6 1 195 1 370 1 38 1 10 1 246 1 14 1 347 1 114 1 179 1 229 1 271 1 230 1 48 1 116 1 352 1 209 3 51 1 280 1 138 2 79 1 259 1 
29 2 59 1 311 1 261 1 338 1 107 2 168 1 170 1 6 1 38 1 10 1 14 1 246 1 347 1 114 1 179 1 229 1 271 1 230 1 48 1 209 2 51 1 138 2 79 1 259 1 
29 1 59 1 170 2 195 1 370 1 38 1 39 1 10 1 290 1 14 2 322 1 114 1 179 2 228 1 230 2 49 1 352 1 51 1 209 1 136 1 210 1 213 1 281 1 
29 1 59 1 261 1 338 1 170 1 6 1 195 1 370 1 38 1 10 1 319 1 246 1 14 1 347 1 114 1 179 1 271 1 230 1 48 1 116 1 278 1 209 1 51 1 280 1 138 2 79 1 
4 1 
236 1 0 1 104 1 59 1 285 1 62 1 64 2 68 1 69 1 199 2 72 1 10 2 344 1 345 2 73 1 247 2 114 2 203 1 18 1 149 1 353 1 77 5 256 2 213 1 214 1 306 1 307 1 84 1 309 1 362 1 163 1 33 1 367 2 126 1 173 5 39 1 38 2 94 2 374 1 42 2 267 1 44 2 322 2 226 6 228 1 269 1 49 1 378 2 185 2 325 1 51 1 326 2 279 4 235 3 56 1 
236 1 104 1 362 1 285 1 126 1 68 1 173 3 69 1 72 1 73 1 203 1 226 2 149 1 353 1 325 1 77 3 326 1 279 2 235 1 330 1 306 1 56 1 
236 1 104 1 362 1 285 1 126 1 367 1 64 1 68 1 173 3 69 1 72 1 344 1 73 1 203 1 226 1 149 1 353 1 325 1 77 3 279 3 235 1 330 1 306 1 56 1 
236 1 104 1 362 1 285 1 126 1 367 1 64 1 68 1 173 3 69 1 72 1 344 1 42 1 73 1 203 1 226 2 149 1 353 1 325 1 77 3 326 1 279 3 235 1 330 1 306 1 56 1 
236 1 104 1 285 1 62 1 64 4 68 1 9 1 69 1 199 2 72 1 344 5 345 2 73 1 112 1 247 2 203 1 149 1 20 1 353 1 77 5 256 1 306 1 214 1 362 1 33 1 126 1 367 5 90 1 173 5 94 1 374 1 42 4 267 1 44 2 226 7 46 1 269 1 378 2 325 1 326 4 279 6 235 3 330 1 56 1 
236 1 104 1 285 1 62 1 64 2 68 1 69 1 199 2 72 1 345 2 344 1 73 1 247 2 203 1 149 1 353 1 77 4 256 1 306 1 214 1 307 1 362 1 33 1 126 1 367 2 173 4 94 1 374 1 42 2 267 1 44 2 226 4 269 1 378 2 325 1 185 2 326 2 279 4 235 2 56 1 
236 1 104 1 362 1 33 1 285 1 62 1 367 1 126 1 64 2 90 1 68 1 9 1 173 4 69 1 199 2 94 1 72 1 344 1 345 2 374 1 42 2 73 1 247 2 267 1 44 2 203 1 226 4 149 1 269 1 20 1 378 2 353 1 325 1 326 2 77 4 279 4 256 1 235 2 306 1 214 1 56 1 
236 1 104 1 362 1 33 1 285 1 62 1 367 1 126 1 64 2 90 1 68 1 9 1 173 4 69 1 199 2 94 1 72 1 344 1 345 2 374 1 42 2 73 1 247 2 267 1 44 2 203 1 226 4 149 1 269 1 20 1 378 2 353 1 325 1 326 2 77 4 279 4 256 1 235 2 306 1 214 1 56 1 
236 1 104 1 362 1 33 1 285 1 367 1 126 1 314 1 64 2 339 2 68 1 173 4 69 1 199 2 94 1 72 1 344 1 374 1 42 2 73 1 267 1 44 2 203 1 226 4 149 1 269 1 20 1 353 1 185 2 325 1 208 1 326 2 77 4 27 2 279 4 256 1 235 2 380 1 306 1 214 1 56 1 
236 1 104 1 362 1 33 1 285 1 62 1 367 1 126 1 64 3 90 1 68 1 9 1 173 4 69 1 199 2 94 1 72 1 344 1 345 2 374 1 42 3 73 1 247 2 267 1 44 2 203 1 46 1 226 5 149 1 269 1 20 1 378 2 353 1 325 1 77 4 326 3 279 5 256 1 235 2 214 1 306 1 56 1 
236 1 104 1 362 1 33 1 285 1 62 1 367 1 126 1 64 3 90 1 68 1 9 1 173 4 69 1 199 2 94 1 72 1 344 1 345 2 374 1 42 3 73 1 247 2 267 1 44 2 203 1 46 1 226 5 149 1 269 1 20 1 378 2 353 1 325 1 77 4 326 3 279 5 256 1 235 2 214 1 306 1 56 1 
307 1 236 1 104 1 362 1 33 1 285 1 367 1 126 1 64 2 339 2 68 1 173 4 69 1 199 2 94 1 72 1 344 1 374 1 42 2 73 1 267 1 44 2 203 1 226 4 149 1 269 1 353 1 185 2 325 1 326 2 77 4 27 2 279 4 256 1 235 2 380 1 214 1 306 1 56 1 
201 2 43 1 361 1 260 3 165 2 194 3 270 1 300 1 47 6 240 1 231 1 65 1 36 1 66 1 253 1 220 1 316 1 91 2 356 1 71 1 357 2 53 1 95 1 54 1 41 1 80 1 
215 1 260 10 165 1 60 3 194 7 87 1 240 4 36 2 65 2 66 2 7 1 89 4 91 1 71 2 342 3 41 1 95 1 96 1 201 2 113 1 150 1 270 3 300 2 47 17 252 1 253 13 303 1 186 2 357 4 53 13 81 1 121 1 158 3 
362 2 363 1 59 1 260 1 165 1 365 1 194 1 126 2 87 1 240 1 65 1 36 1 66 1 71 1 39 1 343 1 38 1 40 1 41 1 10 1 96 1 346 1 322 1 114 1 149 1 300 1 47 2 351 1 49 1 184 1 51 1 100 1 354 1 355 1 357 2 120 1 81 1 331 1 
59 2 60 2 194 10 338 1 240 7 65 3 66 3 7 4 71 3 343 2 10 3 201 8 202 1 114 3 248 2 249 2 149 1 150 2 300 3 253 7 354 1 356 1 357 6 80 1 81 1 158 2 361 1 362 3 363 2 260 10 165 2 365 2 126 3 87 1 36 3 217 2 220 1 316 1 91 4 174 1 38 3 39 2 40 1 95 3 41 3 265 1 96 1 176 2 322 1 376 2 270 3 47 20 231 1 49 2 184 1 100 2 51 2 53 7 331 1 
308 1 362 1 59 2 260 1 194 1 263 1 126 1 338 1 36 2 65 2 66 2 341 1 71 2 132 1 38 7 39 2 40 1 41 2 245 1 10 8 96 1 322 2 146 1 114 8 149 1 324 1 228 1 300 2 47 2 49 3 117 1 184 1 51 2 357 4 54 1 213 1 81 1 102 2 331 1 
334 1 362 1 260 1 60 1 194 2 126 1 87 1 240 1 36 1 65 1 66 1 372 1 91 1 71 1 41 1 95 1 201 1 298 1 149 1 150 1 270 1 300 1 47 3 253 1 184 1 357 2 53 1 331 1 158 1 
201 1 260 2 60 1 125 1 270 1 300 1 47 2 240 1 65 1 36 1 66 1 253 1 7 1 71 1 357 2 53 1 54 1 41 1 
201 1 150 1 194 2 300 1 47 2 240 1 65 1 36 1 66 1 253 1 131 1 91 1 71 1 357 2 53 1 54 1 41 1 95 1 
260 2 60 1 194 2 240 2 36 1 65 1 66 1 7 1 91 1 71 1 41 1 95 1 201 2 150 1 270 1 300 1 47 4 253 2 357 2 53 2 54 1 158 1 
201 1 260 2 60 1 125 1 270 1 300 1 47 2 240 1 117 1 65 1 36 1 66 1 253 1 7 1 71 1 357 2 53 1 41 1 
201 1 150 1 194 2 300 1 47 2 240 1 117 1 65 1 36 1 66 1 253 1 131 1 91 1 71 1 357 2 53 1 41 1 95 1 
260 2 60 1 194 2 240 2 36 1 65 1 66 1 7 1 91 1 71 1 41 1 95 1 201 2 150 1 270 1 300 1 47 4 117 1 253 2 357 2 53 2 158 1 
260 2 60 1 194 2 240 2 36 1 65 1 66 1 7 1 91 1 71 1 41 1 95 1 201 2 150 1 270 1 300 1 47 4 253 2 357 2 53 2 158 1 
362 1 260 1 363 1 59 1 165 1 365 1 194 1 126 1 65 1 36 1 66 1 71 1 39 1 343 1 38 1 41 1 10 1 96 1 322 1 114 1 249 1 300 1 47 2 49 1 51 1 100 1 357 2 81 1 
362 1 260 1 363 1 59 1 165 1 365 1 194 1 126 1 34 1 65 1 36 1 66 1 71 1 39 1 289 1 38 1 41 1 10 1 96 1 322 1 268 1 114 1 300 1 47 2 49 1 51 1 357 2 81 1 
260 2 60 1 194 2 87 1 240 2 36 1 65 1 66 1 7 1 91 1 71 1 41 1 95 1 201 2 150 1 270 1 300 1 47 4 253 2 357 2 53 2 158 1 
362 1 260 2 363 1 59 1 60 1 365 1 194 2 126 1 240 2 65 1 36 1 66 1 7 1 341 1 91 1 71 1 343 1 38 1 39 1 95 1 41 1 10 1 201 2 248 1 114 1 249 1 150 1 270 1 300 1 47 4 49 1 253 2 51 1 100 1 357 2 53 2 158 1 
334 1 362 1 260 2 60 1 194 1 126 1 87 1 240 1 36 1 65 1 66 1 7 1 372 1 71 1 95 1 41 1 201 1 150 1 149 1 270 1 300 1 47 3 274 1 253 1 184 1 357 2 53 1 331 1 158 1 
215 1 193 1 260 9 60 3 194 10 366 1 36 2 65 2 88 1 66 2 89 2 127 1 7 3 221 1 91 3 71 2 342 1 244 1 95 3 201 6 17 2 150 3 270 3 47 19 255 1 137 1 186 1 357 4 156 2 158 3 
215 2 193 1 260 14 60 3 194 12 366 1 239 1 36 3 65 3 88 1 66 3 7 2 127 1 89 2 129 1 91 2 71 3 342 2 95 2 11 1 201 4 15 1 17 1 150 2 270 3 47 26 153 2 255 2 76 1 137 2 119 1 357 6 156 4 158 3 
333 1 215 3 361 1 193 1 260 22 60 5 194 22 366 1 239 1 36 3 65 3 88 1 66 3 89 5 127 1 7 4 129 1 220 1 221 1 316 1 91 4 71 3 342 3 95 5 11 1 201 8 15 1 17 1 150 4 270 6 47 44 231 1 153 1 76 1 255 1 137 2 356 1 186 2 119 1 357 6 80 1 156 4 158 5 
333 1 215 3 361 1 193 1 260 22 60 5 194 21 366 1 239 1 36 4 65 4 88 1 66 4 89 5 127 1 7 3 129 1 220 1 221 1 316 1 91 5 71 4 342 3 95 5 11 1 201 8 15 1 17 1 150 4 270 6 47 43 231 1 153 2 76 1 255 1 137 2 356 1 186 2 119 1 357 8 80 1 156 4 158 5 
215 2 361 1 193 1 260 27 60 7 194 25 366 1 239 1 36 2 65 2 88 1 66 2 89 4 127 1 7 7 129 1 220 1 316 1 91 7 71 2 342 4 95 8 11 1 201 14 113 2 15 1 17 1 150 7 270 8 47 52 231 1 153 1 76 1 255 1 137 1 356 1 186 2 119 1 357 4 80 1 156 4 158 7 
160 1 108 1 144 1 304 1 375 1 178 1 154 1 200 1 238 1 275 1 
180 1 373 1 
160 1 162 1 67 1 144 1 304 1 178 1 200 1 19 1 238 1 
160 1 178 1 349 2 337 1 204 1 367 1 238 1 369 1 275 1 75 1 108 1 304 1 144 1 77 1 154 1 173 1 200 1 381 1 
160 1 178 1 349 2 337 1 204 1 367 1 238 1 369 1 275 1 75 1 108 1 304 1 144 1 77 1 154 1 173 1 200 1 381 1 
160 1 178 1 349 2 337 1 204 1 367 1 238 1 369 1 275 1 75 1 108 1 304 1 144 1 77 1 154 1 173 1 200 1 381 1 
177 1 187 1 152 1 
177 1 187 1 152 1 
294 1 145 1 
294 1 145 1 187 1 
172 1 320 1 
160 1 362 2 310 1 165 1 126 2 238 1 172 1 144 1 173 1 93 1 200 1 373 1 320 1 266 1 224 1 178 1 349 1 180 1 204 1 149 2 75 1 277 1 304 1 184 2 233 1 77 1 331 2 
177 1 152 1 
294 1 145 1 187 1 
358 1 237 1 362 2 59 1 260 1 194 1 126 2 87 1 65 1 36 1 66 1 71 1 39 1 38 2 41 1 10 2 96 1 146 1 114 2 149 2 324 1 300 1 47 2 49 1 51 1 357 2 140 1 258 1 81 1 102 2 190 1 
246 1 14 1 347 1 59 1 114 2 261 1 271 1 338 1 48 1 273 1 6 1 51 1 341 1 138 2 38 2 280 1 212 1 10 2 157 1 
246 1 14 1 347 1 114 1 59 1 261 1 271 1 338 1 48 1 6 1 50 1 51 1 138 2 38 1 280 1 10 1 157 1 
14 1 322 1 59 1 114 1 228 1 273 1 49 1 51 1 210 1 39 1 38 1 213 1 10 1 159 1 
246 1 14 1 347 1 114 1 59 1 261 1 271 1 338 1 48 1 273 1 6 1 51 1 138 2 38 1 280 1 212 1 10 1 157 1 
86 1 
43 1 282 1 115 1 256 1 94 1 367 1 344 1 
33 1 62 1 367 2 173 1 94 1 345 1 374 1 344 1 247 1 226 1 269 1 378 1 185 1 77 1 256 1 235 1 214 1 
0 2 105 1 141 2 282 1 336 2 59 3 106 2 60 2 341 1 70 3 72 2 10 3 344 2 345 6 114 3 348 2 115 1 150 2 350 2 206 2 77 5 256 9 155 1 214 4 158 2 309 1 363 3 33 4 312 1 367 8 368 2 169 1 217 2 173 5 92 2 39 3 38 3 94 8 133 1 95 2 374 4 321 6 322 1 226 5 269 4 270 2 49 10 232 2 134 6 185 12 51 4 235 3 332 1 55 2 
0 1 215 1 141 1 309 1 60 2 33 2 367 5 239 1 89 1 173 1 342 1 94 5 95 2 11 1 374 2 345 3 344 2 321 5 15 1 348 2 226 1 150 2 269 2 270 2 24 1 134 5 254 1 185 6 76 1 77 1 119 1 256 8 235 1 214 2 158 2 
141 1 334 1 362 1 33 1 283 1 126 1 196 1 9 1 316 1 173 1 317 1 94 2 95 1 374 1 73 1 293 1 348 2 149 1 269 1 270 2 301 1 231 1 184 1 77 1 356 1 256 2 214 1 331 1 
282 1 115 1 33 1 269 1 367 1 256 1 94 1 214 1 374 1 344 1 
141 1 348 2 60 2 150 2 270 2 367 5 134 5 217 1 185 10 256 5 94 5 95 2 345 5 158 2 321 5 
77 1 173 1 226 1 235 1 367 1 344 1 
0 2 84 1 105 2 309 2 59 1 163 1 33 2 264 1 218 1 173 3 39 1 38 4 94 2 10 4 374 2 322 2 114 4 226 4 269 2 228 1 251 1 49 1 51 1 77 3 256 2 235 2 155 1 213 1 214 1 
334 2 362 3 59 1 363 1 165 1 365 1 194 1 126 3 36 1 65 1 66 1 71 1 38 1 343 1 39 1 223 1 41 1 10 1 96 1 322 1 114 1 249 1 149 2 301 1 300 1 47 1 49 1 184 2 100 1 51 1 357 2 331 2 
0 1 361 1 309 1 33 1 269 1 367 4 134 2 185 4 256 1 94 2 345 2 214 1 374 1 344 2 321 2 
144 1 379 1 178 1 
144 1 379 1 178 1 
172 1 144 1 178 1 313 1 275 1 
144 1 379 1 178 1 
144 1 178 1 222 1 
144 1 178 1 222 1 
144 1 178 1 222 1 
144 1 178 1 
304 1 238 1 
201 3 361 1 260 4 194 4 270 1 47 8 231 1 65 2 36 2 66 2 153 1 7 1 220 1 316 1 91 2 356 1 71 2 357 4 95 1 80 1 
201 2 43 1 361 1 260 3 220 1 316 1 91 2 356 1 194 3 270 1 95 1 47 6 80 1 231 1 
201 2 260 2 123 1 60 1 194 2 150 1 270 1 47 4 65 1 36 1 66 1 7 1 91 1 71 1 357 2 95 1 158 1 
201 2 215 1 260 3 60 1 150 1 194 4 270 1 47 7 89 2 7 1 91 1 186 1 342 1 95 1 158 1 
361 1 260 11 60 2 164 1 194 12 65 2 36 2 66 2 7 4 89 2 220 1 316 2 91 5 342 2 71 2 95 3 201 9 113 1 150 2 270 3 47 23 231 1 153 2 356 2 186 1 357 4 80 1 121 1 158 2 
89 1 194 1 47 1 
260 1 342 1 47 1 
201 3 260 3 123 1 60 1 194 3 150 1 270 1 47 6 36 1 65 1 66 1 217 1 7 1 91 2 71 1 357 2 95 1 158 1 
215 1 260 6 60 2 194 6 239 1 36 1 65 1 66 1 7 1 89 1 127 1 91 1 342 1 71 1 95 2 11 1 201 2 15 1 150 2 270 2 47 12 76 1 119 1 357 2 158 2 
201 2 260 3 194 3 270 1 47 6 231 1 7 1 316 1 356 1 91 1 95 1 
201 2 260 1 164 1 194 2 47 3 65 1 36 1 153 1 66 1 7 1 220 1 316 1 91 1 356 1 71 1 357 2 80 1 
201 5 260 5 194 5 270 2 47 10 36 1 65 1 231 1 66 1 127 1 7 2 316 2 356 2 91 3 71 1 317 1 357 2 95 2 
201 1 260 2 60 1 270 1 47 2 65 1 36 1 66 1 127 1 7 1 71 1 357 2 
201 2 260 2 60 1 194 2 150 1 270 1 47 4 65 1 36 1 66 1 127 1 7 1 91 1 71 1 357 2 95 1 158 1 
201 2 260 1 164 1 194 2 47 3 65 3 36 3 153 1 66 3 127 1 7 1 221 1 316 1 356 1 91 1 71 3 357 6 
161 1 215 1 83 1 361 1 260 16 164 1 123 1 60 3 194 18 36 5 65 5 66 5 89 4 127 1 7 5 220 1 316 3 221 1 109 1 91 7 71 5 342 3 95 5 201 12 150 3 270 5 47 34 231 2 153 2 356 3 186 1 357 10 80 1 158 3 
215 1 361 1 260 6 60 1 194 5 36 1 65 1 66 1 89 2 127 1 220 1 316 1 91 2 342 1 71 1 95 1 11 1 201 2 270 2 47 11 231 1 356 1 186 1 357 2 80 1 158 1 
215 1 361 1 260 6 123 1 60 1 194 5 36 2 65 2 66 2 89 2 127 1 7 1 220 1 316 1 91 2 71 2 342 1 95 1 11 1 201 3 270 2 47 11 231 1 356 1 186 1 357 4 80 1 158 1 
215 1 361 1 260 9 123 1 60 2 194 10 239 1 36 3 65 3 66 3 7 1 89 1 127 1 220 1 316 1 91 3 342 1 71 3 95 3 11 1 201 4 15 1 150 2 270 3 47 19 231 1 153 1 76 1 356 1 119 1 357 6 80 1 158 2 
215 1 361 1 260 10 123 1 60 2 194 7 239 1 36 3 65 3 66 3 7 2 89 1 127 1 220 1 316 1 91 3 342 1 71 3 95 2 11 1 201 5 15 1 150 1 270 3 47 17 231 1 153 1 76 1 356 1 119 1 357 6 80 1 158 2 
215 1 361 1 260 6 60 1 194 5 36 1 65 1 66 1 89 2 127 1 220 1 316 1 91 2 342 1 71 1 95 1 11 1 201 2 270 2 47 11 231 1 356 1 186 1 357 2 80 1 158 1 
215 1 260 6 60 2 194 6 239 1 36 1 65 1 66 1 7 1 89 1 127 1 91 1 342 1 71 1 95 2 11 1 201 2 15 1 150 2 270 2 47 12 76 1 119 1 357 2 158 2 
215 1 361 1 260 10 123 1 60 2 194 8 239 1 36 4 65 4 66 4 7 2 89 1 127 1 220 1 316 1 91 3 71 4 342 1 95 2 11 1 201 5 15 1 150 1 270 3 47 18 231 1 153 2 76 1 356 1 119 1 357 8 80 1 158 2 
215 1 260 9 60 3 194 7 239 1 36 4 65 4 66 4 7 3 89 1 127 1 221 1 91 3 71 4 342 1 95 2 11 1 201 6 15 1 150 2 270 3 47 16 153 2 76 1 119 1 357 8 158 3 
201 6 260 3 194 4 270 1 47 7 231 1 7 3 220 1 316 3 356 3 91 3 95 1 80 2 
215 1 361 1 260 10 60 2 194 8 239 1 36 4 65 4 66 4 7 1 89 1 127 1 220 1 316 1 221 1 91 3 71 4 342 1 95 2 11 1 201 4 15 1 150 1 270 3 47 18 231 1 153 2 76 1 356 1 119 1 357 8 80 1 158 2 
353 1 362 1 165 1 149 1 28 1 126 1 377 1 
362 1 335 1 165 1 149 1 377 1 126 1 353 1 8 1 198 1 327 1 28 1 101 1 
43 1 51 1 322 1 59 1 114 1 39 1 228 1 38 1 213 1 10 1 49 1 
362 2 322 1 363 1 114 1 59 1 165 1 365 1 149 1 126 2 49 1 184 1 51 1 100 1 39 1 38 1 40 1 10 1 331 1 
105 1 362 2 59 1 363 2 165 1 365 1 126 2 38 1 39 2 40 1 10 1 73 1 114 1 203 1 149 2 49 3 232 1 184 2 100 1 51 1 331 1 306 1 55 1 
105 1 3 1 362 2 59 1 363 2 165 1 365 1 126 2 289 1 38 2 39 2 40 1 10 2 73 1 114 2 203 1 149 2 49 3 232 1 184 2 51 1 331 1 306 1 55 1 
105 1 3 1 59 1 363 1 106 1 367 1 173 2 70 1 38 3 39 1 72 1 10 3 291 1 344 1 322 1 114 3 226 1 74 1 49 4 232 1 51 1 77 2 55 1 
105 1 3 1 322 1 363 1 114 3 59 1 106 1 226 1 367 1 368 1 49 4 232 1 51 1 77 2 173 2 70 1 39 1 38 3 72 1 10 3 344 1 55 1 
308 1 51 1 59 1 114 1 38 1 10 1 
308 1 322 2 32 1 114 7 363 1 59 2 324 1 263 1 338 1 49 3 341 1 51 3 132 1 38 6 39 2 243 1 133 1 102 1 245 1 10 7 103 1 
361 1 362 2 260 3 363 1 59 1 165 2 365 1 194 3 126 2 87 1 240 1 65 2 36 2 66 2 341 1 220 1 316 1 91 2 71 2 39 1 38 1 343 1 40 1 95 1 41 2 10 1 201 2 114 1 248 1 249 1 149 1 376 1 270 1 300 2 47 6 231 1 49 1 253 1 184 1 51 1 100 1 356 1 357 4 53 1 258 1 80 1 331 1 
282 1 310 1 336 1 106 1 33 2 367 1 368 1 173 3 70 1 38 1 94 1 72 1 10 1 344 1 374 2 322 1 114 1 115 1 226 2 269 2 350 1 206 1 49 2 77 3 256 1 235 1 155 1 214 2 
308 1 114 2 363 1 59 1 106 1 169 1 49 2 341 1 51 2 38 2 39 1 133 1 10 2 
3 1 322 1 147 1 114 4 59 1 228 1 49 1 51 1 341 1 38 4 39 1 213 1 10 4 
105 1 32 1 114 2 363 1 59 1 183 1 49 1 135 1 51 2 174 1 38 2 39 1 10 2 103 1 
6 1 51 1 322 1 59 1 114 1 261 1 138 1 38 1 48 1 10 1 
114 2 59 1 324 1 338 1 49 1 341 1 51 1 38 2 39 1 140 1 10 2 
105 1 322 1 147 1 114 5 59 2 228 1 324 1 263 1 49 3 341 1 51 2 38 4 39 2 132 1 213 1 10 5 
105 1 322 1 147 1 114 5 59 2 228 1 324 1 49 3 341 1 51 2 241 1 38 4 39 2 132 1 213 1 10 5 
362 2 322 1 363 1 114 1 59 1 165 1 365 1 149 1 126 2 49 1 184 1 51 1 39 1 38 1 289 1 40 1 10 1 331 1 
105 1 32 1 114 1 363 1 59 1 49 1 51 2 38 1 39 1 243 1 133 1 10 1 103 1 
358 1 237 1 362 1 149 1 126 1 26 1 234 1 188 1 190 1 
30 1 219 1 234 1 
26 1 165 1 234 1 188 1 315 1 
73 1 104 1 30 1 310 1 165 1 203 1 367 1 315 2 171 1 128 1 77 2 219 1 26 2 234 1 173 2 188 2 72 1 344 1 306 1 
43 1 311 1 229 1 259 1 
195 1 29 1 370 1 209 1 311 1 229 1 259 1 
170 1 29 1 230 1 
29 3 311 1 229 1 205 2 98 1 5 1 195 1 370 1 197 1 209 3 319 1 259 1 
195 1 29 2 370 1 209 2 311 1 229 1 107 1 259 1 12 1 
246 1 29 1 250 1 63 1 48 1 195 1 370 1 209 1 138 1 319 1 259 1 
195 1 29 1 370 1 209 1 311 1 319 1 259 1 
195 1 29 1 370 1 209 1 311 2 229 1 319 1 
29 2 311 1 143 1 195 2 370 2 209 2 52 1 175 1 319 1 259 1 
29 3 295 1 311 1 250 1 229 1 107 2 35 1 195 1 370 1 209 3 305 1 319 1 259 2 
246 1 29 2 347 1 311 1 229 1 48 1 107 1 6 1 195 1 370 1 209 2 138 2 78 1 319 1 259 1 
29 4 295 1 311 1 250 1 229 1 107 2 195 2 370 2 99 1 209 4 319 1 12 1 259 2 
195 1 29 1 370 1 209 1 311 1 229 1 319 1 259 1 
192 1 29 4 295 1 311 2 250 1 229 2 107 2 205 1 5 1 195 1 197 1 370 1 209 4 259 3 
29 2 16 1 311 1 364 1 299 1 229 1 107 1 195 1 370 1 209 2 319 1 259 1 
29 3 311 1 229 1 205 2 5 2 195 1 197 1 370 1 209 3 257 1 319 1 259 1 
371 2 286 1 329 1 259 2 
195 1 29 1 370 1 209 1 319 1 216 1 
195 1 29 2 370 1 209 2 305 1 311 1 229 1 107 1 319 1 259 1 
58 1 
195 1 29 1 370 1 209 1 311 1 229 1 319 1 259 1 
29 3 311 1 229 1 107 1 205 1 195 1 370 1 209 3 305 1 319 1 259 1 
192 1 295 1 250 1 259 1 
311 1 259 1 

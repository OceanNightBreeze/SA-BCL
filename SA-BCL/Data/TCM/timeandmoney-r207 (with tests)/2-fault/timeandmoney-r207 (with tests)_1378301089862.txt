#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 374 13 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 2 58 1 344 2 216 1 366 2 46 1 151 1 282 3 154 1 358 1 91 1 376 3 267 1 
58 1 1 2 216 3 314 1 151 1 154 7 132 1 358 1 38 1 91 4 112 1 94 1 14 1 344 2 43 1 366 5 281 2 46 1 282 9 165 1 376 9 334 1 266 1 267 1 
58 1 1 2 216 3 314 1 151 1 154 7 132 1 358 1 38 1 91 4 112 1 94 1 14 1 344 2 43 1 366 5 281 2 46 1 282 9 165 1 376 9 334 1 266 1 267 1 
58 2 1 2 216 3 314 1 151 1 154 6 358 1 38 2 91 4 112 2 298 1 70 1 14 1 344 2 43 2 366 5 281 2 46 1 282 9 165 1 376 9 334 1 188 1 378 1 189 1 266 1 29 1 267 1 
58 2 1 2 216 3 314 1 151 1 154 6 358 1 38 2 91 4 112 2 298 1 70 1 14 1 344 2 43 2 366 5 281 2 46 1 282 9 165 1 376 9 334 1 188 1 378 1 189 1 266 1 29 1 267 1 
58 2 1 2 216 4 314 1 151 1 154 7 358 1 38 2 91 5 112 2 298 1 70 1 14 1 344 2 43 2 366 6 281 2 46 1 282 10 165 1 376 10 334 1 188 1 378 1 189 1 266 1 29 1 267 1 
58 2 1 2 216 2 314 1 151 1 154 4 358 1 38 2 91 3 112 2 298 1 70 1 14 1 344 2 43 2 366 4 281 1 46 1 282 7 165 1 376 7 334 1 188 1 378 1 189 1 29 1 267 1 
1 1 216 1 344 1 314 1 43 1 366 3 281 2 46 1 282 4 154 3 358 1 38 1 91 2 376 4 334 1 112 1 266 1 267 1 
1 1 58 1 344 1 43 1 366 1 315 1 46 1 282 2 358 1 38 1 64 1 376 2 298 1 189 1 40 1 267 1 
325 1 0 1 181 1 208 1 97 1 292 1 342 1 108 1 375 1 251 1 205 1 265 1 227 1 28 1 
364 1 
325 2 185 1 364 1 35 1 337 1 375 1 353 1 28 2 
325 5 194 2 206 1 364 1 35 1 337 1 330 1 162 2 317 1 47 1 89 1 259 1 222 2 321 1 375 2 191 1 96 1 28 5 353 2 
349 1 364 1 35 1 
296 2 364 1 307 1 
359 1 181 2 208 1 97 2 292 2 251 2 205 2 265 2 
336 1 242 1 149 1 292 3 244 1 294 1 359 1 322 1 249 2 66 1 67 1 251 2 205 3 116 1 73 1 159 1 181 2 208 1 97 2 369 1 17 2 231 2 232 1 44 1 167 1 168 1 51 1 264 2 169 1 121 1 102 1 55 1 56 1 173 1 265 2 30 1 57 2 
181 1 208 1 108 1 97 1 292 1 251 1 205 1 265 1 342 1 227 1 
325 1 364 1 181 1 35 1 367 1 256 1 292 1 219 1 184 1 108 1 205 1 80 1 147 1 28 1 
325 2 364 1 181 1 35 1 97 1 367 1 256 1 292 1 184 1 108 1 251 1 205 1 80 1 265 1 28 2 
325 1 171 1 375 1 353 1 28 1 
325 2 364 1 35 1 337 1 375 1 290 1 353 1 28 2 
325 1 353 1 28 1 
181 2 97 1 292 2 63 1 359 2 251 1 205 2 379 1 265 1 
50 1 224 1 
149 1 17 1 292 1 294 1 359 1 51 1 264 1 169 1 102 1 55 1 56 1 205 1 253 1 30 1 57 1 116 1 
349 1 359 1 
149 1 181 1 97 1 17 1 292 2 294 1 234 1 50 1 51 1 169 1 101 1 264 1 102 1 55 1 251 1 56 1 205 2 30 1 116 1 57 1 
181 5 97 4 338 1 274 1 292 5 219 1 234 2 359 1 101 1 251 4 299 1 205 5 379 1 265 1 
181 2 272 1 108 1 97 2 292 2 251 2 205 2 342 1 
359 1 181 3 97 3 292 3 251 3 205 3 265 1 234 1 
181 1 108 1 97 1 292 1 251 1 205 1 342 1 
63 1 181 1 108 1 97 1 292 1 251 1 205 1 379 1 265 1 
336 1 242 1 175 1 149 1 130 1 292 4 244 1 294 1 359 1 108 1 322 1 249 2 66 1 251 3 205 4 116 1 325 1 181 3 208 1 97 3 367 1 256 1 369 1 17 1 231 1 44 1 234 1 184 1 168 1 51 1 169 1 101 1 264 1 121 1 102 1 55 1 56 1 379 1 80 1 173 1 265 2 30 1 28 1 57 1 
359 1 181 2 97 1 292 2 251 1 299 1 205 2 219 1 234 1 
325 1 364 1 181 3 97 3 367 1 256 1 292 3 18 1 130 1 234 2 184 1 108 1 101 1 251 3 379 1 80 1 205 3 265 1 28 1 
34 1 181 2 97 2 292 2 234 1 50 1 251 2 379 1 205 2 265 1 
149 1 17 1 292 1 294 1 359 1 51 1 264 1 169 1 102 1 55 1 56 1 205 1 57 1 116 1 30 1 
149 1 17 1 292 1 319 1 294 1 359 1 264 1 169 1 102 1 55 1 25 1 205 1 57 1 116 1 30 1 
336 1 4 1 86 1 257 1 369 1 231 1 244 1 143 1 168 1 374 1 322 1 249 2 121 1 173 1 
184 1 181 1 108 1 272 1 97 1 292 1 251 1 205 1 
20 1 225 1 200 1 
280 1 302 1 19 1 20 2 225 2 152 1 
20 1 225 1 
20 1 225 1 
280 1 302 1 
280 1 302 1 
280 1 302 1 
172 1 20 1 225 1 
172 1 20 1 225 1 
172 1 20 1 225 1 
220 1 20 1 225 1 
220 1 20 1 225 1 
220 1 20 1 225 1 
273 1 292 2 291 1 198 1 200 1 359 1 278 1 361 1 251 2 205 2 225 1 41 1 115 1 325 1 301 1 181 2 97 2 329 1 20 1 45 1 22 1 24 1 28 1 148 1 
325 2 137 1 301 2 362 1 364 1 273 2 368 2 19 1 20 2 198 1 316 1 22 2 65 1 24 3 69 1 93 1 225 2 115 2 28 2 
38 2 112 1 95 1 293 2 40 1 
38 1 43 1 112 1 
38 1 43 1 40 1 
38 3 214 1 112 2 293 1 95 1 40 1 
38 2 85 1 112 1 293 1 95 1 40 1 
194 1 126 1 215 1 35 1 337 1 86 1 128 1 155 1 296 2 222 1 361 1 13 1 41 1 96 2 325 5 364 2 162 1 370 1 307 1 259 2 212 1 237 2 284 1 239 1 374 1 186 1 375 4 191 1 125 1 148 1 353 1 28 5 
269 1 194 2 126 2 33 5 215 3 195 1 35 1 337 1 86 3 128 1 296 6 320 1 222 2 361 4 13 3 96 6 325 9 206 1 364 5 77 1 161 1 162 2 140 1 307 3 259 5 212 3 239 2 374 3 186 3 171 5 375 7 191 1 125 3 353 6 28 9 
194 1 0 1 126 1 35 1 215 1 86 1 292 1 342 1 296 2 222 1 108 1 361 1 251 1 13 1 205 1 227 1 96 2 325 3 206 1 181 1 364 2 208 1 97 1 370 1 162 1 307 1 259 2 237 1 212 1 284 1 239 1 374 1 375 2 186 1 265 1 125 1 28 3 
194 1 0 1 292 1 342 1 296 4 108 1 13 2 251 1 205 1 206 1 208 1 77 1 161 1 162 1 307 2 259 3 212 2 125 2 265 1 28 4 269 1 126 1 215 2 35 1 86 2 222 1 361 2 96 4 227 1 325 4 364 3 181 1 97 1 370 1 237 2 284 1 239 1 374 2 186 2 375 3 
76 1 
349 1 134 1 30 1 
303 1 30 1 
55 1 30 1 294 1 
158 1 30 1 
55 1 30 1 
138 1 134 2 55 1 371 1 30 3 294 1 
159 4 117 1 160 1 196 2 86 1 304 1 197 3 244 3 231 7 347 1 357 1 246 1 178 1 352 1 54 1 186 1 204 1 27 2 
336 2 174 4 196 3 86 5 176 4 36 1 177 1 197 8 131 2 244 14 357 1 178 2 322 2 249 4 250 1 13 4 204 5 113 1 159 19 160 1 117 2 304 1 231 33 347 1 260 1 261 1 351 1 374 4 352 2 54 2 121 2 186 5 173 2 125 4 27 3 313 1 
336 2 196 3 86 1 197 4 131 1 244 4 357 1 178 1 322 2 249 4 204 1 159 5 160 1 117 1 16 1 304 1 231 9 235 1 54 1 352 1 186 1 121 2 173 2 27 2 
159 4 117 1 160 1 196 2 86 1 304 1 197 3 244 3 231 7 347 1 357 1 178 1 352 1 54 1 186 1 204 1 27 2 
159 4 117 1 160 1 196 2 86 1 304 1 197 3 244 3 231 7 347 1 357 1 178 1 352 1 54 1 186 1 204 1 27 2 
81 1 149 1 1 1 32 2 58 2 37 1 297 1 203 1 344 1 17 1 210 2 331 1 308 2 282 1 264 1 169 1 102 1 145 1 376 1 377 1 55 1 57 1 30 1 
58 1 1 1 32 1 214 1 344 1 43 1 17 1 210 1 163 1 308 1 282 1 211 1 283 1 38 2 238 1 262 1 52 1 169 1 264 1 102 1 360 1 376 1 112 1 40 1 267 1 57 1 
32 1 1 1 58 1 214 1 154 1 358 1 38 2 360 1 112 1 40 1 344 1 43 1 366 1 17 1 210 1 163 1 46 1 308 1 282 2 283 1 211 1 333 1 52 1 262 1 264 1 169 1 102 1 376 2 57 1 267 1 
81 1 32 1 1 1 58 1 214 1 154 2 358 1 38 2 156 1 360 1 112 1 40 1 344 1 43 1 366 1 17 1 210 1 163 1 46 1 308 1 282 3 211 1 238 1 52 1 262 1 264 1 169 1 102 1 376 3 57 1 
58 1 32 1 214 1 154 2 358 1 38 2 156 1 360 1 112 1 40 1 43 1 366 1 17 1 210 1 163 1 46 1 308 1 282 2 211 1 238 1 264 1 169 1 102 1 376 2 57 1 
48 1 
193 1 194 1 3 3 337 2 292 1 108 1 10 1 110 1 111 2 68 1 205 1 254 1 15 2 209 5 256 1 162 1 305 1 306 3 307 2 258 2 259 1 21 2 263 1 80 1 353 5 28 4 35 1 275 1 355 1 219 1 222 1 39 1 96 1 325 4 364 1 181 1 367 1 184 1 187 3 191 1 147 1 192 1 
194 1 193 1 35 1 3 3 337 2 275 1 292 1 355 1 219 1 222 1 108 1 10 1 39 1 110 1 111 2 205 1 68 1 96 1 254 1 325 4 15 2 364 1 181 1 209 5 367 1 256 1 162 1 305 1 307 2 306 3 258 2 21 2 259 1 184 1 263 1 187 3 191 1 80 1 192 1 147 1 28 4 353 5 
194 1 3 2 337 2 292 1 296 2 108 1 10 1 68 1 205 1 254 1 75 1 15 2 209 4 256 1 162 1 305 1 306 2 259 1 21 2 23 2 80 1 28 4 353 4 35 1 275 1 355 1 219 1 222 1 179 1 96 1 325 4 181 1 364 1 367 1 99 2 184 1 187 2 191 1 147 1 
194 1 149 2 3 2 337 3 292 1 153 1 296 2 108 1 10 1 110 1 111 2 205 1 68 1 72 1 254 1 15 2 209 4 256 1 17 2 162 1 305 1 306 2 307 2 258 2 21 2 259 2 264 2 169 1 80 1 353 6 28 5 30 1 126 1 35 1 217 1 275 1 355 1 219 1 222 1 277 1 179 1 96 2 325 5 364 2 181 1 367 1 331 1 184 1 187 2 102 1 55 1 377 1 191 1 147 1 57 2 
325 3 181 1 337 1 209 2 256 1 275 1 367 1 292 1 306 1 355 1 219 1 184 1 185 1 108 1 10 1 68 1 80 1 205 1 147 1 353 2 28 3 254 1 
3 1 35 1 337 1 275 1 292 1 355 1 219 1 108 1 10 1 205 1 68 1 254 1 325 3 181 1 364 1 209 3 367 1 256 1 184 1 185 1 80 1 147 1 353 1 28 3 
325 3 364 1 181 1 35 1 3 1 337 1 209 3 256 1 275 1 367 1 292 1 306 1 355 1 219 1 184 1 185 1 108 1 10 1 187 1 68 1 80 1 205 1 147 1 353 2 28 3 254 1 
193 1 194 1 3 4 337 3 292 1 108 1 10 1 110 1 111 2 68 1 205 1 254 1 15 2 209 6 256 1 162 1 305 1 306 4 307 2 258 2 259 1 21 2 263 1 80 1 28 5 353 7 35 5 275 1 355 1 318 1 219 1 222 1 39 1 96 1 325 5 181 1 364 5 367 1 184 1 185 1 187 4 191 1 147 1 192 1 
194 1 3 2 337 2 292 1 296 2 108 1 10 1 110 1 111 2 68 1 205 1 254 1 15 2 209 4 256 1 162 1 305 1 307 2 306 2 258 2 259 1 21 2 80 1 28 4 353 4 35 1 275 1 355 1 219 1 222 1 179 1 96 1 325 4 181 1 364 2 367 1 184 1 187 2 191 1 147 1 
194 1 35 1 3 2 337 2 275 1 292 1 355 1 219 1 222 1 108 1 10 1 39 1 110 1 111 2 205 1 68 1 96 1 254 1 325 4 15 2 364 1 181 1 209 4 367 1 256 1 162 1 305 1 306 2 307 2 258 2 21 2 259 1 184 1 263 1 187 2 80 1 191 1 192 1 147 1 353 4 28 4 
194 1 35 1 3 2 337 2 275 1 292 1 355 1 219 1 222 1 108 1 10 1 39 1 110 1 111 2 205 1 68 1 96 1 254 1 325 4 15 2 364 1 181 1 209 4 367 1 256 1 162 1 305 1 306 2 307 2 258 2 21 2 259 1 184 1 263 1 187 2 80 1 191 1 192 1 147 1 353 4 28 4 
194 1 35 1 3 2 337 2 275 1 292 1 355 1 219 1 296 2 222 1 108 1 10 1 205 1 68 1 96 1 254 1 325 4 75 1 15 2 364 1 181 1 209 4 367 1 256 1 230 1 99 2 162 1 305 1 306 2 21 2 259 1 184 1 311 1 23 2 187 2 80 1 191 1 192 1 147 1 353 4 28 4 
336 2 149 2 242 1 292 1 244 1 322 2 249 4 251 1 205 1 114 1 73 2 159 1 207 1 181 1 97 1 17 8 369 2 331 1 98 1 231 2 234 1 333 1 49 1 167 1 238 1 100 1 143 1 168 2 285 1 169 2 264 7 102 2 121 2 122 1 377 1 55 2 173 2 30 3 57 8 
336 1 84 1 86 1 292 1 244 1 322 1 249 2 251 1 13 1 205 1 159 1 181 1 97 1 369 1 231 2 372 1 168 1 374 1 121 1 186 1 379 1 265 1 173 1 125 1 
336 1 34 1 196 2 86 1 197 2 244 3 357 1 359 2 224 1 322 1 249 2 159 3 160 1 117 1 304 1 369 1 231 6 349 1 50 1 168 1 143 1 352 1 121 1 186 1 173 1 27 1 
336 2 242 1 174 2 34 2 150 1 86 1 176 2 197 1 244 4 359 1 248 1 224 7 108 1 109 1 322 2 249 4 13 2 204 1 159 6 369 2 231 10 372 1 236 1 260 1 50 7 168 1 351 1 374 1 121 2 186 2 173 2 125 2 
336 1 149 1 242 1 34 1 127 1 60 1 292 2 244 1 294 1 359 1 322 1 249 2 251 1 279 1 253 1 205 2 116 1 159 1 181 1 97 1 17 1 369 1 231 2 372 1 234 1 167 1 51 1 168 1 169 1 264 1 101 1 102 1 121 1 55 1 56 1 173 1 30 1 57 1 
336 3 242 1 149 1 196 2 104 1 292 3 197 4 244 8 294 2 7 2 295 1 249 6 157 2 251 1 13 2 204 2 205 3 116 2 159 10 117 1 160 1 118 2 304 1 17 1 167 1 168 3 264 1 169 2 352 1 121 3 173 3 125 2 27 1 30 2 34 5 86 3 357 1 359 2 224 5 322 3 181 1 97 1 369 3 231 18 44 2 182 2 234 1 372 1 50 5 51 2 101 1 374 2 102 2 186 3 55 2 56 2 57 1 
336 1 159 2 34 1 369 1 197 1 231 2 340 1 50 1 224 1 143 1 168 1 322 1 249 2 121 1 186 1 204 1 173 1 125 1 
336 1 4 1 86 1 369 1 231 1 244 1 143 1 168 1 374 1 322 1 249 2 121 1 173 1 
336 1 159 2 34 1 86 1 369 1 244 1 231 3 50 1 224 1 143 1 168 1 374 1 322 1 249 2 121 1 186 1 13 1 173 1 125 1 
336 1 159 2 34 1 369 1 197 1 231 2 98 1 340 1 50 1 224 1 168 1 322 1 249 2 121 1 186 1 204 1 173 1 125 1 
336 1 4 1 86 1 369 1 231 1 98 1 244 1 168 1 374 1 322 1 249 2 121 1 173 1 
336 1 159 2 34 1 86 1 369 1 244 1 231 3 98 1 50 1 224 1 168 1 374 1 322 1 249 2 121 1 186 1 13 1 173 1 125 1 
336 1 159 2 34 1 86 1 369 1 244 1 231 3 50 1 224 1 168 1 374 1 322 1 249 2 121 1 186 1 13 1 173 1 125 1 
336 1 149 1 242 1 292 1 244 1 294 1 359 1 322 1 249 2 205 1 116 1 159 1 17 1 369 1 231 2 44 1 167 1 51 1 168 1 169 1 264 1 102 1 121 1 55 1 56 1 173 1 57 1 30 1 
336 1 149 1 242 1 292 1 244 1 294 1 319 1 359 1 322 1 249 2 205 1 116 1 159 1 42 1 17 1 369 1 231 2 167 1 168 1 169 1 264 1 102 1 121 1 55 1 25 1 173 1 57 1 30 1 
336 1 159 2 34 1 86 1 369 1 244 1 231 3 372 1 50 1 224 1 168 1 374 1 322 1 249 2 121 1 186 1 13 1 173 1 125 1 
336 1 34 1 86 1 292 1 244 1 294 1 224 1 322 1 249 2 13 1 205 1 116 1 159 2 118 1 17 1 369 1 231 3 44 1 333 1 50 1 51 1 168 1 374 1 169 1 264 1 186 1 102 1 121 1 55 1 56 1 125 1 173 1 57 1 30 1 
336 1 34 1 86 1 197 1 292 1 244 2 224 1 322 1 249 2 251 1 13 1 204 1 205 1 159 2 181 1 97 1 369 1 231 4 372 1 50 1 168 1 350 1 374 1 121 1 186 1 379 1 265 1 173 1 125 1 
336 3 174 4 196 1 86 7 36 2 176 4 131 1 197 8 244 17 357 1 276 1 322 3 11 1 249 6 13 7 323 1 204 7 300 1 324 1 159 27 363 1 117 1 160 1 16 1 255 3 304 1 231 44 166 1 373 1 260 2 351 2 374 6 352 1 240 1 121 3 186 8 286 1 288 1 146 1 173 3 125 7 27 1 213 1 
336 2 174 2 86 2 36 2 176 2 131 1 197 1 244 9 276 1 133 1 322 2 11 1 249 4 13 3 204 1 323 2 300 1 324 1 159 14 363 2 16 1 255 4 231 23 166 1 373 1 374 2 121 2 186 3 286 1 146 1 173 2 125 3 213 1 
336 3 196 1 197 9 244 20 8 1 249 6 11 1 13 7 204 8 300 1 159 29 160 1 117 1 16 1 255 4 304 1 166 1 260 2 351 2 352 1 121 3 125 7 173 3 27 1 213 1 174 5 86 8 176 5 36 3 131 1 357 1 276 1 322 3 133 1 323 1 324 1 363 2 231 49 373 1 374 7 186 8 240 1 286 1 146 1 
336 3 196 1 197 8 244 18 249 6 11 1 13 7 204 7 300 1 159 28 160 1 117 1 16 1 255 4 304 1 166 1 260 2 351 2 352 1 121 3 125 7 173 3 27 1 213 1 174 4 86 7 176 4 36 2 131 1 357 1 276 1 322 3 133 1 323 1 324 1 363 1 231 46 373 1 374 6 186 8 240 1 286 1 146 1 
336 2 174 4 196 1 86 8 36 2 176 4 131 1 197 7 244 18 357 1 276 1 133 1 322 2 11 1 249 4 13 7 323 1 204 6 300 1 324 1 159 27 363 1 117 1 160 1 16 1 255 4 304 1 231 45 166 1 373 1 260 2 351 2 374 7 352 1 121 2 186 8 286 1 146 1 173 2 125 7 27 1 213 1 
119 1 22 1 301 1 273 1 19 1 93 1 20 1 316 1 225 1 115 1 
278 1 200 1 
332 1 22 1 301 1 2 1 273 1 346 1 20 1 225 1 115 1 
120 1 172 1 
220 1 226 1 152 1 
325 1 137 1 301 1 362 1 364 1 273 1 368 1 19 1 198 1 20 1 316 1 22 1 65 1 24 2 93 1 225 1 28 1 115 1 
325 1 137 1 301 1 362 1 364 1 273 1 368 1 19 1 198 1 20 1 316 1 22 1 65 1 24 2 93 1 225 1 28 1 115 1 
325 1 137 1 301 1 362 1 364 1 273 1 368 1 19 1 198 1 20 1 316 1 22 1 65 1 24 2 93 1 225 1 28 1 115 1 
120 1 172 1 152 1 
120 1 172 1 152 1 
220 1 226 1 
220 1 226 1 152 1 
291 1 45 1 
273 1 292 2 291 1 200 1 359 1 223 1 278 1 361 1 251 2 205 2 225 1 41 1 115 1 137 1 325 1 301 1 181 2 97 2 368 1 329 1 20 1 45 1 22 1 375 1 24 1 28 1 148 1 
336 1 242 1 292 2 62 1 244 1 105 1 322 1 249 2 205 2 73 2 159 1 207 1 181 2 17 2 369 1 231 2 141 1 372 1 167 1 168 1 169 1 264 2 144 1 102 1 121 1 55 1 122 1 190 1 173 1 30 1 57 2 
149 1 32 1 17 1 331 1 202 1 90 1 203 1 169 1 264 1 102 1 55 1 377 1 30 1 57 1 
136 1 32 1 214 1 103 1 43 1 17 1 163 1 211 1 38 2 202 1 238 1 262 1 264 1 169 1 102 1 112 1 40 1 57 1 
136 1 32 1 214 1 103 1 43 1 17 2 163 1 211 1 333 1 38 2 202 1 238 1 262 1 169 1 264 2 102 1 112 1 40 1 57 2 
136 1 32 1 214 1 43 1 17 1 163 1 211 1 38 2 238 1 262 1 264 1 169 1 170 1 102 1 112 1 40 1 57 1 
343 1 
194 1 364 1 35 1 330 1 162 1 89 1 259 1 222 1 191 1 96 1 
364 1 215 1 86 1 307 1 259 1 212 1 296 2 374 1 186 1 13 1 125 1 96 2 
325 1 364 1 35 1 337 1 28 1 353 1 
194 2 354 1 149 2 126 2 59 1 271 2 337 2 217 1 199 1 153 2 222 2 96 2 72 1 325 3 206 1 17 4 331 1 162 2 259 2 169 1 264 4 102 1 55 1 377 1 191 1 30 1 57 4 353 4 28 3 
336 1 242 1 149 1 292 3 244 1 294 1 359 1 322 1 249 2 66 1 251 2 205 3 116 1 181 2 208 1 97 2 17 1 369 1 231 1 44 1 51 1 168 1 264 1 169 1 121 1 102 1 55 1 56 1 173 1 265 2 57 1 30 1 
194 1 126 1 364 4 215 2 35 2 162 1 307 2 153 1 259 1 212 2 296 4 222 1 191 1 27 1 96 2 
259 1 349 1 364 1 35 1 330 1 96 1 89 1 
194 1 35 1 337 1 296 1 222 1 110 1 111 1 96 1 325 1 364 2 162 1 307 1 258 1 259 1 191 1 353 1 28 1 
194 4 149 1 337 3 339 1 199 1 153 1 294 3 106 2 247 2 296 8 9 2 12 2 157 2 158 2 13 2 303 3 17 3 345 2 162 4 307 4 259 7 212 4 169 3 264 3 80 2 125 2 124 2 30 10 353 5 28 5 126 2 271 1 35 2 215 4 86 2 89 1 222 4 134 2 180 1 96 8 325 5 138 1 229 2 364 6 330 1 333 1 53 1 374 2 102 4 186 2 55 3 191 4 57 3 
194 1 174 1 215 3 86 2 36 1 176 1 296 4 222 1 13 2 324 1 96 4 364 2 162 1 307 2 166 1 259 4 212 3 374 2 186 2 286 1 191 1 146 1 125 2 213 1 
194 1 0 1 86 1 292 1 342 1 357 1 222 1 108 1 251 1 205 1 96 2 227 1 228 2 325 1 181 1 117 1 208 1 97 1 162 1 259 2 263 1 352 1 186 2 26 1 191 1 124 1 265 1 28 1 
22 1 92 1 273 1 93 1 45 1 
22 1 273 1 252 1 
22 1 273 1 252 1 
22 1 273 1 252 1 
268 1 22 1 273 1 
268 1 22 1 273 1 
268 1 22 1 273 1 
22 1 273 1 
20 1 225 1 
336 1 159 5 117 2 16 1 196 3 86 2 197 5 231 10 244 5 357 1 322 1 352 2 121 1 249 2 186 2 204 2 26 1 173 1 
336 1 159 2 16 1 197 1 231 2 322 1 249 2 121 1 186 1 204 1 173 1 125 1 
336 1 159 2 16 1 86 1 197 1 244 1 231 3 374 1 322 1 249 2 121 1 186 1 13 1 204 1 173 1 125 1 
336 3 159 1 117 1 16 1 196 1 131 1 197 2 244 2 231 3 322 3 352 1 250 1 240 1 249 6 121 3 204 1 173 3 
336 5 174 4 196 4 86 6 36 1 176 4 177 1 131 2 197 11 244 17 218 1 357 2 322 5 250 1 249 10 13 4 204 7 159 20 117 3 160 1 16 1 304 1 231 37 260 1 261 1 351 1 374 4 352 3 240 1 121 5 186 6 173 5 125 4 27 1 313 1 
336 2 159 4 160 1 117 1 196 2 86 1 304 1 197 3 131 1 244 4 231 8 357 1 322 2 352 1 186 1 249 4 121 2 204 1 173 2 27 1 
159 3 160 1 117 1 196 2 86 1 304 1 197 2 244 3 231 6 357 1 349 1 352 1 186 1 27 1 
336 1 159 2 86 1 244 1 231 3 218 1 374 1 322 1 249 2 121 1 186 1 13 1 173 1 125 1 
174 2 159 6 86 2 36 1 176 2 197 2 244 4 231 10 260 1 374 2 351 1 186 2 13 2 204 2 125 2 
336 2 174 2 196 5 86 4 176 2 197 10 131 2 244 14 357 2 109 1 322 2 249 4 250 1 13 2 204 5 159 14 117 4 160 1 304 1 231 28 260 1 351 1 374 2 352 4 186 4 121 2 26 1 125 2 173 2 27 1 
174 1 231 1 244 1 
159 1 176 1 231 1 
159 3 86 1 197 1 244 2 231 5 374 1 186 1 157 1 13 1 204 1 125 1 
336 1 174 1 86 2 176 1 36 1 197 1 244 4 322 1 249 2 13 2 204 1 324 1 159 6 16 1 231 10 166 1 374 2 121 1 186 2 286 1 146 1 173 1 125 2 213 1 
159 3 117 1 196 1 86 1 197 2 231 6 244 3 357 1 352 1 186 1 204 1 
336 1 159 1 117 1 160 1 196 1 304 1 197 2 131 1 244 2 231 3 352 1 322 1 250 1 249 2 121 1 204 1 173 1 
336 1 174 1 196 2 86 1 176 1 36 1 197 2 244 4 357 1 322 1 249 2 324 1 159 4 160 1 117 1 16 1 304 1 231 8 352 1 186 1 121 1 173 1 27 1 
336 2 174 2 196 2 86 1 36 1 176 1 197 3 244 5 218 1 357 1 322 2 249 4 13 1 204 1 324 1 159 6 117 1 160 1 16 1 304 1 231 11 351 1 352 1 121 2 186 2 173 2 125 1 27 1 
336 2 174 1 86 2 176 1 36 1 197 1 244 4 218 1 322 2 249 4 13 2 204 1 324 1 159 6 16 1 231 10 166 1 374 2 121 2 186 2 286 1 146 1 173 2 125 2 213 1 
336 3 174 1 196 2 86 2 176 1 36 1 131 1 197 4 244 6 218 1 357 1 322 3 249 6 13 2 204 2 324 1 159 10 117 1 160 1 16 1 304 1 231 16 166 1 374 1 352 1 121 3 186 3 286 1 146 1 173 3 125 2 27 1 213 1 
336 1 174 1 196 2 86 1 176 1 36 1 197 2 244 4 357 1 322 1 249 2 324 1 159 4 160 1 117 1 16 1 304 1 231 8 352 1 186 1 121 1 173 1 27 1 
336 1 174 1 86 2 176 1 36 1 197 1 244 4 322 1 249 2 13 2 204 1 324 1 159 6 16 1 231 10 166 1 374 2 121 1 186 2 286 1 146 1 173 1 125 2 213 1 
336 3 174 1 86 1 36 1 176 1 131 1 197 1 244 3 218 1 322 3 249 6 13 2 204 1 324 1 159 7 16 1 231 10 166 1 374 1 121 3 186 2 286 1 146 1 173 3 125 2 213 1 
336 3 174 1 86 1 36 1 176 1 131 1 197 2 244 3 322 3 249 6 13 2 204 2 324 1 159 7 16 1 231 10 166 1 374 1 121 3 240 1 186 2 286 1 146 1 173 3 125 2 213 1 
159 3 160 2 117 3 196 3 86 1 304 1 197 6 244 4 231 7 357 1 352 3 186 1 204 3 
336 3 174 1 86 1 36 1 176 1 131 1 197 1 244 3 322 3 249 6 13 2 204 1 324 1 159 7 16 1 231 10 166 1 374 1 121 3 240 1 186 2 286 1 146 1 173 3 125 2 213 1 
359 1 181 1 326 1 292 1 299 1 205 1 219 1 
74 1 326 1 181 1 292 1 309 1 88 1 219 1 312 1 359 1 135 1 299 1 205 1 
31 1 149 1 17 4 331 1 233 1 333 1 264 4 169 1 102 1 377 1 55 1 57 4 30 1 
335 1 271 1 243 1 17 2 183 1 294 1 356 1 264 2 169 1 102 2 55 1 241 1 57 2 30 1 
38 1 149 1 43 1 169 1 264 1 102 1 17 1 163 1 40 1 57 1 
207 1 17 2 333 1 238 1 264 2 169 1 102 1 55 1 190 1 57 2 30 1 
31 1 149 1 207 1 271 1 17 5 331 1 333 1 264 4 285 1 169 2 102 2 377 1 55 2 114 1 57 5 30 3 
31 1 149 1 207 1 271 1 6 1 17 5 331 1 333 1 264 4 169 2 102 2 377 1 55 2 114 1 57 5 30 3 
149 1 349 1 169 1 264 1 102 1 17 1 55 1 331 1 377 1 30 1 57 1 
149 1 181 1 97 1 17 1 292 2 294 1 234 1 359 1 51 1 264 1 169 1 102 1 55 1 251 1 205 2 30 1 116 1 57 1 
229 1 181 2 271 1 97 1 256 1 17 1 292 2 294 2 234 1 184 1 359 1 108 1 51 1 264 1 169 1 102 1 158 1 55 2 251 2 205 2 30 3 116 1 57 1 
229 1 181 2 271 1 97 1 256 1 17 2 292 2 233 1 294 2 234 1 319 1 184 1 359 1 108 1 264 2 169 1 102 1 158 1 55 2 251 2 205 2 30 3 116 1 57 2 
325 2 149 1 270 1 229 1 364 1 35 1 271 1 303 1 17 3 233 1 78 1 294 1 264 3 169 1 102 1 134 1 158 1 55 1 80 1 28 2 57 3 30 4 353 1 
325 2 149 1 229 1 364 1 35 1 271 1 303 1 17 3 233 1 294 1 264 3 9 1 169 1 102 1 134 1 158 1 55 1 80 1 28 2 57 3 30 4 353 1 
100 1 169 1 264 1 102 1 17 1 57 1 
73 1 335 1 149 2 138 1 207 1 17 7 142 1 294 1 333 1 49 1 356 1 238 1 100 1 285 1 264 6 169 2 102 3 55 2 114 1 57 7 30 3 
336 2 34 1 196 2 86 1 197 2 292 2 244 3 294 1 105 1 7 1 357 1 359 2 224 1 322 2 249 4 251 1 205 2 116 1 159 3 181 1 117 1 160 1 118 1 97 1 304 1 369 2 17 1 231 6 44 1 372 1 234 1 333 1 50 1 168 2 51 1 169 1 264 1 352 1 186 1 102 1 121 2 55 1 56 1 173 2 27 1 30 1 57 1 
194 2 149 1 35 1 337 1 199 1 89 1 106 1 247 1 222 2 9 1 134 1 96 1 325 3 364 1 303 1 17 1 330 1 345 1 162 2 259 1 264 1 375 1 191 2 80 1 57 1 28 3 30 2 353 2 
138 1 17 2 294 1 333 1 100 1 264 2 169 1 102 2 134 1 55 1 180 1 57 2 30 2 
149 1 181 1 97 1 17 1 292 2 294 1 234 1 319 1 359 1 264 1 169 1 102 1 55 1 251 1 205 2 30 1 116 1 57 1 
335 1 138 1 271 1 17 1 142 1 294 1 356 1 264 1 169 1 102 2 55 1 57 1 30 1 
359 1 221 1 5 1 365 1 287 1 
325 2 364 1 35 1 83 1 365 1 5 2 256 1 367 1 130 1 245 1 184 1 359 1 221 2 108 1 375 1 287 2 123 1 80 1 28 2 
181 1 365 1 292 1 62 1 141 1 221 1 144 1 287 1 205 1 
245 1 365 1 123 1 
358 1 1 1 344 1 366 1 376 1 46 1 282 1 267 1 
1 1 344 1 216 1 139 1 366 3 46 2 282 4 164 1 154 2 348 1 358 2 91 1 376 4 298 1 
1 1 327 1 344 1 366 1 46 1 282 2 341 1 154 1 358 1 376 2 94 1 267 1 
1 1 82 1 344 1 366 1 139 2 46 1 282 3 348 1 358 1 376 3 298 2 267 1 
366 2 289 1 71 2 310 1 
1 1 344 1 328 1 376 1 282 1 267 1 
14 1 358 1 1 1 344 1 366 1 376 2 46 1 282 2 154 1 267 1 
87 1 
358 1 1 1 344 1 366 1 376 1 46 1 282 1 267 1 
14 1 1 1 344 1 366 1 46 1 282 3 154 1 358 1 376 3 298 1 267 1 
216 1 366 1 91 1 164 1 
366 1 46 1 
358 1 349 1 366 1 46 1 
358 1 1 1 344 1 366 1 376 1 46 1 282 1 
58 1 376 1 308 1 
1 1 344 1 366 1 139 1 46 1 282 3 201 1 348 1 358 1 376 3 298 2 267 1 
358 1 1 1 344 1 366 1 376 2 281 1 46 1 282 2 154 1 
1 1 344 1 43 1 366 1 282 1 38 1 91 1 376 1 334 1 112 1 267 1 
1 1 344 1 366 1 376 1 46 1 282 1 267 1 
358 1 1 1 344 1 376 1 46 2 282 1 267 1 
1 2 344 2 366 1 129 1 61 1 46 1 282 2 107 1 376 2 267 1 
14 1 1 1 344 1 216 1 366 2 46 1 282 3 165 1 154 2 358 1 91 1 376 3 267 1 
1 1 214 1 344 1 43 1 366 1 46 1 282 2 154 1 358 1 38 2 79 1 376 2 112 1 40 1 267 1 
1 2 344 2 216 1 366 2 281 1 46 1 282 4 154 2 358 1 91 1 376 4 266 1 267 1 

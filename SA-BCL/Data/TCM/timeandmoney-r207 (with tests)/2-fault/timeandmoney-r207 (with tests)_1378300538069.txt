#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 237 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (262,264) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 237 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 186 2 1 3 34 1 53 9 303 5 73 1 10 2 133 1 12 1 224 1 59 1 332 2 62 2 285 2 15 1 88 9 202 4 229 1 114 6 184 2 340 1 236 1 20 1 292 1 238 1 207 1 365 1 
0 2 186 2 1 3 34 1 53 9 303 5 73 1 10 2 133 1 12 1 224 1 59 1 332 2 62 2 15 1 285 2 88 9 202 4 229 1 114 6 184 2 340 1 236 1 20 1 292 1 238 1 207 1 365 1 
0 2 186 2 1 4 34 1 53 10 303 6 73 1 10 2 133 1 12 1 224 1 59 1 332 2 62 2 15 1 285 2 88 10 202 5 229 1 114 7 184 2 340 1 236 1 20 1 292 1 238 1 207 1 365 1 
0 2 186 2 1 2 34 1 53 7 303 4 73 1 10 2 133 1 12 1 224 1 59 1 332 2 62 2 15 1 285 1 88 7 202 3 229 1 114 4 184 2 236 1 20 1 292 1 238 1 207 1 365 1 
0 1 62 1 1 1 186 1 285 2 88 4 202 2 34 1 114 3 53 4 184 1 303 3 340 1 236 1 292 1 238 1 10 1 133 1 
224 1 332 1 0 1 146 1 62 1 186 1 88 2 213 1 34 1 53 2 303 1 184 1 236 1 153 1 133 1 12 1 
332 1 0 2 186 2 15 1 1 1 88 3 202 1 34 1 114 1 53 3 303 2 236 1 133 1 
332 1 0 2 62 1 285 2 186 2 15 1 1 3 88 9 171 1 202 4 34 1 114 7 53 9 184 1 303 5 340 1 73 1 236 1 292 1 10 1 238 1 207 1 221 1 133 1 
332 1 0 2 62 1 285 2 186 2 15 1 1 3 88 9 171 1 202 4 34 1 114 7 53 9 184 1 303 5 340 1 73 1 236 1 292 1 10 1 238 1 207 1 221 1 133 1 
193 1 237 1 323 1 
148 1 245 2 323 1 
185 2 216 1 353 2 21 2 373 2 219 2 56 2 263 1 
185 2 208 1 31 1 210 1 211 2 370 2 70 1 5 2 189 1 6 1 274 1 216 1 215 1 37 1 249 1 152 1 373 2 195 1 277 1 219 3 56 2 77 1 222 1 223 1 255 2 198 1 353 2 85 1 263 1 315 1 291 2 116 1 21 3 117 1 96 1 293 1 143 1 
185 1 93 1 353 1 21 1 373 1 219 1 56 1 263 1 298 1 128 1 
353 1 14 1 270 1 323 1 128 1 338 1 36 1 218 1 204 1 193 1 21 1 75 1 219 1 82 1 
185 1 353 1 14 1 270 1 323 1 128 1 338 2 218 1 193 1 373 1 21 1 75 1 56 1 219 1 82 2 
338 1 169 1 296 1 212 1 82 1 
338 2 296 1 351 1 193 1 212 1 323 1 136 1 82 2 
338 1 212 1 82 1 
185 1 353 1 296 1 298 1 263 1 128 1 338 1 93 1 246 1 373 1 21 1 56 1 219 1 82 1 
323 1 
338 2 296 1 351 1 193 1 212 1 157 1 323 1 82 2 
296 2 283 1 369 1 32 1 212 2 17 2 323 1 337 1 338 5 190 2 234 1 341 1 351 1 193 1 24 2 381 1 266 1 294 1 82 5 
216 1 237 1 
185 1 216 2 353 2 373 1 21 2 2 1 56 1 219 2 309 1 
264 1 375 1 71 1 
311 1 216 1 79 1 128 1 
185 1 320 1 353 1 211 1 370 1 70 1 189 1 315 1 274 1 291 1 37 1 116 1 373 1 21 2 96 1 25 1 219 2 77 1 375 1 143 1 
185 4 353 5 320 1 356 1 2 1 216 1 138 1 204 1 22 1 373 4 21 5 25 2 219 5 56 1 
185 2 93 1 353 2 129 1 21 2 373 2 219 2 128 1 
185 3 216 1 353 3 21 3 373 3 25 1 56 1 219 3 
185 1 93 1 353 1 21 1 373 1 219 1 128 1 
185 1 353 1 21 1 373 1 2 1 219 1 56 1 309 1 128 1 
185 3 320 1 31 1 210 1 270 1 211 1 170 1 2 1 370 1 70 1 5 2 189 1 6 1 128 1 274 1 216 1 215 1 218 1 37 1 249 1 152 1 75 1 373 3 195 1 277 1 77 1 56 2 219 4 222 1 82 1 255 1 198 1 353 3 14 1 263 1 156 1 315 1 338 1 291 1 116 1 21 4 96 1 25 1 143 1 
185 1 216 1 353 2 204 1 22 1 21 2 373 1 25 1 219 2 
185 3 320 1 353 3 14 1 270 1 2 1 156 1 323 1 128 1 338 1 218 1 373 3 21 3 75 1 25 2 325 1 56 1 219 3 82 1 
185 2 353 2 2 1 373 2 21 2 25 1 264 1 56 1 219 2 375 1 
211 1 370 1 70 1 315 1 189 1 274 1 216 1 291 1 37 1 116 1 21 1 96 1 219 1 77 1 143 1 
211 1 370 1 70 1 315 1 189 1 216 1 291 1 304 1 37 1 116 1 21 1 96 1 219 1 220 1 143 1 
208 2 67 1 31 2 145 1 210 1 188 1 125 1 5 2 6 1 71 2 215 1 249 1 152 1 277 1 375 2 329 1 132 1 255 4 61 1 262 1 18 1 139 1 264 2 165 1 
185 1 353 1 129 1 270 1 21 1 373 1 219 1 128 1 
200 1 273 1 
200 1 273 1 
357 1 26 1 
357 1 26 1 
357 1 26 1 
200 1 131 1 273 1 
200 1 131 1 273 1 
200 1 347 1 273 1 
200 2 363 1 357 1 26 1 141 1 273 2 
200 1 131 1 273 1 
199 1 200 1 273 1 
199 1 200 1 273 1 
199 1 200 1 273 1 
185 2 214 1 347 1 273 1 172 1 216 1 300 1 74 1 373 2 305 1 219 2 180 1 82 1 257 1 312 1 353 2 200 1 335 1 112 1 158 1 338 1 21 2 27 1 142 1 
200 2 90 1 346 1 112 2 214 2 149 1 323 1 158 2 273 2 172 1 338 2 74 3 175 2 54 1 305 2 80 1 141 1 319 1 82 2 
184 1 62 1 10 1 
184 1 62 1 153 1 
121 1 103 1 62 3 153 1 10 2 42 1 
121 1 331 1 62 2 153 1 10 1 42 1 
121 2 62 2 153 1 10 1 42 1 
67 1 296 4 343 2 148 1 212 1 245 3 4 1 323 2 190 1 300 1 301 2 351 1 193 1 328 1 81 1 180 1 82 5 283 2 111 2 17 1 18 1 316 1 338 5 341 3 139 1 23 1 24 1 46 1 165 1 294 1 120 1 142 1 
48 1 67 3 169 5 296 7 343 6 242 1 244 1 148 3 212 6 245 9 4 2 323 5 190 2 372 1 301 6 7 5 351 1 193 1 55 1 328 1 180 4 81 2 82 9 283 6 17 2 18 3 337 1 338 9 341 8 139 3 163 1 24 2 165 3 294 1 120 3 
67 1 296 2 343 2 148 2 245 4 4 1 323 3 190 1 301 2 193 1 81 1 180 1 82 3 283 2 111 1 17 1 18 1 337 1 316 1 338 3 341 3 139 1 24 1 46 1 165 1 120 1 
67 2 296 3 343 4 244 1 148 3 245 7 4 1 323 4 190 1 372 1 301 4 193 1 81 1 180 2 82 4 283 4 111 2 17 1 18 2 337 1 316 1 338 4 341 5 139 2 163 1 24 1 46 1 165 2 120 2 
321 1 237 1 189 1 
288 1 189 1 
123 1 
70 1 189 1 315 1 
256 1 189 1 
70 1 189 1 
321 2 70 1 89 1 39 1 189 3 315 1 
208 8 67 3 269 1 31 7 168 2 240 1 345 2 125 4 51 2 371 1 13 1 255 15 84 1 154 1 61 5 287 2 18 3 362 1 
208 8 269 3 67 3 31 7 168 2 240 1 345 2 125 4 51 2 371 1 13 1 255 15 84 1 154 1 61 7 287 2 18 3 362 1 
269 1 208 8 67 3 31 7 168 2 240 1 345 2 125 4 51 2 371 1 13 1 255 15 84 1 154 1 61 5 287 2 18 3 43 1 362 1 
367 1 208 21 67 6 269 7 31 20 168 3 210 1 240 1 345 2 125 7 5 2 51 3 6 1 371 2 215 1 249 1 178 1 279 1 307 1 13 1 282 4 255 41 84 2 154 1 61 14 110 1 87 3 287 3 18 6 379 1 113 1 362 1 139 3 165 3 120 3 
67 3 208 9 269 2 31 8 168 2 210 2 240 1 345 2 125 5 5 4 51 2 6 2 215 2 371 1 249 2 307 1 13 1 255 17 84 1 154 1 260 1 61 7 287 2 18 3 230 1 
0 1 211 1 186 1 370 1 34 1 53 2 103 1 303 1 248 1 153 1 10 1 278 1 133 1 109 1 332 1 134 1 63 1 62 2 355 1 88 2 114 1 291 1 184 1 236 1 116 1 96 1 98 1 119 1 140 1 295 1 
0 1 211 1 186 1 370 1 72 1 103 1 53 3 303 1 302 1 153 1 10 1 278 1 133 1 109 1 332 1 63 1 62 2 355 1 88 3 92 1 114 2 291 1 184 1 236 1 116 1 96 1 98 1 119 1 140 1 295 1 
211 1 370 1 72 1 53 2 103 1 303 1 302 1 153 1 10 1 133 1 109 1 332 1 63 1 62 2 355 1 88 2 114 2 291 1 184 1 236 1 116 1 96 1 98 1 119 1 295 1 
332 2 225 1 0 1 334 1 181 1 63 2 186 1 211 1 50 1 88 1 370 1 70 1 3 1 189 1 92 1 291 1 53 1 37 1 116 1 96 1 98 2 57 1 295 2 
0 1 211 1 186 1 370 1 34 1 53 1 103 1 302 1 153 1 10 1 278 1 109 1 332 1 134 1 63 1 62 2 355 1 88 1 291 1 184 1 116 1 96 1 98 1 119 1 140 1 295 1 
361 1 
241 1 50 1 148 2 245 2 189 1 190 1 349 2 351 3 193 1 9 1 108 1 353 1 259 2 14 1 358 2 201 1 17 1 359 1 159 1 162 1 204 1 116 1 21 1 24 1 267 4 29 1 211 2 270 1 370 2 70 1 212 6 124 2 323 2 128 1 173 2 36 1 218 1 37 2 75 1 78 1 219 1 179 1 81 1 82 5 334 1 283 2 336 2 286 1 338 5 291 2 94 2 341 2 96 1 294 1 239 1 
353 1 259 1 14 1 270 1 201 1 212 2 157 1 128 1 338 3 36 1 218 1 204 1 351 1 21 1 75 1 9 1 219 1 179 1 267 2 29 1 82 3 108 1 
353 1 14 1 270 1 201 1 212 1 157 1 323 1 128 1 338 3 36 1 349 1 218 1 204 1 351 1 193 1 21 1 75 1 9 1 219 1 179 1 267 3 29 1 82 3 108 1 
270 1 212 2 124 1 323 1 128 1 36 1 218 1 349 1 351 1 75 1 193 1 9 1 219 1 179 1 108 1 82 3 353 1 259 1 14 1 201 1 157 1 338 3 204 1 21 1 267 3 29 1 
241 1 148 2 190 1 349 4 351 3 193 5 9 1 308 1 108 1 353 1 259 4 14 1 201 1 358 2 17 1 157 1 115 1 162 1 204 1 21 1 24 1 267 6 29 1 167 1 270 1 212 7 124 4 323 5 128 1 173 2 36 1 218 1 75 1 219 1 179 1 280 1 82 5 283 1 336 2 233 1 338 5 94 2 341 1 294 1 
241 1 148 2 245 2 190 1 349 2 351 2 193 1 9 1 108 1 353 1 259 2 14 1 201 1 358 2 17 1 159 1 162 1 204 1 21 1 24 1 267 4 29 1 270 1 212 4 124 2 323 2 128 1 173 2 36 1 218 1 75 1 219 1 179 1 82 4 283 1 336 2 338 4 94 2 341 1 294 1 
167 1 241 1 270 1 212 4 148 2 124 2 323 1 128 1 173 2 190 1 36 1 349 2 218 1 351 2 193 1 75 1 9 1 219 1 179 1 108 1 82 4 353 1 259 2 14 1 283 1 358 2 336 2 201 1 17 1 233 1 338 4 115 1 162 1 94 2 204 1 341 1 21 1 24 1 294 1 267 4 29 1 
167 1 241 1 270 1 212 4 148 2 124 2 323 1 128 1 173 2 190 1 36 1 349 2 218 1 351 2 193 1 75 1 9 1 219 1 179 1 108 1 82 4 353 1 259 2 14 1 283 1 358 2 336 2 201 1 17 1 233 1 338 4 115 1 162 1 94 2 204 1 341 1 21 1 24 1 294 1 267 4 29 1 
241 1 270 1 212 4 297 2 124 2 245 2 323 1 128 1 173 2 190 1 36 1 191 2 349 2 218 1 351 2 193 1 105 1 75 1 9 1 219 1 326 1 179 1 108 1 82 4 58 1 353 1 259 2 14 1 283 1 336 2 201 1 17 1 338 4 115 1 204 1 341 1 21 1 24 1 294 1 267 4 29 1 
167 1 241 1 270 1 148 2 212 5 124 3 323 1 128 1 173 2 190 1 36 1 218 1 349 3 351 2 193 1 75 1 9 1 219 1 179 1 280 1 108 1 82 4 353 1 259 3 14 1 283 1 358 2 336 2 201 1 17 1 233 1 338 4 115 1 162 1 94 2 204 1 341 1 21 1 24 1 294 1 267 5 29 1 
167 1 241 1 270 1 148 2 212 5 124 3 323 1 128 1 173 2 190 1 36 1 218 1 349 3 351 2 193 1 75 1 9 1 219 1 179 1 280 1 108 1 82 4 353 1 259 3 14 1 283 1 358 2 336 2 201 1 17 1 233 1 338 4 115 1 162 1 94 2 204 1 341 1 21 1 24 1 294 1 267 5 29 1 
241 1 270 1 212 4 297 2 124 2 245 2 323 1 128 1 173 2 190 1 36 1 191 2 349 2 218 1 351 2 193 1 75 1 105 1 9 1 219 1 179 1 108 1 82 4 353 1 259 2 14 1 283 1 336 2 201 1 17 1 159 1 338 4 204 1 341 1 21 1 24 1 294 1 267 4 29 1 
67 1 208 3 31 3 168 1 210 1 240 1 345 1 125 2 5 2 51 1 6 1 71 1 215 1 216 2 249 1 152 1 277 1 375 1 132 1 255 6 154 1 61 2 287 1 18 1 237 1 264 1 
269 1 208 8 67 2 31 6 210 2 147 1 344 1 125 1 5 4 6 2 71 11 216 1 215 2 249 2 152 2 352 1 277 1 374 1 375 11 107 1 178 1 282 3 223 1 198 1 255 14 61 2 87 3 18 1 113 1 139 1 264 4 165 2 120 2 
185 1 320 1 208 1 31 1 210 1 5 2 6 1 216 1 215 1 192 1 249 1 152 1 373 1 277 1 219 1 374 1 330 1 311 1 223 1 60 1 198 1 255 2 353 1 21 1 25 1 264 1 
185 1 240 1 345 2 51 1 5 6 189 2 6 3 152 3 249 3 195 2 13 1 258 1 198 1 255 28 154 1 353 1 61 7 18 5 315 2 116 2 21 3 25 1 264 7 165 2 120 2 268 1 269 1 320 1 67 5 208 14 31 14 168 2 210 3 211 1 370 1 70 2 125 6 128 1 71 7 274 2 216 3 215 3 37 1 373 1 219 3 277 3 77 2 79 1 374 1 375 7 223 1 135 2 287 2 91 2 137 2 291 1 44 2 139 2 96 2 143 2 
185 1 208 1 31 1 210 2 211 8 50 1 370 8 70 2 5 4 189 3 6 2 35 1 215 2 324 1 302 1 37 2 247 1 248 1 373 1 249 2 152 2 219 1 277 2 196 1 132 1 377 1 223 1 255 2 198 1 333 1 353 1 334 1 291 7 116 2 21 1 25 1 96 2 117 2 30 1 
185 1 67 1 208 1 69 1 31 2 210 1 2 1 125 1 5 2 71 1 6 1 215 1 373 1 249 1 152 1 56 1 277 1 219 1 375 1 374 1 255 3 353 1 61 1 18 1 21 1 139 1 264 1 165 1 120 1 
255 2 269 1 67 1 208 2 145 1 61 1 210 1 5 2 71 1 6 1 215 1 152 1 249 1 264 1 277 1 375 1 165 1 132 1 
255 2 31 2 61 1 210 1 188 1 125 1 18 1 5 2 71 1 6 1 215 1 152 1 249 1 139 1 264 1 277 1 375 1 132 1 
208 2 67 1 269 1 31 2 210 1 125 1 5 2 6 1 71 2 215 1 249 1 152 1 277 1 375 2 132 1 255 4 61 2 18 1 139 1 264 2 165 1 120 1 
255 2 269 1 67 1 208 2 145 1 61 1 210 1 5 2 71 1 6 1 215 1 247 1 152 1 249 1 264 1 277 1 375 1 165 1 
255 2 31 2 61 1 210 1 188 1 125 1 18 1 5 2 71 1 6 1 215 1 247 1 152 1 249 1 139 1 264 1 277 1 375 1 
208 2 67 1 269 1 31 2 210 1 125 1 5 2 6 1 71 2 215 1 247 1 249 1 152 1 277 1 375 2 255 4 61 2 18 1 139 1 264 2 165 1 120 1 
255 4 269 1 67 1 208 2 31 2 61 2 210 1 125 1 18 1 5 2 71 2 6 1 215 1 139 1 152 1 249 1 264 2 277 1 375 2 165 1 120 1 
208 1 31 1 210 1 211 1 370 1 70 1 5 2 189 1 6 1 274 1 216 1 215 1 37 1 152 1 249 1 195 1 77 1 219 1 277 1 223 1 255 2 198 1 315 1 291 1 116 1 21 1 96 1 143 1 
208 1 31 1 210 1 211 1 370 1 70 1 5 2 189 1 6 1 216 1 215 1 304 1 37 1 152 1 249 1 219 1 277 1 220 1 223 1 255 2 198 1 315 1 289 1 291 1 116 1 21 1 96 1 143 1 
208 2 67 1 269 1 31 2 210 1 125 1 5 2 6 1 71 2 215 1 249 1 152 1 277 1 374 1 375 2 255 4 61 2 18 1 139 1 264 2 165 1 120 1 
269 1 208 2 67 1 31 2 210 1 211 1 370 1 70 1 125 1 5 2 189 1 71 2 6 1 274 1 215 1 248 1 152 1 249 1 195 1 77 1 219 1 277 1 375 2 255 4 61 2 91 1 18 1 315 1 291 1 116 1 139 1 21 1 96 1 264 2 165 1 120 1 143 1 
185 1 269 1 67 1 208 2 31 1 210 1 2 1 5 2 6 1 71 1 215 1 373 1 249 1 152 1 56 1 277 1 219 1 374 1 375 1 376 1 255 3 353 1 61 1 18 1 139 1 21 1 264 1 165 1 120 1 
208 9 67 3 269 3 31 10 210 2 322 1 125 3 272 2 5 4 102 1 348 1 6 2 215 2 249 2 177 2 306 1 178 1 38 1 282 2 255 19 226 1 61 6 87 1 314 1 18 3 113 1 230 1 139 3 165 3 120 3 
269 2 208 14 67 3 31 12 210 3 322 2 125 2 272 1 5 6 348 2 6 3 215 3 249 3 177 4 276 1 306 1 307 2 38 1 282 2 255 26 61 4 182 1 87 2 314 1 18 2 230 1 113 2 203 1 290 1 139 2 97 1 265 1 165 3 120 3 
240 1 345 1 5 6 51 1 6 3 348 1 249 3 306 1 307 1 255 41 154 1 61 7 314 1 18 5 113 3 203 1 206 1 265 1 165 4 120 4 269 4 67 5 208 20 31 21 168 1 210 3 322 2 125 3 272 1 215 3 177 4 276 1 178 1 38 1 282 4 226 1 182 1 87 3 287 1 230 1 290 1 139 4 97 1 
240 1 345 1 5 8 51 1 6 4 348 1 249 4 306 1 307 2 255 38 154 1 61 7 314 1 18 4 113 3 203 1 206 1 265 1 165 4 120 4 269 3 67 5 208 20 31 18 168 1 210 4 322 2 125 4 272 1 215 4 177 4 276 1 178 1 38 1 282 4 226 1 182 1 87 3 287 1 230 1 290 1 139 3 97 1 
208 27 67 8 269 7 31 25 168 1 210 2 240 1 345 1 322 1 125 6 272 1 51 1 5 4 348 1 6 2 215 2 249 2 352 2 276 1 177 4 306 1 307 1 178 2 38 1 282 4 255 52 154 1 61 13 182 1 87 4 287 1 314 1 18 8 113 2 230 1 203 1 290 1 139 7 97 1 265 1 165 7 120 7 
200 1 205 1 305 1 214 1 112 1 80 1 149 1 141 1 158 1 273 1 
27 1 347 1 
217 1 200 1 16 1 305 1 214 1 112 1 364 1 158 1 273 1 
271 1 131 1 
199 1 317 1 363 1 
200 1 346 1 112 1 214 1 149 1 323 1 158 1 172 1 273 1 338 1 74 2 175 1 54 1 305 1 80 1 141 1 319 1 82 1 
200 1 346 1 112 1 214 1 149 1 323 1 158 1 172 1 273 1 338 1 74 2 175 1 54 1 305 1 80 1 141 1 319 1 82 1 
200 1 346 1 112 1 214 1 149 1 323 1 158 1 172 1 273 1 338 1 74 2 175 1 54 1 305 1 80 1 141 1 319 1 82 1 
363 1 271 1 131 1 
363 1 271 1 131 1 
199 1 317 1 
199 1 317 1 363 1 
312 1 257 1 
185 2 296 1 214 1 347 1 273 1 216 1 300 1 74 1 175 1 373 2 305 1 219 2 180 1 82 1 257 1 312 1 353 2 200 1 86 1 335 1 112 1 158 1 338 1 21 2 27 1 319 1 142 1 
208 1 68 1 122 1 31 1 210 1 211 2 370 2 70 1 5 2 189 1 6 1 35 1 215 1 324 1 152 1 249 1 76 1 277 1 219 2 374 1 253 1 223 1 255 2 198 1 353 2 291 2 116 1 21 2 96 1 117 2 118 1 
109 1 62 2 211 2 370 2 291 2 103 1 184 1 302 1 116 1 248 1 318 1 96 1 153 1 10 1 98 1 119 1 28 1 140 1 11 1 
109 1 62 2 211 1 370 1 126 1 291 1 103 1 184 1 302 1 116 1 318 1 96 1 153 1 10 1 98 1 119 1 140 1 
334 1 211 1 50 1 370 1 70 1 189 1 291 1 37 1 116 1 96 1 98 1 251 1 57 1 11 1 
109 1 62 2 211 1 370 1 291 1 103 1 184 1 302 1 116 1 318 1 96 1 153 1 10 1 98 1 119 1 28 1 140 1 11 1 
40 1 
234 1 341 1 283 1 193 1 369 1 237 1 323 1 
283 1 358 1 212 1 148 1 17 1 245 1 323 2 338 1 190 1 162 1 94 1 351 1 341 1 193 1 24 1 294 1 82 1 
343 6 243 2 148 6 245 12 189 10 190 4 299 2 150 2 301 6 248 1 351 3 193 2 256 2 354 1 17 4 18 2 315 3 116 3 24 4 164 2 165 2 120 2 67 2 368 1 369 1 211 3 321 2 370 3 70 3 212 5 323 8 218 2 37 1 174 1 130 2 327 1 281 2 81 2 82 5 83 2 283 8 89 1 288 3 338 5 291 3 234 1 44 2 341 9 45 2 139 2 96 4 294 4 239 1 144 1 
67 2 343 5 243 1 212 1 148 3 245 6 323 5 127 1 190 2 301 5 351 1 193 2 276 1 81 1 82 1 282 1 83 2 283 5 182 1 87 1 313 1 17 2 18 2 113 1 290 1 338 1 341 8 139 2 24 2 97 1 265 1 294 2 165 2 239 1 120 2 
185 1 67 2 168 1 243 1 345 1 298 1 128 1 190 1 246 1 373 1 219 1 56 1 13 1 82 1 83 2 353 1 283 2 287 1 263 1 17 1 18 1 233 1 338 1 93 1 341 2 21 1 24 1 294 1 
283 1 369 1 17 1 323 1 190 1 234 1 341 1 193 1 24 1 294 1 
83 2 67 2 283 5 343 5 243 1 148 5 245 10 18 2 323 5 301 5 44 1 341 5 139 2 165 2 120 2 
338 1 351 1 193 1 212 1 323 1 82 1 
211 4 50 1 370 4 70 1 212 4 189 1 190 2 37 2 351 2 78 1 327 2 81 2 82 3 334 1 283 2 359 1 17 2 337 1 232 1 338 3 291 4 116 1 341 2 65 1 96 1 24 2 294 1 239 2 144 1 
185 2 31 1 210 1 211 1 370 1 70 1 5 2 189 1 6 1 274 1 216 1 215 1 37 1 249 1 373 2 152 1 195 1 219 3 56 2 77 1 277 1 222 1 255 1 198 1 353 2 263 1 315 1 291 1 116 1 21 3 96 1 143 1 
343 2 283 2 148 2 17 1 245 4 51 1 323 4 190 1 301 2 341 1 193 2 24 1 294 1 239 1 81 1 
33 1 214 1 112 1 
33 1 214 1 112 1 
312 1 214 1 112 1 80 1 342 1 
33 1 214 1 112 1 
19 1 214 1 112 1 
19 1 214 1 112 1 
19 1 214 1 112 1 
214 1 112 1 
200 1 273 1 
269 3 208 9 67 3 31 9 168 2 210 2 240 1 345 2 125 4 5 4 51 1 6 2 215 2 249 2 307 1 13 1 255 18 154 1 61 7 287 2 18 3 
255 6 154 1 67 1 208 3 31 3 168 1 61 2 240 1 287 1 345 1 125 2 18 1 51 1 237 1 
255 4 67 1 208 2 269 1 31 2 61 2 210 1 100 1 125 1 18 1 5 2 6 1 215 1 139 1 249 1 165 1 120 1 
255 7 208 3 67 1 269 1 31 4 61 2 87 1 125 1 18 1 113 1 139 1 178 1 165 1 120 1 282 2 
67 5 208 13 269 2 31 13 168 2 210 1 240 1 147 1 345 2 125 5 51 1 5 2 6 1 215 1 249 1 352 1 178 1 307 1 13 1 282 2 255 26 154 1 61 7 87 2 287 2 18 5 139 2 165 2 120 2 
255 1 31 1 282 1 
255 1 208 1 87 1 
255 6 67 1 208 3 269 1 31 3 61 3 210 1 100 1 18 1 125 2 5 2 6 1 215 1 44 1 249 1 139 1 165 1 120 1 
269 1 208 6 67 2 31 6 210 1 125 1 5 2 6 1 215 1 249 1 276 1 282 1 255 12 61 2 182 1 87 1 18 2 113 1 230 1 290 1 139 2 97 1 265 1 165 2 120 2 
255 6 67 1 208 3 269 1 31 3 168 1 61 2 287 1 345 1 18 1 125 1 
255 3 208 1 269 1 154 1 31 2 61 2 168 1 210 1 240 1 287 1 125 1 5 2 6 1 215 1 151 1 249 1 307 1 
255 10 269 2 208 5 67 2 31 5 168 2 61 5 210 1 287 2 345 1 125 3 18 2 230 1 5 2 6 1 215 1 249 1 13 1 
255 2 67 1 208 2 269 1 61 1 210 1 230 1 5 2 6 1 215 1 249 1 165 1 
255 4 67 1 208 2 269 1 31 2 61 2 210 1 125 1 18 1 230 1 5 2 6 1 215 1 139 1 249 1 165 1 120 1 
255 3 269 1 208 1 226 1 31 2 168 1 61 2 210 3 287 1 125 1 230 1 5 6 6 3 215 3 151 1 249 3 307 1 
208 16 67 5 269 4 31 16 168 2 210 4 240 1 100 1 345 2 125 5 51 1 5 8 6 4 215 4 249 4 307 1 279 1 13 1 282 3 255 32 154 1 226 1 61 9 110 1 87 3 287 2 18 5 379 1 113 1 230 1 139 2 165 2 120 2 
269 1 67 3 208 8 31 8 168 2 210 1 240 1 345 2 125 4 51 1 5 2 6 1 215 1 249 1 13 1 282 1 255 16 154 1 61 5 182 1 87 1 287 2 18 3 113 1 230 1 
208 10 67 4 269 2 31 9 168 2 210 2 240 1 100 1 345 2 125 4 51 1 5 4 6 2 215 2 249 2 178 1 13 1 282 2 255 19 154 1 61 6 182 1 87 1 287 2 18 3 113 1 230 1 165 1 120 1 
269 2 208 13 67 5 31 14 168 2 210 3 240 1 100 1 345 2 125 5 51 1 5 6 6 3 215 3 249 3 276 1 307 1 13 1 282 1 255 27 154 1 61 7 182 1 87 1 287 2 18 5 113 1 230 1 290 1 139 2 97 1 265 1 165 2 120 2 
269 4 208 14 67 5 31 11 168 2 210 3 240 1 100 1 345 2 125 5 51 1 5 6 6 3 215 3 249 3 276 1 307 1 13 1 282 1 255 25 154 1 61 9 182 1 87 1 287 2 18 4 113 1 230 1 290 1 139 1 97 1 265 1 165 2 120 2 
269 1 67 3 208 8 31 8 168 2 210 1 240 1 345 2 125 4 51 1 5 2 6 1 215 1 249 1 13 1 282 1 255 16 154 1 61 5 182 1 87 1 287 2 18 3 113 1 230 1 
269 1 208 6 67 2 31 6 210 1 125 1 5 2 6 1 215 1 249 1 276 1 282 1 255 12 61 2 182 1 87 1 18 2 113 1 230 1 290 1 139 2 97 1 265 1 165 2 120 2 
269 2 208 14 67 5 31 12 168 2 210 4 240 1 100 1 345 2 125 5 51 1 5 8 6 4 215 4 249 4 276 1 307 2 13 1 282 1 255 26 154 1 61 7 182 1 87 1 287 2 18 4 113 1 230 1 290 1 139 1 97 1 265 1 165 2 120 2 
269 3 208 9 67 3 31 7 210 4 125 3 5 8 6 4 215 4 249 4 276 1 307 2 282 1 255 16 226 1 61 6 182 1 87 1 18 2 113 1 230 1 290 1 139 2 97 1 265 1 165 3 120 3 
255 7 154 2 269 3 67 1 208 3 31 4 168 3 61 6 240 1 287 3 345 1 18 1 125 3 
269 2 208 14 67 5 31 12 168 2 210 4 240 1 345 2 125 5 51 1 5 8 6 4 215 4 249 4 276 1 307 2 13 1 282 1 255 26 154 1 226 1 61 7 182 1 87 1 287 2 18 4 113 1 230 1 290 1 139 1 97 1 265 1 165 2 120 2 
360 1 216 1 353 1 204 1 21 1 22 1 219 1 
353 1 261 1 155 1 360 1 216 1 204 1 22 1 21 1 64 1 219 1 99 1 254 1 
291 1 334 1 37 1 116 1 237 1 211 1 96 1 50 1 370 1 70 1 189 1 
185 1 353 1 211 1 370 1 70 1 189 1 315 1 274 1 216 1 291 1 37 1 116 1 373 1 21 2 96 1 25 1 219 2 143 1 
185 2 211 1 270 1 370 1 70 2 189 3 128 1 274 1 216 1 373 1 219 2 327 1 256 1 353 2 14 1 315 2 291 1 116 1 21 2 25 1 96 1 164 1 143 1 
185 2 211 2 270 1 370 2 70 2 189 3 128 1 216 1 373 1 219 2 250 1 220 1 327 1 256 1 353 2 14 1 315 2 291 2 116 1 21 2 25 1 96 1 164 1 143 1 
321 1 211 3 370 3 212 1 70 1 323 1 189 4 218 1 37 1 193 1 250 1 327 1 82 2 256 1 288 1 315 1 160 1 338 2 291 3 116 1 96 1 164 1 382 1 
256 1 211 3 321 1 370 3 70 1 212 1 288 1 323 1 315 1 189 4 338 2 291 3 218 1 37 1 116 1 193 1 45 1 96 1 250 1 164 1 327 1 82 2 
377 1 291 1 116 1 211 1 96 1 370 1 
377 1 197 1 47 1 333 1 211 7 370 7 89 1 70 2 315 1 189 3 35 1 291 6 302 1 37 2 248 1 116 2 8 1 117 1 96 3 196 1 30 1 
185 1 240 1 345 2 5 4 51 1 189 1 6 2 248 1 152 2 249 2 195 1 13 1 255 14 353 1 154 1 61 5 18 3 315 1 116 1 21 2 25 1 264 1 269 1 67 3 208 7 122 1 31 7 168 2 210 2 211 1 370 1 70 1 125 4 128 1 71 1 274 1 215 2 216 3 373 1 77 1 219 2 277 2 79 1 374 1 375 1 135 1 287 2 91 1 291 1 96 1 143 1 
296 1 369 1 211 1 321 1 370 1 212 2 323 1 189 2 190 2 150 1 218 1 37 1 351 1 193 1 130 1 281 1 82 3 283 1 17 2 288 1 338 3 291 1 234 1 341 1 45 1 24 2 294 2 144 1 
377 1 368 1 321 1 211 2 370 2 89 1 70 1 315 1 189 2 291 2 248 1 116 1 96 2 
334 1 211 4 50 1 370 4 70 1 189 1 291 4 104 1 37 1 248 1 116 1 96 1 250 1 
47 1 211 2 370 2 70 1 228 1 315 1 189 1 291 2 95 1 116 1 8 1 96 2 327 1 166 1 
291 1 184 1 37 1 62 1 116 1 211 1 96 1 370 1 153 1 119 1 
35 1 291 2 68 1 302 1 116 1 248 1 211 2 96 1 370 2 70 1 189 1 
334 1 211 5 50 1 370 5 70 2 189 3 35 1 291 4 104 1 37 1 248 1 116 2 96 2 196 1 327 1 30 1 
334 1 211 5 50 1 370 5 187 1 70 2 189 3 35 1 291 4 104 1 37 1 248 1 116 2 96 2 327 1 30 1 
185 1 353 1 211 1 370 1 70 1 189 1 315 1 216 1 291 1 37 1 116 1 373 1 21 2 96 1 25 1 219 2 220 1 143 1 
197 1 47 1 211 1 370 1 89 1 70 1 315 1 189 1 291 1 116 1 8 1 96 2 327 1 
52 1 216 1 275 1 176 1 183 1 
14 1 296 1 270 1 183 1 156 1 323 1 231 1 128 1 161 1 338 2 52 2 216 1 339 1 275 2 218 1 193 1 75 1 176 2 82 2 
52 1 353 1 21 1 176 1 76 1 219 1 118 1 183 1 253 1 
339 1 183 1 231 1 
303 1 236 1 237 1 133 1 
53 1 0 1 303 1 236 1 186 1 88 1 133 1 
332 1 63 1 88 1 
53 3 0 1 303 1 209 1 236 1 350 1 186 1 88 3 34 1 101 1 133 1 12 2 
114 1 53 2 0 1 303 1 236 1 285 1 186 1 88 2 133 1 
0 1 62 1 186 1 88 1 202 1 34 1 53 1 303 1 184 1 238 1 10 1 
53 1 0 1 303 1 236 1 186 1 88 1 34 1 
53 1 0 1 236 2 186 1 88 1 34 1 133 1 
53 2 0 2 303 1 236 1 186 2 194 1 88 2 106 1 34 1 66 1 
0 1 186 1 1 1 88 3 202 1 34 1 114 2 53 3 303 2 73 1 236 1 207 1 133 1 
0 1 378 1 62 2 186 1 88 2 34 1 114 1 53 2 103 1 303 1 184 1 236 1 153 1 10 1 133 1 
0 2 186 2 285 1 1 1 88 4 202 1 34 1 114 2 53 4 303 2 340 1 236 1 133 1 
53 1 0 1 303 1 236 1 186 1 88 1 34 1 133 1 
0 1 284 1 186 1 1 1 88 4 202 1 101 1 114 2 53 4 303 3 350 1 236 2 12 1 133 2 
0 1 227 1 186 1 88 2 171 1 34 1 114 1 53 2 303 1 235 1 236 1 133 1 
0 1 186 1 88 3 34 1 101 2 53 3 303 1 350 1 236 1 12 2 133 1 366 1 
303 2 49 1 41 2 252 1 
53 1 0 1 380 1 186 1 88 1 34 1 
114 1 53 2 0 1 303 1 236 1 186 1 88 2 207 1 34 1 133 1 
310 1 
53 1 0 1 303 1 236 1 186 1 88 1 34 1 133 1 
114 1 53 3 0 1 303 1 236 1 186 1 88 3 207 1 34 1 133 1 12 1 
303 1 284 1 1 1 202 1 
303 1 236 1 

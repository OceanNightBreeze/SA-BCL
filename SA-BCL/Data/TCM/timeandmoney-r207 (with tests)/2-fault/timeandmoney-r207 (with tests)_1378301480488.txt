#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 169 284 178 250 343 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 169 284 178 250 343 368 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 169 284 178 250 343 368 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 169 284 178 250 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 169 284 178 250 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 169 284 178 250 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 6 140 1 218 1 359 1 4 9 187 9 65 1 66 2 190 3 313 2 69 1 314 1 274 2 38 2 70 1 229 2 108 1 71 4 16 1 329 5 75 2 49 1 92 1 211 1 54 2 110 1 183 1 113 1 
115 6 140 1 218 1 359 1 4 9 187 9 65 1 66 2 190 3 313 2 69 1 314 1 274 2 38 2 70 1 229 2 108 1 71 4 16 1 329 5 75 2 49 1 92 1 211 1 54 2 110 1 183 1 113 1 
115 7 140 1 218 1 359 1 4 10 187 10 65 1 66 2 190 4 313 2 69 1 314 1 274 2 38 2 70 1 229 2 108 1 71 5 16 1 329 6 75 2 49 1 92 1 211 1 54 2 110 1 183 1 113 1 
115 4 140 1 218 1 359 1 4 7 187 7 65 1 66 2 190 2 313 2 69 1 314 1 274 2 38 2 70 1 229 1 108 1 71 3 16 1 329 4 75 2 92 1 211 1 54 2 110 1 183 1 113 1 
115 3 229 2 218 1 71 2 4 4 187 4 65 1 329 3 75 1 49 1 66 1 190 1 211 1 313 1 69 1 54 1 274 1 183 1 
16 1 307 1 359 1 232 1 4 2 187 2 65 1 329 1 75 1 66 1 35 1 69 1 54 1 274 1 183 1 38 1 
115 1 71 1 4 3 187 3 65 1 329 2 75 2 190 1 69 1 54 2 110 1 183 1 38 1 
115 7 140 1 218 1 4 9 187 9 65 1 66 1 190 3 313 1 69 1 274 1 38 1 229 2 71 4 329 5 75 2 49 1 92 1 211 1 54 2 110 1 76 1 183 1 245 1 
115 7 140 1 218 1 4 9 187 9 65 1 66 1 190 3 313 1 69 1 274 1 38 1 229 2 71 4 329 5 75 2 49 1 92 1 211 1 54 2 110 1 76 1 183 1 245 1 
263 1 361 1 173 1 
361 1 160 1 168 2 
174 1 29 2 293 1 305 2 301 2 369 2 87 2 25 2 
249 2 340 1 306 1 119 1 29 3 30 1 221 1 144 1 172 1 288 2 174 1 8 1 83 1 192 1 226 1 39 1 293 1 196 1 295 1 369 2 87 2 203 1 374 1 204 1 45 2 207 1 327 1 301 3 179 2 134 1 378 2 305 2 112 1 244 1 379 1 95 1 25 2 
174 1 28 1 266 1 29 1 305 1 301 1 269 1 369 1 87 1 25 1 
201 1 350 1 325 1 29 1 266 1 361 1 173 1 301 1 316 1 105 1 296 1 137 1 94 1 87 1 
350 2 325 1 29 1 266 1 361 1 173 1 301 1 316 1 105 2 305 1 296 1 137 1 369 1 25 1 87 1 
50 1 22 1 350 1 182 1 105 1 
50 1 350 2 182 1 63 1 215 1 105 2 361 1 173 1 
50 1 350 1 105 1 
350 1 28 1 266 1 29 1 301 1 269 1 174 1 334 1 182 1 105 1 305 1 369 1 25 1 87 1 
361 1 
50 1 350 2 213 1 182 1 215 1 105 2 361 1 173 1 
279 1 297 2 321 1 350 5 2 1 299 1 361 1 173 1 146 1 50 2 164 1 125 1 182 2 215 1 276 1 105 5 195 2 258 1 371 2 
263 1 293 1 
29 2 301 2 236 1 293 2 41 1 305 1 369 1 87 2 25 1 
166 1 170 1 152 1 
249 1 340 1 306 1 204 1 45 1 29 1 301 1 179 1 8 1 366 1 39 1 293 1 295 1 112 1 244 1 379 1 
249 1 340 1 1 1 306 1 204 1 357 1 45 1 29 2 301 2 179 1 8 1 39 1 295 1 112 1 305 1 379 1 244 1 152 1 25 1 87 1 
1 1 29 3 293 1 305 3 301 3 369 1 87 3 25 3 
28 1 266 1 29 1 305 1 301 1 87 1 25 1 
236 1 266 1 29 1 41 1 305 1 301 1 369 1 87 1 25 1 
249 1 340 1 1 1 306 1 357 1 119 1 29 4 266 1 221 1 144 1 172 1 32 1 288 1 174 1 8 1 83 1 226 1 39 1 316 1 293 1 105 1 196 1 295 1 296 1 369 2 87 3 350 1 374 1 204 1 325 1 45 1 19 1 301 4 179 1 134 1 236 1 378 2 112 1 305 3 379 1 244 1 137 1 95 1 25 3 
1 1 355 1 29 2 293 1 305 1 301 2 94 1 87 2 25 1 
350 1 1 2 357 1 325 1 266 1 29 3 361 1 19 1 301 3 236 1 316 1 105 1 305 3 296 1 137 1 369 1 61 1 25 3 87 3 
1 1 29 2 170 1 301 2 236 1 305 2 152 1 369 1 25 2 87 2 
249 1 340 1 306 1 204 1 45 1 29 1 301 1 179 1 8 1 39 1 293 1 112 1 295 1 244 1 379 1 
249 1 340 1 306 1 204 1 45 1 29 1 301 1 179 1 271 1 149 1 293 1 112 1 295 1 244 1 379 1 
119 1 221 1 170 2 144 2 99 1 122 1 288 4 148 1 345 1 151 1 196 1 152 2 370 1 280 1 260 1 203 2 374 1 21 1 134 1 353 1 166 2 378 2 95 1 169 1 
266 1 29 1 296 1 305 1 342 1 301 1 87 1 25 1 
96 1 1 2 355 1 357 1 29 5 301 5 236 1 293 1 305 4 94 1 138 1 369 1 25 4 87 5 
28 1 266 1 29 2 342 1 305 2 301 2 87 2 25 2 
199 1 60 1 
199 1 60 1 
129 1 56 1 
129 1 56 1 
129 1 56 1 
333 1 199 1 60 1 
154 1 199 1 60 1 
129 1 199 2 56 1 46 1 188 1 60 2 
333 1 199 1 60 1 
333 1 199 1 60 1 
199 1 184 1 60 1 
199 1 184 1 60 1 
199 1 184 1 60 1 
153 1 199 2 350 2 73 1 358 2 231 2 361 1 188 1 120 2 235 1 147 2 238 1 344 1 242 1 105 2 377 3 367 2 60 2 128 1 
358 1 29 2 120 1 9 1 223 1 68 1 194 1 293 1 105 1 367 1 87 2 154 1 199 1 156 1 350 1 231 1 301 2 132 1 235 1 53 1 377 1 305 2 60 1 25 2 
66 1 313 1 274 1 
66 1 35 1 274 1 
66 3 261 1 35 1 313 2 267 1 82 1 
66 2 261 1 35 1 313 1 82 1 43 1 
66 2 261 1 35 1 313 1 82 2 
141 2 339 2 220 1 251 2 361 2 171 1 173 1 99 1 9 1 148 1 195 1 105 5 259 1 371 1 279 2 297 1 156 1 280 1 350 5 299 3 47 1 160 1 132 1 284 1 50 1 164 1 182 4 215 1 186 1 286 1 168 3 169 1 
141 6 142 5 251 6 361 5 171 2 173 1 99 3 9 4 148 3 105 9 40 1 195 2 258 1 259 1 371 2 279 6 297 2 280 3 350 9 372 1 299 8 160 3 284 3 285 1 331 1 50 6 22 5 304 1 164 1 182 7 215 1 136 1 186 2 168 9 169 3 
339 1 141 2 220 1 361 3 251 2 171 1 173 1 99 1 9 1 148 1 195 1 105 3 258 1 371 1 279 2 297 1 280 1 350 3 299 3 47 1 160 2 284 1 182 2 186 1 169 1 168 4 
141 4 339 2 220 1 361 4 251 4 171 1 173 1 99 2 9 2 148 2 195 1 105 4 258 1 371 1 279 4 297 1 280 2 350 4 372 1 299 5 47 1 160 3 284 2 285 1 182 3 136 1 186 1 168 7 169 2 
311 1 263 1 295 1 
90 1 295 1 
338 1 
340 1 295 1 
311 2 340 1 89 1 204 1 295 3 363 1 
340 1 204 1 295 1 
222 1 295 1 
26 1 280 1 260 3 203 4 230 2 205 1 144 3 98 1 288 7 163 1 148 1 84 1 85 1 255 1 127 1 175 1 370 2 
26 1 280 1 260 3 203 4 230 2 205 1 144 3 98 1 288 7 163 1 148 1 84 1 85 1 255 1 127 1 175 1 370 2 
26 1 280 1 260 3 203 4 230 2 205 1 144 3 98 1 288 7 163 1 148 1 84 1 85 1 127 1 255 1 241 1 175 1 370 2 
62 1 26 2 27 1 79 1 118 1 268 3 221 1 98 1 144 15 99 3 364 1 288 31 148 4 84 2 127 1 85 2 277 4 255 2 175 5 196 1 370 5 347 1 44 1 260 10 280 4 203 16 230 3 205 1 284 3 163 1 134 1 378 2 169 3 95 1 
26 1 221 2 144 4 98 1 33 1 288 9 148 1 84 1 255 1 127 1 85 1 175 1 196 2 370 3 347 1 280 1 260 4 203 5 230 2 205 1 52 1 134 2 378 4 95 2 
115 1 249 1 267 1 4 2 187 2 65 1 145 1 66 2 35 1 191 1 313 1 254 1 69 1 274 1 38 1 257 1 348 1 130 1 45 1 329 1 179 1 75 1 233 1 212 1 54 1 183 1 78 1 112 1 244 1 114 1 
115 2 249 1 3 1 267 1 4 3 187 3 145 1 66 2 35 1 191 1 313 1 254 1 69 1 274 1 38 1 348 1 107 1 130 1 45 1 329 1 179 1 75 1 212 1 54 1 237 1 183 1 78 1 112 1 244 1 114 1 
115 2 249 1 3 1 267 1 4 2 187 2 145 1 66 2 35 1 191 1 313 1 69 1 274 1 38 1 348 1 107 1 130 1 45 1 329 1 179 1 183 1 78 1 112 1 244 1 114 1 
249 1 340 1 306 1 4 1 252 1 187 1 145 2 101 1 37 1 38 2 295 1 130 2 281 1 45 1 282 1 179 1 75 1 210 1 54 1 237 1 112 1 78 2 244 1 
249 1 267 1 4 1 187 1 65 1 145 1 66 2 35 1 191 1 313 1 254 1 274 1 38 1 348 1 107 1 130 1 45 1 179 1 75 1 233 1 212 1 54 1 78 1 112 1 244 1 114 1 
106 1 
249 2 97 2 340 1 0 4 252 1 100 2 103 1 105 5 195 1 294 1 295 1 296 1 198 2 155 1 297 1 201 1 350 5 299 2 109 1 206 1 160 2 301 1 164 1 111 2 214 1 215 3 112 1 168 2 217 1 117 1 354 1 306 2 81 1 29 1 266 1 361 2 362 1 173 1 123 2 312 2 224 1 316 1 371 1 87 1 279 2 281 1 45 2 325 1 179 2 50 6 239 2 186 1 244 1 137 1 94 1 
217 1 0 2 81 1 29 1 266 1 362 1 123 1 316 1 105 3 296 1 87 1 155 1 201 1 350 3 325 1 301 1 50 2 213 1 214 1 215 1 137 1 94 1 
217 1 0 3 81 1 29 1 266 1 361 1 362 1 173 1 316 1 105 3 296 1 198 1 87 1 155 1 201 1 350 3 325 1 301 1 50 1 213 1 214 1 215 1 137 1 94 1 
217 1 0 3 81 1 29 1 266 1 361 1 362 1 173 1 123 1 316 1 105 3 296 1 198 1 87 1 155 1 201 1 350 3 325 1 301 1 50 2 213 1 111 1 214 1 215 1 137 1 94 1 
217 1 0 2 81 1 28 1 29 2 266 2 361 1 362 1 173 1 269 1 174 1 36 1 123 1 316 1 105 3 296 1 369 1 87 2 155 1 201 1 350 3 325 1 301 2 50 2 334 1 213 1 111 1 214 1 215 1 305 1 137 1 94 1 25 1 
0 4 97 2 100 2 103 1 294 1 105 4 195 1 296 1 198 2 155 1 297 1 201 1 350 4 299 1 301 1 160 2 164 1 111 2 214 1 215 2 168 2 217 1 81 1 266 1 29 1 361 2 362 1 173 1 312 2 123 2 224 1 316 1 87 1 371 1 279 1 325 1 50 4 239 2 137 1 94 1 
217 1 97 2 0 4 81 1 29 1 266 1 361 1 362 1 173 1 100 2 123 2 312 2 103 1 316 1 294 1 105 4 195 1 296 1 198 2 371 1 87 1 279 1 155 1 297 1 201 1 350 4 299 1 325 1 160 2 301 1 50 4 164 1 111 2 239 2 55 1 214 1 335 1 215 2 352 1 137 1 94 1 
217 1 97 2 0 4 81 1 29 1 266 1 361 1 362 1 173 1 100 2 123 2 312 2 103 1 316 1 294 1 105 4 195 1 296 1 198 2 371 1 87 1 279 1 155 1 297 1 201 1 350 4 299 1 325 1 160 2 301 1 50 4 164 1 111 2 239 2 55 1 214 1 335 1 215 2 352 1 137 1 94 1 
217 1 0 4 81 1 29 1 266 1 361 1 362 1 173 1 6 2 123 2 312 2 103 1 316 1 105 4 195 1 296 1 198 2 371 1 87 1 279 1 155 1 297 1 201 1 350 4 299 1 325 1 301 1 161 1 209 1 50 4 375 2 164 1 111 2 239 2 214 1 215 2 352 1 137 1 94 1 216 1 168 2 
217 1 97 2 0 5 81 1 29 1 266 1 361 1 362 1 173 1 100 2 312 2 123 3 103 1 316 1 294 1 195 1 105 4 296 1 198 3 371 1 87 1 279 1 155 1 297 1 201 1 350 4 299 1 325 1 160 2 301 1 50 5 164 1 239 2 111 3 55 1 335 1 214 1 262 1 215 2 352 1 137 1 94 1 
217 1 97 2 0 5 81 1 29 1 266 1 361 1 362 1 173 1 100 2 312 2 123 3 103 1 316 1 294 1 195 1 105 4 296 1 198 3 371 1 87 1 279 1 155 1 297 1 201 1 350 4 299 1 325 1 160 2 301 1 50 5 164 1 239 2 111 3 55 1 335 1 214 1 262 1 215 2 352 1 137 1 94 1 
217 1 0 4 81 1 29 1 266 1 361 1 362 1 173 1 6 2 123 2 312 2 224 1 103 1 316 1 195 1 105 4 296 1 198 2 371 1 87 1 279 1 155 1 297 1 201 1 350 4 299 1 325 1 301 1 161 1 50 4 375 2 164 1 111 2 239 2 214 1 215 2 137 1 94 1 168 2 
119 1 170 1 221 1 98 1 144 3 288 6 148 1 84 1 127 1 85 1 293 2 345 1 196 1 152 1 370 2 260 2 280 1 374 1 203 3 230 1 205 1 134 1 263 1 166 1 378 2 95 1 
264 1 119 2 268 3 221 2 170 4 172 1 144 6 99 1 364 1 7 1 288 14 148 2 277 3 293 1 175 1 196 2 197 1 152 11 370 1 298 1 260 2 44 1 280 1 374 1 203 8 327 1 284 2 134 2 166 11 337 1 378 4 95 2 169 2 
249 1 340 1 1 1 306 1 357 1 119 1 29 2 170 1 221 1 172 1 144 1 288 2 8 1 67 1 39 1 366 1 293 1 295 1 196 1 197 1 87 1 374 1 203 1 204 1 45 1 327 1 301 2 179 1 20 1 51 1 134 1 112 1 305 1 378 2 379 1 244 1 95 1 25 1 
249 3 1 1 340 2 143 2 98 1 144 10 253 1 99 2 288 20 8 2 289 2 148 3 291 1 102 2 293 2 196 3 295 2 197 1 152 7 107 1 260 8 203 10 204 2 205 1 208 2 301 3 166 7 305 1 112 2 25 1 169 2 306 1 357 1 29 3 119 3 221 3 170 7 172 1 84 1 124 1 226 2 39 2 85 1 127 1 175 4 370 4 87 1 280 3 374 3 230 1 45 3 327 1 179 3 284 2 134 3 378 6 244 2 379 2 95 3 
249 8 1 1 340 2 306 2 29 1 119 2 221 2 252 1 5 1 172 1 144 1 189 1 288 2 192 2 345 1 295 3 196 2 257 1 87 1 107 1 200 1 15 1 373 1 374 2 322 1 203 1 281 1 45 7 327 1 301 1 179 8 351 1 134 2 305 1 112 2 378 4 244 2 25 1 95 2 
119 1 29 1 170 1 221 1 144 2 99 1 288 3 148 1 196 1 152 1 197 1 369 1 370 1 87 1 260 1 280 1 374 1 203 1 301 1 284 1 134 1 236 1 166 1 378 2 305 1 23 1 25 1 95 1 169 1 
260 1 374 1 203 2 119 1 170 1 221 1 288 2 134 1 148 1 353 1 166 1 175 1 345 1 196 1 378 2 152 1 95 1 169 1 
260 1 280 1 374 1 119 1 170 1 221 1 144 2 99 1 288 2 122 1 134 1 166 1 345 1 196 1 378 2 152 1 370 1 95 1 
280 1 260 2 374 1 203 2 119 1 170 2 221 1 144 2 99 1 288 4 284 1 134 1 148 1 166 2 175 1 345 1 196 1 378 2 152 2 370 1 95 1 169 1 
260 1 322 1 374 1 203 2 119 1 170 1 221 1 288 2 134 1 148 1 353 1 166 1 175 1 196 1 378 2 152 1 95 1 169 1 
260 1 280 1 322 1 374 1 119 1 170 1 221 1 144 2 99 1 288 2 122 1 134 1 166 1 196 1 378 2 152 1 370 1 95 1 
280 1 260 2 322 1 374 1 203 2 119 1 170 2 221 1 144 2 99 1 288 4 284 1 134 1 148 1 166 2 175 1 196 1 378 2 152 2 370 1 95 1 169 1 
280 1 260 2 374 1 203 2 119 1 170 2 221 1 144 2 99 1 284 1 288 4 134 1 148 1 166 2 175 1 196 1 378 2 152 2 370 1 95 1 169 1 
249 1 340 1 306 1 29 1 119 1 221 1 172 1 144 1 288 2 8 1 226 1 39 1 293 1 295 1 196 1 203 1 374 1 204 1 45 1 327 1 301 1 179 1 134 1 112 1 378 2 379 1 244 1 95 1 
249 1 340 1 306 1 29 1 119 1 221 1 172 1 144 1 271 1 288 2 149 1 293 1 295 1 196 1 203 1 374 1 204 1 45 1 327 1 301 1 179 1 134 1 243 1 112 1 378 2 379 1 244 1 95 1 
280 1 260 2 374 1 203 2 119 1 170 2 221 1 144 2 99 1 288 4 284 1 134 1 148 1 166 2 175 1 196 1 378 2 152 2 197 1 370 1 95 1 169 1 
249 1 340 1 143 1 29 1 119 1 170 2 221 1 144 2 99 1 288 4 8 1 148 1 226 1 39 1 175 1 295 1 196 1 257 1 152 2 370 1 280 1 260 2 203 2 374 1 204 1 45 1 301 1 179 1 284 1 134 1 166 2 112 1 378 2 379 1 244 1 169 1 95 1 
119 1 29 1 221 1 170 1 144 1 99 1 288 3 148 1 175 1 196 1 197 1 152 1 369 1 87 1 280 1 260 1 374 1 203 2 301 1 284 1 134 1 236 1 166 1 93 1 378 2 305 1 25 1 95 1 169 1 
248 1 268 1 221 2 144 10 99 3 33 1 364 1 288 19 343 1 225 2 148 3 277 2 175 3 196 2 368 1 86 1 370 3 44 1 260 6 280 3 203 9 326 1 74 1 284 3 134 2 336 2 378 4 185 1 95 2 169 3 
203 6 250 1 268 2 178 1 221 1 74 2 144 5 33 1 284 1 364 2 288 11 273 1 134 1 343 2 148 1 225 2 277 2 185 1 196 1 378 2 368 1 169 1 95 1 
248 1 250 1 268 3 221 2 144 12 99 2 33 1 364 3 288 24 273 1 343 1 225 3 148 3 277 4 175 2 196 2 368 1 318 1 86 1 370 1 44 1 260 3 280 2 203 12 178 1 74 2 284 3 134 2 336 1 378 4 185 1 95 2 169 3 
248 1 250 1 268 3 221 2 144 12 99 2 33 1 364 3 288 24 273 1 343 1 225 3 148 3 277 4 175 2 196 2 368 1 318 1 86 1 370 2 44 1 260 4 280 2 203 12 178 1 74 2 284 3 134 2 336 1 378 4 185 1 95 2 169 3 
246 1 248 1 250 1 268 4 221 2 98 1 144 25 99 7 33 1 7 2 364 2 288 52 273 1 343 1 225 4 148 8 84 1 126 1 85 1 127 1 277 4 175 7 196 2 368 1 347 1 370 7 319 1 44 2 260 14 280 8 203 27 230 1 205 1 178 1 74 1 284 7 134 2 336 1 378 4 185 1 95 2 169 7 
199 1 202 1 238 1 358 1 231 1 242 1 188 1 367 1 60 1 120 1 
154 1 223 1 
199 1 320 1 290 1 165 1 358 1 231 1 367 1 60 1 120 1 
153 1 199 1 350 1 73 1 358 1 231 1 361 1 188 1 120 1 235 1 147 1 238 1 344 1 242 1 105 1 377 2 367 1 60 1 
153 1 199 1 350 1 73 1 358 1 231 1 361 1 188 1 120 1 235 1 147 1 238 1 344 1 242 1 105 1 377 2 367 1 60 1 
153 1 199 1 350 1 73 1 358 1 231 1 361 1 188 1 120 1 235 1 147 1 238 1 344 1 242 1 105 1 377 2 367 1 60 1 
333 1 46 1 278 1 
333 1 46 1 278 1 
158 1 184 1 
158 1 46 1 184 1 
68 1 194 1 
358 1 29 2 309 1 120 1 9 1 147 1 223 1 68 1 344 1 194 1 293 1 105 1 367 1 87 2 154 1 199 1 156 1 350 1 231 1 301 2 132 1 53 1 182 1 377 1 305 2 60 1 25 2 
333 1 278 1 
158 1 46 1 184 1 
249 2 340 1 119 1 29 2 221 1 172 1 144 1 288 2 365 1 192 2 295 1 196 1 197 1 42 1 87 2 88 1 15 1 374 1 203 1 45 2 327 1 301 2 91 1 179 2 283 1 351 1 134 1 112 1 378 2 244 1 95 1 
107 1 247 1 249 2 45 2 177 1 267 1 179 2 66 2 35 1 272 1 313 1 254 1 274 1 112 1 78 1 244 1 257 1 348 1 114 1 
107 1 249 1 45 1 267 1 17 1 179 1 66 2 35 1 272 1 313 1 254 1 274 1 78 1 112 1 244 1 348 1 114 1 
247 1 249 1 340 1 306 1 281 1 45 1 252 1 179 1 210 1 11 1 112 1 295 1 78 1 244 1 
107 1 247 1 249 1 45 1 177 1 267 1 179 1 66 2 35 1 272 1 313 1 254 1 274 1 112 1 78 1 244 1 348 1 114 1 
275 1 
279 1 321 1 125 1 299 1 263 1 361 1 173 1 
97 1 361 2 173 1 100 1 294 1 195 1 105 1 371 1 279 1 297 1 350 1 299 1 160 1 50 1 164 1 215 1 168 1 
141 6 249 3 340 3 251 6 99 2 148 2 102 2 193 2 195 4 105 5 295 10 256 2 257 1 297 4 14 2 350 5 204 3 159 1 299 9 160 6 164 4 215 3 112 4 168 12 169 2 354 1 306 1 356 1 361 8 173 2 31 1 222 2 311 2 125 1 315 2 317 2 371 4 279 8 321 1 280 2 89 1 45 3 90 3 328 2 179 3 234 1 284 2 50 5 376 2 59 2 186 2 244 3 137 2 139 1 
246 1 141 5 250 1 268 1 251 5 361 2 99 2 364 1 273 1 148 2 277 1 195 1 371 1 279 4 319 1 297 1 280 2 299 6 178 1 160 2 284 2 164 1 168 4 169 2 
28 1 266 1 29 1 269 1 174 1 148 2 84 1 85 1 195 1 105 1 369 1 371 1 87 1 279 2 297 1 157 1 280 1 14 2 350 1 205 1 299 2 328 1 301 1 164 1 334 1 335 1 305 1 25 1 
279 1 297 1 321 1 299 1 361 1 173 1 164 1 125 1 195 1 371 1 
279 5 141 5 280 2 14 2 299 5 251 5 361 5 328 1 160 5 99 2 284 2 148 2 102 1 169 2 168 10 
50 1 350 1 215 1 105 1 361 1 173 1 
287 1 249 4 340 1 306 2 354 2 252 1 195 2 105 3 295 1 258 1 371 2 279 2 297 2 349 1 350 3 281 1 159 2 109 1 45 4 299 2 206 1 179 4 234 1 50 4 164 1 215 2 112 1 186 2 244 1 
249 1 340 1 306 1 29 3 119 1 221 1 144 1 172 1 288 1 174 1 8 1 83 1 226 1 39 1 293 1 196 1 295 1 369 2 87 2 374 1 204 1 45 1 301 3 179 1 134 1 378 2 305 2 112 1 244 1 379 1 25 2 95 1 
279 2 141 2 297 1 354 1 230 1 299 1 251 2 361 4 160 2 173 2 164 1 195 1 186 1 168 4 371 1 
265 1 231 1 120 1 
68 1 360 1 231 1 242 1 120 1 
265 1 231 1 120 1 
265 1 231 1 120 1 
308 1 231 1 120 1 
308 1 231 1 120 1 
308 1 231 1 120 1 
231 1 120 1 
199 1 60 1 
280 1 260 3 203 4 230 1 205 1 221 2 144 4 98 1 288 8 134 2 148 1 84 1 127 1 85 1 175 1 196 2 378 4 370 2 95 2 347 1 
260 2 280 1 203 3 230 1 205 1 144 3 98 1 288 6 148 1 84 1 263 1 127 1 85 1 370 2 
280 1 260 2 203 2 221 1 144 2 99 1 284 1 288 4 134 1 148 1 104 1 175 1 196 1 378 2 370 1 95 1 169 1 
280 1 44 1 260 2 203 3 268 1 144 4 99 1 364 1 288 7 284 1 148 1 277 2 175 1 370 1 169 1 
268 2 221 2 98 1 144 12 99 2 288 23 7 1 148 3 84 2 85 2 127 1 277 2 175 4 196 2 370 5 347 2 260 9 44 1 280 3 203 11 230 1 205 1 18 1 284 2 134 2 337 1 378 4 169 2 95 2 
288 1 277 1 144 1 
288 1 203 1 268 1 
260 3 280 1 203 3 221 1 144 3 99 1 288 6 284 1 134 1 148 1 102 1 104 1 175 1 378 2 196 1 95 1 169 1 370 2 
246 1 268 1 250 1 221 1 144 6 99 2 33 1 288 12 364 1 273 1 148 2 277 1 175 1 196 1 370 1 319 1 280 2 260 2 203 6 178 1 284 2 134 1 378 2 95 1 169 2 
288 6 260 2 280 1 148 1 84 1 203 3 205 1 85 1 175 1 144 3 370 1 
260 2 203 1 18 1 221 1 144 2 98 1 288 3 134 1 84 1 85 1 127 1 175 1 196 1 378 2 370 1 347 1 95 1 
157 1 260 5 280 2 203 5 205 1 221 1 144 5 33 1 288 10 134 1 148 2 84 2 85 2 175 2 378 2 196 1 95 1 370 3 
260 1 203 2 221 1 33 1 288 2 134 1 148 1 175 1 196 1 378 2 95 1 169 1 
280 1 260 2 203 2 221 1 144 2 99 1 33 1 284 1 288 4 134 1 148 1 175 1 196 1 378 2 370 1 95 1 169 1 
260 2 203 1 18 1 221 3 144 2 33 1 288 3 134 3 84 1 85 1 175 1 196 3 378 6 86 1 347 1 95 3 370 1 
27 1 79 1 118 1 268 3 221 5 98 1 144 18 99 3 33 1 364 1 288 34 148 5 84 3 104 1 85 3 127 1 277 4 175 5 196 5 86 1 347 2 370 7 44 1 260 12 280 5 203 16 230 1 205 2 18 1 284 3 134 5 378 10 95 5 169 3 
268 1 250 1 221 1 144 4 98 1 33 1 288 8 364 1 148 1 84 1 277 1 127 1 85 1 196 1 370 2 280 1 260 2 203 4 230 1 205 1 134 1 378 2 95 1 
250 1 268 1 221 2 98 1 144 5 33 1 288 11 364 1 148 2 84 1 104 1 85 1 127 1 277 2 175 1 196 2 370 2 280 1 44 1 260 3 203 6 230 1 205 1 284 1 134 2 378 4 95 2 169 1 
203 3 250 1 268 1 178 1 221 1 144 2 33 1 284 1 364 1 288 5 273 1 134 1 148 1 277 1 196 1 378 2 169 1 95 1 
246 1 268 1 250 1 221 3 98 1 144 7 99 1 33 1 288 17 364 1 273 1 148 3 84 1 104 1 85 1 127 1 277 1 175 2 196 3 347 1 370 3 319 1 280 2 260 5 203 10 230 1 205 1 178 1 284 2 134 3 378 6 95 3 169 2 
268 1 250 1 221 1 144 4 98 1 33 1 288 8 364 1 148 1 84 1 277 1 127 1 85 1 196 1 370 2 280 1 260 2 203 4 230 1 205 1 134 1 378 2 95 1 
246 1 268 1 250 1 221 1 144 6 99 2 33 1 288 12 364 1 273 1 148 2 277 1 175 1 196 1 370 1 319 1 280 2 260 2 203 6 178 1 284 2 134 1 378 2 95 1 169 2 
203 3 268 1 250 1 178 1 221 2 144 2 33 1 284 1 364 1 288 5 273 1 134 2 148 1 104 1 277 1 196 2 378 4 169 1 95 2 
246 1 250 1 268 1 221 4 144 7 99 2 33 1 288 16 364 1 273 1 148 3 277 1 175 3 196 4 86 1 370 3 347 2 319 1 280 2 260 6 203 9 178 1 284 3 134 4 378 8 95 4 169 3 
280 1 260 6 203 3 205 1 144 4 98 1 288 7 148 1 84 3 127 2 85 3 175 3 370 3 
203 3 268 1 250 1 178 1 221 2 144 2 33 1 284 1 364 1 288 5 273 1 134 2 148 1 277 1 196 2 378 4 86 1 169 1 95 2 
10 1 355 1 29 1 293 1 301 1 94 1 87 1 
355 1 29 1 301 1 303 1 180 1 162 1 10 1 57 1 293 1 13 1 94 1 87 1 
249 1 340 1 306 1 281 1 263 1 45 1 252 1 112 1 295 1 244 1 179 1 
249 1 340 1 1 1 306 1 204 1 45 1 29 2 301 2 179 1 39 1 293 1 295 1 112 1 305 1 379 1 244 1 25 1 87 1 
249 1 340 2 1 1 204 2 159 1 45 1 266 1 29 2 301 2 179 1 222 1 376 1 39 1 316 1 293 1 296 1 295 3 112 1 305 2 379 1 244 1 25 1 87 2 
249 2 1 1 340 2 29 2 266 1 271 1 222 1 316 1 293 1 346 1 295 3 296 1 87 2 204 2 45 2 159 1 301 2 179 2 376 1 305 2 112 1 244 1 379 1 25 1 
249 3 340 1 306 1 219 1 361 1 173 1 222 1 311 1 292 1 105 2 346 1 295 4 350 2 204 1 45 3 159 1 90 1 179 3 50 1 376 1 112 1 244 1 137 1 
249 3 340 1 350 2 306 1 204 1 159 1 45 3 361 1 90 1 173 1 179 3 222 1 50 1 311 1 376 1 315 1 105 2 346 1 112 1 295 4 137 1 244 1 
249 1 45 1 112 1 244 1 189 1 179 1 
107 1 200 1 116 1 249 7 340 2 373 1 306 2 89 1 204 1 45 6 300 1 5 1 189 1 179 7 351 1 192 1 295 3 112 3 257 1 244 2 167 1 
249 1 1 1 340 1 143 1 98 1 144 3 288 6 8 1 148 1 293 2 196 2 295 1 257 1 197 1 152 1 260 2 203 3 204 1 205 1 208 1 301 2 166 1 305 1 112 1 25 1 29 2 119 2 170 1 221 2 226 1 84 1 39 1 127 1 85 1 87 1 370 2 280 1 374 2 230 1 45 1 179 1 283 1 134 2 378 4 244 1 379 1 95 2 
249 1 306 1 361 1 173 1 311 1 125 1 315 1 193 1 195 2 105 3 295 2 317 1 371 2 279 1 297 2 321 1 350 3 299 1 45 1 90 1 179 1 234 1 50 2 164 2 182 1 215 1 59 1 137 1 
249 2 340 1 89 1 204 1 45 2 189 1 179 2 311 1 295 2 112 2 257 1 244 1 139 1 
249 4 340 1 306 1 281 1 45 4 252 1 179 4 227 1 346 1 112 1 295 1 257 1 244 1 
116 1 249 2 340 1 204 1 159 1 45 2 300 1 253 1 179 2 34 1 295 1 112 2 244 1 24 1 
66 1 35 1 249 1 274 1 306 1 45 1 112 1 244 1 114 1 179 1 
107 1 249 2 340 1 45 2 179 2 351 1 295 1 112 1 257 1 244 1 42 1 
249 5 340 2 306 1 373 1 281 1 159 1 45 4 252 1 5 1 179 5 351 1 227 1 295 3 112 2 257 1 244 2 
249 5 340 2 306 1 373 1 281 1 159 1 45 4 252 1 330 1 179 5 351 1 227 1 295 3 112 2 257 1 244 2 
249 1 340 1 1 1 306 1 204 1 45 1 29 2 301 2 179 1 271 1 293 1 295 1 112 1 305 1 379 1 244 1 25 1 87 1 
116 1 249 1 340 1 89 1 204 1 159 1 45 1 300 1 179 1 295 1 112 2 244 1 167 1 
80 1 150 1 293 1 176 1 270 1 
350 2 80 2 324 1 325 1 266 1 361 1 19 1 173 1 310 1 270 2 133 1 182 1 150 1 316 1 293 1 105 2 296 1 137 1 176 2 
365 1 88 1 80 1 150 1 29 1 301 1 91 1 176 1 87 1 
133 1 150 1 310 1 
69 1 183 1 263 1 329 1 
69 1 54 1 183 1 4 1 187 1 329 1 75 1 
130 1 38 1 4 1 
16 2 4 3 187 3 65 1 329 1 75 1 332 1 181 1 54 1 69 1 183 1 12 1 
115 1 229 1 69 1 54 1 183 1 4 2 187 2 329 1 75 1 
66 1 218 1 313 1 71 1 54 1 274 1 4 1 187 1 65 1 329 1 75 1 
54 1 183 1 4 1 187 1 65 1 329 1 75 1 
69 1 54 1 183 2 4 1 187 1 65 1 75 1 
72 1 4 2 187 2 65 1 329 1 75 2 54 2 240 1 183 1 77 1 
140 1 115 2 71 1 4 3 187 3 65 1 329 2 75 1 92 1 190 1 69 1 54 1 183 1 
115 1 267 1 4 2 187 2 65 1 329 1 75 1 121 1 66 2 35 1 313 1 69 1 54 1 274 1 183 1 
115 2 229 1 71 1 4 4 187 4 65 1 329 2 75 2 49 1 190 1 69 1 54 2 183 1 
69 1 54 1 183 1 4 1 187 1 65 1 329 1 75 1 
115 2 71 1 16 1 4 4 187 4 329 3 75 1 181 1 190 1 69 2 54 1 183 2 135 1 12 1 
228 1 115 1 4 2 187 2 65 1 329 1 75 1 54 1 69 1 183 1 58 1 245 1 
16 2 4 3 187 3 65 1 329 1 48 1 75 1 181 1 54 1 69 1 183 1 12 2 
323 2 131 1 329 2 302 1 
54 1 341 1 4 1 187 1 65 1 75 1 
115 1 92 1 69 1 54 1 183 1 4 2 187 2 65 1 329 1 75 1 
64 1 
69 1 54 1 183 1 4 1 187 1 65 1 329 1 75 1 
115 1 92 1 69 1 54 1 16 1 183 1 4 3 187 3 65 1 329 1 75 1 
190 1 71 1 135 1 329 1 
183 1 329 1 

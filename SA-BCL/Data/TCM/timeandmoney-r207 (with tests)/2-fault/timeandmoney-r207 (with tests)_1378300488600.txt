#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (59,74) (59,74) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (59,74) 126 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (59,74) (59,74) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
19 1 193 1 228 2 344 1 170 6 48 2 197 4 50 1 316 5 152 1 97 3 297 1 99 1 201 1 265 9 266 1 55 1 234 2 81 9 11 2 86 1 157 2 354 1 358 2 277 1 361 1 113 1 227 2 
19 1 193 1 228 2 344 1 170 6 48 2 197 4 50 1 316 5 152 1 97 3 297 1 99 1 201 1 265 9 266 1 55 1 234 2 81 9 11 2 86 1 157 2 354 1 358 2 277 1 361 1 113 1 227 2 
19 1 193 1 228 2 344 1 170 7 48 2 197 5 50 1 316 6 152 1 97 4 297 1 99 1 201 1 265 10 266 1 55 1 234 2 81 10 11 2 86 1 157 2 354 1 358 2 277 1 361 1 113 1 227 2 
19 1 193 1 228 2 344 1 170 4 48 2 197 3 50 1 316 4 152 1 97 2 297 1 99 1 201 1 265 7 266 1 55 1 234 2 81 7 11 1 157 2 354 1 358 2 277 1 361 1 113 1 227 2 
228 1 11 2 344 1 86 1 157 1 170 3 354 1 48 1 197 2 152 1 316 3 97 1 358 1 201 1 361 1 265 4 81 4 227 1 
228 1 19 1 344 1 354 1 48 1 50 1 316 1 176 1 358 1 201 1 265 2 322 1 144 1 234 1 81 2 227 1 
228 2 344 1 170 1 354 1 48 2 197 1 316 2 97 1 99 1 201 1 265 3 234 1 81 3 
228 2 344 1 170 7 48 2 197 4 316 5 152 1 97 3 99 1 201 1 26 1 265 9 266 1 234 1 81 9 181 1 11 2 157 1 86 1 354 1 277 1 358 1 361 1 227 1 
228 2 344 1 170 7 48 2 197 4 316 5 152 1 97 3 99 1 201 1 26 1 265 9 266 1 234 1 81 9 181 1 11 2 157 1 86 1 354 1 277 1 358 1 361 1 227 1 
293 1 261 1 133 1 
258 2 224 1 133 1 
10 1 259 2 147 2 129 2 95 2 101 2 161 2 186 1 
259 2 21 2 315 1 147 2 213 1 1 1 95 3 71 2 72 1 5 1 199 1 6 1 120 2 351 1 101 2 204 1 324 1 303 1 10 1 237 1 129 3 12 1 269 1 107 1 13 1 376 1 208 1 161 2 186 1 163 1 247 2 167 1 281 1 65 2 284 1 212 1 256 1 
259 1 147 1 129 1 153 1 121 1 95 1 101 1 254 1 161 1 186 1 
259 1 194 1 128 1 375 1 129 1 95 1 261 1 133 1 310 1 221 1 121 1 252 1 30 1 180 1 
259 1 194 1 147 1 129 1 95 1 261 1 133 1 161 1 310 1 221 2 121 1 101 1 252 2 30 1 180 1 
221 1 249 1 250 1 252 1 328 1 
221 2 249 1 252 2 261 1 133 1 206 1 328 1 216 1 
221 1 249 1 252 1 
259 1 147 1 129 1 95 1 186 1 161 1 221 1 16 1 153 1 121 1 252 1 101 1 254 1 328 1 
133 1 
98 1 221 2 249 1 252 2 261 1 133 1 206 1 328 1 
169 2 182 1 364 1 184 1 261 1 133 1 175 1 75 1 221 5 135 1 349 1 298 1 362 2 78 2 249 2 252 5 31 1 206 1 328 2 
259 1 237 1 129 2 13 1 95 2 308 1 71 1 161 1 5 1 163 1 136 1 199 1 111 1 120 1 281 1 101 1 65 1 284 1 212 1 256 1 
10 1 293 1 
10 2 259 2 147 1 129 2 95 2 69 1 161 1 357 1 101 1 
288 1 200 1 111 1 
10 1 237 1 129 1 95 1 13 1 71 1 163 1 5 1 199 1 120 1 281 1 65 1 191 1 284 1 212 1 256 1 
10 1 259 3 147 1 129 3 95 3 308 1 101 3 161 3 
259 1 129 1 121 1 95 1 101 1 254 1 161 1 
259 1 147 1 129 1 121 1 95 1 69 1 101 1 161 1 357 1 
259 3 21 2 315 1 194 1 147 2 1 1 69 1 95 4 71 1 5 1 199 1 6 1 120 1 121 1 101 3 204 1 324 1 30 1 326 1 180 1 10 1 237 1 240 1 129 4 12 1 269 1 107 1 13 1 376 1 308 1 208 1 161 3 186 1 163 1 310 1 136 1 221 1 247 1 281 1 252 1 65 1 284 1 212 1 256 1 
10 1 259 2 128 1 129 2 95 2 101 1 308 1 365 1 161 1 
259 3 194 1 147 1 129 3 69 1 95 3 308 2 133 1 161 3 310 1 221 1 136 1 53 1 121 1 252 1 101 3 326 1 30 1 180 1 
259 2 288 1 147 1 129 2 69 1 95 2 308 1 161 2 111 1 101 2 
10 1 237 1 129 1 95 1 13 1 71 1 163 1 5 1 199 1 120 1 281 1 65 1 284 1 256 1 212 1 
10 1 237 1 129 1 95 1 71 1 163 1 5 1 199 1 120 1 231 1 281 1 65 1 284 1 212 1 373 1 
66 1 21 2 315 1 288 2 1 1 200 2 6 2 351 2 204 1 352 1 205 1 54 1 267 1 125 1 236 1 12 1 107 1 376 1 159 1 160 1 137 1 111 2 247 4 283 1 
259 1 129 1 121 1 95 1 101 1 130 1 161 1 310 1 
10 1 238 1 259 5 20 1 128 1 147 1 129 5 95 5 69 1 308 2 365 1 161 4 136 1 101 4 
259 2 129 2 121 1 95 2 130 1 101 2 254 1 161 2 
40 1 203 1 
40 1 203 1 
291 1 91 1 
291 1 91 1 
291 1 91 1 
178 1 40 1 203 1 
178 1 40 1 203 1 
40 1 203 1 63 1 
40 2 291 1 203 2 27 1 91 1 244 1 
178 1 40 1 203 1 
40 1 203 1 49 1 
40 1 203 1 49 1 
40 1 203 1 49 1 
304 1 374 2 131 1 149 1 158 1 244 1 133 1 262 1 221 2 367 2 379 1 40 2 203 2 112 2 251 2 252 2 92 3 225 1 104 2 
259 2 95 2 150 1 172 1 52 1 367 1 119 1 203 1 101 2 372 1 104 1 10 1 304 1 374 1 129 2 87 1 63 1 161 2 221 1 164 1 40 1 251 1 252 1 92 1 
358 1 157 1 227 1 
358 1 144 1 227 1 
358 3 139 1 157 2 355 1 88 1 144 1 
358 2 139 1 157 1 22 1 355 1 144 1 
358 2 139 2 157 1 355 1 144 1 
258 3 169 1 68 1 261 1 150 1 172 1 118 2 349 2 298 1 78 1 370 1 54 1 267 1 156 2 372 1 125 1 206 1 328 4 235 1 32 1 239 1 184 3 133 2 14 1 221 5 362 1 224 1 249 1 252 5 283 1 286 2 145 1 
258 9 169 2 261 1 172 4 368 1 349 6 298 1 154 1 78 2 232 1 54 3 267 3 156 6 125 3 328 7 206 1 235 2 32 1 239 2 184 8 133 5 333 1 162 1 14 3 135 1 221 9 278 5 362 2 224 3 249 6 250 5 252 9 43 1 283 3 286 6 
258 4 169 1 68 1 261 1 172 1 118 1 349 2 78 1 54 1 267 1 156 2 125 1 328 2 235 1 239 1 184 3 133 3 14 1 221 3 135 1 362 1 224 2 252 3 283 1 145 1 286 2 
258 7 169 1 68 1 261 1 172 2 118 2 349 4 154 1 78 1 232 1 54 2 267 2 156 4 125 2 235 1 328 3 239 1 184 5 133 4 14 2 221 4 135 1 362 1 224 3 252 4 43 1 283 2 286 4 145 1 
293 1 282 1 212 1 
271 1 212 1 
189 1 
212 1 5 1 
282 2 151 1 371 1 212 3 5 1 163 1 
212 1 5 1 163 1 
229 1 212 1 
217 1 66 2 183 1 242 1 366 1 109 1 246 1 247 7 6 3 211 1 351 4 313 1 352 3 142 2 54 1 283 1 363 1 
217 1 66 2 183 1 242 1 366 1 109 1 246 1 247 7 6 3 211 1 351 4 313 1 352 3 142 2 54 1 283 1 363 1 
217 1 66 2 183 1 242 1 366 1 109 1 246 1 247 7 6 3 211 1 351 4 313 1 352 3 142 2 54 1 283 1 363 1 18 1 
66 3 21 2 195 3 1 1 294 1 3 4 366 1 117 1 320 1 6 11 7 1 233 1 351 11 352 7 204 1 267 3 54 3 125 3 215 1 183 1 12 1 107 1 242 1 243 1 14 3 109 1 247 22 142 1 283 3 363 4 
217 1 66 3 183 1 21 4 12 2 294 1 1 2 107 2 61 1 242 1 366 1 109 1 246 1 247 9 6 4 90 1 211 1 351 5 352 4 142 2 204 2 54 1 283 1 363 1 
228 1 344 1 170 1 48 1 71 1 316 1 201 1 120 1 265 2 234 1 81 2 268 1 306 1 157 1 354 1 37 1 88 1 275 1 165 1 188 1 358 2 166 1 138 1 41 1 281 1 337 1 65 1 284 1 144 1 227 1 
228 1 344 1 170 2 48 1 71 1 316 1 177 1 214 1 120 1 265 3 234 1 81 3 268 1 57 1 306 1 157 1 354 1 37 1 88 1 275 1 358 2 166 1 138 1 41 1 281 1 337 1 65 1 284 1 144 1 227 1 
344 1 170 2 71 1 316 1 177 1 120 1 265 2 234 1 81 2 268 1 57 1 306 1 157 1 354 1 37 1 88 1 275 1 358 2 166 1 138 1 281 1 65 1 284 1 144 1 227 1 
228 1 342 1 48 1 2 1 71 1 76 1 5 1 214 1 120 1 265 1 179 1 234 2 81 1 268 2 237 1 309 1 275 2 138 2 141 1 281 1 65 1 284 1 212 1 
228 1 306 1 157 1 48 1 37 1 71 1 88 1 275 1 358 2 188 1 177 1 166 1 201 1 41 1 138 1 120 1 265 1 281 1 337 1 65 1 144 1 284 1 234 1 81 1 268 1 227 1 
132 1 
0 1 194 1 289 1 292 1 95 1 2 1 5 1 349 2 350 1 298 1 8 1 56 1 206 3 235 1 237 2 58 2 106 2 60 2 310 1 311 1 362 1 249 6 312 1 252 5 65 2 212 1 258 2 257 1 259 1 169 1 261 1 71 2 318 2 319 2 369 1 120 2 78 1 121 1 80 1 30 1 180 1 33 2 128 1 375 1 129 1 184 2 38 2 133 2 39 1 221 5 42 4 224 2 141 1 281 1 284 1 
257 1 259 1 194 1 0 1 128 1 289 1 375 1 129 1 292 1 95 1 310 1 319 1 98 1 221 3 42 2 249 2 121 1 252 3 80 1 30 1 180 1 206 1 
257 1 259 1 0 1 194 1 289 1 292 1 95 1 261 1 98 1 121 1 80 1 30 1 180 1 206 1 33 1 128 1 129 1 375 1 133 1 310 1 221 3 42 3 249 1 252 3 
257 1 259 1 0 1 194 1 289 1 292 1 95 1 261 1 319 1 98 1 121 1 80 1 30 1 180 1 206 1 33 1 128 1 129 1 375 1 38 1 133 1 310 1 221 3 42 3 249 2 252 3 
194 1 0 1 289 1 292 1 95 1 98 1 349 1 298 1 206 3 58 2 106 2 60 2 310 1 362 1 249 7 312 1 252 5 257 1 259 1 67 1 169 1 261 5 318 2 319 4 321 1 121 1 78 1 80 1 30 1 180 1 33 4 128 1 129 1 375 1 184 1 38 4 133 5 39 1 276 1 221 5 190 1 42 6 224 2 143 1 
194 1 0 1 289 1 292 1 95 1 349 1 298 1 206 2 56 1 58 2 106 2 60 2 310 1 362 1 312 1 249 4 252 4 257 1 258 2 259 1 169 1 261 1 318 2 319 2 121 1 78 1 80 1 30 1 180 1 33 2 128 1 129 1 375 1 184 1 38 2 133 2 39 1 221 4 42 4 224 2 
257 1 259 1 67 1 0 1 194 1 169 1 289 1 292 1 95 1 261 1 318 2 319 2 349 1 321 1 298 1 78 1 121 1 80 1 30 1 180 1 206 2 33 2 128 1 129 1 375 1 58 2 106 2 60 2 184 1 38 2 133 1 39 1 310 1 221 4 42 4 362 1 249 4 224 2 312 1 252 4 143 1 
257 1 259 1 67 1 0 1 194 1 169 1 289 1 292 1 95 1 261 1 318 2 319 2 349 1 321 1 298 1 78 1 121 1 80 1 30 1 180 1 206 2 33 2 128 1 129 1 375 1 58 2 106 2 60 2 184 1 38 2 133 1 39 1 310 1 221 4 42 4 362 1 249 4 224 2 312 1 252 4 143 1 
258 2 257 1 259 1 0 1 194 1 169 1 289 1 292 1 95 1 261 1 319 2 349 1 321 1 298 1 78 1 121 1 80 1 323 1 353 1 30 1 180 1 206 2 33 2 128 1 129 1 375 1 58 2 60 2 184 1 38 2 133 1 39 1 310 1 221 4 222 2 334 2 140 1 42 4 362 1 249 4 252 4 
257 1 259 1 67 1 169 1 0 1 194 1 289 1 292 1 95 1 261 1 318 2 319 3 349 1 321 1 298 1 78 1 121 1 80 1 30 1 180 1 206 2 33 3 128 1 129 1 375 1 58 2 106 2 60 2 184 1 38 3 133 1 39 1 310 1 221 4 190 1 362 1 42 5 224 2 312 1 249 5 252 4 143 1 
257 1 259 1 67 1 169 1 0 1 194 1 289 1 292 1 95 1 261 1 318 2 319 3 349 1 321 1 298 1 78 1 121 1 80 1 30 1 180 1 206 2 33 3 128 1 129 1 375 1 58 2 106 2 60 2 184 1 38 3 133 1 39 1 310 1 221 4 190 1 362 1 42 5 224 2 312 1 249 5 252 4 143 1 
194 1 0 1 289 1 292 1 95 1 349 1 298 1 206 2 56 1 58 2 60 2 310 1 362 1 249 4 252 4 257 1 258 2 259 1 169 1 261 1 319 2 121 1 78 1 80 1 30 1 180 1 33 2 128 1 129 1 375 1 184 1 38 2 133 1 39 1 221 4 222 2 334 2 140 1 42 4 
66 2 288 1 21 2 315 1 293 1 1 1 366 1 200 1 6 3 351 3 204 1 352 2 54 1 217 1 10 2 183 1 12 1 107 1 376 1 111 1 246 1 137 1 247 6 211 1 142 1 283 1 
66 1 21 4 315 2 288 4 195 3 213 1 1 2 3 3 200 11 320 1 6 6 351 8 352 2 204 2 28 1 267 2 54 1 125 1 10 1 305 1 12 2 269 1 107 2 376 1 219 1 243 1 14 2 111 11 335 1 15 1 247 14 283 2 363 1 
259 1 288 1 315 1 21 2 146 1 1 1 95 2 213 1 71 1 5 1 199 1 120 1 6 1 101 1 351 1 204 1 28 1 10 1 237 1 129 2 12 1 269 1 13 1 107 1 376 1 308 1 272 1 161 1 163 1 136 1 247 2 281 1 65 1 284 1 191 1 255 1 212 1 256 1 
288 7 95 3 1 3 295 2 5 2 199 2 200 7 100 1 6 10 101 1 351 10 204 3 352 8 54 3 10 2 237 1 207 2 12 3 107 3 13 2 308 1 161 1 163 2 108 1 14 2 246 1 111 7 247 20 211 1 65 3 256 2 212 2 363 4 66 4 259 1 21 6 315 3 213 1 71 3 366 1 77 2 177 1 120 3 264 2 28 1 324 2 267 2 124 1 125 2 217 1 183 1 129 3 269 1 376 3 136 1 281 2 142 1 284 2 283 3 
259 1 21 4 315 2 95 1 1 2 213 1 2 1 71 8 198 1 23 1 5 2 177 1 120 8 6 1 101 1 155 1 351 1 204 2 303 2 237 2 129 1 35 1 12 2 269 1 107 2 308 1 376 2 332 1 161 1 165 1 380 1 137 1 247 2 281 2 141 1 65 7 284 2 212 3 192 1 
66 1 259 1 288 1 21 2 315 1 147 1 69 1 1 1 95 1 200 1 6 2 101 1 351 1 352 1 204 1 28 1 267 1 54 1 125 1 129 1 12 1 107 1 376 1 161 1 14 1 111 1 247 3 314 1 283 1 
288 1 315 1 21 2 12 1 1 1 107 1 376 1 200 1 111 1 137 1 247 2 351 2 352 1 204 1 205 1 267 1 283 1 363 1 
66 1 288 1 315 1 21 2 12 1 1 1 107 1 376 1 200 1 111 1 137 1 247 2 6 2 352 1 204 1 54 1 125 1 236 1 
66 1 21 2 315 1 288 2 1 1 200 2 6 2 351 2 204 1 352 2 267 1 54 1 125 1 12 1 107 1 376 1 14 1 137 1 111 2 247 4 283 1 363 1 
288 1 315 1 21 2 12 1 1 1 107 1 376 1 332 1 200 1 111 1 247 2 351 2 352 1 204 1 205 1 267 1 283 1 363 1 
66 1 288 1 315 1 21 2 12 1 1 1 107 1 376 1 332 1 200 1 111 1 247 2 6 2 352 1 204 1 54 1 125 1 236 1 
66 1 21 2 315 1 288 2 1 1 200 2 6 2 351 2 204 1 352 2 267 1 54 1 125 1 12 1 107 1 376 1 332 1 14 1 111 2 247 4 283 1 363 1 
66 1 288 2 315 1 21 2 12 1 1 1 107 1 376 1 14 1 200 2 111 2 247 4 6 2 351 2 352 2 204 1 54 1 267 1 283 1 125 1 363 1 
315 1 21 2 213 1 95 1 1 1 71 1 5 1 199 1 120 1 6 1 351 1 204 1 324 1 10 1 237 1 129 1 12 1 269 1 13 1 107 1 376 1 163 1 247 2 281 1 65 1 284 1 256 1 212 1 
315 1 21 2 213 1 95 1 1 1 71 1 5 1 199 1 231 1 120 1 6 1 351 1 204 1 373 1 10 1 237 1 129 1 12 1 269 1 107 1 376 1 163 1 89 1 247 2 281 1 65 1 284 1 212 1 
66 1 21 2 315 1 288 2 1 1 200 2 6 2 351 2 204 1 352 2 28 1 267 1 54 1 125 1 12 1 107 1 376 1 14 1 111 2 247 4 283 1 363 1 
66 1 288 2 315 1 21 2 95 1 1 1 71 1 5 1 200 2 199 1 6 2 120 1 264 1 351 2 352 2 204 1 54 1 267 1 324 1 125 1 129 1 12 1 13 1 107 1 376 1 163 1 14 1 165 1 111 2 247 4 281 1 65 1 283 1 284 1 363 1 256 1 212 1 
259 1 21 2 315 1 288 1 147 1 69 1 1 1 95 1 200 1 6 1 101 1 351 2 352 1 204 1 28 1 54 1 267 1 125 1 129 1 12 1 107 1 376 1 161 1 14 1 223 1 111 1 247 3 283 1 363 1 
46 1 66 3 115 2 21 4 47 1 195 1 1 2 3 2 230 2 320 1 6 10 351 9 204 2 352 6 267 3 54 3 125 3 218 1 105 1 12 2 107 2 61 1 243 1 14 3 247 19 280 1 44 1 338 1 283 3 363 3 
46 2 66 2 115 4 21 6 94 1 195 2 294 2 1 3 3 2 230 1 6 12 351 14 352 4 204 3 54 2 267 3 125 2 83 1 331 1 218 1 105 2 12 3 107 3 61 1 185 1 243 2 14 3 247 26 279 1 280 1 44 1 283 3 363 2 339 1 
46 1 66 4 115 4 21 6 94 1 195 3 294 1 1 3 3 4 366 1 230 1 320 1 6 21 351 20 204 3 352 8 267 4 54 5 125 4 217 1 183 1 83 1 331 1 218 1 105 2 12 3 107 3 61 1 185 1 243 3 14 4 378 1 246 1 279 1 247 41 211 1 280 1 142 1 44 1 338 1 283 5 363 4 339 1 
46 1 66 4 115 4 21 8 94 1 195 3 294 2 1 4 3 4 366 1 230 1 320 1 6 18 351 20 204 4 352 7 267 4 54 4 125 3 217 1 183 1 83 1 331 1 218 1 105 2 12 4 107 4 61 1 185 1 243 3 14 4 378 1 246 1 279 1 247 38 211 1 280 1 142 1 44 1 338 1 283 5 363 3 339 1 
46 1 66 7 115 4 21 4 94 1 195 4 294 1 1 2 3 4 366 1 230 1 320 2 6 25 351 27 204 2 352 14 267 7 54 8 125 7 217 1 183 1 83 1 331 1 218 1 105 1 12 2 107 2 61 1 219 2 185 1 243 2 14 7 246 1 279 1 247 52 211 1 280 1 142 1 44 1 283 8 363 7 339 1 
367 1 379 1 40 1 374 1 203 1 70 1 251 1 149 1 244 1 104 1 
119 1 63 1 
347 1 367 1 40 1 374 1 307 1 203 1 251 1 24 1 104 1 
304 1 374 1 131 1 149 1 158 1 244 1 133 1 221 1 367 1 379 1 40 1 203 1 112 1 252 1 251 1 92 2 225 1 104 1 
304 1 374 1 131 1 149 1 158 1 244 1 133 1 221 1 367 1 379 1 40 1 203 1 112 1 252 1 251 1 92 2 225 1 104 1 
304 1 374 1 131 1 149 1 158 1 244 1 133 1 221 1 367 1 379 1 40 1 203 1 112 1 252 1 251 1 92 2 225 1 104 1 
178 1 27 1 285 1 
178 1 27 1 285 1 
85 1 49 1 
85 1 27 1 49 1 
164 1 87 1 
259 2 95 2 150 1 172 1 52 1 367 1 119 1 203 1 101 2 372 1 328 1 104 1 10 1 374 1 129 2 87 1 63 1 161 2 221 1 164 1 40 1 210 1 112 1 252 1 251 1 92 1 225 1 
178 1 285 1 
85 1 27 1 49 1 
259 2 315 1 21 2 196 1 95 2 1 1 213 1 71 2 198 1 5 1 120 2 6 1 155 1 351 1 204 1 28 1 301 1 303 2 129 2 12 1 269 1 36 1 107 1 376 1 220 1 247 2 281 1 168 1 65 2 284 1 212 1 
306 1 290 1 157 1 71 2 88 1 275 1 358 2 177 1 165 1 166 1 41 1 120 2 281 1 65 2 29 1 144 1 284 1 9 1 227 1 
306 1 157 1 71 1 88 1 275 1 358 2 177 1 166 1 41 1 120 1 281 1 65 1 29 1 144 1 45 1 284 1 227 1 
237 1 290 1 2 1 71 1 275 1 5 1 76 1 120 1 281 1 141 1 65 1 284 1 212 1 82 1 
306 1 290 1 157 1 71 1 88 1 275 1 358 2 177 1 166 1 41 1 120 1 281 1 65 1 29 1 144 1 284 1 9 1 227 1 
327 1 
364 1 349 1 293 1 184 1 261 1 133 1 31 1 
258 1 169 1 261 1 318 1 349 1 298 1 78 1 206 1 106 1 184 1 133 2 221 1 362 1 224 1 312 1 249 1 252 1 
341 2 194 2 151 1 229 2 5 3 350 1 349 8 298 4 300 1 54 2 302 2 156 6 235 2 206 3 237 1 241 2 245 1 163 3 14 2 165 1 248 1 362 4 249 5 252 5 65 3 17 2 212 10 258 12 169 4 364 1 261 2 71 3 73 1 174 1 25 2 77 2 120 3 78 4 267 2 125 2 31 1 184 9 271 3 133 8 134 2 187 2 221 5 224 6 281 3 282 2 226 2 284 4 283 2 286 6 
258 6 341 1 169 2 94 1 195 1 3 1 261 2 350 1 349 5 298 2 78 2 122 1 267 2 54 2 302 2 156 5 125 2 235 1 206 1 83 1 331 1 184 8 62 1 243 1 133 5 14 2 221 1 279 1 362 2 249 1 224 3 252 1 283 2 286 5 339 1 
341 1 259 1 169 1 147 1 95 1 366 1 349 2 299 1 298 1 153 1 121 1 78 1 101 1 54 1 302 2 183 1 129 1 184 2 186 1 161 1 221 1 362 1 16 1 211 1 252 1 254 1 143 1 283 2 
169 1 364 1 261 1 184 1 133 1 349 1 298 1 362 1 78 1 31 1 
258 10 341 1 184 5 133 5 77 1 14 2 349 5 224 5 267 2 54 2 302 2 283 2 156 5 125 2 286 5 
221 1 249 1 252 1 261 1 133 1 206 1 
169 2 2 1 71 4 173 1 174 1 5 1 369 1 350 2 349 2 298 1 120 4 78 2 325 1 8 1 235 2 206 2 237 2 184 2 135 1 221 3 248 2 362 2 249 4 281 1 252 3 141 1 65 4 284 1 212 1 
259 2 21 2 315 1 147 2 1 1 95 3 71 1 5 1 199 1 6 1 120 1 101 2 204 1 324 1 10 1 237 1 129 3 12 1 269 1 107 1 13 1 208 1 376 1 161 2 186 1 163 1 247 1 281 1 65 1 284 1 256 1 212 1 
258 4 169 1 184 1 261 2 133 4 349 2 350 1 298 1 362 1 224 2 78 1 142 1 156 2 286 2 235 1 
367 1 374 1 346 1 
367 1 374 1 346 1 
164 1 367 1 374 1 149 1 102 1 
367 1 374 1 346 1 
367 1 148 1 374 1 
367 1 148 1 374 1 
367 1 148 1 374 1 
367 1 374 1 
40 1 203 1 
217 1 66 2 21 4 183 1 12 2 1 2 107 2 294 1 366 1 246 1 247 8 6 4 211 1 351 4 142 1 352 3 204 2 54 1 283 1 363 1 
217 1 66 2 183 1 293 1 366 1 246 1 247 6 6 3 211 1 351 3 142 1 352 2 54 1 283 1 
340 1 66 1 21 2 12 1 1 1 107 1 14 1 247 4 6 2 351 2 352 2 204 1 54 1 267 1 283 1 125 1 363 1 
66 1 195 1 3 2 243 1 14 1 320 1 247 7 6 4 351 3 352 2 54 1 267 1 283 1 125 1 363 1 
66 5 21 4 195 2 294 2 1 2 3 2 366 2 320 1 6 12 351 11 352 9 204 2 123 1 267 2 54 3 125 2 217 1 183 2 12 2 107 2 219 1 14 2 246 1 247 23 15 1 211 1 142 1 283 3 363 4 
247 1 6 1 3 1 
247 1 195 1 351 1 
340 1 66 2 21 2 12 1 107 1 1 1 77 1 14 1 247 6 6 3 351 3 204 1 352 3 267 1 54 1 283 1 363 1 125 1 
66 1 21 2 195 1 94 1 1 1 3 1 6 6 351 6 204 1 352 2 267 2 54 2 125 2 83 1 331 1 12 1 107 1 61 1 243 1 14 2 247 12 279 1 283 2 363 1 339 1 
66 1 183 1 366 1 247 6 6 3 211 1 351 3 352 2 54 1 283 1 363 1 
217 1 66 1 183 1 21 2 12 1 294 1 1 1 107 1 366 1 246 1 247 3 6 2 351 1 352 2 123 1 204 1 363 1 
66 3 21 2 183 2 12 1 107 1 1 1 61 1 366 2 247 10 299 1 6 5 211 1 351 5 204 1 352 5 54 2 283 2 363 2 
21 2 12 1 1 1 107 1 61 1 247 2 351 2 204 1 352 1 267 1 283 1 363 1 
66 1 21 2 12 1 1 1 107 1 61 1 14 1 247 4 6 2 351 2 352 2 204 1 54 1 267 1 283 1 125 1 363 1 
66 1 21 6 183 1 12 3 294 1 1 3 107 3 61 1 366 1 247 3 6 2 351 1 123 1 204 3 352 2 338 1 363 1 
340 1 66 7 21 10 195 3 294 2 1 5 3 4 366 3 320 1 6 18 7 1 233 1 351 16 123 1 204 5 352 12 267 3 54 5 125 3 215 1 217 1 183 3 12 5 107 5 61 1 243 1 14 3 246 1 247 34 211 2 142 1 338 1 283 5 363 5 
66 2 21 2 195 1 1 1 3 1 366 1 6 4 351 4 204 1 352 2 54 1 217 1 183 1 331 1 12 1 107 1 61 1 243 1 246 1 247 8 211 1 142 1 283 1 
340 1 66 2 21 4 195 1 1 2 3 2 366 1 320 1 6 5 351 6 204 2 352 3 54 1 267 1 217 1 183 1 331 1 12 2 107 2 61 1 243 1 14 1 246 1 247 11 211 1 142 1 283 2 363 1 
340 1 66 3 21 6 195 1 94 1 1 3 294 1 3 1 366 1 6 10 351 9 204 3 352 4 267 2 54 3 125 2 217 1 183 1 83 1 331 1 12 3 107 3 61 1 243 1 14 2 246 1 247 19 279 1 211 1 142 1 283 3 363 1 339 1 
340 1 66 3 21 6 195 1 94 1 294 1 1 3 3 1 366 1 6 7 351 10 204 3 352 5 267 2 54 2 125 1 217 1 183 1 83 1 331 1 12 3 107 3 61 1 243 1 14 2 246 1 247 17 279 1 211 1 142 1 283 3 363 2 339 1 
66 2 21 2 195 1 1 1 3 1 366 1 6 4 351 4 204 1 352 2 54 1 217 1 183 1 331 1 12 1 107 1 61 1 243 1 246 1 247 8 211 1 142 1 283 1 
66 1 21 2 195 1 94 1 1 1 3 1 6 6 351 6 204 1 352 2 267 2 54 2 125 2 83 1 331 1 12 1 107 1 61 1 243 1 14 2 247 12 279 1 283 2 363 1 339 1 
340 1 66 3 21 8 94 1 195 1 1 4 294 2 3 1 366 1 6 8 351 10 204 4 352 5 267 2 54 2 125 1 217 1 183 1 83 1 331 1 12 4 107 4 61 1 243 1 14 2 246 1 247 18 279 1 211 1 142 1 283 3 363 2 339 1 
66 3 21 8 94 1 195 1 1 4 294 2 3 1 6 7 351 9 204 4 352 6 267 3 54 2 125 2 83 1 331 1 12 4 107 4 61 1 243 1 14 3 247 16 279 1 338 1 283 3 363 3 339 1 
217 2 66 3 183 3 366 3 246 1 247 7 6 4 211 1 351 3 352 6 54 1 283 1 363 3 
66 3 21 8 94 1 195 1 1 4 294 2 3 1 366 1 6 8 351 10 204 4 352 4 267 2 54 2 125 1 217 1 183 1 83 1 331 1 12 4 107 4 61 1 243 1 14 2 246 1 247 18 279 1 211 1 142 1 338 1 283 3 363 1 339 1 
10 1 127 1 259 1 128 1 129 1 95 1 365 1 
10 1 127 1 259 1 128 1 129 1 95 1 365 1 356 1 317 1 360 1 110 1 103 1 
237 1 120 1 293 1 281 1 2 1 141 1 71 1 65 1 284 1 212 1 5 1 
10 1 259 1 237 1 129 2 95 2 13 1 308 1 71 1 161 1 5 1 163 1 199 1 120 1 101 1 281 1 65 1 284 1 212 1 
10 1 259 2 129 2 95 2 13 1 308 1 71 1 241 1 229 1 161 1 310 1 5 2 163 2 199 1 120 1 248 1 121 1 101 2 281 1 65 1 180 1 284 1 212 3 
259 2 95 2 71 2 229 1 5 2 199 1 231 1 120 2 121 1 101 2 180 1 10 1 129 2 270 1 308 1 241 1 161 1 163 2 310 1 248 1 281 1 65 2 284 1 212 3 
237 1 194 1 270 1 261 1 345 1 71 3 271 1 241 1 133 1 229 1 5 1 163 1 221 2 348 1 120 3 248 1 249 1 252 2 281 1 65 3 282 1 284 1 212 4 
237 1 194 1 270 1 261 1 71 3 271 1 241 1 133 1 229 1 5 1 163 1 221 2 187 1 120 3 248 1 249 1 252 2 281 1 65 3 282 1 284 1 212 4 
120 1 281 1 71 1 65 1 284 1 192 1 
237 1 59 1 120 1 281 1 71 1 65 1 151 1 284 1 74 1 212 1 5 1 163 1 
288 1 95 2 1 2 5 1 199 1 200 1 6 3 101 1 351 3 204 2 352 2 301 1 54 1 10 2 207 1 12 2 13 1 107 2 308 1 161 1 163 1 165 1 246 1 111 1 247 6 211 1 65 1 256 1 212 1 259 1 66 2 21 4 315 2 71 1 366 1 120 1 264 1 28 1 324 1 217 1 183 1 129 2 376 2 281 1 142 1 284 1 283 1 
169 2 194 1 364 1 261 1 71 1 174 1 25 1 349 1 120 1 298 2 78 2 31 1 328 1 206 1 237 1 184 1 271 1 133 1 134 1 221 3 187 1 362 2 249 2 252 3 65 1 282 1 226 1 212 2 
71 2 73 1 151 1 163 1 5 1 165 1 120 2 281 1 65 2 282 1 284 2 212 2 192 1 
296 1 165 1 237 1 120 4 270 1 281 1 2 1 141 1 71 4 65 4 284 1 212 1 5 1 
330 1 59 1 120 1 281 1 71 1 65 1 284 1 212 1 5 1 163 1 126 1 108 1 
358 1 237 1 166 1 120 1 281 1 71 1 65 1 144 1 284 1 227 1 
71 2 198 1 5 1 165 1 177 1 120 2 281 1 168 1 65 2 284 1 212 1 
237 1 35 1 2 1 71 5 198 1 5 2 296 1 165 1 380 1 120 5 248 1 141 1 281 2 65 4 284 2 212 3 
237 1 35 1 2 1 71 5 198 1 5 2 296 1 165 1 202 1 120 5 248 1 141 1 281 2 65 4 284 2 212 3 
10 1 259 1 237 1 129 2 95 2 308 1 71 1 161 1 5 1 163 1 199 1 120 1 231 1 101 1 281 1 65 1 284 1 212 1 
59 1 120 1 248 1 281 1 71 1 65 1 151 1 284 1 74 1 212 1 5 1 163 1 
259 1 343 1 84 1 129 1 95 1 196 1 36 1 220 1 273 1 
260 1 343 1 209 1 
10 1 84 1 343 1 273 1 329 1 
10 1 194 1 260 1 343 1 84 2 261 1 116 1 133 1 273 2 310 1 221 2 209 1 121 1 252 2 326 1 30 1 180 1 328 1 329 2 
344 1 293 1 354 1 316 1 
228 1 344 1 265 1 354 1 48 1 316 1 81 1 
138 1 265 1 234 1 
228 1 34 1 344 1 48 1 354 1 50 2 316 1 201 1 336 1 265 3 253 1 81 3 
11 1 228 1 344 1 170 1 265 2 354 1 48 1 316 1 81 2 
228 1 157 1 48 1 197 1 316 1 358 1 201 1 361 1 265 1 81 1 227 1 
228 1 201 1 265 1 354 1 48 1 316 1 81 1 
228 1 201 1 344 1 265 1 354 2 48 1 81 1 
228 2 354 1 48 2 4 1 316 1 201 1 265 2 79 1 81 2 114 1 
228 1 344 1 170 2 354 1 48 1 197 1 316 2 97 1 277 1 201 1 265 3 266 1 81 3 
228 1 344 1 157 1 170 1 354 1 48 1 316 1 88 1 96 1 358 2 201 1 265 2 144 1 81 2 227 1 
228 2 11 1 344 1 86 1 170 2 354 1 48 2 197 1 316 2 97 1 201 1 265 4 81 4 
228 1 201 1 344 1 265 1 354 1 48 1 316 1 81 1 
228 1 34 1 344 2 170 2 354 2 48 1 197 1 50 1 316 3 377 1 97 1 336 1 265 4 81 4 
181 1 228 1 344 1 93 1 170 1 354 1 48 1 171 1 316 1 201 1 265 2 81 2 
228 1 34 1 344 1 48 1 354 1 50 2 316 1 201 1 64 1 336 2 265 3 81 3 
263 1 359 2 316 2 274 1 
228 1 201 1 265 1 48 1 81 1 287 1 
228 1 201 1 344 1 170 1 265 2 354 1 266 1 48 1 316 1 81 2 
51 1 
228 1 201 1 344 1 265 1 354 1 48 1 316 1 81 1 
228 1 344 1 170 1 48 1 354 1 50 1 316 1 201 1 265 3 266 1 81 3 
197 1 316 1 377 1 97 1 
354 1 316 1 

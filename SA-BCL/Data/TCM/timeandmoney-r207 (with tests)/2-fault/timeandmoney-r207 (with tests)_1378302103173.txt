#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 323 (280,350) (280,350) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 323 (280,350) (280,350) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 323 (280,350) (280,350) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 323 (280,350) (280,350) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 323 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 323 121 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 323 121 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 4 180 1 280 1 72 1 265 3 243 2 223 1 8 2 224 1 108 1 11 1 15 6 55 4 271 1 350 1 20 2 319 1 22 2 274 2 323 1 62 2 233 9 214 2 197 9 155 1 215 1 
39 4 180 1 280 1 72 1 265 3 243 2 223 1 8 2 224 1 108 1 11 1 15 6 55 4 271 1 350 1 20 2 319 1 22 2 274 2 323 1 62 2 233 9 214 2 197 9 155 1 215 1 
39 4 180 1 280 1 72 1 265 3 243 2 223 1 8 2 224 1 108 1 11 1 15 6 55 4 271 1 350 1 20 2 319 1 22 2 274 2 323 1 62 2 233 9 214 2 197 9 155 1 215 1 
39 3 180 1 15 4 55 3 280 1 271 1 72 1 265 2 350 1 20 2 319 1 243 2 22 1 323 1 274 2 223 1 233 7 62 2 8 2 224 1 214 2 197 7 108 1 215 1 155 1 
39 2 15 3 55 2 271 1 72 1 265 1 20 1 243 1 22 2 274 1 323 1 233 4 8 1 214 1 197 4 11 1 
364 1 158 1 55 1 271 1 18 1 43 1 131 1 319 1 243 1 274 1 233 2 62 1 8 1 214 1 197 2 155 1 
364 1 39 1 15 1 55 2 271 1 265 1 131 1 233 3 223 1 62 1 8 2 214 2 197 3 
39 4 180 1 15 7 55 4 271 1 72 1 205 1 265 3 20 1 243 1 22 2 274 1 323 1 121 1 233 9 223 1 62 1 8 2 214 2 197 9 11 1 215 1 
39 4 180 1 15 7 55 4 271 1 72 1 205 1 265 3 20 1 243 1 22 2 274 1 323 1 121 1 233 9 223 1 62 1 8 2 214 2 197 9 11 1 215 1 
230 1 325 1 309 1 
151 1 325 1 49 2 
310 2 365 1 217 2 70 2 221 2 211 2 219 1 98 2 
91 1 217 2 0 1 70 3 128 1 94 1 161 1 97 1 219 1 98 2 359 2 181 1 221 2 167 1 222 1 211 3 9 1 139 1 310 2 365 1 250 1 54 2 53 1 185 1 33 1 82 1 348 1 229 2 36 1 170 1 148 2 374 1 118 1 232 2 195 1 328 1 262 1 
310 1 365 1 217 1 126 1 70 1 221 1 211 1 137 1 98 1 99 1 
311 1 217 1 70 1 25 1 34 1 187 1 42 1 99 1 77 1 325 1 122 1 211 1 309 1 249 1 
310 1 311 2 217 1 70 1 25 2 187 1 42 1 98 1 99 1 221 1 77 1 325 1 211 1 309 1 249 1 
67 1 311 1 149 1 25 1 174 1 
67 1 311 2 201 1 25 2 325 1 174 1 176 1 309 1 
311 1 25 1 174 1 
67 1 365 1 310 1 311 1 217 1 126 1 70 1 25 1 98 1 99 1 221 1 135 1 211 1 137 1 
325 1 
67 1 311 2 201 1 332 1 25 2 325 1 174 1 309 1 
67 2 92 1 311 5 111 2 201 1 357 1 13 1 25 5 368 1 273 1 103 2 303 1 183 1 247 1 325 1 30 2 174 2 175 1 309 1 
230 1 219 1 
310 1 217 2 70 2 98 1 219 2 147 1 221 1 152 1 211 2 
59 1 255 1 343 1 
91 1 70 1 185 1 33 1 94 1 161 1 219 1 359 1 36 1 148 1 374 1 232 1 167 1 211 1 31 1 262 1 
310 1 91 1 313 1 217 1 70 2 185 1 33 1 94 1 161 1 256 1 98 1 359 1 36 1 374 1 148 1 232 1 167 1 211 2 343 1 262 1 
310 3 217 3 221 1 70 3 211 3 256 1 219 1 98 3 
310 1 217 1 70 1 211 1 137 1 98 1 99 1 
310 1 147 1 217 1 70 1 221 1 152 1 211 1 98 1 99 1 
91 1 217 3 0 1 70 4 25 1 94 1 42 1 161 1 219 1 98 3 359 1 99 1 181 1 221 2 167 1 222 1 77 1 211 4 139 1 249 1 310 3 365 1 313 1 311 1 250 1 54 2 53 1 112 1 185 1 33 1 187 1 348 1 256 1 229 1 36 1 170 1 147 1 374 1 148 1 321 1 232 1 195 1 328 1 262 1 
310 1 217 2 191 1 70 2 34 1 211 2 256 1 219 1 98 1 
310 3 311 1 313 1 217 3 70 3 25 1 187 1 42 1 256 2 98 3 99 1 190 1 147 1 321 1 221 1 77 1 325 1 211 3 249 1 
310 2 217 2 70 2 256 1 98 2 147 1 221 1 59 1 211 2 343 1 
91 1 70 1 185 1 33 1 94 1 161 1 219 1 359 1 36 1 148 1 374 1 232 1 167 1 211 1 262 1 
91 1 70 1 32 1 185 1 33 1 161 1 219 1 359 1 148 1 374 1 232 1 29 1 167 1 211 1 262 1 
0 1 202 1 97 2 181 1 2 1 222 1 47 1 307 1 139 1 343 2 250 2 54 2 53 1 255 2 229 4 372 1 37 1 172 1 60 1 59 2 328 1 277 1 24 1 66 1 
310 1 217 1 70 1 211 1 269 1 98 1 99 1 249 1 
310 4 313 1 217 5 70 5 34 1 256 2 98 4 219 1 168 1 147 1 191 1 221 1 48 1 211 5 
310 2 217 2 70 2 211 2 269 1 137 1 98 2 99 1 
203 1 138 1 
203 1 138 1 
284 1 123 1 
284 1 123 1 
284 1 123 1 
166 1 203 1 138 1 
166 1 203 1 138 1 
351 1 203 1 138 1 
132 1 203 2 284 1 89 1 123 1 138 2 
166 1 203 1 138 1 
203 1 109 1 138 1 
203 1 109 1 138 1 
203 1 109 1 138 1 
311 2 200 2 333 1 251 1 203 2 25 2 285 1 339 3 132 1 171 1 293 1 275 2 324 2 325 1 63 1 306 1 136 2 138 2 154 2 
200 1 217 2 203 1 70 2 25 1 279 1 26 1 219 1 98 2 339 1 306 1 136 1 211 2 10 1 138 1 310 2 311 1 272 1 351 1 275 1 324 1 261 1 330 1 381 1 
20 1 243 1 274 1 
243 1 158 1 274 1 
20 2 290 1 243 3 158 1 367 1 356 1 
20 1 290 1 243 2 158 1 367 1 144 1 
20 1 290 1 243 2 158 1 367 2 
67 4 201 1 279 1 25 5 160 1 26 1 2 1 103 1 209 1 246 2 303 1 340 1 247 3 30 1 106 2 49 3 309 1 311 5 314 1 111 1 140 1 368 2 372 1 37 1 318 1 151 1 325 2 326 2 174 1 277 1 261 1 380 1 
92 1 67 7 238 5 201 1 334 1 25 9 2 3 103 2 246 6 303 1 247 8 30 2 49 9 309 1 311 9 314 2 111 2 227 1 140 3 316 1 368 6 372 3 37 3 288 1 318 1 149 5 151 3 213 1 38 1 325 5 326 6 174 6 277 3 261 4 380 2 
67 2 92 1 25 3 160 1 2 1 103 1 246 2 340 1 247 3 30 1 106 1 49 4 309 1 311 3 314 1 111 1 140 1 368 2 372 1 37 1 151 2 325 3 326 2 277 1 261 1 380 1 
92 1 67 3 334 1 25 4 160 1 2 2 103 1 246 4 340 1 247 5 30 1 106 2 49 7 309 1 311 4 314 1 111 1 140 2 316 1 368 4 372 2 37 2 151 3 38 1 325 4 326 4 277 2 261 2 380 1 
179 1 230 1 161 1 
161 1 360 1 
225 1 
185 1 161 1 
179 2 185 1 33 1 298 1 161 3 87 1 
185 1 33 1 161 1 
305 1 161 1 
110 1 250 3 93 1 239 1 228 1 254 2 97 4 229 7 37 1 287 1 2 1 302 1 172 3 75 1 375 1 24 2 198 1 
110 1 250 3 93 1 239 1 228 1 254 2 97 4 229 7 37 1 287 1 2 1 302 1 172 3 75 1 375 1 24 2 198 1 
110 1 250 3 93 1 239 1 228 1 254 2 97 4 229 7 37 1 287 1 2 1 302 1 172 3 75 1 375 1 235 1 24 2 198 1 
93 2 0 1 239 1 97 16 162 1 181 1 100 1 130 1 2 4 302 1 75 2 102 1 222 1 110 1 250 15 54 2 140 3 228 5 254 3 317 4 229 31 372 3 286 1 37 4 287 2 375 2 172 10 120 3 196 1 328 1 277 3 24 5 198 1 177 1 
93 1 0 2 239 1 97 5 181 2 2 1 302 1 75 1 222 2 308 1 250 4 54 4 228 1 254 2 229 9 286 1 37 1 287 1 375 1 172 4 64 1 328 2 24 3 198 1 
40 1 158 1 218 1 359 1 131 1 3 1 133 1 243 2 167 1 8 1 107 1 80 1 342 1 364 1 226 1 15 1 55 1 271 1 188 1 20 1 148 1 232 1 291 1 274 1 233 2 62 1 214 1 197 2 262 1 356 1 
158 1 218 1 359 1 131 1 3 1 133 1 243 2 167 1 8 1 107 1 341 1 80 1 364 1 226 1 15 2 55 1 188 1 20 1 148 1 232 1 85 1 291 1 274 1 233 3 62 1 234 1 214 1 197 3 356 1 262 1 
158 1 218 1 359 1 131 1 3 1 133 1 243 2 167 1 107 1 80 1 364 1 15 2 55 1 20 1 148 1 232 1 85 1 291 1 274 1 62 1 233 2 234 1 197 2 262 1 356 1 
91 1 296 1 218 2 161 1 359 1 208 1 76 1 167 1 8 1 107 2 341 1 80 2 283 1 185 1 253 1 35 1 148 1 232 1 233 1 62 2 214 1 197 1 262 1 
158 1 218 1 359 1 3 1 133 1 243 2 167 1 8 1 107 1 80 1 342 1 226 1 271 1 188 1 20 1 148 1 232 1 291 1 274 1 233 1 62 1 234 1 214 1 197 1 262 1 356 1 
259 1 
91 2 156 2 201 3 240 2 42 1 161 1 99 1 165 2 103 1 167 1 247 2 211 1 49 2 51 1 249 1 283 1 111 1 17 1 56 1 253 1 212 1 119 1 292 1 122 1 174 6 262 1 68 2 217 1 70 1 25 5 129 4 359 2 73 1 303 1 77 1 30 1 309 1 366 2 312 2 314 1 311 5 185 1 143 1 368 2 34 1 187 1 369 2 148 2 151 2 232 2 86 1 325 2 377 1 88 1 90 1 
366 1 311 3 217 1 201 1 332 1 70 1 25 3 143 1 56 1 34 1 187 1 42 1 129 2 73 1 99 1 292 1 77 1 122 1 174 2 211 1 90 1 249 1 
217 1 332 1 201 1 70 1 25 3 42 1 129 3 99 1 73 1 77 1 211 1 309 1 249 1 311 3 143 1 187 1 34 1 56 1 369 1 292 1 122 1 325 1 174 1 90 1 
217 1 201 1 332 1 156 1 70 1 25 3 42 1 129 3 99 1 73 1 77 1 211 1 309 1 249 1 311 3 366 1 143 1 187 1 34 1 56 1 369 1 292 1 122 1 325 1 174 2 90 1 
156 4 332 1 201 3 157 1 42 1 240 2 99 1 206 1 165 2 5 1 103 1 247 1 211 1 50 1 249 1 111 1 17 1 56 1 349 1 292 1 122 1 174 7 217 1 68 2 70 1 25 5 129 6 73 1 303 1 77 1 30 1 309 5 366 4 311 5 312 2 143 1 187 1 34 1 368 1 369 4 151 2 325 5 377 1 90 1 
201 2 156 2 42 1 240 2 99 1 165 2 103 1 247 1 211 1 49 2 249 1 51 1 111 1 17 1 56 1 292 1 122 1 174 4 217 1 68 2 70 1 25 4 129 4 73 1 303 1 77 1 30 1 309 1 311 4 312 2 366 2 143 1 187 1 34 1 368 1 369 2 151 2 377 1 325 2 90 1 
68 2 217 1 156 2 201 2 70 1 25 4 240 2 42 1 129 4 99 1 73 1 165 2 206 1 5 1 103 1 303 1 247 1 77 1 30 1 211 1 50 1 309 1 249 1 366 2 312 2 311 4 111 1 17 1 143 1 368 1 187 1 34 1 56 1 369 2 151 2 292 1 325 1 377 1 122 1 174 4 90 1 
68 2 217 1 156 2 201 2 70 1 25 4 240 2 42 1 129 4 99 1 73 1 165 2 206 1 5 1 103 1 303 1 247 1 77 1 30 1 211 1 50 1 309 1 249 1 366 2 312 2 311 4 111 1 17 1 143 1 368 1 187 1 34 1 56 1 369 2 151 2 292 1 325 1 377 1 122 1 174 4 90 1 
217 1 156 2 201 2 70 1 25 4 240 2 42 1 129 4 1 2 99 1 73 1 165 2 206 1 244 1 103 1 303 1 247 1 77 1 30 1 211 1 49 2 309 1 363 1 249 1 366 2 311 4 111 1 270 1 17 1 143 1 368 1 187 1 34 1 56 1 369 2 292 1 325 1 122 1 174 4 327 2 90 1 
68 2 217 1 201 2 157 1 156 3 70 1 25 4 240 2 42 1 129 5 99 1 73 1 165 2 206 1 103 1 5 1 303 1 247 1 77 1 30 1 211 1 50 1 309 1 249 1 312 2 311 4 366 3 111 1 17 1 143 1 368 1 187 1 34 1 56 1 369 3 151 2 292 1 325 1 377 1 122 1 174 5 90 1 
68 2 217 1 201 2 157 1 156 3 70 1 25 4 240 2 42 1 129 5 99 1 73 1 165 2 206 1 103 1 5 1 303 1 247 1 77 1 30 1 211 1 50 1 309 1 249 1 312 2 311 4 366 3 111 1 17 1 143 1 368 1 187 1 34 1 56 1 369 3 151 2 292 1 325 1 377 1 122 1 174 5 90 1 
217 1 156 2 201 2 70 1 25 4 240 2 42 1 129 4 1 2 99 1 73 1 165 2 103 1 303 1 247 1 77 1 30 1 211 1 49 2 309 1 51 1 249 1 366 2 311 4 111 1 270 1 17 1 143 1 368 1 56 1 34 1 187 1 369 2 292 1 325 1 122 1 174 4 327 2 90 1 
250 3 53 1 54 2 0 1 239 1 254 1 255 1 229 6 97 3 219 2 37 1 181 1 287 1 2 1 230 1 302 1 172 2 75 1 59 1 222 1 47 1 328 1 24 2 139 1 198 1 343 1 
0 2 128 1 97 8 219 1 100 1 27 1 181 2 44 1 2 1 222 2 184 1 139 2 343 11 250 6 54 4 53 1 141 1 140 2 228 1 348 1 255 11 317 3 19 1 229 14 372 2 37 2 172 2 120 3 59 4 196 1 328 2 24 1 277 1 
91 1 217 1 0 1 70 2 94 1 128 1 161 1 97 1 219 1 359 1 98 1 181 1 182 1 167 1 222 1 211 2 31 1 184 1 139 1 310 1 313 1 250 1 53 1 54 2 185 1 33 1 348 1 256 1 229 2 258 1 36 1 374 1 148 1 232 1 320 1 59 1 328 1 262 1 
91 1 199 1 0 3 239 1 94 2 161 2 97 10 98 1 2 3 6 1 167 2 211 3 343 7 52 2 250 10 54 6 53 3 254 1 348 1 255 7 256 1 287 1 170 2 172 8 59 7 24 4 354 2 262 2 217 1 70 3 128 1 219 2 359 3 181 3 302 1 75 1 222 3 184 1 139 3 310 1 313 1 140 2 185 2 33 2 228 4 229 20 83 2 189 2 372 2 146 1 36 2 37 3 148 3 374 2 232 3 234 1 328 3 277 2 198 1 
91 2 217 1 40 1 0 2 69 1 70 1 128 1 161 3 97 1 98 1 359 7 181 2 46 1 245 1 167 2 222 2 47 1 211 1 9 2 139 2 310 1 283 1 250 1 54 4 53 2 185 2 348 1 253 1 114 1 370 1 256 1 229 2 116 1 148 8 373 1 232 8 234 1 328 2 262 2 
217 1 0 1 70 1 97 1 98 1 181 1 2 1 221 1 222 1 211 1 184 1 139 1 343 1 310 1 250 2 54 2 53 1 346 1 140 1 255 1 229 3 372 1 37 1 147 1 172 1 59 1 328 1 24 1 277 1 
53 1 54 2 0 1 228 1 255 1 229 2 97 2 372 1 181 1 37 1 172 1 59 1 222 1 47 1 328 1 307 1 139 1 343 1 
250 2 53 1 54 2 0 1 255 1 229 2 181 1 2 1 172 1 59 1 60 1 222 1 47 1 328 1 24 1 277 1 139 1 343 1 
0 1 97 2 181 1 2 1 222 1 47 1 139 1 343 2 250 2 54 2 53 1 140 1 228 1 255 2 229 4 372 1 37 1 172 2 59 2 328 1 277 1 24 1 
53 1 54 2 0 1 69 1 228 1 255 1 229 2 97 2 372 1 181 1 37 1 172 1 59 1 222 1 328 1 307 1 139 1 343 1 
250 2 53 1 54 2 0 1 69 1 255 1 229 2 181 1 2 1 172 1 59 1 60 1 222 1 328 1 24 1 277 1 139 1 343 1 
0 1 69 1 97 2 181 1 2 1 222 1 139 1 343 2 250 2 54 2 53 1 140 1 228 1 255 2 229 4 372 1 37 1 172 2 59 2 328 1 277 1 24 1 
0 1 97 2 181 1 2 1 222 1 139 1 343 2 250 2 54 2 53 1 140 1 228 1 255 2 229 4 372 1 37 1 172 2 59 2 328 1 277 1 24 1 
91 1 0 1 70 1 128 1 94 1 161 1 97 1 219 1 359 1 181 1 167 1 222 1 211 1 139 1 250 1 53 1 54 2 185 1 33 1 348 1 229 2 36 1 170 1 374 1 148 1 232 1 328 1 262 1 
91 1 0 1 70 1 335 1 128 1 161 1 97 1 219 1 359 1 181 1 167 1 29 1 222 1 211 1 139 1 250 1 53 1 54 2 32 1 185 1 33 1 348 1 229 2 374 1 148 1 232 1 328 1 262 1 
0 1 97 2 181 1 2 1 222 1 184 1 139 1 343 2 250 2 54 2 53 1 140 1 228 1 255 2 229 4 372 1 37 1 172 2 59 2 328 1 277 1 24 1 
40 1 0 1 70 1 94 1 161 1 97 2 359 1 181 1 2 1 167 1 222 1 211 1 139 1 343 2 250 2 53 1 54 2 140 1 185 1 33 1 228 1 255 2 229 4 83 1 372 1 37 1 36 1 170 1 374 1 148 1 172 2 232 1 59 2 328 1 24 1 277 1 262 1 
217 1 0 1 70 1 97 2 98 1 181 1 2 1 221 1 222 1 211 1 79 1 184 1 139 1 343 1 310 1 250 1 54 2 53 1 140 1 228 1 255 1 229 3 372 1 37 1 147 1 172 1 59 1 328 1 277 1 
0 3 239 1 338 1 97 20 96 1 100 3 2 5 104 1 105 1 250 21 54 6 345 1 57 1 254 1 286 1 169 1 287 1 172 8 120 3 61 1 64 1 24 4 295 1 71 4 181 3 74 1 301 1 302 1 75 1 222 3 304 1 140 4 142 1 228 4 317 4 229 41 372 4 371 2 37 5 196 1 328 3 277 4 198 1 
295 1 0 4 71 4 239 1 338 1 96 1 97 20 74 1 100 3 181 4 301 1 2 4 302 1 75 1 104 1 304 1 222 4 105 1 250 18 345 1 54 8 140 4 142 1 57 1 228 3 254 1 317 4 229 38 286 2 371 2 372 4 169 1 37 5 287 1 172 7 120 3 61 1 64 1 196 1 328 4 24 4 277 3 198 1 
295 1 0 2 71 4 239 1 338 1 96 1 97 27 74 1 100 2 181 2 44 2 301 1 2 8 302 1 75 1 304 1 222 2 105 1 250 25 54 4 140 7 142 1 57 1 228 7 254 1 317 4 229 52 286 1 371 1 372 7 169 1 37 8 287 1 172 14 120 4 61 1 64 1 196 2 328 2 24 7 277 7 198 1 
125 1 0 2 71 2 96 1 97 9 74 1 100 1 181 2 301 2 2 3 104 1 222 2 250 10 54 4 140 3 57 1 228 3 317 2 229 19 371 1 372 3 169 1 37 3 172 6 120 1 64 1 196 1 328 2 24 3 277 3 
295 1 0 3 71 4 338 1 96 1 97 14 74 1 181 3 100 2 301 1 2 2 222 3 304 1 105 1 250 12 54 6 140 3 142 1 228 2 57 1 317 2 229 26 286 2 371 2 372 3 169 2 37 3 172 4 120 2 61 1 64 1 328 3 24 2 277 2 
132 1 171 1 200 1 315 1 251 1 203 1 275 1 324 1 136 1 138 1 
351 1 10 1 
200 1 210 1 203 1 186 1 275 1 324 1 136 1 355 1 138 1 
311 1 200 1 251 1 203 1 25 1 285 1 339 2 132 1 171 1 293 1 275 1 324 1 325 1 63 1 306 1 136 1 138 1 154 1 
311 1 200 1 251 1 203 1 25 1 285 1 339 2 132 1 171 1 293 1 275 1 324 1 325 1 63 1 306 1 136 1 138 1 154 1 
311 1 200 1 251 1 203 1 25 1 285 1 339 2 132 1 171 1 293 1 275 1 324 1 325 1 63 1 306 1 136 1 138 1 154 1 
166 1 337 1 89 1 
166 1 337 1 89 1 
7 1 109 1 
7 1 89 1 109 1 
272 1 381 1 
67 1 200 1 217 2 70 2 203 1 25 1 279 1 26 1 219 1 98 2 266 1 339 1 211 2 136 1 10 1 138 1 310 2 311 1 272 1 285 1 351 1 275 1 324 1 261 1 330 1 154 1 381 1 
166 1 337 1 
7 1 89 1 109 1 
217 2 0 1 70 2 128 1 161 1 97 1 359 2 181 1 242 1 167 1 222 1 248 1 281 1 211 2 184 1 9 2 139 1 250 1 53 1 54 2 185 1 348 1 229 2 116 1 289 1 148 2 373 1 232 2 328 1 379 1 262 1 
226 1 40 1 297 1 158 1 347 1 241 1 359 2 20 1 148 2 243 2 133 1 232 2 291 1 274 1 167 1 234 1 80 1 356 1 262 1 
226 1 297 1 158 1 359 1 20 1 148 1 243 2 133 1 232 1 376 1 291 1 274 1 167 1 234 1 80 1 356 1 262 1 
91 1 283 1 296 1 185 1 41 1 347 1 253 1 161 1 359 1 148 1 232 1 167 1 80 1 262 1 
226 1 297 1 158 1 347 1 241 1 359 1 20 1 148 1 243 2 133 1 232 1 291 1 274 1 167 1 234 1 80 1 356 1 262 1 
194 1 
273 1 230 1 357 1 247 1 325 1 368 1 309 1 
68 1 201 1 25 1 103 1 303 1 247 1 30 1 49 1 309 1 312 1 311 1 111 1 368 1 151 1 377 1 325 2 174 1 
91 1 40 1 201 3 42 2 161 10 163 1 45 2 2 2 103 4 246 6 167 3 247 9 49 12 111 4 113 2 212 1 115 1 23 2 260 2 174 5 65 1 124 1 262 4 178 2 179 2 357 1 25 5 298 1 359 3 360 3 361 2 303 4 30 4 134 2 305 2 309 2 314 2 311 5 140 2 185 3 33 3 368 8 189 2 372 2 37 2 273 1 148 3 192 1 232 3 151 6 325 8 326 6 329 2 277 2 
295 1 201 1 25 1 338 1 164 1 100 1 45 1 2 2 103 2 246 5 303 2 247 8 304 1 30 2 105 1 49 6 309 2 314 1 311 1 111 2 140 2 113 2 368 5 212 1 317 1 372 2 37 2 151 3 120 1 61 1 325 5 174 1 378 1 326 5 277 2 
217 1 126 1 70 1 25 1 239 1 300 1 98 1 99 1 45 1 2 1 75 1 103 1 5 1 303 1 221 1 247 2 30 1 135 1 211 1 137 1 365 1 310 1 311 1 111 1 113 2 368 2 37 2 287 1 
111 1 357 1 368 1 273 1 103 1 303 1 247 1 30 1 325 1 309 1 
140 2 113 2 368 5 189 1 372 2 37 2 45 1 2 2 151 5 246 5 247 5 325 5 326 5 49 10 277 2 
311 1 201 1 25 1 325 1 174 1 309 1 
92 1 91 2 201 2 25 3 161 1 264 1 359 4 103 2 303 1 167 1 247 2 30 2 283 1 314 2 311 3 111 2 185 1 368 2 212 2 253 1 231 1 148 4 192 2 119 1 232 4 174 4 88 1 262 1 124 1 
91 1 217 2 0 1 70 3 94 1 161 1 219 1 359 1 98 2 181 1 221 2 167 1 222 1 211 3 139 1 310 2 365 1 250 1 54 2 53 1 185 1 33 1 348 1 229 1 36 1 170 1 148 1 374 1 232 1 195 1 328 1 262 1 
314 1 111 1 368 2 254 1 212 1 103 1 151 2 246 2 303 1 247 1 30 1 325 4 326 2 49 4 309 2 
200 1 324 1 257 1 
200 1 324 1 257 1 
200 1 251 1 324 1 282 1 272 1 
200 1 324 1 257 1 
200 1 324 1 352 1 
200 1 324 1 352 1 
200 1 324 1 352 1 
200 1 324 1 
203 1 138 1 
0 1 239 1 97 4 100 1 181 1 2 1 302 1 75 1 304 1 222 1 250 4 54 2 254 1 317 1 229 8 37 1 287 1 172 2 120 1 64 1 328 1 24 2 198 1 
0 2 239 1 97 6 100 1 181 2 2 1 302 1 75 1 304 1 222 2 250 5 54 4 140 1 228 1 254 1 317 2 229 11 372 1 37 2 287 1 172 3 120 1 64 1 196 1 328 2 24 2 236 1 198 1 
295 1 0 3 239 1 338 1 97 9 100 1 181 3 2 3 302 1 75 1 304 1 222 3 105 1 250 10 54 6 140 2 228 1 254 1 317 1 229 19 372 2 286 1 37 3 287 1 172 4 120 1 61 1 64 1 328 3 236 1 277 2 24 3 198 1 
295 1 0 3 239 1 338 1 97 10 100 1 181 3 2 2 302 1 75 1 304 1 222 3 105 1 250 7 54 6 140 2 228 2 254 1 317 1 229 17 286 1 372 2 37 3 287 1 172 5 120 1 61 1 64 1 328 3 236 1 277 1 24 3 198 1 
0 1 239 1 97 4 100 1 181 1 2 1 302 1 75 1 304 1 222 1 250 4 54 2 254 1 317 1 229 8 37 1 287 1 172 2 120 1 64 1 328 1 24 2 198 1 
295 1 0 1 338 1 97 6 100 1 181 1 2 2 304 1 222 1 105 1 250 6 54 2 140 2 228 1 317 1 229 12 372 2 37 2 172 2 120 1 61 1 64 1 328 1 277 2 24 1 
295 1 0 4 239 1 338 1 97 10 100 1 181 4 2 2 302 1 75 1 304 1 222 4 105 1 250 8 54 8 140 2 228 2 254 1 317 1 229 18 372 2 286 2 37 3 287 1 172 5 120 1 61 1 64 1 328 4 236 1 277 1 24 3 198 1 
295 1 0 4 338 1 97 9 100 1 181 4 2 2 304 1 222 4 104 1 105 1 250 7 54 8 140 3 228 3 317 1 229 16 372 3 286 2 37 3 172 6 120 1 61 1 64 1 328 4 277 2 24 3 
250 4 239 1 228 3 229 7 97 3 37 1 287 3 2 1 302 2 75 3 172 6 24 3 198 1 
295 1 0 4 239 1 338 1 97 10 100 1 181 4 2 2 302 1 75 1 304 1 222 4 104 1 105 1 250 8 54 8 140 2 228 1 254 1 317 1 229 18 372 2 286 2 37 3 287 1 172 4 120 1 61 1 64 1 328 4 277 1 24 3 198 1 
250 4 54 4 0 2 239 1 228 1 254 1 229 8 97 4 286 1 37 1 181 2 287 1 2 1 302 1 172 3 75 1 222 2 328 2 24 2 198 1 
250 3 239 1 254 1 97 3 229 6 37 1 287 1 2 1 230 1 302 1 75 1 172 2 24 2 198 1 
250 2 54 2 0 1 140 1 228 1 97 2 229 4 372 1 181 1 37 1 2 1 172 2 222 1 328 1 24 1 277 1 236 1 
250 4 140 1 228 1 317 2 229 7 97 3 372 1 100 1 37 1 2 1 172 2 120 1 196 1 24 1 277 1 
0 2 239 1 97 11 27 1 181 2 44 1 2 3 302 1 75 2 222 2 250 12 54 4 140 2 228 4 254 1 317 2 229 23 372 2 286 2 37 3 287 2 172 9 120 2 196 1 328 2 277 2 24 5 353 1 198 1 
250 1 317 1 229 1 
120 1 229 1 97 1 
250 3 0 1 54 2 140 1 228 1 229 6 97 3 189 1 372 1 181 1 37 1 2 1 172 3 222 1 328 1 236 1 277 1 24 2 
295 1 0 1 338 1 97 6 100 1 181 1 2 2 304 1 222 1 105 1 250 6 54 2 140 2 228 1 317 1 229 12 372 2 37 2 172 2 120 1 61 1 64 1 328 1 277 2 24 1 
250 3 239 1 228 1 97 3 229 6 37 1 287 1 2 1 75 1 172 2 24 1 
250 2 54 2 0 1 228 1 97 1 229 3 286 1 181 1 287 1 302 1 172 2 75 1 222 1 328 1 24 1 353 1 198 1 
250 5 0 1 54 2 239 1 228 2 300 1 97 5 229 10 181 1 37 2 287 2 2 2 75 2 172 5 222 1 64 1 328 1 24 3 
54 2 0 1 228 1 97 2 229 2 372 1 181 1 37 1 172 1 222 1 64 1 328 1 
250 2 54 2 0 1 140 1 228 1 97 2 229 4 372 1 181 1 37 1 2 1 172 2 222 1 64 1 328 1 24 1 277 1 
250 2 54 6 0 3 228 1 229 3 97 1 286 1 181 3 287 1 75 1 172 2 104 1 222 3 64 1 328 3 353 1 24 1 
0 5 239 2 97 16 162 1 130 1 100 1 181 5 2 5 302 1 75 3 102 1 104 1 222 5 250 18 54 10 140 3 228 5 254 1 317 4 229 34 286 2 372 3 37 5 287 3 172 12 120 3 64 1 196 1 328 5 353 1 236 1 277 3 24 7 198 1 
217 1 191 1 70 1 34 1 211 1 219 1 278 1 
217 1 70 1 34 1 219 1 267 1 207 1 150 1 21 1 84 1 191 1 211 1 278 1 
283 1 91 1 230 1 148 1 232 1 167 1 185 1 253 1 161 1 359 1 262 1 
310 1 91 1 217 1 70 2 185 1 33 1 161 1 256 1 219 1 98 1 359 1 36 1 374 1 148 1 232 1 167 1 211 2 262 1 
217 2 70 2 161 3 219 1 359 1 98 2 99 1 167 1 77 1 305 1 211 2 249 1 310 1 185 2 33 2 256 1 36 1 148 1 374 1 232 1 192 1 260 1 262 1 
217 2 70 2 161 3 219 1 359 2 98 2 99 1 167 1 29 1 77 1 305 1 211 2 249 1 310 1 185 2 33 2 256 1 148 2 374 1 232 2 192 1 260 1 331 1 262 1 
91 1 179 1 204 1 25 2 42 1 161 4 359 3 360 1 167 1 305 1 309 1 311 2 81 1 185 1 33 1 148 3 232 3 192 1 325 1 260 1 174 1 331 1 262 1 
91 1 311 2 179 1 185 1 33 1 25 2 42 1 161 4 359 3 360 1 148 3 192 1 232 3 167 1 325 1 305 1 260 1 174 1 329 1 309 1 331 1 262 1 
148 1 232 1 167 1 114 1 359 1 262 1 
91 2 40 1 185 2 127 1 33 1 114 1 298 1 370 1 161 3 359 6 116 1 117 1 46 1 148 7 245 1 322 1 232 7 167 2 234 1 9 1 262 3 
217 1 0 2 40 1 70 2 239 1 94 1 161 1 97 3 219 2 98 1 359 1 181 2 2 1 302 1 75 1 167 1 222 2 211 2 184 1 139 2 343 1 310 1 250 3 53 2 54 4 185 1 33 1 254 1 255 1 256 1 229 6 83 1 37 1 36 1 287 1 170 1 374 1 148 1 172 2 232 1 59 1 328 2 24 2 379 1 354 1 198 1 262 1 
91 1 67 1 179 1 201 1 357 1 25 3 42 1 161 2 359 1 360 1 103 2 361 1 303 2 247 1 30 2 134 1 309 1 311 3 111 2 368 1 273 1 148 1 232 1 23 1 325 1 174 2 329 1 124 1 
179 1 40 1 185 1 33 1 114 1 298 1 161 2 359 2 148 2 232 2 167 1 65 1 262 2 
91 1 283 1 40 1 185 1 253 1 161 1 359 4 101 1 148 4 232 4 167 1 331 1 262 1 
185 1 33 1 161 1 359 2 117 1 148 2 192 1 322 1 232 2 6 1 167 1 78 1 294 1 262 2 
91 1 148 1 243 1 133 1 232 1 158 1 274 1 167 1 359 1 262 1 
289 1 148 2 40 1 232 2 167 1 185 1 234 1 161 1 359 2 116 1 262 1 
283 1 91 1 40 1 185 2 253 1 370 1 161 3 359 4 116 1 101 1 148 5 46 1 192 1 232 5 167 2 262 2 
283 1 91 1 40 1 12 1 185 2 253 1 161 3 359 4 116 1 101 1 148 5 46 1 192 1 232 5 167 2 262 2 
310 1 91 1 217 1 70 2 185 1 33 1 161 1 256 1 219 1 98 1 359 1 374 1 148 1 232 1 29 1 167 1 211 2 262 1 
185 1 127 1 33 1 298 1 161 1 359 1 117 1 148 1 322 1 192 1 232 1 167 1 262 2 
4 1 16 1 276 1 219 1 216 1 
67 1 311 2 344 1 25 2 16 2 187 1 252 1 42 1 219 1 99 1 4 2 321 1 193 1 77 1 325 1 276 2 309 1 249 1 216 1 
217 1 70 1 242 1 4 1 248 1 281 1 276 1 211 1 216 1 
344 1 252 1 216 1 
364 1 131 1 230 1 55 1 
364 1 131 1 233 1 55 1 8 1 214 1 197 1 
62 1 218 1 197 1 
364 1 131 1 220 1 233 3 55 1 8 1 271 1 173 1 214 1 58 1 197 3 155 2 
364 1 131 1 22 1 15 1 233 2 55 1 8 1 214 1 197 2 
39 1 55 1 271 1 72 1 20 1 243 1 274 1 233 1 8 1 214 1 197 1 
131 1 233 1 55 1 8 1 271 1 214 1 197 1 
364 1 131 2 233 1 8 1 271 1 214 1 197 1 
159 1 336 1 55 1 271 1 131 1 233 2 8 2 268 1 214 2 197 2 
364 1 39 1 180 1 15 2 55 2 271 1 265 1 131 1 233 3 8 1 214 1 197 3 215 1 
364 1 158 1 15 1 55 1 271 1 145 1 20 1 131 1 243 2 274 1 233 2 8 1 214 1 197 2 356 1 
364 1 39 1 15 2 55 2 271 1 265 1 131 1 22 1 233 4 8 2 214 2 197 4 11 1 
364 1 131 1 233 1 55 1 8 1 271 1 214 1 197 1 
364 2 39 1 15 2 55 3 299 1 265 1 131 2 220 1 233 4 8 1 173 1 214 1 197 4 155 1 
364 1 131 1 14 1 15 1 362 1 233 2 55 1 8 1 271 1 205 1 214 1 197 2 
364 1 131 1 220 1 233 3 55 1 8 1 271 1 173 2 95 1 214 1 197 3 155 2 
28 1 237 1 263 2 55 2 
233 1 8 1 271 1 153 1 214 1 197 1 
364 1 131 1 180 1 15 1 233 2 55 1 8 1 271 1 214 1 197 2 
358 1 
364 1 131 1 233 1 55 1 8 1 271 1 214 1 197 1 
364 1 131 1 180 1 15 1 233 3 55 1 8 1 271 1 214 1 197 3 155 1 
39 1 55 1 299 1 265 1 
131 1 55 1 

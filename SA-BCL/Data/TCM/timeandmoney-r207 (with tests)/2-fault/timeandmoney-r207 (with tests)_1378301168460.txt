#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
4 1 329 2 213 1 330 5 234 2 267 1 119 1 149 2 150 3 244 1 152 1 13 1 156 1 370 9 222 1 314 1 374 1 341 1 56 2 274 2 248 1 349 1 351 2 207 9 185 4 322 2 162 1 164 6 
4 1 329 2 213 1 330 5 234 2 267 1 119 1 149 2 150 3 244 1 152 1 13 1 156 1 370 9 222 1 314 1 374 1 341 1 56 2 274 2 248 1 349 1 351 2 207 9 185 4 322 2 162 1 164 6 
4 1 329 2 213 1 330 6 234 2 267 1 119 1 149 2 150 4 244 1 152 1 13 1 156 1 370 10 222 1 314 1 374 1 341 1 56 2 274 2 248 1 349 1 351 2 207 10 185 5 322 2 162 1 164 7 
329 1 213 1 330 4 234 2 267 1 119 1 149 2 150 2 244 1 152 1 13 1 156 1 370 7 222 1 314 1 374 1 341 1 56 2 274 2 248 1 349 1 351 2 207 7 185 3 322 2 162 1 164 4 
150 1 4 1 156 1 370 4 329 2 222 1 330 3 374 1 234 1 274 1 56 1 248 1 349 1 351 1 207 4 185 2 322 1 164 3 
119 1 149 1 271 1 107 1 370 2 222 1 213 1 330 1 374 1 234 1 274 1 56 1 349 1 207 2 322 1 26 1 
149 1 150 1 152 1 370 3 222 1 330 2 374 1 274 2 56 2 349 1 207 3 185 1 164 1 
79 1 149 1 150 3 199 1 152 1 4 1 156 1 13 1 329 2 370 9 314 1 222 1 330 5 374 1 234 1 274 2 56 2 248 1 349 1 351 1 207 9 185 4 322 1 164 7 
79 1 149 1 150 3 199 1 152 1 4 1 156 1 13 1 329 2 370 9 314 1 222 1 330 5 374 1 234 1 274 2 56 2 248 1 349 1 351 1 207 9 185 4 322 1 164 7 
44 1 237 1 154 1 
44 1 219 2 11 1 
191 2 316 2 91 2 284 2 335 2 141 1 378 2 86 1 
17 1 280 1 1 1 254 2 106 1 284 3 141 1 42 1 191 2 289 2 217 2 334 1 22 2 335 2 239 1 148 2 264 1 86 1 241 1 91 2 127 1 53 1 183 1 159 1 69 1 55 1 316 3 224 1 317 1 15 1 226 1 347 1 276 1 98 1 186 1 378 2 278 1 
191 1 316 1 91 1 246 1 284 1 335 1 24 1 378 1 86 1 229 1 
256 1 91 1 284 1 202 1 167 1 300 1 44 1 161 1 316 1 237 1 319 1 193 1 48 1 229 1 
256 2 91 1 284 1 167 2 202 1 300 1 191 1 44 1 161 1 316 1 237 1 319 1 335 1 378 1 229 1 
204 1 256 1 167 1 273 1 177 1 
266 1 44 1 237 1 256 2 167 2 273 1 177 1 306 1 
256 1 167 1 177 1 
256 1 91 1 246 1 284 1 7 1 273 1 167 1 191 1 316 1 335 1 24 1 86 1 378 1 229 1 
44 1 
44 1 237 1 366 1 256 2 167 2 273 1 177 1 306 1 
27 1 242 1 137 1 256 5 181 1 285 2 273 2 167 5 143 2 339 1 235 1 44 1 129 2 237 1 258 1 33 1 304 1 306 1 177 2 
154 1 141 1 
326 1 91 2 284 2 141 2 142 1 191 1 316 2 335 1 378 1 
93 1 20 1 359 1 
127 1 284 1 141 1 53 1 183 1 159 1 316 1 317 1 217 1 377 1 334 1 22 1 148 1 264 1 241 1 278 1 
60 1 127 1 91 1 284 2 53 1 183 1 159 1 160 1 191 1 316 2 317 1 20 1 217 1 334 1 22 1 335 1 264 1 148 1 241 1 278 1 
16 1 60 1 91 5 284 5 141 1 142 1 160 2 191 4 316 5 72 1 193 1 335 4 378 1 36 1 
191 2 294 1 316 2 91 2 246 1 284 2 335 2 229 1 
160 1 191 3 316 3 91 3 284 3 335 3 141 1 378 1 
191 1 316 1 91 1 246 1 284 1 335 1 229 1 
191 1 316 1 326 1 91 1 284 1 335 1 378 1 229 1 142 1 
17 1 280 1 60 1 254 1 256 1 106 1 284 4 141 1 42 1 167 1 142 1 191 3 289 2 217 1 334 1 22 1 335 3 264 1 148 1 86 1 241 1 127 1 91 3 202 1 53 1 183 1 159 1 300 1 69 1 160 1 161 1 130 1 316 4 317 1 226 1 319 1 206 1 347 1 276 1 98 1 186 1 378 2 229 1 278 1 
16 1 191 1 160 1 316 2 193 1 91 2 284 2 335 1 141 1 
60 1 256 1 91 3 284 3 167 1 202 1 142 1 300 1 160 2 191 3 375 1 44 1 161 1 316 3 130 1 319 1 335 3 378 1 229 1 
91 2 284 2 359 1 142 1 160 1 191 2 316 2 20 1 335 2 378 1 
127 1 284 1 141 1 53 1 183 1 159 1 316 1 317 1 217 1 334 1 22 1 148 1 264 1 241 1 278 1 
358 1 284 1 18 1 141 1 53 1 183 1 159 1 316 1 317 1 217 1 334 1 22 1 148 1 264 1 278 1 
17 1 189 1 254 4 283 1 138 1 359 2 42 2 289 2 20 2 172 1 118 1 295 1 180 1 69 1 71 1 93 2 95 1 15 2 226 1 276 1 98 1 184 1 186 1 251 1 
191 1 294 1 316 1 91 1 284 1 335 1 229 1 300 1 
236 1 288 1 
236 1 288 1 
97 1 34 1 
97 1 34 1 
97 1 34 1 
236 1 94 1 288 1 
236 1 94 1 288 1 
236 1 288 1 108 1 
88 1 236 2 288 2 97 1 104 1 34 1 
236 1 94 1 288 1 
236 1 288 1 66 1 
236 1 288 1 66 1 
236 1 288 1 66 1 
253 1 256 1 284 2 108 1 141 1 167 1 64 1 191 2 236 1 288 1 192 1 260 1 335 2 195 1 197 1 268 1 123 1 200 1 91 2 12 1 316 2 96 1 131 1 303 1 
88 1 268 2 256 2 355 1 12 2 92 1 167 2 64 2 170 2 44 1 236 2 288 2 192 1 303 3 218 1 175 1 35 1 147 1 195 2 
234 1 351 1 322 1 
234 1 322 1 26 1 
234 3 301 1 145 1 174 1 351 2 26 1 
234 2 301 1 174 1 351 1 221 1 26 1 
234 2 301 1 174 2 351 1 26 1 
253 1 2 1 189 1 281 1 137 3 256 5 190 2 283 1 285 1 167 5 143 1 235 2 44 2 237 1 238 1 172 1 10 1 219 3 11 1 177 1 369 2 201 1 180 1 273 4 129 1 247 1 96 1 131 1 304 1 77 2 134 1 306 1 
188 1 2 3 189 3 281 2 137 8 256 9 283 3 285 2 167 9 143 2 235 6 44 5 237 1 238 1 172 3 219 9 50 5 265 1 11 3 311 1 177 6 293 1 369 6 180 3 273 7 129 2 96 4 205 1 204 5 33 1 348 1 304 1 77 6 134 2 306 1 
2 1 281 1 189 1 137 3 256 3 190 1 283 1 285 1 167 3 143 1 235 2 44 3 237 1 172 1 10 1 219 4 11 2 369 2 201 1 180 1 273 2 129 1 96 1 33 1 77 2 134 1 
188 1 2 2 281 1 189 2 137 5 256 4 190 2 283 2 285 1 167 4 143 1 235 4 44 4 237 1 172 2 10 1 219 7 265 1 11 3 369 4 201 1 180 2 273 3 129 1 96 2 205 1 33 1 77 4 134 1 
74 1 154 1 159 1 
320 1 159 1 
198 1 
334 1 53 1 159 1 
279 1 159 1 
53 1 159 1 
179 1 74 2 334 1 41 1 53 1 159 3 
136 1 254 7 283 1 138 2 139 1 180 1 157 1 42 3 166 1 340 2 82 1 215 1 47 1 15 4 277 1 194 1 118 3 
136 1 254 7 283 1 138 2 139 1 180 1 157 1 42 3 166 1 340 2 82 1 215 1 47 1 15 4 277 1 194 1 118 3 
136 1 61 1 254 7 283 1 138 2 139 1 180 1 157 1 42 3 166 1 340 2 82 1 215 1 47 1 15 4 277 1 194 1 118 3 
135 1 17 1 2 3 189 3 136 1 255 4 254 31 139 1 283 4 138 5 328 1 166 1 42 15 215 2 82 5 289 2 47 2 172 3 194 1 118 10 269 1 270 1 180 4 157 2 69 1 340 3 32 1 226 1 15 16 73 3 277 2 350 1 276 1 76 1 
17 2 136 1 254 9 283 1 138 3 139 1 42 4 332 1 215 1 82 1 289 4 47 1 194 1 118 4 220 1 269 1 180 1 157 1 69 2 340 2 226 2 15 5 276 2 277 1 
323 1 102 1 103 1 356 1 165 1 330 1 214 1 331 1 234 2 145 1 217 1 22 1 261 1 148 1 264 1 26 1 149 1 370 2 222 1 374 1 128 1 56 1 274 1 317 1 349 1 351 1 207 2 322 1 164 1 250 1 
323 1 102 1 103 1 356 1 165 1 330 1 214 1 234 2 145 1 217 1 22 1 148 1 264 1 87 1 26 1 149 1 370 3 374 1 128 1 56 1 274 1 317 1 57 1 349 1 351 1 207 3 133 1 322 1 164 2 250 1 
323 1 103 1 356 1 165 1 330 1 214 1 234 2 145 1 217 1 22 1 148 1 264 1 87 1 26 1 149 1 370 2 374 1 317 1 57 1 349 1 351 1 207 2 322 1 164 2 250 1 
323 2 354 1 165 2 6 1 214 2 217 1 173 1 22 1 264 1 148 1 149 2 245 1 370 1 53 1 183 1 159 1 56 1 274 1 344 1 317 1 75 1 207 1 133 1 
149 1 323 1 102 1 103 1 356 1 165 1 370 1 222 1 234 2 214 1 128 1 145 1 317 1 274 1 56 1 57 1 217 1 261 1 22 1 351 1 207 1 264 1 148 1 322 1 250 1 26 1 
113 1 
325 1 281 1 354 1 137 1 256 2 285 1 167 2 143 1 235 1 217 2 334 1 173 1 22 2 264 3 148 2 177 2 89 1 297 1 371 1 373 1 53 2 183 2 159 2 342 1 129 1 317 2 304 1 305 1 306 1 
210 1 256 3 284 1 167 3 8 1 144 1 366 1 193 1 48 1 177 2 125 1 91 1 337 2 202 1 300 1 54 1 161 1 316 1 319 1 306 1 229 1 100 1 
210 1 256 3 284 1 167 3 8 1 144 1 44 1 237 1 366 1 193 1 48 1 116 1 177 1 125 1 91 1 337 3 202 1 300 1 54 1 161 1 316 1 319 1 229 1 306 1 
210 1 256 3 284 1 167 3 8 1 144 1 44 1 237 1 366 1 193 1 48 1 116 1 177 2 125 1 91 1 337 3 202 1 300 1 54 1 161 1 316 1 302 1 319 1 306 1 229 1 100 1 
210 1 232 1 137 1 256 5 62 2 284 1 285 1 109 2 167 5 363 1 8 1 169 1 143 1 235 1 144 1 44 5 83 1 237 5 366 1 193 1 48 1 262 2 116 4 240 2 11 2 177 7 67 1 125 1 91 1 337 6 202 1 300 1 54 1 129 1 161 1 316 1 376 1 302 4 319 1 304 1 230 1 306 3 229 1 100 4 
210 1 137 1 256 4 62 2 284 1 285 1 109 2 167 4 8 1 143 1 235 1 144 1 44 2 237 1 193 1 219 2 48 1 262 2 116 2 240 2 11 2 177 4 90 1 125 1 67 1 91 1 337 4 202 1 300 1 54 1 129 1 161 1 316 1 302 2 319 1 304 1 306 2 230 1 229 1 100 2 
210 1 232 1 137 1 256 4 62 2 284 1 285 1 109 2 167 4 8 1 169 1 143 1 235 1 144 1 44 1 237 1 193 1 48 1 262 2 116 2 240 2 11 2 177 4 67 1 125 1 91 1 337 4 202 1 300 1 54 1 161 1 129 1 316 1 302 2 376 1 319 1 304 1 306 2 230 1 229 1 100 2 
210 1 232 1 137 1 256 4 62 2 284 1 285 1 109 2 167 4 8 1 169 1 143 1 235 1 144 1 44 1 237 1 193 1 48 1 262 2 116 2 240 2 11 2 177 4 67 1 125 1 91 1 337 4 202 1 300 1 54 1 161 1 129 1 316 1 302 2 376 1 319 1 304 1 306 2 230 1 229 1 100 2 
210 1 232 1 137 1 256 4 62 2 284 1 285 1 109 2 167 4 8 1 362 1 364 2 143 1 235 1 144 1 44 1 237 1 193 1 219 2 48 1 116 2 177 4 125 1 91 1 337 4 202 1 68 2 300 1 30 1 54 1 161 1 129 1 316 1 302 2 319 1 304 1 249 1 306 2 230 1 229 1 100 2 
210 1 232 1 137 1 256 4 62 2 284 1 285 1 109 2 167 4 8 1 363 1 169 1 143 1 235 1 144 1 44 1 237 1 193 1 48 1 262 2 116 3 240 2 11 2 177 5 67 1 125 1 91 1 337 5 202 1 300 1 54 1 129 1 161 1 316 1 302 3 376 1 319 1 304 1 306 2 230 1 229 1 100 3 
210 1 232 1 137 1 256 4 62 2 284 1 285 1 109 2 167 4 8 1 363 1 169 1 143 1 235 1 144 1 44 1 237 1 193 1 48 1 262 2 116 3 240 2 11 2 177 5 67 1 125 1 91 1 337 5 202 1 300 1 54 1 129 1 161 1 316 1 302 3 376 1 319 1 304 1 306 2 230 1 229 1 100 3 
210 1 137 1 256 4 62 2 284 1 285 1 109 2 167 4 8 1 364 2 143 1 235 1 144 1 44 1 237 1 193 1 219 2 48 1 116 2 177 4 90 1 125 1 91 1 337 4 202 1 68 2 300 1 54 1 30 1 129 1 161 1 316 1 302 2 319 1 304 1 306 2 230 1 229 1 100 2 
17 1 136 1 254 6 139 1 138 2 283 1 359 1 42 3 141 2 289 2 20 1 194 1 118 2 295 1 154 1 180 1 157 1 69 1 340 1 93 1 226 1 15 3 277 1 276 1 98 1 186 1 
135 1 17 2 280 1 2 2 189 2 255 3 254 14 138 1 283 1 359 4 141 1 42 6 82 1 65 1 111 1 289 4 290 1 20 11 172 1 239 1 118 2 270 1 180 2 69 2 225 1 93 11 226 2 15 8 318 1 73 3 276 2 98 1 186 2 
17 1 324 1 280 1 60 1 254 2 284 2 359 1 141 1 42 1 191 1 289 2 217 1 291 1 334 1 22 1 335 1 85 1 239 1 264 1 148 1 241 1 127 1 91 1 53 1 183 1 159 1 160 1 69 1 225 1 316 2 317 1 226 1 15 1 377 1 276 1 98 1 186 1 278 1 
17 1 280 1 60 1 254 2 284 1 42 2 191 1 289 2 112 1 217 1 22 1 335 1 148 1 91 1 183 1 160 1 69 1 31 1 225 1 316 1 226 1 275 1 276 1 98 1 186 1 37 1 
17 2 280 1 354 1 40 1 254 2 284 1 42 1 81 1 257 1 331 1 191 1 289 4 217 7 173 1 114 1 22 8 335 1 239 1 264 2 148 8 295 1 52 1 91 1 53 2 183 2 159 3 160 1 69 2 55 2 316 1 317 2 57 1 226 2 15 1 276 2 98 2 186 2 231 1 59 1 
17 1 2 1 189 1 282 1 254 3 138 1 283 1 284 1 359 1 42 2 142 1 191 1 289 2 20 1 172 1 335 1 118 1 91 1 180 1 69 1 93 1 225 1 316 1 226 1 15 1 276 1 98 1 378 1 186 1 
17 1 295 1 189 1 254 2 180 1 359 1 69 1 82 1 93 1 95 1 289 2 226 1 15 2 20 1 276 1 98 1 186 1 118 1 
17 1 295 1 254 2 138 1 283 1 359 1 42 2 69 1 93 1 289 2 226 1 20 1 172 1 276 1 98 1 186 1 118 1 251 1 
17 1 2 1 189 1 254 4 283 1 138 1 359 2 42 2 82 1 289 2 20 2 172 1 118 2 295 1 180 1 69 1 93 2 15 2 226 1 276 1 98 1 186 1 
17 1 189 1 254 2 180 1 359 1 257 1 69 1 82 1 93 1 95 1 289 2 226 1 15 2 20 1 276 1 98 1 186 1 118 1 
17 1 254 2 138 1 283 1 359 1 42 2 257 1 69 1 93 1 289 2 226 1 20 1 172 1 276 1 98 1 186 1 118 1 251 1 
17 1 2 1 189 1 254 4 283 1 138 1 359 2 42 2 257 1 82 1 289 2 20 2 172 1 118 2 180 1 69 1 93 2 15 2 226 1 276 1 98 1 186 1 
17 1 2 1 189 1 254 4 283 1 138 1 359 2 42 2 82 1 289 2 20 2 172 1 118 2 180 1 69 1 93 2 15 2 226 1 276 1 98 1 186 1 
17 1 280 1 254 2 106 1 284 1 141 1 42 1 289 2 217 1 334 1 22 1 239 1 264 1 148 1 241 1 127 1 53 1 183 1 159 1 69 1 316 1 317 1 15 1 226 1 276 1 98 1 186 1 278 1 
17 1 280 1 254 2 358 1 284 1 18 1 141 1 42 1 45 1 289 2 217 1 334 1 22 1 239 1 264 1 148 1 53 1 183 1 159 1 69 1 316 1 317 1 15 1 226 1 276 1 98 1 186 1 278 1 
17 1 2 1 189 1 254 4 283 1 138 1 359 2 42 2 82 1 289 2 20 2 172 1 118 2 180 1 69 1 225 1 93 2 15 2 226 1 276 1 98 1 186 1 
17 1 2 1 189 1 254 4 138 1 283 1 106 1 284 1 359 2 42 2 331 1 82 1 289 2 20 2 172 1 217 1 334 1 22 1 264 1 148 1 118 2 241 1 127 1 180 1 53 1 28 1 159 1 69 1 93 2 316 1 317 1 15 2 226 1 276 1 98 1 186 1 278 1 
17 1 2 1 189 1 254 3 283 1 284 1 359 1 42 1 142 1 191 1 82 1 289 2 20 1 172 1 335 1 118 1 336 1 91 1 180 1 69 1 225 1 316 1 93 1 226 1 15 2 276 1 98 1 378 1 186 1 
101 1 135 1 17 3 2 4 189 4 136 1 327 1 255 4 254 41 139 1 138 4 283 5 42 21 110 1 19 1 332 1 82 4 146 1 287 1 289 6 172 4 117 1 194 1 292 1 176 4 118 8 312 1 269 1 122 1 124 1 270 3 180 5 157 1 340 1 69 3 70 1 226 3 15 20 73 3 277 1 276 3 132 2 321 1 
101 1 135 1 17 4 2 4 189 4 136 1 327 1 255 4 254 38 139 1 138 4 283 4 42 18 110 1 19 1 332 1 82 3 146 1 287 1 289 8 172 3 117 1 194 1 292 1 176 4 118 7 312 1 269 2 122 1 124 1 270 3 180 5 157 1 340 1 69 4 70 1 226 4 15 20 73 3 277 1 276 4 132 2 321 1 
135 2 17 2 2 7 189 7 136 1 327 1 255 4 254 52 139 1 138 7 283 8 42 25 110 1 19 1 332 1 82 7 287 1 289 4 172 7 117 1 194 1 292 1 176 4 118 14 312 1 269 1 122 1 124 1 270 2 180 8 157 1 340 1 69 2 70 1 226 2 15 27 318 2 73 4 277 1 276 2 132 1 321 1 
135 1 17 2 2 3 189 3 327 1 255 2 254 19 138 3 283 3 42 10 110 2 332 1 82 3 146 1 287 1 289 4 172 3 21 1 176 2 118 6 270 1 180 3 69 2 70 1 226 2 15 9 73 1 276 2 132 1 321 1 
17 3 2 3 189 3 327 1 254 26 255 2 138 2 283 2 42 12 110 1 19 1 82 2 332 1 287 2 289 6 172 2 117 1 292 1 176 4 118 4 312 1 269 2 122 1 124 1 270 2 180 3 69 3 70 1 226 3 15 14 73 2 276 3 132 2 321 1 
88 1 236 1 268 1 288 1 355 1 12 1 299 1 92 1 64 1 195 1 
200 1 108 1 
29 1 236 1 268 1 288 1 5 1 12 1 64 1 163 1 195 1 
94 1 227 1 
66 1 307 1 104 1 
88 1 268 1 256 1 355 1 12 1 92 1 167 1 64 1 170 1 44 1 236 1 288 1 192 1 303 2 218 1 175 1 147 1 195 1 
88 1 268 1 256 1 355 1 12 1 92 1 167 1 64 1 170 1 44 1 236 1 288 1 192 1 303 2 218 1 175 1 147 1 195 1 
88 1 268 1 256 1 355 1 12 1 92 1 167 1 64 1 170 1 44 1 236 1 288 1 192 1 303 2 218 1 175 1 147 1 195 1 
94 1 227 1 104 1 
94 1 227 1 104 1 
66 1 307 1 
66 1 307 1 104 1 
197 1 260 1 
253 1 256 1 284 2 108 1 141 1 167 1 64 1 170 1 191 2 236 1 288 1 9 1 260 1 218 1 335 2 195 1 197 1 268 1 123 1 200 1 91 2 12 1 273 1 316 2 96 1 131 1 303 1 
39 1 17 1 280 1 3 1 254 2 284 2 42 1 361 1 289 2 171 1 217 2 22 2 49 1 239 1 264 1 148 2 91 2 53 1 159 1 69 1 55 2 225 1 316 2 317 1 226 1 15 1 276 1 98 1 186 1 231 1 59 1 
323 1 103 1 80 1 356 1 105 1 223 1 234 2 331 1 128 1 145 1 317 1 57 1 217 2 22 2 351 1 264 1 148 2 322 1 26 1 
323 1 103 1 80 1 356 1 234 2 128 1 145 1 317 1 57 1 217 1 22 1 351 1 263 1 148 1 264 1 322 1 26 1 
323 1 354 1 105 1 53 1 183 1 159 1 317 1 259 1 217 1 173 1 22 1 75 1 264 1 148 1 
323 1 103 1 80 1 356 1 105 1 223 1 234 2 128 1 145 1 317 1 57 1 217 1 22 1 351 1 264 1 148 1 322 1 26 1 
345 1 
235 1 27 1 44 1 237 1 137 1 154 1 181 1 
67 1 137 1 256 1 285 1 167 1 143 1 235 1 44 2 129 1 237 1 304 1 219 1 262 1 240 1 11 1 177 1 306 1 
0 2 279 2 2 2 281 2 189 2 137 9 283 2 285 4 143 4 331 1 235 8 44 8 237 2 84 2 334 3 148 3 51 2 11 6 151 1 202 2 53 3 159 10 304 4 305 1 306 3 352 2 256 5 167 5 212 1 309 2 217 3 172 2 22 3 219 12 367 2 368 2 264 4 177 5 27 1 178 2 179 1 369 6 180 2 181 1 183 1 315 1 129 4 317 3 320 3 74 2 228 1 77 6 187 1 37 2 
2 2 281 1 189 2 137 8 256 1 255 1 283 2 285 2 167 1 143 2 19 1 235 5 44 5 46 1 237 2 172 2 219 6 367 1 117 1 310 1 11 3 177 1 312 1 178 2 122 1 124 1 369 5 270 1 180 2 129 2 73 1 304 2 77 5 305 1 306 1 
136 1 137 2 256 1 283 1 284 1 285 1 7 1 167 1 169 1 143 1 191 1 235 2 23 1 367 1 335 1 24 1 86 1 178 2 91 1 246 1 180 2 157 1 129 1 316 1 277 1 304 1 378 1 229 1 
27 1 137 1 285 1 181 1 143 1 235 1 129 1 44 1 237 1 304 1 
178 2 2 2 189 2 137 5 369 5 283 2 180 2 235 5 44 5 172 2 219 10 367 1 77 5 11 5 37 1 
44 1 237 1 256 1 167 1 177 1 306 1 
325 1 281 1 354 1 137 1 256 1 285 1 167 1 143 1 235 1 217 2 334 1 173 1 22 2 264 3 148 2 177 2 89 1 297 1 371 1 373 1 53 2 183 2 159 2 342 1 129 1 317 2 304 1 305 1 187 1 306 1 
17 1 280 1 254 1 106 1 284 3 141 1 42 1 191 2 289 2 217 1 334 1 22 1 335 2 148 1 264 1 86 1 241 1 91 2 127 1 53 1 183 1 159 1 69 1 316 3 317 1 226 1 347 1 276 1 98 1 378 2 186 1 278 1 
281 1 137 1 369 2 285 1 143 1 340 1 235 2 129 1 44 4 237 2 304 1 219 4 77 2 305 1 11 2 
12 1 64 1 38 1 
12 1 64 1 38 1 
260 1 355 1 12 1 115 1 64 1 
12 1 64 1 38 1 
12 1 63 1 64 1 
12 1 63 1 64 1 
12 1 63 1 64 1 
12 1 64 1 
236 1 288 1 
17 1 136 1 254 8 255 1 283 1 139 1 138 2 42 4 332 1 289 2 194 1 118 2 124 1 270 1 180 1 157 1 340 1 69 1 226 1 15 4 73 1 276 1 277 1 
135 1 17 2 2 1 189 1 136 1 254 11 255 2 283 1 138 2 139 1 42 5 332 1 82 1 289 4 194 1 118 3 124 1 270 1 180 2 157 1 340 1 69 2 343 1 226 2 15 6 73 1 277 1 276 2 
17 3 2 2 189 2 136 1 254 19 255 1 139 1 283 3 138 3 42 10 19 1 82 1 332 1 289 6 172 2 117 1 194 1 118 4 312 1 269 1 122 1 124 1 270 1 180 3 157 1 340 1 69 3 343 1 226 3 15 9 73 1 277 1 276 3 
17 3 2 2 189 2 136 1 254 17 255 1 139 1 283 2 138 3 42 7 19 1 82 2 332 1 289 6 172 1 117 1 194 1 118 5 312 1 269 1 122 1 124 1 270 1 180 3 157 1 340 1 69 3 343 1 226 3 15 10 73 1 277 1 276 3 
17 1 136 1 254 8 255 1 283 1 139 1 138 2 42 4 332 1 289 2 194 1 118 2 124 1 270 1 180 1 157 1 340 1 69 1 226 1 15 4 73 1 276 1 277 1 
17 1 2 2 189 2 254 12 255 1 283 2 138 1 42 6 19 1 82 1 332 1 289 2 172 2 117 1 118 2 312 1 122 1 124 1 270 1 180 2 69 1 226 1 15 6 73 1 276 1 
17 4 2 2 189 2 136 1 254 18 255 1 139 1 283 2 138 3 42 8 19 1 82 2 332 1 289 8 172 1 117 1 194 1 118 5 312 1 269 2 122 1 124 1 270 1 180 3 157 1 340 1 69 4 343 1 226 4 15 10 73 1 277 1 276 4 
17 4 2 3 189 3 254 16 255 1 283 2 138 3 42 7 19 1 82 3 332 1 146 1 289 8 172 2 117 1 118 6 312 1 269 2 122 1 124 1 270 1 180 3 69 4 226 4 15 9 73 1 276 4 
136 1 254 7 283 1 139 2 138 3 180 1 157 3 42 4 82 3 15 3 277 3 194 1 118 6 
17 4 2 2 189 2 136 1 254 18 255 1 139 1 283 2 138 3 42 8 19 1 82 1 332 1 146 1 289 8 172 1 117 1 194 1 118 4 312 1 269 2 122 1 124 1 270 1 180 3 157 1 340 1 69 4 226 4 15 10 73 1 277 1 276 4 
17 2 269 1 136 1 254 8 283 1 138 2 139 1 180 1 157 1 42 4 340 1 69 2 82 1 289 4 15 4 226 2 276 2 277 1 194 1 118 3 
136 1 254 6 154 1 139 1 138 2 283 1 180 1 157 1 42 3 340 1 15 3 277 1 194 1 118 2 
17 1 2 1 189 1 254 4 138 1 283 1 180 1 42 2 69 1 82 1 343 1 289 2 226 1 15 2 172 1 276 1 118 2 
135 1 2 1 189 1 255 2 254 7 138 1 283 1 270 1 180 1 42 4 82 1 15 3 73 1 172 1 118 2 
135 1 17 2 2 2 189 2 136 1 254 23 255 2 139 1 283 3 138 5 42 12 82 4 65 1 289 4 172 2 194 1 118 9 269 2 126 1 180 3 157 2 340 1 69 2 15 11 226 2 73 2 318 1 277 2 276 2 
254 1 255 1 42 1 
15 1 73 1 254 1 
17 1 2 1 189 1 254 6 283 1 138 2 180 1 42 3 69 1 82 1 343 1 289 2 226 1 15 3 172 1 276 1 118 3 37 1 
17 1 2 2 189 2 254 12 255 1 283 2 138 1 42 6 19 1 82 1 332 1 289 2 172 2 117 1 118 2 312 1 122 1 124 1 270 1 180 2 69 1 226 1 15 6 73 1 276 1 
136 1 254 6 283 1 138 1 180 1 157 1 42 3 82 1 15 3 277 1 118 2 
17 1 269 1 254 3 138 1 139 1 126 1 157 1 42 2 69 1 82 1 289 2 15 1 226 1 277 1 276 1 194 1 118 2 
17 1 136 1 254 10 138 3 283 2 180 2 157 2 42 5 69 1 332 1 82 2 289 2 226 1 15 5 276 1 277 2 23 1 118 5 
17 1 189 1 254 2 180 1 69 1 332 1 82 1 289 2 226 1 15 2 276 1 118 1 
17 1 2 1 189 1 254 4 138 1 283 1 180 1 42 2 69 1 332 1 82 1 289 2 226 1 15 2 172 1 276 1 118 2 
17 3 269 1 254 3 126 1 138 1 157 1 42 2 69 3 332 1 82 1 146 1 289 6 226 3 15 1 276 3 277 1 118 2 
135 1 17 5 2 3 189 3 136 2 255 4 254 34 139 1 283 5 138 7 328 1 42 18 332 1 82 5 146 1 289 10 172 3 194 1 118 12 269 2 126 1 270 1 180 5 157 3 340 1 69 5 343 1 32 1 226 5 15 16 73 3 277 3 276 5 76 1 
16 1 316 1 91 1 193 1 284 1 141 1 209 1 
196 1 16 1 298 1 153 1 91 1 155 1 284 1 141 1 182 1 316 1 193 1 209 1 
317 1 354 1 217 1 173 1 154 1 22 1 264 1 148 1 53 1 183 1 159 1 
91 1 127 1 284 2 141 1 53 1 183 1 159 1 160 1 191 1 316 2 317 1 217 1 334 1 22 1 335 1 264 1 148 1 278 1 
279 1 91 2 127 1 284 2 141 1 53 2 300 1 159 3 160 1 191 2 161 1 316 2 84 1 317 1 217 1 334 2 228 1 22 1 335 1 264 1 148 1 229 1 278 1 
279 1 252 1 284 2 18 1 141 1 191 2 84 1 217 2 334 2 22 2 335 1 148 2 264 1 91 2 53 2 159 3 300 1 160 1 161 1 316 2 317 1 228 1 229 1 278 1 
279 1 252 1 256 2 167 2 44 1 84 1 237 1 217 3 334 1 22 3 148 3 264 1 177 1 272 1 338 1 202 1 53 1 183 1 159 4 317 1 74 1 320 1 228 1 
352 1 279 1 252 1 256 2 202 1 167 2 53 1 183 1 159 4 44 1 237 1 84 1 317 1 217 3 334 1 320 1 74 1 228 1 22 3 264 1 148 3 177 1 
317 1 217 1 22 1 264 1 148 1 81 1 
179 1 40 1 52 1 357 1 371 1 53 2 373 1 183 2 81 1 159 3 331 1 55 1 317 2 57 1 217 6 334 1 114 1 22 7 148 7 264 3 231 1 
39 1 17 1 136 1 254 8 283 2 138 2 139 1 284 1 141 1 42 4 191 1 331 1 82 1 289 2 217 1 23 1 22 1 335 1 148 1 194 1 25 1 118 3 91 1 180 2 157 1 160 1 69 1 225 1 316 1 15 4 226 1 275 1 277 1 276 1 98 1 186 1 229 1 
0 1 352 1 137 1 256 3 285 2 167 3 143 2 235 1 44 1 237 1 309 1 217 1 22 1 148 1 51 1 177 2 27 1 181 1 273 1 202 1 183 1 159 2 129 2 304 2 320 1 74 1 187 1 306 1 
179 1 212 1 53 1 81 1 159 2 331 1 317 1 217 2 74 1 334 1 22 2 148 2 264 2 
252 1 354 1 53 1 183 1 159 1 331 1 14 1 317 1 217 4 173 1 22 4 264 1 148 4 
325 1 243 1 89 1 371 1 53 1 373 1 159 1 317 1 217 2 334 1 228 1 22 2 148 2 264 2 
234 1 317 1 103 1 217 1 22 1 264 1 148 1 322 1 183 1 26 1 
331 1 317 1 57 1 217 2 22 2 49 1 264 1 148 2 53 1 159 1 231 1 
354 1 40 1 52 1 53 2 183 1 159 3 331 1 14 1 317 2 217 4 173 1 228 1 22 5 148 5 264 2 231 1 
354 1 52 1 53 2 183 1 159 3 331 1 14 1 317 2 217 4 173 1 228 1 22 5 148 5 264 2 58 1 231 1 
91 1 284 2 18 1 141 1 53 1 183 1 159 1 160 1 191 1 316 2 317 1 217 1 334 1 22 1 335 1 264 1 148 1 278 1 
179 1 357 1 371 1 53 1 373 1 159 1 317 1 217 1 334 1 228 1 22 1 148 1 264 2 
353 1 333 1 233 1 208 1 141 1 
353 2 256 2 233 2 313 1 141 1 202 1 273 1 167 2 43 1 168 1 300 1 44 1 161 1 333 1 130 1 237 1 319 1 208 2 229 1 
353 1 3 1 91 1 284 1 361 1 333 1 316 1 171 1 208 1 
333 1 313 1 168 1 
349 1 154 1 330 1 374 1 
56 1 274 1 349 1 207 1 370 1 330 1 374 1 
214 1 149 1 207 1 
119 2 140 1 370 3 360 1 222 1 330 1 203 1 374 1 274 1 56 1 349 1 207 3 
56 1 274 1 349 1 329 1 207 2 370 2 330 1 164 1 374 1 
370 1 222 1 330 1 234 1 274 1 56 1 248 1 351 1 207 1 185 1 322 1 
56 1 274 1 349 1 207 1 370 1 222 1 330 1 
56 1 274 1 349 2 207 1 370 1 222 1 374 1 
120 1 56 2 274 2 211 1 349 1 207 2 370 2 222 1 330 1 99 1 
150 1 56 1 274 1 349 1 13 1 207 3 370 3 185 1 314 1 222 1 330 2 164 2 374 1 
370 2 222 1 330 1 158 1 374 1 234 2 145 1 274 1 56 1 349 1 351 1 207 2 322 1 164 1 26 1 
150 1 56 2 274 2 349 1 4 1 329 1 207 4 370 4 185 1 222 1 330 2 164 2 374 1 
56 1 274 1 349 1 207 1 370 1 222 1 330 1 374 1 
119 1 150 1 140 1 370 4 203 1 330 3 374 2 286 1 274 1 56 1 349 2 207 4 185 1 164 2 
79 1 370 2 222 1 372 1 330 1 374 1 274 1 56 1 349 1 207 2 78 1 164 1 
119 2 121 1 140 2 370 3 222 1 203 1 330 1 374 1 274 1 56 1 349 1 207 3 
216 1 296 1 308 2 330 2 
56 1 274 1 346 1 207 1 370 1 222 1 
56 1 274 1 349 1 13 1 207 2 370 2 222 1 330 1 164 1 374 1 
365 1 
56 1 274 1 349 1 207 1 370 1 222 1 330 1 374 1 
119 1 13 1 370 3 222 1 330 1 374 1 274 1 56 1 349 1 207 3 164 1 
286 1 150 1 185 1 330 1 
349 1 330 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 219 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 219 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) (157,273) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (157,273) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) (157,273) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (212,216,302,315) (212,216,302,315) (212,216,302,315) 194 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 212 1 216 1 194 1 
318 1 118 1 327 1 
118 1 178 1 17 2 
133 1 49 2 281 1 262 2 227 2 269 2 244 2 71 2 
181 1 141 2 186 1 281 1 6 1 289 1 244 2 112 1 71 2 294 1 251 1 10 2 76 1 253 1 16 2 158 1 82 1 207 1 48 1 49 2 51 2 127 1 54 1 262 3 167 1 263 1 168 1 91 1 269 2 94 1 133 1 329 1 177 2 227 3 331 1 277 1 332 1 
49 1 173 1 281 1 262 1 32 1 223 1 227 1 269 1 244 1 71 1 
239 1 262 1 214 1 269 1 56 1 197 1 173 1 299 1 96 1 118 1 327 1 203 1 254 1 227 1 
49 1 239 1 262 1 244 1 269 1 71 1 56 2 197 1 173 1 96 2 299 1 118 1 327 1 254 1 227 1 
56 1 96 1 98 1 193 1 247 1 
56 2 50 1 96 2 118 1 327 1 98 1 193 1 149 1 
56 1 96 1 193 1 
49 1 281 1 262 1 244 1 269 1 71 1 56 1 72 1 173 1 96 1 32 1 223 1 98 1 227 1 
118 1 
56 2 50 1 96 2 118 1 327 1 8 1 98 1 193 1 
258 1 21 2 50 1 235 1 211 1 110 1 243 1 90 2 36 1 193 2 169 1 56 5 96 5 75 2 118 1 327 1 78 1 98 2 312 1 
133 1 318 1 
1 1 49 1 107 1 262 2 269 2 244 1 71 1 133 2 227 2 
146 1 23 1 139 1 
0 1 141 1 289 1 6 1 262 1 167 1 168 1 94 1 133 1 294 1 76 1 177 1 16 1 227 1 82 1 332 1 
141 1 6 1 106 1 289 1 262 2 167 1 168 1 244 1 269 1 94 1 71 1 294 1 325 1 76 1 177 1 16 1 227 2 139 1 82 1 332 1 
133 1 49 1 106 1 262 3 227 3 269 3 244 3 71 3 
173 1 262 1 223 1 227 1 269 1 244 1 71 1 
1 1 49 1 173 1 107 1 262 1 227 1 269 1 244 1 71 1 
181 1 141 1 186 1 281 1 6 1 289 1 107 1 106 1 239 1 244 3 112 1 71 3 294 1 197 1 251 1 10 2 299 1 76 1 254 1 16 1 158 1 82 1 49 2 51 1 127 1 262 4 167 1 168 1 91 1 269 3 94 1 133 1 56 1 57 1 272 1 173 1 325 1 96 1 329 1 177 1 227 4 331 1 277 1 332 1 
133 1 106 1 203 1 262 2 255 1 227 2 269 2 244 1 71 1 
49 1 86 1 107 1 106 2 239 1 262 3 244 3 269 3 71 3 56 1 57 1 197 1 173 1 96 1 325 1 299 1 118 1 254 1 227 3 
49 1 106 1 107 1 146 1 262 2 244 2 269 2 71 2 227 2 139 1 
141 1 289 1 6 1 262 1 167 1 168 1 94 1 133 1 294 1 76 1 177 1 16 1 227 1 82 1 332 1 
141 1 6 1 262 1 167 1 67 1 168 1 94 1 133 1 294 1 199 1 177 1 16 1 227 1 82 1 332 1 
186 1 236 1 146 2 242 1 112 2 9 1 251 1 116 1 10 2 252 1 156 1 45 1 158 1 18 1 51 4 88 1 54 2 23 2 91 1 329 1 59 1 179 1 331 1 139 2 
197 1 173 1 262 1 307 1 227 1 269 1 244 1 71 1 
49 1 106 2 107 1 262 5 244 4 269 5 71 4 133 1 28 1 325 1 203 1 13 1 255 1 227 5 
173 1 262 2 307 1 223 1 227 2 269 2 244 2 71 2 
249 1 79 1 
249 1 79 1 
293 1 152 1 
293 1 152 1 
293 1 152 1 
249 1 260 1 79 1 
249 1 260 1 79 1 
249 1 287 1 79 1 
248 1 249 2 293 1 79 2 92 1 152 1 
249 1 260 1 79 1 
271 1 249 1 79 1 
271 1 249 1 79 1 
271 1 249 1 79 1 
206 2 232 2 279 3 190 1 240 1 265 1 69 1 196 2 56 2 248 1 249 2 96 2 118 1 275 2 304 1 138 2 121 1 79 2 204 1 
279 1 232 1 35 1 188 1 287 1 104 1 244 2 71 2 196 1 249 1 304 1 79 1 206 1 47 1 262 2 269 2 133 1 56 1 96 1 138 1 176 1 60 1 227 2 229 1 
230 1 220 1 109 1 
230 1 109 1 15 1 
220 2 164 1 7 1 109 3 15 1 25 1 
220 1 119 1 7 1 109 2 15 1 25 1 
220 1 7 2 109 2 15 1 25 1 
188 1 104 1 110 1 243 2 192 2 193 1 151 1 116 1 298 2 300 2 75 1 118 2 12 1 154 1 156 1 45 1 17 3 21 1 209 1 50 1 316 1 88 1 211 3 90 1 56 5 96 5 30 1 327 1 176 1 224 1 98 4 178 1 
188 2 288 1 110 1 243 2 192 2 193 4 247 3 151 1 40 1 116 1 300 2 75 2 118 3 12 1 154 1 156 1 45 1 17 3 21 2 50 1 316 1 88 1 210 3 211 3 90 2 169 1 219 1 56 7 96 7 327 1 98 5 225 1 178 1 
188 1 243 2 192 2 151 1 298 1 116 1 75 1 300 2 118 3 154 1 156 1 45 1 17 4 21 1 209 1 316 1 88 1 211 3 90 1 169 1 56 3 96 3 30 1 327 1 98 2 178 2 
21 1 209 1 90 1 169 1 56 1 219 1 96 1 30 1 75 1 
318 1 55 1 332 1 
142 1 332 1 
34 1 
6 1 332 1 
313 1 6 1 213 1 55 2 82 1 332 3 
6 1 82 1 332 1 
278 1 332 1 
87 1 231 1 184 1 51 7 236 3 238 1 54 4 112 3 322 2 95 1 116 1 31 1 44 1 201 1 274 1 156 1 59 2 
87 1 231 1 184 1 51 7 236 3 238 1 54 4 112 3 322 2 95 1 116 1 31 1 44 1 201 1 274 1 156 1 59 2 
87 1 231 1 184 1 51 7 236 3 238 1 54 4 112 3 322 2 95 1 116 1 31 1 44 1 201 1 274 1 303 1 156 1 59 2 
231 1 184 2 186 1 236 10 238 2 148 3 112 15 114 1 251 1 10 2 116 4 44 1 201 1 200 4 156 4 45 3 309 1 81 1 87 5 316 3 51 31 88 3 128 1 54 16 130 1 215 1 322 3 270 1 95 1 31 2 274 2 329 1 59 5 331 1 
184 1 186 2 236 4 238 1 112 4 251 2 116 1 10 4 44 1 201 1 156 1 87 1 51 9 129 1 54 5 130 1 322 2 95 1 31 1 274 1 328 1 329 2 59 3 331 2 
64 1 315 1 212 1 216 1 194 1 
64 1 315 1 273 1 212 1 216 1 
64 1 212 1 302 1 157 1 
64 1 315 1 273 1 212 1 216 1 
64 1 315 1 212 1 216 1 194 1 
147 1 
62 2 63 2 141 2 65 1 4 1 144 1 6 1 239 1 243 2 70 1 151 1 250 1 75 1 77 2 254 1 16 2 17 2 161 1 21 1 167 2 262 1 90 1 269 1 93 1 94 1 171 2 173 1 96 5 177 2 178 2 182 1 183 1 101 1 102 2 110 1 292 1 111 1 193 6 294 1 197 1 299 1 118 2 203 1 123 4 50 3 126 2 211 2 131 2 214 1 56 5 134 1 222 1 327 1 227 1 332 1 
65 1 4 1 239 1 8 1 292 1 70 1 193 2 197 1 299 1 77 1 203 1 254 1 123 2 50 1 262 1 214 1 269 1 56 3 173 1 96 3 222 1 227 1 
62 1 65 1 4 1 239 1 8 1 292 1 70 1 193 1 197 1 299 1 118 1 203 1 254 1 123 3 50 1 262 1 214 1 269 1 56 3 173 1 96 3 222 1 327 1 227 1 
62 1 65 1 4 1 239 1 8 1 292 1 70 1 193 2 197 1 299 1 118 1 77 1 203 1 254 1 123 3 50 1 262 1 131 1 214 1 269 1 56 3 173 1 96 3 222 1 327 1 227 1 
62 4 63 2 65 1 4 1 144 1 239 1 8 1 243 1 70 1 75 1 77 4 254 1 19 1 21 1 262 1 90 1 269 1 171 2 173 1 96 5 178 2 102 2 292 1 110 1 111 1 193 7 37 1 197 1 198 1 299 1 118 5 203 1 120 1 122 1 123 6 50 3 126 2 211 1 131 4 214 1 56 5 222 1 327 5 227 1 
62 2 63 2 65 1 4 1 144 1 239 1 243 1 70 1 75 1 77 2 254 1 17 2 161 1 21 1 262 1 90 1 269 1 171 2 173 1 96 4 178 2 102 2 110 1 292 1 111 1 193 4 197 1 299 1 118 2 203 1 123 4 50 2 126 2 211 1 131 2 214 1 56 4 222 1 327 1 227 1 
62 2 63 2 65 1 102 2 4 1 144 1 239 1 292 1 110 1 111 1 243 1 70 1 193 4 37 1 197 1 299 1 75 1 118 1 77 2 203 1 254 1 122 1 123 4 19 1 21 1 50 2 126 2 211 1 262 1 131 2 90 1 214 1 269 1 56 4 171 2 173 1 96 4 222 1 327 1 178 2 227 1 
62 2 63 2 65 1 102 2 4 1 144 1 239 1 292 1 110 1 111 1 243 1 70 1 193 4 37 1 197 1 299 1 75 1 118 1 77 2 203 1 254 1 122 1 123 4 19 1 21 1 50 2 126 2 211 1 262 1 131 2 90 1 214 1 269 1 56 4 171 2 173 1 96 4 222 1 327 1 178 2 227 1 
62 2 65 1 4 1 239 1 292 1 110 1 111 1 243 1 70 1 193 4 197 1 296 1 299 1 75 1 118 1 77 2 203 1 254 1 17 2 122 1 123 4 314 2 21 1 50 2 126 2 52 1 319 2 211 1 262 1 131 2 90 1 214 1 269 1 56 4 171 2 173 1 96 4 222 1 327 1 33 1 227 1 
62 3 63 2 65 1 102 2 4 1 144 1 239 1 110 1 292 1 111 1 243 1 70 1 193 5 37 1 197 1 198 1 299 1 75 1 118 1 77 3 203 1 254 1 122 1 123 5 21 1 19 1 50 2 126 2 211 1 262 1 131 3 90 1 214 1 269 1 56 4 171 2 173 1 96 4 222 1 327 1 178 2 227 1 
62 3 63 2 65 1 102 2 4 1 144 1 239 1 110 1 292 1 111 1 243 1 70 1 193 5 37 1 197 1 198 1 299 1 75 1 118 1 77 3 203 1 254 1 122 1 123 5 21 1 19 1 50 2 126 2 211 1 262 1 131 3 90 1 214 1 269 1 56 4 171 2 173 1 96 4 222 1 327 1 178 2 227 1 
62 2 65 1 4 1 239 1 292 1 110 1 111 1 243 1 70 1 193 4 197 1 299 1 75 1 118 1 77 2 203 1 254 1 17 2 161 1 123 4 314 2 21 1 50 2 126 2 52 1 319 2 211 1 262 1 131 2 214 1 90 1 269 1 56 4 171 2 173 1 96 4 222 1 327 1 227 1 
186 1 236 2 146 1 242 1 112 3 251 1 10 2 116 1 44 1 201 1 156 1 158 1 51 6 318 1 54 3 23 1 91 1 322 1 133 2 95 1 31 1 274 1 329 1 59 2 139 1 331 1 
181 1 186 2 236 2 146 4 148 3 112 6 195 1 41 1 251 2 10 4 116 2 200 3 156 1 45 1 309 1 158 1 87 1 124 1 316 2 51 14 88 2 54 8 263 1 23 11 91 2 270 1 133 1 172 1 59 1 329 2 61 1 331 2 139 11 
141 1 0 1 181 1 186 1 6 1 289 1 106 1 146 1 68 1 244 1 112 1 195 1 71 1 294 1 251 1 10 2 76 1 16 1 158 1 82 1 51 2 167 1 262 2 54 1 263 1 168 1 91 1 269 1 94 1 133 1 170 1 325 1 177 1 329 1 227 2 140 1 331 1 332 1 
141 3 234 2 236 8 6 2 146 7 241 1 244 1 71 1 251 3 10 6 76 2 156 3 16 3 158 3 82 2 87 4 88 2 167 1 262 3 263 1 23 7 168 2 269 1 91 3 94 2 95 1 31 1 274 1 177 3 99 1 181 1 186 3 189 2 106 1 289 2 112 10 195 1 294 2 116 3 44 1 201 1 45 2 205 2 208 1 316 2 51 20 127 2 54 10 322 1 218 2 133 2 325 1 330 1 59 4 329 3 227 3 331 3 139 7 332 2 
141 8 181 1 182 1 186 2 145 1 106 1 6 2 108 1 242 1 244 1 112 1 71 1 294 2 250 1 297 1 251 2 10 4 305 1 16 8 158 2 46 1 310 1 207 2 51 2 262 1 167 2 54 1 263 1 266 1 269 1 91 2 94 2 58 1 330 1 177 7 329 2 227 1 331 2 332 3 
186 1 236 1 107 1 146 1 244 1 112 2 195 1 71 1 251 1 10 2 116 1 156 1 45 1 158 1 49 1 316 1 125 1 88 1 51 3 262 1 54 1 23 1 91 1 269 1 59 1 329 1 227 1 139 1 331 1 
87 1 186 1 51 2 88 1 236 1 146 1 54 2 23 1 242 1 91 1 251 1 10 2 252 1 116 1 329 1 158 1 139 1 331 1 
186 1 51 2 236 1 146 1 23 1 242 1 91 1 112 2 251 1 10 2 59 1 329 1 156 1 45 1 158 1 139 1 331 1 18 1 
186 1 236 2 146 2 242 1 112 2 251 1 116 1 10 2 156 1 45 1 158 1 87 1 316 1 88 1 51 4 54 2 23 2 91 1 329 1 59 1 331 1 139 2 
87 1 186 1 51 2 88 1 236 1 146 1 54 2 23 1 91 1 251 1 10 2 252 1 116 1 329 1 46 1 158 1 139 1 331 1 
186 1 51 2 236 1 146 1 23 1 91 1 112 2 251 1 10 2 59 1 329 1 156 1 45 1 46 1 158 1 139 1 331 1 18 1 
186 1 236 2 146 2 112 2 251 1 116 1 10 2 156 1 45 1 158 1 46 1 87 1 316 1 88 1 51 4 54 2 23 2 91 1 329 1 59 1 331 1 139 2 
87 1 186 1 316 1 88 1 51 4 236 2 146 2 54 2 23 2 91 1 112 2 251 1 10 2 116 1 59 1 156 1 329 1 45 1 158 1 139 2 331 1 
141 1 181 1 186 1 6 1 289 1 112 1 294 1 251 1 10 2 76 1 16 1 158 1 82 1 51 2 127 1 54 1 167 1 262 1 263 1 168 1 91 1 94 1 133 1 177 1 329 1 227 1 331 1 332 1 
141 1 181 1 186 1 6 1 67 1 112 1 294 1 251 1 199 1 10 2 16 1 158 1 82 1 51 2 54 1 167 1 262 1 263 1 168 1 267 1 91 1 94 1 133 1 177 1 329 1 227 1 331 1 332 1 
186 1 236 2 146 2 112 2 195 1 251 1 116 1 10 2 156 1 45 1 158 1 87 1 316 1 88 1 51 4 54 2 23 2 91 1 329 1 59 1 331 1 139 2 
141 1 186 1 236 2 189 1 289 1 6 1 146 2 108 1 112 2 294 1 251 1 116 1 10 2 76 1 156 1 45 1 16 1 158 1 82 1 87 1 316 1 51 4 88 1 127 1 54 2 262 1 23 2 168 1 91 1 94 1 59 1 177 1 329 1 227 1 139 2 331 1 332 1 
186 1 236 1 107 1 146 1 244 1 112 1 195 1 71 1 74 1 251 1 10 2 116 1 156 1 45 1 158 1 87 1 49 1 316 1 88 1 51 3 262 1 54 2 23 1 91 1 269 1 329 1 227 1 331 1 139 1 
180 1 3 1 186 2 284 1 236 6 148 1 112 10 42 2 251 2 10 4 116 3 200 2 155 2 156 3 45 3 309 1 87 3 316 3 51 19 88 3 129 1 54 9 320 1 217 1 270 1 29 1 135 1 59 3 329 2 331 2 
2 1 186 3 284 2 236 4 286 1 148 2 112 12 246 1 42 4 251 3 115 1 10 6 116 3 200 2 155 1 156 2 45 2 256 1 309 2 87 2 316 3 51 26 88 3 130 2 129 1 54 14 320 1 217 1 29 2 135 1 174 1 59 2 329 3 331 3 
2 1 3 1 186 3 284 2 286 1 236 8 148 3 246 1 112 21 42 4 251 3 115 1 10 6 116 5 44 1 201 1 200 4 155 1 156 5 45 4 256 1 309 3 87 4 316 4 51 41 88 4 166 1 130 1 129 1 54 20 320 1 322 1 217 1 270 1 95 1 29 1 135 1 174 1 31 1 274 1 59 4 329 3 331 3 
2 1 3 1 186 4 284 2 286 1 236 7 148 3 246 1 112 18 42 4 251 4 115 1 10 8 116 5 44 1 201 1 200 4 155 1 156 4 45 3 256 1 309 3 87 3 316 4 51 38 88 4 166 1 130 2 129 1 54 20 320 1 322 1 217 1 270 1 95 1 29 1 135 1 174 1 31 1 274 1 59 4 329 4 331 4 
2 1 186 2 284 1 286 1 236 14 148 4 246 1 112 25 42 4 251 2 115 1 10 4 116 8 44 1 201 1 200 4 155 1 156 8 45 7 256 1 309 2 87 7 316 7 51 52 88 7 130 1 129 1 54 27 320 1 322 1 217 1 270 2 95 1 172 2 29 1 135 1 174 1 31 1 274 1 59 7 329 2 331 2 
206 1 196 1 248 1 249 1 232 1 190 1 240 1 276 1 138 1 79 1 
35 1 287 1 
206 1 196 1 27 1 249 1 232 1 202 1 66 1 138 1 79 1 
206 1 232 1 279 2 190 1 240 1 69 1 56 1 196 1 248 1 249 1 96 1 118 1 275 1 304 1 138 1 121 1 79 1 204 1 
206 1 232 1 279 2 190 1 240 1 69 1 56 1 196 1 248 1 249 1 96 1 118 1 275 1 304 1 138 1 121 1 79 1 204 1 
206 1 232 1 279 2 190 1 240 1 69 1 56 1 196 1 248 1 249 1 96 1 118 1 275 1 304 1 138 1 121 1 79 1 204 1 
260 1 80 1 92 1 
260 1 80 1 92 1 
271 1 175 1 
271 1 175 1 92 1 
47 1 60 1 
232 1 279 1 35 1 285 1 188 1 287 1 104 1 244 2 71 2 196 1 249 1 79 1 204 1 206 1 47 1 262 2 269 2 133 1 56 1 96 1 275 1 138 1 176 1 98 1 60 1 227 2 229 1 
260 1 80 1 
271 1 175 1 92 1 
141 2 181 1 186 1 282 1 6 1 112 1 195 1 294 1 297 1 251 1 10 2 306 1 305 1 16 2 159 1 158 1 160 1 207 2 51 2 262 2 54 1 263 1 91 1 269 2 94 1 323 1 329 1 177 2 227 2 331 1 332 1 
230 1 141 2 164 1 89 1 165 1 237 1 53 1 109 2 108 1 321 1 94 1 294 1 220 1 136 1 330 1 177 2 15 1 16 2 257 1 
230 1 141 1 164 1 89 1 237 1 105 1 53 1 109 2 321 1 94 1 294 1 220 1 330 1 177 1 15 1 16 1 257 1 
141 1 259 1 182 1 165 1 237 1 6 1 167 1 94 1 150 1 294 1 250 1 177 1 16 1 332 1 
230 1 141 1 164 1 89 1 165 1 237 1 53 1 109 2 321 1 94 1 294 1 220 1 136 1 330 1 177 1 15 1 16 1 257 1 
245 1 
318 1 118 1 211 1 327 1 78 1 243 1 312 1 
63 1 102 1 144 1 110 1 243 1 193 1 75 1 118 2 17 1 21 1 50 1 211 1 90 1 56 1 96 1 327 1 178 1 
141 3 142 3 143 2 234 2 5 1 6 3 243 8 151 2 73 1 75 4 78 1 254 2 156 2 16 3 17 12 82 3 84 2 21 4 22 1 88 2 167 1 264 2 90 4 94 4 96 5 177 3 178 6 100 2 278 2 185 2 103 1 108 1 191 2 110 4 192 6 193 5 294 3 116 2 300 6 118 8 45 2 312 1 311 2 313 1 50 3 316 2 211 9 55 2 56 5 134 1 327 2 226 2 228 1 332 10 
2 1 286 1 110 2 243 5 192 5 148 1 193 1 246 1 151 1 43 1 115 1 116 2 300 5 75 2 200 1 118 5 156 2 45 2 17 6 309 1 20 1 21 2 50 1 316 2 88 2 211 8 264 2 90 2 56 1 134 1 174 1 96 1 327 2 178 3 100 1 
280 1 281 1 110 1 243 2 244 1 37 1 71 1 72 1 116 2 75 1 201 1 156 1 21 1 49 1 211 2 262 1 264 2 90 1 269 1 56 1 173 1 96 1 31 1 274 1 32 1 223 1 227 1 100 1 
21 1 211 1 110 1 90 1 243 1 75 1 118 1 327 1 78 1 312 1 
316 2 234 1 88 2 211 5 264 2 243 5 192 5 116 2 300 5 118 5 156 2 45 2 17 10 178 5 100 1 
56 1 50 1 96 1 118 1 327 1 193 1 
141 4 182 1 101 1 103 2 6 1 110 1 243 2 193 4 151 2 294 1 113 1 250 1 75 2 16 4 21 2 50 2 22 1 211 2 167 2 90 2 94 1 93 1 169 1 56 3 134 2 326 1 96 3 177 4 332 1 
181 1 141 1 186 1 281 1 289 1 6 1 244 2 112 1 71 2 294 1 251 1 10 2 76 1 16 1 158 1 82 1 49 2 51 1 127 1 167 1 262 3 168 1 269 2 91 1 94 1 133 1 329 1 177 1 227 3 277 1 331 1 332 1 
21 1 211 1 110 1 243 2 90 1 192 2 322 1 151 1 134 1 300 2 75 1 118 4 327 2 178 2 17 4 
206 1 232 1 97 1 
206 1 232 1 97 1 
206 1 232 1 233 1 240 1 60 1 
206 1 232 1 97 1 
206 1 232 1 153 1 
206 1 232 1 153 1 
206 1 232 1 153 1 
206 1 232 1 
249 1 79 1 
87 1 186 2 51 8 236 3 54 4 130 1 322 1 112 4 95 1 251 2 116 1 10 4 44 1 31 1 201 1 274 1 156 1 59 2 329 2 331 2 
51 6 318 1 236 2 54 3 322 1 112 3 95 1 116 1 44 1 31 1 274 1 201 1 59 2 156 1 
87 1 186 1 316 1 88 1 51 4 236 2 187 1 54 2 112 2 251 1 10 2 116 1 59 1 156 1 329 1 45 1 331 1 
87 1 316 1 51 7 88 1 236 2 54 3 148 1 112 4 270 1 116 1 200 2 59 1 156 1 45 1 309 1 
186 2 283 1 236 9 148 2 112 12 251 2 116 3 10 4 44 1 201 1 200 2 156 3 45 2 87 4 316 2 88 2 51 23 54 11 130 2 322 1 270 1 95 1 172 1 31 2 274 2 59 5 329 2 61 1 331 2 
51 1 200 1 112 1 
51 1 54 1 148 1 
87 1 186 1 316 1 234 1 51 6 88 1 187 1 236 3 54 3 112 3 251 1 10 2 116 1 329 1 156 1 59 2 45 1 331 1 
2 1 186 1 286 1 236 2 148 1 112 6 246 1 251 1 10 2 116 2 115 1 200 1 156 2 45 2 309 1 87 1 316 2 51 12 88 2 129 1 54 6 174 1 329 1 59 1 331 1 
87 1 51 6 236 2 54 3 112 3 116 1 31 1 201 1 274 1 156 1 59 1 
87 1 186 1 283 1 51 3 236 2 54 1 130 1 112 2 95 1 251 1 10 2 31 1 44 1 274 1 59 1 329 1 331 1 
87 2 186 1 280 1 51 10 236 5 129 1 54 5 112 5 251 1 10 2 116 2 31 2 274 2 201 1 329 1 59 3 156 2 331 1 
87 1 186 1 88 1 51 2 236 1 129 1 54 2 251 1 10 2 116 1 329 1 331 1 
87 1 186 1 316 1 88 1 51 4 236 2 129 1 54 2 112 2 251 1 10 2 116 1 59 1 156 1 329 1 45 1 331 1 
87 1 3 1 186 3 283 1 51 3 236 2 130 1 129 1 54 1 112 2 251 3 10 6 31 1 274 1 329 3 59 1 331 3 
3 1 186 5 283 1 187 1 236 12 148 3 112 18 114 1 251 5 10 10 116 5 44 1 201 2 200 4 156 5 45 3 309 1 81 1 87 5 316 3 51 34 88 3 130 2 129 1 54 16 215 1 322 1 270 1 95 1 31 3 274 3 329 5 59 7 331 5 
2 1 186 1 236 2 148 1 112 4 251 1 116 1 10 2 44 1 200 1 201 1 156 1 309 1 51 8 129 1 54 4 322 1 95 1 31 1 274 1 329 1 59 2 331 1 
2 1 186 2 187 1 236 3 148 1 112 5 251 2 10 4 116 2 44 1 201 1 200 2 156 1 309 1 87 1 316 1 51 11 88 1 129 1 54 6 322 1 270 1 95 1 31 1 274 1 59 2 329 2 331 2 
2 1 186 3 187 1 286 1 236 4 148 1 112 10 246 1 251 3 10 6 116 3 115 1 44 1 201 1 200 1 156 3 45 2 309 1 87 1 316 2 51 19 88 2 129 1 54 9 130 1 322 1 95 1 174 1 31 1 274 1 329 3 59 3 331 3 
2 1 186 3 187 1 286 1 236 5 148 1 112 7 246 1 251 3 10 6 116 3 115 1 44 1 201 1 200 1 156 2 45 1 309 1 87 2 316 2 51 17 88 2 130 1 129 1 54 10 322 1 95 1 174 1 31 1 274 1 329 3 59 3 331 3 
2 1 186 1 236 2 148 1 112 4 251 1 116 1 10 2 44 1 200 1 201 1 156 1 309 1 51 8 129 1 54 4 322 1 95 1 31 1 274 1 329 1 59 2 331 1 
2 1 186 1 286 1 236 2 148 1 112 6 246 1 251 1 10 2 116 2 115 1 200 1 156 2 45 2 309 1 87 1 316 2 51 12 88 2 129 1 54 6 174 1 329 1 59 1 331 1 
2 1 186 4 187 1 286 1 236 5 148 1 112 8 246 1 251 4 115 1 10 8 116 3 44 1 201 1 200 1 156 2 45 1 309 1 87 2 316 2 51 18 88 2 129 1 54 10 130 2 322 1 95 1 174 1 31 1 274 1 329 4 59 3 331 4 
2 1 3 1 186 4 286 1 236 6 148 1 112 7 246 1 251 4 115 1 10 8 116 3 200 1 156 2 45 2 309 1 87 3 316 3 51 16 88 3 129 1 54 9 130 2 174 1 329 4 59 3 331 4 
87 3 51 7 236 6 54 3 112 4 95 1 116 1 44 2 31 3 274 3 201 1 156 1 59 3 
2 1 3 1 186 4 286 1 236 4 148 1 112 8 246 1 251 4 115 1 10 8 116 3 44 1 201 1 200 1 156 2 45 1 309 1 87 1 316 2 51 18 88 2 129 1 54 10 130 2 322 1 95 1 174 1 31 1 274 1 329 4 59 3 331 4 
133 1 262 1 203 1 255 1 227 1 269 1 308 1 
163 1 290 1 262 1 269 1 133 1 39 1 137 1 324 1 203 1 255 1 308 1 227 1 
294 1 141 1 182 1 250 1 318 1 6 1 167 1 177 1 16 1 94 1 332 1 
141 1 6 1 106 1 262 2 167 1 168 1 244 1 269 1 94 1 71 1 133 1 294 1 76 1 177 1 16 1 227 2 82 1 332 1 
141 1 278 1 103 1 106 1 6 2 239 1 244 1 71 2 294 1 197 1 76 1 16 1 82 2 262 2 168 1 269 2 94 1 133 1 173 1 177 1 226 1 227 2 332 3 
141 2 278 1 103 1 106 1 6 2 239 1 244 1 71 2 294 1 197 1 199 1 14 1 16 2 82 2 262 2 168 1 269 2 94 1 133 1 173 1 177 2 226 1 227 2 332 3 
141 3 278 1 142 1 103 1 6 1 167 1 291 1 24 1 55 1 94 1 193 1 56 2 294 1 96 2 118 1 327 1 14 1 254 1 226 1 177 3 16 3 82 1 332 4 
141 3 278 1 142 1 103 1 6 1 167 1 191 1 55 1 94 1 193 1 56 2 294 1 96 2 118 1 327 1 14 1 254 1 226 1 177 3 16 3 82 1 332 4 
294 1 141 1 177 1 16 1 94 1 310 1 
207 1 141 7 313 1 145 1 6 2 108 1 167 2 266 1 268 1 94 3 26 1 38 1 294 2 297 1 58 1 330 1 177 6 16 7 82 1 310 1 332 3 
141 1 236 2 6 1 146 1 244 1 71 1 251 2 10 4 76 1 156 1 16 1 158 2 82 1 262 2 23 1 168 1 269 1 91 2 94 1 95 1 31 1 274 1 177 1 186 2 189 1 289 1 106 1 108 1 112 3 195 1 294 1 116 1 44 1 201 1 306 1 205 1 51 6 127 1 54 3 322 1 133 2 329 2 59 2 227 2 331 2 139 1 332 1 
141 1 142 1 185 1 191 1 110 2 243 1 193 2 75 2 118 1 78 1 254 1 16 1 312 1 311 1 84 1 21 2 50 1 22 1 211 1 167 1 90 2 55 1 56 3 96 3 327 1 177 1 98 1 332 2 
141 2 313 1 6 1 108 1 55 1 94 2 294 1 73 1 177 2 16 2 82 1 310 1 332 2 
85 1 141 4 182 1 6 1 167 1 108 1 94 1 294 1 250 1 14 1 177 4 16 4 332 1 
141 2 103 1 6 1 268 1 94 2 38 1 294 1 117 1 177 2 16 2 99 1 83 1 82 1 332 1 
230 1 294 1 141 1 109 1 167 1 321 1 177 1 15 1 16 1 94 1 
141 2 6 1 108 1 94 1 294 1 297 1 177 2 330 1 16 2 159 1 332 1 
85 1 141 5 182 1 103 1 145 1 6 2 167 1 108 1 266 1 94 2 294 2 250 1 297 1 177 4 16 5 332 3 
85 1 141 5 182 1 103 1 145 1 6 2 167 1 108 1 94 2 294 2 250 1 297 1 301 1 177 4 16 5 332 3 
141 1 6 1 106 1 262 2 167 1 168 1 244 1 269 1 94 1 71 1 133 1 294 1 199 1 177 1 16 1 227 2 82 1 332 1 
141 1 313 1 103 1 6 1 268 1 94 2 26 1 38 1 294 1 177 1 16 1 82 1 332 1 
133 1 221 1 261 1 132 1 162 1 
317 1 261 2 239 1 132 2 133 1 56 2 295 1 197 1 57 1 173 1 221 1 96 2 299 1 11 1 118 1 327 1 254 1 98 1 162 2 
261 1 282 1 262 1 269 1 221 1 323 1 160 1 227 1 162 1 
295 1 221 1 317 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 298 126 122 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 298 97 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 298 126 122 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 298 97 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 298 126 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 298 86 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 1 279 1 347 3 1 1 219 1 169 1 3 1 258 1 199 2 78 2 227 2 353 2 309 9 354 1 264 1 11 2 12 1 313 1 268 1 209 6 87 1 63 9 132 1 212 2 294 5 320 1 89 2 65 4 
68 1 279 1 347 3 1 1 219 1 169 1 3 1 258 1 199 2 78 2 227 2 309 9 354 1 353 2 264 1 11 2 12 1 313 1 268 1 209 6 87 1 63 9 132 1 212 2 294 5 320 1 89 2 65 4 
68 1 279 1 347 4 1 1 219 1 169 1 3 1 258 1 199 2 78 2 227 2 309 10 354 1 353 2 264 1 11 2 12 1 313 1 268 1 209 7 87 1 63 10 132 1 212 2 294 6 320 1 89 2 65 5 
68 1 279 1 347 2 1 1 219 1 169 1 258 1 199 2 78 2 227 2 309 7 354 1 353 1 264 1 11 2 12 1 313 1 268 1 209 4 87 1 63 7 132 1 212 2 294 4 320 1 89 2 65 3 
199 1 227 1 78 1 309 4 354 1 353 2 11 1 347 1 12 1 219 1 209 3 63 4 87 1 3 1 212 1 294 3 320 1 65 2 
199 1 78 1 227 1 309 2 12 1 313 1 219 1 268 1 63 2 341 1 294 1 212 1 320 1 89 1 180 1 39 1 
199 2 78 2 309 3 347 1 12 1 219 1 209 1 63 3 294 2 320 1 89 1 258 1 65 1 
279 1 347 3 219 1 169 1 3 1 258 1 199 2 78 2 227 1 127 1 261 1 309 9 354 1 353 2 11 1 12 1 209 7 63 9 87 1 294 5 212 1 320 1 89 1 65 4 
279 1 347 3 219 1 169 1 3 1 258 1 199 2 78 2 227 1 127 1 261 1 309 9 354 1 353 2 11 1 12 1 209 7 63 9 87 1 294 5 212 1 320 1 89 1 65 4 
375 1 145 1 273 1 
79 1 195 2 273 1 
226 2 40 2 244 2 376 2 150 2 266 1 285 2 137 1 
138 1 40 3 244 2 166 1 363 1 183 1 140 1 23 2 249 1 301 1 348 2 168 1 47 1 194 1 334 1 303 2 285 2 226 3 230 1 8 1 128 1 81 1 101 1 10 1 150 2 266 1 372 2 62 1 314 1 84 1 235 1 131 1 178 1 376 2 110 1 15 2 137 1 
226 1 165 1 40 1 244 1 376 1 288 1 378 1 150 1 266 1 285 1 
226 1 368 1 244 1 40 1 165 1 324 1 216 1 69 1 73 1 302 1 349 1 375 1 273 1 125 1 
226 1 368 2 244 1 40 1 165 1 216 2 69 1 150 1 73 1 302 1 349 1 375 1 376 1 273 1 285 1 
351 1 225 1 368 1 216 1 82 1 
351 1 368 2 216 2 375 1 273 1 186 1 243 1 82 1 
351 1 368 1 216 1 
368 1 226 1 165 1 57 1 244 1 40 1 216 1 288 1 150 1 266 1 82 1 376 1 378 1 285 1 
273 1 
351 1 368 2 155 1 216 2 375 1 273 1 243 1 82 1 
351 2 368 5 297 1 216 5 93 1 100 1 370 1 203 2 45 2 82 2 365 2 116 1 141 1 375 1 142 1 273 1 136 1 243 1 5 1 
226 3 40 3 244 3 376 3 150 1 380 1 285 3 137 1 
226 1 165 1 40 1 244 1 376 1 378 1 285 1 
226 1 165 1 40 1 244 1 217 1 376 1 34 1 150 1 285 1 
138 1 40 4 244 3 165 1 216 1 166 1 363 1 69 1 183 1 140 1 23 1 249 1 301 1 73 1 302 1 348 1 349 1 188 1 168 1 47 1 194 1 334 1 303 2 285 3 226 4 368 1 230 1 8 1 128 1 81 1 34 1 101 1 150 2 266 1 372 1 315 1 235 1 131 1 376 3 110 1 380 1 215 1 15 1 137 1 
226 2 40 2 244 2 324 1 376 1 218 1 380 1 285 1 137 1 
368 1 226 3 165 1 244 3 40 3 216 1 69 1 34 1 150 1 102 1 73 1 302 1 188 1 349 1 376 3 273 1 380 2 285 3 215 1 
226 2 244 2 40 2 34 1 150 1 250 1 153 1 376 2 380 1 285 2 
226 1 40 1 8 1 140 1 81 1 101 1 301 1 249 1 348 1 372 1 168 1 235 1 47 1 15 1 137 1 
226 1 40 1 140 1 81 1 101 1 249 1 348 1 372 1 168 1 235 1 47 1 28 1 32 1 15 1 137 1 
166 1 139 1 363 2 183 1 327 1 346 1 23 4 248 1 328 1 250 2 334 1 303 2 53 1 230 1 9 1 128 1 205 1 233 2 153 2 84 2 340 1 131 1 379 1 14 1 
226 1 165 1 40 1 244 1 376 1 302 1 285 1 52 1 
145 1 137 1 
226 2 244 2 40 2 217 1 34 1 150 1 376 1 285 1 137 2 
153 1 250 1 233 1 
226 1 40 1 8 1 140 1 81 1 101 1 301 1 249 1 348 1 372 1 168 1 235 1 47 1 350 1 15 1 137 1 
226 2 244 1 40 2 8 1 81 1 140 1 101 1 249 1 301 1 348 1 372 1 188 1 153 1 168 1 235 1 47 1 376 1 380 1 285 1 15 1 
6 1 226 5 244 5 40 5 324 1 34 1 218 1 150 1 329 1 188 1 376 4 380 2 285 4 137 1 
226 2 165 1 40 2 244 2 376 2 378 1 52 1 285 2 
270 1 160 1 274 1 
270 1 160 1 274 1 
369 1 160 1 274 1 
369 1 160 1 274 1 
369 1 160 1 274 1 
160 1 274 1 
160 1 274 1 
300 1 251 1 
300 1 251 1 
300 1 251 1 
270 1 160 1 274 1 
356 1 160 1 274 1 
66 1 371 1 160 2 300 1 274 2 251 1 
77 1 66 1 368 2 216 2 99 1 247 2 345 2 338 1 265 1 115 1 103 2 105 3 318 1 220 2 29 2 160 2 273 1 274 2 76 1 
17 1 226 2 368 1 40 2 244 2 216 1 338 1 345 1 80 1 148 1 206 1 299 1 167 1 103 1 105 1 356 1 220 1 29 1 75 1 376 2 160 1 274 1 285 2 137 1 
227 1 212 1 11 1 
227 1 341 1 212 1 
228 1 227 3 341 1 292 1 311 1 11 2 
228 1 227 2 341 1 292 1 358 1 11 1 
228 1 227 2 341 1 292 2 11 1 
216 5 93 2 94 1 43 2 113 1 326 1 45 1 167 1 346 1 72 2 365 1 116 3 142 1 75 1 195 3 224 1 53 1 351 1 368 5 79 1 203 1 129 2 148 1 152 1 82 4 340 1 375 1 176 1 379 1 240 1 273 2 243 1 
216 9 93 6 43 6 113 2 278 1 45 2 167 4 346 3 72 6 365 2 116 8 192 1 142 1 195 9 224 1 53 3 351 6 225 5 368 9 79 3 100 1 203 2 207 5 151 1 152 2 82 7 340 3 375 1 213 1 379 3 240 3 273 5 322 1 242 1 243 1 
216 3 93 2 113 1 43 2 326 1 45 1 167 1 346 1 72 2 365 1 116 3 195 4 53 1 368 3 79 2 100 1 203 1 129 1 152 1 82 2 340 1 375 1 176 1 240 1 379 1 273 3 
216 4 93 4 43 4 113 1 278 1 45 1 326 1 167 2 346 2 72 4 365 1 116 5 195 7 53 2 368 4 79 3 100 1 203 1 129 2 152 1 82 3 340 2 375 1 176 1 213 1 240 2 379 2 273 4 322 1 
235 1 249 1 
107 2 168 1 235 3 249 1 367 1 16 1 
107 1 235 1 145 1 
235 1 26 1 
305 1 
168 1 235 1 249 1 
235 1 95 1 
53 1 0 1 360 1 361 1 164 1 352 1 363 3 277 1 205 3 346 1 248 2 23 7 84 4 117 1 157 1 159 1 179 2 
53 1 0 1 360 1 361 1 164 1 352 1 363 3 277 1 205 3 346 1 248 2 23 7 84 4 117 1 157 1 159 1 179 2 
53 1 0 1 360 1 361 1 164 1 352 1 363 3 277 1 205 3 346 1 248 2 23 7 84 4 117 1 157 1 159 1 304 1 179 2 
0 1 90 1 360 2 181 1 164 2 361 5 166 1 363 15 114 1 277 1 23 31 346 4 248 5 117 2 334 1 303 2 53 4 352 1 200 1 144 4 128 1 146 1 205 10 60 3 84 16 340 3 131 1 208 1 157 1 159 2 240 3 379 3 179 3 162 1 
0 1 360 1 361 1 164 1 166 2 363 4 277 1 346 1 23 9 248 3 189 1 117 1 334 2 303 4 53 1 128 2 174 1 205 4 84 5 131 2 157 1 159 1 179 2 162 1 
296 1 348 1 219 1 47 1 50 1 31 1 222 1 51 1 199 1 78 1 227 2 309 2 101 1 263 1 311 1 11 1 372 1 12 1 130 1 267 1 209 1 63 2 341 1 294 1 212 1 239 1 320 1 89 1 15 1 321 1 
296 1 348 1 119 1 47 1 254 1 50 1 31 1 51 1 199 1 78 1 227 2 259 1 309 3 101 1 311 1 263 1 11 1 372 1 12 1 130 1 267 1 209 2 63 3 341 1 294 1 212 1 320 1 89 1 15 1 321 1 
348 1 47 1 254 1 50 1 31 1 51 1 227 2 259 1 309 2 101 1 263 1 311 1 11 1 372 1 12 1 130 1 209 2 63 2 341 1 294 1 212 1 320 1 89 1 15 1 321 1 
112 1 344 1 140 1 249 1 348 1 119 1 47 1 333 1 31 2 50 2 51 2 199 1 78 1 101 1 309 1 372 1 235 1 63 1 342 1 241 1 89 2 275 1 15 1 
296 1 348 1 219 1 47 1 254 1 50 1 31 1 222 1 51 1 199 1 78 1 227 2 309 1 101 1 263 1 311 1 11 1 372 1 130 1 267 1 63 1 341 1 212 1 89 1 15 1 321 1 
330 1 
244 1 40 1 93 2 42 1 140 2 45 1 249 1 184 1 302 1 185 1 348 2 349 1 252 4 47 1 142 1 195 2 196 1 351 6 56 1 307 1 203 1 101 1 59 2 158 1 211 1 271 1 273 2 275 1 15 2 112 1 165 1 216 5 19 1 324 1 69 1 325 2 113 1 22 2 73 1 365 1 332 2 116 2 125 1 286 2 368 5 226 1 79 2 372 2 235 1 37 1 375 1 175 2 38 1 377 2 243 3 
40 1 244 1 165 1 324 1 19 1 216 3 69 1 325 1 73 1 302 1 349 1 252 2 125 1 196 1 351 2 226 1 368 3 307 1 155 1 37 1 271 1 243 1 
40 1 244 1 165 1 324 1 19 1 216 3 69 1 73 1 302 1 349 1 252 3 125 1 196 1 351 1 226 1 368 3 307 1 59 1 155 1 37 1 375 1 271 1 273 1 243 1 
40 1 244 1 165 1 324 1 19 1 216 3 69 1 325 1 73 1 302 1 349 1 252 3 125 1 196 1 351 2 226 1 368 3 307 1 59 1 155 1 37 1 375 1 175 1 271 1 273 1 243 1 
244 2 40 2 165 2 324 1 19 1 216 3 69 1 325 1 73 1 302 1 349 1 252 2 74 1 125 1 285 1 196 1 351 2 368 3 226 2 57 1 307 1 288 1 150 1 266 1 155 1 37 1 375 1 175 1 376 1 271 1 378 1 273 1 243 1 
40 1 244 1 93 1 42 1 45 1 302 1 185 1 349 1 252 4 142 1 195 2 196 1 351 4 307 1 203 1 59 2 158 1 271 1 273 2 165 1 324 1 216 4 19 1 69 1 325 2 22 2 73 1 365 1 116 1 332 2 125 1 226 1 368 4 286 2 79 2 37 1 375 1 175 2 377 2 243 2 
40 1 244 1 165 1 324 1 19 1 216 4 93 1 69 1 325 2 42 1 22 2 45 1 73 1 302 1 185 1 349 1 365 1 332 2 116 1 252 4 142 1 125 1 196 1 351 4 286 2 226 1 368 4 79 2 307 1 203 1 308 1 59 2 312 1 106 1 37 1 375 1 175 2 377 2 271 1 273 1 243 2 
40 1 244 1 165 1 324 1 19 1 216 4 93 1 69 1 325 2 42 1 22 2 45 1 73 1 302 1 185 1 349 1 365 1 332 2 116 1 252 4 142 1 125 1 196 1 351 4 286 2 226 1 368 4 79 2 307 1 203 1 308 1 59 2 312 1 106 1 37 1 375 1 175 2 377 2 271 1 273 1 243 2 
40 1 244 1 165 1 324 1 19 1 216 4 93 1 41 1 69 1 325 2 42 1 45 1 73 1 302 1 349 1 365 1 116 1 252 4 48 2 142 1 195 2 125 1 196 1 351 4 286 2 226 1 368 4 58 1 307 1 203 1 59 2 312 1 83 2 37 1 375 1 175 2 377 2 271 1 272 1 273 1 243 2 
40 1 244 1 165 1 324 1 19 1 216 4 93 1 69 1 42 1 325 3 22 2 45 1 73 1 302 1 185 1 365 1 349 1 332 2 116 1 252 5 142 1 125 1 196 1 351 5 286 2 226 1 368 4 79 2 307 1 203 1 308 1 59 3 312 1 234 1 106 1 37 1 375 1 175 3 377 2 271 1 273 1 243 2 
40 1 244 1 165 1 324 1 19 1 216 4 93 1 69 1 42 1 325 3 22 2 45 1 73 1 302 1 185 1 365 1 349 1 332 2 116 1 252 5 142 1 125 1 196 1 351 5 286 2 226 1 368 4 79 2 307 1 203 1 308 1 59 3 312 1 234 1 106 1 37 1 375 1 175 3 377 2 271 1 273 1 243 2 
40 1 244 1 41 1 93 1 42 1 45 1 302 1 349 1 252 4 48 2 142 1 195 2 196 1 351 4 307 1 203 1 59 2 158 1 271 1 273 1 165 1 324 1 216 4 19 1 69 1 325 2 73 1 365 1 116 1 125 1 226 1 368 4 286 2 83 2 37 1 375 1 175 2 377 2 243 2 
53 1 361 1 230 1 166 1 128 1 205 1 183 1 327 1 23 2 328 1 250 1 233 1 153 1 84 2 131 1 334 1 303 2 379 1 
230 1 166 1 363 2 128 1 9 1 205 1 183 1 327 1 248 1 23 2 346 1 250 1 233 1 153 1 340 1 131 1 334 1 303 2 
361 1 166 1 363 2 183 1 327 1 23 4 346 1 248 1 250 2 334 1 303 2 53 1 230 1 128 1 205 2 233 2 153 2 84 2 340 1 131 1 379 1 240 1 
53 1 361 1 230 1 166 1 128 1 205 1 183 1 23 2 328 1 250 1 233 1 153 1 13 1 84 2 131 1 334 1 303 2 379 1 
230 1 166 1 363 2 128 1 9 1 205 1 183 1 248 1 23 2 346 1 250 1 233 1 153 1 13 1 340 1 131 1 334 1 303 2 
53 1 361 1 230 1 166 1 363 2 128 1 205 2 183 1 248 1 346 1 23 4 250 2 233 2 153 2 13 1 84 2 340 1 131 1 334 1 303 2 240 1 379 1 
53 1 361 1 230 1 166 1 363 2 128 1 205 2 183 1 248 1 346 1 23 4 250 2 233 2 153 2 84 2 340 1 131 1 334 1 303 2 240 1 379 1 
138 1 40 1 166 1 363 1 140 1 183 1 23 2 249 1 301 1 348 1 168 1 47 1 334 1 194 1 303 2 226 1 8 1 230 1 128 1 81 1 101 1 372 1 62 1 84 1 235 1 131 1 15 1 137 1 
40 1 166 1 363 1 140 1 183 1 23 2 249 1 348 1 168 1 47 1 28 1 334 1 194 1 283 1 303 2 32 1 226 1 230 1 128 1 81 1 101 1 372 1 62 1 84 1 235 1 131 1 15 1 137 1 
361 1 166 1 363 2 183 1 23 4 346 1 248 1 250 2 334 1 303 2 223 1 53 1 230 1 128 1 205 2 233 2 153 2 84 2 340 1 131 1 379 1 240 1 
138 1 361 1 40 1 166 1 363 2 183 1 248 1 346 1 23 4 301 1 249 1 250 2 348 1 168 1 47 1 334 1 303 2 53 1 226 1 8 1 230 1 128 1 205 2 81 1 101 1 372 1 233 2 153 2 374 1 84 2 235 1 340 1 131 1 379 1 239 1 240 1 15 1 
361 1 244 1 40 1 166 1 363 1 183 1 346 1 23 3 250 1 334 1 303 2 335 1 223 1 285 1 53 1 226 1 230 1 128 1 205 1 34 1 150 1 233 1 153 1 84 2 340 1 131 1 376 1 240 1 379 1 
53 1 0 1 164 1 230 1 166 1 363 3 128 1 145 1 277 1 205 2 183 1 327 1 346 1 23 6 248 2 250 1 233 1 153 1 84 3 117 1 131 1 334 1 157 1 303 2 179 1 137 2 
295 1 361 1 20 1 166 2 363 6 183 1 248 1 23 14 346 1 250 4 194 1 193 1 334 2 303 4 223 1 53 2 200 1 230 2 144 3 128 2 146 1 205 2 147 1 60 3 233 11 62 1 153 11 84 8 340 1 131 2 240 2 379 2 137 1 
18 1 40 2 244 1 166 1 363 1 140 1 183 1 364 1 249 1 301 1 23 2 348 1 250 1 188 1 168 1 366 1 47 1 334 1 194 1 350 1 303 2 223 1 285 1 226 2 8 1 230 1 128 1 81 1 101 1 372 1 62 1 235 1 84 1 131 1 376 1 380 1 15 1 137 1 
0 1 138 2 244 1 40 3 140 1 183 3 248 4 346 3 301 2 249 2 348 3 187 2 250 7 188 1 47 2 191 1 194 1 254 1 303 6 53 3 8 2 306 2 205 8 101 2 62 1 153 7 157 1 15 3 164 1 361 4 166 3 363 10 277 1 23 20 168 2 117 1 334 3 172 1 223 1 285 1 226 3 230 3 128 3 81 2 339 2 372 3 373 1 233 7 374 2 235 2 84 10 340 2 131 3 376 1 240 2 379 2 380 1 179 1 137 2 
112 1 40 1 244 1 166 2 246 1 298 1 363 1 140 2 183 2 327 1 23 2 249 3 348 4 168 1 47 2 122 1 334 2 194 1 303 4 171 1 98 1 197 1 285 1 126 1 226 1 230 2 128 2 101 3 372 4 62 1 13 1 235 3 84 1 131 2 376 1 178 1 239 1 380 1 275 1 15 4 343 1 
244 1 40 1 166 1 363 2 183 1 248 1 23 3 346 1 250 1 334 1 303 2 223 1 285 1 53 1 226 1 230 1 128 1 205 1 34 1 150 1 233 1 153 1 84 1 340 1 131 1 376 1 240 1 379 1 161 1 
361 3 166 2 363 10 248 3 23 19 346 3 334 2 303 4 337 1 53 3 200 1 201 2 173 1 144 2 231 1 128 2 146 1 174 1 205 6 310 1 60 1 61 1 154 1 84 9 340 3 131 2 238 1 240 3 379 3 276 2 
163 1 361 2 91 1 166 3 363 12 248 2 346 2 23 26 334 3 303 6 337 1 53 3 200 2 201 1 229 1 173 2 144 2 128 3 205 4 174 1 310 2 262 1 60 2 104 1 61 1 154 1 84 14 340 2 131 3 319 1 240 3 379 3 276 4 162 2 
0 1 163 1 164 1 91 1 361 4 166 3 363 21 277 1 248 4 23 41 346 5 117 1 334 3 303 6 337 1 53 5 200 3 201 1 229 1 173 2 144 4 128 3 146 1 174 1 205 8 262 1 310 1 60 3 104 1 61 1 108 1 154 1 84 20 340 4 131 3 157 1 319 1 238 1 240 4 379 4 276 4 179 1 162 1 
0 1 163 1 164 1 91 1 361 3 166 4 363 18 277 1 248 4 23 38 346 4 117 1 334 4 303 8 337 1 53 5 200 3 201 1 229 1 173 2 144 4 128 4 146 1 174 1 205 7 262 1 310 1 60 3 104 1 61 1 108 1 154 1 84 20 340 3 131 4 157 1 319 1 238 1 240 4 379 4 276 4 179 1 162 2 
0 1 163 1 164 1 91 1 361 7 166 2 363 25 277 1 248 7 23 52 346 8 117 1 193 2 334 2 303 4 337 1 53 8 200 2 201 1 229 1 173 1 144 4 128 2 146 2 174 1 205 14 262 1 310 1 60 4 104 1 61 1 154 1 84 27 340 7 131 2 157 1 319 1 240 7 379 7 276 4 179 1 162 1 
77 1 66 1 368 1 216 1 247 1 338 1 345 1 265 1 115 1 103 1 105 2 318 1 220 1 29 1 160 1 273 1 274 1 76 1 
77 1 66 1 368 1 216 1 247 1 338 1 345 1 265 1 115 1 103 1 105 2 318 1 220 1 29 1 160 1 273 1 274 1 76 1 
77 1 66 1 368 1 216 1 247 1 338 1 345 1 265 1 115 1 103 1 105 2 318 1 220 1 29 1 160 1 273 1 274 1 76 1 
182 1 371 1 270 1 
182 1 371 1 270 1 
49 1 369 1 
49 1 369 1 371 1 
80 1 206 1 
17 1 40 2 244 2 216 1 247 1 345 1 167 1 299 1 120 1 220 1 29 1 75 1 285 2 226 2 368 1 80 1 148 1 206 1 103 1 105 1 82 1 356 1 318 1 376 2 160 1 274 1 137 1 
66 1 190 1 220 1 345 1 29 1 160 1 265 1 103 1 274 1 76 1 
356 1 299 1 
331 1 362 1 33 1 220 1 345 1 29 1 160 1 103 1 274 1 
182 1 270 1 
49 1 369 1 371 1 
40 2 244 2 166 1 246 1 298 1 363 1 183 1 46 1 249 2 23 2 348 2 168 1 97 1 47 1 334 1 194 1 303 2 171 1 223 1 98 1 197 1 226 2 230 1 128 1 101 2 289 1 372 2 62 1 235 2 84 1 131 1 178 2 133 1 15 2 214 1 343 1 
227 2 202 1 101 1 311 1 11 1 348 2 372 2 130 1 267 1 47 1 341 1 254 1 109 1 293 1 50 1 212 1 239 1 15 2 321 1 
227 2 202 1 101 1 311 1 11 1 348 1 372 1 130 1 267 1 47 1 341 1 254 1 50 1 212 1 15 1 135 1 321 1 
112 1 140 1 101 1 249 1 348 1 372 1 235 1 47 1 109 1 50 1 241 1 275 1 15 1 111 1 
227 2 202 1 101 1 311 1 11 1 348 1 372 1 130 1 267 1 47 1 341 1 254 1 109 1 293 1 50 1 212 1 15 1 321 1 
123 1 
116 1 141 1 375 1 93 1 145 1 273 1 136 1 
216 1 93 1 45 1 22 1 185 1 365 1 332 1 116 1 142 1 195 1 351 1 368 1 79 1 203 1 375 1 273 2 243 1 
92 2 93 8 43 6 140 1 95 2 45 4 249 3 346 2 348 3 141 1 47 3 142 4 195 12 351 5 53 2 203 4 101 4 107 2 210 2 273 8 15 3 67 2 216 5 21 1 69 2 113 2 71 2 72 6 24 2 365 4 168 3 116 9 118 2 26 3 124 1 336 2 367 1 284 1 368 5 79 6 339 2 372 3 235 10 340 2 375 2 236 1 237 2 38 1 177 1 239 1 240 2 379 2 136 1 243 3 
163 1 91 1 216 1 93 5 113 1 43 5 45 2 71 2 72 5 346 2 365 2 116 8 118 1 142 2 221 1 195 6 54 1 351 1 53 2 368 1 200 1 79 3 144 1 203 2 262 1 60 1 104 1 340 2 375 2 38 1 319 1 240 2 379 2 273 5 243 1 
323 1 165 1 40 1 164 1 244 1 216 1 93 2 277 1 45 1 71 2 346 1 365 1 116 2 118 1 117 1 142 1 285 1 53 2 226 1 368 1 57 1 203 1 308 1 288 1 150 1 266 1 376 1 378 1 
93 1 203 1 45 1 365 1 116 1 141 1 375 1 142 1 273 1 136 1 
53 2 79 5 93 5 43 5 339 1 71 2 72 5 346 2 116 5 118 1 340 2 240 2 379 2 195 10 273 5 
351 1 368 1 216 1 375 1 273 1 243 1 
112 1 216 3 93 2 113 2 140 2 45 2 249 1 184 1 348 4 365 2 116 2 47 1 142 1 124 2 351 4 56 1 368 3 7 1 100 1 203 2 101 1 372 4 235 1 317 1 236 1 38 2 275 1 15 4 243 2 
138 1 40 3 244 2 166 1 363 1 140 1 183 1 23 1 301 1 249 1 348 1 168 1 47 1 194 1 334 1 303 2 285 2 226 3 8 1 230 1 128 1 81 1 101 1 150 2 266 1 372 1 235 1 131 1 376 2 110 1 15 1 137 1 
79 2 93 2 43 2 113 1 203 1 45 1 72 2 365 1 116 1 375 2 142 1 38 1 195 4 273 4 179 1 
29 1 70 1 103 1 
29 1 70 1 103 1 
121 1 29 1 103 1 
121 1 29 1 103 1 
121 1 29 1 103 1 
29 1 103 1 
160 1 274 1 
29 1 70 1 103 1 
64 1 80 1 29 1 103 1 76 1 
53 1 0 1 361 1 164 1 166 2 363 4 128 2 277 1 205 3 346 1 23 8 248 2 84 4 117 1 131 2 334 2 157 1 303 4 179 1 162 1 
53 1 0 1 84 3 164 1 117 1 363 3 157 1 145 1 277 1 205 2 346 1 23 6 248 2 179 1 
53 1 361 1 166 1 363 2 128 1 205 2 248 1 346 1 23 4 84 2 340 1 131 1 334 1 303 2 240 1 379 1 257 1 
53 1 200 1 361 1 144 2 363 4 146 1 205 2 248 1 346 1 23 7 60 1 84 3 340 1 240 1 379 1 
0 1 295 1 164 2 361 4 166 2 363 12 277 1 23 23 346 3 248 5 117 2 193 1 334 2 303 4 256 1 53 3 144 2 146 1 128 2 205 9 60 2 84 11 340 2 131 2 157 1 379 2 240 2 179 1 162 2 
363 1 144 1 23 1 
84 1 23 1 60 1 
53 1 361 1 166 1 363 3 128 1 205 3 339 1 23 6 346 1 248 2 84 3 340 1 131 1 334 1 303 2 240 1 379 1 257 1 
163 1 361 1 91 1 166 1 363 6 23 12 346 2 248 1 334 1 303 2 53 2 200 1 144 1 128 1 174 1 205 2 262 1 60 1 104 1 84 6 340 2 131 1 319 1 240 2 379 2 
53 1 361 1 164 1 84 3 117 1 363 3 205 2 277 1 248 1 346 1 23 6 
0 1 361 1 164 1 166 1 363 2 128 1 205 2 248 1 23 3 84 1 117 1 131 1 334 1 157 1 303 2 256 1 162 1 
53 2 323 1 164 2 361 2 166 1 363 5 128 1 174 1 205 5 277 1 248 3 23 10 346 2 84 5 117 2 131 1 334 1 303 2 
53 1 361 1 166 1 128 1 174 1 205 1 23 2 84 2 131 1 334 1 303 2 379 1 
53 1 361 1 166 1 363 2 128 1 205 2 174 1 248 1 346 1 23 4 84 2 340 1 131 1 334 1 303 2 240 1 379 1 
164 1 361 1 166 3 363 2 128 3 174 1 205 2 23 3 248 1 84 1 117 1 131 3 334 3 303 6 256 1 238 1 162 1 
0 1 181 1 90 1 164 3 361 5 166 5 363 18 114 1 277 2 23 34 346 5 248 7 117 3 334 5 303 10 256 1 257 1 53 5 200 1 144 4 128 5 146 1 174 1 205 12 60 3 84 16 340 3 131 5 157 1 238 1 240 3 379 3 179 1 162 2 
0 1 164 1 166 1 363 4 277 1 346 1 23 8 248 2 117 1 334 1 303 2 53 1 200 1 144 1 128 1 174 1 205 2 60 1 84 4 131 1 157 1 319 1 179 1 
0 1 164 1 361 1 166 2 363 5 277 1 346 1 248 2 23 11 117 1 334 2 303 4 257 1 53 2 200 1 144 2 128 2 146 1 174 1 205 3 60 1 84 6 131 2 157 1 319 1 240 1 379 1 179 1 
0 1 163 1 164 1 361 1 91 1 166 3 363 10 277 1 23 19 346 3 248 3 117 1 334 3 303 6 257 1 53 3 200 1 144 1 128 3 174 1 205 4 262 1 60 1 104 1 84 9 340 2 131 3 157 1 319 1 240 2 379 2 179 1 162 1 
0 1 163 1 164 1 361 2 91 1 166 3 363 7 277 1 23 17 346 2 248 3 117 1 334 3 303 6 257 1 53 3 200 1 144 1 128 3 174 1 205 5 262 1 60 1 104 1 84 10 340 1 131 3 157 1 319 1 240 2 379 2 179 1 162 1 
0 1 164 1 166 1 363 4 277 1 346 1 23 8 248 2 117 1 334 1 303 2 53 1 200 1 144 1 128 1 174 1 205 2 60 1 84 4 131 1 157 1 319 1 179 1 
163 1 361 1 91 1 166 1 363 6 23 12 346 2 248 1 334 1 303 2 53 2 200 1 144 1 128 1 174 1 205 2 262 1 60 1 104 1 84 6 340 2 131 1 319 1 240 2 379 2 
0 1 163 1 164 1 361 2 91 1 166 4 363 8 277 1 23 18 346 2 248 3 117 1 334 4 303 8 257 1 53 3 200 1 144 1 128 4 174 1 205 5 262 1 60 1 104 1 84 10 340 1 131 4 157 1 319 1 240 2 379 2 179 1 162 2 
163 1 361 3 91 1 166 4 363 7 23 16 346 2 248 3 334 4 303 8 53 3 200 1 144 1 128 4 174 1 205 6 262 1 60 1 104 1 84 9 340 2 131 4 319 1 238 1 240 3 379 3 162 2 
0 2 53 1 164 3 361 3 363 4 205 6 277 1 346 1 23 7 248 3 84 3 117 3 157 1 
0 1 163 1 164 1 361 1 91 1 166 4 363 8 277 1 23 18 346 2 248 3 117 1 334 4 303 8 53 3 200 1 144 1 128 4 174 1 205 4 262 1 60 1 104 1 84 10 340 1 131 4 157 1 319 1 238 1 240 2 379 2 179 1 162 2 
226 1 40 1 244 1 324 1 27 1 218 1 137 1 
226 1 244 1 40 1 324 1 143 1 204 1 44 1 218 1 355 1 27 1 88 1 137 1 
112 1 235 1 47 1 145 1 140 1 101 1 249 1 275 1 372 1 15 1 348 1 
226 2 244 1 40 2 8 1 81 1 140 1 101 1 249 1 348 1 372 1 168 1 235 1 47 1 376 1 380 1 285 1 15 1 137 1 
226 2 165 1 244 2 40 2 8 1 95 1 81 1 101 1 302 1 73 1 249 2 348 1 372 1 168 2 235 3 47 1 210 1 376 1 124 1 380 1 285 2 15 1 137 1 
40 2 244 2 165 1 95 1 249 2 73 1 302 1 348 2 168 2 25 1 47 1 124 1 32 1 285 2 226 2 81 1 101 1 372 2 235 3 210 1 376 1 380 1 15 2 137 1 
216 2 69 1 95 1 140 1 249 1 348 3 96 1 168 1 25 1 47 1 26 1 124 1 351 1 368 2 101 1 372 3 107 1 235 4 36 1 375 1 210 1 273 1 15 3 
351 1 368 2 216 2 69 1 140 1 95 1 101 1 249 1 348 3 372 3 107 1 168 1 235 4 25 1 26 1 47 1 375 1 237 1 210 1 124 1 273 1 15 3 
47 1 269 1 101 1 372 1 15 1 348 1 
126 1 298 1 140 2 101 4 249 3 348 3 372 3 168 2 235 3 47 2 122 1 255 1 171 1 239 1 367 1 197 1 98 2 15 3 343 2 
138 1 0 1 244 1 40 2 183 2 301 1 249 1 248 2 346 1 250 1 348 1 47 1 303 4 53 1 8 1 306 1 205 2 101 1 153 1 157 1 15 1 164 1 166 2 363 3 277 1 23 6 168 1 117 1 334 2 223 1 285 1 226 2 230 2 128 2 81 1 372 1 233 1 374 1 235 1 84 3 131 2 376 1 239 1 133 1 380 1 179 1 137 2 
67 1 216 3 92 1 93 1 69 1 140 1 45 2 348 1 365 2 116 1 141 1 26 1 142 2 336 1 351 2 368 3 203 2 372 1 82 1 107 1 235 2 375 1 236 1 237 1 273 1 136 1 15 1 243 1 
107 1 168 1 235 2 47 1 21 1 269 1 101 2 239 1 249 1 367 1 372 2 15 2 348 2 
112 1 140 1 101 1 249 1 348 4 372 4 235 1 281 1 25 1 47 1 239 1 275 1 15 4 
101 2 249 1 348 2 372 2 373 1 168 1 235 1 47 1 124 1 171 1 98 1 15 2 197 1 343 1 
227 1 47 1 341 1 140 1 101 1 212 1 372 1 15 1 348 1 130 1 
298 1 101 2 249 2 348 2 372 2 168 1 97 1 235 2 47 1 254 1 239 1 171 1 98 1 15 2 197 1 343 1 
126 1 298 1 140 1 101 2 249 2 348 2 372 2 168 1 235 2 47 1 239 1 171 1 98 1 15 2 197 1 343 1 
298 1 140 1 101 2 249 2 348 2 372 2 168 1 235 2 47 1 86 1 239 1 171 1 98 1 15 2 197 1 343 1 
226 2 244 1 40 2 81 1 140 1 101 1 249 1 348 1 372 1 168 1 235 1 47 1 376 1 32 1 380 1 285 1 15 1 137 1 
101 2 249 1 348 1 372 1 168 1 235 1 47 1 124 1 255 1 367 1 98 1 15 1 343 1 
226 1 55 1 40 1 244 1 253 1 85 1 46 1 289 1 214 1 
35 1 253 1 260 1 
2 1 55 1 253 1 85 1 137 1 
368 2 55 2 165 1 216 2 260 1 69 1 302 1 73 1 82 1 349 1 35 1 2 2 253 1 375 1 85 2 170 1 273 1 215 1 137 1 
145 1 294 1 320 1 12 1 
199 1 78 1 63 1 309 1 294 1 320 1 12 1 
31 1 309 1 89 1 
199 1 78 1 309 3 280 1 313 2 12 1 316 1 219 1 282 1 63 3 294 1 320 1 
199 1 78 1 209 1 63 2 353 1 309 2 294 1 320 1 12 1 
199 1 227 1 78 1 219 1 87 1 63 1 309 1 212 1 294 1 11 1 65 1 
199 1 78 1 219 1 63 1 309 1 294 1 320 1 
199 1 78 1 219 1 63 1 309 1 320 2 12 1 
199 2 78 2 149 1 309 2 219 1 63 2 357 1 294 1 320 1 359 1 
199 1 78 1 309 3 279 1 347 1 12 1 219 1 209 2 63 3 169 1 294 2 320 1 65 1 
199 1 227 2 78 1 309 2 311 1 11 1 12 1 219 1 209 1 341 1 63 2 4 1 294 1 212 1 320 1 
199 2 78 2 309 4 353 1 347 1 12 1 219 1 209 2 63 4 3 1 294 2 320 1 65 1 
199 1 78 1 219 1 63 1 309 1 294 1 320 1 12 1 
199 1 78 1 309 4 280 1 347 1 313 1 12 2 316 1 209 2 63 4 294 3 134 1 320 2 65 1 
198 1 199 1 78 1 219 1 287 1 209 1 63 2 261 1 309 2 294 1 320 1 12 1 
316 2 199 1 78 1 219 1 63 3 290 1 309 3 294 1 280 1 320 1 12 1 313 2 
156 2 30 1 232 1 294 2 
199 1 78 1 245 1 219 1 63 1 309 1 
199 1 78 1 219 1 209 1 169 1 63 2 309 2 294 1 320 1 12 1 
291 1 
199 1 78 1 219 1 63 1 309 1 294 1 320 1 12 1 
199 1 78 1 309 3 313 1 12 1 219 1 209 1 63 3 169 1 294 1 320 1 
294 1 134 1 65 1 347 1 
294 1 320 1 

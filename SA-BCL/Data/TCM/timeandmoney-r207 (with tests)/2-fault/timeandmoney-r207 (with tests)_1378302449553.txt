#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
361 1 167 1 38 1 99 1 246 1 363 9 362 1 196 2 45 2 152 2 2 2 154 1 203 1 303 3 254 9 133 1 26 4 350 1 306 6 351 2 76 5 372 1 81 1 10 1 35 1 89 2 380 2 14 1 
361 1 167 1 38 1 99 1 246 1 363 9 362 1 196 2 45 2 152 2 2 2 154 1 203 1 303 3 254 9 133 1 26 4 350 1 306 6 351 2 76 5 372 1 81 1 10 1 35 1 89 2 380 2 14 1 
361 1 167 1 38 1 99 1 246 1 363 10 362 1 196 2 45 2 152 2 2 2 154 1 203 1 303 4 254 10 133 1 26 5 350 1 306 7 351 2 76 6 372 1 81 1 10 1 35 1 89 2 380 2 14 1 
361 1 167 1 38 1 99 1 246 1 363 7 362 1 196 2 45 2 152 2 2 1 154 1 203 1 303 2 254 7 133 1 26 3 350 1 306 4 351 2 76 4 372 1 81 1 35 1 89 2 380 2 14 1 
351 1 361 1 167 1 76 3 99 1 363 4 10 1 196 1 152 1 2 2 154 1 303 1 254 4 89 1 380 1 26 2 350 1 306 3 
351 1 361 1 76 1 28 1 362 1 363 2 196 1 45 1 188 1 154 1 254 2 89 1 369 1 380 1 133 1 350 1 
351 2 361 1 76 2 81 1 363 3 196 2 45 1 154 1 303 1 254 3 26 1 350 1 306 1 
361 1 167 1 38 1 99 1 363 9 196 2 45 1 152 1 2 2 154 1 303 3 254 9 26 4 306 7 350 1 351 2 76 5 81 1 10 1 231 1 317 1 89 1 380 1 14 1 
361 1 167 1 38 1 99 1 363 9 196 2 45 1 152 1 2 2 154 1 303 3 254 9 26 4 306 7 350 1 351 2 76 5 81 1 10 1 231 1 317 1 89 1 380 1 14 1 
180 1 220 1 138 1 
180 1 148 2 349 1 
128 2 100 2 47 1 160 2 315 1 49 2 118 2 373 2 
323 1 192 1 93 1 217 1 296 1 100 2 195 1 326 1 147 2 66 1 197 2 68 2 252 1 128 3 278 1 47 1 49 2 347 1 175 1 305 1 307 1 27 1 51 1 177 1 258 1 109 1 285 1 160 2 315 1 373 2 59 2 33 1 357 2 115 1 118 3 119 1 92 1 
271 1 128 1 100 1 47 1 160 1 40 1 49 1 118 1 114 1 373 1 
63 1 180 1 220 1 160 1 40 1 161 1 344 1 332 1 141 1 128 1 365 1 12 1 142 1 118 1 
63 2 180 1 100 1 220 1 160 1 40 1 373 1 344 1 332 2 128 1 365 1 12 1 49 1 142 1 118 1 
282 1 63 1 168 1 19 1 332 1 
172 1 63 2 168 1 180 1 220 1 19 1 322 1 332 2 
63 1 19 1 332 1 
271 1 168 1 63 1 100 1 160 1 40 1 114 1 32 1 373 1 332 1 128 1 47 1 49 1 118 1 
180 1 
172 1 63 2 168 1 180 1 220 1 48 1 19 1 332 2 
213 2 168 2 63 5 180 1 169 1 220 1 113 1 261 1 150 1 19 2 332 5 44 2 103 1 172 1 262 1 225 1 116 1 226 2 310 1 
315 1 138 1 
100 1 160 2 315 2 20 1 373 1 128 2 46 1 49 1 118 2 
194 1 324 1 219 1 
192 1 217 1 218 1 147 1 66 1 195 1 315 1 197 1 59 1 128 1 347 1 118 1 175 1 305 1 92 1 307 1 
17 1 100 4 160 5 315 1 316 1 373 1 58 1 34 2 141 1 128 5 46 1 130 1 49 4 118 5 
271 1 128 2 100 2 160 2 40 1 49 2 378 1 118 2 
34 1 128 3 100 3 160 3 315 1 49 3 118 3 373 1 
271 1 128 1 100 1 160 1 40 1 49 1 118 1 
128 1 46 1 100 1 160 1 40 1 49 1 118 1 20 1 373 1 
323 1 192 1 63 1 217 1 17 1 296 1 100 3 195 1 66 1 326 1 147 1 40 1 197 1 344 1 68 1 251 1 128 4 365 1 46 1 278 1 47 1 49 3 347 1 175 1 305 1 307 1 27 1 51 1 177 1 160 3 315 1 373 2 332 1 59 1 33 1 357 2 115 1 34 1 234 1 12 1 142 1 118 4 119 1 92 1 
34 1 141 1 128 2 100 1 160 2 315 1 130 1 49 1 118 2 
63 1 180 1 17 1 100 3 160 3 40 1 373 1 332 1 344 1 34 2 251 1 365 1 128 3 46 1 12 1 49 3 205 1 142 1 118 3 
34 1 194 1 128 2 324 1 46 1 100 2 160 2 49 2 118 2 373 1 
192 1 217 1 147 1 66 1 195 1 315 1 197 1 59 1 128 1 347 1 118 1 175 1 305 1 92 1 307 1 
192 1 217 1 147 1 66 1 195 1 315 1 197 1 59 1 200 1 128 1 347 1 155 1 118 1 175 1 92 1 
338 1 323 1 194 2 324 2 296 1 219 2 125 1 42 1 68 4 274 1 276 1 27 1 51 1 177 1 6 1 312 1 75 1 179 1 285 2 331 1 357 2 33 2 119 1 37 1 
128 1 100 1 160 1 40 1 142 1 49 1 118 1 378 1 
192 1 217 1 194 1 17 1 100 1 195 1 66 1 160 1 147 1 197 1 59 1 34 1 128 2 49 1 347 1 118 2 175 1 305 1 92 1 307 1 
215 1 183 1 
215 1 183 1 
72 1 265 1 
72 1 265 1 
72 1 265 1 
215 1 264 1 183 1 
215 1 264 1 183 1 
215 1 183 1 174 1 
356 1 72 1 215 2 265 1 286 1 183 2 
215 1 264 1 183 1 
215 1 183 1 0 1 
215 1 183 1 0 1 
215 1 183 1 0 1 
215 1 63 1 216 1 325 1 100 2 299 1 301 1 105 1 128 2 346 1 49 2 174 1 136 1 183 1 160 2 315 1 355 1 260 1 332 1 83 1 36 1 118 2 91 1 242 1 
215 2 63 2 295 2 180 1 286 1 325 2 183 2 355 2 260 1 299 2 186 1 332 2 345 1 302 1 105 2 328 1 370 1 242 3 228 1 
152 1 89 1 380 1 
188 1 89 1 380 1 
158 1 214 1 152 2 162 1 188 1 380 3 
158 1 123 1 152 1 162 1 188 1 380 2 
158 2 152 1 162 1 188 1 380 2 
213 1 63 5 168 4 16 1 220 1 125 1 148 3 19 1 44 1 101 1 172 1 274 1 276 1 226 1 346 1 304 1 71 2 349 1 310 3 136 1 52 1 53 1 180 2 110 1 331 1 78 2 332 5 83 1 84 2 262 1 86 1 116 2 
213 2 63 9 168 7 16 3 220 1 247 1 125 3 148 9 19 6 44 2 101 2 172 1 274 3 225 1 276 3 226 2 304 1 349 3 136 4 310 8 282 5 178 1 53 2 180 5 331 3 111 5 78 6 9 1 332 9 263 1 84 6 262 1 116 6 334 1 165 1 
213 1 168 2 63 3 16 1 220 1 125 1 148 4 44 1 101 1 274 1 225 1 276 1 226 1 71 1 349 2 310 3 136 1 52 1 53 1 180 3 110 1 331 1 78 2 332 3 84 2 116 2 
213 1 63 4 168 3 16 2 220 1 247 1 125 2 148 7 44 1 101 1 274 2 225 1 276 2 226 1 71 2 349 3 310 5 136 2 52 1 53 1 180 4 110 1 331 2 78 4 9 1 332 4 84 4 116 4 334 1 
138 1 132 1 92 1 
92 1 300 1 
371 1 
217 1 195 1 92 1 
339 1 92 1 
217 1 92 1 
217 1 195 1 230 1 268 1 132 2 92 3 
6 2 179 3 64 1 285 4 331 1 327 1 68 7 102 1 33 3 249 1 199 1 207 1 276 1 319 2 279 1 329 1 25 1 
6 2 179 3 64 1 285 4 331 1 327 1 68 7 102 1 33 3 249 1 199 1 207 1 276 1 319 2 279 1 329 1 25 1 
6 2 179 3 94 1 64 1 285 4 331 1 327 1 68 7 102 1 33 3 249 1 199 1 207 1 276 1 319 2 279 1 329 1 25 1 
64 1 16 3 296 1 125 3 342 1 327 1 102 1 68 31 249 1 199 2 275 1 274 3 126 1 276 4 279 2 329 2 25 5 27 1 51 1 177 1 6 5 179 10 313 1 285 16 331 4 82 4 357 2 33 15 207 2 318 1 319 3 60 1 120 1 143 3 
64 1 296 2 68 9 102 1 249 1 199 1 126 1 276 1 279 1 255 1 329 1 25 1 27 2 51 2 177 2 6 3 179 4 285 5 331 1 357 4 33 4 207 1 319 2 210 1 
192 1 214 1 361 1 65 1 147 1 66 1 363 2 196 1 197 1 45 1 152 1 154 1 367 1 254 2 348 1 107 1 306 1 350 1 351 1 76 1 353 1 57 1 59 1 140 1 188 1 89 1 240 1 380 2 211 1 294 1 
214 1 192 1 361 1 65 1 147 1 66 1 363 3 196 1 197 1 45 1 152 1 154 1 367 1 254 3 348 1 156 1 107 1 306 2 351 1 76 1 79 1 57 1 59 1 189 1 188 1 89 1 240 1 380 2 211 1 294 1 
214 1 192 1 361 1 76 1 65 1 66 1 147 1 79 1 363 2 57 1 197 1 59 1 45 1 152 1 188 1 154 1 254 2 367 1 348 1 89 1 156 1 380 2 211 1 306 2 294 1 
192 1 145 1 217 1 297 1 147 1 66 1 363 1 222 1 196 1 197 1 45 2 347 1 254 1 367 2 351 1 80 1 57 2 59 1 290 1 189 1 269 1 92 1 294 2 
192 1 214 1 65 1 147 1 66 1 363 1 196 1 197 1 45 1 152 1 367 1 254 1 348 1 156 1 107 1 350 1 351 1 57 1 59 1 140 1 188 1 89 1 240 1 380 2 211 1 294 1 
98 1 
243 2 192 1 145 1 244 1 245 2 147 2 39 1 40 1 148 2 197 2 44 1 344 1 201 1 347 2 349 2 310 2 311 1 53 1 54 1 160 1 8 2 161 1 59 2 262 1 116 2 12 1 118 1 213 1 270 2 63 5 217 1 220 1 66 1 19 6 172 3 128 1 365 1 226 1 135 1 180 2 80 1 287 1 288 4 139 1 332 5 232 1 141 1 235 1 237 1 142 1 88 2 90 2 191 2 292 1 92 1 
63 3 39 1 40 1 19 2 344 1 172 1 128 1 365 1 48 1 135 1 54 1 160 1 161 1 288 2 332 3 141 1 12 1 237 1 142 1 118 1 292 1 90 1 
63 3 220 1 39 1 40 1 19 1 344 1 172 1 128 1 365 1 48 1 135 1 54 1 180 1 160 1 161 1 288 3 332 3 141 1 12 1 237 1 142 1 118 1 88 1 292 1 
243 1 63 3 220 1 39 1 40 1 19 2 344 1 172 1 128 1 365 1 48 1 135 1 54 1 180 1 160 1 161 1 288 3 332 3 141 1 12 1 237 1 142 1 118 1 88 1 292 1 90 1 
243 4 245 2 40 1 39 1 298 1 343 1 344 1 44 1 198 1 48 1 349 2 310 1 54 1 160 1 161 1 8 2 262 1 116 1 12 1 118 1 213 1 63 5 122 1 270 2 220 5 19 7 172 3 365 1 128 1 226 1 135 1 180 5 184 1 287 1 288 6 332 5 139 1 141 1 142 1 237 1 88 4 90 4 292 1 191 2 
243 2 245 2 40 1 39 1 148 2 344 1 44 1 349 2 310 1 54 1 160 1 161 1 8 2 262 1 116 1 12 1 118 1 213 1 63 4 270 2 220 1 19 4 172 2 365 1 128 1 226 1 135 1 180 2 287 1 288 4 332 4 139 1 141 1 235 1 142 1 237 1 88 2 292 1 191 2 90 2 
243 2 213 1 270 2 63 4 122 1 245 2 220 1 39 1 40 1 19 4 198 1 44 1 344 1 172 2 128 1 365 1 226 1 349 2 310 1 135 1 54 1 180 1 160 1 184 1 8 2 287 1 161 1 288 4 139 1 332 4 141 1 262 1 116 1 12 1 237 1 142 1 88 2 118 1 90 2 191 2 292 1 
243 2 213 1 270 2 63 4 122 1 245 2 220 1 39 1 40 1 19 4 198 1 44 1 344 1 172 2 128 1 365 1 226 1 349 2 310 1 135 1 54 1 180 1 160 1 184 1 8 2 287 1 161 1 288 4 139 1 332 4 141 1 262 1 116 1 12 1 237 1 142 1 88 2 118 1 90 2 191 2 292 1 
243 2 213 1 63 4 124 2 245 2 220 1 39 1 40 1 148 2 19 4 198 1 44 1 344 1 172 2 127 1 128 1 365 1 226 1 310 1 135 1 73 1 54 1 180 1 160 1 112 2 8 2 161 1 288 4 139 1 332 4 141 1 262 1 116 1 12 1 237 1 142 1 88 2 118 1 90 2 292 1 241 1 
213 1 243 3 270 2 63 4 122 1 245 2 220 1 39 1 40 1 343 1 19 5 198 1 44 1 344 1 172 2 128 1 365 1 226 1 349 2 310 1 135 1 54 1 180 1 160 1 184 1 8 2 287 1 161 1 288 5 139 1 332 4 141 1 262 1 116 1 12 1 237 1 142 1 118 1 88 3 191 2 292 1 90 3 
213 1 243 3 270 2 63 4 122 1 245 2 220 1 39 1 40 1 343 1 19 5 198 1 44 1 344 1 172 2 128 1 365 1 226 1 349 2 310 1 135 1 54 1 180 1 160 1 184 1 8 2 287 1 161 1 288 5 139 1 332 4 141 1 262 1 116 1 12 1 237 1 142 1 118 1 88 3 191 2 292 1 90 3 
243 2 245 2 40 1 39 1 148 2 344 1 44 1 310 1 54 1 160 1 112 2 161 1 8 2 262 1 116 1 12 1 118 1 213 1 63 4 124 2 220 1 19 4 172 2 127 1 365 1 128 1 226 1 135 1 180 1 288 4 332 4 139 1 141 1 235 1 142 1 237 1 88 2 292 1 90 2 
323 1 64 1 194 1 324 1 296 1 219 1 102 1 68 6 249 1 199 1 276 1 279 1 27 1 51 1 177 1 6 2 179 2 285 3 331 1 315 2 138 1 357 2 33 3 319 1 119 1 37 1 
323 2 194 11 16 2 324 4 296 2 219 11 125 1 68 14 275 1 173 1 274 2 69 1 276 2 278 1 277 1 25 1 27 2 51 2 6 1 177 2 179 2 258 1 285 8 331 1 315 1 82 3 33 6 357 4 233 1 117 1 119 1 120 1 143 3 
192 1 323 1 217 1 218 1 324 1 17 1 18 1 296 1 100 1 195 1 66 1 147 1 197 1 68 2 104 1 128 2 278 1 347 1 49 1 175 1 305 1 307 1 27 1 51 1 177 1 74 1 258 1 285 1 160 1 315 1 59 1 34 1 357 2 33 1 117 1 118 2 119 1 92 1 
337 1 192 2 97 1 194 7 296 3 100 1 147 3 195 2 197 3 102 1 249 1 199 1 4 2 347 1 49 1 156 1 305 2 307 2 51 3 6 4 258 1 160 1 315 2 59 3 357 6 115 2 319 1 117 1 118 3 119 3 212 2 323 3 64 1 217 2 16 2 17 1 324 7 219 7 66 2 125 2 273 1 68 20 274 2 128 3 276 3 278 1 279 1 175 2 25 4 27 3 281 2 177 3 179 8 285 10 331 3 33 10 34 1 335 2 92 2 
192 2 323 2 93 2 145 1 95 1 217 2 296 2 100 1 66 2 147 8 197 8 68 2 128 1 366 1 278 1 49 1 347 2 156 1 27 2 51 2 177 2 7 1 258 1 353 1 285 1 160 1 80 1 185 1 289 1 59 7 34 1 357 4 33 1 374 1 118 1 119 2 92 3 360 1 37 1 
323 1 194 1 16 1 324 1 296 1 219 1 100 1 272 1 125 1 68 3 274 1 128 1 276 1 46 1 49 1 27 1 51 1 6 1 177 1 179 1 285 1 331 1 160 1 373 1 357 2 33 2 117 1 118 1 119 1 
323 1 177 1 179 1 194 1 324 1 285 2 296 1 219 1 42 1 68 2 357 2 274 1 276 1 25 1 119 1 37 1 51 1 27 1 
6 1 323 1 177 1 338 1 179 1 194 1 324 1 296 1 219 1 331 1 125 1 68 2 357 2 33 2 119 1 37 1 51 1 27 1 
323 1 16 1 194 2 324 2 296 1 219 2 125 1 68 4 274 1 276 1 25 1 27 1 51 1 177 1 6 1 179 2 285 2 331 1 357 2 33 2 119 1 37 1 
323 1 177 1 179 1 194 1 324 1 285 2 296 1 219 1 42 1 185 1 68 2 357 2 274 1 276 1 25 1 119 1 51 1 27 1 
6 1 323 1 177 1 338 1 179 1 194 1 324 1 296 1 219 1 331 1 125 1 185 1 68 2 357 2 33 2 119 1 51 1 27 1 
323 1 16 1 194 2 324 2 296 1 219 2 125 1 68 4 274 1 276 1 25 1 27 1 51 1 177 1 6 1 179 2 285 2 331 1 185 1 357 2 33 2 119 1 
323 1 16 1 194 2 324 2 296 1 219 2 125 1 68 4 274 1 276 1 25 1 27 1 51 1 177 1 6 1 179 2 285 2 331 1 357 2 33 2 119 1 
192 1 323 1 217 1 296 1 195 1 66 1 147 1 197 1 68 2 128 1 278 1 347 1 175 1 305 1 307 1 51 1 27 1 177 1 258 1 285 1 315 1 59 1 115 1 357 2 33 1 118 1 119 1 92 1 
192 1 323 1 217 1 296 1 195 1 66 1 147 1 197 1 68 2 200 1 70 1 128 1 278 1 155 1 347 1 175 1 51 1 27 1 177 1 258 1 285 1 315 1 59 1 357 2 33 1 118 1 119 1 92 1 
323 1 16 1 194 2 324 2 296 1 219 2 125 1 68 4 274 1 276 1 25 1 27 1 51 1 177 1 6 1 179 2 285 2 331 1 357 2 33 2 117 1 119 1 
192 1 323 1 217 1 194 2 16 1 324 2 296 1 219 2 195 1 66 1 147 1 125 1 197 1 68 4 274 1 128 1 276 1 4 1 25 1 175 1 305 1 307 1 51 1 27 1 6 1 177 1 179 2 353 1 285 2 331 1 59 1 33 2 115 1 357 2 118 1 119 1 92 1 
323 1 16 1 194 1 324 1 296 1 100 1 219 1 125 1 68 3 274 1 128 1 276 1 46 1 49 1 25 1 27 1 51 1 177 1 179 1 285 2 331 1 160 1 373 1 33 1 357 2 117 1 377 1 118 1 119 1 
16 2 146 1 296 2 221 1 125 2 43 1 68 13 275 1 274 2 276 2 25 1 134 1 27 2 51 2 6 2 177 2 257 1 179 3 285 6 29 1 331 2 82 2 357 4 33 7 87 1 164 1 210 1 120 1 143 1 
16 3 146 2 296 3 221 1 125 2 43 1 151 1 68 24 275 2 274 3 126 2 276 3 25 1 27 3 51 3 6 1 177 3 179 2 257 2 108 1 229 1 285 13 331 2 29 1 82 2 33 11 357 6 333 1 87 3 163 1 210 1 379 1 143 2 15 1 
16 2 146 1 296 2 221 1 125 2 43 1 151 1 68 13 275 1 274 2 276 2 25 1 134 1 27 2 51 2 6 1 177 2 257 1 179 2 285 6 29 1 331 2 82 2 357 4 33 7 87 1 210 1 120 1 143 1 
16 2 146 1 296 2 221 1 125 2 43 1 151 1 68 13 275 1 274 2 276 2 25 1 134 1 27 2 51 2 6 1 177 2 257 1 179 2 285 6 29 1 331 2 82 2 357 4 33 7 87 1 210 1 120 1 143 1 
64 1 16 7 146 1 296 2 221 1 125 7 43 1 151 1 102 1 68 50 249 1 199 1 275 2 274 7 69 2 126 1 276 8 279 1 25 7 27 2 51 2 6 6 177 2 257 1 179 13 108 1 229 1 285 26 29 1 331 8 82 4 357 4 33 24 333 1 319 1 163 1 87 3 210 1 379 1 120 2 143 4 15 1 
215 1 302 1 105 1 286 1 325 1 183 1 355 1 299 1 149 1 186 1 
174 1 36 1 
22 1 215 1 105 1 376 1 325 1 183 1 355 1 299 1 67 1 
264 1 3 1 
356 1 202 1 0 1 
63 1 215 1 295 1 180 1 286 1 325 1 183 1 355 1 260 1 299 1 186 1 332 1 345 1 302 1 105 1 370 1 242 2 228 1 
63 1 215 1 295 1 180 1 286 1 325 1 183 1 355 1 260 1 299 1 186 1 332 1 345 1 302 1 105 1 370 1 242 2 228 1 
63 1 215 1 295 1 180 1 286 1 325 1 183 1 355 1 260 1 299 1 186 1 332 1 345 1 302 1 105 1 370 1 242 2 228 1 
356 1 264 1 3 1 
356 1 264 1 3 1 
202 1 0 1 
356 1 202 1 0 1 
216 1 91 1 
295 1 63 1 168 1 215 1 216 1 325 1 100 2 299 1 301 1 128 2 105 1 346 1 174 1 49 2 228 1 136 1 183 1 160 2 315 1 31 1 355 1 332 1 83 1 36 1 118 2 91 1 242 1 
192 1 323 1 93 2 217 1 95 1 296 1 66 1 147 2 197 2 68 2 171 1 128 2 278 1 51 1 27 1 177 1 7 1 258 1 285 1 354 1 160 2 259 1 206 1 59 2 357 2 33 1 236 1 117 1 118 2 119 1 92 1 
214 1 192 1 353 1 66 1 147 2 197 2 59 2 24 1 152 1 188 1 280 1 367 1 348 1 89 1 156 1 5 1 240 1 380 2 211 1 
214 1 192 1 77 1 147 1 66 1 197 1 59 1 24 1 152 1 188 1 367 1 348 1 89 1 156 1 240 1 380 2 211 1 
192 1 145 1 217 1 297 1 66 1 147 1 80 1 197 1 59 1 209 1 347 1 280 1 367 1 92 1 
214 1 192 1 147 1 66 1 197 1 59 1 24 1 152 1 188 1 280 1 367 1 348 1 89 1 156 1 5 1 240 1 380 2 211 1 
309 1 
103 1 180 1 116 1 220 1 138 1 113 1 310 1 
213 1 270 1 63 1 220 1 148 1 19 1 44 1 172 1 226 1 349 1 310 1 180 2 287 1 332 1 262 1 116 1 191 1 
192 4 339 2 193 2 195 3 147 3 148 12 248 1 300 3 197 3 44 4 103 1 201 1 253 2 347 1 349 6 310 9 157 2 53 2 353 1 113 1 59 3 262 4 116 8 212 2 213 4 63 5 217 3 16 2 220 2 66 3 125 2 19 5 223 2 172 3 274 2 129 1 365 2 276 2 226 4 132 2 176 2 227 1 330 2 180 8 181 2 182 1 331 2 230 1 78 6 332 5 84 6 190 1 291 2 92 10 
213 2 63 1 16 2 220 2 148 6 125 2 19 1 44 2 172 1 275 1 274 2 201 1 276 2 226 2 131 1 349 3 310 8 157 1 53 1 108 1 180 5 229 1 331 2 78 5 82 1 332 1 84 5 262 2 116 5 163 1 13 1 291 2 379 1 143 1 15 1 
213 1 271 1 63 1 64 1 100 1 40 1 44 1 199 1 128 1 276 2 226 1 47 1 279 1 49 1 310 2 157 1 331 1 160 1 184 1 114 1 32 1 373 1 332 1 262 1 116 2 118 1 291 2 144 1 
213 1 180 1 220 1 113 1 44 1 103 1 262 1 226 1 116 1 310 1 
157 1 180 5 16 2 331 2 78 5 148 10 125 2 274 2 84 5 276 2 116 5 291 2 349 5 212 1 310 5 
172 1 63 1 180 1 220 1 19 1 332 1 
192 1 213 2 145 1 63 3 217 1 244 1 66 1 147 4 19 4 197 4 44 2 172 2 364 1 129 1 201 2 225 1 226 2 347 2 310 2 283 1 53 2 182 2 80 1 332 3 59 4 232 1 262 1 116 2 92 1 
192 1 323 1 217 1 296 1 100 2 147 1 326 1 66 1 195 1 197 1 68 1 128 3 278 1 47 1 347 1 49 2 175 1 305 1 307 1 27 1 51 1 177 1 160 2 315 1 373 2 59 1 33 1 357 2 115 1 118 3 119 1 92 1 
213 1 53 1 180 4 220 2 78 2 148 4 44 1 84 2 262 1 201 1 319 1 116 2 226 1 349 2 310 1 
355 1 368 1 299 1 
355 1 368 1 299 1 
302 1 85 1 355 1 299 1 91 1 
355 1 368 1 299 1 
355 1 50 1 299 1 
355 1 50 1 299 1 
355 1 50 1 299 1 
355 1 299 1 
215 1 183 1 
6 2 177 2 179 3 64 1 285 4 296 2 331 1 68 8 102 1 33 4 357 4 249 1 199 1 126 1 276 1 319 1 279 1 25 1 51 2 27 2 
6 2 179 2 64 1 285 3 331 1 138 1 102 1 68 6 33 3 249 1 199 1 276 1 319 1 279 1 
6 1 177 1 179 2 16 1 285 2 296 1 331 1 125 1 68 4 33 2 357 2 274 1 276 1 25 1 336 1 51 1 27 1 
6 1 179 2 16 1 285 3 331 1 125 1 82 2 68 7 33 4 275 1 274 1 276 1 25 1 120 1 143 1 
64 1 16 2 296 2 125 2 102 1 68 23 249 1 199 2 274 2 173 1 69 1 126 2 276 3 279 2 256 1 25 4 51 2 27 2 6 5 177 2 179 9 285 11 331 3 82 2 33 12 357 4 319 1 120 1 143 2 
68 1 33 1 82 1 
68 1 285 1 143 1 
177 1 6 2 179 3 16 1 285 3 296 1 331 1 125 1 68 6 357 2 33 3 274 1 276 1 25 1 336 1 212 1 27 1 51 1 
16 2 296 1 125 2 68 12 275 1 274 2 276 2 25 1 27 1 51 1 177 1 6 1 179 2 108 1 229 1 285 6 331 2 82 1 33 6 357 2 163 1 210 1 379 1 143 1 15 1 
6 1 179 2 64 1 285 3 331 1 68 6 33 3 199 1 276 1 279 1 25 1 
6 1 177 1 179 2 285 1 296 1 68 3 102 1 249 1 33 2 357 2 199 1 126 1 279 1 256 1 25 1 51 1 27 1 
177 1 6 3 179 5 64 1 285 5 296 1 331 2 68 10 357 2 33 5 199 2 276 2 279 2 210 1 25 2 27 1 51 1 144 1 
177 1 179 1 285 2 296 1 68 2 357 2 274 1 276 1 210 1 25 1 51 1 27 1 
6 1 177 1 179 2 16 1 285 2 296 1 331 1 125 1 68 4 33 2 357 2 274 1 276 1 210 1 25 1 51 1 27 1 
177 3 6 1 179 2 285 1 296 3 68 3 33 2 357 6 199 1 126 1 279 1 256 1 210 1 25 1 134 1 51 3 27 3 
64 2 16 3 296 5 125 3 342 1 102 1 68 34 249 1 199 3 275 1 274 3 126 2 276 5 279 3 256 1 25 5 134 1 27 5 51 5 177 5 6 7 179 12 285 16 331 5 82 4 33 18 357 10 318 1 319 1 60 1 210 1 120 1 336 1 143 3 
64 1 296 1 68 8 102 1 249 1 275 1 199 1 276 1 279 1 27 1 51 1 177 1 6 2 179 2 285 4 331 1 82 1 33 4 357 2 319 1 163 1 210 1 143 1 
64 1 16 1 296 2 102 1 68 11 249 1 199 1 275 1 274 1 276 2 279 1 25 1 27 2 51 2 6 2 177 2 179 3 285 6 331 1 82 2 33 5 357 4 319 1 163 1 210 1 120 1 336 1 143 1 
64 1 16 2 296 3 125 2 102 1 68 19 249 1 199 1 275 1 274 2 126 1 276 3 279 1 25 1 27 3 51 3 177 3 6 3 179 4 108 1 229 1 285 9 331 3 82 1 33 10 357 6 319 1 163 1 210 1 379 1 336 1 143 1 15 1 
64 1 16 2 296 3 125 1 102 1 68 17 249 1 199 1 275 1 274 2 126 1 276 3 279 1 25 2 27 3 51 3 177 3 6 3 179 5 108 1 229 1 285 10 331 2 82 1 33 7 357 6 319 1 163 1 210 1 379 1 336 1 143 1 15 1 
64 1 296 1 68 8 102 1 249 1 275 1 199 1 276 1 279 1 27 1 51 1 177 1 6 2 179 2 285 4 331 1 82 1 33 4 357 2 319 1 163 1 210 1 143 1 
16 2 296 1 125 2 68 12 275 1 274 2 276 2 25 1 27 1 51 1 177 1 6 1 179 2 108 1 229 1 285 6 331 2 82 1 33 6 357 2 163 1 210 1 379 1 143 1 15 1 
64 1 16 2 296 4 125 1 102 1 68 18 249 1 199 1 275 1 274 2 126 2 276 3 279 1 25 2 27 4 51 4 177 4 6 3 179 5 108 1 229 1 285 10 331 2 82 1 33 8 357 8 319 1 163 1 210 1 379 1 336 1 143 1 15 1 
16 3 296 4 125 2 68 16 275 1 274 3 126 2 276 3 25 3 134 1 27 4 51 4 177 4 6 3 179 6 108 1 229 1 285 9 331 2 82 1 33 7 357 8 163 1 210 1 379 1 143 1 15 1 
6 3 179 6 64 1 285 3 331 1 68 7 102 1 33 4 249 2 199 3 276 1 279 3 25 3 
64 1 16 2 296 4 125 1 102 1 68 18 249 1 199 1 275 1 274 2 126 2 276 3 279 1 25 1 134 1 27 4 51 4 177 4 6 3 179 4 108 1 229 1 285 10 331 2 82 1 33 8 357 8 319 1 163 1 210 1 379 1 143 1 15 1 
141 1 224 1 128 1 160 1 315 1 130 1 118 1 
137 1 159 1 160 1 315 1 187 1 141 1 224 1 128 1 375 1 266 1 130 1 118 1 
192 1 59 1 145 1 217 1 66 1 147 1 347 1 80 1 138 1 92 1 197 1 
192 1 217 1 100 1 195 1 160 1 147 1 66 1 315 1 197 1 59 1 34 1 128 2 49 1 347 1 118 2 175 1 92 1 307 1 
192 1 339 1 217 2 100 2 66 1 147 1 195 2 40 1 197 1 344 1 128 2 49 1 175 1 307 1 181 1 182 1 160 2 315 1 59 1 34 1 142 1 118 2 92 3 
192 1 339 1 217 2 100 2 66 1 147 2 195 2 40 1 197 2 344 1 200 1 128 2 49 1 175 1 181 1 182 1 160 2 315 1 59 2 34 1 142 1 118 2 293 1 92 3 
192 1 166 1 63 2 339 1 96 1 217 1 66 1 147 3 195 1 220 1 19 1 300 1 197 3 365 1 347 1 132 1 180 1 181 1 182 1 332 2 59 3 293 1 92 4 
192 1 339 1 63 2 180 1 217 1 181 1 182 1 220 1 195 1 147 3 66 1 19 1 197 3 300 1 332 2 59 3 365 1 253 1 347 1 132 1 293 1 92 4 
192 1 59 1 66 1 147 1 197 1 360 1 
192 3 93 1 95 1 217 2 353 1 314 1 147 7 230 1 195 1 66 2 289 1 197 7 21 1 59 6 374 1 366 1 347 2 239 1 156 1 92 3 360 1 
192 1 323 2 64 1 217 1 194 1 324 1 296 2 219 1 100 1 195 1 66 1 147 1 197 1 68 6 102 1 249 1 199 1 128 2 276 1 4 1 279 1 49 1 175 1 305 1 307 1 27 2 51 2 281 1 6 2 177 2 179 2 353 1 285 3 331 1 160 1 315 2 59 1 33 3 34 1 357 4 115 1 236 1 319 1 117 1 118 2 119 2 92 1 
213 2 63 3 168 1 220 1 147 1 19 2 197 1 300 1 44 2 223 1 103 1 172 1 129 1 365 1 226 2 253 1 347 1 132 1 176 1 310 1 180 1 330 1 113 1 332 3 59 1 262 2 116 1 92 2 
192 2 217 1 353 1 147 2 230 1 195 1 66 1 197 2 59 2 132 1 227 1 92 2 360 1 
192 1 145 1 217 1 353 1 30 1 147 4 66 1 80 1 197 4 59 4 347 1 293 1 92 1 
192 2 59 2 217 1 314 1 182 1 66 1 195 1 267 1 147 2 92 1 121 1 197 2 21 1 273 1 
192 1 59 1 188 1 66 1 147 1 347 1 348 1 89 1 380 1 197 1 
192 1 95 1 217 1 353 1 147 2 66 1 197 2 206 1 59 2 156 1 92 1 
192 2 145 1 95 1 217 2 353 1 182 1 30 1 147 5 66 2 80 1 197 5 289 1 59 4 366 1 347 1 92 3 
192 2 145 1 95 1 217 2 353 1 182 1 30 1 147 5 66 2 80 1 197 5 59 4 1 1 366 1 347 1 92 3 
192 1 217 1 100 1 195 1 160 1 147 1 66 1 315 1 197 1 59 1 34 1 200 1 128 2 49 1 347 1 118 2 175 1 92 1 
192 2 59 1 217 1 314 1 182 1 66 1 195 1 230 1 147 1 239 1 92 1 197 1 21 1 
171 1 55 1 128 1 354 1 208 1 160 1 259 1 118 1 341 1 
204 1 341 1 62 1 
55 1 208 1 315 1 170 1 341 1 
168 1 63 2 180 1 55 2 220 1 315 1 40 1 170 2 341 1 41 1 344 1 332 2 251 1 365 1 204 1 208 2 12 1 142 1 62 1 
361 1 76 1 154 1 138 1 
351 1 361 1 76 1 154 1 254 1 363 1 196 1 
45 1 254 1 57 1 
351 1 361 1 76 1 56 1 340 1 363 3 362 2 196 1 154 1 254 3 61 1 350 1 
351 1 361 1 76 1 2 1 154 1 254 2 363 2 196 1 306 1 
351 1 76 1 152 1 99 1 254 1 89 1 363 1 380 1 26 1 196 1 350 1 
351 1 76 1 154 1 254 1 363 1 196 1 350 1 
351 1 361 1 154 2 254 1 363 1 196 1 350 1 
351 2 76 1 363 2 196 2 23 1 154 1 11 1 254 2 106 1 350 1 
351 1 361 1 76 2 38 1 154 1 303 1 254 3 363 3 26 1 14 1 196 1 306 2 350 1 
214 1 351 1 361 1 76 1 152 1 153 1 188 1 154 1 254 2 89 1 363 2 380 2 196 1 306 1 350 1 
351 2 361 1 76 2 2 1 154 1 303 1 254 4 363 4 26 1 10 1 196 2 306 2 350 1 
351 1 361 1 76 1 154 1 254 1 363 1 196 1 350 1 
351 1 361 2 76 3 340 1 362 1 363 4 196 1 250 1 154 2 303 1 61 1 254 4 26 1 306 2 
351 1 361 1 231 1 352 1 76 1 154 1 254 2 363 2 196 1 306 1 308 1 350 1 
351 1 361 1 76 1 340 1 363 3 362 2 196 1 154 1 254 3 61 2 238 1 350 1 
76 2 284 1 359 1 320 2 
351 1 254 1 363 1 321 1 196 1 350 1 
351 1 361 1 76 1 38 1 154 1 254 2 363 2 196 1 306 1 350 1 
358 1 
351 1 361 1 76 1 154 1 254 1 363 1 196 1 350 1 
351 1 361 1 76 1 38 1 363 3 362 1 196 1 154 1 254 3 306 1 350 1 
250 1 76 1 303 1 26 1 
76 1 154 1 

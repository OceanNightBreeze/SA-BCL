#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (136,315,317) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (136,315,317) 337 106 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (136,315,317) 337 312 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (136,315,317) (136,315,317) 149 358 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 122 76 (10,156) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 122 76 (75,134) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (136,315,317) 337 220 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
102 9 60 4 278 2 323 2 347 2 350 1 187 1 131 1 5 6 65 1 189 1 132 1 68 2 11 1 12 2 297 1 165 3 232 5 115 1 14 2 50 1 357 1 18 1 219 1 319 2 179 9 151 1 180 1 
102 9 60 4 278 2 347 2 323 2 350 1 187 1 131 1 5 6 65 1 189 1 132 1 68 2 11 1 12 2 297 1 165 3 232 5 115 1 14 2 50 1 357 1 18 1 219 1 319 2 179 9 151 1 180 1 
102 10 60 5 278 2 347 2 323 2 350 1 187 1 131 1 5 7 65 1 189 1 132 1 68 2 11 1 12 2 297 1 165 4 232 6 115 1 14 2 50 1 357 1 18 1 219 1 319 2 179 10 151 1 180 1 
102 7 60 3 278 1 347 2 323 2 350 1 187 1 131 1 5 4 189 1 132 1 68 2 11 1 12 2 297 1 165 2 232 4 115 1 14 2 50 1 357 1 18 1 219 1 319 2 179 7 151 1 180 1 
14 1 102 4 60 2 357 1 278 2 323 1 347 1 18 1 350 1 187 1 5 3 65 1 189 1 319 1 12 1 179 4 165 1 232 3 
102 2 14 1 50 1 357 1 235 1 141 1 323 1 187 1 189 1 319 1 24 1 68 1 151 1 12 1 179 2 232 1 
102 3 60 1 357 1 323 2 187 1 5 1 189 1 68 1 12 2 179 3 180 1 165 1 232 2 
14 1 102 9 60 4 357 1 278 2 69 1 92 1 347 1 323 2 18 1 350 1 187 1 5 7 65 1 189 1 132 1 319 1 68 1 11 1 12 2 179 9 180 1 165 3 232 5 
14 1 102 9 60 4 357 1 278 2 69 1 92 1 347 1 323 2 18 1 350 1 187 1 5 7 65 1 189 1 132 1 319 1 68 1 11 1 12 2 179 9 180 1 165 3 232 5 
249 1 171 1 212 1 
255 2 248 1 212 1 
30 1 47 2 325 2 142 2 7 2 78 1 193 2 137 2 
30 1 342 1 344 2 308 1 325 2 231 2 7 2 111 1 327 1 190 1 10 1 191 1 193 2 354 1 137 3 164 2 13 1 90 1 47 3 355 1 117 1 170 1 236 1 15 1 142 2 19 1 360 1 127 1 274 1 73 2 239 1 76 1 78 1 244 1 257 2 128 1 154 1 
47 1 325 1 160 1 142 1 7 1 78 1 88 1 193 1 178 1 137 1 
47 1 325 1 317 1 315 1 175 1 88 1 281 1 137 1 85 1 
47 1 325 1 317 1 175 1 142 1 7 1 88 1 193 1 281 1 137 1 
119 1 362 1 129 1 270 1 136 1 
249 1 362 2 34 1 247 1 129 1 270 1 212 1 136 2 
362 1 270 1 136 1 
47 1 82 1 142 1 129 1 325 1 160 1 362 1 7 1 78 1 88 1 193 1 178 1 136 1 137 1 
212 1 
249 1 172 1 362 2 34 1 129 1 270 1 212 1 136 2 
33 1 34 1 129 2 225 1 270 2 64 2 336 2 173 1 272 1 74 1 290 2 249 1 86 1 362 5 303 1 326 1 212 1 136 5 181 1 
47 2 355 1 344 1 236 1 15 1 142 1 360 1 325 1 76 1 145 1 7 1 176 1 10 1 191 1 354 1 192 1 257 1 128 1 137 2 164 1 
30 1 171 1 
59 1 47 2 0 1 30 2 142 1 325 2 7 1 193 1 137 2 
176 1 83 1 298 1 
30 1 47 1 355 1 344 1 236 1 15 1 360 1 76 1 10 1 223 1 257 1 354 1 191 1 128 1 137 1 164 1 
30 1 0 1 47 5 325 5 277 1 221 1 145 1 142 4 7 4 268 1 193 1 192 2 137 5 85 1 
47 2 325 2 160 1 142 2 7 2 88 1 150 1 137 2 
30 1 47 3 325 3 142 3 7 3 193 1 192 1 137 3 
47 1 325 1 160 1 142 1 7 1 88 1 137 1 
59 1 47 1 325 1 0 1 142 1 7 1 88 1 193 1 137 1 
47 2 0 1 106 1 142 2 281 1 325 2 317 1 337 1 175 1 145 1 7 2 88 1 192 1 193 1 137 2 
30 1 47 2 325 2 142 1 7 1 268 1 192 1 137 2 85 1 
47 1 325 1 317 1 312 1 337 1 175 1 145 1 142 1 7 1 88 1 192 1 281 1 137 1 
0 1 47 2 142 2 325 2 7 2 176 1 192 1 193 1 137 2 298 1 
30 1 47 1 355 1 344 1 236 1 15 1 360 1 76 1 10 1 257 1 354 1 191 1 128 1 137 1 164 1 
30 1 47 1 344 1 236 1 15 1 360 1 76 1 134 1 257 1 354 1 191 1 128 1 137 1 164 1 182 1 
342 2 224 1 83 2 227 1 67 1 231 4 190 1 328 1 233 1 13 1 298 2 117 1 71 1 97 1 127 2 274 1 73 2 21 1 239 1 202 1 203 1 57 1 176 2 154 1 
47 1 325 1 142 1 7 1 88 1 150 1 281 1 137 1 
339 1 4 1 
339 1 4 1 
126 1 322 1 
126 1 322 1 
126 1 322 1 
339 1 4 1 280 1 
339 1 4 1 280 1 
339 1 4 1 70 1 
126 1 322 1 63 1 339 2 4 2 101 1 
339 1 4 1 280 1 
339 1 4 1 45 1 
339 1 4 1 45 1 
339 1 4 1 45 1 
30 1 2 1 4 1 38 1 285 1 263 1 325 2 289 1 7 2 163 1 136 1 137 2 166 1 47 2 194 1 196 1 142 2 313 1 70 1 99 1 318 1 362 1 339 1 206 1 
196 2 4 2 314 1 38 2 282 1 228 1 263 2 353 1 289 2 240 1 318 1 99 3 41 2 362 2 339 2 25 1 101 1 212 1 136 2 
14 1 319 1 347 1 
14 1 235 1 319 1 
316 1 306 1 235 1 319 3 347 2 262 1 
316 1 306 1 235 1 319 2 347 1 213 1 
316 1 306 2 235 1 319 2 347 1 
2 1 33 2 34 1 129 4 279 1 248 1 226 1 227 1 64 1 285 1 290 1 291 1 249 1 67 1 89 1 113 2 328 1 212 2 136 5 138 2 140 1 313 1 269 1 270 1 336 1 97 1 272 3 255 3 201 2 362 5 155 1 181 1 
33 6 185 1 129 7 34 1 279 2 84 1 248 3 226 1 227 3 309 5 64 2 290 2 211 1 249 1 67 3 326 1 113 6 328 3 212 5 136 9 356 1 140 2 217 1 119 5 313 4 269 3 270 6 336 2 97 3 272 8 255 9 201 6 241 1 362 9 181 1 
33 2 129 2 279 1 248 2 227 1 64 1 290 1 291 1 249 1 67 1 326 1 328 1 113 2 212 3 136 3 138 1 140 1 313 1 269 1 336 1 97 1 272 3 255 4 201 2 362 3 155 1 
33 4 129 3 279 1 84 1 248 3 227 2 64 1 290 1 291 1 249 1 211 1 67 2 326 1 113 4 328 2 212 4 136 4 138 2 140 1 313 2 269 2 336 1 97 2 272 5 255 7 201 4 241 1 362 4 155 1 
118 1 171 1 128 1 
37 1 128 1 
292 1 
15 1 191 1 128 1 
348 1 128 1 
15 1 128 1 
183 1 118 2 15 1 191 1 128 3 264 1 
342 3 52 1 346 1 71 2 97 1 283 1 21 3 127 4 98 1 204 1 23 1 67 1 242 2 231 7 9 1 58 1 135 1 
342 3 52 1 346 1 71 2 97 1 283 1 21 3 127 4 98 1 204 1 23 1 67 1 242 2 231 7 9 1 58 1 135 1 
342 3 52 1 346 1 121 1 71 2 97 1 283 1 21 3 127 4 98 1 204 1 23 1 67 1 242 2 231 7 9 1 58 1 135 1 
342 15 346 1 261 1 227 3 284 1 283 2 352 1 231 31 67 4 293 1 9 2 135 2 328 3 13 1 167 1 116 1 117 1 214 4 52 1 269 3 71 5 97 4 361 1 274 1 73 2 127 16 21 10 98 1 23 2 204 5 242 3 58 1 258 3 154 1 
342 4 346 1 261 1 283 1 161 1 67 1 231 9 9 1 135 1 13 2 117 2 52 1 71 3 97 1 274 2 73 4 127 5 21 4 98 1 204 1 23 1 146 1 242 2 154 2 
102 2 343 1 344 1 347 1 323 1 262 1 187 1 5 1 310 1 189 1 294 1 68 1 354 1 12 1 164 1 232 1 14 1 234 1 357 1 236 1 235 1 299 1 300 1 95 1 54 1 319 2 257 1 179 2 245 1 27 1 
102 3 343 1 344 1 347 1 323 1 262 1 186 1 187 1 5 2 310 1 294 1 68 1 354 1 12 1 164 1 232 1 14 1 357 1 236 1 235 1 299 1 300 1 95 1 72 1 319 2 147 1 257 1 179 3 245 1 27 1 
102 2 343 1 344 1 347 1 262 1 187 1 5 2 294 1 68 1 354 1 164 1 232 1 14 1 357 1 236 1 235 1 299 1 300 1 95 1 72 1 319 2 147 1 257 1 179 2 27 1 
102 1 304 1 61 1 344 1 236 1 15 1 299 2 300 2 323 1 95 2 186 1 301 1 360 1 40 1 338 1 354 1 68 2 257 1 128 1 12 1 179 1 164 1 153 1 
102 1 343 1 344 1 347 1 323 1 262 1 310 1 189 1 294 1 68 1 354 1 12 1 164 1 14 1 234 1 236 1 235 1 299 1 300 1 95 1 319 2 147 1 257 1 179 1 245 1 27 1 
243 1 
344 2 33 1 260 1 34 1 281 1 64 1 85 1 325 1 40 1 290 1 87 1 88 1 354 1 137 1 164 2 136 2 47 1 236 1 140 1 15 1 358 1 93 1 270 2 96 1 336 1 360 2 272 1 317 1 315 1 175 1 77 1 362 2 257 2 149 1 128 1 181 1 153 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 172 1 358 1 34 1 270 1 96 1 281 1 85 1 325 1 317 1 315 1 175 1 362 2 87 1 88 1 149 1 137 1 136 2 
47 1 358 1 96 1 281 1 64 1 336 1 85 1 325 1 317 1 315 1 175 1 290 1 362 1 87 1 88 1 149 1 137 1 136 1 181 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 358 1 96 1 281 1 85 1 325 1 315 1 317 1 175 1 362 1 87 1 88 1 149 1 136 1 137 1 
47 1 358 1 96 1 281 1 64 1 336 1 85 1 325 1 317 1 315 1 175 1 290 1 362 1 87 1 88 1 149 1 137 1 136 1 181 1 
342 3 30 2 346 1 83 1 231 6 67 1 190 1 135 1 298 1 13 1 117 1 52 1 171 1 71 2 97 1 274 1 73 2 21 2 127 3 239 1 98 1 203 1 23 1 242 1 176 1 154 1 
30 1 342 6 104 1 105 1 83 11 227 1 284 1 230 1 231 14 67 1 327 1 190 1 328 2 330 1 13 2 298 4 116 1 117 2 214 3 251 1 269 2 71 1 19 1 97 2 21 2 274 2 73 4 127 8 239 2 204 1 176 11 258 3 154 2 
30 1 342 1 344 1 105 1 325 1 7 1 231 2 190 1 327 1 10 1 191 1 354 1 192 1 46 1 164 1 137 2 298 1 13 1 355 1 47 2 117 1 236 1 15 1 142 1 360 1 19 1 73 2 274 1 127 1 239 1 76 1 56 1 145 1 222 1 223 1 257 1 128 1 154 1 
105 1 325 1 159 2 67 3 7 1 327 1 112 1 10 2 328 2 164 3 13 3 298 7 117 3 15 2 253 2 71 4 19 1 73 6 127 10 21 8 76 2 23 1 176 7 257 3 128 2 30 2 342 10 344 3 346 1 83 7 307 1 227 2 39 2 231 20 190 3 192 1 354 2 191 2 135 1 137 3 90 2 47 3 355 2 52 1 236 2 142 1 237 1 269 2 360 1 97 3 200 2 274 3 239 3 98 1 145 1 204 4 242 1 147 1 154 3 
342 1 344 7 349 1 188 1 325 1 40 1 7 1 231 2 190 2 327 1 192 1 354 2 250 1 137 1 164 8 13 2 47 1 117 2 236 2 15 2 142 1 198 1 54 1 360 2 19 1 125 1 274 2 73 4 127 1 239 2 203 1 147 1 177 1 257 8 244 2 128 3 259 1 154 2 153 1 
0 1 103 1 342 2 105 1 83 1 227 1 325 1 7 1 231 3 67 1 190 1 193 1 328 1 137 1 298 1 13 1 47 1 117 1 142 1 269 1 71 1 97 1 21 1 274 1 73 2 127 1 239 1 176 1 154 1 
117 1 83 1 97 1 21 1 73 2 274 1 127 2 239 1 202 1 204 1 203 1 231 2 190 1 176 1 328 1 298 1 13 1 154 1 
342 2 117 1 83 1 71 1 227 1 21 1 73 2 274 1 239 1 203 1 231 2 67 1 190 1 176 1 57 1 298 1 13 1 154 1 
342 2 83 2 227 1 231 4 67 1 190 1 328 1 13 1 298 2 117 1 269 1 71 1 97 1 127 2 274 1 73 2 21 2 239 1 203 1 204 1 176 2 154 1 
117 1 83 1 349 1 97 1 21 1 73 2 274 1 127 2 239 1 202 1 204 1 231 2 190 1 176 1 328 1 298 1 13 1 154 1 
342 2 117 1 83 1 71 1 227 1 349 1 21 1 73 2 274 1 239 1 231 2 67 1 190 1 176 1 57 1 298 1 13 1 154 1 
342 2 83 2 227 1 349 1 231 4 67 1 190 1 328 1 13 1 298 2 117 1 269 1 71 1 97 1 127 2 274 1 73 2 21 2 239 1 204 1 176 2 154 1 
342 2 117 1 83 2 269 1 71 1 227 1 97 1 21 2 73 2 274 1 127 2 239 1 204 1 67 1 231 4 190 1 176 2 328 1 298 2 13 1 154 1 
30 1 342 1 344 1 231 2 190 1 327 1 10 1 191 1 354 1 164 1 137 1 90 1 13 1 355 1 47 1 117 1 236 1 15 1 19 1 360 1 127 1 73 2 274 1 239 1 76 1 257 1 128 1 154 1 
30 1 342 1 184 1 344 1 231 2 190 1 327 1 134 1 191 1 354 1 164 1 137 1 13 1 47 1 117 1 236 1 15 1 19 1 360 1 127 1 73 2 274 1 239 1 76 1 257 1 128 1 182 1 154 1 
342 2 105 1 83 2 227 1 231 4 67 1 190 1 328 1 13 1 298 2 117 1 269 1 71 1 97 1 127 2 274 1 73 2 21 2 239 1 204 1 176 2 154 1 
342 2 344 1 83 2 227 1 159 1 67 1 231 4 190 1 10 1 191 1 354 1 328 1 164 1 137 1 298 2 90 1 13 1 355 1 47 1 117 1 236 1 15 1 269 1 71 1 54 1 97 1 21 2 127 2 73 2 274 1 239 1 76 1 204 1 176 2 257 1 128 1 154 1 
342 1 0 1 105 1 83 1 227 1 325 1 67 1 7 1 231 3 190 1 193 1 328 1 137 1 13 1 298 1 47 1 117 1 142 1 269 1 199 1 97 1 21 1 274 1 73 2 127 2 239 1 204 1 176 1 154 1 
342 10 32 2 3 1 227 3 284 1 286 1 161 1 231 19 67 3 328 3 13 2 168 1 116 1 117 2 214 2 334 1 269 3 123 1 71 3 53 2 97 3 274 2 73 4 127 9 21 6 204 3 320 1 321 1 258 1 154 2 
342 12 32 1 3 2 207 1 261 2 227 2 161 1 67 2 231 26 8 1 328 3 13 3 168 1 265 1 331 1 117 3 116 2 214 2 334 1 269 3 71 2 254 1 53 4 97 3 21 4 274 3 73 6 127 14 204 2 320 1 321 2 258 2 154 3 79 1 
3 2 207 1 284 1 286 1 161 1 67 5 8 1 328 4 13 3 168 1 331 1 117 3 116 3 214 4 334 1 71 4 254 1 21 8 127 20 73 6 23 1 258 3 79 1 342 21 32 1 346 1 261 1 227 4 231 41 135 1 265 1 52 1 269 4 53 4 97 5 274 3 98 1 204 4 242 1 320 1 321 1 152 1 154 3 
342 18 32 1 3 2 346 1 207 1 261 2 227 3 284 1 286 1 161 1 8 1 231 38 67 4 135 1 328 4 13 4 168 1 265 1 331 1 116 3 117 4 214 4 52 1 334 1 269 4 254 1 71 4 53 4 97 5 274 4 73 8 127 20 21 7 98 1 23 1 204 3 242 1 320 1 321 1 258 3 152 1 79 1 154 4 
342 25 104 2 32 1 3 1 346 1 261 1 207 1 227 7 284 2 161 1 8 1 231 52 67 8 135 1 328 7 13 2 168 1 265 1 331 1 116 2 117 2 214 4 52 1 334 1 269 7 254 1 71 7 53 4 97 8 274 2 73 4 127 27 21 14 98 1 23 1 204 7 242 1 320 1 321 1 258 4 79 1 154 2 
263 1 353 1 196 1 289 1 240 1 133 1 339 1 4 1 101 1 38 1 
70 1 206 1 
263 1 31 1 139 1 196 1 289 1 339 1 4 1 252 1 38 1 
280 1 296 1 
22 1 63 1 45 1 
196 1 4 1 314 1 38 1 228 1 263 1 353 1 289 1 240 1 318 1 99 2 41 1 362 1 339 1 25 1 101 1 212 1 136 1 
196 1 4 1 314 1 38 1 228 1 263 1 353 1 289 1 240 1 318 1 99 2 41 1 362 1 339 1 25 1 101 1 212 1 136 1 
196 1 4 1 314 1 38 1 228 1 263 1 353 1 289 1 240 1 318 1 99 2 41 1 362 1 339 1 25 1 101 1 212 1 136 1 
63 1 280 1 296 1 
63 1 280 1 296 1 
22 1 45 1 
22 1 63 1 45 1 
194 1 163 1 
30 1 2 1 129 1 4 1 38 1 228 1 285 1 263 1 325 2 289 1 41 1 7 2 163 1 137 2 136 1 166 1 47 2 194 1 196 1 142 2 313 1 70 1 124 1 99 1 362 1 339 1 206 1 
342 1 81 1 105 1 344 2 130 1 325 2 231 2 190 1 327 1 354 1 164 2 137 2 13 1 47 2 117 1 236 1 15 1 218 1 19 1 125 1 73 2 274 1 127 1 239 1 148 1 257 2 244 2 128 1 259 1 246 1 154 1 
14 1 343 1 344 2 235 1 236 1 345 1 347 1 300 1 359 1 262 1 54 1 174 1 310 1 319 2 147 1 294 1 354 1 257 2 164 2 
14 1 28 1 343 1 344 1 235 1 236 1 347 1 300 1 359 1 262 1 310 1 319 2 147 1 294 1 257 1 354 1 164 1 
344 1 236 1 15 1 300 1 301 1 360 1 40 1 174 1 354 1 257 1 128 1 164 1 114 1 153 1 
14 1 343 1 344 1 235 1 236 1 345 1 347 1 300 1 359 1 262 1 174 1 310 1 319 2 147 1 294 1 257 1 354 1 164 1 
216 1 
272 1 33 1 249 1 86 1 171 1 212 1 173 1 
33 1 34 1 248 1 64 1 209 1 290 1 249 1 212 2 136 1 270 1 336 1 272 1 273 1 255 1 362 1 26 1 181 1 
156 2 62 2 108 2 109 2 248 6 64 4 110 1 290 4 249 2 67 2 113 6 328 2 212 8 164 3 333 1 15 3 118 2 122 2 336 4 173 1 20 1 255 12 257 3 128 10 181 4 80 1 344 3 183 1 33 8 260 1 34 3 37 3 348 2 227 2 86 1 354 3 191 3 136 5 311 2 48 2 236 4 140 2 143 1 269 2 270 5 54 1 360 1 97 2 200 2 272 9 201 6 362 5 205 2 276 2 
33 5 260 1 207 1 34 1 248 3 227 2 64 2 290 2 249 2 8 1 67 2 113 5 328 2 212 5 311 1 136 1 48 2 331 1 116 1 214 1 140 1 269 2 270 1 254 1 336 2 97 2 302 1 272 8 55 1 255 6 201 5 362 1 258 1 181 2 79 1 
1 1 33 2 82 1 64 1 325 1 160 1 290 1 67 1 7 1 88 1 193 1 135 1 311 1 137 1 136 1 47 1 48 2 52 1 142 1 336 1 97 2 272 2 256 1 23 1 362 1 78 1 178 1 181 1 
33 1 64 1 336 1 173 1 272 1 290 1 249 1 86 1 212 1 181 1 
48 2 33 5 269 2 248 5 227 2 97 2 200 1 272 5 255 10 201 5 67 2 328 2 113 5 212 5 311 1 
249 1 362 1 34 1 270 1 212 1 136 1 
344 4 33 2 260 2 34 2 64 2 40 1 290 2 326 1 162 1 354 1 164 4 136 3 236 1 15 1 140 2 267 1 93 1 143 1 270 4 336 2 360 2 20 2 272 2 77 1 362 3 257 4 128 1 181 1 153 1 
30 1 342 1 344 1 325 2 231 1 7 2 111 1 327 1 190 1 10 1 193 2 354 1 191 1 164 1 137 3 13 1 90 1 47 3 355 1 117 1 236 1 15 1 142 2 360 1 274 1 73 2 239 1 76 1 78 1 257 1 128 1 154 1 
33 2 140 1 260 1 248 2 64 1 336 1 272 1 255 4 290 1 201 2 249 2 242 1 113 2 212 4 181 1 
263 1 287 1 196 1 
263 1 287 1 196 1 
263 1 196 1 240 1 35 1 163 1 
263 1 287 1 196 1 
263 1 196 1 157 1 
263 1 196 1 157 1 
263 1 196 1 157 1 
263 1 196 1 
339 1 4 1 
342 4 117 2 52 1 346 1 261 1 71 2 97 1 127 4 21 3 73 4 274 2 98 1 204 1 23 1 242 1 67 1 231 8 135 1 13 2 154 2 
342 3 52 1 346 1 171 1 71 2 97 1 21 2 127 3 98 1 23 1 242 1 231 6 67 1 135 1 
342 2 51 1 117 1 269 1 71 1 227 1 97 1 21 2 73 2 274 1 127 2 204 1 67 1 231 4 328 1 13 1 154 1 
342 4 116 1 214 2 269 1 71 1 227 1 284 1 97 1 127 3 21 2 204 1 67 1 231 7 328 1 258 1 
342 12 104 1 346 1 261 2 227 2 284 1 231 23 67 3 135 2 328 2 330 1 13 2 91 1 117 2 214 2 52 1 269 2 71 5 97 3 21 9 127 11 73 4 274 2 98 1 23 2 204 4 242 1 258 2 154 2 
342 1 214 1 231 1 
127 1 231 1 258 1 
342 3 117 1 51 1 269 1 71 2 227 1 97 1 200 1 274 1 73 2 127 3 21 3 204 1 231 6 67 1 328 1 154 1 13 1 
342 6 207 1 227 2 161 1 231 12 8 1 67 2 328 2 13 1 331 1 116 1 117 1 214 1 269 2 254 1 71 1 97 2 274 1 73 2 127 6 21 2 204 1 258 1 154 1 79 1 
342 3 52 1 71 1 97 1 127 3 21 2 23 1 204 1 231 6 67 1 135 1 
342 2 91 1 117 1 346 1 261 1 71 1 127 1 21 2 73 2 274 1 98 1 204 1 23 1 231 3 135 1 13 1 154 1 
342 5 117 1 52 1 71 3 97 2 274 1 73 2 21 5 127 5 161 1 256 1 23 2 204 2 231 10 67 2 135 2 154 1 13 1 
117 1 97 1 73 2 274 1 127 2 21 1 161 1 204 1 231 2 328 1 13 1 154 1 
342 2 117 1 269 1 71 1 227 1 97 1 21 2 73 2 274 1 127 2 161 1 204 1 67 1 231 4 328 1 13 1 154 1 
342 2 91 1 117 3 261 1 71 1 286 1 73 6 274 3 21 2 127 1 161 1 23 1 204 1 231 3 135 1 13 3 154 3 
342 18 346 1 261 2 227 3 352 1 284 1 286 1 161 1 231 34 67 5 293 1 135 3 328 3 13 5 91 1 116 1 51 1 117 5 214 4 52 2 269 3 71 7 97 5 361 1 274 5 73 10 127 16 21 12 98 1 23 3 204 5 242 1 258 3 154 5 
342 4 346 1 161 1 67 1 231 8 8 1 135 1 13 1 116 1 117 1 214 1 52 1 71 2 97 1 274 1 73 2 127 4 21 2 98 1 23 1 242 1 258 1 154 1 
342 5 346 1 284 1 161 1 67 1 231 11 8 1 135 1 328 1 13 2 116 1 117 2 51 1 214 2 52 1 269 1 71 2 97 2 274 2 73 4 127 6 21 3 98 1 23 1 204 1 242 1 258 1 154 2 
342 10 346 1 207 1 261 1 227 2 161 1 231 19 8 1 67 3 135 1 328 2 13 3 331 1 51 1 116 1 117 3 214 1 52 1 269 2 254 1 71 3 97 3 274 3 73 6 127 9 21 4 98 1 23 1 204 1 242 1 258 1 154 3 79 1 
342 7 346 1 261 1 207 1 227 1 161 1 231 17 8 1 67 2 135 1 328 2 13 3 331 1 51 1 116 1 117 3 214 1 52 1 269 2 254 1 71 3 97 3 274 3 73 6 127 10 21 5 98 1 23 1 204 2 242 1 258 1 154 3 79 1 
342 4 346 1 161 1 67 1 231 8 8 1 135 1 13 1 116 1 117 1 214 1 52 1 71 2 97 1 274 1 73 2 127 4 21 2 98 1 23 1 242 1 258 1 154 1 
342 6 207 1 227 2 161 1 231 12 8 1 67 2 328 2 13 1 331 1 116 1 117 1 214 1 269 2 254 1 71 1 97 2 274 1 73 2 127 6 21 2 204 1 258 1 154 1 79 1 
342 8 346 1 207 1 261 2 227 1 161 1 231 18 8 1 67 2 135 1 328 2 13 4 331 1 116 1 51 1 117 4 214 1 52 1 269 2 254 1 71 3 97 3 274 4 73 8 127 10 21 5 98 1 23 1 204 2 242 1 258 1 154 4 79 1 
342 7 207 1 261 2 227 2 286 1 161 1 231 16 8 1 67 2 328 3 13 4 331 1 116 1 117 4 214 1 269 3 254 1 71 3 97 3 274 4 73 8 127 9 21 6 204 3 258 1 154 4 79 1 
342 4 52 1 346 1 71 3 97 1 21 6 127 3 98 2 23 3 204 3 67 1 231 7 135 3 
342 8 346 1 207 1 261 2 227 1 286 1 161 1 231 18 8 1 67 2 135 1 328 2 13 4 331 1 116 1 117 4 214 1 52 1 269 2 254 1 71 3 97 3 274 4 73 8 127 10 21 4 98 1 23 1 204 1 242 1 258 1 154 4 79 1 
30 1 47 1 325 1 49 1 268 1 137 1 85 1 
30 1 47 1 49 1 332 1 215 1 36 1 268 1 85 1 325 1 229 1 42 1 137 1 
40 1 344 1 236 1 15 1 171 1 354 1 257 1 128 1 164 1 153 1 360 1 
30 1 47 2 344 1 236 1 15 1 142 1 360 1 325 1 76 1 7 1 10 1 191 1 192 1 257 1 354 1 128 1 137 2 164 1 
47 1 344 1 236 1 15 2 142 1 348 1 122 1 281 1 325 1 20 1 175 1 76 1 7 1 88 1 10 1 191 2 192 1 257 1 354 1 128 3 137 1 164 1 
47 1 344 1 236 1 15 2 142 1 348 1 122 1 281 1 325 1 20 1 175 1 76 1 7 1 88 1 134 1 191 2 192 1 257 1 354 1 128 3 137 1 164 1 
344 3 236 1 15 1 118 1 348 1 122 1 37 1 197 1 270 1 158 1 360 1 20 1 75 1 249 1 362 2 191 1 257 3 354 1 276 1 128 4 212 1 136 2 164 3 
156 1 344 3 236 1 15 1 118 1 348 1 122 1 37 1 270 1 158 1 360 1 20 1 249 1 362 2 191 1 257 3 354 1 276 1 128 4 212 1 136 2 164 3 
188 1 344 1 236 1 354 1 257 1 164 1 
344 6 183 1 236 3 15 2 198 1 144 1 54 1 360 2 351 1 188 1 125 1 147 1 177 1 244 1 100 1 257 7 191 1 354 2 128 3 250 1 164 7 
105 1 325 1 159 1 7 1 67 1 10 1 164 1 298 1 13 2 117 2 15 1 253 1 71 2 218 1 73 4 21 2 127 3 76 1 23 1 176 1 257 1 128 1 342 3 30 2 344 1 346 1 83 1 231 6 190 2 192 1 354 1 191 1 135 1 137 2 90 1 355 1 47 2 236 1 52 1 142 1 54 1 97 1 274 2 239 2 98 1 242 1 154 2 
156 1 344 1 33 1 62 1 129 1 34 1 37 1 108 1 64 2 290 2 249 1 86 1 212 1 136 3 164 1 118 1 143 1 270 2 336 2 173 1 360 1 272 1 362 3 257 1 205 1 128 2 276 1 181 2 
344 2 333 1 183 1 236 2 118 1 15 1 54 1 188 1 257 2 191 1 354 1 128 2 164 2 
344 4 236 1 15 1 271 1 158 1 54 1 360 1 40 1 257 4 354 1 128 1 164 4 153 1 
344 2 236 2 15 1 237 1 144 1 20 1 238 1 100 1 257 2 191 1 354 1 128 1 341 1 164 2 
14 1 343 1 344 1 235 1 236 1 319 1 354 1 257 1 164 1 360 1 
344 2 236 1 15 1 54 1 125 1 147 1 257 2 354 1 128 1 164 2 246 1 
344 4 236 2 15 2 271 1 54 1 360 1 40 1 125 1 20 1 177 1 257 5 354 2 128 3 164 5 250 1 153 1 
344 4 236 2 15 2 16 1 271 1 54 1 360 1 40 1 125 1 20 1 177 1 257 5 354 2 128 3 164 5 153 1 
30 1 47 2 344 1 236 1 15 1 142 1 360 1 325 1 76 1 7 1 134 1 191 1 192 1 257 1 354 1 128 1 137 2 164 1 
344 1 183 1 236 2 15 1 144 1 351 1 20 1 100 1 257 1 191 1 354 1 128 1 164 1 
30 1 6 1 107 1 17 1 335 1 
169 1 305 1 17 1 129 1 107 1 335 1 281 1 220 1 317 1 337 1 175 1 362 1 6 1 88 1 136 1 
47 1 325 1 81 1 17 1 107 1 148 1 335 1 130 1 137 1 
305 1 220 1 17 1 
357 1 171 1 232 1 187 1 
102 1 357 1 323 1 179 1 12 1 232 1 187 1 
102 1 95 1 68 1 
102 3 29 1 357 1 120 1 323 1 187 1 189 1 340 1 12 1 179 3 151 2 232 1 
102 2 5 1 357 1 278 1 323 1 179 2 12 1 232 1 187 1 
102 1 60 1 14 1 323 1 347 1 350 1 189 1 319 1 12 1 179 1 232 1 
102 1 357 1 189 1 323 1 179 1 12 1 232 1 
102 1 357 2 189 1 323 1 179 1 12 1 187 1 
102 2 266 1 357 1 323 2 189 1 43 1 44 1 12 2 179 2 232 1 
102 3 60 1 357 1 323 1 187 1 5 2 189 1 132 1 11 1 12 1 179 3 165 1 232 2 
102 2 14 1 357 1 235 1 94 1 323 1 347 1 262 1 187 1 5 1 189 1 319 2 12 1 179 2 232 1 
102 4 60 1 357 1 278 1 323 2 187 1 5 2 65 1 189 1 12 2 179 4 165 1 232 2 
102 1 357 1 189 1 323 1 179 1 12 1 232 1 187 1 
29 1 102 4 60 1 357 2 323 1 187 2 288 1 5 2 340 1 151 1 179 4 12 1 165 1 232 3 
102 2 357 1 69 1 323 1 324 1 187 1 5 1 189 1 295 1 12 1 179 2 232 1 
29 1 102 3 357 1 323 1 187 1 189 1 340 2 12 1 179 3 329 1 151 2 232 1 
195 1 66 1 208 2 232 2 
102 1 189 1 275 1 323 1 179 1 12 1 
102 2 5 1 357 1 189 1 323 1 11 1 179 2 12 1 232 1 187 1 
210 1 
102 1 357 1 189 1 323 1 179 1 12 1 232 1 187 1 
102 3 5 1 357 1 189 1 323 1 11 1 151 1 179 3 12 1 232 1 187 1 
60 1 288 1 165 1 232 1 
357 1 232 1 

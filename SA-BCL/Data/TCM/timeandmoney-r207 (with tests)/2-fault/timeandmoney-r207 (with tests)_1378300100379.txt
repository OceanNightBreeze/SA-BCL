#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
316 2 214 2 30 2 348 1 318 1 320 4 127 9 54 1 321 2 196 6 108 1 36 2 355 1 229 1 324 1 356 5 330 9 87 1 114 2 331 1 306 1 139 3 140 2 186 1 170 1 284 1 171 1 285 1 
316 2 214 2 30 2 348 1 318 1 320 4 127 9 54 1 321 2 196 6 36 2 108 1 355 1 229 1 324 1 356 5 330 9 87 1 114 2 331 1 306 1 139 3 140 2 186 1 170 1 284 1 171 1 285 1 
316 2 214 2 30 2 348 1 318 1 320 5 127 10 54 1 321 2 196 7 36 2 108 1 355 1 229 1 324 1 356 6 330 10 87 1 114 2 331 1 306 1 139 4 140 2 186 1 170 1 284 1 171 1 285 1 
316 2 214 2 30 2 348 1 318 1 320 3 127 7 54 1 321 2 196 4 36 2 108 1 355 1 229 1 324 1 356 4 330 7 87 1 114 1 331 1 306 1 139 2 140 2 186 1 284 1 171 1 285 1 
316 1 214 1 330 4 114 2 331 1 30 1 318 1 320 2 127 4 139 1 54 1 140 1 196 3 170 1 284 1 36 1 171 1 356 3 
316 1 214 1 330 2 174 1 331 1 30 1 294 1 127 2 365 1 321 1 140 1 284 1 171 1 324 1 229 1 356 1 
214 2 330 3 331 1 320 1 127 3 139 1 321 1 140 2 196 1 284 1 171 1 285 1 356 2 
316 1 214 2 173 1 30 1 348 1 318 1 320 4 127 9 321 1 54 1 196 7 36 1 356 5 330 9 87 1 114 2 331 1 139 3 336 1 140 2 170 1 284 1 171 1 285 1 
316 1 214 2 173 1 30 1 348 1 318 1 320 4 127 9 321 1 54 1 196 7 36 1 356 5 330 9 87 1 114 2 331 1 139 3 336 1 140 2 170 1 284 1 171 1 285 1 
308 1 226 1 252 1 
161 2 226 1 335 1 
231 1 172 2 62 2 63 2 304 2 88 1 376 2 191 2 
172 3 123 2 342 1 145 1 346 1 220 1 79 1 148 2 297 1 298 1 56 1 11 1 35 1 199 1 230 1 13 1 204 1 231 1 62 3 164 2 63 2 304 2 165 1 255 1 88 1 376 2 307 1 183 1 120 1 312 1 67 1 121 2 190 1 95 1 263 1 191 2 96 2 
158 1 172 1 267 1 62 1 63 1 304 1 88 1 377 1 376 1 191 1 
237 1 50 1 40 1 172 1 62 1 63 1 16 1 377 1 308 1 273 1 226 1 155 1 69 1 93 1 
237 1 40 2 172 1 62 1 304 1 63 1 16 1 376 1 377 1 308 1 226 1 155 2 69 1 93 1 191 1 
215 1 184 1 40 1 155 1 32 1 
308 1 215 1 40 2 105 1 226 1 155 2 234 1 32 1 
215 1 40 1 155 1 
158 1 40 1 172 1 267 1 62 1 304 1 63 1 88 1 32 1 377 1 376 1 283 1 155 1 191 1 
226 1 
308 1 215 1 40 2 105 1 226 1 155 2 32 1 126 1 
0 2 40 5 250 1 215 2 329 2 78 1 137 1 268 1 375 1 32 2 334 1 308 1 34 2 105 1 226 1 155 5 188 1 70 1 24 1 
13 1 204 1 172 2 123 1 342 1 62 2 164 1 304 1 63 1 165 1 293 1 79 1 376 1 103 1 148 1 120 1 55 1 11 1 199 1 230 1 
231 1 252 1 
60 1 172 2 231 2 62 2 63 2 304 1 376 1 338 1 191 1 
39 1 55 1 292 1 
13 1 204 1 231 1 172 1 123 1 62 1 164 1 342 1 165 1 79 1 148 1 120 1 11 1 199 1 230 1 264 1 
172 5 231 1 62 5 304 4 63 5 293 1 376 4 103 2 152 1 260 1 244 1 273 1 338 1 191 1 
172 2 267 1 62 2 63 2 304 2 208 1 377 1 376 2 
231 1 172 3 62 3 63 3 304 3 191 1 376 3 103 1 
172 1 267 1 62 1 63 1 304 1 377 1 376 1 
60 1 172 1 62 1 63 1 304 1 338 1 377 1 376 1 191 1 
237 1 172 4 123 1 342 1 145 1 346 1 293 1 79 1 176 1 103 1 148 1 297 1 298 1 56 1 11 1 155 1 199 1 230 1 325 1 13 1 204 1 40 1 231 1 62 4 164 1 165 1 63 3 304 3 255 1 88 1 16 1 376 3 377 1 183 1 120 1 67 1 338 1 69 1 121 1 93 1 95 1 263 1 191 2 96 2 
260 1 231 1 172 2 273 1 62 2 63 2 304 1 376 1 103 1 
237 1 40 1 172 3 62 3 304 3 63 3 293 1 16 1 176 1 377 1 376 3 103 2 178 1 226 1 338 1 155 1 69 1 93 1 191 1 
39 1 172 2 62 2 304 2 63 2 376 2 103 1 55 1 338 1 191 1 
204 1 13 1 231 1 172 1 123 1 62 1 164 1 342 1 165 1 79 1 148 1 120 1 11 1 199 1 230 1 
204 1 13 1 27 1 231 1 172 1 123 1 62 1 164 1 342 1 6 1 79 1 148 1 120 1 11 1 199 1 
286 1 3 1 144 1 292 2 346 1 175 1 297 1 298 1 55 2 35 2 159 1 327 1 39 2 249 1 255 1 210 1 235 1 183 1 169 1 67 2 121 4 366 1 263 1 96 2 
172 1 62 1 63 1 304 1 208 1 16 1 377 1 376 1 
357 1 125 1 
357 1 125 1 
287 1 
287 1 
287 1 
248 1 357 1 125 1 
248 1 357 1 125 1 
287 1 357 1 217 1 197 1 125 1 
357 1 322 1 125 1 
248 1 357 1 125 1 
357 1 354 1 125 1 
357 1 354 1 125 1 
357 1 354 1 125 1 
341 1 289 1 172 2 100 1 31 1 345 1 125 1 7 1 223 1 349 1 322 1 155 1 353 1 58 1 357 1 40 1 231 1 62 2 304 2 280 1 63 2 65 1 376 2 182 1 
357 2 2 1 341 2 40 2 280 2 240 1 31 3 219 2 345 2 270 1 125 2 257 1 349 1 225 1 226 1 155 2 353 2 129 1 265 1 
316 1 30 1 36 1 
316 1 174 1 30 1 
247 1 316 3 49 1 174 1 36 2 276 1 
247 1 316 2 49 1 174 1 36 1 17 1 
247 1 316 2 49 2 174 1 36 1 
0 1 215 1 239 1 100 1 32 4 7 1 34 1 371 1 52 1 105 1 323 2 226 2 155 5 301 2 326 1 40 5 161 3 329 1 281 1 137 3 210 1 235 1 335 1 334 1 308 1 182 1 309 1 169 1 188 2 261 2 213 1 366 1 
0 2 215 6 268 1 32 7 7 4 34 2 371 2 52 2 105 1 323 6 226 5 300 5 227 1 155 9 301 6 133 1 86 1 135 1 40 9 161 9 329 2 281 1 137 8 210 3 235 3 18 1 363 1 335 3 334 1 308 1 184 5 169 3 188 6 213 3 366 3 
0 1 268 1 32 2 7 1 34 1 371 1 52 1 323 2 226 3 155 3 301 2 326 1 40 3 329 1 161 4 137 3 210 1 235 1 335 2 308 1 309 1 169 1 188 2 261 1 213 1 366 1 
0 1 268 1 32 3 7 2 34 1 371 1 52 1 323 4 226 4 155 4 301 4 326 1 133 1 40 4 161 7 329 1 137 5 210 2 235 2 18 1 363 1 335 3 308 1 309 1 169 2 188 4 261 2 213 2 366 2 
13 1 224 1 252 1 
194 1 13 1 
259 1 
13 1 120 1 199 1 
13 1 25 1 
13 1 199 1 
13 3 224 2 120 1 163 1 199 1 48 1 
286 2 249 3 205 1 290 1 317 2 332 1 305 1 92 1 169 1 22 1 67 3 35 4 121 7 366 1 340 1 192 1 131 1 
286 2 249 3 205 1 290 1 317 2 332 1 305 1 92 1 169 1 22 1 67 3 35 4 121 7 366 1 340 1 192 1 131 1 
286 2 249 3 205 1 290 1 317 2 332 1 305 1 92 1 169 1 22 1 67 3 372 1 35 4 121 7 366 1 340 1 192 1 131 1 
286 5 290 5 317 3 297 1 298 1 35 16 131 1 84 1 249 10 205 2 206 4 42 1 282 3 255 1 210 3 235 3 332 1 305 2 44 1 258 1 92 1 91 1 378 1 169 4 119 1 22 2 67 15 121 31 213 3 340 1 366 4 263 1 192 2 96 2 
286 3 290 1 317 2 221 1 297 2 8 1 298 2 35 5 249 4 205 1 255 2 332 1 305 1 378 1 92 1 169 1 22 1 67 4 121 9 366 1 340 1 263 2 96 4 192 1 
316 2 214 1 123 1 75 1 342 1 174 1 30 1 369 1 269 1 148 1 127 2 272 1 321 1 196 1 11 1 36 1 276 1 356 1 110 1 373 1 330 2 164 1 331 1 64 1 361 1 118 1 140 1 284 1 171 1 262 1 
316 2 214 1 123 1 342 1 174 1 30 1 269 1 148 1 127 3 272 1 352 1 321 1 153 1 196 2 11 1 36 1 276 1 356 1 110 1 373 1 359 1 330 3 164 1 331 1 64 1 361 1 118 1 140 1 171 1 262 1 
316 2 123 1 342 1 174 1 30 1 269 1 148 1 127 2 272 1 352 1 321 1 196 2 11 1 36 1 276 1 356 1 110 1 373 1 359 1 330 2 164 1 331 1 118 1 171 1 262 1 
315 1 302 1 373 2 13 1 328 1 214 1 204 1 278 1 330 1 123 1 342 1 164 1 4 1 148 1 127 1 195 1 321 2 153 1 140 1 11 1 199 1 262 2 110 2 
316 2 214 1 123 1 342 1 174 1 30 1 369 1 269 1 148 1 127 1 272 1 352 1 321 1 11 1 36 1 276 1 110 1 373 1 330 1 164 1 64 1 361 1 118 1 140 1 284 1 262 1 
362 1 
0 1 237 1 50 1 342 1 148 2 296 2 9 2 52 1 105 3 155 5 11 1 199 1 157 2 111 1 302 1 204 2 13 1 161 2 14 2 164 2 62 1 15 1 63 1 166 1 16 1 308 1 310 1 21 1 69 1 215 6 216 1 123 2 172 1 368 2 33 2 34 1 81 1 273 1 226 2 128 1 275 1 328 1 40 5 329 1 137 2 43 4 377 1 333 1 335 2 334 1 90 2 236 1 188 2 381 1 93 1 
237 1 50 1 215 2 172 1 126 1 81 1 9 1 105 1 273 1 128 1 155 3 111 1 40 3 62 1 63 1 15 1 16 1 43 2 377 1 21 1 69 1 93 1 
237 1 50 1 215 1 172 1 126 1 81 1 105 1 273 1 226 1 128 1 155 3 111 1 40 3 62 1 63 1 15 1 16 1 43 3 377 1 308 1 90 1 21 1 69 1 93 1 
237 1 50 1 215 2 172 1 126 1 81 1 9 1 105 1 273 1 226 1 128 1 155 3 111 1 40 3 62 1 14 1 63 1 15 1 16 1 43 3 377 1 308 1 90 1 21 1 69 1 93 1 
237 1 0 1 50 1 147 1 296 2 9 4 105 3 53 1 155 5 156 1 157 2 111 1 251 1 14 4 62 1 253 1 15 1 63 1 16 1 308 5 310 1 21 1 69 1 215 7 172 1 368 2 126 1 33 2 81 1 34 1 273 1 226 5 128 1 40 5 329 1 137 1 43 6 377 1 333 1 334 1 335 2 90 4 188 1 93 1 
237 1 0 1 50 1 296 2 9 2 105 2 155 4 157 2 111 1 161 2 62 1 14 2 63 1 15 1 166 1 16 1 308 1 310 1 21 1 69 1 215 4 172 1 368 2 33 2 81 1 34 1 273 1 226 2 128 1 40 4 329 1 137 1 43 4 333 1 377 1 334 1 335 2 90 2 188 1 93 1 
0 1 237 1 50 1 215 4 172 1 368 2 33 2 81 1 34 1 296 2 9 2 105 2 273 1 226 1 128 1 155 4 156 1 157 2 111 1 40 4 329 1 251 1 14 2 253 1 62 1 137 1 63 1 15 1 16 1 43 4 333 1 377 1 335 2 334 1 308 1 90 2 310 1 21 1 188 1 69 1 93 1 
0 1 237 1 50 1 215 4 172 1 368 2 33 2 81 1 34 1 296 2 9 2 105 2 273 1 226 1 128 1 155 4 156 1 157 2 111 1 40 4 329 1 251 1 14 2 253 1 62 1 137 1 63 1 15 1 16 1 43 4 333 1 377 1 335 2 334 1 308 1 90 2 310 1 21 1 188 1 69 1 93 1 
1 2 0 1 237 1 50 1 215 4 172 1 99 1 368 2 81 1 34 1 296 2 9 2 105 2 273 1 226 1 128 1 155 4 111 1 38 1 40 4 161 2 329 1 14 2 253 1 62 1 137 1 63 1 15 1 256 2 16 1 43 4 377 1 334 1 308 1 90 2 310 1 21 1 188 1 69 1 93 1 94 1 
0 1 237 1 50 1 215 5 172 1 368 2 33 2 34 1 81 1 296 2 9 3 105 2 53 1 273 1 226 1 128 1 155 4 156 1 157 2 111 1 40 4 329 1 251 1 253 1 62 1 14 3 137 1 63 1 15 1 16 1 43 5 333 1 377 1 335 2 334 1 308 1 90 3 310 1 21 1 188 1 69 1 93 1 
0 1 237 1 50 1 215 5 172 1 368 2 33 2 34 1 81 1 296 2 9 3 105 2 53 1 273 1 226 1 128 1 155 4 156 1 157 2 111 1 40 4 329 1 251 1 253 1 62 1 14 3 137 1 63 1 15 1 16 1 43 5 333 1 377 1 335 2 334 1 308 1 90 3 310 1 21 1 188 1 69 1 93 1 
237 1 0 1 1 2 50 1 99 1 296 2 9 2 105 2 155 4 111 1 161 2 62 1 14 2 63 1 15 1 256 2 166 1 16 1 308 1 310 1 21 1 69 1 215 4 172 1 368 2 81 1 34 1 273 1 226 1 128 1 40 4 329 1 137 1 43 4 377 1 334 1 90 2 188 1 93 1 
286 2 317 1 292 1 346 1 297 1 298 1 55 1 35 3 39 1 327 1 249 2 231 2 252 1 255 1 332 1 92 1 183 1 169 1 22 1 67 3 121 6 340 1 366 1 263 1 96 2 192 1 
286 1 290 1 292 11 346 1 220 1 151 1 297 2 298 2 55 11 35 8 85 1 249 2 39 4 231 1 206 3 42 1 255 2 282 3 210 2 180 1 235 1 168 1 44 1 183 2 169 2 212 1 67 6 121 14 213 2 366 1 95 1 263 2 96 4 
123 1 172 2 342 1 346 1 293 1 79 1 220 1 148 1 103 1 297 1 298 1 104 1 11 1 35 1 199 1 230 1 13 1 204 1 39 1 231 1 162 1 164 1 62 2 165 1 254 1 63 1 304 1 255 1 376 1 183 1 120 1 212 1 67 1 121 2 263 1 95 1 264 1 96 2 
286 4 342 2 290 4 292 7 293 1 346 3 101 1 148 3 103 1 297 3 352 1 298 3 55 7 56 2 11 2 109 1 199 2 201 2 204 1 13 2 249 8 164 3 62 3 304 1 63 1 165 2 255 3 210 2 120 2 169 3 22 1 212 1 67 10 121 20 213 2 366 3 263 3 74 2 123 3 172 3 317 1 220 1 370 2 79 2 319 2 35 10 230 2 39 7 231 2 232 1 235 2 332 1 376 1 92 1 183 3 340 1 95 1 192 1 96 6 
75 1 172 1 123 8 342 2 346 2 220 1 347 1 103 1 148 7 297 2 352 1 298 2 299 1 245 1 11 2 35 1 199 2 302 1 134 1 327 1 13 3 204 2 328 1 115 1 303 1 62 1 164 8 63 1 304 1 255 2 376 1 183 2 67 1 121 2 190 2 263 2 95 1 96 4 193 1 
286 1 172 1 292 1 346 1 80 1 297 1 298 1 55 1 35 1 249 1 39 1 62 1 304 1 63 1 255 1 210 1 235 1 376 1 183 1 169 1 212 1 67 2 338 1 121 3 213 1 366 1 191 1 263 1 96 2 
249 1 39 1 327 1 290 1 255 1 292 1 346 1 175 1 210 1 297 1 183 1 298 1 169 1 55 1 35 2 121 2 263 1 96 2 
286 1 249 1 39 1 327 1 3 1 255 1 292 1 346 1 235 1 297 1 183 1 298 1 55 1 67 2 121 2 366 1 263 1 96 2 
286 1 290 1 292 2 346 1 297 1 298 1 55 2 35 2 327 1 39 2 249 2 255 1 210 1 235 1 183 1 169 1 67 2 121 4 213 1 366 1 263 1 96 2 
249 1 39 1 290 1 255 1 292 1 346 1 175 1 210 1 297 1 183 1 298 1 169 1 55 1 35 2 121 2 263 1 193 1 96 2 
286 1 249 1 39 1 3 1 255 1 292 1 346 1 235 1 297 1 183 1 298 1 55 1 67 2 121 2 366 1 263 1 193 1 96 2 
286 1 290 1 292 2 346 1 297 1 298 1 55 2 35 2 39 2 249 2 255 1 210 1 235 1 183 1 169 1 67 2 121 4 213 1 366 1 263 1 96 2 193 1 
286 1 249 2 39 2 290 1 255 1 292 2 346 1 210 1 235 1 297 1 183 1 298 1 169 1 55 2 67 2 35 2 121 4 213 1 366 1 263 1 96 2 
123 1 172 1 342 1 346 1 220 1 79 1 148 1 297 1 298 1 56 1 11 1 35 1 199 1 230 1 204 1 13 1 231 1 164 1 62 1 165 1 255 1 183 1 120 1 67 1 121 2 263 1 95 1 96 2 
27 1 123 1 172 1 342 1 346 1 220 1 79 1 6 1 148 1 297 1 298 1 11 1 35 1 199 1 204 1 13 1 231 1 164 1 62 1 255 1 183 1 120 1 380 1 67 1 121 2 263 1 95 1 96 2 
286 1 290 1 292 2 346 1 297 1 298 1 55 2 35 2 39 2 249 2 255 1 210 1 235 1 183 1 169 1 212 1 67 2 121 4 213 1 366 1 263 1 96 2 
286 1 123 1 75 1 172 1 342 1 290 1 292 2 346 1 79 1 370 1 148 1 297 1 298 1 55 2 56 1 11 1 35 2 199 1 230 1 249 2 39 2 13 1 164 1 62 1 165 1 255 1 210 1 235 1 183 1 169 1 120 1 67 2 121 4 213 1 366 1 263 1 96 2 
172 1 290 1 292 1 346 1 297 1 298 1 10 1 55 1 35 2 249 1 39 1 62 1 304 1 63 1 255 1 210 1 235 1 376 1 183 1 169 1 212 1 67 1 338 1 121 3 213 1 366 1 191 1 263 1 96 2 
286 4 98 1 290 4 317 1 51 1 297 3 8 1 298 3 106 1 35 20 274 1 130 1 374 4 358 1 249 8 360 1 206 4 42 3 255 3 282 3 210 4 235 4 332 1 19 1 44 1 92 1 378 1 169 5 379 1 22 1 46 1 67 21 47 2 23 1 313 1 121 41 213 4 339 1 340 1 366 5 263 3 192 1 96 6 
286 4 98 1 290 3 317 1 51 1 297 4 8 1 298 4 106 1 35 20 274 1 130 1 374 4 358 1 249 7 360 1 206 4 42 3 255 4 282 3 210 4 235 3 332 1 19 1 44 1 92 1 378 2 169 5 379 1 22 1 46 1 67 18 47 2 23 1 313 1 121 38 213 4 339 1 340 1 366 4 263 4 192 1 96 8 
286 7 98 1 290 7 317 1 51 1 297 2 8 1 298 2 35 27 274 1 130 1 85 2 374 4 358 1 249 14 360 1 206 4 42 2 255 2 282 4 210 7 235 7 332 1 19 1 44 2 92 1 378 1 169 8 379 1 22 1 46 1 67 25 47 1 23 1 313 1 121 52 213 7 340 1 366 8 263 2 192 1 96 4 
286 3 98 2 290 3 82 1 297 2 8 1 298 2 35 9 130 1 374 2 358 1 249 6 206 2 42 1 255 2 282 1 210 3 235 3 19 1 44 1 169 3 379 1 67 10 47 1 121 19 213 3 339 1 366 3 263 2 96 4 
286 2 98 1 290 2 51 1 297 3 8 1 298 3 35 14 274 1 130 1 249 4 374 4 358 2 360 1 206 2 42 2 255 3 282 2 210 3 235 2 19 1 378 2 169 3 379 1 46 1 67 12 47 2 313 1 23 1 121 26 213 3 366 2 263 3 96 6 
132 1 357 1 341 1 280 1 240 1 353 1 345 1 129 1 270 1 125 1 
58 1 322 1 
266 1 277 1 357 1 341 1 211 1 280 1 353 1 345 1 125 1 
248 1 238 1 
217 1 68 1 354 1 
357 1 2 1 341 1 40 1 280 1 240 1 31 2 219 1 345 1 270 1 125 1 257 1 349 1 226 1 155 1 353 1 129 1 265 1 
357 1 2 1 341 1 40 1 280 1 240 1 31 2 219 1 345 1 270 1 125 1 257 1 349 1 226 1 155 1 353 1 129 1 265 1 
357 1 2 1 341 1 40 1 280 1 240 1 31 2 219 1 345 1 270 1 125 1 257 1 349 1 226 1 155 1 353 1 129 1 265 1 
248 1 217 1 238 1 
248 1 217 1 238 1 
68 1 354 1 
217 1 68 1 354 1 
289 1 223 1 
341 1 289 1 172 2 76 1 100 1 219 1 31 1 345 1 32 1 125 1 7 1 223 1 322 1 155 1 353 1 58 1 357 1 40 1 231 1 62 2 280 1 304 2 63 2 65 1 376 2 182 1 265 1 
123 2 172 2 342 1 29 1 346 1 220 1 242 1 347 1 148 2 271 1 297 1 298 1 11 1 35 1 199 1 13 1 303 1 164 2 62 2 63 2 255 1 364 1 183 1 212 1 67 1 121 2 190 2 71 1 263 1 95 1 96 2 
179 1 316 2 123 2 75 1 174 1 342 1 164 2 30 1 269 1 222 1 361 1 148 2 352 1 118 1 20 1 11 1 36 1 276 1 262 1 
316 2 123 1 174 1 164 1 342 1 233 1 30 1 269 1 222 1 361 1 148 1 352 1 118 1 11 1 36 1 276 1 262 1 
179 1 315 1 302 1 13 1 204 1 328 1 123 1 342 1 164 1 148 1 11 1 143 1 199 1 262 1 
179 1 316 2 123 1 174 1 164 1 342 1 30 1 269 1 222 1 361 1 148 1 352 1 118 1 20 1 11 1 36 1 276 1 262 1 
218 1 
308 1 78 1 226 1 252 1 137 1 188 1 375 1 
0 1 40 1 215 1 161 1 329 1 137 1 333 1 334 1 33 1 335 1 308 1 34 1 105 1 226 2 155 1 188 1 157 1 
288 2 194 3 0 4 237 2 342 3 5 2 146 1 295 2 148 3 149 1 350 1 150 2 52 2 105 3 11 4 155 5 199 3 301 6 201 2 13 10 204 1 161 12 164 3 116 2 210 2 308 2 120 3 169 2 213 2 366 2 25 2 215 5 75 1 123 3 78 1 77 1 28 2 34 4 224 2 323 6 226 8 275 1 40 5 329 4 41 2 137 9 235 2 375 1 334 4 335 6 141 1 188 8 189 2 48 1 
0 2 215 1 51 1 34 2 150 2 52 1 105 1 323 5 226 5 155 1 274 1 301 5 275 1 40 1 113 1 360 1 161 6 329 2 206 1 42 1 137 8 282 1 210 2 235 2 334 2 335 3 308 2 169 2 189 1 188 5 313 1 23 1 213 2 366 2 72 1 
0 1 172 1 267 1 34 1 150 2 155 1 156 1 158 1 40 1 329 1 62 1 137 2 304 1 63 1 88 1 377 1 376 1 334 1 117 1 169 2 22 1 283 1 189 1 188 2 340 1 366 1 191 1 192 1 
0 1 329 1 78 1 137 1 375 1 334 1 34 1 308 1 226 1 188 1 
161 10 137 5 210 2 235 2 335 5 150 2 169 2 323 5 226 5 189 1 188 5 213 2 301 5 201 1 366 2 
308 1 40 1 215 1 105 1 226 1 155 1 
0 2 216 1 215 4 123 4 367 1 342 1 268 1 146 2 148 4 34 2 350 1 243 1 52 2 105 2 11 1 155 3 199 1 275 2 302 1 13 1 204 2 328 1 40 3 329 2 164 4 137 2 334 1 236 1 188 2 
123 1 172 3 342 1 145 1 346 1 79 1 148 1 297 1 298 1 56 1 11 1 199 1 230 1 204 1 13 1 231 1 164 1 62 3 63 2 304 2 165 1 88 1 255 1 376 2 183 1 120 1 67 1 121 1 95 1 263 1 191 2 96 2 
0 1 161 4 329 1 137 1 317 1 335 2 334 1 34 1 308 2 52 1 323 2 226 4 188 2 301 2 275 1 
279 1 280 1 353 1 
279 1 280 1 353 1 
289 1 187 1 280 1 240 1 353 1 
279 1 280 1 353 1 
45 1 280 1 353 1 
45 1 280 1 353 1 
45 1 280 1 353 1 
280 1 353 1 
357 1 125 1 
286 2 317 1 51 1 297 1 8 1 298 1 35 4 249 2 206 1 42 1 282 1 255 1 332 1 92 1 169 1 22 1 67 4 121 8 366 1 340 1 263 1 96 2 192 1 
286 2 290 1 317 1 51 1 8 1 297 2 298 2 35 6 249 3 206 2 42 1 255 2 282 1 210 1 332 1 44 1 92 1 169 2 22 1 67 5 121 11 314 1 213 1 366 1 340 1 263 2 192 1 96 4 
286 3 290 1 317 1 51 1 297 3 8 1 298 3 35 9 274 1 249 4 360 1 206 1 42 1 282 1 255 3 210 2 235 2 332 1 92 1 378 1 169 3 22 1 67 10 313 1 23 1 121 19 314 1 213 2 340 1 366 3 263 3 192 1 96 6 
286 3 290 2 317 1 51 1 297 3 8 1 298 3 35 10 274 1 249 5 360 1 206 1 42 1 282 1 255 3 210 2 235 1 332 1 92 1 378 1 169 3 22 1 67 7 313 1 23 1 121 17 314 1 213 2 340 1 366 2 263 3 192 1 96 6 
286 2 317 1 51 1 297 1 8 1 298 1 35 4 249 2 206 1 42 1 282 1 255 1 332 1 92 1 169 1 22 1 67 4 121 8 366 1 340 1 263 1 96 2 192 1 
286 1 290 1 51 1 297 1 8 1 298 1 35 6 274 1 249 2 360 1 206 1 42 1 282 1 255 1 210 2 235 2 169 2 67 6 313 1 23 1 121 12 213 2 366 2 263 1 96 2 
286 3 290 2 317 1 51 1 297 4 8 1 298 4 35 10 274 1 249 5 360 1 206 1 42 1 255 4 282 1 210 2 235 1 332 1 92 1 378 2 169 3 22 1 67 8 313 1 23 1 121 18 314 1 213 2 340 1 366 2 263 4 192 1 96 8 
286 3 290 3 51 1 8 1 297 4 298 4 35 9 274 1 249 6 360 1 206 1 42 1 255 4 282 1 210 3 235 2 378 2 169 3 67 7 313 1 23 1 121 16 213 3 339 1 366 2 263 4 96 8 
286 3 249 6 290 3 332 1 92 2 169 1 22 3 67 4 35 3 121 7 366 1 340 1 192 3 
286 3 290 1 317 1 51 1 8 1 297 4 298 4 35 10 274 1 249 4 360 1 206 1 42 1 255 4 282 1 210 2 235 1 332 1 92 1 378 2 169 3 22 1 67 8 313 1 23 1 121 18 213 2 340 1 339 1 366 2 263 4 192 1 96 8 
286 2 249 3 290 1 255 2 317 1 332 1 297 2 298 2 378 1 92 1 169 1 22 1 67 4 35 4 121 8 366 1 340 1 263 2 96 4 192 1 
286 2 249 2 252 1 317 1 332 1 92 1 169 1 22 1 67 3 35 3 121 6 340 1 366 1 192 1 
286 1 249 2 290 1 255 1 210 1 235 1 297 1 298 1 169 1 67 2 35 2 121 4 314 1 213 1 366 1 263 1 96 2 
286 1 249 2 206 2 42 1 290 1 282 1 210 1 235 1 44 1 169 1 67 4 35 3 121 7 213 1 366 1 
286 5 290 4 317 1 102 1 151 1 297 2 298 2 35 11 85 1 249 9 206 2 282 2 255 2 210 2 235 2 332 1 44 1 92 1 378 2 169 3 22 2 67 12 121 23 213 2 340 1 366 3 263 2 192 2 96 4 
206 1 67 1 121 1 
282 1 35 1 121 1 
286 2 249 3 290 1 255 1 210 1 235 1 297 1 298 1 169 1 67 3 35 3 121 6 314 1 213 1 201 1 366 1 263 1 96 2 
286 1 290 1 51 1 297 1 8 1 298 1 35 6 274 1 249 2 360 1 206 1 42 1 282 1 255 1 210 2 235 2 169 2 67 6 313 1 23 1 121 12 213 2 366 2 263 1 96 2 
286 1 249 2 290 1 169 1 22 1 67 3 35 3 121 6 340 1 366 1 192 1 
286 1 249 2 290 1 255 1 102 1 332 1 297 1 92 1 378 1 298 1 22 1 67 2 35 1 121 3 263 1 192 1 96 2 
286 3 249 5 290 2 255 1 297 1 8 1 298 1 117 1 169 2 22 2 67 5 35 5 121 10 340 1 366 2 263 1 96 2 192 2 
249 1 290 1 255 1 210 1 8 1 297 1 298 1 169 1 35 2 121 2 263 1 96 2 
286 1 249 2 290 1 255 1 210 1 235 1 8 1 297 1 298 1 169 1 67 2 35 2 121 4 213 1 366 1 263 1 96 2 
286 1 249 2 290 1 255 3 102 1 8 1 297 3 378 1 298 3 22 1 67 2 35 1 121 3 339 1 263 3 96 6 192 1 
286 7 290 5 317 1 102 1 297 5 8 1 298 5 35 16 84 1 249 12 206 4 42 1 255 5 282 3 210 3 235 3 332 1 44 1 258 1 92 1 378 2 119 1 169 5 22 3 67 18 121 34 314 1 213 3 340 2 339 1 366 5 263 5 192 3 96 10 
260 1 231 1 172 1 273 1 62 1 63 1 207 1 
59 1 231 1 172 1 97 1 62 1 207 1 63 1 241 1 177 1 260 1 273 1 203 1 
302 1 13 1 328 1 204 1 123 1 342 1 252 1 164 1 11 1 199 1 148 1 
13 1 204 1 231 1 172 2 123 1 62 2 164 1 342 1 304 1 63 1 79 1 376 1 103 1 148 1 120 1 11 1 199 1 230 1 
123 1 172 2 342 1 79 1 146 1 148 1 103 1 11 1 199 2 230 1 13 3 231 1 164 1 62 2 63 2 304 1 116 1 16 1 376 2 377 1 120 2 69 1 25 1 
123 2 172 2 342 1 6 1 79 1 146 1 148 2 103 1 11 1 199 2 83 1 13 3 231 1 164 2 62 2 63 2 304 1 116 1 16 1 376 2 377 1 120 2 69 1 25 1 
194 1 237 1 215 1 123 3 342 1 344 1 146 1 148 3 224 1 226 1 155 2 11 1 198 1 199 1 83 1 13 4 204 1 40 2 164 3 116 1 308 1 120 1 25 1 
237 1 194 1 204 1 13 4 40 2 215 1 123 3 164 3 342 1 116 1 5 1 146 1 148 3 308 1 120 1 224 1 226 1 11 1 155 2 199 1 25 1 83 1 
123 1 115 1 342 1 164 1 11 1 148 1 
134 1 204 2 13 3 122 1 75 1 123 7 115 1 164 7 342 2 347 1 148 6 352 1 299 1 311 1 120 1 245 1 11 3 12 1 190 1 199 2 48 1 
286 2 342 1 292 1 346 2 148 1 103 1 297 2 298 2 55 1 56 1 11 1 199 1 13 1 249 2 164 1 62 2 165 1 304 1 63 1 255 2 120 1 169 1 212 1 22 1 67 3 121 6 366 1 263 2 123 1 75 1 172 2 29 1 317 1 370 1 79 1 319 1 35 3 230 1 39 1 231 2 332 1 376 1 183 2 92 1 340 1 96 4 192 1 
288 1 0 2 194 1 237 1 215 2 123 1 78 1 5 1 32 1 295 1 148 1 34 2 350 1 224 1 105 1 226 1 155 3 204 1 13 2 40 3 329 2 164 1 41 1 137 1 375 1 334 2 308 1 188 1 
13 2 75 1 123 2 115 1 164 2 342 1 148 2 149 1 224 1 120 1 11 2 199 1 48 1 
302 1 204 1 328 1 13 1 123 4 75 1 164 4 342 1 343 1 148 4 11 1 199 1 83 1 
13 1 122 1 123 2 164 2 342 1 291 1 146 1 148 2 181 1 120 1 11 2 12 1 109 1 199 1 
316 1 204 1 118 1 123 1 174 1 342 1 164 1 30 1 11 1 148 1 
13 1 75 1 123 2 164 2 342 1 347 1 148 2 271 1 352 1 11 1 199 1 
302 1 328 1 204 1 13 3 123 5 75 1 164 5 342 2 343 1 146 1 347 1 148 4 299 1 245 1 11 2 199 2 
302 1 328 1 204 1 13 3 123 5 75 1 164 5 342 2 343 1 138 1 146 1 347 1 148 4 245 1 11 2 199 2 
13 1 204 1 231 1 172 2 123 1 62 2 164 1 342 1 304 1 63 1 79 1 6 1 376 1 103 1 148 1 120 1 11 1 199 1 
13 1 122 1 123 1 164 1 342 1 146 1 148 1 311 1 120 1 11 2 12 1 199 1 48 1 
57 1 172 1 62 1 63 1 209 1 242 1 364 1 202 1 71 1 
61 1 246 1 209 1 
57 1 185 1 231 1 209 1 202 1 
57 2 237 1 40 2 231 1 61 1 209 1 16 1 32 1 176 1 377 1 66 1 308 1 185 2 226 1 246 1 155 2 69 1 93 1 202 2 
252 1 331 1 171 1 356 1 
127 1 214 1 330 1 140 1 331 1 171 1 356 1 
127 1 321 1 110 1 
73 1 26 1 160 1 214 1 330 3 331 1 127 3 140 1 284 1 171 1 324 2 356 1 
127 2 214 1 330 2 196 1 114 1 140 1 331 1 171 1 356 1 
316 1 214 1 330 1 30 1 320 1 127 1 54 1 140 1 284 1 36 1 356 1 
127 1 214 1 330 1 140 1 331 1 284 1 356 1 
127 1 214 1 330 1 140 1 331 2 284 1 171 1 
127 2 214 2 330 2 337 1 140 2 331 1 124 1 284 1 167 1 356 1 
214 1 330 3 87 1 331 1 348 1 320 1 127 3 139 1 140 1 196 2 284 1 171 1 356 2 
316 2 214 1 330 2 174 1 331 1 30 1 127 2 140 1 196 1 142 1 284 1 36 1 171 1 276 1 356 1 
214 2 330 4 114 1 331 1 320 1 127 4 139 1 140 2 196 2 170 1 284 1 171 1 356 2 
127 1 214 1 330 1 140 1 331 1 284 1 171 1 356 1 
73 1 26 1 214 1 136 1 330 4 331 2 320 1 127 4 139 1 196 2 140 1 171 2 324 1 356 3 
214 1 330 2 331 1 127 2 351 1 336 1 140 1 196 1 228 1 284 1 171 1 356 1 
73 1 26 2 214 1 330 3 331 1 127 3 140 1 284 1 171 1 200 1 324 2 356 1 
112 1 154 1 37 2 356 2 
89 1 127 1 214 1 330 1 140 1 284 1 
127 2 214 1 87 1 330 2 196 1 140 1 331 1 284 1 171 1 356 1 
107 1 
127 1 214 1 330 1 140 1 331 1 284 1 171 1 356 1 
214 1 330 3 87 1 331 1 127 3 196 1 140 1 284 1 171 1 324 1 356 1 
320 1 136 1 139 1 356 1 
331 1 356 1 

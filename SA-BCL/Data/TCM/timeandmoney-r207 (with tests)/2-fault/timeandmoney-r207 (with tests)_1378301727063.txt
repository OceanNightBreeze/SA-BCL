#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 315 (66,145) (66,145) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 315 (66,145) (66,145) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 315 (66,145) (66,145) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 315 (66,145) (66,145) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 315 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 315 158 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 315 158 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (103,107,157,338) (103,107,157,338) 328 71 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
328 1 315 1 264 2 157 4 10 1 188 2 231 2 232 1 68 1 337 1 338 7 107 2 299 6 119 1 313 1 353 1 260 1 225 1 145 1 66 1 40 1 278 2 103 2 184 1 
328 1 315 1 264 2 157 4 10 1 188 2 231 2 68 1 232 1 337 1 338 7 107 2 299 6 119 1 313 1 353 1 260 1 225 1 145 1 66 1 40 1 278 2 103 2 184 1 
328 1 315 1 264 2 157 4 10 1 188 2 231 2 68 1 232 1 337 1 338 7 107 2 299 6 119 1 313 1 353 1 260 1 225 1 145 1 66 1 40 1 278 2 103 2 184 1 
328 1 315 1 264 2 157 4 10 1 188 2 231 2 68 1 232 1 337 1 338 7 107 2 299 6 119 1 313 1 353 1 260 1 225 1 145 1 66 1 40 1 278 2 103 2 184 1 
328 1 315 1 157 1 338 2 107 1 103 1 299 1 313 1 
264 1 188 1 68 1 338 2 107 1 299 2 313 1 273 1 225 1 295 1 40 1 103 1 307 1 289 1 105 1 184 1 
264 1 157 1 188 2 231 1 338 3 107 2 299 3 313 1 273 1 353 1 278 1 103 2 105 1 
328 1 315 1 264 1 169 1 157 5 188 2 158 1 231 2 337 1 338 7 107 2 299 6 313 1 353 1 260 1 278 2 103 2 
328 1 315 1 264 1 169 1 157 5 188 2 158 1 231 2 337 1 338 7 107 2 299 6 313 1 353 1 260 1 278 2 103 2 
95 1 248 1 274 1 
274 1 15 1 223 2 
115 1 310 2 52 2 370 2 86 2 132 2 254 2 297 1 
230 1 357 1 57 1 201 1 159 1 132 2 86 3 64 1 87 1 261 1 137 1 366 1 263 1 139 1 115 1 310 2 170 1 91 1 370 2 171 1 118 1 19 1 377 1 330 2 22 1 49 1 192 2 52 2 355 2 275 1 380 1 276 2 356 1 31 2 155 1 254 3 297 1 
369 1 310 1 52 1 370 1 86 1 130 1 132 1 326 1 254 1 297 1 
197 1 0 1 255 1 215 1 95 1 274 1 52 1 72 1 86 1 98 1 149 1 326 1 43 1 254 1 
197 1 0 1 255 2 310 1 215 1 370 1 132 1 95 1 274 1 52 1 86 1 98 1 326 1 43 2 254 1 
255 1 242 1 354 1 99 1 43 1 
255 2 95 1 274 1 354 1 360 1 99 1 43 2 204 1 
255 1 354 1 43 1 
255 1 187 1 369 1 310 1 370 1 130 1 132 1 52 1 86 1 99 1 326 1 43 1 297 1 254 1 
274 1 
255 2 95 1 274 1 354 1 360 1 99 1 32 1 43 2 
255 5 335 1 1 1 256 2 116 1 168 1 360 1 216 1 268 1 18 1 95 1 124 2 274 1 354 2 193 1 165 2 99 2 166 1 43 5 
115 1 248 1 
115 2 310 1 370 1 132 1 234 1 293 1 52 2 86 2 254 2 
371 1 323 1 283 1 
139 1 115 1 57 1 170 1 171 1 330 1 22 1 49 1 192 1 355 1 380 1 86 1 306 1 87 1 366 1 254 1 
139 1 57 1 310 1 170 1 370 1 283 1 218 1 171 1 330 1 22 1 49 1 111 1 192 1 52 1 355 1 380 1 86 2 87 1 366 1 254 2 
115 1 111 1 310 3 52 3 370 3 86 3 132 1 254 3 
310 1 52 1 370 1 86 1 130 1 326 1 254 1 
310 1 52 1 370 1 86 1 132 1 326 1 234 1 293 1 254 1 
230 1 197 1 0 1 255 1 357 1 57 1 201 1 159 1 132 2 234 1 111 1 320 1 86 4 87 1 137 1 366 1 326 1 43 1 139 1 115 1 215 1 310 3 170 1 91 1 370 3 218 1 171 1 118 1 377 1 330 1 22 1 25 1 49 1 192 1 52 3 355 1 275 1 380 1 276 1 356 1 98 1 31 2 254 4 297 1 
115 1 111 1 310 1 52 2 370 1 72 1 86 2 142 1 254 2 
255 1 0 1 197 1 310 3 215 1 370 3 218 1 132 1 234 1 143 1 274 1 111 2 320 1 52 3 86 3 98 1 326 1 43 1 254 3 
310 2 371 1 370 2 283 1 132 1 234 1 111 1 52 2 86 2 254 2 
139 1 115 1 57 1 170 1 171 1 330 1 22 1 49 1 192 1 355 1 380 1 86 1 87 1 366 1 254 1 
139 1 115 1 170 1 178 1 171 1 330 1 22 1 49 1 192 1 355 1 86 1 38 1 87 1 366 1 254 1 
230 1 357 1 79 1 283 2 161 1 303 1 323 2 261 2 137 1 348 1 114 1 309 1 91 1 371 2 217 1 93 1 118 1 312 1 377 2 356 1 276 4 31 2 126 1 55 1 
197 1 310 1 52 1 370 1 86 1 141 1 326 1 254 1 
115 1 310 4 370 4 218 1 132 1 234 1 142 1 94 1 111 2 238 1 52 5 72 1 86 5 254 5 
310 2 52 2 370 2 86 2 130 1 141 1 326 1 254 2 
329 1 325 1 
329 1 325 1 
189 1 108 1 
189 1 108 1 
189 1 108 1 
329 1 325 1 104 1 
329 1 325 1 104 1 
329 1 325 1 104 1 
329 1 343 1 325 1 
11 1 329 1 325 1 
35 1 189 1 329 2 17 1 325 2 108 1 
329 1 343 1 325 1 
329 1 343 1 325 1 
255 2 349 3 176 2 329 2 17 1 162 1 60 1 61 1 190 2 109 1 62 2 274 1 146 2 226 2 334 1 381 1 325 2 182 1 43 2 
255 1 82 1 109 1 205 1 62 1 341 1 86 2 325 1 43 1 349 1 115 1 310 2 329 1 11 1 370 2 190 1 96 1 294 1 146 1 52 2 226 1 100 1 254 2 156 1 
225 1 232 1 40 1 
225 1 40 1 307 1 
123 1 225 3 232 2 307 1 269 1 221 1 
225 2 232 1 67 1 307 1 269 1 221 1 
225 2 232 1 307 1 269 1 221 2 
255 5 256 1 79 1 34 1 360 1 6 2 362 1 165 1 37 1 166 1 43 5 348 1 9 2 327 2 211 1 116 3 15 1 312 1 223 3 96 1 95 1 124 1 191 1 354 1 274 2 294 1 193 2 99 4 55 1 296 1 156 1 196 1 
255 9 256 2 79 3 360 1 362 3 339 1 287 1 319 1 165 2 344 1 166 1 43 9 348 3 9 6 327 6 211 2 242 5 168 1 116 8 12 1 15 3 312 3 223 9 245 5 95 1 124 2 191 2 294 4 354 6 274 5 379 1 193 6 99 7 55 3 196 1 
255 3 256 1 79 1 6 1 362 1 37 1 165 1 43 3 348 1 327 2 9 2 211 1 168 1 116 3 15 2 312 1 223 4 95 1 124 1 191 1 274 3 294 1 193 2 99 2 55 1 296 1 
255 4 256 1 79 2 6 2 362 2 287 1 319 1 165 1 37 1 344 1 43 4 348 2 9 4 327 4 211 1 168 1 116 5 15 3 312 2 223 7 95 1 124 1 191 1 274 4 294 2 193 4 99 3 55 2 296 1 
248 1 366 1 133 1 
366 1 76 1 
85 1 
139 1 366 1 
139 1 378 1 26 1 87 1 133 2 366 3 
139 1 87 1 366 1 
366 1 367 1 
114 2 243 1 282 1 219 1 5 2 377 3 312 1 352 1 20 1 272 1 276 7 324 1 126 3 55 1 261 4 308 1 138 1 
114 2 243 1 282 1 219 1 5 2 377 3 312 1 352 1 20 1 272 1 276 7 324 1 126 3 55 1 261 4 308 1 138 1 
114 2 243 1 282 1 219 1 5 2 377 3 312 1 352 1 20 1 272 1 148 1 276 7 324 1 126 3 55 1 261 4 308 1 138 1 
230 1 357 1 316 4 79 3 282 2 317 1 257 1 5 3 362 3 135 1 324 1 208 1 210 3 261 16 138 1 308 2 348 3 114 5 243 1 91 1 16 1 219 2 118 1 20 1 377 15 352 5 312 4 272 2 276 31 31 2 126 10 150 1 55 4 195 1 
314 1 230 2 357 2 282 1 5 2 324 1 261 5 88 1 308 1 138 1 114 3 243 1 91 2 219 1 118 2 312 1 377 4 352 1 272 1 276 9 31 4 126 4 55 1 195 1 
128 1 157 1 232 1 338 2 107 1 83 1 299 2 7 1 40 1 307 1 212 1 264 1 188 1 140 1 330 1 21 1 313 1 22 1 121 1 49 1 123 1 273 1 192 1 225 2 355 1 151 1 75 1 103 1 153 1 105 1 
128 1 157 2 359 1 232 1 338 3 107 1 83 1 299 3 7 1 40 1 307 1 212 1 186 1 264 1 188 1 140 1 330 1 22 1 123 1 49 1 273 1 192 1 225 2 355 1 30 1 151 1 75 1 103 1 153 1 105 1 
186 1 212 1 264 1 157 2 188 1 232 1 140 1 338 2 83 1 299 2 330 1 22 1 7 1 123 1 49 1 273 1 192 1 225 2 355 1 30 1 151 1 40 1 307 1 153 1 105 1 
139 1 212 2 280 1 298 1 264 2 359 1 171 1 338 1 107 1 270 1 299 1 330 1 22 1 7 2 49 1 192 1 355 1 151 2 366 1 42 1 183 1 103 1 175 1 
212 1 128 1 264 1 232 1 140 1 338 1 107 1 83 1 21 1 299 1 330 1 22 1 313 1 7 1 123 1 49 1 192 1 225 2 355 1 30 1 151 1 40 1 75 1 307 1 153 1 103 1 
259 1 
255 5 197 1 0 1 199 2 256 1 2 1 300 2 112 1 305 4 165 1 65 2 166 1 167 1 116 2 215 1 13 1 15 2 171 2 223 2 23 1 22 1 124 1 274 2 354 6 355 2 72 1 175 1 78 2 360 3 81 2 131 1 86 1 39 1 41 2 42 1 366 1 326 1 43 5 240 1 89 1 139 1 44 1 291 1 330 2 95 1 49 1 191 1 192 2 50 2 333 1 52 1 193 2 98 1 149 1 254 1 
0 1 197 1 255 3 89 1 199 1 215 1 360 1 13 1 2 1 354 2 305 2 112 1 333 1 52 1 72 1 86 1 98 1 32 1 149 1 326 1 43 3 254 1 
255 3 197 1 0 1 2 1 360 1 300 1 112 1 305 3 86 1 326 1 43 3 89 1 215 1 13 1 95 1 354 1 274 1 52 1 333 1 72 1 98 1 149 1 32 1 254 1 
255 3 197 1 0 1 199 1 360 1 2 1 300 1 112 1 305 3 86 1 65 1 326 1 43 3 89 1 215 1 13 1 95 1 354 2 274 1 52 1 333 1 72 1 98 1 32 1 149 1 254 1 
0 1 197 1 255 5 199 4 256 1 2 1 300 4 305 6 112 1 165 1 65 4 166 1 167 1 350 1 215 1 116 1 13 1 15 2 69 1 124 1 354 7 274 5 72 1 32 1 78 2 360 3 81 2 180 1 86 1 41 2 326 1 43 5 89 1 44 1 95 5 331 1 144 1 50 2 333 1 52 1 193 1 98 1 149 1 254 1 
255 4 197 1 0 1 199 2 78 2 256 1 360 2 2 1 81 2 300 2 112 1 305 4 165 1 86 1 39 1 65 2 41 2 166 1 326 1 43 4 167 1 89 1 44 1 116 1 215 1 13 1 15 2 223 2 95 1 124 1 274 2 354 4 50 2 333 1 52 1 193 1 72 1 98 1 149 1 254 1 
255 4 197 1 0 1 199 2 78 2 256 1 360 2 2 1 81 2 300 2 112 1 305 4 86 1 165 1 65 2 41 2 326 1 166 1 43 4 167 1 89 1 350 1 44 1 116 1 215 1 13 1 15 2 95 1 331 1 124 1 274 1 354 4 144 1 50 2 52 1 333 1 193 1 72 1 98 1 149 1 254 1 
255 4 197 1 0 1 199 2 78 2 256 1 360 2 2 1 81 2 300 2 112 1 305 4 86 1 165 1 65 2 41 2 326 1 166 1 43 4 167 1 89 1 350 1 44 1 116 1 215 1 13 1 15 2 95 1 331 1 124 1 274 1 354 4 144 1 50 2 52 1 333 1 193 1 72 1 98 1 149 1 254 1 
255 4 197 1 0 1 199 2 78 2 256 1 360 2 2 1 233 2 300 2 112 1 305 4 304 1 86 1 165 1 65 2 326 1 166 1 43 4 167 1 89 1 116 1 215 1 13 1 117 1 223 2 244 2 95 1 331 1 124 1 274 1 354 4 50 2 52 1 333 1 125 1 193 1 72 1 98 1 149 1 254 1 
255 4 197 1 0 1 78 2 199 3 256 1 360 2 2 1 81 2 300 3 112 1 305 5 165 1 86 1 65 3 41 2 166 1 326 1 43 4 167 1 89 1 350 1 44 1 116 1 215 1 13 1 15 2 69 1 95 1 331 1 124 1 274 1 144 1 354 5 50 2 52 1 333 1 193 1 72 1 98 1 149 1 254 1 
255 4 197 1 0 1 78 2 199 3 256 1 360 2 2 1 81 2 300 3 112 1 305 5 165 1 86 1 65 3 41 2 166 1 326 1 43 4 167 1 89 1 350 1 44 1 116 1 215 1 13 1 15 2 69 1 95 1 331 1 124 1 274 1 144 1 354 5 50 2 52 1 333 1 193 1 72 1 98 1 149 1 254 1 
255 4 197 1 0 1 199 2 78 2 256 1 360 2 2 1 233 2 300 2 112 1 305 4 165 1 86 1 39 1 65 2 166 1 326 1 43 4 167 1 89 1 116 1 215 1 13 1 117 1 223 2 244 2 95 1 124 1 274 1 354 4 50 2 333 1 52 1 193 1 72 1 98 1 149 1 254 1 
230 1 357 1 283 1 5 1 303 1 323 1 324 1 261 3 137 1 138 1 114 2 115 2 243 1 371 1 91 1 219 1 118 1 312 1 377 3 272 1 248 1 356 1 276 6 31 2 126 2 55 1 
230 2 357 2 316 3 79 2 283 11 362 2 323 11 208 1 210 3 261 8 137 2 348 1 114 1 115 1 213 1 91 2 371 4 16 1 267 1 118 2 19 1 375 1 352 1 377 6 312 1 275 1 356 1 276 14 31 4 126 2 55 2 77 1 56 1 
230 1 357 1 57 1 58 1 111 1 86 2 87 1 306 1 261 1 366 1 137 1 139 1 115 1 310 1 170 1 371 1 91 1 370 1 218 1 374 1 171 1 118 1 19 1 330 1 377 1 22 1 271 1 49 1 192 1 355 1 52 1 380 1 275 1 356 1 276 2 31 2 56 1 254 2 
57 2 159 2 5 1 160 2 111 1 63 2 209 1 261 10 348 2 114 4 115 2 310 1 170 2 218 1 219 1 171 1 70 1 118 3 19 1 312 3 352 4 22 2 272 1 355 3 27 1 275 1 30 1 356 3 276 20 31 6 126 8 230 3 357 3 79 2 283 7 362 2 288 2 86 3 323 7 87 2 324 1 137 3 366 2 138 1 139 2 243 1 370 1 91 3 371 7 377 10 330 3 49 2 192 3 52 1 250 2 380 2 55 3 254 3 56 1 
230 2 200 1 357 2 84 1 237 1 111 1 303 1 342 1 86 1 261 1 366 3 137 2 42 1 8 1 139 2 90 1 310 1 311 1 370 1 91 2 171 2 118 2 19 1 330 8 377 1 22 2 121 1 49 2 192 8 52 1 355 7 275 1 30 1 356 2 276 2 31 4 254 1 155 2 175 1 
230 1 357 1 79 1 177 1 283 1 132 1 234 1 362 1 323 1 86 1 261 1 137 1 348 1 114 1 310 1 371 1 91 1 370 1 118 1 312 1 377 2 52 1 356 1 276 3 31 2 126 1 55 1 56 1 254 1 
230 1 357 1 79 1 371 1 91 1 283 1 118 1 161 1 352 1 303 1 323 1 276 2 356 1 31 2 126 1 55 1 261 2 137 1 
114 1 230 1 357 1 309 1 371 1 91 1 283 1 118 1 312 1 377 2 303 1 323 1 276 2 356 1 31 2 126 1 137 1 348 1 
230 1 357 1 79 1 283 2 362 1 303 1 323 2 261 2 137 1 348 1 114 1 91 1 371 2 118 1 352 1 312 1 377 2 356 1 276 4 31 2 126 2 55 1 
230 1 357 1 79 1 371 1 91 1 283 1 118 1 161 1 352 1 342 1 323 1 276 2 356 1 31 2 126 1 55 1 261 2 137 1 
114 1 230 1 357 1 309 1 371 1 91 1 283 1 118 1 312 1 377 2 342 1 323 1 276 2 356 1 31 2 126 1 137 1 348 1 
230 1 357 1 79 1 283 2 362 1 342 1 323 2 261 2 137 1 348 1 114 1 91 1 371 2 118 1 352 1 312 1 377 2 356 1 276 4 31 2 126 2 55 1 
230 1 357 1 79 1 283 2 362 1 323 2 261 2 137 1 348 1 114 1 91 1 371 2 118 1 352 1 312 1 377 2 276 4 356 1 31 2 126 2 55 1 
230 1 357 1 57 1 159 1 86 1 87 1 261 1 366 1 137 1 139 1 115 1 170 1 91 1 171 1 118 1 19 1 330 1 377 1 22 1 49 1 192 1 355 1 380 1 275 1 276 2 356 1 31 2 254 1 
230 1 357 1 178 1 86 1 87 1 38 1 261 1 366 1 137 1 139 1 115 1 170 1 91 1 171 1 220 1 118 1 19 1 330 1 377 1 22 1 49 1 192 1 355 1 275 1 276 2 356 1 31 2 254 1 
230 1 357 1 79 1 283 2 362 1 323 2 261 2 137 1 348 1 114 1 91 1 371 2 118 1 352 1 312 1 377 2 356 1 276 4 31 2 126 2 55 1 56 1 
230 1 357 1 79 1 57 1 283 2 159 1 160 1 362 1 323 2 86 1 87 1 261 2 366 1 137 1 348 1 114 1 139 1 170 1 371 2 91 1 118 1 377 2 312 1 352 1 330 1 22 1 121 1 49 1 192 1 355 1 380 1 276 4 356 1 31 2 126 2 55 1 254 1 
230 1 357 1 79 1 283 1 4 1 132 1 234 1 362 1 86 1 323 1 261 2 137 1 348 1 310 1 91 1 370 1 371 1 118 1 377 1 312 1 352 1 52 1 356 1 276 3 31 2 126 1 55 1 56 1 254 1 
230 2 357 2 316 2 79 3 258 2 362 3 340 1 134 1 207 1 208 1 210 1 261 9 88 1 348 3 114 3 45 1 91 2 16 1 351 1 118 2 377 10 352 3 312 3 222 1 73 1 276 19 31 4 126 6 55 3 229 2 
230 3 357 3 316 2 80 1 79 3 258 1 236 1 362 3 134 2 207 1 261 14 210 2 88 1 348 2 114 2 91 3 351 2 16 2 118 3 352 2 312 2 377 12 222 1 97 1 73 1 276 26 31 6 253 1 126 4 152 1 195 2 127 1 55 3 229 4 
5 1 258 1 340 1 207 1 208 1 261 20 210 3 348 4 114 4 351 2 16 3 219 1 118 3 312 5 352 4 222 1 272 1 73 1 276 41 31 6 126 8 127 1 229 4 230 3 357 3 316 4 79 4 80 1 236 1 362 4 134 1 324 1 181 1 88 1 138 1 243 1 91 3 377 21 97 1 253 1 152 1 55 5 195 1 
230 4 357 4 316 4 80 1 79 4 5 1 258 1 236 1 362 4 340 1 134 1 207 1 324 1 208 1 181 1 210 3 261 20 88 1 138 1 348 3 114 4 243 1 91 4 16 3 351 2 219 1 118 4 377 18 352 3 312 4 222 1 272 1 97 1 73 1 276 38 31 8 253 1 126 7 152 1 195 2 127 1 55 5 229 4 
230 2 357 2 316 4 80 1 79 7 5 1 258 1 236 1 362 7 134 1 207 1 324 1 208 2 210 4 261 27 88 1 138 1 348 7 114 7 243 1 91 2 16 2 351 1 219 1 118 2 377 25 352 7 312 8 222 1 272 1 97 1 73 1 276 52 31 4 253 1 126 14 152 1 195 1 127 1 55 8 229 4 77 2 
62 1 214 1 146 1 329 1 226 1 17 1 325 1 182 1 162 1 190 1 
11 1 341 1 
62 1 301 1 336 1 146 1 329 1 226 1 113 1 325 1 190 1 
255 1 349 2 176 1 329 1 17 1 162 1 60 1 109 1 190 1 62 1 274 1 146 1 226 1 334 1 381 1 325 1 182 1 43 1 
255 1 349 2 176 1 329 1 17 1 162 1 60 1 109 1 190 1 62 1 274 1 146 1 226 1 334 1 381 1 325 1 182 1 43 1 
255 1 349 2 176 1 329 1 17 1 162 1 60 1 109 1 190 1 62 1 274 1 146 1 226 1 334 1 381 1 325 1 182 1 43 1 
35 1 266 1 104 1 
35 1 266 1 104 1 
249 1 343 1 
35 1 249 1 343 1 
82 1 205 1 
176 1 255 1 82 1 205 1 62 1 36 1 341 1 86 2 325 1 43 1 349 1 115 1 310 2 329 1 11 1 370 2 190 1 96 1 294 1 146 1 52 2 226 1 334 1 99 1 100 1 254 2 156 1 
266 1 104 1 
35 1 249 1 343 1 
230 1 357 1 129 1 284 1 203 1 237 1 322 1 86 2 261 1 366 1 137 1 139 1 90 1 91 1 118 1 19 1 330 2 377 1 22 1 49 1 122 1 192 2 52 2 355 2 275 1 356 1 276 2 31 2 56 1 254 2 155 2 
358 1 232 1 140 1 330 2 22 1 7 1 121 1 123 1 49 1 110 1 192 2 225 2 355 2 30 1 74 1 40 1 75 1 307 1 153 1 
232 1 140 1 330 1 22 1 7 1 123 1 49 1 110 1 192 1 225 2 355 1 30 1 28 1 40 1 75 1 307 1 153 1 
139 1 280 1 171 1 330 1 22 1 7 1 49 1 192 1 355 1 163 1 74 1 366 1 42 1 175 1 
358 1 232 1 140 1 330 1 22 1 7 1 123 1 49 1 110 1 192 1 225 2 355 1 30 1 74 1 40 1 75 1 307 1 153 1 
33 1 
95 1 248 1 274 1 116 1 193 1 216 1 268 1 
255 1 256 1 360 1 81 1 165 1 41 1 166 1 43 1 44 1 116 1 15 1 223 1 95 1 124 1 274 2 354 1 193 1 
0 2 255 5 256 3 3 1 165 3 166 3 348 2 9 6 116 8 15 6 171 1 312 2 22 2 223 12 124 3 354 5 274 7 355 1 76 3 281 2 79 2 360 3 361 2 133 2 285 1 362 2 288 2 87 1 366 6 43 5 368 2 327 6 139 1 291 1 47 2 373 1 330 1 95 1 49 1 191 2 192 1 378 1 193 7 54 2 55 2 
255 1 316 1 256 2 80 1 79 2 360 1 179 1 236 1 362 2 165 2 136 1 210 1 166 2 43 1 348 2 9 5 327 5 291 1 116 8 15 3 16 1 312 2 223 6 97 1 95 2 191 1 124 2 354 1 274 5 53 1 193 5 194 2 253 1 127 1 55 2 
255 1 256 1 130 1 179 1 132 1 86 1 165 1 326 1 166 1 43 1 187 1 369 1 243 1 116 2 310 1 370 1 219 1 376 1 312 1 272 1 124 1 144 1 52 1 193 2 194 2 55 2 254 1 297 1 
256 1 116 1 216 1 268 1 95 1 124 1 274 1 165 1 193 1 166 1 
327 5 9 5 79 2 116 5 15 5 312 2 223 10 362 2 274 5 288 1 193 5 55 2 348 2 
255 1 95 1 274 1 354 1 360 1 43 1 
255 3 256 2 360 2 131 1 318 1 165 2 365 1 366 1 166 1 42 1 43 3 185 1 139 1 291 2 168 1 116 2 171 2 330 4 22 1 23 1 49 1 124 2 191 2 192 4 354 4 51 2 355 4 193 2 175 1 
230 1 357 1 57 1 201 1 159 1 132 2 86 3 87 1 366 1 137 1 139 1 115 1 310 2 170 1 91 1 370 2 171 1 118 1 377 1 330 1 22 1 49 1 192 1 355 1 52 2 275 1 380 1 276 1 356 1 31 2 254 3 297 1 
9 1 256 1 291 1 116 1 15 1 223 2 95 1 124 1 191 1 274 2 193 1 165 1 166 1 
146 1 226 1 227 1 
146 1 226 1 227 1 
146 1 226 1 227 1 
146 1 226 1 102 1 
247 1 146 1 226 1 182 1 205 1 
146 1 226 1 102 1 
146 1 226 1 102 1 
146 1 226 1 
329 1 325 1 
114 2 230 2 357 2 243 1 91 2 219 1 5 1 118 2 312 1 377 4 352 1 272 1 276 8 31 4 324 1 126 3 55 1 261 4 195 1 138 1 
114 2 243 1 219 1 5 1 377 3 312 1 272 1 248 1 276 6 324 1 126 2 55 1 261 3 138 1 
114 1 230 1 357 1 79 1 91 1 118 1 377 2 312 1 352 1 362 1 29 1 276 4 31 2 126 2 55 1 261 2 348 1 
114 1 316 2 79 1 16 1 312 1 377 4 352 1 362 1 276 7 208 1 126 2 210 1 261 3 55 1 348 1 
230 2 357 2 316 2 79 2 5 1 362 2 324 1 208 1 261 11 210 2 138 1 348 2 114 5 213 1 243 1 91 2 265 1 219 2 118 2 352 4 377 12 312 3 272 2 276 23 31 4 126 9 55 3 195 2 77 1 
316 1 276 1 377 1 
276 1 261 1 210 1 
230 1 114 2 357 1 79 1 91 1 118 1 377 3 352 1 312 1 362 1 288 1 29 1 276 6 31 2 126 3 55 1 261 3 348 1 
230 1 357 1 316 1 80 1 79 2 236 1 362 2 210 1 261 6 88 1 348 2 114 1 91 1 16 1 118 1 352 1 377 6 312 2 97 1 276 12 31 2 126 2 253 1 127 1 55 2 
114 1 243 1 219 1 312 1 377 3 352 1 272 1 276 6 126 2 55 1 261 3 
114 1 230 1 357 1 91 1 265 1 219 1 118 1 352 1 377 2 272 1 276 3 324 1 31 2 126 2 261 1 195 1 138 1 
230 1 114 3 357 1 243 1 91 1 219 2 118 1 376 1 352 2 377 5 312 2 272 2 276 10 31 2 126 5 261 5 55 2 88 1 
230 1 357 1 79 1 91 1 118 1 352 1 276 2 31 2 126 1 55 1 261 2 88 1 
114 1 230 1 357 1 79 1 91 1 118 1 377 2 312 1 352 1 362 1 276 4 31 2 126 2 55 1 261 2 88 1 348 1 
230 3 114 1 357 3 91 3 265 1 219 1 118 3 377 2 352 1 272 1 340 1 276 3 31 6 126 2 195 1 261 1 88 1 
230 5 357 5 316 4 79 3 317 1 5 1 362 3 340 1 135 1 324 1 208 1 210 3 261 16 88 1 138 1 348 3 114 7 243 2 91 5 265 1 16 1 219 3 118 5 377 18 352 5 312 5 272 3 29 1 276 34 31 10 150 1 126 12 195 2 55 5 
230 1 357 1 316 1 80 1 5 1 324 1 210 1 261 4 88 1 138 1 114 2 243 1 91 1 16 1 219 1 118 1 312 1 377 4 272 1 276 8 31 2 126 2 55 1 
230 2 357 2 316 2 80 1 79 1 5 1 362 1 324 1 208 1 210 1 261 6 88 1 138 1 114 2 243 1 91 2 16 1 219 1 118 2 312 1 377 5 352 1 272 1 276 11 29 1 31 4 126 3 55 2 
230 3 357 3 316 1 80 1 79 2 5 1 236 1 362 2 324 1 210 1 261 9 88 1 138 1 348 2 114 3 243 1 91 3 16 1 219 1 118 3 352 1 377 10 312 3 272 1 97 1 29 1 276 19 31 6 126 4 253 1 127 1 55 3 195 1 
230 3 357 3 316 1 80 1 79 2 5 1 236 1 362 2 324 1 210 1 261 10 88 1 138 1 348 1 114 3 243 1 91 3 16 1 219 1 118 3 352 2 377 7 312 2 272 1 97 1 29 1 276 17 31 6 126 5 253 1 195 1 127 1 55 3 
230 1 357 1 316 1 80 1 5 1 324 1 210 1 261 4 88 1 138 1 114 2 243 1 91 1 16 1 219 1 118 1 312 1 377 4 272 1 276 8 31 2 126 2 55 1 
230 1 357 1 316 1 80 1 79 2 236 1 362 2 210 1 261 6 88 1 348 2 114 1 91 1 16 1 118 1 352 1 377 6 312 2 97 1 276 12 31 2 126 2 253 1 127 1 55 2 
230 4 357 4 316 1 80 1 79 2 5 1 236 1 362 2 324 1 210 1 261 10 88 1 138 1 348 1 114 3 243 1 91 4 16 1 219 1 118 4 352 2 377 8 312 2 272 1 97 1 276 18 29 1 31 8 253 1 126 5 127 1 55 3 195 2 
230 4 357 4 316 1 80 1 79 3 236 1 362 3 340 1 210 1 261 9 88 1 348 2 114 3 91 4 16 1 118 4 352 3 377 7 312 2 97 1 276 16 31 8 253 1 126 6 127 1 55 3 195 2 
114 3 243 1 219 3 377 4 312 1 352 3 272 3 276 7 324 2 126 6 55 1 261 3 138 1 
230 4 357 4 316 1 80 1 79 2 5 1 236 1 362 2 340 1 324 1 210 1 261 10 88 1 138 1 348 1 114 3 243 1 91 4 16 1 219 1 118 4 352 1 377 8 312 2 272 1 97 1 276 18 31 8 253 1 126 4 127 1 55 3 195 2 
115 1 52 1 164 1 86 1 72 1 142 1 254 1 
115 1 142 1 206 1 321 1 52 1 164 1 72 1 86 1 277 1 345 1 101 1 254 1 
49 1 139 1 248 1 192 1 355 1 171 1 366 1 42 1 330 1 22 1 175 1 
139 1 115 1 310 1 57 1 170 1 370 1 171 1 330 1 22 1 49 1 111 1 192 1 52 1 355 1 86 2 87 1 366 1 254 2 
197 1 139 2 115 1 310 1 57 1 170 1 370 2 330 1 22 1 49 1 111 1 192 1 52 2 51 1 355 1 86 2 98 1 87 2 228 1 367 1 326 1 366 3 254 2 
197 1 111 1 364 1 86 2 38 1 87 2 366 3 326 1 367 1 139 2 115 1 310 1 170 1 370 2 330 2 22 1 49 1 192 2 355 2 51 1 52 2 98 1 228 1 254 2 
0 1 255 2 139 1 14 1 171 1 133 1 330 3 22 1 120 1 95 1 49 1 274 1 192 3 354 1 51 1 355 3 364 1 87 1 228 1 367 1 76 1 366 4 43 2 
0 1 255 2 139 1 361 1 171 1 133 1 330 3 22 1 95 1 49 1 274 1 192 3 354 1 51 1 355 3 364 1 87 1 228 1 367 1 76 1 366 4 43 2 
49 1 200 1 192 1 355 1 330 1 22 1 
8 1 139 2 200 1 90 1 311 1 171 2 330 7 84 1 22 3 121 1 49 2 192 7 378 1 224 1 355 6 30 1 87 1 174 1 262 1 366 3 155 1 
57 1 159 1 160 1 5 1 111 1 261 3 114 2 115 2 310 1 170 1 219 1 118 2 312 1 22 1 121 1 122 1 272 1 355 1 356 2 276 6 31 4 126 2 230 2 357 2 283 1 86 2 323 1 87 1 324 1 137 2 366 1 138 1 139 1 243 1 371 1 370 1 91 2 330 1 377 3 49 1 192 1 250 1 52 1 380 1 55 1 254 2 56 1 
255 3 0 1 256 2 281 1 360 1 361 1 318 1 133 1 165 2 166 2 366 2 43 3 368 1 116 1 216 1 47 1 171 1 268 1 330 1 95 1 124 2 274 1 192 1 354 2 355 1 193 1 99 1 76 1 
139 1 200 1 3 1 133 1 330 2 22 2 121 1 49 1 192 2 378 1 355 2 87 1 366 2 
139 1 59 1 171 1 330 4 22 1 121 1 49 1 192 4 355 4 364 1 42 1 366 1 175 1 
139 1 330 2 22 2 49 1 192 2 224 1 51 1 355 2 27 1 239 1 87 1 174 1 366 1 154 1 
49 1 192 1 225 1 355 1 171 1 40 1 307 1 153 1 330 1 22 1 
121 1 49 1 139 1 90 1 129 1 192 2 355 2 30 1 366 1 330 2 22 1 
8 1 139 2 90 1 59 1 171 1 330 5 22 2 84 1 121 1 49 2 192 5 51 1 355 4 42 1 366 3 175 1 
139 2 90 1 59 1 171 1 330 5 22 2 84 1 121 1 49 2 192 5 286 1 51 1 355 4 42 1 366 3 175 1 
139 1 115 1 310 1 170 1 370 1 171 1 330 1 22 1 49 1 111 1 192 1 52 1 355 1 86 2 87 1 38 1 366 1 254 2 
139 1 330 1 22 2 49 1 192 1 378 1 224 1 51 1 355 1 87 1 174 1 262 1 366 1 
284 1 203 1 24 1 52 1 322 1 86 1 346 1 290 1 254 1 
24 1 279 1 147 1 
24 1 115 1 346 1 347 1 290 1 
0 1 197 1 255 2 279 1 115 1 215 1 372 1 24 1 95 1 274 1 320 1 147 1 98 1 99 1 346 2 326 1 43 2 347 2 290 2 
273 1 248 1 188 1 105 1 
273 1 188 1 338 1 107 1 103 1 299 1 105 1 
212 1 264 1 299 1 
188 1 338 3 107 1 292 1 235 1 299 3 313 1 273 1 251 1 103 1 184 2 105 1 
328 1 157 1 338 2 107 1 103 1 299 1 
188 1 232 1 202 1 338 1 107 1 299 1 313 1 225 1 40 1 278 1 103 1 
273 1 188 1 338 1 107 1 103 1 299 1 313 1 
273 2 338 1 107 1 103 1 299 1 105 1 313 1 
273 1 188 1 172 1 252 1 338 2 106 1 107 2 103 2 299 2 313 1 
157 2 188 2 231 1 337 1 338 3 107 1 299 3 313 1 273 1 260 1 278 1 103 1 105 1 
157 1 188 1 232 1 338 2 107 1 299 2 313 1 123 1 273 1 225 2 302 1 40 1 307 1 103 1 105 1 
328 1 157 1 71 1 338 2 107 1 103 1 299 1 313 1 
273 1 188 1 338 1 107 1 103 1 299 1 105 1 313 1 
157 2 188 3 231 1 338 4 292 1 107 1 299 4 273 2 363 1 251 1 278 1 103 1 184 1 105 2 
169 1 157 1 188 1 92 1 338 2 107 1 299 2 313 1 273 1 332 1 103 1 105 1 
188 1 46 1 338 3 292 1 107 1 299 3 313 1 273 1 251 2 103 1 184 2 105 1 
198 1 188 2 173 2 48 1 
241 1 338 1 107 1 103 1 299 1 313 1 
273 1 157 1 260 1 188 1 338 2 107 1 103 1 299 2 105 1 313 1 
246 1 
273 1 188 1 338 1 107 1 103 1 299 1 105 1 313 1 
157 1 188 1 338 3 107 1 299 3 313 1 273 1 260 1 103 1 184 1 105 1 
363 1 188 1 231 1 278 1 
273 1 188 1 

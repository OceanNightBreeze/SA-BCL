#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 255 353 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 255 57 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 255 57 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 255 57 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 255 57 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
319 2 258 2 113 1 66 2 323 4 235 1 2 1 302 1 236 2 30 6 237 1 92 1 282 1 213 3 267 5 51 9 174 1 150 2 198 9 199 1 17 1 376 1 181 1 102 2 252 2 316 1 23 1 25 1 
319 2 258 2 113 1 66 2 323 4 235 1 2 1 302 1 236 2 30 6 237 1 92 1 282 1 213 3 267 5 51 9 174 1 150 2 198 9 199 1 17 1 376 1 181 1 102 2 252 2 316 1 23 1 25 1 
319 2 258 2 113 1 66 2 323 5 235 1 2 1 302 1 236 2 30 7 237 1 92 1 282 1 213 4 267 6 51 10 174 1 150 2 198 10 199 1 17 1 376 1 181 1 102 2 252 2 316 1 23 1 25 1 
319 1 258 2 113 1 66 2 323 3 235 1 2 1 302 1 236 2 30 4 237 1 282 1 213 2 267 4 51 7 174 1 150 2 198 7 199 1 17 1 376 1 181 1 102 2 252 2 316 1 23 1 25 1 
319 2 258 1 66 1 198 4 323 2 2 1 236 1 199 1 30 3 237 1 213 1 92 1 376 1 102 1 267 3 252 1 51 4 174 1 
258 1 113 1 0 1 150 1 66 1 198 2 233 1 2 1 236 1 237 1 376 1 102 1 267 1 51 2 25 1 206 1 
150 1 198 3 323 1 2 1 236 2 30 1 237 1 376 1 213 1 102 2 267 2 316 1 51 3 
319 2 258 1 150 1 66 1 198 9 323 4 2 1 236 2 199 1 30 7 237 1 92 1 376 1 213 3 181 1 102 2 267 5 252 1 316 1 23 1 51 9 254 1 174 1 45 1 
319 2 258 1 150 1 66 1 198 9 323 4 2 1 236 2 199 1 30 7 237 1 92 1 376 1 213 3 181 1 102 2 267 5 252 1 316 1 23 1 51 9 254 1 174 1 45 1 
295 1 106 1 8 1 
196 2 271 1 8 1 
238 2 91 2 46 2 259 2 331 2 29 1 223 2 264 1 
46 3 259 2 260 2 1 1 186 1 116 1 29 1 188 1 264 1 238 2 91 2 327 1 168 1 70 1 170 1 142 1 3 1 305 2 119 1 331 2 239 1 361 1 195 1 80 1 13 1 151 2 290 1 127 1 128 1 223 3 101 1 342 1 129 1 42 1 229 2 350 1 279 2 
238 1 91 1 241 1 46 1 259 1 120 1 331 1 223 1 162 1 264 1 
46 1 178 1 14 1 153 1 223 1 56 1 48 1 238 1 59 1 120 1 106 1 205 1 8 1 39 1 
46 1 259 1 178 2 14 2 153 1 223 1 91 1 238 1 59 1 331 1 120 1 106 1 205 1 8 1 39 1 
61 1 172 1 178 1 14 1 324 1 
61 1 364 1 178 2 14 2 106 1 324 1 44 1 8 1 
178 1 14 1 324 1 
61 1 241 1 46 1 259 1 178 1 14 1 223 1 264 1 91 1 238 1 120 1 331 1 204 1 162 1 
8 1 
61 1 257 1 178 2 14 2 106 1 324 1 44 1 8 1 
61 2 79 1 368 1 178 5 65 2 14 5 55 2 324 2 374 2 69 1 18 1 378 1 105 1 285 1 106 1 44 1 351 1 8 1 9 1 
295 1 29 1 
46 2 259 1 124 1 29 2 223 2 238 2 91 1 274 1 331 1 
12 1 34 1 95 1 
195 1 46 1 260 1 1 1 13 1 127 1 29 1 223 1 342 1 168 1 170 1 42 1 119 1 4 1 229 1 279 1 
195 1 365 1 12 1 46 2 260 1 13 1 1 1 125 1 127 1 223 2 342 1 168 1 91 1 238 1 170 1 42 1 119 1 229 1 331 1 279 1 
238 3 91 3 365 1 46 3 259 1 331 3 29 1 223 3 
238 1 91 1 241 1 46 1 120 1 331 1 223 1 
238 1 91 1 274 1 46 1 259 1 124 1 120 1 331 1 223 1 
46 4 259 2 260 1 1 1 186 1 116 1 29 1 188 1 264 1 168 1 238 3 91 3 70 1 170 1 142 1 3 1 305 2 119 1 356 1 331 3 120 1 239 1 50 1 39 1 195 1 365 1 80 1 13 1 178 1 151 1 124 1 125 1 127 1 14 1 153 1 223 4 101 1 342 1 129 1 42 1 59 1 229 1 205 1 279 1 
238 2 91 1 365 1 32 1 46 2 331 1 29 1 223 2 56 1 
365 2 46 3 259 1 178 1 124 1 125 1 137 1 14 1 153 1 223 3 91 3 238 3 59 1 356 1 120 1 331 3 205 1 8 1 39 1 
238 2 91 2 365 1 12 1 46 2 259 1 34 1 124 1 331 2 223 2 
195 1 46 1 260 1 1 1 13 1 127 1 29 1 223 1 342 1 168 1 170 1 42 1 119 1 229 1 279 1 
46 1 260 1 1 1 177 1 13 1 29 1 223 1 342 1 304 1 168 1 170 1 42 1 119 1 229 1 279 1 
232 1 186 1 116 1 188 1 70 1 305 2 3 2 34 2 72 1 95 2 239 1 36 1 11 1 12 2 151 4 290 2 101 1 58 1 313 1 294 1 228 1 314 1 231 1 256 1 
238 1 91 1 266 1 46 1 120 1 331 1 205 1 223 1 
365 2 46 5 259 1 221 1 124 1 125 1 152 1 29 1 223 5 56 1 91 4 238 5 32 1 331 4 
238 2 91 2 266 1 241 1 46 2 120 1 331 2 223 2 
248 1 133 1 
248 1 133 1 
149 1 190 1 
149 1 190 1 
149 1 190 1 
248 1 250 1 133 1 
248 1 250 1 133 1 
248 1 64 1 133 1 
248 2 367 1 149 1 60 1 190 1 133 2 
248 1 250 1 133 1 
345 1 248 1 133 1 
345 1 248 1 133 1 
345 1 248 1 133 1 
367 1 339 1 300 1 178 2 246 1 126 2 14 2 265 1 354 2 248 2 141 3 20 2 275 1 94 2 284 1 335 2 8 1 133 2 336 1 
46 2 64 1 281 1 67 1 29 1 354 1 91 2 238 2 141 1 331 2 362 1 335 1 339 1 197 1 178 1 126 1 14 1 222 1 15 1 223 2 248 1 20 1 201 1 133 1 
258 1 252 1 66 1 
258 1 66 1 233 1 
31 1 252 2 173 1 66 3 233 1 165 1 
31 1 252 1 182 1 173 1 66 2 233 1 
31 1 252 1 173 2 66 2 233 1 
61 4 87 1 65 1 232 1 234 1 324 1 326 2 355 2 74 1 362 1 8 2 196 3 79 2 11 1 242 1 175 1 368 1 178 5 271 1 55 1 14 5 15 1 156 1 374 1 58 1 130 2 201 1 294 1 106 1 44 1 351 3 317 1 
61 7 87 1 65 2 232 3 234 2 324 6 211 5 326 6 355 6 172 5 216 1 191 1 6 1 8 5 196 9 79 6 11 3 242 3 175 2 176 1 368 1 178 9 271 3 14 9 55 2 374 2 344 1 58 3 201 4 293 1 105 1 294 3 106 1 44 1 351 8 
61 2 65 1 232 1 234 1 326 2 355 2 74 1 8 3 196 4 11 1 79 2 175 1 242 1 178 3 271 2 55 1 14 3 374 1 58 1 130 1 201 1 294 1 105 1 106 1 351 3 317 1 
61 3 65 1 232 2 234 1 326 4 355 4 74 1 216 1 191 1 6 1 8 4 196 7 11 2 79 4 175 1 242 2 178 4 271 3 55 1 14 4 374 1 58 2 130 2 201 2 294 2 105 1 106 1 351 5 317 1 
119 1 295 1 269 1 
82 1 119 1 
107 1 
42 1 119 1 
337 1 42 1 119 3 107 1 269 2 342 1 225 1 
42 1 119 1 342 1 
119 1 261 1 
232 1 151 7 290 4 27 1 28 1 81 1 263 1 58 1 379 2 283 1 189 1 3 3 228 2 143 1 231 3 148 1 363 1 
232 1 151 7 290 4 27 1 28 1 81 1 263 1 58 1 379 2 283 1 189 1 3 3 228 2 143 1 231 3 148 1 363 1 
232 1 151 7 290 4 27 1 28 1 81 1 263 1 58 1 379 2 189 1 283 1 3 3 228 2 143 1 231 3 230 1 148 1 363 1 
183 3 62 1 163 1 232 4 186 1 27 2 116 1 263 2 28 5 70 1 189 1 283 1 305 2 3 15 359 1 143 1 239 1 286 4 75 1 334 1 38 1 148 2 363 1 11 3 242 3 218 1 151 31 290 16 81 2 58 4 379 3 294 3 228 5 231 10 
62 1 232 1 186 2 116 2 27 1 263 1 28 1 70 2 215 1 189 1 305 4 3 4 239 2 143 1 148 1 363 1 123 1 151 9 290 5 81 1 58 1 379 2 228 3 231 4 
298 1 258 1 209 1 184 1 260 1 66 2 233 1 2 1 165 1 236 1 30 1 237 1 170 1 49 1 267 1 144 1 51 2 121 1 122 1 78 1 53 1 150 1 13 1 198 2 376 1 102 1 252 1 229 1 108 1 279 1 
298 1 258 1 63 1 184 1 260 1 66 2 233 1 2 1 165 1 236 1 30 2 237 1 170 1 49 1 267 1 144 1 51 3 121 1 122 1 78 1 53 1 150 1 13 1 198 3 99 1 102 1 252 1 229 1 279 1 278 1 
298 1 63 1 258 1 184 1 260 1 66 2 233 1 2 1 165 1 30 2 237 1 170 1 267 1 144 1 51 2 121 1 122 1 78 1 150 1 13 1 198 2 99 1 252 1 229 1 279 1 
298 2 207 1 184 2 260 1 1 1 236 1 166 1 170 1 119 1 51 1 78 2 150 2 13 1 198 1 42 1 102 1 132 1 380 1 229 1 85 1 279 1 278 1 280 1 
298 1 258 1 209 1 184 1 260 1 66 2 233 1 165 1 236 1 170 1 49 1 144 1 51 1 121 1 122 1 78 1 53 1 150 1 13 1 198 1 99 1 376 1 102 1 252 1 229 1 279 1 
37 1 
46 1 1 2 185 1 321 2 324 6 90 1 48 1 238 1 8 2 196 2 240 1 54 1 13 1 14 5 55 1 153 1 247 2 155 2 56 1 158 1 59 1 104 1 106 1 205 1 351 2 109 2 260 2 65 1 166 1 170 1 119 1 73 2 120 1 268 1 307 1 217 2 39 1 308 1 79 2 175 1 270 1 368 1 178 5 271 2 223 1 180 4 374 1 273 2 42 1 131 1 132 1 229 2 44 3 279 2 135 1 
46 1 257 1 185 1 324 2 90 1 238 1 48 1 120 1 39 1 217 1 308 1 240 1 178 3 14 3 153 1 223 1 180 2 56 1 158 1 59 1 205 1 44 1 
46 1 257 1 185 1 324 1 90 1 238 1 48 1 120 1 39 1 8 1 308 1 240 1 178 3 14 3 153 1 223 1 180 3 56 1 273 1 158 1 59 1 106 1 205 1 44 1 
257 1 46 1 185 1 324 2 90 1 238 1 48 1 120 1 39 1 217 1 8 1 308 1 240 1 178 3 14 3 153 1 223 1 180 3 56 1 273 1 158 1 59 1 106 1 205 1 44 1 109 1 
46 1 185 1 321 2 324 7 90 1 48 1 238 1 8 5 240 1 14 5 55 1 153 1 247 2 155 2 56 1 158 1 249 1 19 1 59 1 104 1 106 5 205 1 253 1 24 1 351 1 109 4 257 1 65 1 73 2 120 1 307 1 217 4 39 1 308 1 79 1 368 1 178 5 40 1 271 2 180 6 223 1 374 1 273 4 44 3 
46 1 65 1 185 1 321 2 324 4 90 1 48 1 238 1 73 2 120 1 307 1 8 2 217 2 39 1 196 2 308 1 79 1 240 1 368 1 178 4 271 2 55 1 14 4 153 1 247 2 155 2 223 1 180 4 374 1 273 2 56 1 158 1 131 1 59 1 104 1 106 1 205 1 44 2 351 1 109 2 
46 1 65 1 185 1 321 2 324 4 90 1 238 1 48 1 73 2 120 1 307 1 8 1 217 2 39 1 308 1 79 1 240 1 368 1 178 4 271 2 55 1 14 4 153 1 247 2 155 2 223 1 180 4 374 1 273 2 56 1 158 1 19 1 59 1 104 1 106 1 205 1 24 1 253 1 44 2 351 1 109 2 
46 1 65 1 185 1 321 2 324 4 90 1 238 1 48 1 73 2 120 1 307 1 8 1 217 2 39 1 308 1 79 1 240 1 368 1 178 4 271 2 55 1 14 4 153 1 247 2 155 2 223 1 180 4 374 1 273 2 56 1 158 1 19 1 59 1 104 1 106 1 205 1 24 1 253 1 44 2 351 1 109 2 
46 1 65 1 185 1 89 2 321 2 324 4 90 1 118 1 238 1 48 1 93 1 330 1 120 1 8 1 217 2 39 1 196 2 308 1 79 1 240 1 368 1 178 4 55 1 14 4 153 1 155 2 223 1 180 4 374 1 273 2 56 1 158 1 59 1 104 1 160 2 106 1 205 1 24 1 44 2 351 1 109 2 
46 1 65 1 185 1 321 2 324 5 90 1 238 1 48 1 73 2 120 1 307 1 8 1 39 1 217 3 308 1 79 1 240 1 368 1 178 4 271 2 55 1 14 4 40 1 153 1 247 2 155 2 223 1 180 5 374 1 56 1 273 3 158 1 19 1 59 1 104 1 106 1 205 1 24 1 253 1 44 2 351 1 109 3 
46 1 65 1 185 1 321 2 324 5 90 1 238 1 48 1 73 2 120 1 307 1 8 1 39 1 217 3 308 1 79 1 240 1 368 1 178 4 271 2 55 1 14 4 40 1 153 1 247 2 155 2 223 1 180 5 374 1 56 1 273 3 158 1 19 1 59 1 104 1 106 1 205 1 24 1 253 1 44 2 351 1 109 3 
46 1 65 1 185 1 89 2 321 2 324 4 90 1 48 1 238 1 118 1 120 1 8 1 217 2 39 1 196 2 308 1 79 1 240 1 368 1 178 4 55 1 14 4 153 1 155 2 223 1 180 4 374 1 273 2 56 1 158 1 131 1 59 1 104 1 160 2 106 1 205 1 44 2 351 1 109 2 
12 1 151 6 232 1 290 3 186 1 27 1 116 1 29 2 81 1 188 1 101 1 58 1 70 1 379 1 189 1 3 3 313 1 305 2 34 1 95 1 228 2 295 1 143 1 231 2 239 1 363 1 
183 3 232 2 186 2 116 2 29 1 28 1 262 1 188 2 70 2 3 6 305 4 34 4 95 11 332 1 239 2 75 1 286 3 38 1 11 2 12 11 242 2 220 1 340 1 151 14 290 8 128 1 101 1 58 1 129 1 83 1 294 1 228 1 231 2 
46 2 260 1 1 1 186 1 116 1 29 1 188 1 168 1 238 1 91 1 170 1 70 1 328 1 305 2 3 1 119 1 4 1 34 1 331 1 239 1 195 1 365 1 220 1 245 1 13 1 125 1 151 2 127 1 290 1 128 1 223 2 342 1 101 1 42 1 129 1 229 1 203 1 279 1 
46 3 1 1 232 3 186 3 188 3 91 1 238 1 189 1 3 10 95 7 331 1 143 1 239 3 192 1 195 2 11 2 12 7 242 2 244 2 13 2 151 20 290 10 97 2 99 1 291 1 101 3 342 2 200 1 58 3 294 2 260 3 27 1 116 3 115 2 29 2 28 4 168 2 70 3 170 2 305 6 119 2 34 7 363 1 365 1 80 2 220 1 125 1 127 2 128 1 81 1 223 3 129 1 42 2 379 1 228 4 229 3 315 2 231 8 279 3 
46 1 260 8 1 2 186 2 114 1 116 2 303 1 188 2 166 1 169 1 238 1 91 1 170 2 70 2 305 4 3 1 306 1 119 3 331 1 239 2 194 1 365 1 13 2 341 1 151 2 290 1 128 1 99 1 224 1 223 1 101 2 129 1 42 2 313 1 132 1 229 7 108 1 350 2 279 8 
46 1 259 1 232 1 186 1 116 1 188 1 91 1 238 1 70 1 305 2 3 2 34 1 95 1 331 1 239 1 11 1 12 1 242 1 220 1 124 1 151 3 290 1 223 1 101 1 292 1 58 1 294 1 228 1 231 1 
11 1 12 1 151 2 232 1 186 1 290 2 116 1 28 1 188 1 101 1 70 1 313 1 305 2 34 1 72 1 95 1 231 1 239 1 
12 1 151 2 186 1 116 1 188 1 101 1 70 1 58 1 313 1 305 2 3 2 34 1 294 1 228 1 95 1 231 1 239 1 256 1 
232 1 186 1 116 1 28 1 188 1 70 1 305 2 3 2 34 2 95 2 239 1 11 1 242 1 12 2 151 4 290 2 101 1 58 1 313 1 294 1 228 1 231 2 
11 1 12 1 151 2 232 1 186 1 290 2 116 1 28 1 303 1 188 1 101 1 70 1 305 2 34 1 72 1 95 1 231 1 239 1 
12 1 151 2 186 1 116 1 303 1 188 1 101 1 70 1 58 1 305 2 3 2 34 1 294 1 228 1 95 1 231 1 239 1 256 1 
232 1 186 1 116 1 28 1 303 1 188 1 70 1 305 2 3 2 34 2 95 2 239 1 11 1 242 1 12 2 151 4 290 2 101 1 58 1 294 1 228 1 231 2 
232 1 186 1 116 1 28 1 188 1 70 1 305 2 3 2 34 2 95 2 239 1 11 1 242 1 12 2 151 4 290 2 101 1 58 1 294 1 228 1 231 2 
46 1 260 1 1 1 186 1 116 1 29 1 188 1 168 1 170 1 70 1 305 2 3 1 119 1 239 1 195 1 80 1 13 1 151 2 290 1 127 1 128 1 223 1 342 1 101 1 42 1 129 1 229 1 279 1 
46 1 260 1 1 1 186 1 116 1 29 1 188 1 168 1 304 1 170 1 70 1 305 2 3 1 119 1 239 1 288 1 13 1 177 1 151 2 290 1 128 1 223 1 342 1 101 1 42 1 129 1 229 1 279 1 
232 1 186 1 116 1 28 1 188 1 70 1 305 2 3 2 34 2 95 2 239 1 11 1 242 1 12 2 220 1 151 4 290 2 101 1 58 1 294 1 228 1 231 2 
46 1 260 1 232 1 186 1 116 1 28 1 188 1 168 1 170 1 70 1 3 2 305 2 34 2 119 1 95 2 239 1 195 1 11 1 12 2 80 1 242 1 13 1 151 4 290 2 127 1 223 1 342 1 101 1 58 1 42 1 294 1 228 1 315 1 229 1 231 2 108 1 279 1 
46 1 259 1 232 1 186 1 116 1 28 1 188 1 91 1 238 1 70 1 3 1 305 2 34 1 95 1 331 1 239 1 96 1 11 1 242 1 12 1 220 1 124 1 151 3 290 2 223 1 101 1 58 1 294 1 231 1 
183 1 353 1 232 1 186 2 116 2 28 1 117 1 70 2 214 1 305 4 3 5 145 1 239 2 286 2 75 1 38 1 11 1 242 1 370 1 123 1 151 9 290 4 179 1 58 1 346 1 294 1 228 1 231 2 255 1 
183 2 62 2 136 1 232 2 186 3 116 3 28 1 117 1 70 3 214 2 3 9 305 6 333 1 239 3 75 2 286 2 146 1 11 2 242 2 369 1 370 3 123 1 151 20 290 11 179 1 57 1 58 1 346 2 227 1 294 1 228 1 43 1 231 2 255 1 
183 1 232 1 186 2 116 2 28 1 117 1 70 2 214 1 305 4 3 5 145 1 239 2 286 2 75 1 38 1 11 1 242 1 370 1 123 1 151 9 290 4 179 1 57 1 58 1 346 1 294 1 228 1 231 2 255 1 
183 1 232 1 186 2 116 2 28 1 117 1 70 2 214 1 305 4 3 5 145 1 239 2 286 2 75 1 38 1 11 1 242 1 370 1 123 1 151 9 290 4 179 1 57 1 58 1 346 1 294 1 228 1 231 2 255 1 
183 4 62 1 136 1 232 7 186 2 27 1 116 2 28 6 117 1 70 2 214 1 189 1 305 4 3 22 143 1 333 1 239 2 146 1 286 4 75 2 38 2 363 1 11 6 242 6 369 1 340 2 370 3 123 1 151 46 290 24 81 1 179 1 57 1 58 7 346 1 379 1 227 1 294 6 43 1 228 6 231 12 255 1 
248 1 52 1 367 1 20 1 246 1 126 1 335 1 133 1 354 1 336 1 
64 1 67 1 
41 1 248 1 20 1 126 1 335 1 133 1 354 1 157 1 167 1 
367 1 339 1 300 1 178 1 246 1 126 1 14 1 265 1 354 1 248 1 141 2 20 1 275 1 94 1 335 1 8 1 133 1 336 1 
367 1 339 1 300 1 178 1 246 1 126 1 14 1 265 1 354 1 248 1 141 2 20 1 275 1 94 1 335 1 8 1 133 1 336 1 
367 1 339 1 300 1 178 1 246 1 126 1 14 1 265 1 354 1 248 1 141 2 20 1 275 1 94 1 335 1 8 1 133 1 336 1 
250 1 60 1 348 1 
250 1 60 1 348 1 
345 1 208 1 
345 1 208 1 60 1 
197 1 222 1 
61 1 46 2 64 1 281 1 67 1 29 1 354 1 91 2 238 2 141 1 94 1 331 2 362 1 335 1 338 1 197 1 178 1 126 1 14 1 222 1 15 1 223 2 248 1 275 1 20 1 201 1 133 1 
250 1 348 1 
345 1 208 1 60 1 
46 2 260 2 186 1 68 1 116 1 188 1 238 2 170 1 70 1 305 2 3 1 119 1 239 1 287 1 220 1 13 1 341 1 151 2 290 1 128 1 224 1 223 2 101 1 272 1 42 1 129 1 103 1 159 1 229 2 350 2 279 2 
298 1 258 1 53 1 260 2 13 1 66 2 233 1 165 1 99 1 170 1 71 1 33 1 252 1 229 2 144 1 108 1 279 2 121 1 134 1 
10 1 298 1 258 1 53 1 260 1 13 1 66 2 233 1 165 1 99 1 170 1 71 1 252 1 229 1 144 1 279 1 121 1 
298 1 260 1 13 1 1 1 310 1 166 1 170 1 42 1 33 1 132 1 119 1 229 1 279 1 280 1 
298 1 258 1 53 1 260 1 13 1 66 2 233 1 165 1 99 1 170 1 71 1 33 1 252 1 229 1 144 1 279 1 121 1 134 1 
86 1 
79 1 18 1 285 1 295 1 106 1 351 1 8 1 
196 1 79 1 368 1 178 1 65 1 14 1 55 1 271 1 324 1 247 1 374 1 73 1 106 1 307 1 44 1 351 1 8 2 
88 2 1 1 232 2 324 5 187 1 326 6 140 1 285 1 8 8 196 12 337 1 11 2 242 2 13 4 55 4 14 5 342 3 58 2 18 1 59 2 202 1 251 1 294 2 22 2 106 2 108 1 351 9 164 2 260 3 65 4 115 2 261 2 170 3 355 6 357 2 119 10 268 1 269 2 77 2 79 8 175 2 366 2 368 4 178 5 271 6 374 4 311 2 42 3 377 2 82 3 277 1 229 3 44 3 279 3 
183 1 136 1 65 2 138 1 232 2 324 1 326 5 355 5 357 2 333 1 268 1 286 1 75 1 146 1 193 1 8 5 196 6 79 5 11 2 175 1 366 1 242 2 368 2 178 1 14 1 55 2 271 3 374 2 58 2 227 1 294 2 43 1 106 2 44 1 351 8 
46 1 259 1 65 1 232 2 27 1 264 1 91 1 238 1 171 1 357 2 120 1 331 1 143 1 241 1 79 2 366 1 368 1 178 1 55 1 14 1 81 1 223 1 374 1 58 1 19 1 204 1 351 2 162 1 
79 1 368 1 65 1 55 1 374 1 18 1 285 1 106 1 351 1 8 1 
196 10 11 2 79 5 366 1 242 2 232 2 271 5 115 1 326 5 58 2 355 5 357 2 294 2 351 5 8 5 
178 1 14 1 106 1 324 1 44 1 8 1 
260 4 65 2 1 2 324 4 166 1 170 1 119 1 268 2 79 2 175 2 270 1 368 1 13 1 178 3 55 2 14 3 154 1 374 2 375 1 42 1 202 2 251 1 132 1 105 1 229 4 44 2 279 4 351 2 135 1 
46 3 259 2 260 1 1 1 186 1 116 1 29 1 188 1 264 1 238 2 91 2 168 1 170 1 70 1 142 1 3 1 305 2 119 1 331 2 239 1 195 1 80 1 13 1 151 1 127 1 223 3 342 1 101 1 129 1 42 1 229 1 279 1 
196 4 79 2 175 1 368 1 65 1 271 2 55 1 374 1 326 2 379 1 355 2 106 2 268 1 351 1 8 4 
20 1 126 1 296 1 
20 1 126 1 296 1 
20 1 126 1 222 1 336 1 289 1 
20 1 126 1 296 1 
20 1 126 1 98 1 
20 1 126 1 98 1 
20 1 126 1 98 1 
20 1 126 1 
248 1 133 1 
62 1 232 1 151 8 290 4 186 2 116 2 27 1 28 1 81 1 58 1 70 2 379 1 189 1 3 4 305 4 228 2 143 1 231 3 239 2 363 1 
58 1 379 1 189 1 3 3 151 6 232 1 228 2 290 3 295 1 143 1 231 2 27 1 81 1 363 1 
11 1 242 1 232 1 151 4 186 1 290 2 116 1 373 1 28 1 58 1 70 1 3 2 305 2 294 1 228 1 231 2 239 1 
183 1 11 1 242 1 151 7 232 1 290 3 28 1 58 1 3 4 294 1 228 1 231 2 75 1 286 2 38 1 
183 2 62 2 299 1 232 3 186 2 27 2 116 2 28 4 70 2 189 1 3 12 305 4 143 1 332 1 239 2 286 2 38 1 363 1 11 2 242 2 340 1 151 23 290 11 81 2 58 3 379 1 294 2 228 5 231 9 
3 1 151 1 286 1 
183 1 151 1 290 1 
11 1 242 1 151 6 232 1 186 1 290 3 116 1 115 1 373 1 28 1 70 1 58 1 305 2 3 3 294 1 228 2 239 1 231 3 
183 1 136 1 232 2 186 1 116 1 28 1 70 1 3 6 305 2 239 1 333 1 286 1 75 1 146 1 11 2 242 2 151 12 123 1 290 6 58 2 227 1 294 2 43 1 228 1 231 2 
232 1 151 6 290 3 27 1 81 1 28 1 58 1 3 3 228 1 143 1 231 2 
62 1 299 1 151 3 290 1 186 1 27 1 116 1 28 1 81 1 70 1 189 1 3 2 305 2 228 1 231 2 239 1 363 1 
123 1 151 10 232 2 186 1 290 5 116 1 27 2 81 2 28 2 70 1 58 2 171 1 305 2 3 5 228 3 239 1 231 5 143 1 
11 1 123 1 232 1 151 2 186 1 290 2 116 1 28 1 70 1 305 2 239 1 231 1 
11 1 242 1 123 1 232 1 151 4 186 1 290 2 116 1 28 1 58 1 70 1 3 2 305 2 294 1 228 1 231 2 239 1 
62 1 299 1 151 3 123 1 186 3 290 1 116 3 27 1 81 1 28 1 70 3 3 2 305 6 228 1 145 1 239 3 231 2 
183 3 62 2 299 1 163 1 232 5 186 5 27 3 116 5 28 5 70 5 189 1 3 18 305 10 143 2 145 1 239 5 286 4 75 1 334 1 38 1 363 1 11 3 218 1 242 3 123 1 151 34 290 16 81 3 373 1 58 5 379 1 294 3 228 7 231 12 
183 1 232 1 186 1 116 1 27 1 70 1 189 1 3 4 305 2 239 1 143 1 286 1 75 1 146 1 363 1 151 8 123 1 290 4 81 1 58 1 379 1 228 2 231 2 
183 1 232 2 186 2 27 1 116 2 28 1 70 2 189 1 3 5 305 4 143 1 239 2 286 2 75 1 146 1 38 1 363 1 11 1 242 1 151 11 123 1 290 6 81 1 373 1 58 1 379 1 228 2 231 3 
183 1 136 1 62 1 232 3 186 3 27 1 116 3 28 1 70 3 189 1 3 10 305 6 143 1 239 3 333 1 286 1 75 1 146 1 363 1 11 2 242 2 151 19 123 1 290 9 81 1 373 1 58 3 379 1 227 1 294 2 43 1 228 3 231 4 
183 1 62 1 136 1 232 3 186 3 27 1 116 3 28 2 70 3 189 1 3 7 305 6 143 1 239 3 333 1 286 1 75 1 146 1 363 1 11 2 242 2 151 17 123 1 290 10 81 1 373 1 58 2 379 1 227 1 294 1 43 1 228 3 231 5 
183 1 232 1 186 1 116 1 27 1 70 1 189 1 3 4 305 2 239 1 143 1 286 1 75 1 146 1 363 1 151 8 123 1 290 4 81 1 58 1 379 1 228 2 231 2 
183 1 136 1 232 2 186 1 116 1 28 1 70 1 3 6 305 2 239 1 333 1 286 1 75 1 146 1 11 2 242 2 151 12 123 1 290 6 58 2 227 1 294 2 43 1 228 1 231 2 
183 1 136 1 62 2 232 3 186 4 27 1 116 4 28 2 70 4 189 1 3 8 305 8 143 1 333 1 239 4 286 1 75 1 146 1 363 1 11 2 242 2 151 18 123 1 290 10 81 1 373 1 58 2 379 1 227 1 294 1 43 1 228 3 231 5 
183 1 136 1 62 2 232 3 186 4 116 4 28 3 70 4 3 7 305 8 333 1 239 4 145 1 286 1 75 1 146 1 11 3 242 3 151 16 123 1 290 9 58 2 227 1 294 2 43 1 228 3 231 6 
151 7 232 1 290 3 27 3 81 3 28 3 58 1 189 2 3 4 228 3 231 6 143 1 363 1 
183 1 136 1 62 2 232 3 186 4 27 1 116 4 28 1 70 4 189 1 3 8 305 8 143 1 333 1 239 4 145 1 286 1 75 1 146 1 363 1 11 2 242 2 151 18 123 1 290 10 81 1 58 2 379 1 227 1 294 1 43 1 228 3 231 4 
238 1 46 1 32 1 372 1 29 1 223 1 56 1 
238 1 212 1 46 1 32 1 111 1 347 1 358 1 371 1 372 1 29 1 223 1 56 1 
170 1 42 1 132 1 260 1 13 1 119 1 1 1 229 1 295 1 166 1 279 1 
195 1 365 1 46 2 260 1 13 1 1 1 29 1 223 2 342 1 168 1 91 1 238 1 170 1 42 1 119 1 229 1 331 1 279 1 
46 2 260 1 29 1 261 1 238 2 91 2 168 1 170 1 119 3 331 1 120 1 195 1 365 1 13 1 153 1 223 2 342 2 42 2 202 1 229 1 22 1 205 1 279 1 
46 2 260 2 29 1 261 1 304 1 238 2 91 2 168 1 170 1 119 3 331 1 120 1 365 1 13 1 309 1 153 1 223 2 342 2 42 2 202 1 229 2 22 1 205 1 279 2 
260 3 1 1 210 1 324 1 261 1 170 1 119 4 269 1 7 1 8 1 178 2 13 1 309 1 14 2 342 1 42 1 59 1 82 1 202 1 229 3 22 1 106 1 279 3 
260 3 1 1 13 1 178 2 309 1 14 2 324 1 261 1 342 1 170 1 42 1 377 1 59 1 202 1 82 1 119 4 229 3 22 1 106 1 269 1 279 3 8 1 
170 1 260 1 13 1 229 1 114 1 279 1 
194 1 337 1 219 1 352 1 260 7 1 2 13 3 322 1 114 1 99 1 224 1 342 1 169 1 170 2 42 2 306 1 119 3 229 6 108 1 350 1 279 7 
46 2 232 1 186 2 188 2 91 1 238 1 189 1 3 3 95 1 331 1 239 2 143 1 195 1 12 1 244 1 13 1 151 6 290 3 101 2 342 1 58 1 159 1 108 1 260 1 116 2 27 1 29 2 168 1 70 2 170 1 305 4 34 1 119 1 363 1 365 1 80 1 220 1 127 1 81 1 223 2 42 1 379 1 315 1 229 1 228 2 231 2 279 1 
61 1 88 1 260 1 164 1 1 1 65 2 324 2 119 2 285 1 269 1 8 1 79 1 368 2 178 3 55 2 14 3 374 2 311 1 18 1 377 1 59 1 82 1 251 1 229 1 106 1 44 1 351 1 279 1 
337 1 260 2 13 2 114 1 187 1 342 1 170 1 42 1 119 2 229 2 108 1 269 1 279 2 
320 1 260 4 13 1 1 1 309 1 166 1 170 1 42 1 132 1 119 1 229 4 108 1 279 4 
352 1 260 2 13 2 322 1 16 1 342 1 170 1 42 1 202 1 119 1 229 2 5 1 192 1 279 2 
170 1 258 1 260 1 13 1 1 1 66 1 229 1 233 1 279 1 121 1 
260 2 13 1 68 1 99 1 224 1 170 1 42 1 119 1 229 2 108 1 279 2 
194 1 320 1 260 5 1 1 13 2 224 1 166 1 170 2 42 2 202 1 132 1 306 1 119 3 229 4 108 1 279 5 
194 1 320 1 260 5 1 1 13 2 224 1 166 1 170 2 42 2 202 1 329 1 132 1 119 3 229 4 108 1 279 5 
365 1 46 2 260 1 13 1 1 1 29 1 223 2 342 1 168 1 91 1 238 1 304 1 170 1 42 1 119 1 229 1 331 1 279 1 
337 1 219 1 352 1 260 1 13 2 322 1 342 1 170 1 42 1 202 1 119 1 229 1 279 1 
238 1 46 1 103 1 349 1 287 1 35 1 223 1 272 1 100 1 
276 1 112 1 35 1 
349 1 29 1 35 1 325 1 100 1 
61 1 112 1 178 2 14 2 153 1 29 1 100 2 325 2 59 1 276 1 356 1 120 1 360 1 106 1 349 2 205 1 35 1 8 1 39 1 
237 1 267 1 295 1 2 1 
237 1 102 1 267 1 198 1 51 1 2 1 236 1 
184 1 150 1 198 1 
26 1 113 2 198 3 2 1 236 1 226 1 237 1 376 1 102 1 267 1 51 3 161 1 
237 1 319 1 102 1 267 1 198 2 51 2 2 1 236 1 30 1 
258 1 66 1 198 1 323 1 236 1 199 1 376 1 102 1 267 1 252 1 51 1 
237 1 376 1 102 1 267 1 198 1 51 1 236 1 
237 2 376 1 102 1 198 1 51 1 2 1 236 1 
237 1 376 1 47 1 102 2 267 1 198 2 51 2 236 2 110 1 139 1 
198 3 323 1 2 1 236 1 30 2 237 1 376 1 213 1 181 1 102 1 267 2 51 3 23 1 
258 1 301 1 66 2 233 1 198 2 2 1 165 1 236 1 30 1 237 1 376 1 102 1 267 1 252 1 51 2 
319 1 198 4 323 1 2 1 236 2 30 2 237 1 376 1 92 1 213 1 102 2 267 2 51 4 
237 1 376 1 102 1 267 1 198 1 51 1 2 1 236 1 
26 1 113 1 198 4 323 1 2 2 236 1 30 2 237 2 213 1 312 1 102 1 267 3 161 1 51 4 
198 2 2 1 236 1 30 1 237 1 376 1 102 1 267 1 21 1 51 2 84 1 254 1 
26 1 243 1 113 2 198 3 2 1 236 1 237 1 376 1 102 1 267 1 51 3 161 2 
318 1 267 2 76 1 297 2 
376 1 102 1 198 1 51 1 236 1 343 1 
237 1 376 1 181 1 102 1 267 1 198 2 51 2 2 1 236 1 30 1 
147 1 
237 1 376 1 102 1 267 1 198 1 51 1 2 1 236 1 
237 1 376 1 181 1 102 1 113 1 267 1 198 3 51 3 2 1 236 1 30 1 
213 1 312 1 267 1 323 1 
237 1 267 1 

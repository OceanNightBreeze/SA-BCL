#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 155 115 (29,236) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 155 115 (94,218) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
69 1 275 9 331 1 184 1 332 1 146 3 335 1 365 1 36 2 104 1 106 9 188 2 368 5 369 1 86 4 312 2 191 1 13 2 40 1 234 1 128 1 18 1 195 2 316 1 133 1 379 2 381 2 27 6 
69 1 275 9 331 1 184 1 332 1 146 3 335 1 365 1 36 2 104 1 106 9 188 2 368 5 369 1 86 4 312 2 191 1 13 2 40 1 234 1 128 1 18 1 195 2 316 1 133 1 379 2 381 2 27 6 
69 1 275 10 331 1 184 1 332 1 146 4 335 1 365 1 36 2 104 1 106 10 188 2 368 6 369 1 86 5 312 2 191 1 13 2 40 1 234 1 128 1 18 1 195 2 316 1 133 1 379 2 381 2 27 7 
69 1 275 7 331 1 184 1 332 1 146 2 335 1 365 1 36 1 104 1 106 7 188 2 368 4 369 1 86 3 312 2 191 1 13 2 40 1 234 1 128 1 195 2 316 1 133 1 379 2 381 2 27 4 
106 4 188 1 368 3 369 1 86 2 13 1 40 1 128 1 18 1 195 1 316 1 275 4 146 1 379 1 365 1 381 1 36 2 27 3 
104 1 106 2 368 1 188 1 369 1 312 1 13 1 40 1 195 1 275 2 318 1 133 1 378 1 365 1 381 1 8 1 
106 3 368 2 369 1 86 1 312 1 13 2 40 1 234 1 275 3 146 1 365 1 381 2 27 1 
275 9 331 1 332 1 146 3 365 1 36 2 339 1 214 1 106 9 368 5 188 1 86 4 369 1 312 1 13 2 40 1 234 1 128 1 18 1 316 1 195 1 379 1 381 2 27 7 
275 9 331 1 332 1 146 3 365 1 36 2 339 1 214 1 106 9 368 5 188 1 86 4 369 1 312 1 13 2 40 1 234 1 128 1 18 1 316 1 195 1 379 1 381 2 27 7 
257 1 126 1 150 1 
150 1 76 1 265 2 
96 1 206 2 174 2 90 2 326 1 358 2 185 2 118 2 
238 1 96 1 68 1 324 1 206 2 162 2 326 1 301 1 358 2 30 1 31 1 230 1 55 1 123 1 7 1 211 1 185 3 250 2 103 1 232 2 310 1 189 1 109 1 127 1 193 2 372 1 317 1 115 1 236 1 22 1 174 3 90 2 380 2 157 1 237 1 43 1 118 2 
206 1 216 1 174 1 90 1 326 1 272 1 328 1 358 1 185 1 118 1 
206 1 343 1 216 1 150 1 16 1 209 1 50 1 257 1 88 1 89 1 64 1 42 1 174 1 185 1 
206 1 343 2 216 1 150 1 358 1 209 1 50 1 257 1 88 1 64 2 42 1 90 1 174 1 185 1 118 1 
276 1 266 1 64 1 343 1 49 1 
276 1 257 1 266 1 258 1 64 2 343 2 150 1 314 1 
276 1 64 1 343 1 
266 1 206 1 343 1 216 1 272 1 326 1 328 1 358 1 64 1 90 1 174 1 185 1 77 1 118 1 
150 1 
276 1 257 1 266 1 64 2 343 2 364 1 150 1 314 1 
340 2 309 1 266 2 343 5 169 1 47 1 150 1 314 1 208 1 112 2 276 2 257 1 53 1 246 1 304 2 64 5 220 1 116 1 336 1 
96 1 126 1 
96 2 206 2 358 1 87 1 294 1 174 2 90 1 185 2 118 1 
158 1 21 1 65 1 
96 1 324 1 162 1 30 1 72 1 230 1 115 1 55 1 123 1 236 1 174 1 22 1 211 1 185 1 250 1 232 1 
158 1 324 1 206 1 162 1 358 1 30 1 230 1 55 1 115 1 73 1 236 1 123 1 22 1 174 2 211 1 35 1 185 2 250 1 118 1 232 1 
96 1 73 1 206 3 90 1 174 3 358 3 185 3 118 3 
206 1 216 1 174 1 328 1 358 1 185 1 118 1 
87 1 206 1 294 1 216 1 174 1 90 1 358 1 185 1 118 1 
96 1 202 1 68 1 324 1 206 3 162 1 326 1 301 1 358 3 30 1 209 1 50 1 31 1 245 1 230 1 55 1 73 1 123 1 7 1 211 1 185 4 35 1 250 1 232 1 310 1 189 1 343 1 193 1 216 1 372 1 317 1 88 1 115 1 64 1 294 1 236 1 42 1 22 1 90 2 174 4 380 2 157 1 43 1 118 3 
96 1 89 1 363 1 73 1 206 2 174 2 358 1 185 2 118 1 
202 1 206 3 325 1 343 1 216 1 150 1 358 3 209 1 50 1 88 1 73 2 64 1 294 1 42 1 90 1 174 3 35 1 185 3 118 3 
158 1 206 2 358 2 73 1 294 1 90 1 174 2 65 1 185 2 118 2 
96 1 324 1 162 1 30 1 230 1 115 1 55 1 123 1 236 1 174 1 22 1 211 1 185 1 250 1 232 1 
94 1 96 1 324 1 162 1 30 1 230 1 293 1 115 1 55 1 174 1 22 1 211 1 185 1 250 1 232 1 
238 2 158 2 68 1 301 1 2 1 31 2 5 1 247 1 280 1 7 1 215 1 367 1 286 1 189 1 254 1 193 4 317 1 154 1 21 2 91 1 223 1 65 2 380 2 157 1 
50 1 67 1 206 1 216 1 174 1 358 1 185 1 118 1 
96 1 206 5 358 4 302 1 89 1 278 1 363 1 73 2 294 1 174 5 90 1 185 5 35 1 118 4 
67 1 206 2 216 1 174 2 328 1 358 2 185 2 118 2 
225 1 221 1 
225 1 221 1 
287 1 305 1 
287 1 305 1 
287 1 305 1 
376 1 225 1 221 1 
376 1 225 1 221 1 
279 1 225 1 221 1 
270 1 287 1 305 1 225 2 221 2 80 1 
376 1 225 1 221 1 
114 1 225 1 221 1 
114 1 225 1 221 1 
114 1 225 1 221 1 
179 1 125 2 107 1 267 3 233 1 343 2 225 2 150 1 226 1 255 2 347 1 228 2 348 2 64 2 136 1 221 2 175 2 350 1 80 1 
96 1 125 1 85 1 267 1 12 1 206 2 343 1 181 1 225 1 243 1 255 1 358 2 227 1 348 1 279 1 136 1 64 1 377 1 174 2 221 1 175 1 185 2 337 1 118 2 
188 1 379 1 195 1 
188 1 378 1 195 1 
113 1 188 3 378 1 327 1 163 1 379 2 
113 1 188 2 378 1 327 1 379 1 252 1 
113 2 188 2 378 1 327 1 379 1 
178 2 266 4 0 1 47 1 227 1 51 1 2 1 276 1 304 1 246 3 76 1 57 1 340 1 309 2 215 1 85 1 12 1 343 5 192 1 110 1 314 1 150 2 151 2 112 1 257 1 64 5 259 2 91 1 223 1 263 1 265 3 201 1 
266 7 0 1 47 1 360 5 208 1 49 5 51 3 2 3 276 6 303 1 304 2 246 8 167 1 76 3 57 2 340 2 366 1 37 1 309 6 215 3 12 4 289 1 343 9 150 5 314 1 256 1 151 6 112 2 257 1 64 9 259 6 91 3 223 3 263 2 265 9 
178 1 266 2 208 1 51 1 2 1 304 1 246 3 76 2 57 1 340 1 309 2 215 1 12 1 192 1 343 3 150 3 151 2 112 1 257 1 64 3 259 2 91 1 223 1 263 1 265 4 201 1 
178 2 266 3 208 1 51 2 2 2 303 1 304 1 246 5 76 3 57 1 340 1 366 1 309 4 215 2 12 2 289 1 343 4 192 1 150 4 151 4 112 1 257 1 64 4 259 4 91 2 223 2 263 1 265 7 201 1 
126 1 58 1 22 1 
22 1 102 1 
32 1 
55 1 22 1 
308 1 324 1 55 1 268 1 58 2 22 3 
324 1 55 1 22 1 
22 1 231 1 
238 4 139 1 215 1 239 1 286 2 298 1 45 1 193 7 129 1 346 2 210 1 165 1 31 3 74 1 280 3 223 1 186 1 
238 4 139 1 215 1 239 1 286 2 298 1 45 1 193 7 129 1 346 2 210 1 165 1 31 3 74 1 280 3 223 1 186 1 
238 4 139 1 215 1 239 1 286 2 298 1 45 1 271 1 193 7 129 1 346 2 210 1 165 1 31 3 74 1 280 3 223 1 186 1 
139 1 238 16 239 2 68 1 298 1 45 1 97 1 143 1 301 1 273 1 210 2 144 3 51 3 165 1 2 3 31 15 122 1 74 2 280 10 34 1 186 5 215 4 286 5 189 1 11 1 193 31 111 4 346 3 129 2 317 1 91 3 223 4 176 1 380 2 
238 5 139 1 68 2 239 1 45 1 301 2 210 1 165 1 31 4 333 1 74 1 280 4 186 1 215 1 286 3 189 2 193 9 346 2 129 1 317 2 19 1 223 1 176 1 380 4 
120 1 162 1 163 1 244 1 30 1 1 1 275 2 211 1 250 1 365 1 232 1 285 1 106 2 82 1 368 1 188 2 369 1 312 1 13 1 40 1 373 1 195 1 292 1 378 1 379 1 24 1 381 1 200 1 27 1 351 1 
120 1 162 1 163 1 244 1 30 1 1 1 275 3 211 1 250 1 365 1 232 1 285 1 106 3 368 1 188 2 312 1 13 1 39 1 40 1 345 1 373 1 195 1 292 1 153 1 378 1 379 1 24 1 381 1 200 1 27 2 
120 1 162 1 163 1 30 1 1 1 275 2 211 1 250 1 365 1 232 1 285 1 106 2 368 1 188 2 312 1 40 1 345 1 373 1 195 1 153 1 378 1 24 1 379 1 200 1 27 2 
162 1 30 1 275 1 230 1 55 1 211 1 250 1 147 1 232 1 285 2 341 1 106 1 168 1 84 1 312 2 13 1 39 1 373 2 132 1 22 1 24 2 381 1 353 1 
120 1 162 1 163 1 244 1 30 1 1 1 275 1 211 1 250 1 232 1 285 1 106 1 82 1 188 2 369 1 312 1 13 1 345 1 373 1 195 1 292 1 378 1 379 1 24 1 381 1 200 1 
311 1 
95 2 47 1 50 1 276 6 277 2 230 2 55 1 6 4 185 1 147 1 57 1 232 2 10 1 340 1 343 5 344 1 150 2 15 1 16 1 17 1 112 1 64 5 22 1 23 1 66 1 354 2 356 2 205 1 206 1 162 2 30 1 209 1 362 2 246 2 304 1 166 1 211 1 76 2 250 2 79 1 81 2 309 2 84 1 253 1 216 1 314 3 257 1 88 1 89 1 321 1 42 1 138 2 174 1 265 2 323 1 
356 1 205 1 206 1 343 3 216 1 314 1 15 1 16 1 17 1 209 1 50 1 276 2 88 1 89 1 64 3 321 1 166 1 6 2 42 1 364 1 174 1 185 1 
205 1 206 1 343 3 216 1 314 1 150 1 15 1 16 1 17 1 209 1 50 1 276 1 257 1 277 1 88 1 89 1 64 3 321 1 166 1 6 3 42 1 364 1 174 1 185 1 
356 1 205 1 206 1 209 1 50 1 276 2 277 1 166 1 6 3 364 1 185 1 81 1 343 3 216 1 314 1 16 1 15 1 150 1 17 1 88 1 257 1 89 1 64 3 321 1 42 1 174 1 
95 2 47 1 99 1 50 1 276 7 277 4 6 6 185 1 340 1 343 5 15 1 16 1 150 5 17 1 112 1 64 5 354 2 356 4 205 1 206 1 209 1 362 2 304 1 246 1 166 1 364 1 306 1 76 2 79 1 81 4 309 1 370 1 216 1 314 3 88 1 257 5 89 1 319 1 321 1 137 1 42 1 174 1 138 2 323 1 
95 2 47 1 50 1 276 4 277 2 6 4 185 1 340 1 10 1 343 4 15 1 16 1 150 2 17 1 112 1 64 4 354 2 356 2 205 1 206 1 209 1 362 2 304 1 246 1 166 1 76 2 79 1 309 1 81 2 216 1 314 2 88 1 257 1 89 1 321 1 42 1 174 1 138 2 265 2 323 1 
95 2 354 2 356 2 205 1 206 1 47 1 209 1 99 1 362 2 50 1 276 4 277 2 246 1 304 1 166 1 6 4 76 2 185 1 79 1 340 1 81 2 309 1 343 4 216 1 150 1 314 2 16 1 15 1 17 1 112 1 257 1 88 1 89 1 319 1 64 4 321 1 137 1 42 1 138 2 174 1 323 1 
95 2 354 2 356 2 205 1 206 1 47 1 209 1 99 1 362 2 50 1 276 4 277 2 246 1 304 1 166 1 6 4 76 2 185 1 79 1 340 1 81 2 309 1 343 4 216 1 150 1 314 2 16 1 15 1 17 1 112 1 257 1 88 1 89 1 319 1 64 4 321 1 137 1 42 1 138 2 174 1 323 1 
354 2 159 1 356 2 205 1 206 1 300 2 47 1 209 1 99 1 362 2 50 1 276 4 277 2 246 1 304 1 166 1 101 2 6 4 56 1 185 1 340 1 81 2 309 1 343 4 216 1 150 1 314 2 16 1 15 1 17 1 112 1 63 1 257 1 88 1 89 1 64 4 321 1 42 1 174 1 265 2 323 1 
95 2 354 2 356 3 205 1 206 1 47 1 209 1 99 1 362 2 50 1 276 5 277 3 246 1 304 1 166 1 6 5 76 2 185 1 306 1 79 1 340 1 309 1 81 3 343 4 216 1 150 1 314 2 16 1 15 1 17 1 112 1 257 1 88 1 89 1 319 1 64 4 137 1 321 1 42 1 138 2 174 1 323 1 
95 2 354 2 356 3 205 1 206 1 47 1 209 1 99 1 362 2 50 1 276 5 277 3 246 1 304 1 166 1 6 5 76 2 185 1 306 1 79 1 340 1 309 1 81 3 343 4 216 1 150 1 314 2 16 1 15 1 17 1 112 1 257 1 88 1 89 1 319 1 64 4 137 1 321 1 42 1 138 2 174 1 323 1 
354 2 159 1 356 2 205 1 206 1 300 2 47 1 209 1 362 2 50 1 276 4 277 2 246 1 304 1 166 1 101 2 6 4 185 1 10 1 340 1 81 2 309 1 343 4 216 1 150 1 314 2 16 1 15 1 17 1 112 1 257 1 88 1 89 1 64 4 321 1 42 1 174 1 265 2 323 1 
158 1 139 1 238 3 96 2 68 1 45 1 301 1 210 1 165 1 31 3 74 1 280 2 7 1 215 1 126 1 286 2 189 1 254 1 193 6 346 1 317 1 21 1 65 1 223 1 380 2 157 1 
158 11 238 8 96 1 68 2 240 1 97 1 301 2 144 3 51 2 2 2 31 6 122 1 280 2 7 2 186 1 215 2 286 1 38 1 189 2 109 1 193 14 111 3 317 2 62 1 134 1 219 1 21 11 91 1 65 4 223 1 380 4 157 1 43 1 
238 1 96 1 355 1 68 1 203 1 324 1 206 1 162 1 301 1 358 1 30 1 31 1 72 1 230 1 55 1 73 1 123 1 211 1 7 1 185 2 35 1 250 1 232 1 189 1 109 1 193 2 62 1 317 1 115 1 236 1 22 1 174 2 65 1 380 2 177 1 157 1 118 1 43 1 
139 1 96 2 141 1 324 2 45 1 51 2 330 2 2 2 230 1 55 2 280 8 7 3 185 3 281 2 186 4 232 3 286 4 189 3 109 1 59 2 193 20 345 1 346 1 62 1 115 2 236 2 21 7 22 2 65 7 157 3 118 1 158 7 238 10 68 3 299 1 206 1 357 2 162 3 207 1 358 1 301 3 30 2 210 1 165 1 31 10 73 1 74 1 123 2 211 2 35 1 250 3 310 2 215 3 317 3 174 3 91 2 223 3 380 6 43 1 
238 1 68 2 297 1 206 1 162 8 142 1 358 1 301 2 30 2 145 1 31 1 230 2 73 1 55 2 211 2 7 2 185 1 307 1 250 8 147 1 232 7 103 2 84 1 189 2 254 1 109 1 14 1 193 2 345 1 317 2 131 1 174 1 22 3 262 1 380 4 157 2 351 1 118 1 43 1 
158 1 238 1 68 1 206 1 301 1 358 1 51 1 2 1 31 2 280 1 7 1 185 1 215 1 286 1 189 1 60 1 193 3 317 1 62 1 294 1 21 1 90 1 174 1 91 1 65 1 223 1 380 2 157 1 118 1 
158 1 238 2 68 1 215 1 189 1 254 1 193 2 301 1 317 1 2 1 247 1 280 1 21 1 7 1 186 1 65 1 380 2 157 1 
158 1 68 1 367 1 286 1 189 1 254 1 193 2 301 1 317 1 31 2 280 1 21 1 91 1 7 1 65 1 223 1 380 2 157 1 
238 2 158 2 68 1 301 1 51 1 2 1 31 2 280 2 7 1 186 1 215 1 286 1 189 1 254 1 193 4 317 1 21 2 91 1 65 2 223 1 380 2 157 1 
158 1 238 2 68 1 215 1 297 1 189 1 193 2 301 1 317 1 2 1 247 1 280 1 21 1 7 1 186 1 65 1 380 2 157 1 
158 1 68 1 297 1 367 1 286 1 189 1 193 2 301 1 317 1 31 2 280 1 21 1 91 1 7 1 65 1 223 1 380 2 157 1 
238 2 158 2 68 1 297 1 301 1 51 1 2 1 31 2 280 2 7 1 186 1 215 1 286 1 189 1 193 4 317 1 21 2 91 1 65 2 223 1 380 2 157 1 
158 2 238 2 68 1 215 1 286 1 189 1 193 4 301 1 317 1 51 1 2 1 31 2 280 2 21 2 91 1 7 1 223 1 186 1 65 2 380 2 157 1 
238 1 96 1 68 1 310 1 324 1 189 1 109 1 162 1 193 2 301 1 30 1 317 1 31 1 230 1 115 1 55 1 123 1 236 1 174 1 22 1 7 1 211 1 185 1 380 2 250 1 157 1 43 1 232 1 
238 1 94 1 96 1 68 1 324 1 162 1 301 1 30 1 98 1 31 1 230 1 55 1 211 1 7 1 185 1 250 1 232 1 189 1 109 1 193 2 317 1 115 1 293 1 22 1 174 1 380 2 157 1 43 1 
238 2 158 2 68 1 301 1 51 1 2 1 31 2 280 2 7 1 186 1 215 1 286 1 189 1 193 4 317 1 62 1 21 2 91 1 65 2 223 1 380 2 157 1 
158 2 238 2 68 1 324 1 162 1 301 1 30 1 51 1 2 1 31 2 55 1 280 2 123 1 211 1 7 1 186 1 185 1 250 1 232 1 215 1 310 1 286 1 189 1 59 1 193 4 317 1 115 1 236 1 21 2 91 1 22 1 174 1 223 1 65 2 380 2 157 1 351 1 
238 2 158 1 68 1 206 1 301 1 358 1 51 1 2 1 31 1 280 1 7 1 186 1 185 1 215 1 189 1 193 3 317 1 62 1 294 1 21 1 91 1 90 1 174 1 223 1 65 1 380 2 157 1 296 1 118 1 
238 9 68 2 97 1 301 2 361 1 144 1 51 3 2 3 31 10 122 1 280 6 124 1 186 3 251 2 187 1 9 1 215 3 286 3 342 2 189 2 193 19 111 2 374 1 317 2 152 1 19 1 91 3 223 3 380 4 156 1 
238 14 28 1 68 3 97 2 301 3 164 1 361 1 144 2 51 3 2 3 31 12 280 4 33 1 124 2 186 2 249 1 251 4 187 1 9 2 215 3 286 2 342 1 189 3 193 26 111 2 317 3 197 1 152 1 19 1 91 2 176 2 223 2 380 6 26 1 
139 1 45 1 97 3 51 4 144 3 2 4 280 8 186 4 187 1 9 2 286 4 189 3 342 1 193 41 111 4 346 1 19 1 152 1 197 1 26 1 238 20 28 1 68 3 301 3 164 1 361 1 210 1 165 1 31 21 122 1 74 1 33 1 124 1 249 1 251 4 215 5 374 1 317 3 91 4 223 5 176 1 380 6 93 1 
139 1 238 20 28 1 68 4 45 1 97 3 301 4 164 1 361 1 210 1 144 3 51 4 165 1 2 4 31 18 122 1 74 1 280 7 33 1 124 1 186 3 249 1 251 4 187 1 9 2 215 5 286 4 342 1 189 4 193 38 111 4 346 1 374 1 317 4 197 1 152 1 19 1 91 3 176 2 223 4 380 8 26 1 93 1 
139 1 238 27 28 1 68 2 45 1 97 2 301 2 164 1 361 1 210 1 144 4 51 7 165 1 2 7 31 25 122 2 74 1 280 14 33 1 124 1 186 7 249 1 251 4 187 1 9 1 215 8 286 7 342 1 189 2 193 52 111 4 346 1 317 2 197 1 152 1 19 1 219 2 91 7 176 1 223 8 380 4 26 1 
179 1 125 1 348 1 233 1 225 1 221 1 255 1 175 1 274 1 80 1 
279 1 243 1 
229 1 125 1 198 1 348 1 225 1 221 1 212 1 255 1 175 1 
179 1 125 1 107 1 267 2 233 1 343 1 225 1 150 1 226 1 255 1 347 1 228 1 348 1 136 1 64 1 221 1 175 1 80 1 
179 1 125 1 107 1 267 2 233 1 343 1 225 1 150 1 226 1 255 1 347 1 228 1 348 1 136 1 64 1 221 1 175 1 80 1 
179 1 125 1 107 1 267 2 233 1 343 1 225 1 150 1 226 1 255 1 347 1 228 1 348 1 136 1 64 1 221 1 175 1 80 1 
4 1 270 1 376 1 
4 1 270 1 376 1 
114 1 100 1 
114 1 270 1 100 1 
181 1 337 1 
96 1 266 1 267 1 206 2 181 1 225 1 243 1 358 2 227 1 228 1 52 1 279 1 185 2 337 1 125 1 85 1 12 1 343 1 255 1 347 1 348 1 64 1 377 1 174 2 221 1 175 1 118 2 
4 1 376 1 
114 1 270 1 100 1 
224 1 238 1 68 1 206 2 162 2 142 1 301 1 30 1 31 1 55 1 334 1 211 1 7 1 185 2 282 1 250 2 103 2 232 2 149 1 189 1 109 1 14 1 193 2 62 1 317 1 22 1 261 1 174 2 380 2 157 1 43 1 
285 1 188 2 83 1 120 1 162 2 163 1 244 1 345 1 30 1 195 1 182 1 378 1 379 1 211 1 250 2 283 1 200 1 232 2 351 1 
285 1 188 2 120 1 162 1 70 1 163 1 244 1 345 1 30 1 195 1 378 1 379 1 211 1 250 1 283 1 200 1 232 1 
285 1 83 1 84 1 162 1 30 1 132 1 230 1 55 1 22 1 199 1 211 1 250 1 147 1 232 1 
285 1 188 2 83 1 120 1 162 1 163 1 244 1 345 1 30 1 195 1 182 1 378 1 379 1 211 1 250 1 283 1 200 1 232 1 
329 1 
257 1 309 1 246 1 126 1 116 1 150 1 336 1 
95 1 47 1 276 1 246 1 304 1 76 1 79 1 340 1 309 1 343 1 150 2 314 1 112 1 257 1 64 1 138 1 265 1 
324 3 44 2 47 4 51 2 276 5 330 2 2 2 230 1 55 3 102 3 336 1 231 2 57 2 232 3 340 4 284 2 58 2 343 5 150 8 151 6 291 2 112 4 64 5 295 1 155 2 116 1 22 10 351 1 241 1 162 3 29 2 30 3 246 9 304 4 248 1 211 4 76 6 250 3 308 1 309 8 215 2 253 1 171 2 217 2 315 2 314 3 130 1 257 2 88 2 259 6 91 2 223 2 264 1 265 12 
28 1 140 1 204 1 44 2 97 1 47 2 144 1 51 2 276 1 2 2 246 8 304 2 33 1 76 3 249 1 57 1 340 2 309 5 215 2 253 1 343 1 314 1 150 5 111 1 291 1 151 5 112 2 257 2 197 1 64 1 259 5 91 2 223 2 265 6 26 1 
44 2 206 1 45 1 47 1 272 1 326 1 328 1 358 1 210 1 304 1 246 2 74 1 185 1 213 1 77 1 340 1 309 2 215 2 343 1 216 1 291 1 112 1 64 1 137 1 174 1 90 1 223 1 118 1 
340 1 309 1 47 1 150 1 112 1 257 1 304 1 246 1 116 1 336 1 
309 5 215 2 44 2 150 5 291 1 151 5 51 2 330 1 2 2 246 5 259 5 91 2 76 5 223 2 265 10 
276 1 257 1 64 1 343 1 150 1 314 1 
162 4 47 1 208 1 30 1 276 4 230 2 55 1 304 2 246 2 248 1 211 1 250 4 147 1 232 4 57 2 340 2 309 2 84 1 253 2 343 3 314 2 112 2 375 1 41 1 64 3 22 1 23 1 264 2 66 1 
96 1 68 1 324 1 206 2 162 1 326 1 301 1 358 2 30 1 31 1 230 1 55 1 123 1 211 1 7 1 185 3 250 1 232 1 310 1 189 1 193 1 372 1 317 1 115 1 236 1 174 3 90 2 22 1 380 2 157 1 43 1 118 2 
340 1 309 2 253 1 47 1 150 4 346 1 151 2 112 1 257 2 304 1 246 1 259 2 76 2 265 4 57 1 
348 1 255 1 338 1 
348 1 255 1 338 1 
179 1 348 1 181 1 255 1 71 1 
348 1 255 1 338 1 
348 1 222 1 255 1 
348 1 222 1 255 1 
348 1 222 1 255 1 
348 1 255 1 
225 1 221 1 
238 4 139 1 215 1 68 2 286 2 189 2 45 1 193 8 301 2 346 1 317 2 210 1 165 1 31 4 74 1 280 3 223 1 186 1 176 1 380 4 
238 3 210 1 139 1 165 1 31 3 215 1 286 2 126 1 74 1 45 1 280 2 193 6 223 1 346 1 
238 2 68 1 215 1 286 1 161 1 189 1 193 4 301 1 317 1 51 1 2 1 31 2 280 2 91 1 223 1 186 1 380 2 
238 3 215 1 286 1 97 1 193 7 111 2 144 1 51 1 2 1 31 4 122 1 280 2 91 1 223 1 186 1 
139 1 238 11 68 2 240 1 45 1 301 2 210 2 51 2 144 2 165 1 2 2 31 12 122 1 74 2 280 9 186 4 215 3 286 5 189 2 193 23 111 2 346 1 317 2 219 1 91 2 260 1 223 3 176 2 380 4 
31 1 193 1 111 1 
238 1 144 1 193 1 
238 3 68 1 215 1 286 2 189 1 161 1 193 6 301 1 317 1 51 1 330 1 2 1 31 3 280 3 91 1 186 1 223 1 380 2 
238 6 28 1 68 1 97 1 301 1 144 1 51 2 2 2 31 6 280 2 33 1 186 1 249 1 215 2 286 1 189 1 193 12 111 1 317 1 19 1 197 1 91 2 223 2 380 2 26 1 
238 3 215 1 286 1 45 1 193 6 210 1 31 3 74 1 280 2 223 1 186 1 
238 1 139 1 68 1 286 1 189 1 193 3 301 1 210 1 317 1 165 1 31 2 74 1 280 2 260 1 186 1 176 1 380 2 
238 5 68 1 215 2 286 3 189 1 45 1 193 10 301 1 317 1 210 2 31 5 19 1 74 2 280 5 186 2 223 2 380 2 213 1 
238 2 68 1 215 1 189 1 193 2 301 1 317 1 2 1 19 1 280 1 186 1 380 2 
238 2 68 1 215 1 286 1 189 1 193 4 301 1 317 1 51 1 2 1 31 2 19 1 280 2 91 1 223 1 186 1 380 2 
238 1 68 3 286 1 189 3 193 3 301 3 374 1 317 3 210 1 31 2 19 1 74 1 280 2 260 1 176 1 186 1 380 6 
139 1 238 16 68 5 161 1 45 2 97 1 301 5 273 1 210 3 144 3 51 3 165 1 2 3 31 18 122 1 74 3 280 12 34 1 186 5 215 5 286 7 11 1 189 5 193 34 111 4 346 1 374 1 317 5 19 1 260 1 91 3 176 2 223 5 380 10 
238 4 139 1 68 1 45 1 97 1 301 1 144 1 210 1 165 1 31 4 74 1 280 2 215 1 286 2 189 1 193 8 111 1 346 1 317 1 19 1 223 1 380 2 26 1 
139 1 238 6 68 2 161 1 45 1 97 1 301 2 210 1 144 1 51 1 165 1 2 1 31 5 122 1 74 1 280 3 186 1 215 2 286 2 189 2 193 11 111 2 346 1 317 2 19 1 223 1 380 4 26 1 
139 1 238 9 28 1 68 3 161 1 45 1 97 1 301 3 210 1 144 1 51 2 165 1 2 2 31 10 74 1 280 4 33 1 186 1 249 1 215 3 286 3 189 3 193 19 111 1 346 1 317 3 197 1 19 1 91 2 223 3 176 1 380 6 26 1 
139 1 238 10 28 1 68 3 161 1 45 1 97 1 301 3 210 1 144 1 51 2 165 1 2 2 31 7 74 1 280 5 33 1 186 2 249 1 215 3 286 3 189 3 193 17 111 1 346 1 317 3 19 1 197 1 91 1 176 1 223 2 380 6 26 1 
238 4 139 1 68 1 45 1 97 1 301 1 144 1 210 1 165 1 31 4 74 1 280 2 215 1 286 2 189 1 193 8 111 1 346 1 317 1 19 1 223 1 380 2 26 1 
238 6 28 1 68 1 97 1 301 1 144 1 51 2 2 2 31 6 280 2 33 1 186 1 249 1 215 2 286 1 189 1 193 12 111 1 317 1 19 1 197 1 91 2 223 2 380 2 26 1 
139 1 238 10 28 1 68 4 161 1 45 1 97 1 301 4 210 1 144 1 51 2 165 1 2 2 31 8 74 1 280 5 33 1 186 2 249 1 215 3 286 3 189 4 193 18 111 1 346 1 317 4 197 1 19 1 91 1 223 2 176 2 380 8 26 1 
238 9 28 1 68 4 97 1 301 4 144 1 51 3 2 3 31 7 280 6 33 1 186 3 249 1 215 3 286 3 189 4 193 16 111 1 374 1 317 4 197 1 19 1 91 2 223 2 176 2 380 8 26 1 
139 1 238 3 215 1 286 3 45 1 193 7 210 3 165 2 31 4 74 3 280 6 223 1 186 3 
139 1 238 10 28 1 68 4 45 1 97 1 301 4 210 1 144 1 51 2 165 1 2 2 31 8 74 1 280 4 33 1 186 1 249 1 215 3 286 3 189 4 193 18 111 1 346 1 374 1 317 4 197 1 19 1 91 1 223 2 176 2 380 8 26 1 
96 1 89 1 363 1 206 1 46 1 174 1 185 1 
96 1 206 1 242 1 46 1 183 1 89 1 363 1 75 1 174 1 349 1 185 1 78 1 
230 1 55 1 84 1 126 1 162 1 22 1 211 1 147 1 250 1 30 1 232 1 
96 1 324 1 206 1 162 1 358 1 30 1 230 1 55 1 115 1 73 1 236 1 22 1 174 2 211 1 185 2 250 1 118 1 232 1 
324 2 206 1 162 1 358 1 30 1 55 2 115 1 73 1 236 1 155 1 22 3 174 1 211 1 185 1 264 1 250 1 231 1 118 1 232 1 
94 1 324 2 206 1 162 1 358 1 30 1 55 2 115 1 73 1 155 1 22 3 174 1 211 1 185 1 264 1 250 1 231 1 118 1 232 1 
160 1 324 1 343 2 58 1 170 1 162 3 150 1 218 1 30 1 276 1 257 1 88 1 230 1 55 1 64 2 155 1 102 1 22 4 211 1 264 1 250 3 231 1 232 3 
324 1 343 2 58 1 170 1 162 3 29 1 150 1 30 1 276 1 257 1 88 1 230 1 55 1 64 2 155 1 102 1 22 4 211 1 264 1 250 3 231 1 232 3 
145 1 162 1 211 1 250 1 30 1 232 1 
308 1 324 1 288 1 162 7 142 1 345 1 30 2 173 1 145 1 131 1 230 2 3 1 55 2 22 3 262 1 211 3 307 1 250 7 103 1 351 1 232 6 
139 1 96 2 324 1 45 1 55 1 280 2 7 2 185 2 232 1 286 2 189 2 59 1 193 6 346 1 62 1 115 1 236 1 21 1 22 1 65 1 157 2 351 1 118 1 238 3 158 1 68 2 206 1 357 1 162 1 358 1 301 2 30 1 210 1 165 1 31 3 73 1 74 1 123 1 211 1 250 1 310 1 215 1 317 2 174 2 261 1 223 1 380 4 
266 1 162 1 29 1 47 2 276 2 230 1 246 1 304 2 248 1 102 1 336 1 250 1 232 1 340 2 309 1 343 3 58 1 171 1 150 1 217 1 315 1 314 1 112 2 257 1 88 1 64 3 116 1 22 2 
308 1 324 1 241 1 58 1 162 2 30 1 145 1 55 1 22 2 211 2 250 2 351 1 232 2 
105 1 230 1 55 1 84 1 170 1 162 4 22 1 211 1 147 1 250 4 30 1 351 1 232 4 
141 1 324 1 269 1 288 1 162 2 30 1 173 1 20 1 55 1 22 1 211 2 264 1 250 2 232 2 
188 1 230 1 378 1 162 1 211 1 250 1 30 1 200 1 195 1 232 1 
55 1 162 2 22 1 142 1 211 1 282 1 345 1 250 2 30 1 232 2 351 1 
105 1 84 1 162 5 142 1 30 2 230 1 55 2 22 3 211 2 262 1 264 1 147 1 250 5 307 1 232 4 351 1 
105 1 84 1 162 5 142 1 30 2 230 1 235 1 55 2 22 3 211 2 262 1 264 1 147 1 250 5 232 4 351 1 
94 1 96 1 324 1 206 1 162 1 358 1 30 1 230 1 55 1 115 1 73 1 22 1 174 2 211 1 185 2 250 1 118 1 232 1 
308 1 324 1 288 1 162 1 30 1 173 1 3 1 55 1 22 1 211 2 264 1 250 1 232 1 
96 1 371 1 121 1 48 1 290 1 
96 1 202 1 266 1 343 2 180 1 371 2 216 1 150 1 121 1 172 1 359 1 48 2 209 1 290 2 50 1 257 1 88 1 64 2 42 1 
224 1 149 1 206 1 371 1 121 1 290 1 334 1 174 1 185 1 
121 1 359 1 172 1 
368 1 126 1 40 1 365 1 
275 1 106 1 368 1 13 1 40 1 365 1 381 1 
275 1 312 1 24 1 
104 2 106 3 368 1 369 1 108 1 13 1 40 1 313 1 275 3 25 1 381 1 365 1 
275 2 106 2 368 1 13 1 40 1 365 1 36 1 381 1 27 1 
106 1 368 1 188 1 369 1 86 1 13 1 128 1 195 1 275 1 379 1 381 1 
275 1 106 1 368 1 369 1 13 1 365 1 381 1 
275 1 106 1 369 1 13 1 40 1 365 2 381 1 
119 1 106 2 368 1 369 1 13 2 275 2 54 1 135 1 365 1 381 2 
106 3 368 2 369 1 86 1 13 1 40 1 275 3 331 1 332 1 146 1 365 1 381 1 27 2 
106 2 368 1 188 2 148 1 369 1 13 1 40 1 163 1 195 1 275 2 378 1 379 1 365 1 381 1 27 1 
106 4 368 2 369 1 86 1 13 2 40 1 18 1 275 4 146 1 365 1 381 2 36 1 27 2 
275 1 106 1 368 1 369 1 13 1 40 1 365 1 381 1 
104 1 106 4 368 3 86 1 13 1 40 2 313 1 275 4 146 1 117 1 25 1 365 2 381 1 27 2 
339 1 106 2 368 1 369 1 13 1 40 1 194 1 275 2 92 1 365 1 381 1 27 1 
104 2 275 3 106 3 368 1 369 1 13 1 40 1 313 2 25 1 365 1 381 1 61 1 
196 1 368 2 190 2 352 1 
275 1 106 1 369 1 320 1 13 1 381 1 
275 2 106 2 368 1 332 1 369 1 13 1 40 1 365 1 381 1 27 1 
322 1 
275 1 106 1 368 1 369 1 13 1 40 1 365 1 381 1 
104 1 275 3 106 3 332 1 368 1 369 1 13 1 40 1 365 1 381 1 27 1 
368 1 86 1 146 1 117 1 
368 1 365 1 

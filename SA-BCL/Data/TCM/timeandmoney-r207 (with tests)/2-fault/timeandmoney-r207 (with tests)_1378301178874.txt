#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 282 67 84 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 282 67 84 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 1 362 2 27 1 329 4 1 3 168 9 120 5 306 2 336 1 170 1 264 1 32 1 50 9 108 1 13 1 181 1 66 1 14 1 318 1 256 2 205 6 321 1 93 2 322 1 23 2 381 2 25 1 326 2 
44 1 27 1 362 2 329 4 1 3 168 9 120 5 306 2 336 1 170 1 264 1 32 1 50 9 108 1 13 1 181 1 66 1 14 1 318 1 256 2 205 6 321 1 93 2 322 1 23 2 381 2 25 1 326 2 
44 1 27 1 362 2 329 5 1 4 168 10 120 6 306 2 336 1 170 1 264 1 32 1 50 10 108 1 13 1 181 1 66 1 14 1 318 1 256 2 205 7 321 1 93 2 322 1 23 2 381 2 25 1 326 2 
44 1 27 1 362 1 329 3 1 2 168 7 120 4 306 2 336 1 264 1 32 1 50 7 108 1 13 1 181 1 66 1 14 1 318 1 256 2 205 4 321 1 93 2 322 1 23 2 381 2 25 1 326 2 
44 1 362 2 181 1 329 2 1 1 168 4 120 3 306 1 170 1 264 1 205 3 50 4 93 1 322 1 23 1 381 1 25 1 326 1 
44 1 27 1 66 1 120 1 168 2 230 1 264 1 256 1 50 2 93 1 23 1 96 1 355 1 381 1 25 1 326 1 
44 1 329 1 1 1 168 3 120 2 318 1 264 1 256 1 205 1 50 3 23 2 25 1 326 2 
44 1 362 2 329 4 1 3 168 9 120 5 306 1 336 1 264 1 170 1 50 9 345 1 108 1 181 1 347 1 318 1 256 1 205 7 93 1 322 1 23 2 381 1 25 1 326 2 
44 1 362 2 329 4 1 3 168 9 120 5 306 1 336 1 264 1 170 1 50 9 345 1 108 1 181 1 347 1 318 1 256 1 205 7 93 1 322 1 23 2 381 1 25 1 326 2 
63 1 64 1 3 1 
63 1 137 1 184 2 
211 1 36 2 183 2 372 2 95 2 112 1 5 2 313 2 
211 1 151 1 191 1 213 1 241 1 333 1 101 2 5 2 102 1 172 1 308 1 53 2 198 1 81 1 106 1 58 1 272 1 11 1 12 1 313 2 36 3 136 1 183 3 372 2 254 1 292 2 112 1 319 1 320 2 115 1 144 1 233 1 145 1 298 1 95 2 97 1 117 2 
105 1 211 1 36 1 287 1 183 1 372 1 95 1 5 1 313 1 20 1 
36 1 63 1 287 1 64 1 315 1 279 1 365 1 183 1 304 1 374 1 114 1 129 1 313 1 258 1 
36 1 63 1 287 1 64 1 279 2 365 1 183 1 304 1 372 1 374 1 5 1 129 1 95 1 258 2 313 1 
279 1 223 1 17 1 375 1 258 1 
63 1 64 1 279 2 334 1 17 1 118 1 375 1 258 2 
279 1 17 1 258 1 
211 1 36 1 287 1 279 1 183 1 372 1 5 1 375 1 20 1 105 1 379 1 95 1 258 1 313 1 
63 1 
63 1 64 1 279 2 280 1 17 1 118 1 375 1 258 2 
86 1 63 1 64 1 279 5 260 1 4 2 17 2 375 2 169 1 196 1 125 1 377 1 206 1 248 2 208 1 354 1 118 1 361 2 258 5 
3 1 112 1 
36 2 183 2 372 1 111 1 5 1 112 2 95 1 133 1 313 2 
364 1 74 1 275 1 
36 1 136 1 183 1 333 1 263 1 292 1 112 1 172 1 308 1 144 1 233 1 53 1 81 1 117 1 97 1 11 1 
39 2 36 5 220 1 315 1 192 1 252 1 183 5 165 1 372 4 95 1 112 1 111 1 5 4 313 5 
105 1 36 2 287 1 183 2 35 1 372 2 5 2 313 2 
36 2 136 1 364 1 183 2 333 1 372 1 292 1 5 1 172 1 308 1 39 1 144 1 233 1 53 1 81 1 165 1 97 1 117 1 11 1 313 1 
39 1 36 3 183 3 372 3 95 1 112 1 5 3 313 3 
105 1 36 1 287 1 183 1 372 1 5 1 313 1 
36 1 287 1 183 1 372 1 95 1 5 1 111 1 133 1 313 1 
211 1 151 1 279 1 213 1 365 1 304 1 333 1 101 1 5 3 172 1 102 1 308 1 129 1 53 1 158 1 198 1 81 1 58 1 11 1 12 1 313 3 36 4 136 1 287 1 183 4 372 3 374 1 292 1 112 1 111 1 319 1 320 2 115 1 39 1 144 1 233 1 145 1 42 1 298 1 165 1 95 2 97 1 117 1 258 1 
39 1 36 2 315 1 252 1 183 2 372 1 112 1 5 1 313 2 
36 3 63 1 287 1 279 1 365 1 183 3 304 1 372 3 231 1 374 1 111 1 5 3 39 2 42 1 129 1 165 1 95 1 258 1 313 3 
36 2 364 1 183 2 74 1 372 2 111 1 5 2 39 1 95 1 313 2 
36 1 136 1 183 1 333 1 292 1 112 1 172 1 308 1 144 1 233 1 53 1 81 1 117 1 97 1 11 1 
36 1 183 1 333 1 292 1 112 1 172 1 144 1 233 1 53 1 81 1 117 1 324 1 97 1 360 1 11 1 
303 1 151 1 191 2 364 2 213 1 74 2 305 1 101 4 335 1 267 1 58 1 273 1 12 1 316 1 109 1 141 1 186 1 275 2 319 1 320 2 115 1 298 2 24 1 357 1 
36 1 287 1 183 1 372 1 35 1 374 1 5 1 313 1 
150 1 57 1 
150 1 57 1 
270 1 6 1 
270 1 6 1 
270 1 6 1 
150 1 140 1 57 1 
150 1 140 1 57 1 
150 1 227 1 57 1 
286 1 150 2 278 1 270 1 57 2 6 1 
150 1 140 1 57 1 
150 1 153 1 57 1 
150 1 153 1 57 1 
150 1 153 1 57 1 
150 1 302 1 279 1 5 2 49 1 124 1 265 1 104 1 219 1 126 1 78 1 57 1 200 1 132 1 313 2 36 2 227 1 183 2 372 2 112 1 353 1 70 1 358 1 258 1 
150 2 302 1 278 1 63 1 0 1 279 2 152 1 138 2 331 1 332 1 337 1 38 1 104 2 265 3 78 2 353 2 57 2 132 2 258 2 
93 1 306 1 381 1 
93 1 355 1 381 1 
155 1 98 1 93 3 306 2 355 1 61 1 
155 1 98 1 93 2 147 1 306 1 355 1 
98 1 155 2 93 2 306 1 355 1 
363 1 279 5 259 2 367 1 4 1 49 1 103 1 125 1 219 1 248 1 224 1 174 1 200 1 273 1 86 3 63 2 64 1 137 1 316 1 184 3 274 2 17 1 19 2 375 4 206 2 276 1 187 1 24 1 357 1 118 1 361 1 258 5 
279 9 260 1 259 6 4 2 75 1 125 1 128 5 248 2 343 1 83 1 223 5 344 1 224 2 174 3 200 4 273 3 86 8 63 5 64 1 204 1 137 3 316 3 184 9 185 1 17 6 19 6 375 7 206 6 276 2 187 1 24 3 357 3 118 1 361 2 258 9 
363 1 279 3 260 1 259 2 367 1 4 1 248 1 224 1 174 1 200 1 273 1 86 3 63 3 64 1 137 2 316 1 184 4 274 1 375 2 19 2 276 1 206 2 24 1 357 1 361 1 258 3 
363 1 279 4 259 4 260 1 367 1 4 1 248 1 343 1 83 1 224 1 174 2 200 2 273 2 86 5 63 4 64 1 137 3 316 2 184 7 185 1 274 2 19 4 375 3 276 1 206 4 24 2 357 2 361 1 258 4 
81 1 348 1 3 1 
160 1 81 1 
309 1 
144 1 81 1 97 1 
81 1 9 1 
144 1 81 1 
144 1 127 1 81 3 100 1 348 2 97 1 
191 4 182 2 37 1 186 3 122 1 101 7 335 2 110 1 298 3 55 1 357 1 166 1 236 1 177 1 209 1 273 1 202 1 
191 4 182 2 37 1 186 3 122 1 101 7 335 2 110 1 298 3 55 1 357 1 166 1 236 1 177 1 209 1 273 1 202 1 
238 1 191 4 182 2 37 1 186 3 122 1 101 7 335 2 110 1 298 3 55 1 357 1 166 1 236 1 177 1 209 1 273 1 202 1 
151 1 46 1 191 16 122 2 193 4 101 31 335 5 338 1 77 1 55 1 174 3 58 1 130 3 177 2 85 1 273 4 12 1 202 2 65 1 182 3 316 3 37 1 88 1 186 10 110 2 319 1 320 2 143 1 298 15 24 3 166 1 357 4 236 1 209 5 
226 1 151 2 65 1 191 5 182 2 37 1 186 4 122 1 101 9 335 3 110 1 319 2 320 4 295 1 298 4 55 1 357 1 58 2 236 1 177 1 209 1 273 1 202 1 12 2 
44 1 240 1 120 1 168 2 306 1 264 1 172 1 50 2 34 1 53 1 222 1 269 1 312 1 11 1 61 1 228 1 292 1 290 1 142 1 256 1 205 1 93 2 146 1 23 1 355 1 117 1 381 1 25 1 326 1 327 1 
44 1 240 1 120 1 168 3 306 1 172 1 340 1 50 3 34 1 157 1 53 1 269 1 312 1 11 1 61 1 228 1 292 1 290 1 142 1 256 1 205 2 90 1 93 2 146 1 23 1 355 1 117 1 381 1 25 1 326 1 
44 1 240 1 120 1 168 2 306 1 172 1 340 1 50 2 34 1 53 1 269 1 11 1 61 1 228 1 292 1 290 1 256 1 205 2 90 1 93 2 146 1 355 1 117 1 381 1 25 1 
168 1 2 1 333 1 15 1 292 1 172 1 307 1 256 2 50 1 144 1 232 1 34 2 157 1 53 1 146 2 269 2 81 1 23 1 117 1 11 1 72 1 326 1 314 1 
240 1 228 1 168 1 306 1 290 1 292 1 172 1 142 1 264 1 340 1 256 1 50 1 34 1 93 2 53 1 146 1 269 1 312 1 23 1 355 1 117 1 381 1 11 1 61 1 327 1 326 1 
221 1 
279 5 333 2 4 1 197 2 246 1 341 1 248 1 53 2 56 2 11 1 59 4 62 2 63 2 287 1 64 1 251 1 253 2 292 2 17 6 114 1 113 1 161 1 206 2 296 1 207 1 117 2 118 3 72 1 71 1 361 1 258 5 365 1 29 1 261 1 304 1 172 1 125 1 268 2 129 1 82 1 81 1 131 1 178 2 314 1 313 1 86 2 36 1 315 1 137 2 184 2 183 1 374 1 144 1 276 1 325 2 
279 3 365 1 280 1 29 1 304 1 129 1 131 1 59 2 313 1 36 1 287 1 315 1 251 1 183 1 253 1 374 1 17 2 114 1 207 1 118 1 71 1 258 3 
279 3 365 1 280 1 29 1 304 1 129 1 268 1 131 1 59 3 313 1 36 1 287 1 63 1 315 1 251 1 64 1 183 1 374 1 17 1 114 1 207 1 118 1 71 1 258 3 
279 3 280 1 365 1 29 1 304 1 129 1 268 1 56 1 131 1 59 3 313 1 36 1 287 1 63 1 315 1 251 1 64 1 183 1 253 1 374 1 17 2 114 1 207 1 118 1 71 1 258 3 
279 5 280 1 4 1 8 1 246 1 197 2 248 1 199 1 56 4 59 6 62 2 287 1 63 5 251 1 64 5 253 4 17 7 114 1 113 1 206 1 207 1 356 1 118 3 71 1 361 1 258 5 365 1 29 1 304 1 125 1 310 1 129 1 268 4 80 1 131 1 313 1 178 2 36 1 86 1 315 1 137 2 183 1 374 1 325 2 
279 4 365 1 29 1 304 1 4 1 125 1 197 2 246 1 248 1 268 2 129 1 56 2 131 1 59 4 178 2 62 2 313 1 86 1 36 1 63 2 287 1 64 1 251 1 315 1 137 2 184 2 183 1 253 2 374 1 17 4 114 1 113 1 161 1 206 1 207 1 118 2 325 2 71 1 361 1 258 4 
279 4 365 1 29 1 304 1 4 1 125 1 310 1 197 2 246 1 248 1 268 2 129 1 80 1 199 1 56 2 131 1 59 4 178 2 62 2 313 1 86 1 36 1 63 1 287 1 64 1 315 1 251 1 137 2 183 1 253 2 374 1 17 4 113 1 114 1 206 1 207 1 118 2 325 2 71 1 361 1 258 4 
279 4 365 1 29 1 304 1 4 1 125 1 310 1 197 2 246 1 248 1 268 2 129 1 80 1 199 1 56 2 131 1 59 4 178 2 62 2 313 1 86 1 36 1 63 1 287 1 64 1 315 1 251 1 137 2 183 1 253 2 374 1 17 4 113 1 114 1 206 1 207 1 118 2 325 2 71 1 361 1 258 4 
279 4 365 1 29 1 304 1 4 1 125 1 368 2 246 1 248 1 268 2 129 1 80 1 56 2 131 1 59 4 178 2 62 2 313 1 86 1 36 1 63 1 287 1 64 1 315 1 251 1 159 1 184 2 183 1 253 2 374 1 17 4 114 1 206 1 162 1 91 1 207 1 277 2 118 2 71 1 361 1 258 4 
211 1 279 2 365 1 29 1 304 1 5 1 105 1 8 1 129 1 268 1 56 1 131 1 59 3 313 2 36 2 63 1 287 2 64 1 315 1 251 1 183 2 372 1 253 1 374 1 17 1 114 1 20 1 379 1 207 1 95 1 71 1 258 2 
211 1 279 2 365 1 29 1 304 1 5 1 105 1 8 1 129 1 268 1 56 1 131 1 59 3 313 2 36 2 63 1 287 2 64 1 315 1 251 1 183 2 372 1 253 1 374 1 17 1 114 1 20 1 379 1 207 1 95 1 71 1 258 2 
279 4 365 1 29 1 304 1 4 1 125 1 368 2 246 1 248 1 268 2 129 1 56 2 131 1 59 4 178 2 62 2 313 1 86 1 36 1 63 1 287 1 64 1 251 1 315 1 159 1 184 2 183 1 253 2 374 1 17 4 114 1 161 1 206 1 207 1 277 2 118 2 71 1 361 1 258 4 
151 1 364 1 191 3 213 1 74 1 3 1 101 6 335 2 55 1 58 1 177 1 273 1 12 1 182 1 37 1 141 1 186 2 275 1 110 1 112 2 319 1 320 2 115 1 298 3 357 1 236 1 
151 2 364 11 191 8 46 1 213 1 74 4 262 1 193 3 101 14 335 1 7 1 173 1 174 2 58 2 130 3 85 1 273 1 12 2 316 1 186 2 275 11 254 1 112 1 319 2 320 4 115 2 145 1 298 6 24 2 299 1 357 2 300 1 209 1 
151 1 73 1 191 1 213 1 333 1 74 1 101 2 263 1 5 1 172 1 308 1 53 1 81 1 58 1 11 1 370 1 12 1 313 1 36 2 136 1 346 1 183 2 372 1 292 1 254 1 112 1 319 1 115 1 320 2 39 1 144 1 233 1 145 1 298 1 165 1 97 1 117 1 299 1 
151 3 191 10 333 1 48 2 101 20 335 4 5 1 102 2 340 1 244 2 53 3 55 1 58 3 11 2 12 3 254 1 292 3 112 2 110 1 115 3 298 10 165 1 24 2 117 3 299 1 357 3 209 4 364 7 213 3 30 1 74 7 218 1 172 2 308 2 81 2 174 2 271 2 177 1 273 3 313 1 134 1 36 3 136 2 182 1 87 2 183 3 316 2 37 1 372 1 186 8 275 7 319 3 320 6 39 1 144 2 233 2 145 1 97 2 236 1 
151 2 119 1 191 1 213 2 333 2 101 2 5 1 172 2 340 1 222 1 53 6 282 1 81 3 84 1 106 1 58 2 11 2 313 1 12 2 314 1 36 1 67 1 183 1 141 1 372 1 292 6 254 1 319 2 320 4 115 2 39 1 351 1 144 2 234 1 145 1 297 1 298 1 117 5 72 1 
151 1 364 1 191 1 213 1 74 1 101 3 335 1 5 1 174 1 58 1 273 1 12 1 313 1 179 1 36 1 183 1 316 1 186 1 372 1 275 1 111 1 319 1 320 2 115 1 298 2 95 1 24 1 299 1 357 1 
151 1 364 1 191 2 213 1 74 1 186 1 141 1 305 1 275 1 101 2 319 1 115 1 320 2 24 1 357 1 58 1 209 1 12 1 
151 1 364 1 213 1 316 1 74 1 109 1 186 1 141 1 275 1 101 2 335 1 319 1 115 1 320 2 298 2 58 1 273 1 12 1 
151 1 191 2 364 2 213 1 74 2 101 4 335 1 174 1 58 1 273 1 12 1 316 1 141 1 186 2 275 2 319 1 320 2 115 1 298 2 24 1 357 1 209 1 
151 1 364 1 191 2 213 1 74 1 186 1 305 1 275 1 101 2 319 1 115 1 320 2 351 1 24 1 357 1 58 1 209 1 12 1 
151 1 364 1 213 1 316 1 74 1 109 1 186 1 275 1 101 2 335 1 319 1 115 1 320 2 351 1 298 2 58 1 273 1 12 1 
151 1 191 2 364 2 213 1 74 2 101 4 335 1 174 1 58 1 273 1 12 1 316 1 186 2 275 2 319 1 320 2 115 1 351 1 298 2 24 1 357 1 209 1 
151 1 191 2 364 2 213 1 74 2 101 4 335 1 174 1 58 1 273 1 12 1 316 1 186 2 275 2 319 1 320 2 115 1 298 2 24 1 357 1 209 1 
151 1 191 1 213 1 333 1 101 2 172 1 102 1 308 1 53 1 81 1 58 1 11 1 12 1 36 1 136 1 183 1 254 1 292 1 112 1 319 1 115 1 320 2 144 1 233 1 145 1 298 1 97 1 117 1 
151 1 191 1 213 1 333 1 101 2 172 1 53 1 81 1 58 1 11 1 12 1 36 1 183 1 254 1 373 1 292 1 112 1 319 1 115 1 320 2 144 1 233 1 145 1 298 1 97 1 324 1 117 1 360 1 
151 1 191 2 364 2 213 1 74 2 101 4 335 1 174 1 58 1 273 1 12 1 316 1 186 2 275 2 319 1 320 2 115 1 298 2 24 1 357 1 299 1 209 1 
151 1 364 2 191 2 213 1 74 2 101 4 335 1 172 1 102 1 308 1 53 1 222 1 81 1 174 1 271 1 58 1 11 1 273 1 12 1 36 1 136 1 316 1 183 1 186 2 275 2 292 1 319 1 115 1 320 2 144 1 233 1 298 2 24 1 357 1 97 1 117 1 209 1 
151 1 191 2 364 1 213 1 74 1 101 3 5 1 174 1 58 1 273 1 12 1 313 1 36 1 316 1 183 1 186 1 372 1 275 1 111 1 319 1 320 2 115 1 298 1 95 1 24 1 299 1 357 1 209 1 167 1 
328 1 151 2 191 9 46 1 123 1 193 2 101 19 335 3 52 1 174 3 58 2 130 1 85 1 273 3 12 2 226 1 229 2 316 3 186 6 291 1 16 1 319 2 320 4 89 2 116 1 298 10 24 3 357 3 209 3 301 1 
328 2 151 3 191 14 123 1 101 26 193 2 335 2 339 1 52 1 174 3 176 1 58 3 130 2 273 2 85 2 12 3 250 1 226 1 65 2 229 1 316 2 186 4 69 1 16 1 319 3 320 6 349 1 89 4 116 2 378 1 298 12 24 3 357 3 209 2 
328 1 151 3 46 1 191 20 101 41 193 4 335 4 339 1 52 1 55 1 58 3 12 3 250 1 65 1 69 1 16 1 291 1 110 1 349 1 116 2 22 1 298 21 24 4 357 5 209 4 123 1 174 4 176 1 130 3 177 1 273 5 85 3 226 1 182 1 316 4 229 1 37 1 186 8 319 3 320 6 89 4 378 1 236 1 
328 1 151 4 191 20 46 1 123 1 193 4 101 38 335 4 339 1 52 1 55 1 174 4 176 1 58 4 130 3 177 1 85 3 273 4 12 4 250 1 226 1 65 2 182 1 229 1 316 3 37 1 69 1 186 7 291 1 16 1 110 1 319 4 349 1 320 8 89 4 116 2 22 1 378 1 298 18 24 4 357 5 236 1 209 3 
328 1 151 2 191 27 46 2 123 1 193 4 101 52 335 7 339 1 7 2 52 1 55 1 174 7 176 1 58 2 130 4 177 1 85 2 273 8 12 2 250 1 226 1 65 1 182 1 229 1 316 7 37 1 69 1 186 14 16 1 110 1 319 2 349 1 320 4 89 4 116 1 378 1 298 25 24 7 357 8 236 1 209 7 
150 1 278 1 0 1 331 1 353 1 78 1 57 1 283 1 132 1 104 1 
227 1 70 1 
150 1 212 1 353 1 78 1 31 1 323 1 57 1 132 1 104 1 
140 1 60 1 
286 1 153 1 284 1 
302 1 150 1 278 1 63 1 0 1 279 1 152 1 138 1 331 1 332 1 38 1 104 1 265 2 78 1 353 1 57 1 132 1 258 1 
302 1 150 1 278 1 63 1 0 1 279 1 152 1 138 1 331 1 332 1 38 1 104 1 265 2 78 1 353 1 57 1 132 1 258 1 
302 1 150 1 278 1 63 1 0 1 279 1 152 1 138 1 331 1 332 1 38 1 104 1 265 2 78 1 353 1 57 1 132 1 258 1 
286 1 140 1 60 1 
286 1 140 1 60 1 
153 1 284 1 
286 1 153 1 284 1 
126 1 358 1 
150 1 279 1 152 1 5 2 49 1 124 1 104 1 265 1 219 1 126 1 78 1 57 1 200 1 132 1 313 2 36 2 227 1 138 1 183 2 372 2 112 1 375 1 188 1 353 1 70 1 358 1 258 1 
151 1 191 1 213 1 121 1 101 2 217 1 172 1 245 1 33 1 53 2 282 1 81 1 106 2 58 1 11 1 201 1 313 2 12 1 36 2 183 2 292 2 254 1 319 1 115 1 320 2 144 1 234 1 145 1 298 1 299 1 117 2 
240 1 228 1 215 1 306 1 292 2 18 1 172 1 142 1 340 1 93 2 53 2 222 1 269 1 355 1 117 2 381 1 359 1 11 1 61 1 
240 1 228 1 215 1 306 1 292 1 142 1 172 1 340 1 93 2 53 1 269 1 355 1 117 1 381 1 11 1 107 1 61 1 
242 1 333 1 292 1 172 1 307 1 144 1 53 1 269 1 81 1 117 1 359 1 11 1 72 1 314 1 
240 1 228 1 215 1 306 1 292 1 18 1 142 1 172 1 340 1 93 2 53 1 269 1 355 1 117 1 381 1 359 1 11 1 61 1 
330 1 
86 1 206 1 63 1 64 1 208 1 3 1 196 1 
279 1 4 1 125 1 197 1 248 1 86 1 63 2 64 1 137 1 184 1 17 1 113 1 206 1 118 1 325 1 361 1 258 1 
45 2 279 5 154 1 333 1 4 4 243 2 196 1 244 2 248 4 53 3 54 2 9 2 11 4 63 8 64 2 68 2 160 3 348 2 292 3 17 5 19 6 293 2 206 8 208 1 24 2 117 3 357 2 118 3 361 4 210 2 258 5 26 1 28 1 366 2 365 2 259 6 261 1 172 3 125 4 127 1 222 1 81 10 174 2 273 2 86 9 371 2 137 6 184 12 316 2 376 1 276 2 144 3 148 1 97 3 
279 1 366 2 259 5 261 1 193 1 4 2 125 2 51 1 248 2 174 2 176 1 130 1 85 1 273 2 250 1 86 8 63 5 64 2 68 1 137 3 184 6 316 2 69 1 17 1 19 5 349 1 350 1 276 1 206 5 378 1 24 2 357 2 118 1 361 2 258 1 
211 1 279 1 366 2 4 1 5 1 125 1 105 1 266 1 248 1 199 1 177 1 273 1 313 1 36 1 86 2 287 1 68 1 183 1 372 1 110 1 20 1 206 2 379 1 95 1 357 2 236 1 361 1 258 1 
86 1 63 1 64 1 4 1 196 1 125 1 206 1 248 1 208 1 361 1 
86 5 63 5 68 1 366 2 137 5 259 5 184 10 316 2 19 5 244 1 206 5 174 2 24 2 357 2 273 2 
63 1 64 1 279 1 17 1 118 1 258 1 
190 1 279 3 260 1 261 2 154 2 333 2 4 2 172 1 125 1 156 1 341 1 248 2 53 4 81 1 82 1 11 1 314 1 86 2 292 4 17 4 376 1 144 1 276 2 206 2 117 4 118 2 72 1 361 2 258 3 
211 1 151 1 213 1 333 1 101 1 5 2 102 1 172 1 308 1 53 1 198 1 81 1 58 1 11 1 12 1 313 2 36 3 136 1 183 3 372 2 292 1 112 1 319 1 320 2 115 1 144 1 233 1 145 1 298 1 95 2 117 1 97 1 
86 1 63 4 64 2 182 1 137 2 259 2 184 4 261 1 4 1 19 2 125 1 206 2 276 1 248 1 361 1 
47 1 353 1 104 1 
47 1 353 1 104 1 
126 1 0 1 353 1 237 1 104 1 
47 1 353 1 104 1 
203 1 353 1 104 1 
203 1 353 1 104 1 
203 1 353 1 104 1 
353 1 104 1 
150 1 57 1 
151 2 191 4 65 1 182 1 37 1 186 3 101 8 335 2 110 1 319 2 320 4 298 4 55 1 357 1 58 2 236 1 177 1 209 1 273 1 12 2 
191 3 182 1 37 1 186 2 3 1 101 6 335 2 110 1 298 3 55 1 357 1 177 1 236 1 273 1 
151 1 191 2 316 1 186 2 101 4 335 1 171 1 319 1 320 2 298 2 174 1 24 1 357 1 58 1 209 1 273 1 12 1 
191 3 46 1 316 1 186 2 193 2 101 7 335 1 298 4 174 1 24 1 357 1 130 1 209 1 273 1 85 1 
151 2 46 1 191 11 101 23 193 2 335 5 194 1 7 1 55 1 174 2 130 2 58 2 177 2 273 3 12 2 65 2 182 1 316 2 37 1 186 9 110 2 319 2 320 4 298 12 24 2 357 3 300 1 236 1 209 4 
298 1 101 1 193 1 
191 1 101 1 130 1 
151 1 191 3 316 1 186 3 101 6 335 2 319 1 171 1 320 2 244 1 298 3 174 1 24 1 357 1 58 1 209 1 273 1 12 1 
151 1 191 6 101 12 193 1 335 1 174 2 176 1 130 1 58 1 85 1 273 2 12 1 226 1 250 1 316 2 69 1 186 2 319 1 320 2 349 1 378 1 298 6 24 2 357 2 209 1 
191 3 186 2 101 6 335 1 110 1 298 3 357 1 236 1 177 1 209 1 273 1 
151 1 191 1 65 1 37 1 186 2 101 3 335 1 110 1 194 1 319 1 320 2 298 2 55 1 58 1 177 1 209 1 12 1 
226 1 151 1 191 5 186 5 101 10 335 3 110 2 319 1 320 2 266 1 298 5 357 2 58 1 177 2 236 1 209 2 273 2 12 1 
226 1 151 1 191 2 186 1 101 2 319 1 320 2 24 1 357 1 58 1 209 1 12 1 
226 1 151 1 191 2 316 1 186 2 101 4 335 1 319 1 320 2 298 2 174 1 24 1 357 1 58 1 209 1 273 1 12 1 
226 1 151 3 65 1 191 1 186 2 101 3 291 1 335 1 194 1 110 1 319 3 320 6 298 2 58 3 177 1 209 1 12 3 
151 5 191 16 46 1 193 4 101 34 335 7 194 1 338 1 171 1 77 1 55 1 174 3 58 5 130 3 177 3 85 1 273 5 12 5 226 1 65 2 182 1 316 3 37 1 186 12 291 1 110 3 319 5 320 10 143 1 298 18 24 3 357 5 236 2 209 5 
151 1 191 4 101 8 193 1 335 2 55 1 130 1 58 1 177 1 273 1 85 1 12 1 226 1 182 1 37 1 69 1 186 2 110 1 319 1 320 2 298 4 357 1 236 1 
151 2 191 6 46 1 101 11 193 2 335 2 171 1 55 1 174 1 58 2 130 1 177 1 273 1 85 1 12 2 226 1 182 1 37 1 69 1 186 3 110 1 319 2 320 4 298 5 24 1 357 2 236 1 209 1 
151 3 191 9 101 19 193 1 335 3 171 1 55 1 174 2 176 1 130 1 58 3 177 1 85 1 273 3 12 3 226 1 250 1 65 1 182 1 316 2 37 1 69 1 186 4 110 1 319 3 320 6 349 1 378 1 298 10 24 2 357 3 236 1 209 1 
151 3 191 10 101 17 193 1 335 3 171 1 55 1 174 2 176 1 130 1 58 3 177 1 85 1 273 2 12 3 226 1 250 1 65 1 182 1 316 1 37 1 69 1 186 5 110 1 319 3 320 6 349 1 378 1 298 7 24 2 357 3 236 1 209 2 
151 1 191 4 101 8 193 1 335 2 55 1 130 1 58 1 177 1 273 1 85 1 12 1 226 1 182 1 37 1 69 1 186 2 110 1 319 1 320 2 298 4 357 1 236 1 
151 1 191 6 101 12 193 1 335 1 174 2 176 1 130 1 58 1 85 1 273 2 12 1 226 1 250 1 316 2 69 1 186 2 319 1 320 2 349 1 378 1 298 6 24 2 357 2 209 1 
151 4 191 10 101 18 193 1 335 3 171 1 55 1 174 2 176 1 58 4 130 1 177 1 85 1 273 2 12 4 250 1 226 1 65 2 182 1 316 1 37 1 69 1 186 5 110 1 319 4 320 8 349 1 378 1 298 8 24 2 357 3 236 1 209 2 
151 4 191 9 101 16 193 1 335 3 174 3 176 1 58 4 130 1 85 1 273 2 12 4 250 1 226 1 65 2 316 2 69 1 186 6 291 1 319 4 320 8 349 1 378 1 298 7 24 3 357 3 209 3 
191 3 37 2 186 6 101 7 335 3 110 3 298 4 55 1 357 1 177 3 236 1 209 3 273 1 
151 4 191 10 101 18 193 1 335 3 55 1 174 2 176 1 58 4 130 1 177 1 85 1 273 2 12 4 250 1 226 1 65 2 182 1 316 1 37 1 69 1 186 4 291 1 110 1 319 4 320 8 349 1 378 1 298 8 24 2 357 3 236 1 209 1 
36 1 315 1 369 1 252 1 183 1 112 1 313 1 
239 1 36 1 315 1 252 1 183 1 289 1 112 1 195 1 369 1 235 1 10 1 313 1 
144 1 53 1 81 1 333 1 3 1 292 1 117 1 11 1 172 1 72 1 314 1 
36 2 183 2 333 1 372 1 292 1 112 1 5 1 172 1 39 1 308 1 144 1 233 1 53 1 81 1 97 1 117 1 11 1 313 1 
304 1 154 1 5 2 172 1 308 1 53 1 81 3 9 1 11 1 313 2 36 2 287 1 183 2 372 1 292 1 374 1 112 1 293 1 39 1 144 2 233 1 117 1 97 2 
304 1 154 1 5 2 172 1 53 2 81 3 9 1 11 1 313 2 36 2 287 1 183 2 372 1 292 2 374 1 112 1 293 1 39 1 40 1 144 2 233 1 117 2 97 2 360 1 
279 2 365 1 154 1 333 1 172 1 53 3 81 4 9 1 175 1 11 1 63 1 64 1 160 1 348 1 292 3 17 1 293 1 40 1 144 1 92 1 117 3 97 1 258 2 
63 1 45 1 64 1 279 2 365 1 160 1 333 1 154 1 348 1 292 3 17 1 172 1 293 1 40 1 144 1 53 3 81 4 9 1 97 1 117 3 11 1 258 2 
119 1 
135 1 119 1 67 1 333 2 292 5 172 2 340 1 144 2 127 1 352 1 222 1 53 5 297 1 282 1 81 3 84 1 117 4 97 1 285 1 11 3 
151 2 364 1 191 3 213 2 74 1 101 6 335 2 5 1 172 1 102 1 245 1 308 1 222 1 53 1 81 1 55 1 271 1 58 2 177 1 11 1 273 1 12 2 313 1 36 2 136 1 182 1 87 1 183 2 37 1 186 2 372 1 275 1 292 1 112 2 110 1 319 2 115 2 320 4 39 1 144 1 233 1 298 3 357 1 97 1 299 1 117 1 236 1 
45 1 279 3 365 1 333 1 4 2 243 1 196 1 125 2 248 2 53 1 54 1 81 2 86 1 63 1 64 1 160 1 348 1 292 1 17 2 375 1 376 1 206 1 208 1 117 1 118 1 361 2 258 3 210 1 
119 1 
333 1 292 4 172 1 294 1 40 1 144 1 53 4 222 1 81 1 117 4 11 1 72 1 314 1 
135 1 154 1 30 1 292 2 172 1 144 1 76 1 53 2 79 1 81 1 117 2 97 1 285 1 11 2 
240 1 93 1 53 1 333 1 355 1 292 1 117 1 381 1 11 1 172 1 
121 1 292 2 172 1 340 1 144 1 222 1 53 2 282 1 81 1 117 2 11 1 
67 1 154 1 333 1 292 5 172 2 294 1 144 2 53 5 222 1 282 1 297 1 81 3 117 4 11 2 72 1 314 1 
139 1 154 1 333 1 292 5 172 2 294 1 144 2 53 5 222 1 282 1 297 1 81 3 117 4 11 2 72 1 314 1 
36 2 183 2 333 1 372 1 292 1 112 1 5 1 172 1 39 1 144 1 233 1 53 1 81 1 97 1 117 1 11 1 360 1 313 1 
135 1 154 1 292 1 172 1 144 1 127 1 352 1 53 1 81 1 117 1 97 1 285 1 11 2 
21 1 41 1 288 1 112 1 43 1 
63 1 287 1 64 1 279 2 365 1 304 1 288 2 374 1 112 1 216 1 375 1 21 1 311 1 41 2 42 1 129 1 249 1 258 2 43 2 
36 1 33 1 21 1 183 1 288 1 217 1 201 1 313 1 43 1 
21 1 249 1 216 1 
44 1 120 1 3 1 25 1 
44 1 50 1 120 1 168 1 23 1 25 1 326 1 
50 1 146 1 256 1 
27 2 44 1 99 1 120 1 168 3 264 1 50 3 380 1 342 1 23 1 326 1 25 1 
44 1 362 1 50 2 120 1 168 2 23 1 25 1 326 1 205 1 
181 1 329 1 168 1 120 1 306 1 264 1 50 1 93 1 23 1 381 1 326 1 
44 1 50 1 120 1 168 1 23 1 264 1 326 1 
44 2 50 1 168 1 23 1 264 1 25 1 326 1 
44 1 120 1 168 2 317 1 255 1 264 1 50 2 23 2 225 1 326 2 
44 1 329 1 1 1 168 3 120 2 336 1 264 1 205 2 50 3 23 1 25 1 326 1 108 1 
44 1 120 1 168 2 306 1 264 1 205 1 50 2 93 2 23 1 355 1 189 1 381 1 25 1 326 1 61 1 
44 1 362 1 329 1 1 1 168 4 120 2 264 1 170 1 205 2 50 4 23 2 25 1 326 2 
44 1 50 1 120 1 168 1 23 1 264 1 25 1 326 1 
27 1 44 2 329 1 99 1 1 1 214 1 168 4 120 3 205 2 50 4 380 1 23 1 25 2 326 1 
44 1 180 1 120 1 168 2 264 1 205 1 50 2 94 1 23 1 345 1 326 1 25 1 
27 2 44 1 99 2 120 1 168 3 264 1 50 3 380 1 23 1 326 1 149 1 25 1 
163 2 120 2 164 1 281 1 
50 1 247 1 168 1 23 1 264 1 326 1 
44 1 50 2 120 1 168 2 23 1 264 1 25 1 326 1 205 1 108 1 
257 1 
44 1 50 1 120 1 168 1 23 1 264 1 25 1 326 1 
27 1 44 1 168 3 120 1 264 1 205 1 50 3 23 1 326 1 25 1 108 1 
329 1 1 1 214 1 120 1 
44 1 120 1 

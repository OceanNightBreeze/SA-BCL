#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 210 212 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
56 1 278 1 218 1 71 2 163 1 35 1 45 1 136 2 264 3 293 2 314 1 60 1 40 3 
278 2 344 2 163 3 45 1 136 2 282 1 49 1 305 2 53 1 116 1 258 2 56 1 218 4 71 2 335 2 35 1 360 1 264 9 151 1 99 1 293 5 267 1 312 1 77 1 314 1 60 6 40 9 343 1 
278 2 344 2 163 3 45 1 136 2 282 1 49 1 305 2 53 1 116 1 258 2 56 1 218 4 71 2 335 2 35 1 360 1 264 9 151 1 99 1 293 5 267 1 312 1 77 1 314 1 60 6 40 9 343 1 
278 2 344 2 163 4 45 1 136 2 282 1 49 1 305 2 53 1 116 1 258 2 56 1 218 5 71 2 335 2 35 1 360 1 264 10 151 1 99 1 293 6 267 1 312 1 77 1 314 1 60 7 40 10 343 1 
278 2 344 2 163 2 45 1 136 2 282 1 305 2 53 1 116 1 258 2 56 1 218 3 71 2 335 1 35 1 360 1 264 7 151 1 99 1 293 4 267 1 312 1 77 1 314 1 60 4 40 7 343 1 
218 2 71 1 335 2 344 1 163 1 35 1 45 1 136 1 264 4 293 3 49 1 305 1 77 1 314 1 258 1 60 3 40 4 343 1 
278 1 71 1 35 1 45 1 136 1 151 1 264 2 325 1 100 1 99 1 293 1 305 1 215 1 314 1 258 1 40 2 
278 1 344 1 163 3 45 1 136 2 282 1 49 1 305 1 116 1 258 1 307 1 56 1 218 4 71 2 335 2 35 1 264 9 293 5 268 1 77 1 314 1 60 7 40 9 343 1 
278 1 344 1 163 3 45 1 136 2 282 1 49 1 305 1 116 1 258 1 307 1 56 1 218 4 71 2 335 2 35 1 264 9 293 5 268 1 77 1 314 1 60 7 40 9 343 1 
133 1 208 1 31 1 263 1 324 1 86 1 284 1 139 1 18 1 285 1 355 1 20 1 10 1 216 1 
294 1 
111 1 133 1 193 1 320 1 294 1 285 2 269 1 263 2 
133 2 132 1 193 1 42 2 219 2 95 2 320 1 122 1 14 1 263 5 361 1 255 1 125 1 67 1 294 1 285 5 341 1 269 2 228 1 
193 1 294 1 296 1 
57 2 294 1 183 1 
86 2 31 1 284 2 18 2 355 2 20 2 61 1 324 2 
316 1 247 2 160 1 63 1 135 1 250 2 162 1 165 1 279 2 186 1 137 2 324 2 302 1 167 1 86 2 113 1 284 2 350 2 329 1 355 3 55 1 29 1 331 1 31 1 195 1 310 1 176 1 242 1 265 1 74 1 76 1 155 1 313 1 18 2 20 3 271 1 61 1 
86 1 208 1 31 1 284 1 139 1 18 1 355 1 20 1 324 1 216 1 
193 1 208 1 224 1 263 1 152 1 126 1 154 1 294 1 18 1 285 1 355 1 20 1 287 1 330 1 
193 1 208 1 224 1 263 2 324 1 86 1 154 1 284 1 294 1 18 1 285 2 355 1 20 1 287 1 330 1 
133 1 261 1 285 1 269 1 263 1 
133 1 193 1 320 1 294 1 79 1 285 2 269 1 263 2 
285 1 269 1 263 1 
289 1 324 1 201 1 86 1 284 1 18 2 355 2 20 2 61 2 
328 1 83 1 280 1 
247 1 195 1 135 1 162 1 176 1 186 1 279 1 302 1 113 1 350 1 155 1 17 1 355 1 20 1 271 1 61 1 
296 1 61 1 
247 1 195 1 135 1 162 1 83 1 176 1 148 1 186 1 279 1 302 1 86 1 113 1 284 1 350 1 155 1 340 1 18 1 355 2 271 1 20 2 
276 1 252 1 148 1 324 1 201 1 126 1 153 1 86 4 284 4 340 2 18 5 355 5 20 5 61 1 
86 2 208 1 62 1 284 2 139 1 18 2 355 2 20 2 
86 3 284 3 340 1 18 3 355 3 20 3 61 1 324 1 
86 1 208 1 284 1 139 1 18 1 355 1 20 1 
86 1 208 1 284 1 18 1 355 1 289 1 20 1 324 1 201 1 
247 1 208 1 160 1 63 1 135 1 250 1 162 1 186 1 279 1 137 2 324 2 302 1 167 1 113 1 86 3 284 3 350 1 285 1 329 1 355 4 287 1 330 1 29 1 194 1 31 1 195 1 310 1 224 1 176 1 148 1 263 1 242 1 265 1 201 1 154 1 76 1 155 1 340 1 313 1 18 3 271 1 20 4 61 1 158 1 
126 1 153 1 86 1 284 1 340 1 18 2 355 2 20 2 61 1 
208 1 194 1 359 1 224 1 148 1 263 1 324 1 201 1 86 3 154 1 284 3 340 2 294 1 18 3 285 1 355 3 20 3 287 1 330 1 
83 1 280 1 324 1 201 1 86 2 284 2 340 1 18 2 355 2 20 2 
247 1 195 1 135 1 162 1 186 1 279 1 176 1 302 1 113 1 350 1 155 1 355 1 20 1 271 1 61 1 
247 1 195 1 222 1 162 1 186 1 279 1 176 1 65 1 302 1 350 1 155 1 355 1 20 1 271 1 61 1 
229 1 43 1 63 1 232 1 250 4 165 2 83 2 137 2 235 1 280 2 64 1 167 1 88 1 328 2 329 2 91 1 143 1 310 1 221 1 150 1 242 1 76 1 313 1 315 1 
86 1 208 1 284 1 62 1 18 1 355 1 20 1 330 1 
332 1 199 1 273 1 
332 2 230 1 68 1 342 1 346 1 273 2 
332 1 273 1 
332 1 273 1 
68 1 342 1 
68 1 342 1 
68 1 342 1 
332 1 292 1 273 1 
332 1 292 1 273 1 
332 1 292 1 273 1 
332 1 120 1 273 1 
332 1 120 1 273 1 
332 1 120 1 273 1 
317 1 209 1 234 1 322 1 254 1 283 1 86 2 284 2 114 1 285 1 355 2 170 1 306 1 332 1 263 1 199 1 37 1 16 1 18 2 20 2 61 1 182 1 273 1 275 1 
332 2 159 1 317 2 309 1 23 1 81 1 263 2 346 1 85 1 254 2 283 3 114 1 294 1 140 2 285 2 156 1 306 2 182 2 273 2 
100 1 32 2 344 1 258 2 184 1 
305 1 344 1 258 1 
100 1 305 1 258 1 
100 1 32 1 308 1 344 2 258 3 184 1 
100 1 32 1 44 1 344 1 258 2 184 1 
133 4 42 1 209 1 43 1 320 1 234 1 235 1 64 1 168 1 349 1 285 5 118 1 191 2 143 1 356 1 219 1 193 1 95 1 147 1 57 3 122 2 34 1 263 5 361 3 38 2 179 2 125 1 294 2 269 1 157 1 183 1 275 1 
1 1 133 7 42 2 43 3 320 1 24 1 234 4 281 1 235 3 64 3 168 3 349 2 285 9 354 1 143 3 356 1 193 1 219 2 95 2 72 5 57 9 122 6 239 1 261 5 34 2 14 1 263 9 361 8 266 1 38 6 179 6 125 1 294 5 269 6 183 3 
133 2 42 1 43 1 234 1 235 1 64 1 349 1 168 1 285 3 191 1 143 1 193 1 219 1 95 1 147 1 122 2 57 4 34 1 14 1 263 3 361 3 179 2 38 2 294 3 157 1 183 2 
1 1 133 3 42 1 43 2 234 2 281 1 235 2 64 2 349 1 168 2 285 4 354 1 191 2 143 2 193 1 219 1 95 1 147 1 57 7 122 4 34 1 14 1 263 4 361 5 38 4 179 4 294 4 157 1 183 3 
75 1 
197 1 176 1 296 1 
248 1 176 1 
302 1 155 1 176 1 
213 1 176 1 
155 1 176 1 
302 1 87 1 155 1 197 2 176 3 131 1 
277 1 217 1 207 1 107 1 96 1 232 3 146 2 250 7 73 1 165 4 166 1 235 1 253 1 329 3 91 2 130 1 80 1 143 1 
277 1 207 2 107 5 63 1 232 10 43 3 250 31 165 16 166 1 137 2 253 2 64 3 235 4 347 4 112 1 168 3 327 1 89 1 353 3 329 15 91 5 143 4 217 1 144 1 310 1 146 3 13 1 73 1 290 1 242 1 76 1 130 2 80 2 103 1 
207 1 107 1 63 2 232 4 250 9 165 5 137 4 166 1 235 1 253 1 329 4 91 3 143 1 217 1 144 1 310 2 146 2 73 1 200 1 242 2 243 1 76 2 130 1 80 1 
277 1 217 1 207 1 107 1 232 3 146 2 250 7 73 1 165 4 166 1 235 1 253 1 329 3 91 2 130 1 80 1 143 1 
277 1 217 1 207 1 107 1 232 3 146 2 250 7 73 1 165 4 166 1 235 1 253 1 329 3 91 2 130 1 80 1 143 1 
41 1 278 2 247 1 71 1 195 1 176 1 186 1 279 1 26 1 345 2 136 1 124 1 98 1 264 1 127 1 350 1 155 1 214 1 171 2 271 1 101 1 246 2 40 1 
297 1 278 1 247 1 71 1 173 1 308 1 195 1 344 1 97 1 45 1 25 1 279 1 136 1 345 1 109 1 264 1 100 1 350 1 305 1 270 1 171 1 258 2 271 1 246 1 192 1 40 1 
247 1 278 1 297 1 344 1 45 1 25 1 279 1 345 1 136 1 109 1 350 1 305 1 171 1 258 2 192 1 71 1 195 1 308 1 35 1 97 1 264 2 100 1 293 1 244 1 270 1 314 1 60 1 271 1 246 1 40 2 
247 1 278 1 297 1 344 1 25 1 279 1 345 1 136 1 350 1 305 1 214 1 171 1 258 2 192 1 173 1 71 1 308 1 195 1 35 1 97 1 262 1 264 3 100 1 293 1 270 1 314 1 60 2 271 1 246 1 40 3 
278 1 247 1 344 1 25 1 279 1 345 1 350 1 305 1 171 1 258 2 192 1 173 1 195 1 308 1 35 1 262 1 264 2 100 1 293 1 270 1 314 1 60 2 271 1 246 1 40 2 
181 1 
247 2 42 1 208 1 320 1 210 1 279 2 186 2 108 1 212 1 26 1 27 1 349 1 350 2 351 1 285 3 355 1 287 1 330 1 219 1 95 1 195 1 122 1 224 1 176 1 263 3 361 1 152 1 126 1 125 1 202 1 127 1 154 1 155 1 78 1 18 1 129 1 269 2 20 1 271 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
208 1 320 1 210 1 224 1 263 3 212 1 108 1 152 1 27 1 126 1 111 1 154 1 351 1 18 1 285 3 355 1 269 1 287 1 20 1 330 1 
42 1 219 1 208 1 95 1 210 1 224 1 263 2 212 1 108 1 152 1 125 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 287 1 20 1 330 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
208 1 210 1 224 1 263 2 212 1 108 1 152 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 20 1 287 1 330 1 
42 1 219 1 208 1 95 1 210 1 224 1 263 2 212 1 108 1 152 1 125 1 27 1 126 1 154 1 351 1 18 1 285 2 355 1 287 1 20 1 330 1 
316 1 247 8 63 2 250 2 165 1 279 8 186 2 26 1 137 4 7 1 86 1 167 2 284 1 188 1 350 7 355 1 329 1 190 1 29 1 331 2 357 1 173 1 195 2 221 1 310 2 176 3 15 1 242 2 127 1 244 1 340 1 76 2 155 2 313 2 18 1 295 1 20 1 271 2 102 1 
104 1 232 1 63 1 43 1 250 3 165 1 83 1 137 2 280 1 324 1 64 1 235 1 86 1 167 1 284 1 168 1 328 1 91 1 355 1 329 2 143 1 310 1 242 1 201 1 225 1 76 1 313 1 18 1 20 1 
207 1 63 1 232 2 250 6 165 3 83 1 137 2 166 1 280 1 235 1 167 1 328 1 91 2 329 3 143 1 217 1 310 1 221 1 146 1 73 1 242 1 76 1 313 1 296 1 80 1 61 2 
316 1 107 1 232 2 63 2 43 1 161 1 250 14 165 8 83 11 137 4 64 2 280 4 235 1 347 3 167 1 168 2 327 1 328 11 91 1 329 6 353 3 93 1 29 1 143 2 333 1 310 2 290 1 242 2 362 1 225 1 76 2 313 2 61 1 
0 1 316 1 247 1 135 1 321 1 63 1 162 1 250 2 165 1 279 1 186 1 137 2 280 1 302 1 113 1 167 1 86 1 284 1 350 1 115 1 355 2 329 1 29 1 195 1 310 1 176 1 148 1 242 1 225 1 155 1 76 1 340 1 17 1 313 1 18 1 271 1 20 2 61 1 
316 1 135 2 232 8 43 2 83 7 279 3 186 1 84 2 137 6 235 3 47 2 280 7 86 1 284 1 328 7 91 4 329 10 9 1 11 2 143 3 195 2 146 1 148 1 242 3 340 1 155 2 18 1 20 3 61 2 207 1 247 3 107 4 63 3 250 20 162 2 165 10 166 1 64 2 302 2 167 3 113 2 28 2 168 2 350 3 355 3 29 1 217 1 173 1 310 3 73 1 223 1 175 1 176 2 265 2 225 1 76 3 313 3 271 2 80 1 
107 1 221 1 310 1 232 1 63 1 250 2 165 2 83 1 150 1 137 2 280 1 242 1 64 1 167 1 76 1 313 1 328 1 143 1 
221 1 310 1 232 1 63 1 43 1 250 2 83 1 137 2 280 1 242 1 235 1 167 1 76 1 313 1 328 1 91 1 329 2 315 1 
107 1 221 1 310 1 43 1 232 2 63 1 250 4 165 2 83 2 137 2 235 1 280 2 242 1 64 1 167 1 168 1 76 1 313 1 328 2 91 1 329 2 143 1 
357 1 107 1 310 1 232 1 63 1 250 2 165 2 83 1 150 1 137 2 280 1 242 1 64 1 167 1 76 1 313 1 328 1 143 1 
357 1 310 1 232 1 63 1 43 1 250 2 83 1 137 2 280 1 242 1 235 1 167 1 76 1 313 1 328 1 91 1 329 2 315 1 
357 1 107 1 310 1 43 1 232 2 63 1 250 4 165 2 83 2 137 2 235 1 280 2 242 1 64 1 167 1 168 1 76 1 313 1 328 2 91 1 329 2 143 1 
107 1 310 1 43 1 232 2 63 1 250 4 165 2 83 2 137 2 235 1 280 2 242 1 64 1 167 1 168 1 76 1 313 1 328 2 91 1 329 2 143 1 
316 1 247 1 135 1 63 1 250 2 162 1 165 1 279 1 186 1 137 2 302 1 113 1 167 1 350 1 355 1 329 1 29 1 195 1 310 1 176 1 242 1 265 1 155 1 76 1 313 1 271 1 20 1 61 1 
316 1 247 1 63 1 250 2 162 1 165 1 279 1 186 1 137 2 65 1 302 1 167 1 350 1 355 1 329 1 29 1 195 1 310 1 222 1 176 1 241 1 242 1 155 1 76 1 313 1 271 1 20 1 61 1 
107 1 310 1 43 1 232 2 63 1 250 4 165 2 83 2 137 2 235 1 280 2 242 1 64 1 167 1 168 1 225 1 76 1 313 1 328 2 91 1 329 2 143 1 
247 1 107 1 43 1 232 2 135 1 63 1 250 4 162 1 165 2 83 2 279 1 137 2 235 1 280 2 64 1 302 1 113 1 167 1 28 1 168 1 350 1 328 2 91 1 329 2 355 1 143 1 195 1 310 1 176 1 242 1 265 1 244 1 155 1 76 1 313 1 271 1 20 1 
107 1 43 1 232 1 63 1 250 3 165 2 83 1 137 2 235 1 324 1 64 1 280 1 86 1 167 1 284 1 168 1 328 1 329 1 355 1 143 1 310 1 242 1 201 1 225 1 76 1 313 1 18 1 245 1 20 1 
107 3 63 2 232 6 43 3 250 19 165 9 137 4 64 3 235 3 347 2 168 3 327 1 91 3 329 10 353 1 172 1 143 3 30 1 69 1 94 1 358 1 334 2 310 2 288 1 33 2 290 1 200 1 242 2 206 1 76 2 
107 2 232 4 63 3 43 2 250 26 165 14 137 6 235 2 64 3 347 2 303 1 168 3 189 1 91 2 329 12 353 2 54 1 143 3 30 2 69 1 144 2 358 1 334 4 310 3 288 2 33 1 336 1 338 1 200 1 290 2 291 1 242 3 206 1 76 3 
207 1 107 4 63 3 232 8 43 4 250 41 165 20 166 1 137 6 64 4 235 5 347 4 303 1 168 4 327 1 189 1 91 4 329 21 353 3 172 1 54 1 143 5 30 2 69 1 217 1 144 1 358 1 334 4 310 3 146 1 288 1 33 1 73 1 336 1 338 1 291 1 290 3 200 1 242 3 206 1 76 3 363 1 80 1 
207 1 107 3 63 4 232 7 43 3 250 38 165 20 166 1 137 8 64 4 235 4 347 4 303 1 168 4 327 1 189 1 91 4 329 18 353 3 172 1 54 1 143 5 30 2 69 1 217 1 144 2 358 1 334 4 310 4 146 1 288 1 33 1 73 1 336 1 338 1 291 1 290 3 200 1 242 4 206 1 76 4 363 1 80 1 
207 1 107 7 63 2 232 14 43 7 161 2 250 52 165 27 166 1 137 4 64 7 235 8 347 4 303 1 168 7 327 2 189 1 91 7 329 25 353 4 54 1 143 8 30 1 69 1 217 1 144 1 358 1 334 4 310 2 146 1 288 1 33 1 73 1 336 1 338 1 291 1 290 2 200 1 242 2 206 1 76 2 80 1 
332 1 159 1 348 1 317 1 23 1 306 1 182 1 346 1 273 1 254 1 
16 1 199 1 
332 1 317 1 70 1 22 1 306 1 182 1 21 1 273 1 254 1 
292 1 205 1 
230 1 120 1 52 1 
332 1 159 1 317 1 23 1 81 1 263 1 346 1 85 1 254 1 283 2 114 1 294 1 140 1 285 1 156 1 306 1 182 1 273 1 
332 1 159 1 317 1 23 1 81 1 263 1 346 1 85 1 254 1 283 2 114 1 294 1 140 1 285 1 156 1 306 1 182 1 273 1 
332 1 159 1 317 1 23 1 81 1 263 1 346 1 85 1 254 1 283 2 114 1 294 1 140 1 285 1 156 1 306 1 182 1 273 1 
292 1 230 1 205 1 
292 1 230 1 205 1 
120 1 52 1 
230 1 120 1 52 1 
37 1 322 1 
105 1 133 1 317 1 209 1 81 1 234 1 322 1 254 1 283 1 86 2 284 2 140 1 285 1 355 2 170 1 306 1 332 1 263 1 199 1 37 1 16 1 18 2 20 2 61 1 182 1 273 1 275 1 
316 1 247 2 63 1 300 1 250 2 165 1 279 2 137 2 7 1 167 1 188 1 350 2 304 1 355 2 329 1 29 1 331 2 195 1 196 1 310 1 176 1 242 1 225 1 155 1 76 1 313 1 18 2 19 1 227 1 271 1 20 2 
247 1 41 1 195 1 3 1 176 1 186 1 279 1 345 1 26 1 127 1 350 1 155 1 271 1 274 1 
247 1 173 1 308 1 298 1 195 1 344 1 97 1 25 1 279 1 345 1 100 1 350 1 305 1 258 2 271 1 274 1 142 1 192 1 
247 2 173 1 308 1 195 1 298 1 344 1 97 1 25 1 279 2 345 1 100 1 350 2 244 1 305 1 258 2 271 1 274 1 142 1 192 1 
247 1 173 1 308 1 298 1 195 1 233 1 344 1 97 1 25 1 279 1 345 1 100 1 350 1 305 1 258 2 271 1 192 1 
323 1 
255 1 125 1 193 1 219 1 42 1 95 1 122 1 294 1 361 1 228 1 
43 2 122 5 57 10 84 1 361 5 64 2 235 2 179 5 38 5 169 1 168 2 294 5 352 2 183 5 143 2 
193 1 320 1 294 1 285 1 269 1 263 1 
42 2 247 4 320 2 279 4 186 2 26 1 110 1 349 2 350 4 257 2 285 3 90 1 92 1 219 2 95 2 195 1 122 2 14 1 176 1 263 3 361 2 202 1 125 1 127 1 155 1 78 1 129 2 269 4 271 1 
255 1 193 1 122 1 294 1 296 1 361 1 228 1 
42 1 320 1 285 1 236 1 219 1 193 1 95 1 122 1 57 1 149 1 263 1 361 1 125 1 203 1 294 2 269 1 183 1 
42 4 320 3 43 2 186 1 279 3 84 2 235 2 138 2 326 2 285 5 92 1 143 2 193 2 95 4 195 3 145 1 57 12 197 2 240 2 244 1 155 3 294 8 247 3 248 3 211 2 299 2 64 2 255 1 302 3 349 2 168 2 169 2 350 3 213 2 257 1 352 2 219 4 220 2 122 8 224 2 177 1 176 10 263 5 361 9 125 4 179 6 38 6 129 1 269 5 271 4 131 1 272 1 183 6 228 1 
42 2 320 1 43 2 82 1 64 2 235 2 347 1 303 1 349 1 169 1 168 2 189 1 285 1 352 2 353 1 54 1 143 2 219 2 193 2 95 2 57 6 122 5 174 1 338 1 263 1 361 8 290 1 291 1 38 5 179 5 125 2 294 5 129 1 269 1 183 3 
207 1 42 1 208 1 166 1 235 1 324 1 48 1 86 1 169 1 284 1 139 1 352 2 285 1 355 1 10 1 216 1 143 2 219 1 95 1 31 1 122 2 263 1 361 2 58 1 125 1 18 1 20 1 80 1 
247 1 160 1 63 1 135 1 250 1 162 1 279 1 186 1 137 2 324 2 302 1 86 2 113 1 167 1 284 2 350 1 329 1 355 3 29 1 31 1 195 1 310 1 176 1 242 1 265 1 155 1 76 1 313 1 18 2 20 3 271 1 61 1 
42 1 219 1 193 2 95 1 146 1 57 4 122 2 361 1 179 2 38 2 125 1 349 1 294 4 129 1 183 2 
259 1 37 1 23 1 182 1 254 1 
337 1 182 1 254 1 
337 1 182 1 254 1 
337 1 182 1 254 1 
36 1 182 1 254 1 
36 1 182 1 254 1 
36 1 182 1 254 1 
182 1 254 1 
332 1 273 1 
207 2 310 1 107 2 63 1 232 5 250 10 165 5 137 2 200 1 166 1 242 1 235 2 58 1 76 1 91 3 329 5 80 2 143 2 
310 1 107 1 63 1 232 1 250 2 165 2 200 1 137 2 242 1 64 1 76 1 143 1 
310 1 107 1 43 1 232 2 63 1 250 4 165 2 200 1 137 2 235 1 242 1 64 1 168 1 76 1 91 1 329 2 143 1 
144 1 134 1 207 1 310 3 107 1 63 3 232 2 250 3 165 1 200 1 137 6 242 3 76 3 329 2 91 1 172 1 80 1 
207 3 134 1 107 5 63 5 232 12 43 3 250 34 165 16 166 2 137 10 64 3 235 5 347 4 256 1 112 1 168 3 327 1 89 1 329 18 353 3 91 7 172 1 143 5 217 1 144 2 310 5 146 1 13 1 73 1 290 1 200 1 242 5 76 5 80 3 
207 1 63 1 232 2 250 8 165 4 137 2 166 1 235 1 347 1 353 1 329 4 91 2 143 1 217 1 310 1 146 1 73 1 290 1 291 1 200 1 242 1 76 1 80 1 
207 1 107 1 63 2 232 3 250 11 165 6 166 1 137 4 235 1 64 1 347 2 256 1 168 1 327 1 91 2 329 5 353 1 143 2 217 1 310 2 146 1 73 1 290 1 291 1 200 1 242 2 76 2 80 1 
207 1 107 1 63 3 43 2 232 4 250 19 165 9 166 1 137 6 64 2 235 3 347 1 256 1 303 1 168 2 189 1 353 1 329 10 91 3 54 1 143 3 217 1 144 1 310 3 146 1 73 1 338 1 290 1 291 1 200 1 242 3 76 3 80 1 
207 1 107 2 63 3 43 1 232 5 250 17 165 10 166 1 137 6 64 2 235 2 347 1 256 1 303 1 168 2 189 1 353 1 329 7 91 3 54 1 143 3 217 1 144 1 310 3 146 1 73 1 338 1 290 1 291 1 200 1 242 3 76 3 80 1 
207 1 63 1 232 2 250 8 165 4 137 2 166 1 235 1 347 1 353 1 329 4 91 2 143 1 217 1 310 1 146 1 73 1 290 1 291 1 200 1 242 1 76 1 80 1 
107 1 63 1 43 2 232 2 250 12 165 6 137 2 64 2 235 2 347 1 303 1 168 2 189 1 353 1 329 6 91 1 54 1 143 2 310 1 338 1 290 1 291 1 200 1 242 1 76 1 
207 1 107 2 63 4 43 1 232 5 250 18 165 10 166 1 137 8 64 2 235 2 347 1 256 1 303 1 168 2 189 1 329 8 353 1 91 3 54 1 143 3 217 1 144 2 310 4 146 1 73 1 338 1 290 1 291 1 200 1 242 4 76 4 80 1 
107 3 63 4 43 2 232 6 250 16 165 9 137 8 64 3 235 2 347 1 303 1 168 3 189 1 329 7 353 1 91 3 172 1 54 1 143 3 144 2 310 4 338 1 290 1 291 1 200 1 242 4 76 4 
217 2 207 3 107 3 232 6 250 7 73 1 165 3 166 1 235 1 329 4 91 3 80 3 143 1 
207 1 107 1 63 4 43 1 232 4 250 18 165 10 166 1 137 8 64 2 235 2 347 1 303 1 168 2 189 1 329 8 353 1 91 3 172 1 54 1 143 3 217 1 144 2 310 4 146 1 73 1 338 1 290 1 291 1 200 1 242 4 76 4 80 1 
217 1 144 1 207 1 107 1 310 2 146 1 232 3 63 2 250 8 73 1 165 4 166 1 137 4 235 1 242 2 76 2 329 4 91 2 80 1 143 1 
217 1 207 1 146 1 232 2 73 1 250 6 165 3 166 1 235 1 329 3 91 2 296 1 80 1 143 1 
310 1 107 1 43 1 232 2 63 1 250 4 165 2 137 2 235 1 242 1 64 1 256 1 168 1 76 1 91 1 329 2 143 1 
107 1 43 1 232 2 250 7 165 3 290 1 235 1 64 1 347 2 168 1 327 1 91 1 329 4 353 1 143 1 
207 2 134 1 107 4 232 9 43 2 63 2 161 1 250 23 165 11 166 1 137 4 64 2 235 3 347 2 168 2 327 1 353 2 329 12 91 5 143 3 217 1 144 2 333 1 310 2 146 1 73 1 242 2 76 2 80 2 
347 1 250 1 329 1 
250 1 165 1 353 1 
310 1 107 1 63 1 232 3 43 1 250 6 165 3 84 1 137 2 242 1 64 1 235 1 256 1 168 1 76 1 329 3 91 2 143 1 
107 1 63 1 43 2 232 2 250 12 165 6 137 2 64 2 235 2 347 1 303 1 168 2 189 1 353 1 329 6 91 1 54 1 143 2 310 1 338 1 290 1 291 1 200 1 242 1 76 1 
207 1 107 1 232 2 250 6 165 3 166 1 235 1 329 3 91 1 80 1 143 1 
217 1 207 1 134 1 144 1 107 1 310 1 232 2 63 1 250 3 73 1 165 1 137 2 242 1 76 1 91 1 329 2 80 1 
126 1 153 1 318 1 18 1 355 1 20 1 61 1 
106 1 12 1 318 1 4 1 339 1 153 1 126 1 311 1 18 1 355 1 20 1 61 1 
247 4 195 1 186 1 279 4 176 1 26 1 127 1 350 4 244 1 155 1 117 1 226 1 271 1 
247 2 195 1 123 1 279 2 176 1 187 1 302 1 204 1 350 2 155 1 257 1 39 1 271 2 9 1 
100 1 247 1 195 1 350 1 305 1 279 1 186 1 258 1 271 1 192 1 
247 2 173 1 195 1 279 2 176 1 7 1 244 1 350 2 304 1 155 1 271 1 
247 5 195 2 186 1 279 5 176 3 26 1 7 1 127 1 350 4 244 1 155 2 257 1 226 1 190 1 295 1 271 2 
247 5 195 2 186 1 279 5 176 3 26 1 7 1 127 1 350 4 244 1 155 2 257 1 226 1 295 1 271 2 119 1 
127 1 247 1 195 1 350 1 155 1 176 1 279 1 186 1 271 1 26 1 296 1 
247 1 195 1 135 1 162 1 176 1 186 1 279 1 302 1 86 1 284 1 350 1 155 1 340 1 18 1 355 2 271 1 20 2 61 1 
247 1 208 1 135 1 162 1 279 1 302 2 86 1 284 2 350 1 213 1 257 1 355 2 330 1 195 1 240 1 176 3 154 1 340 1 155 2 18 2 20 2 271 1 61 1 
247 2 208 1 162 1 279 2 65 1 302 2 86 1 284 2 350 2 213 1 117 1 257 1 355 2 330 1 195 1 240 1 176 3 154 1 340 1 155 2 18 2 20 2 271 1 61 1 
247 3 2 1 248 1 5 1 279 3 186 1 302 1 350 3 213 1 117 1 257 1 285 2 193 1 195 1 197 1 240 1 224 1 176 4 263 2 155 1 294 1 269 1 271 1 
193 1 247 3 248 1 195 1 224 1 240 1 197 1 186 1 279 3 176 4 263 2 138 1 302 1 350 3 155 1 294 1 213 1 117 1 285 2 257 1 269 1 271 1 
247 1 195 1 350 1 279 1 271 1 15 1 
247 7 173 1 195 2 185 1 186 2 279 7 176 3 15 1 7 1 302 1 204 1 244 1 350 6 155 2 295 1 190 1 39 1 131 1 271 3 102 1 331 1 
135 1 232 2 83 1 279 1 137 4 280 1 47 1 235 1 86 1 284 1 328 1 91 2 329 3 143 1 195 1 146 1 242 2 244 1 340 1 155 1 18 1 20 2 61 2 247 1 207 1 63 2 162 1 250 6 165 3 166 1 302 1 113 1 167 2 28 1 350 1 355 2 217 1 310 2 73 1 176 1 265 1 225 1 76 2 313 2 227 1 271 1 80 1 
133 1 247 1 42 2 248 1 320 1 211 1 186 1 279 1 255 1 138 1 326 1 350 1 285 3 92 1 193 1 219 2 95 2 220 1 122 1 197 1 224 1 176 2 263 3 361 1 125 2 294 1 269 2 228 1 
247 2 195 1 197 1 279 2 176 2 15 1 302 1 244 1 350 2 155 1 131 1 271 2 272 1 
247 1 195 1 162 1 176 1 186 1 279 1 65 1 302 1 86 1 284 1 350 1 155 1 340 1 18 1 355 2 271 1 20 2 61 1 
247 1 195 1 185 1 279 1 176 1 302 1 204 1 350 1 155 1 257 1 39 1 131 1 271 2 
249 1 196 1 18 1 300 1 164 1 8 1 355 1 19 1 20 1 
121 1 180 1 249 1 
249 1 260 1 164 1 8 1 61 1 
133 1 193 1 208 1 121 1 194 1 249 1 260 2 164 2 224 1 263 2 66 1 154 1 180 1 294 1 285 2 8 2 287 1 61 1 330 1 
293 1 71 1 35 1 45 1 314 1 136 1 264 1 40 1 
218 1 71 1 231 1 163 1 35 2 198 1 46 1 136 1 151 1 264 4 293 3 314 2 60 2 40 4 
71 1 237 1 35 1 45 1 136 1 264 2 293 1 268 1 59 1 60 1 314 1 40 2 
178 1 293 1 71 1 231 1 35 1 45 1 198 2 314 1 136 1 151 2 264 3 40 3 
293 2 50 2 251 1 286 1 
71 1 45 1 6 1 136 1 264 1 40 1 
282 1 293 1 71 1 35 1 45 1 314 1 60 1 136 1 264 2 40 2 
128 1 
293 1 71 1 35 1 45 1 314 1 136 1 264 1 40 1 
293 1 35 1 314 1 296 1 
293 1 71 1 35 1 314 1 136 1 264 1 40 1 
278 1 246 1 40 1 
293 1 71 1 231 1 35 1 45 1 198 1 314 1 136 1 301 1 151 2 264 3 40 3 
293 1 71 1 335 1 35 1 314 1 60 1 136 1 264 2 40 2 
218 1 71 1 344 1 45 1 136 1 264 1 293 1 305 1 77 1 258 1 40 1 
293 1 71 1 35 1 45 1 136 1 264 1 40 1 
71 1 35 2 45 1 314 1 136 1 264 1 40 1 
71 2 319 1 238 1 35 1 45 1 136 2 264 2 293 1 51 1 40 2 
218 1 71 1 163 1 35 1 45 1 136 1 264 3 282 1 293 2 116 1 314 1 60 2 40 3 
71 1 308 1 344 1 35 1 45 1 136 1 264 2 100 1 293 1 305 1 314 1 258 2 60 1 141 1 40 2 
218 1 71 2 335 1 163 1 35 1 45 1 136 2 264 4 293 2 49 1 314 1 60 2 40 4 
71 1 45 1 35 1 136 1 264 3 151 1 282 1 293 1 60 1 314 1 40 3 
293 1 218 1 163 1 46 1 
293 1 35 1 

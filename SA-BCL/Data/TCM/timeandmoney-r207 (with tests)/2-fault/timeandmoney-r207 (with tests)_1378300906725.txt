#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 185 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
363 2 286 1 145 1 288 2 3 1 218 1 270 1 294 2 369 1 342 2 295 1 151 1 120 1 13 1 374 3 256 2 349 4 255 6 44 9 352 1 233 2 355 5 328 2 262 1 132 9 107 1 239 1 240 1 
363 2 286 1 145 1 288 2 3 1 218 1 270 1 294 2 369 1 342 2 295 1 151 1 120 1 13 1 374 3 349 4 255 6 256 2 44 9 352 1 233 2 355 5 328 2 262 1 132 9 107 1 239 1 240 1 
363 2 286 1 145 1 288 2 3 1 218 1 270 1 294 2 369 1 342 2 295 1 151 1 120 1 13 1 374 4 349 5 255 7 256 2 44 10 352 1 233 2 355 6 328 2 262 1 132 10 107 1 239 1 240 1 
363 2 286 1 145 1 288 2 3 1 218 1 270 1 294 2 369 1 342 2 295 1 151 1 120 1 13 1 374 2 349 3 255 4 256 1 44 7 352 1 233 2 355 4 328 2 262 1 132 7 107 1 240 1 
374 1 363 1 145 1 256 2 255 3 349 2 44 4 352 1 233 1 355 3 294 1 328 1 342 1 369 1 107 1 132 4 239 1 120 1 
172 1 314 1 363 1 145 1 44 2 288 1 164 1 352 1 355 1 233 1 218 1 294 1 342 1 107 1 132 2 151 1 
374 1 145 1 349 1 255 1 44 3 288 1 3 1 352 1 355 2 294 2 342 2 107 1 132 3 
286 1 363 1 145 1 364 1 288 1 3 1 294 2 319 1 342 2 369 1 295 1 120 1 374 3 349 4 255 7 256 2 44 9 352 1 355 5 233 1 328 1 132 9 107 1 239 1 
286 1 363 1 145 1 364 1 288 1 3 1 294 2 319 1 342 2 369 1 295 1 120 1 374 3 349 4 255 7 256 2 44 9 352 1 355 5 233 1 328 1 132 9 107 1 239 1 
331 1 264 1 148 1 
25 1 376 2 264 1 
281 1 321 2 174 2 231 2 129 1 46 2 223 2 90 2 
54 1 72 1 338 1 74 1 142 1 31 1 34 2 33 1 191 1 318 1 58 1 243 1 215 1 38 2 344 1 321 2 296 2 371 1 324 1 223 2 10 1 12 2 348 1 254 1 174 2 231 3 129 1 46 2 353 1 236 1 281 1 159 1 186 1 71 1 52 2 90 3 336 1 
196 1 136 1 321 1 174 1 231 1 129 1 46 1 223 1 334 1 90 1 
253 1 189 1 231 1 194 1 46 1 130 1 148 1 305 1 196 1 219 1 264 1 326 1 29 1 90 1 
189 1 174 1 194 2 231 1 46 1 130 2 148 1 305 1 196 1 219 1 321 1 264 1 223 1 29 1 90 1 
108 1 194 1 265 1 130 1 274 1 
110 1 60 1 108 1 194 2 264 1 130 2 148 1 274 1 
194 1 130 1 274 1 
174 1 194 1 231 1 129 1 289 1 46 1 130 1 196 1 136 1 108 1 321 1 334 1 223 1 90 1 
264 1 
60 1 229 1 108 1 194 2 264 1 130 2 148 1 274 1 
361 1 339 1 92 1 194 5 377 2 6 1 269 1 130 5 148 1 307 1 60 1 108 2 264 1 62 1 88 2 252 1 161 2 169 1 274 2 
253 1 174 1 231 5 20 1 103 1 46 5 268 1 281 1 370 2 321 4 26 1 298 1 223 4 90 5 
109 1 196 1 136 1 321 2 231 2 46 2 223 2 90 2 
74 1 142 1 31 1 231 2 20 1 243 1 46 1 353 1 236 1 343 1 370 1 38 1 321 1 296 1 371 1 186 1 324 1 223 1 90 2 12 1 
281 1 331 1 
174 1 231 2 46 2 281 2 26 1 321 1 223 1 100 1 90 2 
150 1 343 1 1 1 
74 1 31 1 142 1 200 1 231 1 243 1 353 1 236 1 281 1 38 1 296 1 371 1 324 1 186 1 90 1 12 1 
281 1 370 1 174 1 321 3 231 3 46 3 223 3 90 3 
196 1 136 1 321 1 231 1 46 1 223 1 90 1 
196 1 321 1 174 1 26 1 231 1 46 1 223 1 100 1 90 1 
72 1 338 1 74 1 142 1 31 1 189 1 34 1 33 1 191 1 194 1 318 1 58 1 243 1 35 1 196 1 370 1 219 1 38 1 321 3 296 1 371 1 324 1 223 3 10 1 12 1 348 1 174 2 231 4 20 1 129 1 46 3 353 1 130 1 236 1 305 1 281 1 159 1 133 1 26 1 186 1 71 1 52 2 29 1 90 4 
281 1 253 1 370 1 321 1 298 1 231 2 46 2 223 1 90 2 
373 1 189 1 174 1 194 1 231 3 20 1 46 3 130 1 305 1 196 1 370 2 219 1 133 1 26 1 321 3 264 1 223 3 29 1 90 3 
174 1 231 2 46 2 150 1 343 1 370 1 26 1 321 2 223 2 90 2 
74 1 31 1 142 1 231 1 243 1 353 1 236 1 281 1 38 1 296 1 371 1 324 1 186 1 90 1 12 1 
74 1 142 1 231 1 378 1 243 1 114 1 236 1 281 1 38 1 296 1 371 1 324 1 186 1 90 1 12 1 
359 1 72 1 144 1 33 1 191 1 34 4 192 1 1 2 318 1 58 1 150 2 197 1 343 2 344 2 345 1 302 1 348 1 158 1 259 1 310 1 159 2 138 1 335 1 52 2 
196 1 109 1 321 1 231 1 46 1 223 1 305 1 90 1 
362 1 95 1 
362 1 95 1 
66 1 51 1 
66 1 51 1 
66 1 51 1 
362 1 154 1 95 1 
362 1 154 1 95 1 
362 1 121 1 95 1 
66 1 362 2 77 1 51 1 160 1 95 2 
362 1 154 1 95 1 
362 1 224 1 95 1 
362 1 224 1 95 1 
362 1 224 1 95 1 
362 1 194 1 95 1 321 2 223 2 222 1 121 1 170 1 198 1 14 1 123 1 225 1 276 1 125 1 127 1 231 2 350 1 46 2 235 1 130 1 280 1 281 1 329 1 90 2 
198 2 123 2 14 2 276 1 362 2 213 1 194 2 235 2 95 2 130 2 106 1 329 3 309 1 134 2 251 1 264 1 347 1 27 1 160 1 
328 1 363 1 233 1 
172 1 363 1 233 1 
172 1 328 2 360 1 212 1 363 3 312 1 
172 1 328 1 124 1 212 1 363 2 312 1 
172 1 328 1 212 1 363 2 312 2 
284 1 143 2 144 1 78 1 194 5 148 1 60 1 118 2 222 1 62 1 40 1 252 2 41 1 170 1 274 1 225 1 302 1 199 1 376 3 377 1 257 1 130 5 25 1 310 1 307 3 108 4 184 1 138 1 264 2 88 1 161 1 358 2 
284 2 313 1 143 6 144 3 287 1 78 3 194 9 148 1 59 1 60 1 39 1 222 4 62 1 40 2 252 6 169 1 274 6 302 3 199 1 376 9 45 5 377 2 19 1 65 1 130 9 25 3 310 3 307 8 108 7 138 3 265 5 264 5 88 2 161 2 358 6 
284 1 143 2 144 1 194 3 78 1 148 1 118 1 222 1 40 1 41 1 252 2 169 1 302 1 376 4 257 1 377 1 130 3 25 2 310 1 307 3 108 2 138 1 264 3 88 1 161 1 358 2 
284 1 143 4 144 2 194 4 78 2 148 1 59 1 118 2 39 1 222 2 40 1 41 1 252 4 169 1 302 2 376 7 377 1 257 1 65 1 130 4 25 3 310 2 307 5 108 3 138 2 264 4 88 1 161 1 358 4 
142 1 186 1 243 1 
167 1 243 1 
331 1 207 1 243 1 
9 1 243 1 
283 1 
142 1 243 1 
142 1 207 2 357 1 186 1 243 3 300 1 
111 1 144 1 192 2 34 7 203 1 214 1 158 3 327 1 166 1 159 3 310 1 344 4 61 1 28 1 42 2 311 1 241 1 
111 1 144 1 192 2 34 7 203 1 214 1 158 3 327 1 166 1 159 3 310 1 344 4 61 1 28 1 42 2 311 1 241 1 
111 1 144 1 192 2 34 7 203 1 214 1 158 3 327 1 166 1 159 3 310 1 344 4 61 1 28 1 325 1 42 2 311 1 241 1 
72 1 111 1 190 1 33 1 34 31 144 4 192 5 78 3 214 1 318 1 58 1 93 1 166 2 344 16 248 1 61 5 221 4 98 1 301 3 42 3 302 3 203 2 158 10 327 2 24 1 238 1 159 15 310 4 138 3 28 2 311 1 52 2 209 1 241 1 
72 2 190 1 111 1 144 1 33 2 34 9 192 3 214 1 318 2 58 2 166 1 344 5 61 1 42 2 152 1 203 1 156 1 158 4 327 1 310 1 159 4 28 1 52 4 311 1 
360 1 55 1 162 1 0 1 363 2 145 1 288 1 292 1 36 1 294 1 342 1 38 1 220 1 296 1 324 1 12 1 172 1 255 1 44 2 175 1 352 1 355 1 233 1 48 1 236 1 328 1 132 2 107 1 135 1 332 1 
360 1 55 1 162 1 0 1 363 2 145 1 288 1 292 1 294 1 342 1 38 1 8 1 220 1 296 1 324 1 12 1 172 1 16 1 255 2 44 3 175 1 352 1 355 1 233 1 48 1 236 1 179 1 328 1 132 3 135 1 
360 1 55 1 162 1 0 1 363 2 145 1 288 1 292 1 38 1 296 1 324 1 12 1 172 1 16 1 255 2 44 2 175 1 352 1 355 1 233 1 236 1 179 1 328 1 132 2 135 1 
74 1 142 1 162 2 288 2 147 1 243 1 292 2 245 1 294 1 342 1 38 1 8 1 296 1 323 1 324 1 12 1 44 1 175 2 232 1 236 1 22 1 132 1 89 1 
360 1 55 1 162 1 0 1 363 2 288 1 292 1 36 1 294 1 342 1 38 1 220 1 296 1 324 1 12 1 172 1 44 1 175 1 233 1 48 1 236 1 179 1 328 1 132 1 107 1 135 1 
188 1 
142 1 189 1 193 1 194 5 5 2 243 1 290 1 148 1 293 1 196 1 60 3 97 2 296 2 62 1 252 2 12 2 253 1 351 1 104 4 305 1 260 1 23 1 25 2 67 2 306 1 261 1 307 2 264 2 161 1 30 2 29 1 74 2 315 1 76 1 116 2 38 2 219 1 273 2 324 1 40 1 326 1 122 2 274 6 277 1 376 2 377 1 231 1 232 1 46 1 130 5 236 1 282 1 88 1 89 1 90 1 
189 1 76 1 194 3 293 1 196 1 219 1 60 1 326 1 274 2 253 1 229 1 231 1 46 1 351 1 104 2 130 3 305 1 23 1 306 1 29 1 30 1 90 1 
189 1 76 1 194 3 148 1 293 1 196 1 219 1 60 1 97 1 326 1 274 1 253 1 229 1 231 1 46 1 351 1 104 3 130 3 305 1 23 1 306 1 264 1 29 1 90 1 
189 1 76 1 194 3 148 1 293 1 196 1 219 1 60 1 273 1 97 1 326 1 274 2 253 1 229 1 231 1 46 1 351 1 104 3 130 3 305 1 23 1 306 1 264 1 29 1 30 1 90 1 
189 1 76 1 194 5 5 2 242 1 290 1 115 1 116 2 148 5 293 1 196 1 219 1 60 3 273 4 97 4 299 1 62 1 81 1 326 1 252 1 122 2 274 7 126 1 253 1 229 1 377 1 231 1 46 1 351 1 104 6 130 5 260 1 305 1 23 1 25 2 67 2 306 1 307 1 264 5 88 1 161 1 29 1 30 4 90 1 
189 1 194 4 5 2 290 1 148 1 293 1 196 1 60 2 97 2 62 1 252 1 253 1 104 4 351 1 260 1 305 1 23 1 306 1 67 2 25 2 307 1 264 2 161 1 29 1 30 2 315 1 76 1 116 2 219 1 273 2 326 1 122 2 274 4 376 2 231 1 377 1 46 1 130 4 88 1 90 1 
189 1 76 1 194 4 5 2 290 1 115 1 148 1 116 2 293 1 196 1 219 1 273 2 60 2 97 2 299 1 326 1 81 1 62 1 252 1 122 2 274 4 253 1 231 1 377 1 46 1 351 1 104 4 130 4 260 1 305 1 23 1 25 2 67 2 306 1 307 1 264 1 88 1 161 1 30 2 29 1 90 1 
189 1 76 1 194 4 5 2 290 1 115 1 148 1 116 2 293 1 196 1 219 1 273 2 60 2 97 2 299 1 326 1 81 1 62 1 252 1 122 2 274 4 253 1 231 1 377 1 46 1 351 1 104 4 130 4 260 1 305 1 23 1 25 2 67 2 306 1 307 1 264 1 88 1 161 1 30 2 29 1 90 1 
189 1 285 2 76 1 194 4 5 2 367 2 290 1 148 1 293 1 196 1 341 1 219 1 273 2 60 2 97 2 299 1 326 1 62 1 252 1 122 2 274 4 253 1 375 1 376 2 231 1 377 1 46 1 351 1 104 4 130 4 305 1 23 1 306 1 307 1 50 1 264 1 88 1 161 1 30 2 29 1 90 1 
189 1 76 1 194 4 5 2 290 1 115 1 148 1 116 2 293 1 196 1 219 1 60 2 273 3 97 3 299 1 62 1 81 1 326 1 252 1 122 2 274 5 253 1 126 1 377 1 231 1 46 1 351 1 104 5 130 4 260 1 305 1 23 1 25 2 67 2 306 1 307 1 264 1 88 1 161 1 29 1 30 3 90 1 
189 1 76 1 194 4 5 2 290 1 115 1 148 1 116 2 293 1 196 1 219 1 60 2 273 3 97 3 299 1 62 1 81 1 326 1 252 1 122 2 274 5 253 1 126 1 377 1 231 1 46 1 351 1 104 5 130 4 260 1 305 1 23 1 25 2 67 2 306 1 307 1 264 1 88 1 161 1 29 1 30 3 90 1 
189 1 285 2 194 4 5 2 290 1 148 1 293 1 196 1 60 2 97 2 62 1 252 1 253 1 104 4 351 1 305 1 23 1 306 1 307 1 264 1 161 1 29 1 30 2 315 1 76 1 367 2 219 1 273 2 326 1 122 2 274 4 376 2 231 1 377 1 46 1 130 4 50 1 88 1 90 1 
72 1 111 1 33 1 191 1 192 2 144 1 34 6 1 1 214 1 318 1 58 1 150 1 197 1 343 1 166 1 344 3 42 1 348 1 158 2 327 1 281 2 331 1 310 1 159 3 311 1 52 2 
54 1 72 2 337 1 192 1 33 2 191 2 34 14 144 2 1 11 78 2 318 2 58 2 93 1 150 4 343 11 344 8 119 1 61 1 221 3 98 1 11 1 301 3 302 1 348 1 158 2 204 1 86 1 281 1 159 6 310 1 138 2 71 1 52 4 
72 1 54 1 74 1 142 1 31 1 191 1 33 1 34 2 58 1 318 1 243 1 150 1 96 1 370 1 38 1 344 1 296 1 321 1 371 1 324 1 223 1 12 1 348 1 83 1 200 1 231 2 20 1 46 1 353 1 236 1 86 1 281 1 49 1 159 1 186 1 52 2 71 1 90 2 
54 1 142 2 192 4 191 3 144 3 1 7 58 3 243 2 291 1 150 7 343 7 344 10 296 3 61 4 10 2 12 3 302 2 348 3 202 1 20 1 353 2 158 8 310 3 159 10 68 2 311 1 71 1 72 3 74 1 31 2 111 1 211 2 33 3 34 20 78 2 214 1 112 1 318 3 166 1 370 1 38 3 321 1 371 2 324 2 223 1 42 1 231 3 46 1 236 2 179 1 327 1 86 1 281 2 330 2 138 2 185 2 186 2 52 6 90 3 
72 2 54 1 74 2 142 2 33 2 191 2 34 2 318 2 58 2 243 3 217 1 197 1 320 1 370 1 38 8 344 1 321 1 296 7 324 2 223 1 101 1 12 8 171 1 348 2 254 2 231 1 232 1 46 1 47 1 236 2 179 1 237 1 131 1 159 1 332 1 52 4 71 1 89 1 90 1 
72 1 192 1 33 1 191 1 144 1 34 3 1 1 78 1 318 1 58 1 150 1 343 1 344 1 321 1 223 1 302 1 348 1 174 1 231 1 46 1 158 1 86 1 310 1 159 2 26 1 138 1 70 1 52 2 90 1 
72 1 348 1 34 2 191 1 33 1 144 1 1 1 58 1 318 1 158 1 150 1 197 1 343 1 344 2 138 1 61 1 335 1 52 2 
72 1 302 1 348 1 192 1 34 2 191 1 33 1 1 1 58 1 318 1 158 1 150 1 197 1 343 1 310 1 159 2 345 1 52 2 
72 1 144 1 33 1 191 1 34 4 192 1 1 2 78 1 318 1 58 1 150 2 197 1 343 2 344 2 61 1 302 1 348 1 158 2 310 1 159 2 138 1 52 2 
72 1 348 1 34 2 191 1 33 1 144 1 1 1 58 1 318 1 158 1 150 1 131 1 343 1 344 2 138 1 61 1 335 1 52 2 
72 1 302 1 348 1 192 1 34 2 191 1 33 1 1 1 58 1 318 1 158 1 150 1 131 1 343 1 310 1 159 2 345 1 52 2 
72 1 144 1 33 1 191 1 34 4 192 1 1 2 78 1 318 1 58 1 150 2 343 2 344 2 61 1 302 1 348 1 158 2 131 1 310 1 159 2 138 1 52 2 
72 1 34 4 144 1 33 1 191 1 192 1 1 2 78 1 318 1 58 1 150 2 343 2 344 2 61 1 302 1 348 1 158 2 310 1 159 2 138 1 52 2 
54 1 72 1 74 1 142 1 31 1 34 2 191 1 33 1 58 1 318 1 243 1 38 1 344 1 296 1 371 1 324 1 10 1 12 1 348 1 231 1 353 1 236 1 281 1 159 1 186 1 52 2 71 1 90 1 
54 1 72 1 74 1 142 1 34 2 191 1 33 1 58 1 318 1 243 1 114 1 38 1 344 1 296 1 371 1 324 1 12 1 348 1 231 1 176 1 378 1 236 1 281 1 159 1 186 1 52 2 71 1 90 1 
72 1 144 1 33 1 191 1 34 4 192 1 1 2 78 1 318 1 58 1 150 2 343 2 344 2 61 1 302 1 348 1 158 2 86 1 310 1 159 2 138 1 52 2 
72 1 31 1 142 1 211 1 192 1 34 4 144 1 191 1 33 1 1 2 78 1 58 1 318 1 243 1 150 2 343 2 38 1 344 2 296 1 371 1 61 1 324 1 10 1 12 1 302 1 348 1 231 1 158 2 353 1 236 1 159 2 310 1 138 1 332 1 186 1 52 2 90 1 
72 1 33 1 191 1 144 1 34 3 266 1 1 1 78 1 318 1 58 1 150 1 343 1 344 2 321 1 61 1 223 1 302 1 348 1 174 1 231 1 46 1 158 1 86 1 159 1 310 1 26 1 138 1 52 2 90 1 
72 2 56 2 192 3 33 2 34 19 144 3 78 3 4 1 318 2 58 2 113 1 93 1 344 9 250 1 346 1 61 3 221 2 98 1 301 1 152 1 302 3 102 1 43 2 158 6 356 1 159 10 310 3 138 3 187 1 52 4 
141 1 72 3 190 2 56 1 192 2 33 3 34 26 144 3 78 3 4 1 318 3 58 3 113 1 195 1 344 14 61 2 221 2 98 2 301 2 152 1 302 2 102 1 43 4 278 1 158 4 356 2 180 1 310 2 159 12 263 1 138 3 187 2 52 6 91 1 
141 1 190 1 144 5 192 4 56 1 58 3 4 1 93 1 195 1 344 20 346 1 61 4 98 3 301 3 152 1 302 4 102 1 158 8 356 1 310 5 159 21 263 1 311 1 72 3 111 1 34 41 33 3 78 4 214 1 318 3 113 1 37 1 166 1 221 4 42 1 43 4 278 1 327 1 180 1 138 4 187 2 52 6 91 1 
141 1 72 4 111 1 190 2 56 1 192 4 33 4 34 38 144 5 78 4 214 1 4 1 318 4 58 4 113 1 93 1 195 1 37 1 166 1 344 20 346 1 61 3 221 4 98 3 42 1 301 3 152 1 302 3 102 1 43 4 278 1 158 7 327 1 356 1 180 1 159 18 310 4 263 1 138 4 187 2 311 1 52 8 91 1 
141 1 72 2 111 1 190 1 56 1 192 7 33 2 34 52 144 8 78 7 214 1 4 1 318 2 58 2 113 1 93 2 195 1 166 1 344 27 119 2 61 7 221 4 98 2 42 1 301 4 152 1 302 7 102 1 43 4 278 1 158 14 327 1 356 1 180 1 159 25 310 8 263 1 138 7 187 1 311 1 52 4 91 1 
154 1 57 1 
77 1 224 1 208 1 
198 1 14 1 123 1 362 1 347 1 27 1 160 1 7 1 95 1 235 1 
127 1 121 1 
198 1 14 1 123 1 75 1 362 1 279 1 69 1 95 1 235 1 
198 1 123 1 14 1 276 1 362 1 213 1 194 1 130 1 235 1 95 1 106 1 329 2 134 1 251 1 264 1 347 1 27 1 160 1 
198 1 123 1 14 1 276 1 362 1 213 1 194 1 130 1 235 1 95 1 106 1 329 2 134 1 251 1 264 1 347 1 27 1 160 1 
198 1 123 1 14 1 276 1 362 1 213 1 194 1 130 1 235 1 95 1 106 1 329 2 134 1 251 1 264 1 347 1 27 1 160 1 
154 1 77 1 57 1 
154 1 77 1 57 1 
224 1 208 1 
77 1 224 1 208 1 
125 1 280 1 
362 1 213 1 194 1 95 1 321 2 222 1 223 2 121 1 170 1 198 1 14 1 123 1 225 1 125 1 127 1 231 2 350 1 21 1 46 2 130 1 235 1 280 1 281 1 329 1 134 1 108 1 90 2 
72 1 54 1 73 1 142 1 191 1 33 1 34 2 58 1 318 1 243 1 366 1 217 1 38 2 344 1 296 2 324 1 12 2 348 1 227 1 254 2 201 1 231 2 46 2 354 1 236 1 237 1 86 1 159 1 52 2 71 1 90 2 
172 1 360 1 363 2 0 1 233 1 292 1 48 1 236 1 105 1 179 1 328 1 38 2 137 1 135 1 296 2 332 1 322 1 324 1 12 2 
172 1 360 1 363 2 0 1 258 1 233 1 292 1 48 1 236 1 179 1 328 1 38 1 135 1 296 1 322 1 324 1 12 1 
74 1 142 1 232 1 243 1 292 1 236 1 38 1 87 1 137 1 296 1 323 1 324 1 89 1 12 1 
172 1 360 1 363 2 0 1 233 1 292 1 48 1 236 1 105 1 179 1 328 1 38 1 137 1 135 1 296 1 322 1 324 1 12 1 
267 1 
339 1 331 1 307 1 92 1 264 1 252 1 148 1 
194 1 116 1 148 1 60 1 62 1 252 1 274 1 376 1 377 1 130 1 260 1 25 1 67 1 307 1 264 2 88 1 161 1 
74 1 142 1 243 2 94 1 38 1 296 1 9 1 324 1 62 1 40 1 300 1 12 1 15 1 228 1 377 1 234 1 236 2 178 1 307 2 185 1 186 1 88 1 161 1 
141 1 143 8 144 4 2 1 194 1 78 4 93 1 195 1 148 2 246 5 60 1 119 1 221 2 40 1 98 1 62 2 252 8 301 2 274 1 302 4 376 10 155 1 377 2 278 1 130 1 25 5 261 1 307 13 310 4 263 1 183 1 138 4 264 7 88 2 161 2 358 8 91 1 
144 2 194 1 214 1 289 1 246 2 196 1 166 1 117 1 321 1 223 1 62 1 81 1 252 2 174 1 231 1 377 1 129 1 46 1 130 1 327 1 310 1 307 2 136 1 183 1 334 1 88 1 161 1 90 1 
339 1 92 1 377 1 148 1 307 1 264 1 62 1 88 1 161 1 252 1 
302 2 143 5 144 2 376 10 78 2 246 2 25 5 310 2 307 5 183 1 138 2 185 1 264 5 252 5 358 5 
60 1 194 1 264 1 130 1 148 1 274 1 
74 2 142 1 193 1 194 3 243 1 244 1 38 4 60 2 296 4 324 1 62 1 40 2 99 2 252 2 169 1 12 4 274 4 173 1 377 2 232 1 130 3 236 1 282 1 261 2 307 2 88 2 161 2 89 1 140 1 
72 1 74 1 338 1 31 1 142 1 34 1 33 1 191 1 318 1 58 1 243 1 38 1 296 1 321 2 371 1 324 1 223 2 10 1 12 1 348 1 174 2 231 3 129 1 46 2 353 1 236 1 281 1 159 1 186 1 71 1 52 2 90 3 
143 2 376 4 377 1 148 2 25 2 261 1 307 1 264 4 62 1 88 1 40 1 252 2 161 1 42 1 358 2 
198 1 14 1 79 1 
198 1 14 1 79 1 
198 1 14 1 247 1 125 1 347 1 
198 1 14 1 79 1 
198 1 14 1 53 1 
198 1 14 1 53 1 
198 1 14 1 53 1 
198 1 14 1 
362 1 95 1 
72 2 190 1 111 1 144 1 34 8 192 2 33 2 214 1 58 2 318 2 158 3 327 1 166 1 310 1 159 4 344 4 61 1 42 1 52 4 311 1 
111 1 192 2 144 1 34 6 214 1 158 2 327 1 166 1 331 1 159 3 344 3 310 1 42 1 311 1 
72 1 302 1 192 1 33 1 144 1 34 4 78 1 58 1 318 1 158 2 149 1 159 2 310 1 344 2 138 1 61 1 52 2 
302 1 192 1 34 7 144 1 78 1 93 1 158 2 310 1 159 4 344 3 138 1 61 1 221 2 98 1 301 1 
72 2 111 1 190 2 144 3 34 23 192 5 33 2 78 2 214 1 58 2 318 2 93 1 166 2 344 11 119 1 61 4 221 2 372 1 42 1 301 2 11 1 302 2 158 9 327 2 159 12 310 3 138 2 311 1 52 4 
34 1 159 1 221 1 
34 1 344 1 301 1 
72 1 302 1 33 1 34 6 144 1 192 2 78 1 318 1 58 1 158 3 149 1 159 3 344 3 310 1 138 1 185 1 61 1 52 2 
72 1 141 1 34 12 33 1 144 2 192 1 78 2 318 1 58 1 195 1 344 6 61 1 221 1 98 1 301 1 152 1 302 2 278 1 158 2 159 6 310 2 263 1 138 2 52 2 91 1 
144 1 34 6 192 1 214 1 158 2 327 1 166 1 344 3 310 1 159 3 61 1 
72 1 111 1 190 1 192 1 34 3 33 1 58 1 318 1 158 2 327 1 166 1 344 1 159 2 61 1 372 1 52 2 311 1 
72 1 33 1 192 3 34 10 144 2 214 1 318 1 58 1 158 5 327 2 166 2 117 1 344 5 159 5 310 2 61 2 52 2 152 1 
72 1 33 1 144 1 34 2 58 1 318 1 158 1 344 2 138 1 61 1 52 2 152 1 
72 1 302 1 192 1 33 1 144 1 34 4 78 1 58 1 318 1 158 2 159 2 310 1 344 2 138 1 61 1 52 2 152 1 
72 3 190 1 34 3 33 3 192 1 58 3 318 3 158 2 327 1 166 1 159 2 344 1 346 1 61 1 372 1 52 6 152 1 
72 5 111 1 190 2 33 5 34 34 144 5 192 7 78 3 214 2 318 5 58 5 93 1 149 1 166 3 248 1 344 16 346 1 61 5 221 4 372 1 98 1 42 1 301 3 152 1 302 3 158 12 327 3 24 1 238 1 159 18 310 5 138 3 311 1 52 10 
72 1 111 1 144 1 34 8 33 1 192 2 214 1 318 1 58 1 166 1 344 4 221 1 98 1 42 1 301 1 152 1 158 2 327 1 310 1 159 4 263 1 52 2 311 1 
72 2 111 1 192 2 34 11 33 2 144 2 78 1 214 1 318 2 58 2 93 1 149 1 166 1 344 6 61 1 221 2 98 1 42 1 301 1 152 1 158 3 327 1 310 1 159 5 263 1 138 1 311 1 52 4 
72 3 141 1 111 1 190 1 34 19 33 3 144 3 192 3 78 2 214 1 318 3 58 3 195 1 149 1 166 1 344 9 61 1 221 1 98 1 42 1 301 1 152 1 302 2 278 1 158 4 327 1 159 10 310 3 263 1 138 2 311 1 52 6 91 1 
72 3 141 1 111 1 190 1 34 17 33 3 144 3 192 3 78 2 214 1 318 3 58 3 195 1 149 1 166 1 344 10 61 2 221 1 98 1 42 1 301 1 152 1 302 1 278 1 158 5 327 1 159 7 310 2 263 1 138 2 311 1 52 6 91 1 
72 1 111 1 144 1 34 8 33 1 192 2 214 1 318 1 58 1 166 1 344 4 221 1 98 1 42 1 301 1 152 1 158 2 327 1 310 1 159 4 263 1 52 2 311 1 
72 1 141 1 34 12 33 1 144 2 192 1 78 2 318 1 58 1 195 1 344 6 61 1 221 1 98 1 301 1 152 1 302 2 278 1 158 2 159 6 310 2 263 1 138 2 52 2 91 1 
141 1 72 4 111 1 190 2 34 18 33 4 144 3 192 3 78 2 214 1 318 4 58 4 195 1 149 1 166 1 344 10 61 2 221 1 98 1 42 1 301 1 152 1 302 1 278 1 158 5 327 1 159 8 310 2 263 1 138 2 311 1 52 8 91 1 
141 1 72 4 190 2 34 16 33 4 144 3 192 3 78 3 318 4 58 4 195 1 344 9 346 1 61 3 221 1 98 1 301 1 152 1 302 2 278 1 158 6 159 7 310 2 263 1 138 3 52 8 91 1 
111 2 34 7 192 3 144 1 214 1 158 6 327 3 166 3 159 4 310 1 344 3 61 3 311 1 
141 1 72 4 111 1 190 2 34 18 33 4 144 3 192 3 78 2 214 1 318 4 58 4 195 1 166 1 344 10 346 1 61 1 221 1 98 1 42 1 301 1 152 1 302 1 278 1 158 4 327 1 159 8 310 2 263 1 138 2 311 1 52 8 91 1 
281 1 253 1 231 1 298 1 46 1 365 1 90 1 
253 1 163 1 17 1 231 1 379 1 85 1 365 1 46 1 281 1 298 1 210 1 90 1 
74 1 142 1 231 2 378 1 243 1 46 1 236 1 281 1 370 1 38 1 321 1 296 1 371 1 186 1 324 1 223 1 90 2 12 1 
226 1 142 1 18 1 243 1 236 2 340 1 38 1 296 1 186 1 324 1 99 1 300 1 12 1 
74 1 142 1 331 1 38 1 296 1 324 1 232 1 243 1 89 1 236 1 12 1 
74 1 142 1 31 1 231 2 243 1 46 1 236 1 281 1 370 1 38 1 321 1 296 1 371 1 186 1 324 1 223 1 90 2 12 1 
31 1 142 2 243 3 196 1 370 1 38 1 219 1 249 1 296 1 321 1 167 1 371 1 324 1 223 2 99 1 12 1 231 2 46 2 236 1 305 1 281 1 186 2 90 2 
142 2 243 3 196 1 370 1 38 2 219 1 249 1 296 2 321 1 167 1 371 1 324 1 223 2 99 1 275 1 12 2 231 2 378 1 46 2 236 1 305 1 281 1 186 2 90 2 
74 1 142 1 189 1 194 2 243 4 148 1 38 3 249 1 9 1 296 3 167 1 324 1 99 1 275 1 274 1 12 3 303 1 130 2 236 1 207 1 264 1 186 1 333 1 
74 1 142 1 189 1 194 2 243 4 130 2 148 1 236 1 38 3 249 1 167 1 296 3 297 1 9 1 207 1 264 1 186 1 324 1 99 1 275 1 12 3 274 1 
38 1 296 1 324 1 47 1 236 1 12 1 
171 1 74 2 226 1 142 2 254 1 18 1 243 3 47 1 236 3 179 1 237 1 340 1 320 1 38 7 296 6 332 1 186 1 324 2 300 1 101 1 12 7 
72 2 142 1 31 1 111 1 211 1 34 6 144 1 192 2 191 2 33 2 1 1 214 1 58 2 318 2 243 1 150 1 343 1 166 1 370 1 38 1 344 3 321 1 296 1 371 1 324 1 223 1 42 1 10 1 12 1 348 2 201 1 231 2 46 1 158 2 353 1 236 1 327 1 86 1 281 2 159 3 310 1 68 1 332 1 186 1 311 1 52 4 90 2 
74 1 339 1 144 2 92 1 194 1 214 1 289 1 148 1 244 1 246 2 196 1 166 1 38 1 117 1 321 1 296 1 223 1 62 1 252 4 12 1 228 1 174 1 231 1 377 1 129 1 46 1 130 1 178 1 327 1 307 4 310 2 136 1 108 1 183 1 264 1 334 1 88 1 161 1 90 1 
142 1 243 2 47 1 94 1 236 2 38 2 296 2 332 1 207 1 186 1 324 1 300 1 12 2 
74 1 142 1 232 1 243 1 236 1 38 4 182 1 296 4 332 1 324 1 89 1 275 1 12 4 
226 1 142 1 128 1 18 1 112 1 243 1 236 2 38 2 296 2 186 1 324 1 99 1 82 1 12 2 
172 1 74 1 38 1 363 1 0 1 296 1 324 1 233 1 236 1 12 1 
237 1 179 1 142 1 38 2 296 2 332 1 324 1 243 1 354 1 236 1 12 2 
171 1 74 1 142 2 232 1 243 3 236 2 237 1 320 1 38 5 182 1 296 4 332 1 324 2 99 1 89 1 12 5 
171 1 74 1 142 2 232 1 243 3 236 2 237 1 38 5 182 1 296 4 332 1 324 2 99 1 89 1 139 1 12 5 
64 1 73 1 227 1 231 1 46 1 366 1 308 1 181 1 90 1 
368 1 80 1 308 1 
281 1 64 1 271 1 308 1 181 1 
64 2 189 1 194 2 130 2 148 1 305 1 205 1 368 1 281 1 196 1 80 1 271 2 219 1 308 1 108 1 181 2 133 1 264 1 29 1 
331 1 145 1 352 1 355 1 
294 1 342 1 132 1 145 1 44 1 352 1 355 1 
162 1 288 1 44 1 
145 1 44 3 230 1 146 1 352 1 355 1 177 1 294 1 342 1 107 1 132 3 151 2 
294 1 342 1 132 2 145 1 255 1 256 1 44 2 352 1 355 1 
328 1 294 1 369 1 342 1 363 1 132 1 107 1 349 1 44 1 233 1 355 1 
294 1 342 1 132 1 107 1 44 1 352 1 355 1 
294 1 342 1 132 1 107 1 145 1 44 1 352 2 
44 2 352 1 157 1 216 1 355 1 294 2 342 2 107 1 132 2 168 1 
374 1 286 1 145 1 255 2 349 1 44 3 352 1 355 2 294 1 342 1 295 1 107 1 132 3 
172 1 360 1 363 2 145 1 255 1 44 2 352 1 355 1 233 1 294 1 165 1 328 1 342 1 107 1 132 2 
374 1 145 1 256 1 255 2 349 1 44 4 352 1 355 2 294 2 342 2 107 1 132 4 239 1 
294 1 342 1 132 1 107 1 145 1 44 1 352 1 355 1 
374 1 145 2 255 2 349 1 230 1 44 4 352 2 177 1 355 3 294 1 342 1 272 1 132 4 151 1 
294 1 319 1 342 1 132 2 107 1 145 1 255 1 44 2 206 1 304 1 352 1 355 1 
32 1 145 1 230 1 44 3 352 1 355 1 177 2 294 1 342 1 107 1 132 3 151 2 
153 2 316 1 355 2 63 1 
294 1 342 1 132 1 107 1 44 1 317 1 
294 1 342 1 295 1 132 2 107 1 145 1 255 1 44 2 352 1 355 1 
84 1 
294 1 342 1 132 1 107 1 145 1 44 1 352 1 355 1 
255 1 145 1 44 3 352 1 355 1 294 1 342 1 295 1 107 1 132 3 151 1 
374 1 272 1 349 1 355 1 
352 1 355 1 

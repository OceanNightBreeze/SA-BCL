#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 298 13 (155,166) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 298 13 (15,265) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 1 47 1 176 2 56 1 297 2 49 1 84 1 117 1 323 3 250 1 217 2 220 1 131 3 
23 1 2 1 174 1 68 1 47 3 176 5 297 2 49 2 250 1 217 2 72 1 73 1 220 1 131 9 223 1 204 1 56 4 351 2 232 2 84 1 117 6 354 2 323 9 324 1 379 2 123 1 380 1 381 1 
23 1 2 1 174 1 68 1 47 3 176 5 297 2 49 2 250 1 217 2 72 1 73 1 220 1 131 9 223 1 204 1 56 4 351 2 232 2 84 1 117 6 354 2 323 9 324 1 379 2 123 1 380 1 381 1 
23 1 2 1 174 1 68 1 47 4 176 6 297 2 49 2 250 1 217 2 72 1 73 1 220 1 131 10 223 1 204 1 56 5 351 2 232 2 84 1 117 7 354 2 323 10 324 1 379 2 123 1 380 1 381 1 
23 1 2 1 174 1 68 1 47 2 176 4 297 2 49 2 250 1 217 2 72 1 73 1 220 1 131 7 223 1 204 1 56 3 351 2 232 2 84 1 117 4 354 1 323 7 379 2 123 1 380 1 381 1 
47 1 176 3 56 2 297 1 351 1 232 1 84 1 117 3 354 2 323 4 250 1 217 1 324 1 72 1 220 1 379 1 131 4 381 1 
223 1 2 1 294 1 176 1 297 1 351 1 100 1 49 1 232 1 84 1 179 1 323 2 250 1 217 1 220 1 131 2 
23 1 47 3 176 5 297 2 49 1 250 1 217 2 73 1 72 1 220 1 131 9 77 1 204 1 56 4 351 1 232 1 84 1 117 7 354 2 323 9 324 1 379 1 271 1 381 1 
23 1 47 3 176 5 297 2 49 1 250 1 217 2 73 1 72 1 220 1 131 9 77 1 204 1 56 4 351 1 232 1 84 1 117 7 354 2 323 9 324 1 379 1 271 1 381 1 
93 1 107 1 158 1 320 1 14 1 65 1 5 1 163 1 366 1 103 1 340 1 269 1 238 1 39 1 
90 1 
78 1 331 1 93 1 158 2 190 1 90 1 21 1 163 2 
78 1 187 1 331 1 93 2 158 5 372 1 79 1 285 1 96 2 46 2 112 1 163 5 58 1 268 1 190 2 90 1 146 1 343 2 283 1 
78 1 373 1 90 1 
90 1 212 1 101 2 
103 2 107 2 340 1 159 1 269 2 320 2 65 2 238 2 
242 1 0 1 276 1 3 2 64 1 149 1 67 1 65 2 177 1 364 1 151 2 8 1 181 1 103 3 340 1 105 1 31 1 255 1 368 1 13 1 107 3 370 2 159 1 225 1 349 1 259 1 320 2 116 1 137 1 138 2 264 1 166 1 122 2 269 2 360 1 238 2 41 1 
103 1 107 1 340 1 269 1 320 1 14 1 65 1 5 1 238 1 39 1 
78 1 301 1 107 1 158 1 308 1 248 1 295 1 65 1 163 1 278 1 249 1 103 1 90 1 39 1 
78 1 107 1 158 2 308 1 320 1 248 1 65 1 163 2 278 1 249 1 103 1 269 1 90 1 238 1 39 1 
93 1 158 1 190 1 163 1 48 1 
78 1 331 1 93 1 139 1 158 2 190 1 90 1 163 2 
158 1 190 1 163 1 
193 1 107 2 159 2 320 1 65 2 229 1 103 2 269 1 238 1 
63 1 11 1 50 1 
242 1 13 1 107 1 370 1 159 1 3 1 64 1 149 1 259 1 177 1 116 1 9 1 138 1 166 1 103 1 368 1 
159 1 373 1 
242 1 13 1 107 2 370 1 3 1 64 1 259 1 320 1 149 1 65 1 335 1 177 1 116 1 138 1 166 1 103 2 87 1 11 1 238 1 368 1 
103 3 107 3 159 1 269 1 320 3 65 3 335 1 238 3 
103 1 107 1 320 1 14 1 65 1 238 1 39 1 
193 1 103 1 107 1 269 1 320 1 65 1 238 1 39 1 229 1 
242 1 193 1 276 1 308 1 3 1 64 1 248 1 149 1 65 3 335 1 177 1 364 1 151 2 8 1 278 1 249 1 103 4 340 1 31 1 368 1 13 1 107 4 370 1 158 1 159 1 34 1 225 1 258 1 349 1 259 1 320 3 163 1 116 1 137 1 138 1 264 1 166 1 122 1 269 2 87 1 360 1 238 3 39 1 41 1 
208 1 103 2 107 2 159 1 320 1 295 1 65 2 335 1 238 1 
193 1 107 3 158 1 308 1 258 1 248 1 320 3 65 3 335 2 163 1 7 1 278 1 249 1 103 3 269 1 87 1 90 1 238 3 39 1 
193 1 63 1 107 2 320 2 65 2 335 1 103 2 269 1 11 1 238 2 
242 1 13 1 107 1 370 1 159 1 3 1 64 1 149 1 259 1 177 1 116 1 138 1 166 1 103 1 368 1 
242 1 13 1 107 1 370 1 159 1 3 1 64 1 149 1 259 1 177 1 216 1 138 1 265 1 103 1 368 1 
63 2 67 2 364 1 151 2 50 2 102 1 11 2 12 1 75 1 225 1 203 1 349 1 134 1 137 2 264 1 59 1 86 1 122 4 170 1 360 1 125 1 41 1 
249 1 103 1 107 1 287 1 320 1 65 1 238 1 39 1 
208 1 193 1 103 5 107 5 159 1 87 1 269 1 320 4 295 1 65 5 335 2 238 4 40 1 344 1 
103 2 107 2 287 1 320 2 14 1 65 2 238 2 39 1 
209 1 284 1 318 1 
26 1 209 2 284 2 336 1 83 1 338 1 
209 1 284 1 
209 1 284 1 
26 1 338 1 
26 1 338 1 
26 1 338 1 
209 1 284 1 161 1 
209 1 284 1 161 1 
209 1 284 1 161 1 
209 1 284 1 312 1 
209 1 284 1 312 1 
209 1 284 1 312 1 
330 1 332 2 284 2 158 2 80 1 319 1 24 2 188 1 336 1 81 2 163 2 263 2 51 1 209 2 356 2 104 1 90 1 270 1 144 3 
332 1 65 2 99 1 103 2 251 1 76 1 132 1 284 1 369 1 107 2 158 1 318 1 159 1 320 2 319 1 81 1 163 1 113 1 263 1 189 1 356 1 209 1 144 1 238 2 
294 1 379 1 36 2 306 1 351 2 
379 1 351 1 232 1 
294 1 351 1 232 1 
294 1 36 1 379 2 306 1 351 3 32 1 
294 1 53 1 36 1 379 1 306 1 351 2 
42 2 331 1 93 4 96 1 310 1 46 1 101 3 12 1 343 1 282 1 76 1 55 1 187 2 78 1 369 1 158 5 285 3 321 1 135 2 163 5 289 1 115 1 189 1 352 1 59 1 86 1 190 1 89 2 90 2 212 1 125 1 146 1 
42 6 93 7 331 1 96 2 46 2 48 5 101 9 12 3 341 1 343 2 282 2 283 1 187 6 78 1 369 4 158 9 285 8 321 3 228 1 163 9 114 1 289 2 115 1 59 3 234 1 168 1 86 3 190 6 326 5 89 6 90 5 212 3 125 3 329 1 146 1 
42 2 93 2 96 1 310 1 46 1 101 4 12 1 343 1 282 1 283 1 55 1 78 1 187 2 369 1 158 3 285 3 321 1 135 1 163 3 289 1 59 1 86 1 90 3 89 2 212 2 125 1 
42 4 93 3 96 1 310 1 46 1 101 7 12 2 341 1 343 1 282 1 283 1 55 1 78 1 187 4 369 2 158 4 285 5 321 2 135 2 163 4 114 1 289 1 59 2 168 1 86 2 90 4 89 4 212 3 125 2 
173 1 
242 1 373 1 17 1 
242 1 198 1 
242 1 368 1 
242 3 259 1 66 1 145 1 17 2 368 1 
242 1 259 1 368 1 
242 1 252 1 
345 1 62 2 94 1 67 4 69 1 98 1 311 3 260 1 290 1 137 3 233 1 71 1 86 1 27 1 121 1 122 7 12 1 156 2 
62 3 214 1 94 2 44 1 67 19 69 2 311 8 70 1 337 2 364 2 151 4 71 1 27 1 52 4 315 1 12 5 156 3 342 1 222 4 345 2 35 1 225 2 321 4 260 1 290 1 137 18 233 5 264 2 59 4 86 5 121 2 325 1 122 37 38 1 125 4 41 2 
62 3 94 1 246 1 67 5 69 1 311 4 364 2 337 1 151 4 313 1 71 1 27 1 12 1 156 2 345 1 225 2 260 1 137 4 233 1 264 2 86 1 122 9 121 1 41 2 
345 1 62 2 94 1 67 4 69 1 311 3 260 1 290 1 137 3 233 1 71 1 86 1 27 1 121 1 122 7 12 1 156 2 
345 1 62 2 94 1 67 4 69 1 311 3 260 1 290 1 137 3 233 1 71 1 86 1 27 1 121 1 122 7 12 1 156 2 
242 1 256 1 275 1 370 1 110 1 3 1 64 1 374 2 149 1 205 1 177 1 297 1 49 2 138 1 118 1 323 1 217 1 292 2 131 1 171 1 281 2 91 1 368 1 
294 1 3 1 64 1 177 1 297 1 49 1 215 1 180 1 217 1 220 1 131 1 29 1 281 1 32 1 370 1 157 1 347 1 374 1 57 1 351 2 232 1 138 1 377 1 323 1 292 1 379 1 
294 1 3 1 64 1 176 1 177 1 297 1 49 1 215 1 180 1 250 1 217 1 220 1 131 2 29 1 281 1 32 1 370 1 157 1 286 1 347 1 374 1 57 1 351 2 232 1 84 1 117 1 138 1 323 2 292 1 379 1 
294 1 3 1 64 1 176 1 177 1 297 1 49 1 215 1 180 1 250 1 217 1 131 3 281 1 200 1 32 1 370 1 157 1 347 1 374 1 57 1 351 2 232 1 84 1 138 1 117 2 377 1 323 3 292 1 379 1 91 1 
294 1 3 1 64 1 176 1 177 1 49 1 215 1 250 1 131 2 281 1 200 1 32 1 370 1 347 1 374 1 57 1 351 2 232 1 84 1 138 1 117 2 377 1 323 2 292 1 379 1 
261 1 
242 1 331 3 147 1 3 2 196 1 96 1 149 2 248 1 295 1 46 1 4 1 296 1 101 2 339 2 249 1 103 1 343 1 301 1 256 1 107 1 158 5 348 2 163 5 206 2 266 1 210 1 169 1 19 2 357 2 120 1 212 2 171 1 308 1 64 1 65 1 177 1 278 1 365 2 218 1 74 2 183 4 282 1 368 1 78 1 187 2 370 2 285 2 138 2 291 1 190 6 90 2 146 1 240 1 39 1 192 1 
331 1 308 1 196 1 248 1 295 1 65 1 4 1 278 1 249 1 103 1 74 1 183 2 301 1 107 1 158 3 163 3 291 1 210 1 120 1 190 2 21 1 39 1 
331 1 308 1 196 1 248 1 295 1 65 1 4 1 278 1 249 1 365 1 103 1 183 3 78 1 301 1 107 1 158 3 163 3 291 1 210 1 120 1 190 1 90 1 21 1 39 1 
331 1 308 1 196 1 248 1 295 1 65 1 4 1 278 1 249 1 339 1 365 1 103 1 74 1 183 3 78 1 301 1 107 1 158 3 163 3 291 1 210 1 120 1 190 2 90 1 21 1 39 1 
331 3 147 1 196 1 248 1 96 1 295 1 4 1 46 1 339 4 249 1 103 1 253 1 106 1 343 1 301 1 107 1 158 5 348 2 163 5 206 2 210 1 120 1 357 2 19 2 358 1 21 1 212 2 274 1 308 1 65 1 278 1 365 4 218 1 74 4 183 6 78 5 187 1 285 1 291 1 236 1 190 7 90 5 146 1 39 1 
331 2 147 1 196 1 248 1 96 1 295 1 46 1 4 1 101 2 249 1 339 2 103 1 343 1 301 1 107 1 158 4 348 2 163 4 206 2 210 1 120 1 357 2 19 2 169 1 212 2 308 1 65 1 278 1 365 2 218 1 74 2 183 4 187 1 78 1 285 1 291 1 190 4 90 2 146 1 39 1 
331 2 147 1 308 1 196 1 248 1 96 1 295 1 46 1 65 1 4 1 278 1 365 2 339 2 249 1 103 1 218 1 74 2 183 4 106 1 343 1 78 1 187 1 301 1 107 1 158 4 285 1 348 2 163 4 206 2 291 1 210 1 19 2 357 2 120 1 190 4 90 1 358 1 212 2 146 1 39 1 274 1 
331 2 147 1 308 1 196 1 248 1 96 1 295 1 46 1 65 1 4 1 278 1 365 2 339 2 249 1 103 1 218 1 74 2 183 4 106 1 343 1 78 1 187 1 301 1 107 1 158 4 285 1 348 2 163 4 206 2 291 1 210 1 19 2 357 2 120 1 190 4 90 1 358 1 212 2 146 1 39 1 274 1 
307 1 331 2 147 1 22 2 308 1 196 1 248 1 96 1 295 1 46 1 65 1 4 1 101 2 278 1 365 2 339 2 249 1 103 1 74 2 183 4 106 1 343 1 78 1 187 1 301 1 107 1 158 4 285 1 227 2 163 4 206 2 291 1 355 1 210 1 357 2 120 1 190 4 293 1 90 1 146 1 39 1 
331 2 147 1 308 1 196 1 96 1 248 1 295 1 46 1 65 1 4 1 278 1 249 1 339 3 365 3 103 1 218 1 74 3 183 5 106 1 343 1 78 1 187 1 301 1 107 1 158 4 285 1 348 2 163 4 206 2 291 1 210 1 236 1 19 2 357 2 120 1 190 5 90 1 358 1 212 2 146 1 39 1 274 1 
331 2 147 1 308 1 196 1 96 1 248 1 295 1 46 1 65 1 4 1 278 1 249 1 339 3 365 3 103 1 218 1 74 3 183 5 106 1 343 1 78 1 187 1 301 1 107 1 158 4 285 1 348 2 163 4 206 2 291 1 210 1 236 1 19 2 357 2 120 1 190 5 90 1 358 1 212 2 146 1 39 1 274 1 
331 2 147 1 22 2 196 1 308 1 96 1 248 1 295 1 4 1 46 1 65 1 101 2 278 1 365 2 339 2 249 1 103 1 74 2 183 4 343 1 78 1 187 1 301 1 107 1 158 4 285 1 227 2 163 4 206 2 291 1 355 1 210 1 169 1 357 2 120 1 190 4 90 1 146 1 39 1 
242 3 243 1 0 1 3 7 276 1 64 2 149 2 65 1 67 1 335 1 177 2 364 2 151 4 279 1 103 1 105 2 219 1 368 2 107 1 370 8 256 1 286 1 203 1 225 2 111 1 320 1 349 2 137 1 138 8 377 1 264 2 211 1 37 1 20 1 122 2 360 2 171 1 238 1 41 2 
193 1 63 1 65 1 67 1 364 1 50 1 151 2 103 1 11 1 12 1 317 1 107 1 225 1 320 1 349 1 321 1 207 1 137 2 264 1 59 1 86 1 269 1 122 3 360 1 125 1 238 1 41 1 
62 2 63 1 159 2 373 1 203 1 225 1 349 1 67 3 69 1 311 2 260 1 364 1 50 1 137 3 151 2 264 1 71 1 86 1 27 1 122 6 121 1 11 1 12 1 360 1 156 1 41 1 
0 1 214 1 63 4 276 1 67 8 311 1 364 2 151 4 50 11 130 1 315 1 52 3 11 11 12 2 222 3 317 1 159 1 109 1 35 1 225 2 349 1 321 2 350 1 233 1 137 6 264 2 59 1 86 1 122 14 360 2 125 2 41 2 
242 1 0 1 63 1 3 1 276 1 64 1 149 1 65 1 67 1 335 1 177 1 364 1 9 1 151 2 103 2 368 1 13 1 317 1 370 1 107 2 159 1 303 1 257 1 225 1 259 1 349 1 320 1 116 1 137 1 138 1 166 1 264 1 167 1 87 1 122 2 360 1 238 1 41 1 
242 2 0 1 194 1 244 2 3 3 149 1 97 2 335 1 151 6 50 7 103 3 11 7 12 3 156 1 13 2 107 3 159 2 349 3 259 2 162 1 260 1 116 2 264 3 166 2 59 2 121 1 122 20 360 3 125 2 62 2 63 7 276 1 64 2 65 1 67 10 69 1 177 2 311 6 364 3 277 1 71 1 27 1 31 2 368 2 317 1 370 3 225 3 320 1 321 2 133 2 137 10 231 2 233 4 138 3 377 1 86 3 87 1 238 1 41 3 
63 1 203 1 225 1 349 1 67 2 311 1 364 1 233 1 50 1 151 2 264 1 102 1 122 2 11 1 360 1 12 1 125 1 41 1 
63 1 203 1 225 1 349 1 134 1 364 1 50 1 151 2 137 2 264 1 59 1 86 1 122 2 11 1 360 1 41 1 
63 2 67 2 311 1 364 1 151 2 50 2 11 2 12 1 225 1 203 1 349 1 321 1 233 1 137 2 264 1 59 1 86 1 122 4 360 1 125 1 41 1 
63 1 111 1 225 1 349 1 67 2 311 1 364 1 233 1 50 1 151 2 264 1 102 1 122 2 11 1 360 1 12 1 125 1 41 1 
63 1 111 1 225 1 349 1 134 1 364 1 50 1 151 2 137 2 264 1 59 1 86 1 122 2 11 1 360 1 41 1 
63 2 111 1 225 1 349 1 321 1 67 2 364 1 137 2 50 2 151 2 264 1 59 1 86 1 122 4 11 2 360 1 12 1 125 1 41 1 
63 2 225 1 349 1 321 1 67 2 311 1 364 1 137 2 233 1 50 2 151 2 264 1 59 1 86 1 122 4 11 2 360 1 12 1 125 1 41 1 
242 1 0 1 3 1 276 1 64 1 149 1 67 1 177 1 364 1 151 2 103 1 31 1 368 1 13 1 370 1 107 1 159 1 225 1 259 1 349 1 116 1 137 1 138 1 166 1 264 1 122 2 360 1 41 1 
242 1 0 1 3 1 276 1 64 1 197 1 149 1 67 1 177 1 364 1 216 1 151 2 103 1 368 1 13 1 370 1 107 1 159 1 225 1 259 1 349 1 137 1 138 1 265 1 264 1 122 2 360 1 41 1 
63 2 67 2 311 1 364 1 151 2 50 2 11 2 12 1 317 1 225 1 349 1 321 1 233 1 137 2 264 1 59 1 86 1 122 4 360 1 125 1 41 1 
242 1 63 2 3 1 64 1 67 2 97 1 311 1 177 1 364 1 50 2 151 2 103 1 11 2 12 1 31 1 368 1 13 1 370 1 107 1 286 1 225 1 259 1 349 1 321 1 116 1 137 2 233 1 138 1 166 1 264 1 59 1 86 1 122 4 360 1 125 1 41 1 
193 1 63 1 65 1 67 2 311 1 364 1 151 2 50 1 103 1 11 1 12 1 317 1 107 1 225 1 320 1 349 1 321 1 137 1 233 1 264 1 59 1 86 1 269 1 122 3 305 1 360 1 125 1 238 1 41 1 
245 1 246 1 95 1 247 1 337 2 151 8 153 4 52 4 12 9 156 1 346 1 260 1 264 4 353 1 59 7 119 1 122 57 121 1 125 8 214 2 62 2 67 30 69 1 311 11 364 4 71 1 280 1 27 1 315 2 30 2 222 4 186 1 371 1 226 1 225 4 35 2 321 8 233 9 137 27 85 1 86 8 141 1 92 1 41 4 
62 1 245 1 246 1 247 1 67 14 311 3 337 2 364 3 151 6 153 4 280 2 52 2 30 1 12 3 222 2 371 1 346 2 225 3 226 1 35 2 321 3 233 2 137 12 353 1 264 3 59 2 85 1 119 1 86 2 122 26 141 1 125 3 92 1 41 3 
245 1 246 1 247 1 337 2 151 8 153 4 52 5 12 9 156 2 346 1 260 2 264 4 353 1 59 7 119 1 122 64 121 2 125 7 126 1 214 2 62 3 67 33 69 2 311 12 364 4 71 2 280 2 27 2 315 2 30 1 222 5 186 1 371 1 226 1 225 4 35 3 321 7 233 9 137 31 85 1 86 9 141 1 92 1 41 4 
62 2 214 2 245 1 246 1 247 1 67 28 69 1 311 9 337 2 364 4 151 8 71 1 153 4 280 1 27 1 315 2 52 4 30 1 12 8 156 1 222 4 186 1 371 1 346 1 35 2 225 4 226 1 321 7 260 1 137 25 233 7 353 1 264 4 59 6 85 1 119 1 86 7 121 1 122 53 141 1 125 7 92 1 41 4 
62 1 214 2 245 1 246 1 247 1 67 27 69 1 311 8 337 1 364 2 151 4 71 1 153 4 280 1 27 1 315 2 52 4 30 1 12 8 156 1 222 4 371 1 346 1 35 2 225 2 226 1 321 7 260 1 137 25 233 7 353 1 264 2 59 7 85 1 119 1 86 8 121 1 122 52 141 1 125 7 92 1 41 2 
51 1 356 1 209 1 284 1 332 1 333 1 188 1 336 1 81 1 263 1 
318 1 251 1 
356 1 209 1 284 1 332 1 378 1 54 1 81 1 300 1 263 1 
330 1 332 1 284 1 158 1 80 1 319 1 24 1 188 1 336 1 163 1 81 1 263 1 51 1 209 1 356 1 90 1 270 1 144 2 
330 1 332 1 284 1 158 1 80 1 319 1 24 1 188 1 336 1 163 1 81 1 263 1 51 1 209 1 356 1 90 1 270 1 144 2 
330 1 332 1 284 1 158 1 80 1 319 1 24 1 188 1 336 1 163 1 81 1 263 1 51 1 209 1 356 1 90 1 270 1 144 2 
267 1 161 1 83 1 
267 1 161 1 83 1 
327 1 312 1 
327 1 83 1 312 1 
113 1 99 1 
93 1 332 1 24 1 65 2 99 1 103 2 199 1 251 1 76 1 132 1 284 1 369 1 107 2 158 1 318 1 159 1 80 1 320 2 163 1 81 1 113 1 263 1 189 1 356 1 209 1 144 1 238 2 
267 1 161 1 
327 1 83 1 312 1 
242 1 243 1 0 1 276 1 3 2 64 1 65 2 67 1 177 1 6 1 364 1 128 1 151 2 103 2 105 2 182 1 368 1 317 1 370 2 107 2 225 1 349 1 262 1 137 1 138 2 264 1 211 1 122 2 360 1 143 1 41 1 
242 1 370 1 256 1 148 1 3 1 64 1 374 1 149 1 177 1 136 1 138 1 118 1 171 1 368 1 
370 1 43 1 294 1 148 1 3 1 347 1 374 1 64 1 177 1 57 1 150 1 351 2 232 1 138 1 377 1 180 1 379 1 32 1 
370 2 43 1 294 1 148 1 286 1 3 2 347 1 64 1 374 1 177 1 57 1 150 1 351 2 232 1 138 2 377 1 180 1 379 1 32 1 
370 1 294 1 3 1 347 1 374 1 64 1 57 1 177 1 150 1 351 2 232 1 138 1 377 1 165 1 180 1 379 1 32 1 
367 1 
187 1 78 1 285 1 96 1 46 1 112 1 268 1 90 1 146 1 343 1 
42 5 187 5 285 5 321 2 133 1 101 10 59 2 86 2 316 1 89 5 90 5 12 2 125 2 212 5 
78 1 331 1 158 1 190 1 90 1 163 1 
242 1 331 2 3 4 64 1 96 2 149 2 46 2 25 1 296 2 177 1 10 2 343 2 282 2 283 1 368 1 187 2 370 4 256 1 158 3 285 2 375 1 163 3 376 1 138 4 266 1 190 4 171 1 146 1 240 1 
78 1 187 1 268 1 285 1 373 1 90 1 112 1 
331 1 96 1 46 1 101 1 218 1 343 1 187 1 78 1 158 1 285 1 348 1 163 1 19 1 190 1 90 2 212 1 146 1 
242 10 42 6 331 3 3 3 96 4 149 1 248 2 46 4 296 1 298 2 101 12 198 3 154 1 10 1 155 2 252 2 12 2 201 2 343 4 108 2 158 5 259 3 112 1 163 5 17 2 59 2 268 1 212 6 125 2 213 1 64 3 25 1 177 4 316 2 221 2 184 1 282 2 368 3 78 2 187 8 370 3 286 1 285 9 321 2 133 2 138 3 86 2 190 5 89 6 90 8 328 2 145 1 146 4 
42 5 331 1 245 1 96 2 247 1 309 1 46 2 296 1 101 6 314 1 52 1 316 1 12 2 282 1 343 2 222 1 187 5 78 2 371 1 158 1 285 8 35 1 321 2 163 1 164 2 59 2 85 1 86 2 190 1 141 1 89 5 90 5 212 3 125 2 146 2 
96 1 46 1 65 1 69 1 5 1 366 1 103 1 340 1 27 1 316 1 12 2 343 1 187 2 107 1 158 1 285 2 320 1 14 1 164 2 163 1 86 1 121 1 269 1 272 1 238 1 146 1 39 1 274 1 
242 1 276 1 3 1 64 1 149 1 65 2 177 1 364 1 151 2 8 1 103 3 340 1 31 1 368 1 13 1 370 1 107 3 159 1 225 1 320 2 259 1 349 1 116 1 137 1 138 1 264 1 166 1 122 1 269 2 360 1 238 2 41 1 
42 2 187 2 78 2 285 1 96 1 46 1 296 1 101 4 89 2 90 4 156 1 212 2 146 1 343 1 282 1 
51 1 356 1 239 1 99 1 263 1 
356 1 172 1 263 1 
356 1 172 1 263 1 
356 1 172 1 263 1 
356 1 363 1 263 1 
356 1 363 1 263 1 
356 1 363 1 263 1 
356 1 263 1 
209 1 284 1 
62 3 246 1 225 1 67 5 69 2 311 5 364 1 151 2 233 2 137 5 264 1 27 1 86 2 121 2 122 10 12 2 272 1 41 1 
246 1 225 1 67 2 311 1 364 1 151 2 233 1 264 1 122 2 12 1 125 1 41 1 
246 1 225 1 321 1 67 2 311 1 364 1 137 2 151 2 233 1 264 1 59 1 86 1 122 4 12 1 125 1 41 1 
186 1 62 1 246 1 225 3 67 1 69 1 311 2 70 1 337 1 364 3 137 2 151 6 233 1 264 3 122 3 121 1 41 3 
62 4 214 1 246 1 67 20 69 3 311 11 70 1 337 2 364 5 151 10 71 1 27 2 52 4 315 1 12 6 156 1 342 1 222 4 186 1 35 1 225 5 321 4 260 1 137 21 233 7 264 5 59 4 86 6 121 3 325 1 122 41 124 1 38 1 125 4 41 5 
62 2 246 1 67 4 69 1 311 2 364 1 151 2 71 1 27 1 52 1 12 1 156 1 222 1 35 1 225 1 260 1 137 4 264 1 85 1 86 1 122 8 121 1 41 1 
62 2 214 1 246 1 67 6 69 1 311 3 364 2 151 4 71 1 27 1 52 2 12 2 156 1 222 1 35 1 225 2 321 1 260 1 137 5 233 1 264 2 85 1 86 1 121 1 122 11 124 1 125 1 41 2 
62 3 245 1 246 1 247 1 67 9 69 1 311 4 364 3 337 1 151 6 71 1 27 1 52 1 12 3 156 1 222 1 371 1 35 1 225 3 321 2 260 1 233 1 137 10 264 3 59 2 85 1 86 3 121 1 122 19 141 1 124 1 125 2 41 3 
62 2 245 1 246 1 247 1 67 10 69 1 311 4 337 1 364 3 151 6 71 1 27 1 52 1 12 3 156 1 222 1 371 1 35 1 225 3 321 2 260 1 137 7 233 2 264 3 59 1 85 1 86 2 121 1 122 17 141 1 124 1 125 2 41 3 
62 2 246 1 67 4 69 1 311 2 364 1 151 2 71 1 27 1 52 1 12 1 156 1 222 1 35 1 225 1 260 1 137 4 264 1 85 1 86 1 122 8 121 1 41 1 
245 1 246 1 247 1 67 6 311 1 364 1 151 2 52 1 12 2 222 1 371 1 35 1 225 1 321 2 137 6 233 1 264 1 59 2 85 1 86 2 122 12 141 1 125 2 41 1 
62 3 245 1 246 1 247 1 67 10 69 1 311 5 364 4 337 2 151 8 71 1 27 1 52 1 12 3 156 1 222 1 371 1 35 1 225 4 321 2 260 1 233 2 137 8 264 4 59 1 85 1 86 2 121 1 122 18 141 1 124 1 125 2 41 4 
245 1 246 1 247 1 67 7 311 2 337 1 364 3 151 6 52 1 12 2 222 1 186 1 371 1 35 1 225 3 321 2 137 4 233 2 264 3 59 1 85 1 86 1 122 11 141 1 125 2 41 3 
62 3 67 3 69 3 311 6 260 1 137 4 233 3 71 2 86 1 27 1 122 7 121 3 12 1 
62 3 245 1 246 1 247 1 67 10 69 1 311 4 364 4 337 2 151 8 71 1 27 1 52 1 12 3 156 1 222 1 186 1 371 1 35 1 225 4 321 2 260 1 233 1 137 8 264 4 59 1 85 1 86 2 121 1 122 18 141 1 125 2 41 4 
62 2 225 2 67 4 69 1 311 3 260 1 364 2 337 1 137 4 233 1 151 4 264 2 71 1 86 1 27 1 122 8 121 1 12 1 156 1 41 2 
62 2 373 1 67 3 69 1 311 2 260 1 137 3 71 1 27 1 86 1 121 1 122 6 12 1 156 1 
225 1 321 1 67 2 364 1 137 2 151 2 264 1 59 1 86 1 122 4 124 1 12 1 125 1 41 1 
214 1 35 1 321 2 67 6 311 2 137 6 233 2 59 2 86 2 315 1 52 2 122 12 12 2 125 2 222 2 
62 5 214 1 67 14 69 4 311 10 70 1 337 2 364 2 151 4 71 1 27 2 52 2 315 1 12 4 156 1 222 2 109 1 225 2 321 2 260 1 233 5 137 16 264 2 59 2 86 4 121 4 122 30 272 1 125 2 41 2 
122 1 52 1 137 1 
122 1 67 1 222 1 
225 1 321 1 133 1 67 3 311 1 364 1 151 2 137 3 233 1 264 1 59 1 86 1 122 6 124 1 12 1 125 1 41 1 
245 1 246 1 247 1 67 6 311 1 364 1 151 2 52 1 12 2 222 1 371 1 35 1 225 1 321 2 137 6 233 1 264 1 59 2 85 1 86 2 122 12 141 1 125 2 41 1 
62 1 67 3 69 1 311 2 137 3 233 1 27 1 86 1 122 6 121 1 12 1 
62 1 225 1 67 1 69 1 311 2 70 1 260 1 337 1 364 1 233 1 137 2 151 2 264 1 71 1 121 1 122 3 41 1 
208 1 103 1 107 1 159 1 224 1 295 1 65 1 
1 1 107 1 159 1 224 1 160 1 175 1 295 1 65 1 82 1 208 1 103 1 359 1 
242 1 370 4 256 1 286 1 3 4 64 1 149 1 177 1 152 1 138 4 237 1 171 1 368 1 
242 1 194 1 370 2 195 1 362 1 3 2 64 1 259 1 334 1 177 2 138 2 10 1 241 1 368 1 
138 1 370 1 294 1 3 1 64 1 149 1 177 1 57 1 351 1 232 1 
242 1 243 1 370 2 286 1 3 2 64 1 177 1 262 1 138 2 377 1 368 1 
242 3 243 1 256 1 370 5 286 1 3 4 64 2 149 1 177 2 152 1 138 5 10 1 37 1 219 1 171 1 368 2 
242 3 243 1 256 1 370 5 286 1 3 4 64 2 149 1 177 2 152 1 138 5 129 1 10 1 219 1 171 1 368 2 
242 1 138 1 256 1 370 1 373 1 3 1 64 1 149 1 171 1 177 1 368 1 
242 1 13 1 107 2 370 1 159 1 3 1 64 1 259 1 320 1 149 1 65 1 335 1 177 1 138 1 166 1 103 2 238 1 368 1 
242 3 13 1 107 1 370 1 3 1 64 1 259 2 320 1 65 1 335 1 177 1 298 1 138 1 166 1 103 1 10 1 252 1 238 1 368 2 
242 3 13 1 107 1 370 1 3 1 64 1 259 2 320 1 65 1 335 1 177 1 298 1 138 1 265 1 103 1 10 1 252 1 238 1 368 2 
242 4 3 3 64 1 248 1 149 1 177 1 298 1 198 1 10 1 252 1 368 1 78 1 33 1 370 3 158 2 259 1 15 1 163 2 17 1 138 3 190 1 237 1 90 1 
242 4 78 1 370 3 158 2 3 3 64 1 149 1 248 1 259 1 177 1 163 2 298 1 17 1 138 3 198 1 10 1 155 1 190 1 237 1 90 1 252 1 368 1 
138 1 370 1 279 1 3 1 64 1 177 1 
242 3 243 1 370 7 286 1 362 1 3 6 64 2 149 2 259 1 334 1 177 3 138 7 377 1 279 1 105 1 37 1 20 1 219 1 191 1 145 1 368 2 
242 1 244 1 3 1 97 1 335 1 151 4 50 1 103 2 11 1 12 1 156 1 13 1 107 2 159 2 349 2 259 1 260 1 116 1 166 1 264 2 121 1 122 6 360 2 62 2 63 1 64 1 65 1 67 3 69 1 177 1 311 2 364 2 71 1 27 1 31 1 368 1 317 1 370 1 286 1 225 2 320 1 137 3 138 1 86 1 143 1 238 1 41 2 
242 2 93 1 331 1 3 1 149 1 96 2 248 1 46 2 25 1 198 1 155 1 221 1 201 1 343 2 78 1 187 1 370 1 108 1 158 3 285 1 112 1 163 3 17 1 138 1 268 1 190 2 90 1 146 2 
242 2 370 2 286 1 3 2 64 1 259 1 177 2 17 1 138 2 279 1 213 1 145 1 368 1 
242 1 13 1 107 2 370 1 159 1 3 1 64 1 259 1 320 1 149 1 65 1 335 1 177 1 138 1 265 1 103 2 238 1 368 1 
242 1 370 1 362 1 3 1 64 1 259 1 334 1 177 2 138 1 10 1 191 1 145 1 368 1 
159 1 28 1 230 1 254 1 185 1 
78 1 93 1 302 1 158 2 159 1 308 1 258 1 248 1 45 1 163 2 288 1 230 2 278 1 249 1 28 2 90 1 39 1 185 1 254 2 
107 1 65 1 6 1 128 1 103 1 28 1 182 1 254 1 185 1 
45 1 288 1 185 1 
84 1 323 1 250 1 217 1 220 1 131 1 176 1 297 1 
2 1 47 1 176 3 16 1 56 1 297 1 299 1 304 1 84 2 117 2 323 4 250 2 217 1 131 4 
176 1 297 1 84 1 117 1 323 2 217 1 250 1 140 1 220 1 271 1 131 2 273 1 
2 2 176 1 297 1 304 1 299 2 84 1 323 3 217 1 250 1 220 1 131 3 361 1 
61 1 127 1 202 2 176 2 
323 1 235 1 217 1 220 1 131 1 297 1 
84 1 117 1 323 2 250 1 23 1 217 1 220 1 131 2 176 1 297 1 
142 1 
84 1 323 1 250 1 217 1 220 1 131 1 176 1 297 1 
84 1 250 1 373 1 176 1 
84 1 323 1 250 1 217 1 131 1 176 1 297 1 
323 1 281 1 49 1 
2 2 176 1 297 1 304 1 299 1 84 1 323 3 217 1 250 1 60 1 220 1 131 3 
84 1 117 1 354 1 323 2 250 1 217 1 131 2 176 1 297 1 
176 1 56 1 297 1 351 1 232 1 323 1 217 1 72 1 220 1 379 1 131 1 
84 1 323 1 217 1 220 1 131 1 176 1 297 1 
84 2 323 1 250 1 217 1 220 1 131 1 297 1 
176 1 297 2 322 1 84 1 178 1 323 2 217 2 18 1 220 1 131 2 
23 1 47 1 176 2 56 1 297 1 84 1 117 2 323 3 250 1 217 1 73 1 220 1 131 3 
294 1 176 1 297 1 351 2 232 1 84 1 117 1 323 2 250 1 217 1 220 1 88 1 379 1 131 2 32 1 
47 1 176 2 56 1 297 2 84 1 117 2 354 1 323 4 250 1 217 2 324 1 220 1 131 4 
23 1 2 1 176 1 297 1 117 1 84 1 323 3 217 1 250 1 220 1 131 3 
176 1 47 1 16 1 56 1 
84 1 176 1 

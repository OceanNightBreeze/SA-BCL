#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) (240,259) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) 73 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (18,44,268,322) (240,259) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (18,44,268,322) (18,44,268,322) (240,259) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
89 1 187 1 213 1 323 1 164 1 33 1 247 1 137 1 149 1 230 1 107 1 184 1 64 1 121 1 
105 1 
203 1 172 1 213 2 323 1 243 1 81 1 149 2 105 1 
203 1 297 1 146 1 47 1 102 1 243 2 149 5 105 1 172 1 111 1 26 1 323 2 213 5 196 1 267 1 199 2 38 2 88 2 333 1 
203 1 32 1 105 1 
170 1 316 2 105 1 
89 2 163 1 187 2 164 2 33 2 137 2 230 1 64 2 
89 3 296 1 187 3 189 2 103 1 230 1 154 1 263 1 10 2 307 2 56 1 308 1 266 1 115 1 156 1 15 1 60 1 159 1 64 2 160 1 66 1 163 1 205 1 239 1 164 2 126 1 23 1 290 1 33 2 292 1 328 2 137 2 138 1 82 2 144 1 332 1 251 1 
89 1 187 1 164 1 33 1 247 1 137 1 230 1 107 1 64 1 121 1 
203 1 89 1 227 1 187 1 164 1 20 1 149 1 105 1 191 1 306 1 213 1 179 1 247 1 250 1 
203 1 89 1 187 1 164 1 149 2 105 1 191 1 306 1 213 2 33 1 179 1 247 1 137 1 250 1 64 1 
213 1 323 1 243 1 149 1 22 1 
203 1 172 1 213 2 323 1 181 1 243 1 149 2 105 1 
213 1 243 1 149 1 
89 2 187 2 163 2 164 2 282 1 33 1 137 1 86 1 64 1 
175 1 0 1 272 1 
89 1 163 1 187 1 205 1 239 1 189 1 103 1 169 1 23 1 10 1 156 1 328 1 138 1 332 1 251 1 66 1 
89 2 255 1 205 1 187 2 239 1 164 1 0 1 189 1 103 1 23 1 10 1 33 1 156 1 328 1 137 1 330 1 138 1 66 1 251 1 332 1 
163 1 32 1 
89 5 255 2 91 1 227 1 187 5 163 1 164 5 208 1 282 1 261 1 33 4 137 4 330 1 64 1 
89 2 187 2 164 2 33 2 247 1 137 2 104 1 121 1 
89 3 255 1 163 1 187 3 164 3 33 3 137 3 64 1 
89 1 187 1 164 1 33 1 247 1 137 1 121 1 
89 1 187 1 164 1 33 1 247 1 137 1 282 1 86 1 64 1 
89 4 296 1 255 1 187 4 189 1 103 1 149 1 191 1 230 1 263 1 306 1 10 1 307 2 266 1 115 1 156 1 15 1 60 1 159 1 64 2 160 1 66 1 123 1 163 1 205 1 239 1 164 3 126 1 282 1 23 1 213 1 290 1 33 3 177 1 179 1 247 1 328 1 137 3 138 1 330 1 82 1 250 1 251 1 332 1 
89 2 255 1 163 1 227 1 187 2 164 2 33 1 208 1 137 1 
89 3 255 2 123 1 187 3 164 3 282 1 149 1 105 1 191 1 306 1 213 1 33 3 247 1 180 1 179 1 137 3 330 1 250 1 64 1 
89 2 255 1 187 2 175 1 164 2 33 2 0 1 137 2 282 1 64 1 
89 1 163 1 187 1 205 1 239 1 189 1 103 1 23 1 10 1 156 1 328 1 138 1 332 1 251 1 66 1 
89 1 163 1 187 1 205 1 239 1 189 1 103 1 23 1 10 1 136 1 156 1 328 1 251 1 66 1 334 1 
0 2 258 1 155 1 263 1 307 2 114 1 266 2 60 1 159 1 65 1 160 1 272 2 274 1 126 1 278 1 173 1 290 1 175 2 292 2 291 1 215 1 82 4 219 1 294 1 
89 1 187 1 164 1 33 1 247 1 179 1 137 1 104 1 
131 1 48 1 210 1 
253 1 212 1 246 1 131 2 300 1 48 2 
131 1 48 1 
131 1 48 1 
253 1 246 1 
253 1 246 1 
253 1 246 1 
131 1 134 1 48 1 
131 1 134 1 48 1 
131 1 134 1 48 1 
131 1 100 1 48 1 
131 1 100 1 48 1 
131 1 100 1 48 1 
89 2 187 2 92 1 48 1 2 1 149 1 3 1 304 1 53 1 62 1 163 1 164 2 245 1 210 1 131 1 213 1 33 2 325 1 137 2 80 1 293 1 183 1 84 1 295 1 
300 1 2 2 48 2 149 2 152 1 105 1 304 3 287 1 131 2 213 2 194 1 324 2 79 1 218 1 80 1 84 2 183 2 62 2 220 1 
25 2 226 2 30 1 142 1 54 1 
226 1 106 1 142 1 
226 1 30 1 106 1 
25 1 226 3 30 1 98 1 142 2 54 1 
25 1 226 2 30 1 147 1 142 1 54 1 
92 1 258 1 102 3 149 5 105 2 3 1 109 1 110 1 114 1 267 2 59 1 199 1 117 1 161 1 237 1 274 1 203 1 316 3 318 2 243 1 245 1 170 1 173 1 172 1 24 1 133 2 26 1 213 5 323 4 88 1 38 1 39 2 
90 5 258 3 302 1 102 8 149 9 3 4 105 5 193 1 110 3 114 3 267 6 199 2 117 2 237 1 274 3 203 1 316 9 318 6 279 1 128 1 243 6 286 1 22 5 170 3 173 3 172 1 24 2 133 6 213 9 323 7 26 1 216 1 38 2 88 2 333 1 
258 1 102 3 149 3 105 3 3 1 110 1 114 1 59 1 267 2 199 1 117 1 161 1 203 1 274 1 316 4 318 2 170 2 173 1 24 1 323 2 213 3 133 2 88 1 38 1 39 1 333 1 
258 2 102 5 149 4 105 4 3 2 110 2 114 2 59 1 267 4 199 1 117 1 161 1 203 1 274 2 316 7 318 4 279 1 128 1 286 1 170 3 173 2 24 1 133 4 213 4 323 3 88 1 38 1 39 2 333 1 
192 1 
239 1 32 1 202 1 
188 1 239 1 
239 1 103 1 66 1 
239 1 52 1 
239 1 66 1 
239 3 157 1 103 1 231 1 66 1 202 2 
274 1 162 1 45 1 70 1 229 1 155 2 76 1 114 1 176 1 266 3 292 4 326 1 140 1 82 7 294 3 221 1 273 1 40 2 
112 1 176 2 292 1 70 1 82 1 40 1 
229 1 305 1 155 3 307 4 114 1 57 1 266 4 14 1 60 2 159 2 160 2 273 1 274 1 162 1 126 2 70 1 76 1 176 1 292 5 140 1 82 9 294 4 221 1 40 2 
274 1 162 1 70 1 229 1 155 2 76 1 114 1 176 1 266 3 292 4 326 1 140 1 82 7 294 3 221 1 273 1 40 2 
274 1 162 1 70 1 229 1 155 2 76 1 114 1 176 1 266 3 292 4 326 1 140 1 82 7 294 3 221 1 273 1 40 2 
18 1 322 1 46 1 268 1 259 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 73 1 
18 1 322 1 46 1 268 1 259 1 
18 1 44 1 46 1 240 1 
4 1 
89 1 187 1 257 1 93 4 101 1 102 2 189 2 105 2 191 1 10 2 11 2 197 1 267 2 117 1 199 1 201 1 120 1 203 1 275 2 125 1 280 1 20 1 23 1 132 2 213 5 26 1 31 2 141 1 38 1 41 1 227 1 301 1 149 5 55 2 306 1 234 1 156 2 66 1 315 1 68 1 239 1 164 1 316 2 243 6 170 2 172 3 77 2 328 2 179 1 247 1 329 1 248 2 250 1 88 1 251 1 
89 1 125 1 227 1 187 1 93 2 164 1 101 1 280 1 20 1 243 2 149 3 191 1 172 1 306 1 213 3 11 1 234 1 247 1 179 1 329 1 81 1 250 1 
203 1 89 1 125 1 227 1 187 1 93 3 164 1 101 1 280 1 20 1 243 1 149 3 105 1 191 1 172 1 306 1 213 3 234 1 247 1 179 1 329 1 248 1 81 1 250 1 
89 1 187 1 227 1 93 3 101 1 149 3 191 1 105 1 55 1 306 1 11 1 234 1 203 1 125 1 164 1 280 1 20 1 243 2 172 1 213 3 179 1 247 1 329 1 248 1 81 1 250 1 
89 1 187 1 93 6 257 1 99 1 101 1 102 1 191 1 105 5 11 4 267 1 198 1 199 1 16 1 203 5 275 2 125 1 280 1 20 1 213 5 26 1 132 2 31 2 141 1 37 1 38 1 145 1 227 1 149 5 55 4 306 1 234 1 164 1 243 7 170 2 172 3 77 2 247 1 179 1 329 1 248 4 81 1 250 1 88 1 
89 1 187 1 93 4 257 1 101 1 102 1 191 1 105 2 11 2 197 1 267 1 199 1 203 1 275 2 125 1 280 1 20 1 213 4 26 1 132 2 31 2 141 1 38 1 227 1 149 4 55 2 306 1 234 1 164 1 316 2 243 4 170 2 172 2 77 2 247 1 179 1 329 1 248 2 250 1 88 1 
89 1 187 1 227 1 257 1 93 4 101 1 102 1 149 4 105 1 191 1 55 2 306 1 11 2 234 1 267 1 199 1 198 1 16 1 203 1 275 2 125 1 164 1 280 1 20 1 243 4 170 2 172 2 132 2 213 4 26 1 77 2 31 2 179 1 247 1 329 1 248 2 141 1 37 1 250 1 38 1 88 1 
89 1 187 1 227 1 257 1 93 4 101 1 102 1 149 4 105 1 191 1 55 2 306 1 11 2 234 1 267 1 199 1 198 1 16 1 203 1 275 2 125 1 164 1 280 1 20 1 243 4 170 2 172 2 132 2 213 4 26 1 77 2 31 2 179 1 247 1 329 1 248 2 141 1 37 1 250 1 38 1 88 1 
89 1 187 1 227 1 299 2 257 1 93 4 101 1 102 1 149 4 105 1 191 1 153 1 55 2 306 1 11 2 234 1 267 1 199 1 16 1 203 1 125 1 165 1 164 1 316 2 277 2 280 1 20 1 243 4 244 1 172 2 132 2 213 4 26 1 31 2 179 1 247 1 329 1 248 2 250 1 38 1 88 1 
89 1 187 1 227 1 257 1 93 5 99 1 101 1 102 1 149 4 105 1 191 1 55 3 306 1 11 3 234 1 267 1 199 1 198 1 16 1 203 1 275 2 125 1 164 1 280 1 20 1 243 5 170 2 172 2 132 2 26 1 213 4 77 2 31 2 179 1 247 1 329 1 248 3 141 1 37 1 250 1 88 1 38 1 
89 1 187 1 227 1 257 1 93 5 99 1 101 1 102 1 149 4 105 1 191 1 55 3 306 1 11 3 234 1 267 1 199 1 198 1 16 1 203 1 275 2 125 1 164 1 280 1 20 1 243 5 170 2 172 2 132 2 26 1 213 4 77 2 31 2 179 1 247 1 329 1 248 3 141 1 37 1 250 1 88 1 38 1 
89 1 227 1 187 1 299 2 257 1 93 4 101 1 102 1 149 4 105 1 191 1 55 2 306 1 11 2 234 1 197 1 267 1 199 1 203 1 125 1 164 1 165 1 316 2 277 2 280 1 20 1 243 4 172 2 132 2 26 1 213 4 31 2 179 1 247 1 329 1 248 2 250 1 88 1 38 1 
89 1 41 1 255 1 187 1 301 1 189 8 151 1 233 1 10 7 263 2 307 4 265 1 308 1 156 2 115 1 266 1 235 1 60 2 118 1 159 2 160 2 66 2 164 1 239 3 126 2 278 1 23 2 28 1 289 1 290 2 33 1 327 1 292 1 328 8 137 1 82 2 251 2 185 1 144 2 
89 1 187 1 0 1 258 1 155 1 110 1 263 1 307 2 114 1 266 2 60 1 64 1 159 1 272 1 160 1 274 1 164 1 126 1 167 1 282 1 173 1 175 1 290 1 33 1 292 1 217 1 137 1 82 3 294 1 
0 1 155 2 263 1 307 2 114 1 266 3 60 1 159 1 160 1 272 1 273 1 274 1 162 1 163 2 126 1 278 1 76 1 175 1 290 1 32 1 292 3 140 1 82 6 294 2 221 1 40 1 
186 3 95 3 0 11 258 2 229 1 262 1 155 1 110 2 263 2 307 4 114 2 308 1 115 1 266 6 60 2 159 2 160 2 272 11 122 1 274 1 124 1 163 1 69 1 126 2 71 1 173 1 290 1 175 4 292 8 217 1 182 1 82 14 294 2 
89 2 255 1 254 1 187 2 189 1 103 1 10 1 263 1 307 2 308 1 156 1 115 1 266 1 60 1 159 1 66 1 160 1 163 1 205 1 239 1 164 1 126 1 169 1 23 1 175 1 290 1 33 1 292 1 328 1 217 1 137 1 138 1 330 1 82 2 36 1 251 1 332 1 143 1 
89 3 255 1 187 3 0 7 258 2 189 3 103 2 5 1 110 2 10 3 263 3 114 3 266 10 115 1 15 2 272 7 273 1 274 3 204 2 205 2 126 3 23 2 28 1 290 3 33 1 292 10 217 1 137 1 138 2 140 1 294 8 221 1 40 1 229 4 155 4 307 6 308 1 156 1 60 3 159 3 160 3 66 2 314 2 163 2 162 1 238 1 164 1 166 2 239 2 317 2 173 2 75 1 76 1 175 7 328 3 330 1 82 20 332 2 251 2 
0 1 126 1 258 1 278 1 229 1 263 1 307 2 175 1 290 1 114 1 292 2 60 1 82 2 219 1 294 1 159 1 272 1 160 1 
274 1 0 1 126 1 278 1 155 1 263 1 173 1 307 2 175 1 290 1 291 1 266 2 60 1 82 2 294 1 159 1 272 1 160 1 
0 2 258 1 229 1 110 1 155 1 263 1 307 2 114 1 266 2 60 1 159 1 160 1 272 2 274 1 126 1 278 1 173 1 290 1 175 2 292 2 82 4 294 2 
0 1 126 1 258 1 229 1 263 1 307 2 175 1 290 1 114 1 292 2 60 1 82 2 219 1 294 1 159 1 272 1 185 1 160 1 
274 1 0 1 126 1 155 1 263 1 173 1 307 2 175 1 290 1 291 1 266 2 60 1 82 2 294 1 159 1 272 1 185 1 160 1 
0 2 258 1 229 1 110 1 155 1 263 1 307 2 114 1 266 2 60 1 159 1 160 1 272 2 274 1 126 1 173 1 290 1 175 2 292 2 82 4 294 2 185 1 
0 2 258 1 229 1 110 1 155 1 263 1 307 2 114 1 266 2 60 1 159 1 160 1 272 2 274 1 126 1 173 1 290 1 175 2 292 2 82 4 294 2 
89 1 187 1 189 1 103 1 10 1 263 1 307 2 308 1 156 1 115 1 266 1 15 1 60 1 159 1 66 1 160 1 163 1 205 1 239 1 126 1 23 1 290 1 292 1 328 1 138 1 82 2 251 1 332 1 
89 1 187 1 189 1 103 1 10 1 263 1 307 2 308 1 156 1 115 1 266 1 60 1 159 1 66 1 160 1 163 1 205 1 239 1 126 1 288 1 23 1 136 1 290 1 292 1 328 1 82 2 251 1 334 1 
0 2 258 1 229 1 110 1 155 1 263 1 307 2 114 1 266 2 60 1 159 1 160 1 272 2 274 1 126 1 173 1 290 1 175 2 292 2 217 1 82 4 294 2 
89 1 187 1 0 2 258 1 189 1 103 1 229 1 155 1 110 1 10 1 263 1 307 2 114 1 266 2 235 1 15 1 60 1 159 1 272 2 66 1 160 1 274 1 205 1 166 1 239 1 126 1 23 1 173 1 175 2 290 1 292 2 328 1 138 1 82 4 294 2 251 1 332 1 
89 1 187 1 0 1 258 1 229 1 110 1 263 1 307 2 114 1 266 1 60 1 64 1 159 1 160 1 272 1 274 1 164 1 126 1 282 1 74 1 173 1 290 1 175 1 33 1 292 2 217 1 137 1 82 3 294 1 
222 1 186 1 95 2 258 3 228 1 229 3 262 1 155 3 110 3 113 1 307 4 114 3 58 1 57 1 266 10 60 2 159 2 160 2 274 3 276 1 126 2 71 1 209 1 173 3 29 1 292 9 78 2 331 2 82 19 294 6 
222 1 186 2 95 2 258 3 228 1 229 2 262 2 6 1 7 1 155 2 110 3 307 6 114 3 58 2 57 1 14 2 266 12 236 1 60 3 159 3 160 3 274 2 207 1 276 2 126 3 281 1 173 2 29 1 135 1 292 14 78 4 331 1 82 26 294 4 
186 3 95 4 258 4 262 3 7 1 6 1 110 4 114 5 266 21 14 1 273 1 274 5 207 1 126 3 276 1 281 1 209 1 27 1 135 1 29 1 292 20 140 1 294 8 221 1 40 1 222 1 228 1 229 4 155 4 307 6 57 1 58 2 236 1 60 3 159 3 160 3 162 1 71 1 173 4 76 1 78 4 331 1 82 41 
222 1 186 3 95 4 258 4 228 1 229 3 262 3 6 1 7 1 155 4 110 4 307 8 114 5 58 2 57 1 14 2 266 18 236 1 60 4 159 4 160 4 273 1 274 4 162 1 207 1 276 1 126 4 281 1 71 1 209 1 173 3 27 1 76 1 29 1 135 1 292 20 78 4 331 1 140 1 82 38 294 7 221 1 40 1 
222 1 186 4 95 4 258 7 228 1 229 7 262 2 6 1 7 1 155 7 110 7 307 4 114 8 58 1 57 1 14 1 266 25 236 1 60 2 159 2 160 2 273 1 274 8 124 2 162 1 207 1 276 1 126 2 281 1 71 2 173 7 76 1 29 1 135 1 292 27 78 4 331 1 140 1 82 52 294 14 221 1 40 1 
9 1 131 1 300 1 79 1 218 1 48 1 2 1 62 1 183 1 84 1 
53 1 210 1 
224 1 131 1 320 1 48 1 2 1 62 1 183 1 84 1 252 1 
134 1 139 1 
212 1 100 1 242 1 
300 1 2 1 48 1 149 1 105 1 304 2 287 1 131 1 213 1 194 1 324 1 79 1 218 1 80 1 84 1 183 1 62 1 220 1 
300 1 2 1 48 1 149 1 105 1 304 2 287 1 131 1 213 1 194 1 324 1 79 1 218 1 80 1 84 1 183 1 62 1 220 1 
300 1 2 1 48 1 149 1 105 1 304 2 287 1 131 1 213 1 194 1 324 1 79 1 218 1 80 1 84 1 183 1 62 1 220 1 
212 1 134 1 139 1 
212 1 134 1 139 1 
100 1 242 1 
212 1 100 1 242 1 
325 1 293 1 
89 2 187 2 92 1 48 1 2 1 149 1 3 1 304 1 53 1 194 1 62 1 163 1 164 2 245 1 210 1 131 1 213 1 323 1 33 2 324 1 214 1 325 1 137 2 293 1 183 1 84 1 295 1 
89 2 223 1 187 2 189 2 151 1 263 1 10 2 307 2 265 1 309 1 308 1 115 1 266 1 311 1 60 1 270 1 159 1 66 1 160 1 239 1 164 2 126 1 168 1 23 1 290 1 292 1 328 2 217 1 82 2 251 1 144 2 
41 1 298 1 239 1 148 1 301 1 283 1 189 1 23 1 10 1 156 1 328 1 87 1 251 1 66 1 
42 1 226 2 67 1 98 1 19 1 148 1 283 1 189 1 284 1 106 1 51 1 23 1 10 1 30 1 28 1 328 1 142 1 251 1 
42 1 226 2 67 1 98 1 19 1 148 1 283 1 189 2 284 1 106 1 51 1 23 1 10 2 30 1 28 1 328 2 235 1 142 1 251 1 
42 1 226 2 67 1 98 1 19 1 283 1 189 1 106 1 51 1 23 1 10 1 30 1 28 1 13 1 328 1 142 1 251 1 
206 1 
203 1 146 1 47 1 102 1 105 1 26 1 267 1 199 1 38 1 88 1 
204 1 274 2 316 10 258 2 318 5 102 5 21 2 105 5 110 2 170 5 173 2 133 5 114 2 267 5 61 1 
203 1 172 1 213 1 243 1 149 1 105 1 
41 1 301 1 189 4 102 2 149 3 10 4 156 2 267 2 199 2 117 2 269 1 63 1 66 1 120 1 239 1 68 1 315 2 243 4 321 2 211 1 23 1 172 2 26 1 213 3 328 4 88 2 38 2 333 1 251 1 
203 1 146 1 32 1 267 1 47 1 102 1 105 1 
102 1 149 1 105 2 267 1 199 1 203 1 275 1 316 1 243 1 170 1 172 1 26 1 213 1 77 1 141 1 88 1 38 1 
188 3 1 2 258 2 102 9 189 3 103 3 105 8 110 2 10 3 114 2 267 8 117 2 199 4 269 1 17 2 202 2 203 2 204 2 274 2 21 2 130 1 23 3 26 4 213 5 133 6 38 4 225 2 146 1 47 1 149 5 49 2 52 2 232 2 156 1 235 1 312 1 157 1 61 2 313 1 66 3 315 1 239 10 316 12 318 6 319 2 243 5 321 1 170 6 172 3 173 2 328 3 250 2 88 4 251 4 
186 1 94 1 95 1 258 2 102 8 149 1 105 5 262 1 6 1 7 1 110 2 114 2 267 5 117 1 199 2 61 1 119 1 274 2 203 2 315 1 316 6 207 1 318 5 281 1 243 1 21 2 170 3 172 1 173 2 213 1 133 5 26 2 135 1 88 2 38 2 
89 1 187 1 102 2 149 1 107 1 230 1 114 2 267 2 199 1 198 1 61 1 158 1 64 1 121 1 273 1 274 1 162 1 164 1 21 2 26 1 213 1 33 1 247 1 137 1 140 1 184 1 88 1 38 1 
89 3 296 1 187 3 189 1 103 1 230 1 10 1 263 1 307 2 266 1 115 1 156 1 15 1 60 1 159 1 64 2 66 1 160 1 163 1 205 1 164 2 239 1 126 1 23 1 290 1 33 2 328 1 137 2 138 1 82 1 332 1 251 1 
203 2 315 1 316 4 318 2 102 1 105 4 170 2 133 2 26 1 267 2 199 1 117 1 38 1 88 1 40 1 
325 1 127 1 79 1 62 1 183 1 
310 1 62 1 183 1 
310 1 62 1 183 1 
310 1 62 1 183 1 
35 1 62 1 183 1 
35 1 62 1 183 1 
35 1 62 1 183 1 
62 1 183 1 
131 1 48 1 
274 2 162 2 126 1 229 2 155 3 307 2 114 2 57 1 292 5 266 5 60 1 140 1 82 10 158 1 294 5 159 1 160 1 273 2 
126 1 258 1 229 1 307 2 114 1 57 1 292 2 60 1 82 2 294 1 159 1 160 1 
274 1 126 1 258 1 229 1 155 1 110 1 173 1 307 2 114 1 57 1 266 2 292 2 60 1 82 4 294 2 159 1 160 1 
162 1 126 3 260 1 209 1 229 1 155 1 307 6 57 1 14 1 266 2 292 1 60 3 82 3 294 2 159 3 160 3 273 1 
186 3 95 4 258 3 260 1 229 5 262 1 8 1 110 3 155 7 307 10 114 5 57 1 14 2 266 18 60 5 271 1 159 5 160 5 273 3 274 5 162 3 126 5 241 1 71 1 285 1 209 1 173 3 76 1 292 16 140 2 82 34 294 12 221 1 40 1 
186 1 95 1 262 1 155 2 307 2 114 1 57 1 266 4 60 1 159 1 160 1 273 1 274 1 162 1 207 1 126 1 76 1 292 4 140 1 82 8 294 2 221 1 40 1 
186 1 95 2 258 1 229 1 262 1 155 2 110 1 307 4 114 2 57 1 266 5 60 2 159 2 160 2 273 1 274 1 162 1 207 1 126 2 241 1 71 1 76 1 292 6 140 1 82 11 294 3 221 1 40 1 
186 1 95 1 258 2 229 1 262 1 6 1 7 1 110 2 155 3 307 6 114 3 57 1 266 10 14 1 60 3 159 3 160 3 273 1 274 3 162 1 207 1 126 3 281 1 241 1 173 2 76 1 135 1 292 9 140 1 82 19 294 4 221 1 40 1 
186 1 95 1 258 2 229 2 262 1 7 1 6 1 110 2 155 3 307 6 114 3 57 1 14 1 266 7 60 3 159 3 160 3 273 1 274 2 162 1 207 1 126 3 281 1 241 1 173 1 76 1 135 1 292 10 140 1 82 17 294 5 221 1 40 1 
186 1 95 1 262 1 155 2 307 2 114 1 57 1 266 4 60 1 159 1 160 1 273 1 274 1 162 1 207 1 126 1 76 1 292 4 140 1 82 8 294 2 221 1 40 1 
186 1 95 1 258 2 229 1 262 1 7 1 6 1 110 2 155 1 307 2 114 2 57 1 266 6 60 1 159 1 160 1 274 2 207 1 126 1 281 1 173 2 135 1 292 6 82 12 294 2 
186 1 95 1 258 2 229 2 262 1 6 1 7 1 110 2 155 3 307 8 114 3 57 1 266 8 14 2 60 4 159 4 160 4 273 1 274 2 162 1 207 1 126 4 281 1 241 1 173 1 76 1 135 1 292 10 140 1 82 18 294 5 221 1 40 1 
186 1 95 1 258 3 229 3 262 1 6 1 7 1 110 3 155 3 307 8 114 3 57 1 266 7 14 2 60 4 159 4 160 4 274 2 207 1 126 4 281 1 209 1 173 2 135 1 292 9 82 16 294 6 
274 1 162 3 229 3 155 3 76 2 114 1 266 4 292 3 140 1 82 7 294 6 221 1 273 3 
186 1 95 1 258 2 229 1 262 1 6 1 7 1 110 2 155 3 307 8 114 3 57 1 266 8 14 2 60 4 159 4 160 4 273 1 274 2 162 1 207 1 126 4 281 1 209 1 173 1 76 1 135 1 292 10 140 1 82 18 294 4 221 1 40 1 
274 1 162 1 126 2 229 1 155 2 307 4 76 1 114 1 266 4 292 4 14 1 60 2 140 1 82 8 294 3 159 2 160 2 221 1 40 1 273 1 
274 1 162 1 155 2 76 1 114 1 32 1 266 3 292 3 140 1 82 6 294 2 221 1 40 1 273 1 
274 1 126 1 258 1 241 1 229 1 155 1 110 1 173 1 307 2 114 1 266 2 292 2 60 1 82 4 294 2 159 1 160 1 
274 1 186 1 95 2 258 1 71 1 229 1 262 1 155 1 110 1 173 1 114 1 266 4 292 3 82 7 294 2 
186 2 95 2 258 2 260 1 229 4 110 2 155 5 307 4 114 3 266 12 14 2 60 2 159 2 160 2 273 2 122 1 274 3 124 1 162 2 126 2 71 1 173 2 76 1 292 11 140 1 82 23 294 9 221 1 40 1 
95 1 266 1 82 1 
186 1 292 1 82 1 
204 1 274 1 126 1 258 1 241 1 229 1 110 1 155 2 173 1 307 2 114 1 266 3 292 3 60 1 82 6 294 3 159 1 160 1 
186 1 95 1 258 2 229 1 262 1 7 1 6 1 110 2 155 1 307 2 114 2 57 1 266 6 60 1 159 1 160 1 274 2 207 1 126 1 281 1 173 2 135 1 292 6 82 12 294 2 
274 1 162 1 229 1 155 1 114 1 292 3 266 3 140 1 82 6 294 2 273 1 
162 1 126 1 260 1 229 1 155 1 76 1 307 2 292 1 266 2 14 1 60 1 82 3 294 2 159 1 160 1 221 1 273 1 
89 1 174 1 163 1 187 1 227 1 164 1 208 1 
89 1 163 1 227 1 187 1 164 1 208 1 190 1 72 1 174 1 12 1 178 1 200 1 
41 1 239 1 301 1 189 4 23 1 10 4 156 1 328 4 235 1 34 1 85 1 251 1 66 1 
239 1 189 2 321 1 150 1 103 1 129 1 108 1 23 1 10 2 75 1 264 1 328 2 66 1 251 2 
23 1 10 1 226 1 30 1 156 1 328 1 189 1 106 1 51 1 251 1 
23 1 10 2 28 1 239 1 265 1 328 2 235 1 168 1 189 2 251 1 66 1 
41 1 239 3 301 1 189 5 321 1 23 2 233 1 10 4 265 1 156 1 327 1 328 5 235 1 34 1 66 2 251 2 
41 1 239 3 301 1 189 5 321 1 23 2 233 1 10 4 265 1 156 1 328 5 235 1 116 1 34 1 66 2 251 2 
23 1 41 1 10 1 239 1 32 1 156 1 328 1 301 1 189 1 251 1 66 1 
89 2 255 1 163 1 205 1 187 2 239 1 164 1 189 1 103 1 23 1 10 1 33 1 156 1 328 1 137 1 66 1 251 1 332 1 
89 2 255 1 187 2 189 1 103 2 191 1 52 1 10 1 66 2 163 1 205 1 164 2 239 3 319 1 321 1 23 1 33 1 328 1 179 1 247 1 137 2 332 1 251 1 
89 2 255 1 187 2 189 2 103 2 191 1 52 1 10 2 66 2 163 1 205 1 164 2 239 3 319 1 321 1 23 1 136 1 33 1 328 2 179 1 247 1 137 2 85 1 251 1 
203 1 256 1 188 1 239 4 319 1 189 3 243 1 103 1 149 2 321 1 105 1 52 1 23 1 10 3 213 2 156 1 328 3 249 1 85 1 250 1 66 1 251 1 202 1 
203 1 188 1 239 4 319 1 189 3 243 1 103 1 149 2 321 1 105 1 52 1 232 1 23 1 10 3 213 2 156 1 328 3 85 1 250 1 66 1 251 1 202 1 
23 1 10 1 328 1 118 1 189 1 251 1 
239 3 189 7 103 1 108 1 233 1 171 1 23 2 10 6 28 1 289 1 264 1 265 1 327 1 156 2 235 1 328 7 118 1 157 1 144 1 66 2 251 3 
89 2 255 1 187 2 0 1 189 1 103 1 10 1 263 2 114 1 266 3 15 1 270 1 272 1 273 1 274 1 205 1 126 2 23 1 290 2 33 1 292 3 217 1 137 1 138 1 140 1 294 2 221 1 40 1 155 2 307 4 235 1 60 2 159 2 160 2 66 1 162 1 163 2 166 1 164 1 239 1 317 1 76 1 175 1 328 1 82 6 332 1 251 1 
225 1 146 1 188 1 1 1 47 1 102 1 189 1 149 3 105 1 232 1 10 1 156 1 267 1 199 2 269 1 17 1 202 1 203 1 239 2 243 2 172 1 26 2 213 3 323 1 328 1 250 1 88 2 38 2 
239 2 189 2 103 1 130 1 23 1 10 2 235 1 328 2 118 1 157 1 66 1 251 2 202 1 
89 2 255 1 163 1 205 1 187 2 239 1 164 1 189 1 103 1 23 1 10 1 136 1 33 1 156 1 328 1 137 1 66 1 251 1 
239 1 189 1 321 1 103 1 108 1 171 1 23 1 10 1 264 1 328 1 157 1 66 1 251 2 
89 1 223 1 187 1 164 1 96 1 50 1 195 1 309 1 311 1 
97 1 83 1 50 1 
163 1 195 1 96 1 50 1 303 1 
203 1 43 1 123 1 163 1 97 1 96 2 149 2 105 1 191 1 50 1 303 2 306 1 323 1 213 2 195 2 247 1 179 1 83 1 250 1 

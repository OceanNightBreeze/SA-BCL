#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) (77,257) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (77,257) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) (77,257) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (15,42,154,284) (15,42,154,284) (15,42,154,284) 62 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
174 1 176 1 285 1 
174 1 332 2 12 1 
273 2 159 1 260 2 207 2 53 1 128 2 142 2 271 2 
79 1 260 2 136 1 44 1 263 1 221 1 265 1 48 1 93 1 94 1 228 1 53 1 142 2 270 1 6 1 99 1 148 1 271 2 102 1 273 3 235 1 278 1 116 1 118 1 68 1 323 2 121 2 328 1 159 1 158 2 24 1 207 2 208 2 128 3 31 1 165 1 290 2 
273 1 0 1 159 1 260 1 207 1 128 1 142 1 7 1 101 1 271 1 
273 1 258 1 46 1 243 1 174 1 302 1 176 1 142 1 128 1 330 1 11 1 311 1 212 1 101 1 
273 1 260 1 243 2 174 1 302 1 176 1 207 1 330 2 142 1 128 1 11 1 311 1 212 1 101 1 271 1 
5 1 106 1 330 1 119 1 243 1 
174 1 122 1 176 1 5 1 106 1 170 1 330 2 243 2 
106 1 330 1 243 1 
273 1 0 1 260 1 243 1 141 1 5 1 159 1 207 1 330 1 142 1 128 1 7 1 101 1 271 1 
174 1 
174 1 176 1 5 1 106 1 305 1 170 1 330 2 243 2 
216 1 107 1 106 2 191 1 170 1 279 1 243 5 174 1 123 1 176 1 225 2 5 2 330 5 129 1 162 1 209 1 30 2 100 1 291 2 
53 1 285 1 
273 2 152 1 260 1 207 1 53 2 128 2 142 2 120 1 271 1 
71 1 124 1 144 1 
273 1 278 1 297 1 118 1 263 1 68 1 323 1 121 1 158 1 94 1 24 1 53 1 128 1 270 1 165 1 99 1 
273 2 278 1 260 1 118 1 68 1 263 1 323 1 121 1 24 1 94 1 158 1 304 1 270 1 142 1 128 2 144 1 310 1 165 1 99 1 271 1 
273 3 304 1 207 1 260 3 53 1 128 3 142 3 271 3 
273 1 0 1 260 1 128 1 142 1 101 1 271 1 
273 1 152 1 260 1 207 1 128 1 142 1 120 1 101 1 271 1 
79 1 260 3 136 1 44 1 263 1 302 1 93 1 94 1 228 1 304 1 53 1 270 1 142 3 11 1 310 1 311 1 99 1 101 1 148 1 271 3 102 1 273 4 235 1 278 1 116 1 118 1 68 1 20 1 120 1 323 1 243 1 121 1 24 1 159 1 158 1 207 2 208 2 128 4 330 1 164 1 31 1 165 1 290 1 212 1 
273 2 288 1 304 1 260 1 53 1 128 2 142 2 46 1 271 1 
273 3 260 3 120 1 45 1 243 1 174 1 302 1 304 2 207 1 330 1 142 3 128 3 311 1 310 1 164 1 11 1 101 1 212 1 271 3 
71 1 273 2 304 1 260 2 207 1 128 2 142 2 144 1 120 1 271 2 
273 1 278 1 263 1 68 1 118 1 323 1 121 1 158 1 94 1 24 1 53 1 128 1 270 1 165 1 99 1 
13 1 273 1 278 1 263 1 68 1 118 1 323 1 121 1 158 1 94 1 24 1 53 1 128 1 308 1 165 1 
83 1 89 1 44 1 48 2 93 1 228 1 144 2 146 1 148 2 233 1 102 1 316 1 190 1 235 1 115 1 116 1 153 1 240 1 21 1 71 2 286 1 124 2 208 2 290 4 
302 1 273 1 260 1 128 1 142 1 193 1 101 1 271 1 
273 5 260 4 120 1 46 1 138 1 288 1 304 2 207 1 142 5 128 5 53 1 229 1 310 1 271 4 
273 2 0 1 260 2 128 2 142 2 193 1 101 1 271 2 
329 1 67 1 
329 1 67 1 
150 1 113 1 
150 1 113 1 
150 1 113 1 
329 1 67 1 320 1 
329 1 52 1 67 1 
150 1 329 2 40 1 97 1 113 1 67 2 
329 1 67 1 320 1 
329 1 67 1 320 1 
200 1 329 1 67 1 
200 1 329 1 67 1 
200 1 329 1 67 1 
104 2 34 2 217 1 87 1 40 1 67 2 239 2 69 2 298 1 195 1 324 2 243 2 174 1 267 3 329 2 205 1 330 2 56 1 168 1 
256 1 34 1 260 2 172 1 267 1 52 1 53 1 142 2 56 1 271 2 185 1 104 1 273 2 67 1 69 1 324 1 243 1 326 1 329 1 206 1 330 1 128 2 255 1 253 1 
319 1 90 1 22 1 
85 1 319 1 22 1 
313 1 85 1 126 1 238 1 90 2 22 3 
313 1 108 1 85 1 238 1 90 1 22 2 
313 1 85 1 238 2 90 1 22 2 
216 3 36 1 83 1 259 2 170 1 89 1 173 2 174 2 225 1 176 1 5 4 98 2 12 1 185 1 189 1 14 1 106 1 279 1 115 1 21 1 243 5 202 1 73 1 204 1 206 1 289 1 330 5 162 2 255 1 332 3 30 1 291 1 
216 8 83 3 259 6 219 1 170 1 89 3 174 5 176 1 225 2 226 5 5 7 98 6 54 1 147 1 12 3 185 4 14 2 106 6 64 1 279 1 115 3 119 5 21 3 243 9 123 1 72 1 202 3 73 2 203 1 204 1 330 9 162 6 332 9 30 2 291 2 
216 3 83 1 259 2 89 1 173 1 174 3 176 1 225 1 5 2 98 2 12 2 185 1 189 1 14 1 115 1 243 3 21 1 123 1 73 1 202 1 289 1 330 3 162 2 30 1 332 4 291 1 
216 5 83 2 259 4 89 2 173 2 174 4 176 1 225 1 5 3 98 4 54 1 147 1 12 3 185 2 189 1 14 1 115 2 243 4 21 2 123 1 73 1 202 2 203 1 289 1 330 4 162 4 332 7 30 1 291 1 
35 1 118 1 285 1 
118 1 210 1 
213 1 
118 1 68 1 
35 2 278 1 118 3 68 1 231 1 167 1 
278 1 118 1 68 1 
63 1 118 1 
83 1 276 1 277 1 281 1 240 3 222 1 21 1 175 1 48 4 269 2 74 1 26 1 161 1 10 1 146 2 290 7 148 3 
83 1 276 1 277 1 281 1 240 3 222 1 21 1 175 1 48 4 269 2 74 1 26 1 161 1 10 1 146 2 290 7 148 3 
82 1 83 1 276 1 277 1 281 1 240 3 222 1 21 1 175 1 48 4 269 2 74 1 26 1 161 1 10 1 146 2 290 7 148 3 
261 1 48 3 175 2 269 1 228 1 306 1 309 1 10 1 146 1 148 3 186 1 102 1 235 1 276 1 281 1 116 1 240 2 26 1 208 2 161 1 331 1 131 1 76 1 290 6 
102 2 83 1 235 2 277 1 276 1 281 1 116 2 240 4 171 1 222 1 21 1 175 1 48 5 269 2 95 1 74 1 26 1 228 2 208 4 306 1 10 1 146 3 290 9 148 4 
15 1 62 1 42 1 284 1 32 1 
15 1 257 1 42 1 284 1 32 1 
15 1 154 1 32 1 77 1 
15 1 257 1 42 1 284 1 32 1 
15 1 62 1 42 1 284 1 32 1 
132 1 
81 1 258 1 170 3 262 1 263 1 174 2 91 1 176 1 94 1 181 1 8 1 11 1 101 1 12 2 273 1 105 2 106 6 114 2 279 1 280 4 118 1 121 2 23 1 128 1 28 1 30 1 212 1 291 1 216 2 296 1 135 2 46 1 302 1 49 2 225 1 143 2 142 1 311 1 232 1 314 1 68 1 321 1 323 2 243 5 244 1 70 2 73 1 158 2 160 1 250 1 330 5 162 2 332 2 165 2 75 2 
273 1 106 2 258 1 170 1 296 1 280 2 262 1 243 3 244 1 46 1 70 1 302 1 305 1 250 1 330 3 142 1 128 1 8 1 311 1 11 1 101 1 212 1 
273 1 106 1 258 1 170 1 296 1 280 3 262 1 243 3 244 1 46 1 174 1 302 1 176 1 305 1 250 1 143 1 330 3 142 1 128 1 8 1 311 1 11 1 101 1 212 1 
273 1 106 2 258 1 170 1 296 1 280 3 262 1 243 3 244 1 46 1 174 1 70 1 302 1 176 1 49 1 305 1 250 1 143 1 330 3 142 1 128 1 8 1 311 1 11 1 101 1 212 1 
258 1 170 3 262 1 174 5 176 5 181 1 8 1 11 1 101 1 12 2 273 1 105 2 106 7 280 6 279 1 114 2 128 1 28 1 30 1 212 1 291 1 216 1 296 1 135 2 137 1 46 1 223 1 302 1 49 4 225 1 305 1 142 1 143 4 311 1 58 1 242 1 243 5 244 1 70 4 245 1 250 1 330 5 162 1 75 2 
258 1 170 2 262 1 91 1 174 2 176 1 181 1 8 1 11 1 101 1 12 2 273 1 105 2 106 4 280 4 279 1 114 2 128 1 28 1 30 1 212 1 291 1 216 1 296 1 135 2 46 1 302 1 225 1 49 2 142 1 143 2 311 1 243 4 244 1 70 2 250 1 330 4 162 1 332 2 75 2 
216 1 258 1 170 2 296 1 135 2 262 1 137 1 46 1 174 1 223 1 302 1 176 1 49 2 225 1 143 2 181 1 142 1 8 1 11 1 311 1 101 1 12 2 273 1 105 2 106 4 114 2 280 4 279 1 244 1 243 4 70 2 245 1 250 1 128 1 330 4 28 1 162 1 30 1 75 2 212 1 291 1 
216 1 258 1 170 2 296 1 135 2 262 1 137 1 46 1 174 1 223 1 302 1 176 1 49 2 225 1 143 2 181 1 142 1 8 1 11 1 311 1 101 1 12 2 273 1 105 2 106 4 114 2 280 4 279 1 244 1 243 4 70 2 245 1 250 1 128 1 330 4 28 1 162 1 30 1 75 2 212 1 291 1 
216 1 258 1 169 2 170 2 296 1 262 1 137 1 46 1 301 1 174 1 302 1 176 1 49 2 225 1 143 2 142 1 8 1 11 1 311 1 101 1 103 1 273 1 105 2 106 4 114 2 280 4 279 1 244 1 243 4 70 2 246 2 249 1 250 1 128 1 330 4 28 1 162 1 332 2 30 1 212 1 291 1 
216 1 258 1 170 2 296 1 135 2 262 1 137 1 46 1 174 1 223 1 302 1 176 1 225 1 49 3 181 1 142 1 143 3 8 1 11 1 311 1 101 1 12 2 58 1 273 1 105 2 106 5 114 2 279 1 280 5 244 1 243 4 70 3 245 1 250 1 128 1 330 4 28 1 162 1 30 1 75 2 212 1 291 1 
216 1 258 1 170 2 296 1 135 2 262 1 137 1 46 1 174 1 223 1 302 1 176 1 225 1 49 3 181 1 142 1 143 3 8 1 11 1 311 1 101 1 12 2 58 1 273 1 105 2 106 5 114 2 279 1 280 5 244 1 243 4 70 3 245 1 250 1 128 1 330 4 28 1 162 1 30 1 75 2 212 1 291 1 
216 1 258 1 169 2 170 2 296 1 262 1 46 1 174 1 91 1 302 1 176 1 49 2 225 1 143 2 142 1 8 1 11 1 311 1 101 1 273 1 105 2 106 4 114 2 279 1 280 4 244 1 243 4 70 2 246 2 249 1 250 1 330 4 128 1 28 1 162 1 332 2 30 1 212 1 291 1 
102 1 83 1 235 1 277 1 281 1 116 1 153 1 240 2 44 1 222 1 21 1 285 1 71 1 48 3 269 1 124 1 93 1 74 1 26 1 228 1 53 2 208 2 144 1 146 2 290 6 148 3 
37 1 83 1 293 1 38 1 261 2 89 2 44 1 48 6 4 1 93 2 228 2 53 1 144 8 146 1 101 1 148 5 102 2 235 2 276 1 116 2 115 1 240 2 194 1 21 2 71 3 202 2 124 8 25 1 27 1 208 4 331 2 31 1 290 11 
134 1 37 1 260 1 297 1 263 1 44 1 48 1 94 1 93 1 228 1 304 1 53 1 270 1 142 1 6 1 307 1 310 1 99 1 271 1 148 1 102 1 273 2 235 1 278 1 116 1 118 1 68 1 323 1 121 1 71 1 157 1 24 1 158 1 128 2 208 2 165 1 31 1 290 2 
79 2 83 3 260 1 89 2 263 2 269 1 93 3 94 2 270 2 6 1 99 2 271 1 102 3 273 3 277 1 278 2 276 4 281 1 116 3 115 2 118 2 121 3 21 3 202 2 24 2 124 7 26 1 208 6 128 3 130 1 31 1 290 20 37 1 44 3 222 1 48 10 227 1 304 1 228 3 53 2 142 1 144 7 310 1 146 4 148 10 59 2 61 2 235 3 68 2 240 8 323 3 71 7 325 2 156 2 158 3 74 1 254 1 166 1 165 1 
295 1 260 1 220 1 263 2 44 2 47 1 48 1 94 2 93 2 51 1 304 1 228 2 142 1 6 1 271 1 148 1 102 2 314 1 315 1 273 1 17 1 235 2 275 1 116 2 153 1 118 3 68 2 323 7 321 1 196 1 121 8 158 8 328 2 128 1 208 4 130 1 165 2 31 1 290 2 
37 1 83 1 260 1 89 1 44 1 92 1 48 1 93 1 228 1 142 1 144 1 146 1 271 1 148 2 102 1 273 1 235 1 116 1 115 1 240 1 120 1 21 1 71 1 202 1 124 1 207 1 208 2 128 1 290 3 
102 1 235 1 276 1 116 1 89 1 153 1 240 1 44 1 21 1 71 1 48 2 124 1 93 1 228 1 208 2 144 1 290 2 233 1 
102 1 83 1 316 1 235 1 116 1 115 1 153 1 240 1 44 1 71 1 124 1 93 1 228 1 208 2 144 1 146 1 290 2 148 2 
83 1 89 1 44 1 48 2 93 1 228 1 144 2 146 1 148 2 102 1 235 1 276 1 116 1 115 1 153 1 240 2 21 1 71 2 202 1 124 2 208 2 290 4 
102 1 235 1 276 1 116 1 89 1 240 1 44 1 21 1 71 1 47 1 48 2 124 1 93 1 228 1 208 2 144 1 290 2 233 1 
102 1 83 1 316 1 235 1 116 1 115 1 240 1 44 1 71 1 47 1 124 1 93 1 228 1 208 2 144 1 146 1 290 2 148 2 
83 1 89 1 44 1 48 2 47 1 93 1 228 1 144 2 146 1 148 2 102 1 235 1 276 1 116 1 115 1 240 2 21 1 71 2 202 1 124 2 208 2 290 4 
102 1 83 1 235 1 276 1 115 1 116 1 89 1 240 2 44 1 21 1 71 2 48 2 202 1 124 2 93 1 228 1 208 2 144 2 146 1 290 4 148 2 
79 1 263 1 44 1 48 1 94 1 93 1 228 1 53 1 270 1 6 1 99 1 148 1 102 1 273 1 235 1 278 1 116 1 68 1 118 1 323 1 121 1 24 1 158 1 128 1 208 2 165 1 31 1 290 2 
263 1 44 1 48 1 94 1 93 1 96 1 228 1 53 1 6 1 308 1 148 1 13 1 102 1 273 1 235 1 278 1 116 1 68 1 118 1 323 1 121 1 24 1 158 1 128 1 208 2 165 1 31 1 290 2 
37 1 83 1 89 1 44 1 48 2 93 1 228 1 144 2 146 1 148 2 102 1 235 1 276 1 116 1 115 1 240 2 21 1 71 2 202 1 124 2 208 2 290 4 
79 1 83 1 89 1 263 1 44 1 48 2 94 1 93 1 228 1 270 1 144 2 146 1 99 1 148 2 102 1 315 1 273 1 235 1 276 1 278 1 115 1 116 1 240 2 68 1 118 1 323 1 21 1 121 1 71 2 325 1 202 1 124 2 24 1 158 1 128 1 208 2 290 4 
83 1 37 1 260 1 89 1 44 1 48 2 93 1 228 1 142 1 144 1 148 1 271 1 102 1 273 1 235 1 65 1 276 1 115 1 116 1 240 1 120 1 21 1 71 1 202 1 124 1 207 1 208 2 128 1 290 3 
33 1 83 4 292 3 261 2 89 3 171 1 222 1 139 1 48 17 269 1 228 4 306 2 146 3 182 1 57 1 148 16 102 4 60 1 234 1 110 1 235 4 277 1 237 1 276 3 281 1 19 1 116 4 115 3 240 6 241 1 155 1 21 4 327 1 202 3 74 1 125 1 26 1 208 8 331 2 76 2 290 33 
33 2 83 2 292 4 261 2 89 3 171 1 139 1 48 14 228 3 306 2 146 2 182 1 148 12 57 2 102 3 234 1 235 3 237 1 276 2 19 1 116 3 115 2 240 4 241 1 155 1 21 3 248 1 327 1 202 3 125 1 208 6 331 2 290 26 76 2 
33 2 83 4 292 4 261 3 89 3 171 1 222 1 139 1 48 19 269 1 228 4 306 2 146 3 182 1 57 1 148 18 102 4 60 1 234 1 109 1 235 4 277 1 237 1 276 4 281 1 19 1 116 4 115 3 240 7 241 1 155 1 21 4 248 1 327 1 202 3 74 1 125 1 26 1 208 8 331 3 76 3 290 37 
33 1 83 4 292 4 261 2 89 3 171 1 222 1 139 1 48 18 269 1 228 4 306 2 146 2 182 1 57 1 148 17 102 4 60 1 234 1 235 4 277 1 237 1 276 3 281 1 19 1 116 4 115 3 240 5 241 1 155 1 21 4 248 1 327 1 202 3 74 1 125 1 26 1 208 8 331 2 76 2 290 35 
33 1 83 3 292 4 261 2 89 3 171 1 139 1 48 14 228 3 306 2 146 3 182 1 57 1 148 14 102 3 234 1 235 3 237 1 276 3 19 1 116 3 115 3 240 6 241 1 155 1 21 3 248 1 327 1 202 3 125 1 208 6 331 2 76 2 290 28 
34 1 104 1 217 1 329 1 40 1 111 1 67 1 69 1 168 1 324 1 
52 1 253 1 
34 1 104 1 274 1 329 1 18 1 67 1 55 1 69 1 324 1 
104 1 34 1 217 1 40 1 67 1 239 1 69 1 298 1 195 1 243 1 324 1 174 1 267 2 329 1 205 1 330 1 56 1 168 1 
104 1 34 1 217 1 40 1 67 1 239 1 69 1 298 1 195 1 243 1 324 1 174 1 267 2 329 1 205 1 330 1 56 1 168 1 
104 1 34 1 217 1 40 1 67 1 239 1 69 1 298 1 195 1 243 1 324 1 174 1 267 2 329 1 205 1 330 1 56 1 168 1 
97 1 43 1 320 1 
97 1 43 1 320 1 
272 1 200 1 
272 1 200 1 97 1 
256 1 172 1 
256 1 34 1 260 2 298 1 172 1 267 1 5 1 52 1 53 1 142 2 185 1 271 2 104 1 273 2 67 1 239 1 69 1 243 1 324 1 326 1 329 1 206 1 128 2 330 1 163 1 255 1 253 1 
43 1 320 1 
272 1 200 1 97 1 
215 1 37 1 263 1 44 1 264 1 48 1 94 1 93 1 228 1 142 2 6 1 230 1 148 1 102 1 273 2 317 1 17 1 235 1 275 1 318 1 116 1 118 1 68 1 323 2 121 2 158 2 328 2 128 2 208 2 31 1 290 2 
315 1 85 1 1 1 319 1 263 1 90 1 300 1 323 2 22 2 121 2 198 1 94 1 158 2 126 1 178 1 127 1 9 1 130 1 184 1 
85 1 1 1 319 1 263 1 90 1 300 1 323 1 22 2 121 1 198 1 158 1 94 1 126 1 178 1 127 1 145 1 130 1 
314 1 192 1 263 1 118 1 68 1 323 1 321 1 121 1 198 1 199 1 94 1 158 1 165 1 184 1 
85 1 1 1 319 1 263 1 90 1 300 1 323 1 22 2 121 1 198 1 158 1 94 1 126 1 178 1 127 1 9 1 130 1 184 1 
183 1 
174 1 216 1 176 1 107 1 162 1 209 1 285 1 
216 1 170 1 135 1 174 2 225 1 176 1 181 1 12 1 106 1 279 1 243 1 330 1 162 1 30 1 332 1 75 1 291 1 
78 2 83 2 259 6 170 3 89 2 263 4 174 8 176 2 94 3 180 2 98 6 12 6 107 1 106 5 112 2 278 3 279 4 115 2 117 1 118 10 121 3 21 2 197 2 201 1 202 2 209 1 210 3 30 4 211 1 291 4 133 2 35 2 216 9 218 2 294 2 41 1 225 4 311 2 231 1 149 2 315 1 63 2 68 3 323 3 243 5 156 2 73 2 158 3 160 1 330 5 252 1 162 8 332 12 165 1 
133 2 216 8 83 2 294 1 259 5 170 1 261 1 89 2 139 1 174 5 268 1 225 2 176 2 98 5 12 3 106 1 19 1 279 2 115 2 241 1 155 1 243 1 21 2 73 1 327 1 202 2 160 1 251 1 330 1 331 1 162 5 332 6 30 2 76 1 291 2 
133 2 216 2 83 1 0 1 294 1 260 1 223 1 225 1 141 1 142 1 7 1 101 1 271 1 312 1 273 1 281 1 279 1 243 1 21 2 159 1 74 1 26 1 207 1 128 1 330 1 162 2 30 1 291 1 
216 1 107 1 279 1 174 1 225 1 176 1 209 1 162 1 30 1 291 1 
133 2 216 5 83 2 294 1 259 5 89 2 115 2 21 2 174 5 156 1 202 2 98 5 162 5 332 10 12 5 
174 1 176 1 106 1 170 1 330 1 243 1 
80 1 216 2 170 2 41 2 263 1 225 2 94 1 303 1 232 1 314 1 106 4 279 1 117 1 118 1 68 1 323 4 321 1 121 4 243 3 123 1 23 1 73 2 158 4 160 2 330 3 162 2 30 2 165 2 291 2 
79 1 260 2 136 1 263 1 44 1 94 1 93 1 228 1 53 1 142 2 270 1 99 1 148 1 271 2 102 1 273 3 235 1 278 1 116 1 68 1 118 1 323 1 121 1 158 1 159 1 24 1 207 2 208 2 128 3 31 1 165 1 290 1 
216 1 259 2 279 1 174 4 269 1 225 1 176 2 73 1 160 1 98 2 162 2 332 4 30 1 12 2 291 1 
34 1 29 1 324 1 
34 1 88 1 172 1 168 1 324 1 
34 1 29 1 324 1 
34 1 29 1 324 1 
34 1 322 1 324 1 
34 1 322 1 324 1 
34 1 322 1 324 1 
34 1 324 1 
329 1 67 1 
102 2 83 1 235 2 276 1 277 1 281 1 116 2 240 3 222 1 21 1 48 4 269 1 74 1 228 2 26 1 208 4 306 1 146 2 290 8 148 4 
83 1 277 1 281 1 240 2 222 1 285 1 21 1 48 3 269 1 74 1 26 1 146 2 290 6 148 3 
102 1 83 1 235 1 276 1 115 1 116 1 89 1 240 2 21 1 48 2 202 1 228 1 208 2 146 1 333 1 290 4 148 2 
48 1 261 1 331 1 290 2 76 1 148 1 
83 5 261 2 89 2 222 1 48 13 4 1 269 1 228 1 306 1 146 4 148 12 102 1 312 1 235 1 277 1 276 4 281 2 115 2 116 1 240 8 194 1 21 5 202 2 74 2 25 1 26 2 208 2 331 2 290 25 
261 1 290 1 148 1 
48 1 331 1 290 1 
102 1 83 1 235 1 276 1 116 1 89 1 115 1 240 3 21 1 48 3 156 1 202 1 228 1 208 2 333 1 146 2 290 6 148 3 
83 2 261 1 89 2 171 1 139 1 48 6 228 1 146 1 148 6 102 1 235 1 276 1 19 1 116 1 115 2 241 1 240 2 155 1 21 2 327 1 202 2 208 2 331 1 290 12 76 1 
83 1 276 1 281 1 240 2 21 1 48 3 74 1 26 1 146 1 290 6 148 3 
102 1 235 1 276 1 277 1 281 1 116 1 240 2 222 1 48 1 26 1 228 1 208 2 306 1 146 1 131 1 290 3 148 2 
102 1 312 1 83 2 235 1 276 2 281 2 116 1 171 1 240 5 21 2 48 5 74 1 228 1 26 2 208 2 146 3 290 10 148 5 
102 1 235 1 276 1 116 1 89 1 171 1 240 1 21 1 48 2 228 1 208 2 290 2 
102 1 83 1 235 1 276 1 115 1 116 1 89 1 240 2 171 1 21 1 48 2 202 1 228 1 208 2 146 1 290 4 148 2 
102 3 60 1 235 3 276 1 281 1 116 3 171 1 240 2 48 1 228 3 26 1 208 6 306 1 131 1 146 1 290 3 148 2 
83 2 261 1 171 1 222 1 48 7 228 4 306 1 146 3 148 8 186 1 102 4 312 1 60 1 235 4 276 3 277 1 281 2 116 4 240 6 21 2 74 1 26 2 208 8 331 1 333 1 131 1 76 1 290 15 
83 4 261 1 89 2 171 1 222 1 139 1 48 14 269 1 228 2 306 1 146 5 148 10 102 2 312 1 235 2 277 1 276 4 281 2 19 1 116 2 115 1 241 1 240 9 155 1 21 5 327 1 202 2 74 2 26 2 208 4 331 1 290 24 76 1 
83 2 261 1 89 2 171 1 222 1 139 1 48 10 269 1 228 3 306 1 146 3 148 7 102 3 235 3 277 1 276 1 281 1 19 1 116 3 115 1 241 1 240 4 155 1 21 3 327 1 202 2 74 1 26 1 208 6 331 1 333 1 290 17 76 1 
83 3 261 1 89 2 171 1 222 1 139 1 48 9 269 1 228 3 306 1 146 3 148 10 102 3 235 3 277 1 276 1 281 1 19 1 116 3 115 2 241 1 240 4 155 1 21 3 327 1 202 2 74 1 26 1 208 6 331 1 333 1 290 19 76 1 
83 2 261 1 89 2 171 1 222 1 139 1 48 10 269 1 228 3 306 1 146 3 148 7 102 3 235 3 277 1 276 2 281 1 19 1 116 3 115 1 241 1 240 5 155 1 21 3 327 1 202 2 74 1 26 1 208 6 331 1 333 1 290 17 76 1 
83 4 261 1 89 2 171 1 222 1 139 1 48 14 269 1 228 2 306 1 146 5 148 10 102 2 312 1 235 2 277 1 276 4 281 2 19 1 116 2 115 1 241 1 240 9 155 1 21 5 327 1 202 2 74 2 26 2 208 4 331 1 290 24 76 1 
83 2 261 1 89 2 171 1 139 1 48 6 228 1 146 1 148 6 102 1 235 1 276 1 19 1 116 1 115 2 241 1 240 2 155 1 21 2 327 1 202 2 208 2 331 1 290 12 76 1 
83 2 261 1 89 2 171 1 222 1 139 1 48 10 269 1 228 4 306 2 146 3 148 8 102 4 235 4 277 1 276 2 281 1 19 1 116 4 115 1 241 1 240 5 155 1 21 3 327 1 202 2 74 1 26 1 208 8 331 1 333 1 290 18 76 1 
83 2 261 1 89 3 171 1 139 1 48 9 228 4 306 2 146 3 148 7 102 4 60 1 235 4 276 3 19 1 116 4 115 2 241 1 240 6 155 1 21 3 327 1 202 3 208 8 331 1 290 16 76 1 
83 1 277 2 276 3 281 3 240 6 222 1 21 1 48 3 74 1 26 3 146 3 290 7 148 4 
83 2 261 1 89 2 171 1 222 1 139 1 48 10 269 1 228 4 306 2 146 3 148 8 102 4 60 1 235 4 277 1 276 1 281 1 19 1 116 4 115 1 241 1 240 4 155 1 21 3 327 1 202 2 74 1 26 1 208 8 331 1 290 18 76 1 
273 1 288 1 39 1 53 1 128 1 142 1 46 1 
214 1 187 1 273 1 151 1 39 1 283 1 46 1 224 1 288 1 53 1 142 1 128 1 
314 1 94 1 158 1 263 1 118 1 68 1 165 1 321 1 323 1 285 1 121 1 
273 2 278 1 260 1 118 1 68 1 263 1 323 1 121 1 24 1 158 1 94 1 304 1 53 1 142 1 128 2 270 1 165 1 271 1 
218 1 260 2 41 1 263 1 302 1 94 1 304 1 53 1 270 1 142 2 101 1 271 1 273 2 63 1 278 2 68 2 118 3 323 1 121 1 158 1 24 1 128 2 212 1 
218 1 260 2 41 1 263 1 302 1 94 1 304 1 53 1 142 2 101 1 271 1 13 1 273 2 63 1 16 1 278 2 68 2 118 3 323 2 121 2 158 2 24 1 128 2 212 1 
35 1 218 1 41 1 263 1 174 1 176 1 94 1 177 1 311 1 63 1 16 1 106 1 236 1 278 1 118 4 68 1 323 3 121 3 243 2 158 3 330 2 210 1 165 1 
35 1 63 1 16 1 106 1 218 1 278 1 41 1 68 1 263 1 118 4 323 3 243 2 121 3 174 1 176 1 158 3 94 1 180 1 330 2 311 1 210 1 165 1 
94 1 158 1 263 1 323 1 121 1 196 1 
315 1 84 1 295 1 86 1 275 1 278 1 220 1 68 2 118 3 263 3 323 6 196 1 121 7 140 1 328 1 158 7 94 2 51 1 130 1 165 2 231 1 
79 1 83 1 37 1 260 1 263 1 44 2 222 1 48 3 269 1 94 1 93 2 228 2 304 1 53 2 142 1 270 1 144 1 146 2 230 1 99 1 148 3 271 1 102 2 59 1 273 2 315 1 235 2 277 1 278 1 281 1 116 2 240 2 118 1 68 1 323 1 21 1 121 1 71 1 325 1 124 1 24 1 158 1 74 1 26 1 128 2 208 4 290 6 
35 1 216 1 170 1 174 1 176 1 225 2 5 1 180 1 311 1 149 1 107 1 106 2 112 1 279 2 117 1 118 2 323 1 243 3 121 1 197 1 158 1 330 3 162 1 209 1 30 2 210 1 165 1 291 2 
35 1 315 1 278 1 68 1 118 2 263 2 323 2 196 1 121 2 201 1 158 2 94 1 231 1 
188 1 314 1 315 1 16 1 263 1 68 1 118 1 323 4 321 1 121 4 158 4 94 1 165 1 
84 1 86 1 278 1 41 1 282 1 68 1 118 1 263 2 323 2 121 2 50 1 158 2 94 1 227 1 
94 1 158 1 85 1 319 1 263 1 300 1 165 1 323 1 22 1 121 1 
315 1 94 1 158 2 275 1 263 1 118 1 68 1 264 1 130 1 323 2 121 2 
188 1 314 1 315 1 275 1 41 1 68 2 118 3 263 2 220 1 321 1 323 4 121 5 158 5 94 2 51 1 165 1 
188 1 314 1 315 1 275 1 41 1 68 2 118 3 263 2 220 1 321 1 323 4 121 5 3 1 158 5 94 2 165 1 
13 1 273 2 278 1 260 1 118 1 68 1 263 1 323 1 121 1 24 1 158 1 94 1 304 1 53 1 142 1 128 2 165 1 271 1 
84 1 86 1 278 1 41 1 68 1 118 1 263 2 323 1 121 1 140 1 158 1 94 1 231 1 
287 1 179 1 66 1 53 1 2 1 
66 1 299 1 243 2 2 2 174 1 266 1 287 2 302 1 247 1 176 1 5 1 179 2 53 1 330 2 311 1 164 1 11 1 101 1 212 1 
215 1 273 1 317 1 66 1 179 1 128 1 142 1 318 1 2 1 
266 1 247 1 66 1 

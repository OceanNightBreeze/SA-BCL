#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
203 1 225 6 278 1 74 9 299 3 25 1 231 1 29 1 303 2 255 5 52 1 372 4 306 2 55 9 137 2 164 2 62 1 218 1 354 1 38 2 239 1 292 2 144 1 296 1 379 1 319 2 222 1 17 1 
203 1 225 6 278 1 74 9 299 3 25 1 231 1 29 1 303 2 255 5 52 1 372 4 306 2 55 9 137 2 62 1 164 2 218 1 354 1 38 2 239 1 292 2 144 1 296 1 379 1 319 2 222 1 17 1 
203 1 225 7 278 1 74 10 299 4 25 1 231 1 29 1 303 2 255 6 52 1 372 5 306 2 55 10 137 2 62 1 164 2 218 1 354 1 38 2 239 1 292 2 144 1 296 1 379 1 319 2 222 1 17 1 
203 1 225 4 278 1 74 7 299 2 25 1 231 1 29 1 303 2 255 4 52 1 372 3 306 2 55 7 137 2 62 1 164 1 218 1 354 1 38 2 239 1 292 2 296 1 379 1 319 2 222 1 17 1 
137 1 164 2 225 3 74 4 299 1 38 1 239 1 231 1 292 1 144 1 29 1 255 3 52 1 372 2 306 1 296 1 55 4 319 1 
137 1 74 2 239 1 230 1 231 1 292 1 303 1 255 1 52 1 306 1 55 2 222 1 319 1 149 1 379 1 34 1 
62 1 225 1 74 3 299 1 239 1 231 1 303 1 255 2 52 1 372 1 306 2 55 3 319 2 
298 1 225 7 74 9 299 3 25 1 231 1 29 1 303 1 255 5 52 1 372 4 306 2 133 1 55 9 137 1 62 1 164 2 38 1 239 1 292 1 144 1 296 1 319 2 17 1 
298 1 225 7 74 9 299 3 25 1 231 1 29 1 303 1 255 5 52 1 372 4 306 2 133 1 55 9 137 1 62 1 164 2 38 1 239 1 292 1 144 1 296 1 319 2 17 1 
114 1 376 1 317 1 
114 1 223 2 252 1 
328 2 256 2 93 2 96 2 208 1 168 2 228 1 380 2 
321 2 276 1 208 1 24 1 300 1 228 1 27 1 323 1 28 1 367 1 106 1 256 2 159 2 326 1 135 1 33 1 235 1 310 1 60 1 136 1 264 1 328 3 217 2 140 2 168 2 169 1 334 2 335 1 220 1 93 3 120 1 96 2 297 1 147 1 242 1 380 2 199 1 
328 1 21 1 256 1 93 1 180 1 32 1 96 1 168 1 228 1 380 1 
114 1 328 1 376 1 44 1 87 1 344 1 378 1 359 1 370 1 93 1 32 1 96 1 58 1 111 1 
114 1 328 1 376 1 344 2 168 1 87 2 378 1 256 1 359 1 370 1 93 1 32 1 96 1 380 1 111 1 
360 1 139 1 344 1 87 1 39 1 
114 1 126 1 376 1 139 1 156 1 344 2 87 2 39 1 
344 1 87 1 39 1 
161 1 328 1 21 1 139 1 87 1 344 1 228 1 168 1 256 1 180 1 93 1 32 1 96 1 380 1 
114 1 
114 1 126 1 376 1 13 1 139 1 344 2 87 2 39 1 
114 1 126 1 376 1 139 2 85 1 142 1 226 1 87 5 344 5 39 2 170 1 347 1 348 1 241 1 81 2 53 1 234 1 158 2 56 2 
136 1 0 1 328 2 321 1 217 1 169 1 323 1 27 1 105 1 335 1 256 1 93 2 120 1 96 1 134 1 159 1 380 1 33 1 235 1 199 1 
317 1 208 1 
328 2 208 2 168 1 77 1 256 1 93 2 96 2 122 1 380 1 
0 1 312 1 216 1 
136 1 328 1 321 1 217 1 208 1 169 1 27 1 323 1 335 1 93 1 120 1 337 1 159 1 33 1 235 1 199 1 
105 1 328 3 256 3 93 3 96 3 208 1 168 1 380 3 
328 1 21 1 256 1 93 1 32 1 96 1 380 1 
328 1 256 1 93 1 32 1 96 1 168 1 122 1 380 1 77 1 
201 1 276 1 321 1 208 1 300 1 344 1 228 1 323 1 27 1 28 1 105 1 283 1 256 3 370 1 32 1 134 1 159 1 135 1 111 1 33 1 235 1 310 1 60 1 136 1 264 1 328 4 217 1 140 1 168 2 87 1 169 1 378 1 334 2 335 1 220 1 359 1 93 4 120 1 96 3 297 1 242 1 122 1 380 3 199 1 
118 1 105 1 328 2 256 1 93 2 96 2 208 1 58 1 380 1 
114 1 328 3 168 1 344 1 87 1 378 1 105 2 283 1 67 1 256 3 359 1 370 1 93 3 32 1 96 3 134 1 122 1 380 3 111 1 
0 1 328 2 312 1 168 1 105 1 256 2 93 2 96 2 122 1 380 2 
136 1 328 1 321 1 217 1 208 1 169 1 27 1 323 1 335 1 93 1 120 1 159 1 33 1 235 1 199 1 
136 1 328 1 321 1 217 1 208 1 169 1 89 1 323 1 335 1 93 1 120 1 336 1 159 1 33 1 235 1 
0 2 20 1 342 1 322 1 300 1 28 2 106 2 182 1 304 1 135 1 310 1 60 1 216 2 312 2 189 1 140 4 141 1 65 1 268 1 334 2 220 1 361 1 242 1 19 1 
328 1 256 1 93 1 32 1 96 1 111 1 380 1 324 1 
328 5 377 1 174 1 208 1 168 1 118 1 105 2 256 4 93 5 96 5 134 1 58 1 122 1 380 4 
328 2 21 1 256 2 93 2 32 1 96 2 380 2 324 1 
329 1 176 1 
329 1 176 1 
293 1 275 1 
293 1 275 1 
293 1 275 1 
329 1 287 1 176 1 
329 1 287 1 176 1 
329 1 350 1 176 1 
293 1 329 2 275 1 190 1 18 1 176 2 
329 1 287 1 176 1 
329 1 175 1 176 1 
329 1 175 1 176 1 
329 1 175 1 176 1 
114 1 329 2 265 1 127 1 116 1 35 2 190 1 87 2 344 2 176 2 103 2 90 1 132 3 183 1 54 2 157 2 364 1 365 1 338 2 
99 1 127 1 2 1 208 1 344 1 176 1 155 1 368 1 256 2 132 1 305 1 157 1 54 1 350 1 329 1 328 2 35 1 87 1 219 1 93 2 96 2 197 1 380 2 338 1 
137 1 38 1 292 1 
137 1 230 1 292 1 
137 3 31 1 38 2 198 1 112 1 230 1 
137 2 23 1 38 1 198 1 112 1 230 1 
137 2 38 1 112 1 198 2 230 1 
126 1 99 1 223 3 252 1 322 1 72 2 344 5 155 1 325 1 305 1 304 1 81 1 285 1 158 1 234 3 57 1 56 1 114 2 115 1 376 1 237 2 330 1 139 4 85 2 289 1 87 5 39 1 170 1 361 1 97 1 16 2 19 1 
99 4 126 1 320 1 223 9 252 3 322 3 72 6 279 1 344 9 348 1 304 3 81 2 285 2 158 2 234 8 57 3 56 2 114 5 115 2 376 1 237 6 331 1 139 7 85 6 290 1 87 9 86 1 39 6 170 1 270 5 360 5 361 3 196 1 97 1 19 3 
99 1 223 4 252 2 322 1 72 2 344 3 348 1 325 1 304 1 81 1 285 1 158 1 234 3 56 1 57 1 114 3 115 1 376 1 237 2 330 1 139 2 85 2 87 3 361 1 16 1 19 1 
99 2 320 1 223 7 252 3 322 2 72 4 279 1 344 4 348 1 325 1 304 2 81 1 285 1 158 1 234 5 56 1 57 2 114 4 115 1 376 1 237 4 330 1 139 3 85 4 290 1 87 4 361 2 16 2 19 2 
317 1 352 1 120 1 
49 1 120 1 
332 1 
120 1 235 1 
136 1 332 1 352 2 120 2 15 1 307 1 235 1 
136 1 120 1 235 1 
181 1 120 1 
20 3 202 1 71 1 248 1 140 7 141 2 63 1 28 3 106 4 361 1 294 1 80 1 14 1 261 2 19 1 244 1 381 1 
20 3 202 1 71 1 248 1 140 7 141 2 63 1 28 3 106 4 361 1 294 1 80 1 14 1 261 2 19 1 244 1 381 1 
20 3 100 1 202 1 71 1 248 1 140 7 141 2 63 1 28 3 106 4 361 1 294 1 80 1 14 1 261 2 19 1 244 1 381 1 
202 2 20 10 71 1 204 1 246 1 101 1 248 2 322 3 300 1 28 15 106 16 80 1 304 3 261 3 57 3 83 3 135 1 310 1 309 1 187 1 11 4 313 1 140 31 141 5 63 5 334 2 220 1 294 1 361 4 295 1 14 1 244 2 381 2 19 4 
202 1 20 4 71 1 248 1 300 2 28 4 106 5 261 2 373 1 135 2 310 2 288 1 140 9 141 3 63 1 334 4 220 2 361 1 294 1 295 1 14 1 19 1 381 1 244 1 
43 1 245 1 321 1 207 1 225 1 253 1 74 2 230 1 231 1 303 1 255 1 369 1 31 1 52 1 306 1 159 1 55 2 213 1 137 2 217 1 333 1 167 1 38 1 239 1 169 1 292 1 335 1 269 1 362 1 319 1 
43 1 321 1 225 2 253 1 74 3 46 1 230 1 303 1 255 1 31 1 369 1 131 1 52 1 306 1 159 1 55 3 213 1 137 2 217 1 333 1 167 1 38 1 239 1 169 1 292 1 335 1 269 1 362 1 363 1 319 1 
43 1 321 1 225 2 74 2 46 1 230 1 303 1 255 1 369 1 31 1 52 1 159 1 55 2 137 2 217 1 333 1 167 1 38 1 239 1 169 1 292 1 335 1 269 1 362 1 363 1 
43 2 321 1 74 1 177 1 302 1 303 2 131 1 306 1 259 1 159 1 55 1 33 1 235 1 186 1 217 1 169 1 88 1 335 1 269 2 362 2 68 1 120 1 319 1 
43 1 137 2 333 1 321 1 217 1 207 1 253 1 74 1 167 1 38 1 230 1 169 1 231 1 292 1 335 1 303 1 31 1 369 1 269 1 363 1 362 1 306 1 55 1 159 1 319 1 213 1 
195 1 
102 2 249 1 252 2 44 1 6 2 47 1 344 5 302 1 260 1 158 1 56 1 159 2 58 1 351 1 111 1 114 2 115 1 160 1 217 2 166 1 169 1 170 1 171 1 66 4 359 1 221 1 120 1 126 3 223 2 321 2 229 2 129 2 370 1 32 1 81 1 82 2 234 2 33 2 235 1 186 1 328 1 376 1 85 2 37 1 191 1 143 1 87 5 39 6 378 1 240 2 335 1 93 1 96 1 41 1 148 2 
126 1 328 1 102 1 249 1 44 1 191 1 143 1 87 3 344 3 39 2 378 1 66 2 13 1 370 1 359 1 221 1 93 1 32 1 96 1 260 1 58 1 111 1 
126 1 249 1 44 1 344 3 129 1 370 1 32 1 260 1 58 1 111 1 114 1 328 1 376 1 143 1 191 1 87 3 39 1 378 1 66 3 359 1 13 1 93 1 221 1 96 1 
126 1 249 1 102 1 44 1 6 1 344 3 129 1 370 1 32 1 260 1 58 1 111 1 114 1 328 1 376 1 143 1 191 1 87 3 378 1 39 2 66 3 13 1 359 1 93 1 221 1 96 1 
126 3 341 1 249 1 102 4 252 2 44 1 6 4 47 1 344 5 229 2 129 4 370 1 32 1 81 1 260 1 82 2 234 1 158 1 56 1 58 1 111 1 114 5 328 1 376 5 165 1 166 1 85 1 355 1 143 1 191 1 87 5 39 7 378 1 170 1 240 2 66 6 13 1 359 1 221 1 93 1 96 1 148 2 272 1 124 1 
249 1 102 2 252 2 44 1 6 2 47 1 344 4 260 1 158 1 56 1 58 1 111 1 114 2 166 1 170 1 66 4 359 1 221 1 126 2 223 2 229 2 129 2 370 1 32 1 81 1 234 1 82 2 328 1 376 1 85 1 191 1 143 1 87 4 378 1 39 4 240 2 93 1 96 1 148 2 41 1 
126 2 341 1 102 2 249 1 252 2 44 1 6 2 47 1 344 4 229 2 129 2 370 1 32 1 81 1 260 1 82 2 234 1 158 1 56 1 58 1 111 1 114 1 328 1 376 1 165 1 166 1 85 1 143 1 191 1 87 4 39 4 378 1 170 1 240 2 66 4 359 1 93 1 221 1 96 1 148 2 124 1 
126 2 341 1 102 2 249 1 252 2 44 1 6 2 47 1 344 4 229 2 129 2 370 1 32 1 81 1 260 1 82 2 234 1 158 1 56 1 58 1 111 1 114 1 328 1 376 1 165 1 166 1 85 1 143 1 191 1 87 4 39 4 378 1 170 1 240 2 66 4 359 1 93 1 221 1 96 1 148 2 124 1 
125 1 126 2 223 2 341 1 102 2 249 1 44 1 6 2 344 4 229 2 129 2 79 1 50 2 370 1 32 1 81 1 260 1 82 2 234 1 158 1 56 1 58 1 111 1 327 2 114 1 328 1 376 1 266 1 166 1 85 1 143 1 191 1 87 4 39 4 378 1 170 1 66 4 359 1 93 1 221 1 96 1 
126 2 341 1 249 1 102 3 252 2 44 1 6 3 47 1 344 4 229 2 129 3 370 1 32 1 81 1 260 1 82 2 234 1 158 1 56 1 58 1 111 1 114 1 328 1 376 1 165 1 166 1 85 1 143 1 191 1 355 1 87 4 378 1 39 5 170 1 240 2 66 5 359 1 93 1 221 1 96 1 148 2 124 1 
126 2 341 1 249 1 102 3 252 2 44 1 6 3 47 1 344 4 229 2 129 3 370 1 32 1 81 1 260 1 82 2 234 1 158 1 56 1 58 1 111 1 114 1 328 1 376 1 165 1 166 1 85 1 143 1 191 1 355 1 87 4 378 1 39 5 170 1 240 2 66 5 359 1 93 1 221 1 96 1 148 2 124 1 
249 1 102 2 44 1 6 2 344 4 50 2 260 1 158 1 56 1 58 1 111 1 114 1 166 1 170 1 66 4 359 1 221 1 125 1 126 2 223 2 229 2 129 2 370 1 32 1 81 1 234 1 82 2 327 2 328 1 376 1 85 1 191 1 143 1 87 4 378 1 39 4 93 1 96 1 41 1 
0 1 20 2 71 1 342 1 248 1 208 2 300 1 28 3 106 3 261 1 135 1 310 1 60 1 312 1 216 1 140 6 141 2 334 2 317 1 220 1 294 1 361 1 14 1 242 1 244 1 19 1 
0 11 20 2 204 1 208 1 322 1 300 2 26 1 28 6 106 8 371 1 257 1 304 2 57 2 326 1 135 2 83 3 309 1 310 2 60 2 264 1 11 3 216 11 312 4 140 14 141 1 63 1 356 1 334 4 220 2 361 1 273 1 242 1 19 2 
1 1 321 1 208 1 300 1 323 1 27 1 105 1 28 1 256 1 106 1 159 1 134 1 33 1 135 1 326 1 235 1 375 1 136 1 60 1 310 1 264 1 328 2 312 1 217 1 140 2 169 1 192 1 334 2 335 1 220 1 93 2 120 1 96 1 337 1 273 1 242 1 380 1 199 1 
0 7 248 1 208 2 154 2 300 3 254 1 105 1 256 1 106 10 304 2 258 2 261 1 159 3 57 2 310 3 60 3 264 1 216 7 312 7 217 3 353 2 63 4 169 2 117 2 220 3 363 1 361 3 14 1 120 2 273 1 366 1 19 3 20 8 71 1 321 3 276 2 322 2 27 2 323 2 28 10 134 1 326 1 33 1 135 3 235 2 136 2 328 3 140 20 141 4 334 6 335 2 294 1 93 3 96 1 242 3 380 1 244 1 98 1 199 2 
245 1 321 8 342 1 251 1 24 2 76 1 300 2 209 1 8 1 105 1 28 1 302 1 256 1 106 1 159 7 33 2 135 2 326 1 235 2 186 1 310 2 60 2 264 1 215 1 328 1 217 8 140 2 169 2 91 1 334 4 335 2 146 1 220 2 363 1 93 1 96 1 120 3 242 2 380 1 
0 1 20 1 322 1 300 1 28 2 256 1 106 1 304 1 57 1 135 1 310 1 60 1 328 1 312 1 216 1 140 3 141 1 168 1 334 2 220 1 93 1 361 1 271 1 96 1 273 1 122 1 242 1 380 1 19 1 
60 1 310 1 0 1 20 1 312 1 216 1 140 2 342 1 63 1 300 1 268 1 334 2 220 1 106 2 304 1 242 1 135 1 19 1 
60 1 310 1 0 1 20 1 312 1 216 1 140 2 342 1 141 1 322 1 300 1 65 1 334 2 28 2 220 1 361 1 242 1 135 1 
0 2 20 2 342 1 322 1 300 1 28 2 106 2 304 1 57 1 135 1 310 1 60 1 216 2 312 2 140 4 141 1 63 1 334 2 220 1 361 1 242 1 19 1 
60 1 310 1 0 1 20 1 312 1 216 1 140 2 63 1 300 1 268 1 334 2 146 1 220 1 106 2 304 1 242 1 135 1 19 1 
60 1 310 1 0 1 20 1 312 1 216 1 140 2 141 1 322 1 300 1 65 1 334 2 28 2 146 1 220 1 361 1 242 1 135 1 
0 2 20 2 322 1 300 1 28 2 106 2 304 1 57 1 135 1 310 1 60 1 216 2 312 2 140 4 141 1 63 1 334 2 146 1 220 1 361 1 242 1 19 1 
60 1 310 1 0 2 20 2 312 2 216 2 140 4 141 1 322 1 63 1 300 1 28 2 334 2 220 1 106 2 361 1 304 1 57 1 242 1 135 1 19 1 
276 1 321 1 208 1 300 1 323 1 27 1 28 1 106 1 159 1 326 1 33 1 135 1 235 1 136 1 60 1 310 1 264 1 328 1 217 1 140 2 169 1 334 2 335 1 220 1 93 1 120 1 242 1 199 1 
321 1 208 1 300 1 323 1 28 1 106 1 159 1 326 1 33 1 135 1 235 1 136 1 60 1 310 1 264 1 328 1 217 1 140 2 36 1 169 1 89 1 334 2 335 1 220 1 93 1 120 1 336 1 242 1 
0 2 20 2 322 1 300 1 28 2 106 2 304 1 57 1 135 1 310 1 60 1 216 2 312 2 140 4 141 1 63 1 334 2 220 1 361 1 273 1 242 1 19 1 
0 2 20 2 245 1 276 1 321 1 322 1 154 1 300 1 323 1 27 1 28 2 106 2 304 1 159 1 57 1 135 1 235 1 136 1 60 1 310 1 328 1 312 2 216 2 217 1 140 4 141 1 63 1 169 1 334 2 335 1 220 1 361 1 93 1 120 1 242 1 19 1 199 1 
0 1 20 1 322 1 300 1 28 1 256 1 106 2 304 1 57 1 135 1 310 1 60 1 328 1 216 1 312 1 140 3 63 1 168 1 334 2 220 1 361 1 93 1 96 1 273 1 122 1 242 1 380 1 200 1 19 1 
20 6 204 1 322 3 300 2 282 1 28 10 210 1 106 9 304 3 57 3 110 1 135 2 83 1 309 1 310 2 236 1 11 2 288 1 140 19 141 3 238 1 63 3 291 1 334 4 220 2 361 3 94 2 243 2 274 1 19 3 
339 1 20 4 70 1 153 1 343 1 322 2 300 3 282 1 28 12 130 1 106 14 304 3 57 3 135 3 83 2 310 3 309 2 236 1 11 2 288 1 140 26 141 2 316 1 238 2 63 2 291 2 334 6 220 3 361 2 94 1 295 2 243 4 274 1 19 3 
339 1 70 1 20 8 71 1 204 1 248 1 153 1 343 1 322 4 300 3 282 1 28 21 130 1 210 1 106 20 304 4 261 1 57 4 135 3 83 3 309 3 310 3 236 1 11 4 288 1 140 41 141 4 316 1 238 2 63 4 291 1 334 6 220 3 294 1 361 5 94 1 295 1 14 1 150 1 244 1 243 4 274 1 19 5 
339 1 70 1 20 7 71 1 204 1 248 1 153 1 343 1 322 3 300 4 282 1 28 18 130 1 210 1 106 20 304 4 261 1 57 4 135 4 83 3 309 3 310 4 236 1 11 4 288 1 140 38 141 4 316 1 238 2 63 3 291 1 334 8 220 4 294 1 361 4 94 1 295 2 14 1 150 1 244 1 243 4 274 1 19 5 
339 1 70 1 20 14 71 1 204 2 248 1 153 1 343 1 322 7 300 2 282 1 26 2 28 25 130 1 106 27 304 7 261 1 57 7 135 2 83 4 309 2 310 2 236 1 11 4 288 1 140 52 141 7 316 1 238 1 63 7 291 1 334 4 220 2 294 1 361 8 94 1 295 1 14 1 244 1 243 4 274 1 19 8 
329 1 265 1 35 1 183 1 184 1 190 1 157 1 54 1 338 1 176 1 
368 1 350 1 
188 1 329 1 35 1 157 1 54 1 338 1 176 1 281 1 152 1 
114 1 329 1 265 1 127 1 35 1 190 1 87 1 344 1 176 1 103 1 90 1 132 2 183 1 54 1 157 1 364 1 365 1 338 1 
114 1 329 1 265 1 127 1 35 1 190 1 87 1 344 1 176 1 103 1 90 1 132 2 183 1 54 1 157 1 364 1 365 1 338 1 
114 1 329 1 265 1 127 1 35 1 190 1 87 1 344 1 176 1 103 1 90 1 132 2 183 1 54 1 157 1 364 1 365 1 338 1 
287 1 277 1 18 1 
287 1 277 1 18 1 
175 1 263 1 
175 1 263 1 18 1 
219 1 2 1 
99 1 2 1 208 1 344 1 176 1 103 1 155 1 368 1 256 2 132 1 305 1 157 1 54 1 350 1 328 2 329 1 139 1 35 1 87 1 64 1 219 1 93 2 96 2 364 1 197 1 338 1 380 2 
287 1 277 1 
175 1 263 1 18 1 
321 2 280 1 24 2 300 1 8 1 28 1 179 1 106 1 159 2 135 1 326 1 235 1 60 1 310 1 264 1 328 2 61 1 217 2 140 2 169 1 91 1 334 2 335 1 220 1 93 2 120 1 95 1 96 2 273 1 242 1 173 1 
137 2 245 1 321 2 217 2 333 1 253 1 38 1 230 1 169 1 292 1 335 1 31 1 369 1 107 1 363 1 362 1 194 1 159 2 214 1 
137 2 138 1 321 1 217 1 333 1 253 1 38 1 230 1 169 1 292 1 335 1 31 1 369 1 363 1 362 1 194 1 159 1 
321 1 217 1 7 1 169 1 302 1 335 1 107 1 362 1 120 1 259 1 159 1 33 1 235 1 186 1 
137 2 321 1 217 1 333 1 253 1 38 1 230 1 169 1 292 1 335 1 31 1 369 1 107 1 363 1 362 1 194 1 159 1 214 1 
267 1 
114 1 347 1 376 1 317 1 85 1 53 1 234 1 
126 1 223 1 252 1 47 1 344 1 81 1 234 1 158 1 56 1 114 2 376 1 85 1 87 1 39 1 170 1 240 1 148 1 
245 1 205 1 252 6 45 2 344 5 345 1 48 2 347 1 49 3 346 1 108 1 304 2 53 1 262 1 158 4 56 4 159 3 57 2 351 1 307 1 114 8 115 2 311 2 217 3 352 2 169 3 117 2 170 4 361 2 120 10 69 2 19 2 126 3 321 3 223 12 72 6 322 2 75 2 227 2 181 2 81 4 185 2 234 9 33 1 235 3 136 3 376 2 84 2 237 6 85 8 87 5 39 5 378 2 335 4 
126 1 339 1 70 1 223 6 252 3 153 1 45 1 72 5 322 2 344 1 227 2 130 1 304 2 81 2 234 8 158 2 56 2 57 2 351 1 83 1 309 1 114 5 115 1 162 1 376 2 237 5 11 1 85 5 316 1 87 1 39 1 170 2 361 2 123 1 19 2 
21 1 248 1 206 1 45 1 227 2 344 1 228 1 256 1 180 1 32 1 81 1 158 1 234 2 56 1 161 1 328 1 165 1 85 2 87 1 168 1 170 1 93 1 294 1 361 1 96 1 380 1 244 1 19 2 
114 1 376 1 85 1 170 1 347 1 81 1 53 1 158 1 234 1 56 1 
114 5 237 5 223 10 85 5 252 5 45 1 72 5 322 2 227 2 117 1 361 2 304 2 234 5 57 2 19 2 
114 1 126 1 376 1 344 1 87 1 39 1 
126 2 224 1 321 4 344 3 302 1 348 1 108 1 81 2 262 2 158 2 234 2 56 2 159 4 33 2 351 2 235 1 186 1 160 1 115 2 217 4 85 2 87 3 169 1 39 4 170 1 335 1 171 1 120 1 172 1 
321 1 276 1 208 1 300 1 228 1 27 1 323 1 28 1 256 2 159 1 33 1 135 1 235 1 310 1 136 1 60 1 264 1 328 3 217 1 140 1 168 2 169 1 334 2 335 1 220 1 93 3 96 2 120 1 297 1 242 1 380 2 199 1 
114 4 115 1 376 2 237 2 223 4 252 2 85 2 72 2 170 1 81 1 261 1 158 1 234 1 56 1 351 1 
340 1 35 1 338 1 
340 1 35 1 338 1 
265 1 2 1 35 1 42 1 338 1 
340 1 35 1 338 1 
233 1 35 1 338 1 
233 1 35 1 338 1 
233 1 35 1 338 1 
35 1 338 1 
329 1 176 1 
310 2 20 3 71 1 140 8 248 1 141 2 63 1 300 2 28 4 334 4 106 4 220 2 361 1 294 1 295 1 14 1 261 1 135 2 19 1 244 1 
28 3 20 2 317 1 106 3 71 1 361 1 294 1 140 6 248 1 141 2 14 1 261 1 19 1 244 1 
310 1 20 2 140 4 141 1 322 1 300 1 63 1 28 2 334 2 220 1 106 2 361 1 9 1 304 1 57 1 135 1 19 1 
309 1 20 2 11 2 204 1 140 7 141 1 322 1 63 1 28 4 106 3 361 1 304 1 57 1 83 1 19 1 
20 9 71 1 204 1 248 2 322 2 300 2 26 1 301 1 28 12 106 11 371 1 304 2 261 1 57 2 83 2 135 2 310 2 11 2 140 23 141 5 63 4 334 4 220 2 294 1 361 3 295 2 14 1 244 2 19 3 
28 1 11 1 140 1 
106 1 140 1 83 1 
310 1 20 3 140 6 141 2 322 1 300 1 63 1 117 1 334 2 28 3 220 1 106 3 361 1 9 1 304 1 57 1 135 1 19 1 
339 1 70 1 20 2 153 1 322 2 300 1 28 6 130 1 106 6 304 2 57 2 83 1 135 1 309 1 310 1 11 1 288 1 140 12 141 1 316 1 63 1 334 2 220 1 361 2 19 2 
20 2 140 6 248 1 141 1 63 1 28 3 106 3 294 1 361 1 19 1 244 1 
310 1 20 2 71 1 248 1 140 3 141 1 63 1 300 1 301 1 28 2 334 2 106 1 220 1 295 1 14 1 135 1 244 1 
310 1 20 5 288 1 206 1 248 2 140 10 141 3 300 1 63 2 334 2 28 5 220 1 106 5 294 1 361 2 135 1 244 2 19 2 
310 1 20 1 288 1 140 2 300 1 63 1 334 2 220 1 106 2 304 1 135 1 19 1 
310 1 20 2 288 1 140 4 141 1 322 1 300 1 63 1 28 2 334 2 220 1 106 2 361 1 304 1 57 1 135 1 19 1 
310 3 20 2 288 1 140 3 248 1 141 1 300 3 63 1 301 1 28 2 334 6 210 1 220 3 106 1 295 1 135 3 244 1 
20 12 71 1 246 1 204 1 101 1 248 3 322 3 300 5 301 1 28 18 210 1 106 16 9 1 304 3 261 1 57 3 135 5 83 3 309 1 310 5 11 4 313 1 288 1 140 34 141 7 63 5 334 10 220 5 294 2 361 5 295 2 14 1 244 3 19 5 
70 1 20 2 71 1 248 1 300 1 28 4 106 4 261 1 83 1 135 1 309 1 310 1 11 1 288 1 140 8 141 2 334 2 220 1 361 1 294 1 14 1 19 1 244 1 
70 1 20 3 71 1 204 1 248 1 300 2 28 5 106 6 9 1 304 1 261 1 57 1 135 2 83 1 309 1 310 2 11 2 288 1 140 11 141 2 63 1 334 4 220 2 361 1 294 1 14 1 244 1 19 2 
339 1 70 1 20 4 71 1 248 1 153 1 322 2 300 3 28 10 130 1 106 9 9 1 304 2 261 1 57 2 83 1 135 3 309 1 310 3 11 1 288 1 140 19 141 3 316 1 63 1 334 6 220 3 294 1 361 3 295 1 14 1 244 1 19 3 
339 1 70 1 20 5 71 1 248 1 153 1 322 1 300 3 28 7 130 1 106 10 9 1 304 2 261 1 57 2 83 1 135 3 309 1 310 3 11 1 288 1 140 17 141 3 316 1 63 2 334 6 220 3 294 1 361 2 295 1 14 1 244 1 19 3 
70 1 20 2 71 1 248 1 300 1 28 4 106 4 261 1 83 1 135 1 309 1 310 1 11 1 288 1 140 8 141 2 334 2 220 1 361 1 294 1 14 1 19 1 244 1 
339 1 70 1 20 2 153 1 322 2 300 1 28 6 130 1 106 6 304 2 57 2 83 1 135 1 309 1 310 1 11 1 288 1 140 12 141 1 316 1 63 1 334 2 220 1 361 2 19 2 
339 1 70 1 20 5 71 1 248 1 153 1 322 1 300 4 28 8 130 1 106 10 9 1 304 2 261 1 57 2 135 4 83 1 309 1 310 4 11 1 288 1 140 18 141 3 316 1 63 2 334 8 220 4 294 1 361 2 295 2 14 1 244 1 19 3 
339 1 70 1 20 6 153 1 322 2 300 4 28 7 130 1 210 1 106 9 304 3 57 3 135 4 83 1 309 1 310 4 11 1 288 1 140 16 141 3 316 1 63 3 334 8 220 4 361 2 295 2 19 3 
20 6 71 1 140 7 248 3 141 3 63 3 28 4 106 3 361 1 294 1 14 2 244 3 19 1 
339 1 70 1 20 4 71 1 248 1 153 1 322 1 300 4 28 8 130 1 210 1 106 10 304 2 261 1 57 2 135 4 83 1 309 1 310 4 11 1 288 1 140 18 141 3 316 1 63 1 334 8 220 4 294 1 361 2 295 2 14 1 244 1 19 3 
118 1 328 1 163 1 93 1 96 1 208 1 58 1 
328 1 163 1 208 1 73 1 232 1 118 1 93 1 96 1 10 1 121 1 58 1 113 1 
302 1 335 1 317 1 217 1 321 1 120 1 159 1 33 1 169 1 235 1 186 1 
136 1 328 2 321 1 217 1 208 1 169 1 323 1 27 1 105 1 335 1 256 1 93 2 120 1 96 1 159 1 380 1 33 1 235 1 
136 2 311 1 328 2 321 1 217 1 208 1 169 1 323 1 27 1 105 1 335 1 370 1 256 1 93 2 181 1 32 1 120 3 96 2 262 1 159 1 111 1 380 2 235 2 
321 2 208 1 323 1 105 1 256 1 370 1 32 1 181 1 262 1 159 2 111 1 235 2 136 2 311 1 328 2 217 2 169 1 89 1 358 1 335 1 93 2 96 2 120 3 380 2 
321 3 344 2 49 1 211 1 181 1 262 1 159 3 308 1 33 1 235 1 136 1 114 1 311 1 376 1 217 3 352 1 87 2 169 1 39 1 378 1 358 1 335 1 120 4 
114 1 136 1 311 1 376 1 321 3 217 3 352 1 87 2 344 2 378 1 39 1 169 1 48 1 358 1 49 1 335 1 181 1 120 4 262 1 159 3 33 1 235 1 
335 1 215 1 217 1 321 1 159 1 169 1 
136 1 215 1 245 1 321 7 217 7 22 1 251 1 314 1 24 1 76 1 209 1 169 2 91 1 145 1 335 3 363 1 120 3 159 6 33 2 307 1 235 2 
0 1 245 1 248 1 208 2 154 1 300 2 105 1 256 1 106 3 261 1 159 1 310 2 60 2 312 1 216 1 217 1 353 1 169 1 220 2 361 1 120 1 14 1 273 1 19 1 20 2 71 1 276 1 321 1 280 1 27 1 323 1 28 3 135 2 235 1 136 1 328 2 140 6 141 2 334 4 335 1 93 2 294 1 96 1 242 2 380 1 199 1 244 1 
126 1 321 1 344 3 48 1 347 1 49 1 108 1 81 2 53 1 185 1 234 1 158 2 159 1 56 2 33 1 114 1 376 1 84 1 217 1 139 1 352 1 85 1 87 3 39 2 378 1 170 2 120 2 69 1 
136 1 245 1 215 1 321 2 217 2 352 1 345 1 169 1 335 2 120 2 159 2 307 1 235 1 
245 1 321 4 217 4 169 1 358 1 302 1 30 1 335 1 120 1 159 4 33 1 235 1 186 1 
136 1 321 2 217 2 314 1 169 1 178 1 145 1 335 2 120 1 262 1 159 2 366 1 235 1 151 1 
137 1 335 1 369 1 217 1 321 1 159 1 230 1 33 1 169 1 292 1 
245 1 321 2 217 2 61 1 169 1 91 1 335 1 363 1 120 1 159 2 235 1 
245 1 321 5 217 5 251 1 169 2 209 1 302 1 91 1 30 1 335 2 120 3 262 1 159 4 33 1 235 2 186 1 
245 1 321 5 217 5 169 2 209 1 302 1 91 1 30 1 335 2 120 3 262 1 159 4 318 1 33 1 235 2 186 1 
136 1 328 2 321 1 217 1 208 1 169 1 323 1 89 1 105 1 335 1 256 1 93 2 120 1 96 1 159 1 380 1 33 1 235 1 
136 1 321 1 217 1 22 1 314 1 169 1 145 1 335 2 120 1 262 1 159 1 307 1 235 1 
328 1 128 1 179 1 93 1 95 1 96 1 109 1 173 1 59 1 
212 1 78 1 59 1 
208 1 109 1 128 1 357 1 59 1 
114 1 376 1 139 1 208 1 128 2 87 2 344 2 378 1 78 1 357 2 104 1 283 1 370 1 359 1 32 1 212 1 109 2 111 1 59 1 
255 1 317 1 52 1 239 1 
255 1 52 1 306 1 74 1 55 1 319 1 239 1 
43 1 303 1 55 1 
4 1 74 3 239 1 231 1 255 1 12 1 119 1 52 1 306 1 55 3 319 1 222 2 
255 1 164 1 52 1 306 1 225 1 74 2 55 2 319 1 239 1 
137 1 74 1 38 1 231 1 292 1 255 1 372 1 306 1 296 1 55 1 319 1 
255 1 306 1 74 1 55 1 319 1 239 1 231 1 
52 1 306 1 74 1 55 1 319 1 239 2 231 1 
247 1 74 2 239 1 231 1 255 1 51 1 40 1 306 2 55 2 319 2 
225 2 74 3 299 1 239 1 25 1 231 1 255 2 52 1 372 1 306 1 55 3 319 1 17 1 
137 2 225 1 74 2 38 1 239 1 230 1 231 1 292 1 193 1 255 1 31 1 52 1 306 1 55 2 319 1 
164 1 225 2 74 4 299 1 239 1 231 1 144 1 255 2 52 1 372 1 306 2 55 4 319 2 
255 1 52 1 306 1 74 1 55 1 319 1 239 1 231 1 
4 1 225 2 74 4 299 1 239 2 12 1 255 3 349 1 52 2 372 1 306 1 55 4 222 1 319 1 
255 1 52 1 250 1 306 1 225 1 133 1 74 2 55 2 374 1 319 1 239 1 231 1 
3 1 4 2 74 3 239 1 231 1 12 1 255 1 52 1 306 1 55 3 319 1 222 2 
255 2 92 1 284 1 315 2 
5 1 306 1 74 1 55 1 319 1 231 1 
255 1 52 1 306 1 225 1 74 2 55 2 17 1 319 1 239 1 231 1 
286 1 
255 1 52 1 306 1 74 1 55 1 319 1 239 1 231 1 
255 1 52 1 306 1 225 1 74 3 55 3 17 1 222 1 319 1 239 1 231 1 
255 1 349 1 372 1 299 1 
255 1 239 1 

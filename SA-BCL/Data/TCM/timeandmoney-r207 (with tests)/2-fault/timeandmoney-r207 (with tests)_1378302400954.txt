#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 145 148 113 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (48,149) 364 26 158 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 145 196 27 251 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 145 196 27 251 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 145 196 27 251 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 145 196 27 251 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 145 3 27 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 145 148 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 145 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 145 3 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
359 2 310 2 91 1 239 3 30 2 241 1 103 1 160 3 226 1 46 1 299 1 110 1 8 1 
72 1 283 1 91 1 30 2 323 1 226 2 36 1 258 2 8 1 359 2 236 1 238 1 310 5 239 9 240 2 263 1 312 1 241 4 62 1 103 1 104 1 160 9 264 2 46 1 299 6 110 3 49 1 164 2 
72 1 283 1 91 1 30 2 323 1 226 2 36 1 258 2 8 1 359 2 236 1 238 1 310 5 239 9 240 2 263 1 312 1 241 4 62 1 103 1 104 1 160 9 264 2 46 1 299 6 110 3 49 1 164 2 
72 1 283 1 91 1 30 2 323 1 226 2 36 1 258 2 8 1 359 2 236 1 238 1 310 6 239 10 240 2 263 1 312 1 241 5 62 1 103 1 104 1 160 10 264 2 46 1 299 7 110 4 49 1 164 2 
72 1 283 1 91 1 30 2 226 2 36 1 258 2 8 1 359 2 236 1 238 1 310 4 239 7 240 1 263 1 312 1 241 3 62 1 103 1 104 1 160 7 264 2 46 1 299 4 110 2 49 1 164 2 
359 1 72 1 283 1 310 3 91 1 239 4 240 2 30 1 241 2 323 1 103 1 264 1 160 4 46 1 299 3 110 1 164 1 258 1 
359 1 310 1 91 1 239 2 312 1 30 1 296 1 103 1 160 2 226 1 264 1 46 1 270 1 164 1 49 1 265 1 
72 1 283 1 91 1 30 2 323 1 226 1 37 1 258 1 8 1 359 2 236 1 131 1 310 5 239 9 240 2 241 4 62 1 103 1 160 9 264 1 46 1 299 7 110 3 164 1 
72 1 283 1 91 1 30 2 323 1 226 1 37 1 258 1 8 1 359 2 236 1 131 1 310 5 239 9 240 2 241 4 62 1 103 1 160 9 264 1 46 1 299 7 110 3 164 1 
71 1 318 1 234 1 42 1 92 1 189 1 256 1 355 1 150 1 243 1 259 1 192 1 151 1 68 1 
22 1 
39 1 318 2 71 2 22 1 75 1 355 1 59 1 34 1 
89 2 308 1 71 5 318 5 248 2 75 1 199 1 76 1 268 1 59 2 272 1 34 1 228 2 22 1 367 1 355 2 330 1 357 1 216 1 
246 1 22 1 75 1 
247 2 22 1 222 1 
234 2 171 1 189 2 42 2 150 1 192 2 92 2 151 2 
116 1 282 1 171 1 319 1 220 1 172 2 173 1 92 2 325 1 122 1 254 1 176 1 352 2 94 1 257 2 150 1 81 2 127 1 151 3 234 3 100 1 261 1 363 1 336 2 42 2 161 1 18 1 298 1 189 2 342 1 300 1 192 2 278 1 50 1 344 1 346 1 218 1 
234 1 189 1 256 1 42 1 150 1 192 1 259 1 92 1 151 1 68 1 
318 1 71 1 75 1 120 1 92 1 256 1 150 1 259 1 206 1 151 2 234 2 208 1 42 2 209 1 189 1 106 1 22 1 214 1 243 1 192 1 68 2 
71 2 318 2 75 1 120 1 92 2 256 1 150 1 259 1 206 1 151 2 234 2 42 2 209 1 189 2 106 1 22 1 192 2 243 1 68 2 
318 1 71 1 355 1 59 1 121 1 
318 2 71 2 22 1 75 1 355 1 59 1 34 1 66 1 
318 1 71 1 59 1 
234 2 100 1 319 1 363 1 220 1 261 1 1 1 336 1 42 1 172 1 122 1 325 1 352 1 298 1 189 1 94 1 48 1 192 1 151 2 232 1 
314 1 234 2 171 2 189 1 42 2 192 1 92 1 151 2 159 1 
48 1 364 1 339 1 
234 1 171 1 100 1 267 1 261 1 220 1 363 1 319 1 336 1 172 1 325 1 122 1 352 1 298 1 94 1 151 1 
246 1 171 1 
234 5 208 1 171 1 58 1 1 2 42 5 340 1 92 1 159 1 189 4 192 4 151 5 232 1 152 1 
234 2 189 2 256 1 42 2 192 2 349 1 151 2 68 1 
234 3 171 1 189 3 1 1 42 3 192 3 92 1 151 3 
234 1 189 1 256 1 42 1 192 1 151 1 68 1 
314 1 234 1 189 1 42 1 192 1 92 1 151 1 68 1 159 1 
282 1 318 1 54 1 319 1 1 1 92 2 325 1 94 1 257 1 150 1 206 1 289 1 151 4 261 1 100 1 336 1 209 1 159 1 161 1 18 1 298 1 106 1 342 1 344 1 346 1 68 2 218 1 116 1 71 1 220 1 171 1 172 1 120 1 173 1 122 1 352 1 305 1 81 2 232 1 234 4 363 1 42 3 189 3 192 3 50 1 
234 2 171 1 208 1 189 1 1 1 42 2 192 1 340 1 151 2 
318 1 71 1 234 3 1 2 42 3 209 1 120 1 92 1 159 1 189 3 305 1 106 1 22 1 192 3 280 1 206 1 151 3 68 1 232 1 
234 2 1 1 42 2 339 1 92 1 159 1 189 2 48 1 192 2 151 2 
234 1 171 1 261 1 220 1 363 1 319 1 100 1 336 1 172 1 325 1 122 1 352 1 298 1 94 1 151 1 
234 1 171 1 220 1 363 1 319 1 100 1 336 1 181 1 172 1 348 1 325 1 122 1 352 1 298 1 151 1 
282 1 116 2 198 1 252 1 254 2 4 1 227 1 354 1 149 1 257 4 81 2 358 1 364 2 339 2 185 1 18 1 19 1 342 1 107 1 48 2 50 1 344 1 244 1 346 1 
234 1 189 1 106 1 42 1 192 1 349 1 151 1 68 1 
153 1 156 1 237 1 
98 1 360 1 156 2 237 2 166 1 345 1 
156 1 237 1 
156 1 237 1 
360 1 166 1 
360 1 166 1 
360 1 166 1 
138 1 156 1 237 1 
138 1 156 1 237 1 
138 1 156 1 237 1 
70 1 156 1 237 1 
70 1 156 1 237 1 
70 1 156 1 237 1 
318 1 71 1 171 1 28 1 117 1 140 1 32 1 353 1 79 1 151 2 153 1 234 2 155 1 156 1 237 1 13 1 42 2 183 1 184 1 189 2 188 1 135 1 192 2 52 1 
98 1 334 1 71 2 318 2 237 2 156 2 73 1 117 2 13 2 157 1 275 1 353 3 88 1 188 2 22 1 135 1 301 1 52 2 370 2 
258 1 164 2 265 1 253 1 67 2 
264 1 164 1 258 1 
264 1 164 1 265 1 
258 2 164 3 265 1 67 1 253 1 178 1 
258 1 164 2 265 1 286 1 67 1 253 1 
89 1 247 3 318 5 71 5 219 1 248 1 140 1 222 1 75 1 76 2 199 3 34 1 354 1 228 1 327 1 79 1 204 1 355 4 358 1 288 1 308 1 365 2 59 1 183 1 185 1 186 1 133 1 276 2 21 1 22 2 111 2 244 1 
89 2 247 9 318 9 71 9 219 2 248 2 56 1 222 3 75 1 76 6 199 8 121 5 78 1 34 1 269 1 354 3 228 2 327 2 79 4 355 7 82 5 358 3 288 3 291 1 308 1 11 1 338 1 59 6 185 3 276 6 22 5 21 1 111 6 216 1 244 3 
89 1 318 3 71 3 219 1 247 4 248 1 75 1 222 2 199 3 76 2 354 1 228 1 327 1 79 1 204 1 355 2 288 1 358 1 365 1 185 1 186 1 276 2 22 3 111 2 216 1 244 1 
89 1 247 7 318 4 71 4 219 1 248 1 56 1 75 1 222 3 199 5 76 4 354 2 228 1 327 1 79 2 204 1 355 3 288 2 358 2 291 1 338 1 365 2 185 2 186 1 276 4 22 4 111 4 216 1 244 2 
109 1 
246 1 100 1 139 1 
5 1 100 1 
100 1 298 1 319 1 
100 1 260 1 
100 1 298 1 
100 3 298 1 319 1 139 2 165 1 85 1 
361 1 116 3 266 1 195 1 271 1 235 1 362 1 198 2 41 1 252 3 297 1 185 1 254 4 124 1 328 1 23 2 257 7 358 1 
254 2 116 1 235 1 148 1 55 1 41 2 257 3 23 1 217 1 145 1 113 1 
282 2 116 4 266 1 198 3 252 4 2 1 254 5 328 1 257 9 81 4 358 1 361 1 235 1 309 1 271 1 362 1 41 1 212 1 297 1 185 1 18 2 23 2 50 2 346 2 
361 1 116 3 266 1 271 1 235 1 362 1 198 2 41 1 252 3 297 1 185 1 254 4 124 1 328 1 23 2 257 7 358 1 
361 1 116 3 266 1 271 1 235 1 362 1 198 2 41 1 252 3 297 1 185 1 254 4 124 1 328 1 23 2 257 7 358 1 
169 1 197 1 220 1 249 2 172 1 30 1 350 2 122 1 325 1 226 2 352 1 205 1 359 1 290 1 130 1 100 1 336 1 239 1 60 2 160 1 298 1 112 1 303 1 
220 1 249 1 74 1 172 1 30 1 350 1 122 1 226 1 352 1 258 1 178 1 97 1 359 1 101 1 336 1 40 1 239 1 60 1 273 1 341 1 103 1 264 1 160 1 134 1 164 2 265 1 
220 1 249 1 74 1 91 1 172 1 30 1 350 1 122 1 226 1 352 1 258 1 178 1 359 1 101 1 310 1 336 1 40 1 239 2 60 1 262 1 273 1 341 1 103 1 264 1 160 2 46 1 299 1 134 1 164 2 265 1 
220 1 249 1 91 1 172 1 30 1 350 1 122 1 226 1 352 1 258 1 178 1 38 1 97 1 359 1 101 1 310 1 336 1 40 1 239 3 60 1 273 1 341 1 264 1 160 3 46 1 299 2 134 1 164 2 265 1 303 1 
220 1 249 1 91 1 172 1 350 1 122 1 226 1 352 1 258 1 38 1 178 1 97 1 101 1 310 1 336 1 40 1 239 2 60 1 341 1 160 2 264 1 46 1 299 2 164 2 265 1 
182 1 
89 1 90 1 247 2 318 5 248 1 199 2 202 4 325 2 329 1 205 1 206 1 151 1 154 2 335 2 100 1 208 1 12 2 336 2 337 2 209 1 59 6 63 1 298 1 106 1 22 3 214 1 167 1 68 1 219 1 71 5 221 1 220 1 118 2 222 2 75 2 172 2 76 2 120 1 224 2 34 3 122 1 304 1 352 2 228 1 126 1 307 1 128 1 83 2 308 1 130 1 234 1 132 1 42 1 45 1 279 1 
90 1 318 3 71 3 75 2 118 1 120 1 34 1 202 2 329 1 126 1 206 1 151 1 128 1 39 1 234 1 208 1 42 1 209 1 59 2 63 1 106 1 22 2 214 1 68 1 
128 1 83 1 90 1 71 2 318 2 234 1 208 1 75 2 42 1 209 1 120 1 202 3 63 1 106 1 22 2 329 1 126 1 214 1 206 1 151 1 68 1 
90 1 318 3 71 3 75 2 118 1 120 1 34 1 202 3 329 1 126 1 206 1 151 1 128 1 83 1 39 1 234 1 208 1 12 1 42 1 209 1 59 2 63 1 106 1 22 2 214 1 68 1 
89 1 90 1 318 5 137 1 248 1 250 1 199 1 92 1 202 5 256 1 329 1 150 1 259 1 7 1 206 1 151 2 154 2 335 2 208 1 12 4 337 2 209 1 59 7 63 1 106 1 22 4 214 1 167 1 68 2 170 1 71 5 75 4 118 4 222 2 76 1 120 1 34 3 224 2 228 1 126 1 128 1 83 3 308 1 234 2 39 1 42 2 189 1 192 1 243 1 279 1 51 1 
89 1 90 1 318 4 247 2 248 1 199 1 202 4 329 1 206 1 151 1 154 2 335 2 208 1 12 2 337 2 209 1 59 4 63 1 106 1 22 4 214 1 167 1 68 1 71 4 75 3 222 2 118 2 76 1 120 1 224 2 34 2 228 1 126 1 307 1 128 1 83 2 308 1 234 1 42 1 279 1 
89 1 170 1 90 1 137 1 318 4 71 4 248 1 118 2 222 2 75 3 76 1 199 1 120 1 34 2 224 2 202 4 228 1 329 1 126 1 7 1 206 1 151 1 128 1 83 2 154 2 308 1 335 2 234 1 208 1 12 2 337 2 42 1 209 1 59 4 63 1 106 1 22 3 214 1 167 1 279 1 68 1 
89 1 170 1 90 1 137 1 318 4 71 4 248 1 118 2 222 2 75 3 76 1 199 1 120 1 34 2 224 2 202 4 228 1 329 1 126 1 7 1 206 1 151 1 128 1 83 2 154 2 308 1 335 2 234 1 208 1 12 2 337 2 42 1 209 1 59 4 63 1 106 1 22 3 214 1 167 1 279 1 68 1 
89 1 90 1 247 2 137 1 318 4 71 4 248 1 118 2 75 3 199 1 76 1 120 1 321 2 34 2 224 2 202 4 146 2 228 1 329 1 80 1 126 1 206 1 151 1 128 1 83 2 154 2 308 1 234 1 208 1 12 2 42 1 209 1 102 1 59 4 63 1 20 1 106 1 22 3 214 1 167 1 68 1 
89 1 170 1 90 1 137 1 318 4 71 4 248 1 250 1 222 2 75 3 118 3 76 1 199 1 120 1 34 2 224 2 202 5 228 1 329 1 126 1 7 1 206 1 151 1 128 1 83 3 154 2 308 1 335 2 234 1 208 1 12 3 337 2 42 1 209 1 59 5 63 1 106 1 22 3 214 1 167 1 279 1 68 1 
89 1 170 1 90 1 137 1 318 4 71 4 248 1 250 1 222 2 75 3 118 3 76 1 199 1 120 1 34 2 224 2 202 5 228 1 329 1 126 1 7 1 206 1 151 1 128 1 83 3 154 2 308 1 335 2 234 1 208 1 12 3 337 2 42 1 209 1 59 5 63 1 106 1 22 3 214 1 167 1 279 1 68 1 
89 1 90 1 318 4 247 2 248 1 199 1 321 2 202 4 146 2 329 1 206 1 151 1 154 2 208 1 12 2 209 1 59 4 63 1 106 1 22 3 214 1 167 1 68 1 71 4 75 3 118 2 76 1 120 1 224 2 34 2 228 1 126 1 80 1 307 1 128 1 83 2 308 1 234 1 42 1 
115 1 282 2 116 1 220 2 1 1 172 8 119 1 225 1 122 2 325 2 352 8 176 1 254 1 227 1 257 2 205 1 81 4 332 1 151 1 97 1 234 1 130 1 100 3 336 7 42 1 262 1 213 1 18 2 187 1 189 1 298 2 342 2 191 1 300 2 192 1 50 2 344 2 346 2 218 1 
282 1 116 2 198 1 252 1 92 1 144 1 254 1 354 1 257 3 81 2 288 1 358 1 151 1 234 1 364 1 292 1 42 1 339 1 159 1 185 1 18 1 189 1 342 1 48 1 192 1 50 1 344 1 346 1 244 1 
246 1 266 1 282 1 116 3 198 2 171 2 252 2 254 3 227 1 328 1 257 6 81 2 358 1 361 1 271 1 364 1 339 1 297 1 185 1 18 1 342 1 48 1 23 1 50 1 344 1 346 1 
282 1 116 1 55 1 364 3 158 1 144 1 254 1 18 1 342 1 48 3 257 2 81 2 50 1 217 1 344 1 346 1 26 1 
282 1 116 1 171 1 319 1 220 1 267 1 1 1 172 1 141 1 144 1 122 1 325 1 352 1 176 1 254 1 94 1 147 1 257 2 81 2 151 2 232 1 234 2 100 1 363 1 261 1 336 1 42 1 339 1 293 1 18 1 298 1 189 1 342 1 192 1 50 1 344 1 346 1 218 1 
282 3 53 2 198 4 319 2 1 1 252 8 200 1 144 1 93 1 325 1 254 10 328 1 94 2 257 20 288 2 151 3 97 1 261 2 100 2 336 3 339 7 297 1 18 3 298 2 342 3 23 1 344 3 346 3 218 1 302 2 266 1 116 10 171 2 220 2 172 3 173 2 33 2 122 2 176 1 352 3 354 2 81 6 358 3 232 1 361 1 271 1 234 3 363 2 362 4 42 1 364 7 44 2 185 3 189 1 48 7 192 1 50 3 244 2 371 1 
282 1 362 1 252 1 364 1 339 1 254 2 18 1 227 1 19 1 354 1 342 1 48 1 257 2 81 2 50 1 344 1 346 1 358 1 
282 1 116 2 198 1 252 1 364 1 339 1 185 1 18 1 227 1 4 1 342 1 48 1 257 2 81 2 50 1 344 1 346 1 244 1 
282 1 116 2 198 1 252 2 254 2 227 1 354 1 257 4 81 2 358 1 288 1 362 1 364 2 339 2 185 1 18 1 342 1 48 2 50 1 344 1 346 1 244 1 
282 1 362 1 252 1 364 1 339 1 254 2 18 1 19 1 354 1 342 1 48 1 257 2 81 2 50 1 332 1 344 1 346 1 358 1 
282 1 116 2 198 1 252 1 364 1 339 1 185 1 18 1 4 1 342 1 48 1 257 2 81 2 50 1 332 1 344 1 346 1 244 1 
282 1 116 2 198 1 252 2 254 2 354 1 257 4 81 2 332 1 358 1 288 1 362 1 364 2 339 2 185 1 18 1 342 1 48 2 50 1 344 1 346 1 244 1 
282 1 116 2 198 1 252 2 254 2 354 1 257 4 81 2 358 1 288 1 362 1 364 2 339 2 185 1 18 1 342 1 48 2 50 1 344 1 346 1 244 1 
282 1 116 1 171 1 319 1 220 1 172 1 173 1 122 1 325 1 254 1 176 1 352 1 94 1 257 2 81 2 151 1 234 1 363 1 261 1 100 1 336 1 18 1 298 1 342 1 50 1 344 1 346 1 218 1 
282 1 116 1 171 1 319 1 220 1 348 1 172 1 122 1 325 1 254 1 176 1 352 1 257 2 81 2 151 1 234 1 363 1 100 1 336 1 181 1 18 1 298 1 342 1 50 1 344 1 346 1 245 1 218 1 
282 1 116 2 198 1 252 2 144 1 254 2 354 1 257 4 81 2 358 1 288 1 362 1 364 2 339 2 185 1 18 1 342 1 48 2 50 1 344 1 346 1 244 1 
116 2 282 1 198 1 319 1 220 1 252 2 172 1 173 1 122 1 254 2 352 1 354 1 94 1 257 4 81 2 358 1 288 1 151 1 234 1 362 1 363 1 261 1 100 1 336 1 364 2 339 2 262 1 185 1 18 1 298 1 342 1 48 2 50 1 344 1 244 1 346 1 302 1 
116 1 282 1 252 1 92 1 144 1 201 1 254 2 354 1 257 3 81 2 288 1 358 1 151 1 234 1 362 1 42 1 364 1 339 1 159 1 185 1 18 1 189 1 342 1 48 1 192 1 50 1 344 1 244 1 346 1 
116 2 282 1 27 1 196 1 55 1 251 1 2 1 294 1 145 1 254 2 18 1 257 4 125 1 81 2 50 1 217 1 346 1 
116 2 282 1 27 1 196 1 55 1 251 1 2 1 294 1 145 1 254 2 18 1 257 4 125 1 81 2 50 1 217 1 346 1 
116 2 282 1 27 1 196 1 55 1 251 1 2 1 294 1 145 1 254 2 18 1 257 4 125 1 81 2 50 1 217 1 346 1 
116 2 282 1 27 1 196 1 55 1 251 1 2 1 294 1 145 1 254 2 18 1 257 4 125 1 81 2 50 1 217 1 346 1 
282 1 27 2 116 4 196 2 55 2 251 1 3 1 2 1 145 2 294 2 254 4 18 1 257 8 125 1 81 2 50 1 217 2 346 1 
98 1 156 1 237 1 188 1 117 1 285 1 13 1 157 1 301 1 52 1 
153 1 155 1 
156 1 237 1 188 1 29 1 117 1 13 1 210 1 52 1 194 1 
138 1 14 1 
70 1 108 1 345 1 
98 1 334 1 71 1 318 1 237 1 156 1 73 1 117 1 13 1 157 1 353 2 88 1 188 1 22 1 135 1 301 1 52 1 370 1 
98 1 334 1 71 1 318 1 237 1 156 1 73 1 117 1 13 1 157 1 353 2 88 1 188 1 22 1 135 1 301 1 52 1 370 1 
98 1 334 1 71 1 318 1 237 1 156 1 73 1 117 1 13 1 157 1 353 2 88 1 188 1 22 1 135 1 301 1 52 1 370 1 
138 1 14 1 345 1 
138 1 14 1 345 1 
70 1 108 1 
70 1 108 1 345 1 
28 1 32 1 
318 1 71 1 171 1 28 1 117 1 140 1 32 1 353 1 79 1 355 1 151 2 153 1 234 2 155 1 156 1 237 1 13 1 42 2 183 1 184 1 88 1 188 1 189 2 190 1 192 2 52 1 370 1 
282 1 116 1 220 1 172 2 144 1 225 1 122 1 352 2 176 1 254 1 257 2 81 2 231 1 151 2 180 1 234 2 100 1 336 2 42 2 17 1 18 1 298 1 342 1 191 1 65 1 300 2 50 1 344 1 346 1 168 1 218 1 
130 1 220 1 100 1 336 1 172 1 60 1 122 1 325 1 352 1 255 1 298 1 6 1 205 1 112 1 
97 1 220 1 101 1 336 1 40 1 172 1 60 1 122 1 264 1 352 1 255 1 123 1 134 1 258 1 164 2 230 1 265 1 178 1 
97 1 220 1 101 1 336 2 40 1 172 2 60 1 262 1 122 1 264 1 352 2 255 1 123 1 134 1 258 1 164 2 230 1 265 1 178 1 
97 1 220 1 101 1 336 1 40 1 172 1 60 1 313 1 122 1 264 1 352 1 134 1 258 1 164 2 230 1 265 1 178 1 
57 1 
89 1 308 1 248 1 75 1 76 1 199 1 228 1 22 1 367 1 357 1 
99 1 247 10 222 5 76 5 199 5 44 1 185 2 354 2 276 5 22 5 229 2 111 5 288 2 358 2 244 2 
318 1 71 1 22 1 75 1 59 1 34 1 
89 2 219 2 71 3 318 3 220 1 221 1 248 2 172 4 199 2 76 2 34 2 122 1 325 2 352 4 304 2 228 2 205 1 95 1 308 1 130 1 100 1 336 4 132 1 59 4 105 2 298 1 343 1 216 1 25 1 
246 1 22 1 75 1 367 1 199 1 76 1 357 1 
89 1 247 1 71 1 318 1 248 1 222 1 75 1 76 1 199 1 34 1 228 1 308 1 335 1 337 1 59 1 22 2 279 1 
89 2 0 1 318 2 247 6 319 1 248 2 139 1 199 4 325 1 5 2 206 1 288 1 100 4 336 1 59 2 298 1 64 1 22 3 165 1 111 3 219 1 71 2 220 1 222 3 172 1 76 3 174 1 31 1 34 1 122 2 352 1 354 1 228 2 229 1 358 1 308 2 129 1 311 1 44 1 185 1 86 1 276 3 244 1 
136 1 89 2 219 1 318 1 71 1 247 6 248 2 55 1 222 3 75 2 199 8 76 5 3 1 145 1 34 1 351 1 287 1 304 1 354 2 228 2 229 2 288 2 358 2 99 1 308 2 59 1 61 1 185 2 47 1 276 5 22 5 111 5 368 1 217 1 244 2 
89 1 170 1 318 1 71 1 248 1 76 2 199 2 92 1 256 1 328 1 228 1 229 2 150 1 259 1 358 2 151 1 99 1 308 1 234 1 271 1 42 1 211 1 297 1 185 1 189 1 243 1 192 1 68 1 
116 1 282 1 171 1 220 1 319 1 172 1 173 1 92 2 325 1 122 1 352 1 94 1 257 1 150 1 81 2 151 3 234 3 261 1 363 1 100 1 336 1 42 2 161 1 18 1 189 2 298 1 342 1 192 2 50 1 344 1 346 1 218 1 
89 1 308 1 247 4 219 1 248 1 222 2 75 2 76 2 199 1 304 1 276 2 228 1 22 4 23 1 111 2 
28 1 163 1 117 1 301 1 52 1 
117 1 9 1 52 1 
117 1 9 1 52 1 
117 1 9 1 52 1 
179 1 117 1 52 1 
179 1 117 1 52 1 
179 1 117 1 52 1 
117 1 52 1 
156 1 237 1 
254 1 116 1 282 1 18 1 55 1 257 2 81 2 50 1 217 1 3 1 2 1 145 1 346 1 
282 2 116 1 55 1 2 1 3 1 145 1 254 1 18 2 277 1 257 2 81 4 50 2 217 1 346 2 
136 1 266 1 116 10 282 3 198 3 55 1 252 4 3 1 2 1 145 1 351 1 254 9 354 2 328 1 257 19 81 6 288 2 358 3 361 1 271 1 309 1 362 1 61 1 297 1 185 3 18 3 47 1 277 1 23 1 50 3 217 1 346 3 244 2 
254 1 116 1 282 1 18 1 55 1 257 2 81 2 50 1 217 1 3 1 2 1 145 1 346 1 
254 1 116 1 282 1 18 1 55 1 257 2 81 2 50 1 217 1 3 1 2 1 145 1 346 1 
136 1 116 6 282 1 198 1 55 1 252 2 3 1 2 1 145 1 351 1 254 6 354 2 257 12 81 2 288 2 358 2 362 1 61 1 185 2 18 1 47 1 50 1 217 1 346 1 244 2 
282 2 116 1 55 1 2 1 3 1 145 1 254 1 18 2 277 1 257 2 81 4 50 2 217 1 346 2 
282 2 116 1 55 1 284 1 2 1 3 1 145 1 254 1 18 2 257 2 81 4 50 2 217 1 346 2 
361 1 116 4 266 2 271 3 198 3 362 3 252 6 297 1 185 1 254 3 328 3 257 7 358 1 
282 2 116 1 55 1 284 1 2 1 3 1 145 1 254 1 18 2 257 2 81 4 50 2 217 1 346 2 
282 1 116 5 271 2 198 3 362 2 252 5 2 1 211 1 297 1 185 2 254 5 18 1 328 2 257 10 81 2 50 1 346 1 358 2 
282 1 362 1 252 1 2 1 254 2 18 1 354 1 257 2 81 2 50 1 346 1 358 1 
116 2 282 1 198 1 362 1 252 2 2 1 185 1 254 2 18 1 354 1 257 4 81 2 50 1 244 1 346 1 288 1 358 1 
116 2 282 3 309 1 271 1 198 1 362 1 284 1 252 2 2 1 254 1 18 3 366 1 328 1 257 3 81 6 50 3 346 3 
282 3 116 1 55 1 284 1 2 1 145 1 254 1 18 3 277 1 148 1 257 2 81 6 50 3 217 1 346 3 
361 1 116 4 282 2 266 1 309 1 271 1 362 1 198 2 252 3 297 1 185 1 254 4 18 2 328 1 23 1 257 8 81 4 50 2 358 1 346 2 
246 1 361 1 116 3 266 1 271 1 198 2 252 2 297 1 185 1 254 3 328 1 23 1 257 6 358 1 
116 2 282 1 198 1 362 1 252 2 185 1 254 2 18 1 354 1 277 1 257 4 81 2 50 1 244 1 346 1 288 1 358 1 
254 1 116 1 55 1 257 2 217 1 145 1 
254 1 116 1 55 1 257 2 217 1 26 1 
116 1 55 1 257 1 
254 1 257 1 217 1 
282 1 116 3 362 1 198 2 252 3 44 1 185 1 254 3 18 1 354 1 277 1 257 6 81 2 50 1 346 1 288 1 358 1 244 1 
254 1 116 1 282 1 18 1 55 1 257 2 81 2 50 1 217 1 3 1 2 1 145 1 346 1 
116 3 271 1 198 1 362 1 252 2 297 1 185 1 254 3 328 1 257 6 358 1 
361 1 266 1 116 2 282 1 271 1 309 1 362 1 198 1 252 2 254 1 18 1 366 1 328 1 257 3 81 2 50 1 346 1 
234 1 171 1 208 1 320 1 42 1 340 1 151 1 
69 1 234 1 171 1 208 1 320 1 42 1 340 1 77 1 175 1 203 1 316 1 151 1 
130 1 100 1 220 1 336 4 172 4 262 1 295 1 122 1 325 1 352 4 298 1 205 1 193 1 
114 1 319 1 100 1 220 1 336 2 172 2 122 2 352 2 105 1 298 1 177 1 96 1 369 1 371 1 
264 1 352 1 220 1 101 1 336 1 164 1 172 1 265 1 122 1 325 1 
97 1 352 2 180 1 220 1 100 1 298 1 336 2 172 2 262 1 225 1 122 1 
130 1 100 3 220 2 336 4 172 5 119 1 262 1 225 1 325 1 122 2 352 5 105 1 187 1 298 2 205 1 193 1 
130 1 100 3 220 2 336 4 172 5 119 1 262 1 225 1 325 1 122 2 352 5 105 1 298 2 205 1 356 1 193 1 
246 1 352 1 130 1 220 1 100 1 298 1 336 1 205 1 172 1 122 1 325 1 
234 2 171 1 100 1 319 1 363 1 261 1 220 1 1 1 336 1 42 1 172 1 122 1 325 1 352 1 298 1 189 1 192 1 151 2 
171 1 220 1 319 2 1 1 172 1 122 1 352 1 326 1 151 2 260 1 234 2 261 1 363 1 100 3 336 1 42 2 209 1 105 1 189 2 298 2 106 1 192 1 68 1 
171 1 220 1 319 2 1 1 348 1 172 2 122 1 352 2 326 1 151 2 260 1 234 2 363 1 100 3 336 2 42 2 209 1 295 1 105 1 189 2 298 2 106 1 192 1 68 1 
318 2 71 2 220 1 319 1 139 1 75 1 172 1 142 1 92 1 122 1 35 1 352 1 326 1 5 1 256 1 150 1 259 1 206 1 151 1 260 1 234 1 100 4 336 1 42 1 59 1 105 1 189 1 298 1 22 1 192 1 243 1 68 1 
318 2 71 2 220 1 319 1 139 1 75 1 172 1 92 1 174 1 122 1 352 1 326 1 5 1 256 1 150 1 259 1 206 1 151 1 260 1 234 1 100 4 336 1 42 1 59 1 105 1 189 1 298 1 22 1 192 1 243 1 68 1 
213 1 352 1 220 1 336 1 172 1 122 1 
97 1 115 1 333 1 319 1 100 3 220 2 336 6 172 7 119 1 262 1 225 1 325 2 122 3 213 1 352 7 187 1 298 2 300 1 165 1 96 1 369 1 
53 1 282 2 319 1 198 2 1 1 252 2 144 1 254 3 94 1 328 1 257 6 151 2 261 1 100 1 336 1 339 1 262 1 297 1 18 2 298 1 342 2 23 1 344 2 346 2 302 1 266 1 116 3 220 1 171 2 172 1 173 1 122 1 352 1 81 4 231 1 358 1 361 1 234 2 271 1 363 1 42 1 364 1 185 1 189 1 48 1 192 1 50 2 
89 2 0 1 318 3 248 2 139 1 199 4 92 1 325 1 5 1 256 1 328 1 150 1 95 1 259 1 206 1 151 1 99 1 100 2 336 1 59 2 211 1 297 1 22 2 68 1 71 3 75 2 172 1 76 5 174 1 31 1 34 1 352 1 228 2 229 2 355 1 357 1 358 2 308 2 234 1 129 1 271 1 42 1 185 2 189 1 367 1 243 1 192 1 
319 1 100 2 220 1 139 1 336 2 172 2 262 1 122 2 213 1 352 2 64 1 298 1 165 1 
234 2 171 1 100 1 319 1 363 1 220 1 1 1 336 1 42 1 172 1 348 1 122 1 325 1 352 1 298 1 189 1 192 1 151 2 
333 1 352 1 105 1 220 1 100 1 298 1 319 1 336 1 165 1 172 1 96 1 369 1 122 2 
84 1 171 1 322 1 223 1 274 1 
318 2 71 2 75 1 120 1 92 1 322 1 223 1 305 1 256 1 150 1 355 1 259 1 206 1 151 1 84 1 234 1 42 1 209 1 15 1 274 1 87 1 189 1 106 1 22 1 192 1 215 1 243 1 68 2 
17 1 84 1 234 1 42 1 65 1 223 1 168 1 151 1 274 1 
87 1 215 1 223 1 
160 1 359 1 46 1 310 1 91 1 239 1 30 1 103 1 
207 1 359 1 310 3 91 2 239 4 312 1 30 1 241 1 16 1 160 4 46 2 299 2 110 1 315 1 
359 1 317 1 310 1 91 1 239 2 43 1 30 1 103 1 160 2 37 1 46 1 299 1 
359 1 310 1 239 3 91 1 30 1 312 2 16 2 103 1 160 3 46 1 331 1 315 1 
10 2 162 1 347 1 310 2 
160 1 359 1 242 1 239 1 30 1 103 1 
160 2 359 1 46 1 299 1 310 1 91 1 239 2 30 1 62 1 103 1 
306 1 
160 1 359 1 46 1 310 1 91 1 239 1 30 1 103 1 
246 1 46 1 310 1 91 1 
160 1 359 1 46 1 310 1 91 1 239 1 30 1 
226 1 249 1 239 1 
160 3 359 1 233 1 46 1 310 1 91 1 239 3 312 2 315 1 30 1 16 1 103 1 
160 2 359 1 46 1 299 1 310 1 91 1 239 2 240 1 30 1 
264 1 160 1 359 1 72 1 310 1 239 1 164 1 258 1 241 1 30 1 103 1 
160 1 359 1 310 1 91 1 239 1 30 1 103 1 
160 1 359 1 46 1 91 2 239 1 30 1 103 1 
359 2 281 1 310 1 91 1 239 2 143 1 30 2 103 1 160 2 24 1 
359 1 236 1 310 2 91 1 239 3 30 1 241 1 62 1 103 1 160 3 46 1 299 2 110 1 
359 1 310 1 91 1 239 2 30 1 324 1 103 1 160 2 264 1 46 1 299 1 164 2 258 1 265 1 178 1 
359 2 310 2 91 1 239 4 240 1 30 2 241 1 323 1 103 1 160 4 46 1 299 2 110 1 
160 3 359 1 46 1 299 1 310 1 91 1 239 3 312 1 30 1 62 1 103 1 
207 1 310 1 110 1 241 1 
310 1 91 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (81,126) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (81,126) 35 92 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (81,126) 35 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
271 1 253 1 32 1 162 1 293 2 295 2 8 6 297 1 194 3 11 1 136 1 239 1 262 2 305 9 85 2 70 1 352 1 147 1 179 9 309 1 73 2 74 2 88 5 267 1 183 2 154 4 268 1 313 1 
271 1 253 1 32 1 162 1 293 2 295 2 8 6 297 1 194 3 11 1 136 1 239 1 262 2 305 9 85 2 70 1 352 1 147 1 179 9 309 1 73 2 74 2 88 5 267 1 183 2 154 4 268 1 313 1 
271 1 253 1 32 1 162 1 293 2 295 2 8 7 297 1 194 4 11 1 136 1 239 1 262 2 305 10 85 2 70 1 352 1 147 1 179 10 309 1 73 2 74 2 88 6 267 1 183 2 154 5 268 1 313 1 
271 1 253 1 32 1 162 1 293 1 295 2 8 4 297 1 194 2 11 1 239 1 262 2 305 7 85 2 70 1 352 1 147 1 179 7 309 1 73 2 74 2 88 4 267 1 183 2 154 3 268 1 313 1 
253 1 305 4 85 1 293 2 179 4 309 1 73 1 74 1 295 1 8 3 88 3 194 1 267 1 11 1 183 1 154 2 136 1 239 1 
38 1 262 1 305 2 85 1 254 1 352 1 179 2 88 1 295 1 74 1 297 1 267 1 11 1 119 1 183 1 239 1 
262 1 305 3 85 2 70 1 179 3 295 2 88 2 8 1 194 1 267 1 11 1 154 1 239 1 
271 1 253 1 32 1 293 2 8 7 295 2 61 1 194 3 11 1 136 1 239 1 262 1 305 9 70 1 85 2 179 9 309 1 73 1 88 5 74 1 267 1 183 1 154 4 48 1 
271 1 253 1 32 1 293 2 8 7 295 2 61 1 194 3 11 1 136 1 239 1 262 1 305 9 70 1 85 2 179 9 309 1 73 1 88 5 74 1 267 1 183 1 154 4 48 1 
220 1 325 1 146 1 
221 2 146 1 302 1 
296 2 290 1 243 2 258 1 56 2 7 2 43 2 164 2 
113 1 49 2 53 1 115 1 290 1 159 2 341 1 56 2 234 2 7 3 164 2 235 1 344 1 131 1 219 1 296 2 256 1 258 1 195 1 326 1 328 2 172 1 301 1 198 1 140 1 16 1 243 3 176 2 306 1 43 2 108 1 288 1 213 1 354 1 150 1 358 1 157 1 
52 1 296 1 290 1 243 1 151 1 56 1 279 1 7 1 43 1 164 1 
66 1 330 1 337 1 243 1 123 1 146 1 207 1 43 1 7 1 220 1 214 1 170 1 300 1 279 1 
66 1 330 2 243 1 123 1 56 1 146 1 207 1 164 1 43 1 7 1 220 1 296 1 214 2 170 1 279 1 
180 1 330 1 214 1 23 1 60 1 
180 1 127 1 117 1 330 2 220 1 214 2 23 1 146 1 
180 1 330 1 214 1 
52 1 330 1 290 1 243 1 56 1 23 1 164 1 43 1 7 1 296 1 151 1 214 1 279 1 347 1 
146 1 
180 1 127 1 330 2 220 1 261 1 214 2 23 1 146 1 
127 1 330 5 1 1 97 2 191 1 23 2 233 1 247 2 146 1 59 1 72 1 180 2 220 1 214 5 91 1 251 2 138 1 259 1 199 1 
258 1 325 1 
243 2 129 1 56 1 205 1 43 2 7 2 164 1 296 1 258 2 
210 1 42 1 319 1 
49 1 113 1 16 1 159 1 243 1 7 1 344 1 167 1 108 1 354 1 256 1 258 1 326 1 328 1 198 1 140 1 
113 1 141 1 49 1 16 1 159 1 243 2 319 1 56 1 43 1 7 2 192 1 344 1 108 1 296 1 354 1 256 1 326 1 328 1 198 1 140 1 
141 1 337 1 40 1 243 5 142 1 56 4 205 1 43 5 7 5 164 1 192 2 212 1 296 4 258 1 
52 1 296 2 243 2 56 2 163 1 279 1 7 2 43 2 
296 3 243 3 258 1 56 3 164 1 7 3 43 3 192 1 
52 1 296 1 243 1 56 1 279 1 7 1 43 1 
296 1 243 1 129 1 56 1 205 1 279 1 7 1 43 1 164 1 
113 1 49 1 53 1 115 1 290 1 159 1 56 3 234 2 164 2 7 4 235 1 344 1 192 1 131 1 296 3 256 1 258 1 195 1 170 1 326 1 328 1 172 1 301 1 198 1 279 1 140 1 101 1 141 1 66 1 16 1 330 1 243 4 176 1 123 1 332 1 205 1 207 1 43 3 108 1 288 1 213 1 354 1 214 1 358 1 
337 1 296 1 243 2 258 1 142 1 56 1 7 2 43 2 192 1 
141 1 66 1 330 1 243 3 123 1 56 3 332 1 205 1 146 1 207 1 164 1 43 3 7 3 192 2 296 3 214 1 336 1 170 1 279 1 
243 2 42 1 56 2 319 1 205 1 164 1 43 2 7 2 192 1 296 2 
49 1 113 1 16 1 159 1 243 1 7 1 344 1 108 1 354 1 256 1 258 1 326 1 328 1 198 1 140 1 
49 1 113 1 16 1 159 1 243 1 7 1 108 1 266 1 312 1 256 1 258 1 326 1 328 1 198 1 140 1 
115 1 161 1 319 2 234 2 58 1 235 1 131 1 219 2 322 1 10 1 99 1 301 1 172 2 39 1 176 4 349 1 350 1 22 1 42 2 210 2 213 1 90 1 358 1 28 1 
66 1 296 1 243 1 56 1 279 1 163 1 7 1 43 1 
126 1 331 1 
126 1 331 1 
355 1 81 1 
355 1 81 1 
355 1 81 1 
126 1 331 1 
126 1 331 1 
126 1 331 1 
126 1 331 1 
126 1 331 1 
126 1 331 1 
126 1 331 1 
126 1 331 1 
126 1 330 1 331 1 214 1 264 1 92 1 35 1 
126 1 331 1 264 1 35 1 
73 1 74 1 183 1 
38 1 74 1 183 1 
38 1 73 2 315 1 74 3 242 1 343 1 
38 1 73 1 87 1 74 2 242 1 343 1 
38 1 73 1 74 2 242 1 343 2 
127 1 1 2 97 1 4 1 191 3 320 1 322 1 276 1 220 1 79 2 237 1 221 3 302 1 200 2 39 1 18 1 330 5 22 1 247 1 23 4 145 1 146 2 72 1 353 1 180 1 334 1 182 1 90 1 214 5 251 1 110 1 184 2 
127 1 1 6 97 2 4 2 233 1 191 8 320 2 275 1 218 1 60 5 322 3 220 1 257 1 238 5 237 1 221 9 100 1 280 1 302 3 200 6 39 3 18 3 330 9 105 1 22 3 145 4 23 7 247 2 146 5 72 1 180 6 90 3 214 9 251 2 184 6 
1 2 97 1 4 1 233 1 191 3 320 1 276 1 322 1 220 1 79 1 221 4 302 2 39 1 200 2 18 1 330 3 22 1 23 2 247 1 145 1 146 3 182 1 90 1 214 3 251 1 184 2 
1 4 97 1 4 1 233 1 191 5 320 1 275 1 218 1 276 1 322 2 220 1 79 2 257 1 221 7 302 3 200 4 39 2 18 2 330 4 22 2 247 1 145 2 23 3 146 4 182 1 90 2 214 4 251 1 184 4 
89 1 256 1 325 1 
256 1 263 1 
9 1 
113 1 256 1 326 1 
256 1 255 1 
256 1 326 1 
113 1 224 1 89 2 256 3 21 1 326 1 
281 1 217 2 272 1 96 1 187 1 203 1 176 7 350 2 161 3 342 1 219 4 322 1 193 1 90 1 229 1 172 3 359 1 
281 1 217 2 272 1 96 1 187 1 203 1 176 7 350 2 161 3 342 1 219 4 322 1 193 1 90 1 229 1 172 3 359 1 
281 1 217 2 272 1 96 1 203 1 187 1 176 7 350 2 161 3 226 1 342 1 219 4 322 1 193 1 90 1 229 1 172 3 359 1 
95 1 217 3 96 1 272 2 187 1 55 1 161 10 234 2 77 1 342 2 235 1 219 16 322 4 193 2 301 1 172 15 281 2 39 3 65 1 18 3 203 1 104 1 176 31 68 1 350 5 22 3 209 4 26 1 213 1 90 4 358 1 229 1 252 3 359 5 
281 1 217 2 272 1 54 1 203 1 187 1 68 1 176 9 33 1 350 3 161 4 234 4 342 1 235 2 219 5 322 1 193 1 213 2 90 1 358 2 229 1 172 4 301 2 359 1 
49 1 315 1 159 1 165 1 8 1 295 1 11 1 299 1 327 1 36 1 328 1 239 1 198 1 303 1 38 1 17 1 121 1 262 1 305 2 85 1 204 1 71 1 179 2 73 1 88 1 108 1 74 2 267 1 183 1 185 1 
49 1 315 1 159 1 165 1 295 1 8 2 299 1 327 1 36 1 328 1 239 1 198 1 303 1 38 1 17 1 121 1 262 1 305 3 85 1 144 1 71 1 179 3 73 1 88 1 148 1 108 1 74 2 267 1 183 1 314 1 
49 1 315 1 159 1 165 1 8 2 299 1 327 1 328 1 239 1 198 1 303 1 38 1 17 1 262 1 305 2 71 1 179 2 73 1 88 1 148 1 108 1 74 2 267 1 183 1 314 1 
49 1 159 1 316 1 292 1 295 1 256 1 326 1 299 2 328 1 64 1 197 1 198 1 303 2 16 1 262 2 305 1 85 1 144 1 71 2 179 1 108 1 335 1 112 1 
38 1 49 1 315 1 17 1 121 1 159 1 262 1 305 1 85 1 71 1 165 1 179 1 73 1 74 2 108 1 295 1 11 1 183 1 327 1 299 1 36 1 185 1 328 1 198 1 314 1 303 1 
321 1 
49 2 127 3 270 1 316 1 1 2 2 1 97 1 231 1 57 1 191 2 320 1 7 1 62 2 326 1 277 1 328 2 198 1 279 1 16 2 66 1 330 5 201 1 102 1 243 1 247 1 146 2 207 1 248 1 72 1 286 1 108 1 333 2 214 5 251 1 112 1 76 1 114 2 159 2 337 1 339 1 78 2 220 1 256 1 170 1 345 2 120 2 221 2 300 1 302 2 123 1 43 1 308 1 180 6 310 4 93 2 
127 1 337 1 231 1 57 1 7 1 170 1 277 1 300 1 279 1 66 1 330 3 102 1 243 1 261 1 123 1 207 1 43 1 286 1 310 2 180 2 333 1 214 3 
127 1 337 1 231 1 57 1 7 1 220 1 170 1 277 1 300 1 120 1 279 1 66 1 330 3 102 1 243 1 261 1 123 1 207 1 146 1 43 1 286 1 180 1 310 3 214 3 
127 1 114 1 337 1 231 1 57 1 7 1 220 1 170 1 277 1 300 1 120 1 279 1 66 1 330 3 102 1 261 1 243 1 123 1 207 1 146 1 43 1 286 1 310 3 180 2 333 1 214 3 
127 3 1 1 97 1 231 1 57 1 191 1 7 1 62 2 277 1 279 1 66 1 330 5 102 1 243 1 247 1 207 1 146 5 72 1 286 1 287 1 333 4 149 1 214 5 289 1 251 1 114 4 337 1 339 1 78 2 220 5 170 1 345 2 300 1 120 4 37 1 302 2 261 1 123 1 43 1 308 1 310 6 180 7 311 1 93 2 
127 2 270 1 1 1 97 1 231 1 57 1 191 1 7 1 62 2 277 1 279 1 66 1 330 4 102 1 243 1 247 1 207 1 146 2 72 1 286 1 333 2 214 4 251 1 114 2 337 1 339 1 78 2 220 1 170 1 345 2 300 1 221 2 120 2 302 2 123 1 43 1 308 1 310 4 180 4 93 2 
114 2 127 2 337 1 1 1 97 1 339 1 231 1 57 1 191 1 78 2 7 1 220 1 62 2 170 1 345 2 277 1 120 2 300 1 37 1 279 1 302 2 66 1 330 4 102 1 243 1 123 1 247 1 146 1 207 1 43 1 308 1 72 1 286 1 287 1 180 4 310 4 333 2 149 1 214 4 251 1 93 2 
114 2 127 2 337 1 1 1 97 1 339 1 231 1 57 1 191 1 78 2 7 1 220 1 62 2 170 1 345 2 277 1 120 2 300 1 37 1 279 1 302 2 66 1 330 4 102 1 243 1 123 1 247 1 146 1 207 1 43 1 308 1 72 1 286 1 287 1 180 4 310 4 333 2 149 1 214 4 251 1 93 2 
114 2 127 2 337 1 1 1 97 1 231 1 57 1 191 1 7 1 220 1 298 2 170 1 345 2 277 1 120 2 221 2 300 1 279 1 174 1 66 1 330 4 102 1 202 1 243 1 84 1 143 2 123 1 247 1 146 1 207 1 43 1 308 1 72 1 286 1 180 4 310 4 333 2 149 1 214 4 251 1 93 2 
127 2 114 3 337 1 1 1 97 1 339 1 231 1 57 1 191 1 78 2 7 1 220 1 62 2 170 1 345 2 277 1 37 1 300 1 120 3 279 1 302 2 66 1 330 4 102 1 243 1 123 1 247 1 146 1 207 1 43 1 308 1 72 1 286 1 287 1 310 5 180 5 149 1 333 3 214 4 251 1 289 1 93 2 
127 2 114 3 337 1 1 1 97 1 339 1 231 1 57 1 191 1 78 2 7 1 220 1 62 2 170 1 345 2 277 1 37 1 300 1 120 3 279 1 302 2 66 1 330 4 102 1 243 1 123 1 247 1 146 1 207 1 43 1 308 1 72 1 286 1 287 1 310 5 180 5 149 1 333 3 214 4 251 1 289 1 93 2 
127 2 270 1 1 1 97 1 231 1 57 1 191 1 7 1 277 1 279 1 66 1 330 4 102 1 243 1 143 2 247 1 207 1 146 1 72 1 286 1 333 2 214 4 251 1 114 2 337 1 220 1 298 2 170 1 345 2 300 1 221 2 120 2 174 1 123 1 43 1 308 1 310 4 180 4 93 2 
115 1 217 1 272 1 187 1 161 2 319 1 234 2 58 1 235 1 131 1 219 3 322 1 258 2 325 1 301 1 172 3 281 1 203 1 176 6 350 2 42 1 210 1 213 1 90 1 358 1 229 1 
95 1 53 1 115 1 128 1 55 1 161 2 319 11 234 4 235 2 131 2 219 8 322 2 258 1 137 1 172 6 301 2 240 1 39 2 18 2 282 1 176 14 350 1 22 1 42 4 209 3 210 11 181 1 213 2 90 1 358 2 157 1 359 1 252 3 
113 1 49 1 115 1 53 1 159 1 338 1 56 1 234 2 7 2 344 1 192 1 235 1 131 1 167 1 219 1 296 1 256 1 258 1 63 1 326 1 328 1 198 1 301 1 172 1 140 1 240 1 141 1 16 1 243 2 176 2 42 1 285 1 43 1 108 1 354 1 213 1 358 1 157 1 
49 3 53 1 272 1 187 1 317 1 56 1 319 7 234 6 7 3 235 3 192 1 131 3 322 3 195 2 326 2 328 3 198 2 140 2 281 1 141 1 240 1 16 1 18 2 103 2 243 3 244 2 203 1 22 2 210 7 108 2 213 3 153 1 156 1 157 1 113 2 217 1 115 3 159 3 161 8 344 2 219 10 296 1 256 2 258 2 171 2 172 10 301 3 39 2 176 20 350 4 42 7 43 1 354 2 90 3 358 3 229 1 228 2 359 4 314 1 
0 1 49 8 115 2 53 1 159 8 316 1 188 1 341 2 56 1 294 1 58 1 234 4 7 1 192 1 235 2 131 2 219 1 296 1 256 3 326 2 328 7 198 2 301 2 172 1 16 2 243 1 20 1 176 2 204 1 43 1 227 1 211 1 108 2 213 2 358 2 112 1 157 1 186 1 314 1 
115 1 161 1 319 1 56 1 234 2 164 1 7 1 235 1 131 1 219 1 322 1 296 1 301 1 172 2 15 1 240 1 39 1 18 1 243 1 176 3 350 1 22 1 42 1 205 1 43 1 210 1 213 1 90 1 358 1 
39 1 115 1 176 2 161 1 42 1 319 1 58 1 234 2 235 1 210 1 131 1 219 2 322 1 213 1 10 1 358 1 301 1 359 1 
115 1 176 2 350 1 161 1 22 1 42 1 319 1 58 1 234 2 235 1 210 1 131 1 213 1 90 1 358 1 301 1 28 1 172 2 
39 1 18 1 115 1 176 4 350 1 22 1 161 2 42 2 319 2 58 1 234 2 235 1 210 2 131 1 219 2 322 1 213 1 90 1 358 1 172 2 301 1 359 1 
39 1 115 1 176 2 161 1 42 1 319 1 234 2 235 1 210 1 131 1 211 1 219 2 322 1 213 1 10 1 358 1 301 1 359 1 
115 1 176 2 350 1 161 1 22 1 42 1 319 1 234 2 235 1 210 1 131 1 211 1 213 1 90 1 358 1 301 1 28 1 172 2 
39 1 18 1 115 1 176 4 350 1 22 1 161 2 42 2 319 2 234 2 235 1 210 2 131 1 211 1 219 2 322 1 213 1 90 1 358 1 172 2 301 1 359 1 
39 1 18 1 115 1 176 4 350 1 22 1 161 2 42 2 319 2 234 2 235 1 210 2 131 1 219 2 322 1 213 1 90 1 358 1 172 2 301 1 359 1 
113 1 49 1 115 1 53 1 159 1 234 2 7 1 344 1 235 1 131 1 219 1 256 1 258 1 195 1 326 1 328 1 198 1 301 1 172 1 140 1 16 1 243 1 176 2 108 1 354 1 213 1 358 1 157 1 
113 1 49 1 115 1 53 1 159 1 234 2 7 1 235 1 131 1 219 1 134 1 256 1 258 1 326 1 328 1 198 1 301 1 172 1 140 1 16 1 243 1 176 2 108 1 266 1 312 1 213 1 358 1 157 1 
240 1 39 1 18 1 115 1 176 4 350 1 22 1 161 2 42 2 319 2 234 2 235 1 210 2 131 1 219 2 322 1 213 1 90 1 358 1 172 2 301 1 359 1 
113 1 49 1 115 1 159 1 161 2 319 2 234 2 7 1 344 1 235 1 131 1 219 2 322 1 256 1 195 1 326 1 328 1 172 2 198 1 301 1 140 1 39 1 18 1 243 1 176 4 350 1 204 1 22 1 42 2 210 2 108 1 354 1 213 1 90 1 358 1 228 1 359 1 
115 1 161 1 56 1 319 1 234 2 164 1 7 1 235 1 131 1 219 2 322 1 296 1 172 1 301 1 240 1 39 1 18 1 243 1 176 3 22 1 42 1 205 1 43 1 210 1 213 1 90 1 358 1 46 1 359 1 
95 1 318 1 55 1 33 1 5 1 161 6 232 2 234 4 235 2 219 9 322 3 168 1 13 2 301 2 172 10 173 1 39 3 241 1 18 3 41 1 176 19 350 3 22 3 209 2 307 1 213 2 90 3 358 2 252 1 359 3 
95 2 318 2 189 1 33 1 5 1 161 4 232 1 234 6 235 3 219 14 322 3 168 1 80 1 13 4 172 12 301 3 173 1 39 3 329 1 18 3 304 1 68 2 176 26 350 2 22 2 307 2 209 2 213 3 250 1 90 2 152 1 358 3 359 2 252 2 
95 3 217 1 272 1 187 1 291 1 318 1 55 1 189 1 33 1 5 1 161 8 232 1 234 6 235 3 219 20 322 5 168 1 80 1 13 4 301 3 172 21 173 1 281 1 39 4 329 1 18 4 41 1 304 1 203 1 68 1 176 41 350 4 22 4 209 4 307 2 213 3 250 1 90 5 152 1 358 3 229 1 252 3 359 4 
95 3 217 1 272 1 187 1 291 1 318 1 55 1 189 1 33 1 5 1 161 7 232 1 234 8 235 4 219 20 322 5 168 1 80 1 13 4 301 4 172 18 173 1 281 1 39 4 329 1 18 4 41 1 304 1 203 1 68 2 176 38 350 4 22 3 209 4 307 2 213 4 250 1 90 4 152 1 358 4 229 1 252 3 359 3 
95 2 217 1 272 1 187 1 318 1 55 2 189 1 33 1 5 1 161 14 232 1 234 4 235 2 219 27 322 8 168 1 80 1 13 4 301 2 172 25 173 1 281 1 39 7 329 1 18 7 282 2 304 1 203 1 68 1 176 52 350 7 22 7 209 4 307 1 213 2 250 1 90 8 152 1 358 2 229 1 252 4 359 7 
0 1 49 2 50 1 115 1 53 1 159 2 341 2 274 1 234 2 7 2 235 1 131 1 219 1 256 1 326 1 223 1 328 2 198 1 301 1 172 1 240 1 82 1 243 2 176 2 69 1 43 2 227 1 108 1 213 1 358 1 157 1 
38 1 49 2 315 1 17 1 159 2 121 1 122 1 204 1 71 1 73 1 74 2 108 1 323 1 27 1 183 1 327 1 328 2 198 1 314 1 
38 1 49 1 315 1 17 1 159 1 121 1 122 1 71 1 73 1 74 2 108 1 183 1 327 1 346 1 328 1 198 1 314 1 
49 1 16 1 159 1 316 1 71 1 208 1 108 1 323 1 256 1 326 1 112 1 328 1 197 1 198 1 
38 1 49 1 315 1 17 1 159 1 121 1 122 1 71 1 73 1 74 2 108 1 323 1 27 1 183 1 327 1 328 1 198 1 314 1 
230 1 
220 1 1 1 325 1 138 1 259 1 191 1 146 1 
127 1 1 1 97 1 339 1 191 1 78 1 220 1 62 1 221 1 302 1 330 1 247 1 146 2 72 1 180 1 214 1 251 1 
49 3 51 1 127 3 1 8 97 4 98 2 191 9 320 2 322 2 135 1 326 3 138 1 328 3 278 1 198 3 200 6 16 1 18 2 330 5 244 2 204 1 22 2 247 4 146 8 248 1 72 4 108 4 214 5 251 4 155 2 113 3 158 2 159 3 160 2 34 1 255 2 220 2 256 10 169 2 170 2 259 1 222 2 221 12 302 6 39 2 224 1 175 2 263 3 177 1 180 5 89 2 90 2 45 2 184 6 
95 1 127 1 1 5 97 2 189 1 98 2 191 8 320 1 322 2 220 2 169 1 80 1 324 1 196 1 221 6 302 3 200 5 39 2 329 1 18 2 330 1 304 1 22 2 247 2 146 5 248 1 209 1 72 2 180 1 90 2 214 1 152 1 251 2 184 5 252 1 
52 1 29 1 272 1 290 1 1 2 97 1 56 1 98 2 191 2 7 1 164 1 322 2 296 1 169 1 37 1 279 1 347 1 281 1 330 1 243 1 247 1 43 1 72 1 90 1 151 1 214 1 251 1 229 1 
220 1 1 1 97 1 251 1 138 1 259 1 191 1 247 1 146 1 72 1 
39 2 200 5 18 2 1 5 244 1 22 2 98 2 191 5 146 5 322 2 169 1 90 2 184 5 221 10 302 5 
180 1 330 1 127 1 220 1 214 1 146 1 
49 4 51 2 127 2 159 4 316 1 2 1 1 2 97 2 233 1 191 2 320 2 256 1 326 1 328 4 139 1 198 1 278 1 16 2 330 3 86 1 247 2 72 1 248 2 180 4 108 1 214 3 251 2 112 1 76 1 
49 1 113 1 53 1 115 1 159 1 290 1 56 2 234 2 7 3 164 2 235 1 344 1 131 1 296 2 256 1 258 1 195 1 326 1 328 1 172 1 301 1 198 1 140 1 16 1 243 3 176 1 43 2 108 1 288 1 354 1 213 1 358 1 
200 2 217 1 1 2 97 1 247 1 191 1 320 1 146 4 72 1 248 1 220 2 251 1 184 2 221 4 302 2 
116 1 340 1 178 1 
265 1 249 1 19 1 116 1 340 1 
116 1 340 1 178 1 
116 1 340 1 178 1 
106 1 116 1 340 1 
106 1 116 1 340 1 
106 1 116 1 340 1 
116 1 340 1 
126 1 331 1 
281 1 217 1 272 1 187 1 203 1 176 8 68 1 350 2 161 3 234 4 235 2 219 4 322 1 213 2 90 1 358 2 229 1 172 4 301 2 359 1 
281 1 217 1 272 1 187 1 203 1 176 6 350 2 161 2 219 3 322 1 90 1 325 1 229 1 172 3 
39 1 18 1 176 4 284 1 350 1 22 1 161 2 234 2 235 1 219 2 322 1 213 1 90 1 358 1 172 2 301 1 359 1 
95 1 39 1 18 1 176 7 55 1 350 1 22 1 161 2 209 2 219 3 322 1 90 1 172 4 252 1 359 1 
216 1 217 1 272 2 187 1 55 1 161 9 234 4 235 2 219 11 322 3 172 12 301 2 281 2 39 2 18 2 282 1 203 1 176 23 68 2 350 5 22 2 209 2 181 1 213 2 90 3 358 2 229 1 359 4 252 2 
176 1 172 1 209 1 
219 1 176 1 252 1 
39 1 18 1 244 1 176 6 284 1 350 2 161 3 22 1 234 2 235 1 219 3 322 1 213 1 90 1 358 1 301 1 172 3 359 1 
95 1 33 1 189 1 161 2 234 2 235 1 219 6 322 2 80 1 172 6 301 1 39 2 329 1 18 2 304 1 176 12 350 1 22 2 209 1 213 1 90 2 152 1 358 1 359 1 252 1 
281 1 272 1 176 6 350 1 161 2 219 3 322 1 90 1 229 1 172 3 359 1 
281 1 216 1 272 1 203 1 187 1 176 3 68 1 350 1 161 2 234 2 235 1 219 1 213 1 358 1 172 2 301 1 359 1 
281 2 29 1 272 2 176 10 33 1 350 3 161 5 234 2 235 1 219 5 322 2 213 1 90 2 358 1 229 1 301 1 172 5 359 2 
39 1 176 2 33 1 161 1 234 2 235 1 219 2 322 1 213 1 358 1 301 1 359 1 
39 1 18 1 176 4 33 1 350 1 22 1 161 2 234 2 235 1 219 2 322 1 213 1 90 1 358 1 172 2 301 1 359 1 
216 1 281 1 272 1 41 1 68 1 176 3 33 1 350 1 161 2 234 6 235 3 219 1 213 3 358 3 172 2 301 3 359 1 
216 1 95 1 217 1 272 3 187 1 55 1 33 1 161 12 77 1 234 10 235 5 219 16 322 5 172 18 301 5 281 3 65 1 39 3 18 3 41 1 203 1 68 2 104 1 176 34 284 1 350 7 22 3 209 4 213 5 90 5 358 5 229 2 252 3 359 5 
281 1 95 1 329 1 217 1 272 1 203 1 187 1 176 8 33 1 350 2 161 2 234 2 235 1 209 1 219 4 322 1 213 1 90 1 358 1 229 1 301 1 172 4 252 1 
95 1 217 1 272 1 187 1 55 1 33 1 161 3 234 4 235 2 219 6 322 2 172 5 301 2 281 1 39 1 329 1 18 1 203 1 176 11 284 1 350 2 209 2 213 2 90 1 358 2 229 1 252 1 359 1 
95 1 217 1 272 1 187 1 33 1 189 1 161 4 234 6 235 3 219 9 322 3 80 1 172 10 301 3 281 1 39 2 329 1 18 2 304 1 203 1 176 19 68 1 284 1 350 3 22 2 209 1 213 3 90 3 152 1 358 3 229 1 359 1 252 1 
95 1 217 1 272 1 187 1 33 1 189 1 161 5 234 6 235 3 219 10 322 3 80 1 172 7 301 3 281 1 39 2 329 1 18 2 304 1 203 1 68 1 176 17 284 1 350 3 22 1 209 1 213 3 90 2 152 1 358 3 229 1 359 2 252 1 
281 1 95 1 329 1 217 1 272 1 203 1 187 1 176 8 33 1 350 2 161 2 234 2 235 1 209 1 219 4 322 1 213 1 90 1 358 1 229 1 301 1 172 4 252 1 
95 1 33 1 189 1 161 2 234 2 235 1 219 6 322 2 80 1 172 6 301 1 39 2 329 1 18 2 304 1 176 12 350 1 22 2 209 1 213 1 90 2 152 1 358 1 359 1 252 1 
95 1 217 1 272 1 187 1 189 1 33 1 161 5 234 8 235 4 219 10 322 3 80 1 172 8 301 4 281 1 39 2 329 1 18 2 304 1 203 1 176 18 68 2 284 1 350 3 22 1 209 1 213 4 90 2 152 1 358 4 229 1 359 2 252 1 
95 1 189 1 33 1 161 6 234 8 235 4 219 9 322 3 80 1 172 7 301 4 39 3 329 1 18 3 41 1 304 1 176 16 68 2 350 3 22 2 209 1 213 4 90 2 152 1 358 4 359 3 252 1 
281 3 272 3 187 1 203 2 176 7 350 3 161 6 219 3 322 1 90 1 229 1 172 4 359 3 
95 1 217 1 272 1 187 1 189 1 33 1 161 4 234 8 235 4 219 10 322 3 80 1 172 8 301 4 281 1 39 2 329 1 18 2 41 1 304 1 203 1 176 18 68 2 350 3 22 1 209 1 213 4 90 2 152 1 358 4 229 1 359 1 252 1 
337 1 225 1 243 1 258 1 142 1 7 1 43 1 
31 1 337 1 225 1 283 1 243 1 142 1 273 1 43 1 7 1 236 1 118 1 258 1 
49 1 16 1 108 1 316 1 159 1 256 1 325 1 326 1 112 1 328 1 198 1 
113 1 49 1 16 1 159 1 243 2 56 1 43 1 7 2 192 1 108 1 296 1 354 1 256 1 258 1 326 1 328 1 198 1 140 1 
113 2 49 1 66 1 51 1 158 1 159 1 243 2 56 2 255 1 207 1 43 2 7 2 192 1 108 1 296 1 354 1 256 3 258 1 326 2 328 1 279 1 198 1 140 1 
49 2 113 2 51 1 158 1 159 2 56 2 255 1 7 2 166 1 192 1 296 1 256 3 258 1 326 2 328 2 198 1 279 1 140 1 66 1 243 2 207 1 43 2 108 1 266 1 
113 1 49 3 16 1 51 1 158 1 330 2 159 3 263 1 255 1 146 1 166 1 180 1 108 1 220 1 89 1 256 4 12 1 214 2 170 1 326 1 328 3 198 1 260 1 
113 1 49 3 16 1 51 1 158 1 330 2 159 3 263 1 255 1 146 1 166 1 180 1 108 1 220 1 89 1 256 4 214 2 45 1 170 1 326 1 328 3 198 1 
49 1 108 1 159 1 328 1 198 1 186 1 
0 1 49 7 113 1 16 2 224 1 159 7 188 1 20 1 204 1 341 1 294 1 25 1 107 1 108 3 109 1 256 3 326 2 328 6 186 1 198 2 314 1 
113 1 49 1 217 1 115 2 272 1 159 1 187 1 161 2 319 1 56 1 234 4 7 2 192 1 235 2 344 1 131 2 219 3 322 1 296 1 256 1 258 2 195 1 326 1 223 1 328 1 172 3 198 1 301 2 140 1 281 1 240 1 103 1 243 2 203 1 176 6 350 2 204 1 42 1 43 1 210 1 108 1 213 2 354 1 90 1 358 2 229 1 228 1 
49 1 127 1 159 1 160 1 1 1 97 2 191 1 220 1 256 2 170 1 138 1 259 1 328 1 222 1 278 1 16 1 330 3 263 1 247 2 23 1 146 1 72 2 180 2 89 1 214 3 45 1 251 2 155 1 
49 2 113 1 224 1 159 2 204 1 108 2 89 1 256 2 135 1 326 1 328 2 186 1 198 1 
94 1 49 4 16 1 159 4 316 1 204 1 166 1 108 1 256 1 326 1 112 1 328 4 198 1 
49 2 113 1 51 1 159 2 25 1 108 2 109 1 256 1 125 1 357 1 326 1 156 1 328 2 198 1 
38 1 49 1 16 1 74 1 108 1 159 1 183 1 327 1 328 1 198 1 
49 2 0 1 159 2 69 1 204 1 108 1 256 1 326 1 328 2 198 1 314 1 
94 1 49 5 0 1 51 1 16 1 316 1 159 5 188 1 204 1 294 1 108 2 256 3 326 2 112 1 328 4 198 2 
94 1 49 5 0 1 51 1 16 1 316 1 159 5 204 1 6 1 294 1 108 2 256 3 326 2 112 1 328 4 198 2 
113 1 49 1 16 1 159 1 243 2 56 1 43 1 7 2 192 1 108 1 296 1 266 1 256 1 258 1 326 1 328 1 198 1 140 1 
49 1 113 1 51 1 224 1 159 1 25 1 107 1 108 2 109 1 256 1 326 1 328 1 198 1 
75 1 3 1 258 1 351 1 24 1 
66 1 330 2 30 1 3 1 123 1 351 2 332 1 23 1 146 1 207 1 206 1 24 2 75 2 220 1 258 1 214 2 170 1 279 1 47 1 
50 1 82 1 3 1 243 1 274 1 24 1 43 1 7 1 75 1 
3 1 206 1 47 1 
88 1 267 1 325 1 239 1 
88 1 295 1 267 1 305 1 85 1 239 1 179 1 
262 1 305 1 299 1 
305 3 85 1 246 1 124 1 179 3 88 1 295 1 297 2 11 1 267 1 111 1 239 1 
88 1 8 1 295 1 267 1 305 2 85 1 293 1 239 1 179 2 
309 1 73 1 74 1 88 1 295 1 305 1 11 1 183 1 154 1 85 1 179 1 
88 1 295 1 267 1 305 1 11 1 85 1 179 1 
295 1 267 2 305 1 11 1 85 1 239 1 179 1 
305 2 85 2 179 2 44 1 88 1 295 2 133 1 267 1 11 1 215 1 
271 1 32 1 305 3 85 1 179 3 295 1 8 2 88 2 194 1 267 1 11 1 154 1 239 1 
38 1 315 1 305 2 245 1 85 1 179 2 73 1 88 1 74 2 295 1 8 1 267 1 11 1 183 1 239 1 
305 4 85 2 293 1 179 4 295 2 8 2 88 2 194 1 267 1 11 1 154 1 136 1 239 1 
88 1 295 1 267 1 305 1 11 1 85 1 239 1 179 1 
305 4 85 1 246 1 179 4 8 2 295 1 88 3 297 1 194 1 267 2 154 1 111 1 239 2 269 1 
305 2 85 1 179 2 88 1 295 1 132 1 8 1 61 1 356 1 267 1 11 1 239 1 
305 3 85 1 246 2 190 1 179 3 88 1 295 1 297 2 11 1 267 1 111 1 239 1 
348 1 88 2 83 2 130 1 
67 1 295 1 305 1 11 1 85 1 179 1 
88 1 8 1 295 1 271 1 267 1 305 2 11 1 85 1 239 1 179 2 
14 1 
88 1 295 1 267 1 305 1 11 1 85 1 239 1 179 1 
271 1 305 3 85 1 179 3 8 1 295 1 88 1 297 1 11 1 267 1 239 1 
88 1 194 1 154 1 269 1 
88 1 267 1 

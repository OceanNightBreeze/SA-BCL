#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 307 151 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 307 151 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 28 1 220 1 50 1 105 3 246 2 2 6 82 2 223 5 186 1 347 1 54 1 33 9 161 1 227 1 228 1 166 2 255 9 169 1 116 2 115 4 377 1 284 2 175 1 70 2 336 2 292 1 124 1 
218 1 28 1 220 1 50 1 105 3 246 2 2 6 82 2 223 5 186 1 347 1 54 1 33 9 161 1 227 1 228 1 166 2 255 9 169 1 116 2 115 4 377 1 284 2 175 1 70 2 336 2 292 1 124 1 
218 1 28 1 220 1 50 1 105 4 246 2 2 7 82 2 223 6 186 1 347 1 54 1 33 10 161 1 227 1 228 1 166 2 255 10 169 1 116 2 115 5 377 1 284 2 175 1 70 2 336 2 292 1 124 1 
218 1 28 1 220 1 105 2 246 2 2 4 82 2 223 4 186 1 347 1 54 1 33 7 161 1 227 1 228 1 166 2 255 7 169 1 116 2 115 3 377 1 284 2 175 1 70 1 336 2 292 1 124 1 
218 1 255 4 220 1 105 1 50 1 116 1 246 1 115 2 2 3 223 3 284 1 175 1 347 1 70 2 33 4 161 1 336 1 166 1 
218 1 169 1 255 2 113 1 220 1 128 1 246 1 116 1 82 1 223 1 284 1 347 1 33 2 71 1 166 1 124 1 
218 1 255 3 220 1 105 1 246 2 115 1 2 1 82 1 223 2 186 1 347 1 33 3 166 2 
218 1 220 1 105 3 50 1 129 1 246 2 2 7 82 1 223 5 186 1 347 1 33 9 227 1 161 1 228 1 166 2 255 9 275 1 115 4 116 1 175 1 284 1 70 2 336 1 
218 1 220 1 105 3 50 1 129 1 246 2 2 7 82 1 223 5 186 1 347 1 33 9 227 1 161 1 228 1 166 2 255 9 275 1 115 4 116 1 175 1 284 1 70 2 336 1 
263 1 294 1 189 1 
379 2 294 1 207 1 
3 2 23 2 187 2 191 2 235 2 173 1 359 1 101 2 
77 1 221 1 345 1 107 2 3 2 224 1 320 1 299 2 132 1 204 1 187 3 206 1 109 1 9 1 272 1 34 1 252 1 57 1 325 1 232 1 13 1 171 1 256 1 191 2 235 2 173 1 19 1 332 1 23 3 355 1 313 1 335 1 178 2 380 2 359 1 217 2 101 2 
3 1 340 1 23 1 187 1 191 1 235 1 351 1 316 1 359 1 101 1 
58 1 235 1 81 1 294 1 329 1 283 1 195 1 367 1 187 1 23 1 99 1 316 1 189 1 360 1 
58 1 191 1 235 1 81 1 294 1 329 2 3 1 283 1 195 2 367 1 187 1 23 1 316 1 189 1 101 1 
195 1 279 1 155 1 329 1 181 1 
195 2 76 1 103 1 294 1 279 1 329 2 189 1 181 1 
195 1 279 1 329 1 
340 1 303 1 191 1 235 1 351 1 329 1 195 1 3 1 187 1 23 1 316 1 359 1 181 1 101 1 
294 1 
195 2 103 1 198 1 294 1 279 1 329 2 189 1 181 1 
125 1 103 1 16 2 294 1 279 2 329 5 195 5 51 1 120 1 368 2 212 1 310 1 287 1 337 1 25 1 74 2 189 1 181 2 362 1 
263 1 173 1 
36 1 12 1 191 1 235 2 173 2 3 1 187 2 23 2 101 1 
276 1 301 1 179 1 
173 1 345 1 320 1 299 1 132 1 23 1 187 1 355 1 313 1 206 1 178 1 109 1 134 1 380 1 9 1 34 1 
208 1 276 1 235 1 345 1 3 1 320 1 299 1 132 1 187 2 23 2 147 1 355 1 206 1 313 1 109 1 178 1 380 1 9 1 34 1 101 1 
36 1 208 1 191 1 235 5 173 1 3 4 187 5 23 5 147 2 99 1 197 1 26 1 361 1 101 4 
3 2 152 1 23 2 187 2 235 2 351 1 316 1 101 2 
3 3 23 3 187 3 191 1 147 1 235 3 173 1 101 3 
3 1 23 1 187 1 235 1 351 1 316 1 101 1 
3 1 36 1 12 1 23 1 187 1 191 1 235 1 316 1 101 1 
363 1 77 1 81 1 221 1 345 1 107 2 3 3 224 1 367 1 320 1 299 1 132 1 187 4 206 1 109 1 9 1 272 1 34 1 252 1 57 1 325 1 36 1 58 1 208 1 13 1 191 2 235 3 63 1 173 1 329 1 19 1 283 1 195 1 23 4 355 1 147 1 313 1 335 1 178 1 380 1 316 1 359 1 217 1 101 3 
3 1 23 2 187 2 147 1 99 1 197 1 235 2 173 1 101 1 
36 1 58 1 208 1 191 1 235 3 81 1 294 1 63 1 329 1 195 1 283 1 3 3 367 1 187 3 23 3 147 2 316 1 148 1 101 3 
36 1 191 1 276 1 235 2 3 2 187 2 23 2 147 1 301 1 101 2 
173 1 345 1 320 1 299 1 132 1 23 1 187 1 355 1 313 1 206 1 178 1 109 1 380 1 9 1 34 1 
170 1 327 1 173 1 345 1 320 1 299 1 132 1 23 1 187 1 206 1 178 1 109 1 380 1 9 1 34 1 
244 1 77 1 343 1 295 1 106 1 107 2 224 1 301 2 272 1 252 1 325 2 256 2 92 1 60 1 276 2 172 1 373 1 305 1 141 1 19 1 40 1 335 1 179 2 217 4 
3 1 367 1 152 1 23 1 187 1 235 1 316 1 101 1 
318 1 193 1 
318 1 193 1 
257 1 365 1 
257 1 365 1 
257 1 365 1 
311 1 318 1 193 1 
311 1 318 1 193 1 
318 1 159 1 193 1 
318 2 257 1 365 1 47 1 193 2 156 1 
311 1 318 1 193 1 
136 1 318 1 193 1 
136 1 318 1 193 1 
136 1 318 1 193 1 
78 1 318 1 366 1 3 2 202 1 187 2 53 1 159 1 85 1 322 1 90 1 372 1 326 1 235 2 173 1 193 1 39 1 329 1 195 1 176 1 23 2 48 1 101 2 241 1 
90 2 371 1 326 2 318 2 209 1 29 1 294 1 193 2 39 1 329 2 222 1 366 2 202 2 195 2 144 1 378 2 322 3 47 1 135 1 
284 1 336 1 116 1 
284 1 71 1 116 1 
274 1 336 2 1 1 71 1 116 3 229 1 
274 1 336 1 1 1 71 1 116 2 89 1 
274 1 336 1 1 2 71 1 116 2 
125 3 244 1 103 1 343 1 126 2 294 2 31 1 368 1 158 1 133 1 53 1 207 1 189 1 372 1 16 1 373 1 172 1 279 1 329 5 64 1 194 2 195 5 67 2 120 1 176 1 379 3 337 2 123 1 74 1 317 1 381 1 181 4 
125 8 244 3 341 1 153 1 103 1 343 3 294 5 155 5 268 1 368 2 133 3 87 1 207 3 189 1 273 1 168 1 16 2 373 3 172 3 279 6 329 9 64 2 194 6 66 5 195 9 67 6 120 1 176 4 379 9 337 6 123 2 317 1 74 2 181 7 362 1 
125 3 244 1 343 1 126 1 294 3 368 1 158 1 133 1 207 2 189 1 16 1 373 1 172 1 329 3 64 1 194 2 195 3 67 2 176 1 379 4 337 2 123 1 381 1 74 1 181 2 362 1 
125 5 244 2 343 2 126 2 294 4 268 1 368 1 158 1 133 2 87 1 207 3 189 1 168 1 16 1 373 2 172 2 329 4 64 1 194 4 195 4 67 4 176 2 379 7 337 4 123 1 74 1 381 1 181 3 362 1 
263 1 320 1 97 1 
320 1 328 1 
339 1 
320 1 132 1 345 1 
320 1 259 1 
320 1 132 1 
97 2 320 3 132 1 137 1 6 1 345 1 
325 3 112 1 79 2 256 4 92 2 344 1 373 1 172 1 295 3 30 1 41 1 312 1 269 1 72 1 100 1 188 1 217 7 
325 3 112 1 79 2 256 4 92 2 344 1 373 1 172 1 295 3 30 1 41 1 312 1 269 1 72 1 100 1 188 1 217 7 
325 3 112 1 79 2 256 4 92 2 344 1 373 1 172 1 295 3 30 1 174 1 41 1 312 1 269 1 72 1 100 1 188 1 217 7 
244 3 79 3 343 3 344 2 295 10 30 2 107 2 224 1 133 3 269 1 188 1 88 1 162 1 56 1 252 1 325 15 112 2 256 16 17 1 92 5 172 4 373 4 19 1 41 1 21 4 312 1 68 1 146 1 354 1 335 1 100 2 72 5 357 3 217 31 
79 2 344 1 295 4 30 1 107 4 224 2 249 1 188 1 251 1 252 2 325 4 112 1 256 5 17 1 92 3 373 1 172 1 19 2 41 1 312 1 335 2 72 1 100 1 217 9 
218 1 80 1 220 1 246 1 247 1 2 1 82 1 223 1 4 1 299 1 347 1 52 1 33 2 109 1 229 1 9 1 166 1 255 2 94 1 116 2 308 1 281 1 284 1 69 1 336 1 178 1 71 1 380 1 315 1 358 1 
80 1 219 1 220 1 246 1 247 1 2 2 82 1 223 1 4 1 299 1 347 1 33 3 109 1 229 1 9 1 166 1 255 3 210 1 94 1 278 1 116 2 308 1 281 1 284 1 69 1 336 1 178 1 71 1 380 1 358 1 
80 1 220 1 2 2 82 1 223 1 4 1 299 1 347 1 33 2 109 1 229 1 9 1 255 2 210 1 278 1 116 2 308 1 281 1 284 1 69 1 178 1 336 1 71 1 380 1 358 1 
255 1 219 1 277 1 61 1 246 1 308 2 330 1 82 2 118 1 299 1 69 2 33 1 178 1 380 1 358 2 166 1 34 1 
218 1 80 1 246 1 247 1 82 1 4 1 299 1 52 1 33 1 109 1 229 1 9 1 166 1 255 1 94 1 278 1 116 2 308 1 281 1 284 1 69 1 336 1 178 1 71 1 380 1 358 1 
291 1 
49 1 103 3 0 1 294 2 203 2 346 1 299 2 109 1 8 1 164 2 207 2 9 1 58 1 302 1 15 1 16 1 120 1 23 1 178 2 122 1 123 1 316 1 75 1 74 1 360 1 125 2 81 1 83 2 367 1 368 1 320 1 132 1 187 1 226 1 271 2 189 1 34 2 324 1 190 2 139 1 140 2 236 1 235 1 279 6 329 5 282 1 195 5 283 1 99 1 379 2 290 1 337 2 380 2 240 4 242 2 
49 1 103 1 198 1 81 1 367 1 187 1 8 1 58 1 302 1 190 1 139 1 235 1 279 2 329 3 195 3 283 1 23 1 99 1 122 1 240 2 316 1 360 1 
49 1 103 1 198 1 81 1 294 1 367 1 187 1 8 1 164 1 189 1 58 1 302 1 139 1 235 1 279 1 329 3 195 3 283 1 23 1 99 1 122 1 240 3 316 1 360 1 
49 1 103 1 198 1 81 1 294 1 367 1 203 1 187 1 8 1 164 1 189 1 58 1 302 1 190 1 139 1 235 1 279 2 329 3 195 3 283 1 23 1 99 1 122 1 240 3 316 1 360 1 
49 1 150 1 103 3 198 1 0 1 294 5 203 4 8 1 164 4 207 2 58 1 302 1 349 1 14 1 16 1 120 1 23 1 122 1 316 1 74 1 360 1 125 1 81 1 83 2 367 1 368 1 187 1 321 1 271 2 370 1 189 5 190 4 139 1 235 1 236 1 140 2 279 7 329 5 283 1 195 5 99 1 337 1 240 6 242 2 
49 1 103 2 0 1 294 2 203 2 8 1 207 2 164 2 58 1 302 1 16 1 120 1 23 1 122 1 316 1 74 1 75 1 360 1 125 1 81 1 83 2 367 1 368 1 187 1 271 2 189 1 190 2 139 1 235 1 236 1 140 2 279 4 329 4 283 1 195 4 99 1 379 2 337 1 240 4 242 2 
49 1 150 1 125 1 103 2 0 1 81 1 294 1 83 2 203 2 367 1 368 1 187 1 321 1 8 1 164 2 271 2 207 2 370 1 189 1 58 1 190 2 302 1 16 1 139 1 140 2 236 1 235 1 279 4 329 4 195 4 283 1 120 1 23 1 99 1 337 1 122 1 240 4 316 1 74 1 360 1 242 2 
49 1 150 1 125 1 103 2 0 1 81 1 294 1 83 2 203 2 367 1 368 1 187 1 321 1 8 1 164 2 271 2 207 2 370 1 189 1 58 1 190 2 302 1 16 1 139 1 140 2 236 1 235 1 279 4 329 4 195 4 283 1 120 1 23 1 99 1 337 1 122 1 240 4 316 1 74 1 360 1 242 2 
49 1 125 1 103 2 319 1 81 1 294 1 83 2 203 2 367 1 368 1 187 1 321 1 7 1 8 1 164 2 189 1 253 2 58 1 190 2 302 1 16 1 139 1 236 1 235 1 279 4 329 4 195 4 283 1 120 1 23 1 99 1 239 1 379 2 337 1 122 1 314 2 240 4 316 1 74 1 360 1 242 2 
150 1 49 1 125 1 103 2 0 1 81 1 294 1 83 2 367 1 203 3 368 1 187 1 321 1 8 1 271 2 207 2 164 3 370 1 189 1 58 1 302 1 190 3 14 1 16 1 139 1 140 2 236 1 235 1 279 5 329 4 195 4 283 1 120 1 23 1 99 1 337 1 122 1 240 5 316 1 74 1 360 1 242 2 
150 1 49 1 125 1 103 2 0 1 81 1 294 1 83 2 367 1 203 3 368 1 187 1 321 1 8 1 271 2 207 2 164 3 370 1 189 1 58 1 302 1 190 3 14 1 16 1 139 1 140 2 236 1 235 1 279 5 329 4 195 4 283 1 120 1 23 1 99 1 337 1 122 1 240 5 316 1 74 1 360 1 242 2 
49 1 103 2 294 1 203 2 7 1 8 1 164 2 58 1 253 2 302 1 16 1 120 1 23 1 122 1 314 2 316 1 74 1 75 1 360 1 125 1 81 1 83 2 367 1 368 1 187 1 189 1 190 2 139 1 235 1 236 1 279 4 329 4 283 1 195 4 99 1 379 2 337 1 240 4 242 2 
263 1 77 1 79 1 295 2 107 2 224 1 301 1 188 1 272 1 252 1 325 3 112 1 256 3 92 2 276 1 305 1 172 1 373 1 173 2 19 1 41 1 312 1 335 1 100 1 179 1 217 6 
244 2 77 1 343 1 295 2 221 1 107 4 297 1 224 2 204 1 32 1 133 2 301 4 88 1 272 2 252 2 325 6 256 8 92 1 276 11 172 2 373 1 173 1 261 1 237 1 19 2 20 1 21 3 68 1 335 2 72 1 179 11 357 3 217 14 
77 1 345 1 221 1 107 2 3 1 224 1 320 1 299 1 132 1 187 2 204 1 32 1 206 1 109 1 301 1 134 1 9 1 34 1 272 1 252 1 325 1 208 1 256 1 235 1 173 1 19 1 334 1 23 2 355 1 147 1 313 1 178 1 335 1 380 1 180 1 356 1 101 1 217 2 
244 2 343 2 295 8 154 2 345 2 107 6 3 1 299 3 204 1 206 2 109 2 301 7 9 2 252 3 57 2 112 1 208 1 256 10 172 3 173 2 260 2 19 3 353 2 312 1 23 3 355 2 313 2 178 3 72 4 179 7 217 20 77 3 79 1 183 1 221 1 224 3 320 2 132 2 187 3 32 1 133 2 188 1 34 1 272 3 325 10 92 4 93 1 276 7 235 1 278 1 373 3 41 1 42 1 147 1 335 3 100 1 45 2 380 3 101 1 
77 2 102 1 221 1 296 1 107 4 3 1 224 2 320 3 299 7 132 2 187 1 204 1 109 2 9 2 34 2 272 2 252 2 325 1 59 1 232 2 15 1 256 1 235 1 278 1 305 1 307 1 142 1 19 2 333 1 23 1 147 1 43 1 178 8 335 2 290 1 315 1 380 8 101 1 217 2 
244 1 77 1 343 1 295 1 107 2 3 1 224 1 298 1 187 1 32 1 133 1 301 1 272 1 252 1 36 1 325 2 256 1 92 1 191 1 276 1 235 1 172 1 373 1 19 1 23 1 335 1 179 1 101 1 217 3 
244 1 77 1 256 2 276 1 305 1 172 1 295 1 106 1 19 1 107 2 224 1 335 1 72 1 301 1 179 1 272 1 217 2 252 1 
325 2 77 1 92 1 276 1 60 1 343 1 305 1 373 1 295 1 19 1 107 2 224 1 335 1 301 1 179 1 272 1 217 2 252 1 
325 2 244 1 77 1 256 2 92 1 343 1 276 2 373 1 305 1 172 1 295 2 19 1 107 2 224 1 133 1 335 1 72 1 301 2 179 2 272 1 217 4 252 1 
244 1 77 1 256 2 276 1 172 1 295 1 142 1 106 1 19 1 107 2 224 1 335 1 72 1 301 1 179 1 272 1 217 2 252 1 
325 2 77 1 92 1 276 1 60 1 343 1 373 1 295 1 142 1 19 1 107 2 224 1 335 1 301 1 179 1 272 1 217 2 252 1 
325 2 244 1 77 1 256 2 92 1 343 1 276 2 373 1 172 1 295 2 142 1 19 1 107 2 224 1 133 1 335 1 72 1 301 2 179 2 272 1 217 4 252 1 
325 2 244 1 77 1 256 2 92 1 343 1 276 2 373 1 172 1 295 2 19 1 107 2 224 1 133 1 335 1 72 1 301 2 179 2 272 1 252 1 217 4 
77 1 345 1 221 1 107 2 224 1 320 1 299 1 132 1 204 1 187 1 206 1 109 1 9 1 34 1 272 1 57 1 252 1 325 1 256 1 173 1 19 1 23 1 355 1 313 1 178 1 335 1 380 1 217 2 
77 1 345 1 221 1 107 2 224 1 320 1 299 1 132 1 204 1 205 1 187 1 206 1 109 1 9 1 34 1 272 1 252 1 325 1 170 1 256 1 327 1 173 1 19 1 23 1 178 1 335 1 380 1 217 2 
325 2 244 1 77 1 256 2 92 1 343 1 276 2 373 1 172 1 295 2 19 1 107 2 224 1 32 1 133 1 335 1 72 1 301 2 179 2 272 1 217 4 252 1 
244 1 77 1 343 1 295 2 345 1 107 2 224 1 320 1 299 1 132 1 187 1 133 1 206 1 109 1 301 2 9 1 272 1 57 1 252 1 325 2 256 2 92 1 276 2 373 1 172 1 260 1 19 1 23 1 355 1 313 1 178 1 335 1 72 1 179 2 380 1 315 1 217 4 
244 1 77 1 343 1 295 1 107 2 3 1 224 1 187 1 32 1 133 1 301 1 272 1 252 1 325 1 36 1 256 2 191 1 276 1 235 1 373 1 172 1 19 1 23 1 288 1 335 1 72 1 179 1 101 1 217 3 
244 4 343 4 295 8 107 6 249 1 5 1 348 1 55 1 252 3 254 4 112 1 256 20 17 1 172 5 304 1 19 3 65 1 119 1 21 4 68 1 312 1 177 1 121 2 24 1 72 4 73 1 357 3 217 41 79 1 364 1 184 1 224 3 225 1 133 4 88 3 188 1 325 21 92 4 373 5 95 1 41 1 335 3 100 1 
244 4 79 1 343 3 364 1 295 7 184 1 107 8 224 4 225 1 249 1 133 4 5 1 348 1 188 1 55 1 88 3 252 4 254 4 325 18 112 1 17 2 256 20 92 4 304 1 172 5 373 4 95 1 65 1 19 4 41 1 21 4 119 1 312 1 68 1 177 1 24 1 121 2 335 4 100 1 72 3 73 1 357 3 217 38 
244 7 79 1 343 7 364 1 295 14 107 4 224 2 225 1 249 1 133 7 5 1 348 1 188 1 55 1 88 2 252 2 254 4 325 25 112 1 17 1 256 27 92 7 304 1 172 8 373 8 95 1 237 2 65 1 19 2 41 1 21 4 119 1 312 1 68 2 177 1 24 1 121 1 335 2 100 1 72 7 357 4 217 52 
244 3 343 3 295 6 107 4 224 2 249 1 133 3 88 1 252 2 254 2 325 10 256 9 92 3 304 2 172 3 373 3 65 1 19 2 21 2 119 1 196 1 68 1 177 1 24 1 121 1 335 2 72 3 73 1 357 1 217 19 
244 3 343 2 364 1 295 4 107 6 224 3 225 1 249 1 133 3 5 1 348 1 88 2 55 1 252 3 325 12 254 4 17 2 256 14 92 2 304 1 373 2 172 3 95 1 65 2 19 3 119 1 21 2 177 1 24 1 121 2 335 3 72 2 357 2 217 26 
202 1 90 1 211 1 144 1 326 1 318 1 47 1 193 1 135 1 366 1 
159 1 48 1 
202 1 90 1 293 1 326 1 318 1 306 1 193 1 130 1 366 1 
311 1 267 1 
243 1 136 1 156 1 
90 1 371 1 326 1 318 1 209 1 294 1 39 1 193 1 329 1 222 1 366 1 195 1 202 1 144 1 378 1 322 2 47 1 135 1 
90 1 371 1 326 1 318 1 209 1 294 1 39 1 193 1 329 1 222 1 366 1 195 1 202 1 144 1 378 1 322 2 47 1 135 1 
90 1 371 1 326 1 318 1 209 1 294 1 39 1 193 1 329 1 222 1 366 1 195 1 202 1 144 1 378 1 322 2 47 1 135 1 
311 1 267 1 156 1 
311 1 267 1 156 1 
243 1 136 1 
243 1 136 1 156 1 
78 1 85 1 
78 1 318 1 366 1 202 1 3 2 187 2 53 1 159 1 85 1 86 1 322 1 90 1 372 1 326 1 209 1 235 2 173 1 193 1 329 1 195 1 176 1 23 2 378 1 48 1 181 1 241 1 101 2 
151 1 77 1 102 1 221 1 201 1 107 2 224 1 299 2 187 2 204 1 32 1 250 1 272 1 252 1 325 1 232 2 256 1 235 2 307 1 19 1 352 1 96 1 23 2 178 2 335 1 380 2 217 2 
182 1 80 1 278 1 116 2 247 1 4 1 284 1 299 2 69 1 336 1 109 1 178 2 160 1 44 1 71 1 229 1 380 2 315 1 9 1 
80 1 278 1 116 2 247 1 4 1 284 1 299 1 285 1 69 1 336 1 178 1 44 1 109 1 71 1 229 1 380 1 9 1 
299 1 182 1 69 1 178 1 215 1 380 1 330 1 34 1 
182 1 80 1 278 1 116 2 247 1 4 1 284 1 299 1 69 1 336 1 109 1 178 1 160 1 44 1 71 1 229 1 380 1 9 1 
149 1 
125 1 263 1 212 1 287 1 294 1 337 1 189 1 
125 1 103 1 16 1 0 1 140 1 294 2 279 1 329 1 195 1 120 1 368 1 379 1 337 1 271 1 207 1 74 1 189 1 
244 2 103 3 343 2 294 8 345 3 299 3 300 1 109 4 6 1 9 3 10 2 207 6 16 4 114 2 350 2 172 2 259 2 353 2 120 4 67 6 212 1 178 3 315 1 123 2 216 1 74 4 27 1 125 9 127 2 320 10 368 4 132 3 131 2 133 2 226 1 230 1 189 2 34 1 323 2 35 2 373 2 328 3 279 5 329 5 331 2 194 6 283 2 195 5 97 2 286 1 287 1 379 12 337 8 380 3 
125 8 244 2 103 1 343 2 364 1 294 5 225 1 368 2 133 2 226 1 348 1 88 1 55 1 207 3 189 2 35 1 16 2 138 1 114 2 172 2 373 2 95 1 279 1 329 1 117 1 194 5 195 1 67 5 21 1 120 2 379 6 337 5 123 1 74 2 357 1 
150 1 125 2 340 1 3 1 368 1 187 1 35 1 110 1 112 1 303 1 16 1 191 1 114 2 235 1 351 1 172 2 373 1 329 1 195 1 120 1 41 1 23 1 100 1 337 2 316 1 74 1 359 1 101 1 
125 1 16 1 294 1 120 1 368 1 212 1 287 1 337 1 74 1 189 1 
35 1 125 5 244 2 114 2 343 2 172 2 294 5 373 2 194 5 353 1 67 5 133 2 379 10 337 5 207 5 
195 1 103 1 294 1 279 1 329 1 189 1 
125 2 103 2 346 1 320 1 368 2 299 4 132 1 226 2 109 1 11 1 9 1 34 2 111 1 15 1 16 2 279 4 329 3 282 1 195 3 120 1 286 2 178 4 290 1 337 2 380 4 123 2 74 2 216 1 362 1 
77 1 221 1 345 1 107 2 3 2 224 1 320 1 299 1 132 1 187 3 206 1 109 1 9 1 34 1 272 1 252 1 57 1 325 1 13 1 191 2 235 2 173 1 19 1 23 3 355 1 313 1 335 1 178 1 380 1 359 1 217 1 101 2 
125 1 79 1 16 1 294 4 194 2 67 2 120 1 368 1 226 1 379 4 337 2 123 1 207 2 74 1 189 2 
238 1 326 1 366 1 
238 1 326 1 366 1 
144 1 214 1 326 1 85 1 366 1 
238 1 326 1 366 1 
326 1 199 1 366 1 
326 1 199 1 366 1 
326 1 199 1 366 1 
326 1 366 1 
318 1 193 1 
79 1 295 2 107 2 224 1 225 1 249 1 88 1 188 1 252 1 325 4 112 1 256 4 92 2 373 1 172 1 19 1 21 1 41 1 312 1 335 1 100 1 357 1 217 8 
244 1 79 1 295 3 107 4 224 2 225 1 249 1 133 1 369 1 188 1 88 1 252 2 325 5 112 1 256 6 92 2 373 1 172 2 19 2 41 1 21 2 312 1 68 1 335 2 100 1 72 1 357 1 217 11 
244 2 79 1 343 2 364 1 295 4 107 6 224 3 225 1 249 1 133 2 369 1 348 1 188 1 88 1 55 1 252 3 325 10 112 1 256 9 17 1 92 3 172 3 373 3 95 1 19 3 41 1 21 1 312 1 335 3 100 1 72 1 357 1 217 19 
244 2 79 1 343 1 364 1 295 5 107 6 224 3 225 1 249 1 133 2 369 1 348 1 188 1 88 1 55 1 252 3 325 7 112 1 17 1 256 10 92 3 172 3 373 2 95 1 19 3 41 1 21 1 312 1 335 3 100 1 72 2 357 1 217 17 
79 1 295 2 107 2 224 1 225 1 249 1 88 1 188 1 252 1 325 4 112 1 256 4 92 2 373 1 172 1 19 1 21 1 41 1 312 1 335 1 100 1 357 1 217 8 
244 2 343 2 364 1 295 2 107 2 224 1 225 1 249 1 133 2 348 1 88 1 55 1 252 1 325 6 256 6 92 1 172 2 373 2 95 1 19 1 21 1 335 1 72 1 357 1 217 12 
244 2 79 1 343 1 364 1 295 5 107 8 224 4 225 1 249 1 133 2 348 1 369 1 188 1 88 1 55 1 252 4 325 8 112 1 256 10 17 2 92 3 172 3 373 2 95 1 19 4 41 1 21 1 312 1 335 4 100 1 72 2 357 1 217 18 
244 3 343 2 364 1 295 6 107 8 224 4 225 1 249 1 133 3 348 1 88 1 55 1 252 4 325 7 256 9 17 2 92 3 172 3 373 2 95 1 19 4 21 1 335 4 72 3 73 1 357 1 217 16 
325 4 112 3 256 3 92 3 373 1 172 1 295 6 41 1 312 1 100 3 72 3 188 2 217 7 
244 2 79 1 343 1 364 1 295 4 107 8 224 4 225 1 249 1 133 2 348 1 188 1 88 1 55 1 252 4 325 8 112 1 256 10 17 2 92 3 172 3 373 2 95 1 19 4 41 1 21 1 312 1 335 4 100 1 72 1 73 1 357 1 217 18 
325 4 112 1 79 1 256 4 17 1 92 2 373 1 172 1 295 3 19 2 107 4 224 2 41 1 312 1 335 2 72 1 100 1 188 1 217 8 252 2 
325 3 263 1 112 1 79 1 256 3 92 2 172 1 373 1 295 2 41 1 312 1 100 1 188 1 217 6 
325 2 244 1 256 2 92 1 343 1 373 1 172 1 295 2 19 1 107 2 224 1 133 1 369 1 335 1 72 1 252 1 217 4 
325 4 244 1 256 3 92 1 343 1 373 1 172 1 295 2 21 2 68 1 133 1 72 1 88 1 357 1 217 7 
244 2 79 1 343 2 295 9 107 4 297 1 224 2 133 2 188 1 252 2 325 12 112 2 37 1 256 11 17 2 92 5 172 3 373 3 237 1 19 2 41 1 21 2 312 1 68 1 335 2 100 2 72 4 357 2 217 23 
325 1 21 1 217 1 
256 1 357 1 217 1 
325 3 244 1 256 3 92 2 343 1 172 1 373 1 295 3 19 1 107 2 353 1 224 1 133 1 335 1 369 1 72 1 252 1 217 6 
244 2 343 2 364 1 295 2 107 2 224 1 225 1 249 1 133 2 348 1 88 1 55 1 252 1 325 6 256 6 92 1 172 2 373 2 95 1 19 1 21 1 335 1 72 1 357 1 217 12 
325 3 112 1 256 3 92 1 172 1 373 1 295 2 41 1 100 1 72 1 217 6 
325 2 112 1 37 1 256 1 17 1 92 1 295 2 19 1 107 2 224 1 312 1 335 1 72 1 100 1 188 1 217 3 252 1 
110 1 325 5 112 2 256 5 92 3 172 2 373 2 295 5 19 1 107 2 224 1 41 1 249 1 335 1 100 2 72 2 252 1 217 10 
244 1 256 2 172 1 295 1 19 1 107 2 224 1 249 1 335 1 72 1 252 1 217 2 
325 2 244 1 256 2 92 1 343 1 373 1 172 1 295 2 19 1 107 2 224 1 249 1 133 1 335 1 72 1 252 1 217 4 
325 2 112 1 37 1 17 1 256 1 92 1 295 2 19 3 107 6 224 3 249 1 335 3 100 1 72 1 73 1 217 3 252 3 
244 3 79 1 343 3 295 12 107 10 224 5 249 1 133 3 369 1 188 1 88 1 56 1 252 5 325 18 112 3 37 1 17 2 256 16 92 7 172 5 373 5 19 5 41 2 21 4 312 1 146 1 68 1 354 1 335 5 100 3 72 5 73 1 357 3 217 34 
23 1 187 1 262 1 99 1 235 1 197 1 173 1 
245 1 233 1 265 1 235 1 173 1 200 1 18 1 262 1 187 1 23 1 99 1 197 1 
263 1 320 1 299 1 132 1 15 1 109 1 290 1 178 1 380 1 9 1 34 1 
235 1 173 1 345 1 3 1 320 1 299 1 132 1 187 2 23 2 147 1 206 1 313 1 109 1 178 1 380 1 9 1 34 1 101 1 
345 2 3 1 367 1 320 3 299 1 132 2 187 2 206 1 109 1 9 1 58 1 235 2 350 1 173 1 259 1 286 1 23 2 147 1 313 1 178 1 380 1 316 1 101 2 
345 2 3 1 367 1 320 3 157 1 299 2 132 2 187 2 206 1 109 1 9 1 58 1 170 1 235 2 350 1 173 1 259 1 286 1 23 2 147 1 178 2 380 2 316 1 101 2 
294 1 345 1 320 4 157 1 299 3 132 1 109 1 9 1 189 1 34 1 234 1 350 1 328 1 279 1 259 1 329 2 195 2 283 1 97 1 286 1 178 3 338 1 380 3 
294 1 350 1 328 1 259 1 279 1 345 1 329 2 283 1 195 2 320 4 97 1 157 1 299 3 132 1 131 1 286 1 109 1 178 3 380 3 9 1 34 1 189 1 
59 1 299 1 109 1 178 1 380 1 9 1 
232 1 59 1 278 1 62 1 307 1 345 1 296 1 143 1 333 1 320 3 299 6 213 1 132 2 43 1 178 7 6 1 109 3 315 1 380 7 9 2 34 2 
77 2 79 1 295 2 345 1 154 1 107 4 3 1 224 2 320 1 299 1 132 1 187 2 32 1 206 1 109 1 301 1 188 1 9 1 272 2 252 2 57 1 325 3 112 1 256 3 92 2 276 1 235 1 373 1 172 1 173 2 260 1 19 2 352 1 41 1 312 1 23 2 147 1 355 1 313 1 335 2 178 1 100 1 179 1 315 1 380 1 217 6 101 1 
125 1 103 1 294 1 127 1 368 2 320 2 299 1 131 1 10 1 189 1 34 1 16 2 328 1 279 2 329 3 331 1 195 3 283 1 120 2 97 1 212 1 287 1 178 1 337 1 380 1 74 2 216 1 181 1 
27 1 59 1 345 1 97 1 320 2 299 2 132 1 178 2 6 1 109 2 315 1 380 2 9 1 
15 1 320 1 157 1 299 4 132 1 109 1 178 4 290 1 380 4 315 1 9 1 165 1 34 1 
183 1 62 1 258 1 345 1 375 1 320 1 299 2 213 1 132 1 286 1 178 2 109 2 380 2 9 1 
4 1 284 1 299 1 109 1 178 1 71 1 116 1 380 1 9 1 34 1 
151 1 299 2 178 2 278 1 307 1 380 2 315 1 
15 1 307 1 296 1 333 1 320 3 299 4 132 2 286 1 290 1 178 5 109 2 380 5 315 1 9 2 165 1 34 1 
15 1 307 1 296 1 320 3 299 4 132 2 286 1 290 1 178 5 109 2 380 5 315 1 9 2 165 1 34 1 167 1 
170 1 235 1 173 1 345 1 3 1 320 1 299 1 132 1 187 2 23 2 147 1 206 1 109 1 178 1 380 1 9 1 34 1 101 1 
62 1 345 1 143 1 320 1 299 1 213 1 132 1 286 1 178 1 6 1 109 2 380 1 9 1 
145 1 309 1 98 1 266 1 173 1 
58 1 38 1 342 1 81 1 294 1 266 2 63 1 173 1 329 2 280 1 283 1 195 2 367 1 309 1 145 2 98 2 316 1 189 1 181 1 
235 1 201 1 96 1 145 1 309 1 98 1 187 1 23 1 250 1 
309 1 38 1 280 1 
223 1 263 1 347 1 220 1 
223 1 255 1 347 1 33 1 220 1 246 1 166 1 
255 1 82 1 358 1 
231 1 218 1 255 3 169 2 220 1 246 1 185 1 223 1 347 1 33 3 163 1 166 1 
223 1 255 2 347 1 70 1 33 2 220 1 246 1 2 1 166 1 
218 1 255 1 246 1 115 1 116 1 223 1 284 1 33 1 161 1 336 1 166 1 
223 1 218 1 255 1 347 1 33 1 246 1 166 1 
218 1 255 1 347 2 33 1 220 1 246 1 166 1 
218 1 255 2 192 1 104 1 246 2 223 1 248 1 347 1 33 2 166 2 
218 1 255 3 220 1 105 1 246 1 115 1 2 2 223 2 347 1 33 3 227 1 228 1 166 1 
218 1 255 2 220 1 116 2 246 1 2 1 223 1 284 1 347 1 108 1 33 2 336 1 71 1 229 1 166 1 
218 1 255 4 220 1 50 1 105 1 246 2 115 1 2 2 223 2 347 1 70 1 33 4 166 2 
223 1 218 1 255 1 347 1 33 1 220 1 246 1 166 1 
231 1 169 1 255 4 220 2 105 1 246 1 115 1 2 2 223 3 22 1 347 2 33 4 163 1 166 1 
223 1 218 1 255 2 347 1 289 1 33 2 220 1 129 1 246 1 2 1 46 1 166 1 
231 1 218 1 255 3 169 2 220 1 246 1 376 1 223 1 347 1 33 3 163 2 166 1 
223 2 84 2 91 1 270 1 
218 1 255 1 264 1 33 1 246 1 166 1 
223 1 218 1 255 2 347 1 33 2 227 1 220 1 246 1 2 1 166 1 
374 1 
223 1 218 1 255 1 347 1 33 1 220 1 246 1 166 1 
223 1 218 1 169 1 255 3 347 1 33 3 227 1 220 1 246 1 2 1 166 1 
223 1 22 1 105 1 115 1 
223 1 347 1 

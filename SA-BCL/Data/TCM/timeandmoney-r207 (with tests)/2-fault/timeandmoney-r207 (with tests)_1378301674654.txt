#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 127 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
290 4 22 1 105 2 46 2 239 9 268 5 137 1 317 1 93 1 190 1 367 1 273 2 196 1 372 1 6 1 173 1 57 2 306 1 331 9 11 3 152 1 79 6 356 1 82 2 337 1 360 2 311 2 160 1 
290 4 22 1 105 2 46 2 239 9 268 5 137 1 317 1 93 1 190 1 367 1 273 2 196 1 372 1 6 1 173 1 57 2 306 1 331 9 11 3 152 1 79 6 356 1 82 2 337 1 360 2 160 1 311 2 
290 5 22 1 105 2 46 2 239 10 268 6 137 1 317 1 93 1 190 1 367 1 273 2 196 1 372 1 6 1 173 1 57 2 306 1 331 10 11 4 152 1 79 7 356 1 82 2 337 1 360 2 160 1 311 2 
290 3 22 1 105 2 46 2 239 7 268 4 137 1 317 1 93 1 190 1 367 1 273 2 196 1 372 1 6 1 173 1 57 2 306 1 331 7 11 2 79 4 356 1 82 2 337 1 360 2 160 1 311 1 
196 1 290 2 105 1 46 1 173 1 57 1 239 4 268 3 11 1 331 4 93 1 152 1 79 3 356 1 82 1 337 1 360 1 311 2 
196 1 372 1 105 1 239 2 57 1 268 1 187 1 331 2 154 1 356 1 82 1 367 1 67 1 337 1 273 1 360 1 
196 1 290 1 105 2 239 3 268 2 137 1 331 3 11 1 79 1 356 1 337 1 273 1 360 2 
290 4 339 1 105 2 46 1 239 9 109 1 268 5 137 1 317 1 93 1 273 1 196 1 173 1 57 1 11 3 331 9 152 1 79 7 356 1 82 1 337 1 360 2 160 1 311 2 
290 4 339 1 105 2 46 1 239 9 109 1 268 5 137 1 317 1 93 1 273 1 196 1 173 1 57 1 11 3 331 9 152 1 79 7 356 1 82 1 337 1 360 2 160 1 311 2 
127 1 193 1 123 1 
319 1 167 2 123 1 
70 2 235 2 373 2 292 1 8 2 163 2 157 1 41 2 
231 1 63 1 235 2 292 1 163 2 269 1 294 1 28 1 184 1 135 1 91 1 113 1 244 2 320 1 140 1 96 2 70 3 73 2 75 1 56 1 146 1 373 2 8 3 77 1 59 1 252 1 304 1 126 1 354 1 176 2 178 1 228 1 157 1 17 1 230 2 129 1 41 2 
144 1 70 1 235 1 373 1 8 1 163 1 157 1 347 1 208 1 41 1 
70 1 144 1 145 1 8 1 183 1 123 1 226 1 138 1 245 1 191 1 193 1 103 1 31 1 41 1 
144 1 70 1 138 1 226 1 145 1 235 1 373 1 245 2 8 1 163 1 191 1 193 1 31 2 123 1 41 1 
33 1 245 1 205 1 31 1 379 1 
33 1 243 1 245 2 193 1 102 1 205 1 31 2 123 1 
33 1 245 1 31 1 
144 1 70 1 264 1 235 1 373 1 163 1 8 1 245 1 347 1 157 1 205 1 208 1 31 1 41 1 
123 1 
281 1 33 1 243 1 245 2 193 1 205 1 31 2 123 1 
143 1 142 2 278 1 97 1 213 1 33 2 108 1 303 1 123 1 253 2 243 1 245 5 322 1 203 2 193 1 205 2 256 1 31 5 369 1 
292 1 127 1 
70 2 235 1 373 1 292 2 8 2 163 1 284 1 335 1 41 2 
37 1 358 1 285 1 
231 1 70 1 63 1 292 1 8 1 122 1 59 1 294 1 304 1 91 1 320 1 176 1 140 1 96 1 230 1 129 1 
231 1 70 2 63 1 326 1 23 1 373 1 163 1 8 2 59 1 294 1 304 1 91 1 320 1 176 1 358 1 140 1 129 1 96 1 230 1 41 1 
70 3 326 1 235 1 373 3 292 1 8 3 163 3 41 3 
144 1 70 1 373 1 8 1 163 1 208 1 41 1 
144 1 70 1 235 1 335 1 373 1 8 1 163 1 284 1 41 1 
231 1 63 1 235 2 23 1 292 1 163 3 269 1 294 1 28 1 184 1 91 1 113 1 166 1 138 1 244 2 320 1 245 1 191 1 140 1 31 1 96 1 70 4 144 1 73 1 326 1 75 1 56 1 145 1 146 1 373 3 8 4 59 1 304 1 284 1 309 1 226 1 176 1 178 1 228 1 157 1 17 1 129 1 230 1 41 3 
70 2 326 1 80 1 373 1 292 1 8 2 163 1 183 1 41 2 
144 1 70 3 326 2 235 1 145 1 23 1 373 3 163 3 8 3 284 1 123 1 309 1 226 1 138 1 245 1 191 1 324 1 31 1 41 3 
70 2 326 1 235 1 373 2 163 2 8 2 284 1 37 1 358 1 41 2 
231 1 70 1 63 1 292 1 8 1 294 1 59 1 304 1 91 1 320 1 176 1 140 1 96 1 230 1 129 1 
361 1 231 1 70 1 63 1 292 1 8 1 294 1 59 1 91 1 320 1 176 1 96 1 230 1 370 1 129 1 
28 1 29 1 113 1 217 1 244 2 346 1 95 1 325 1 141 1 73 4 56 1 75 2 146 1 119 1 77 2 223 1 285 2 305 1 202 1 334 1 228 1 37 2 358 2 17 1 
144 1 70 1 280 1 138 1 373 1 8 1 163 1 41 1 
70 5 1 1 326 2 235 1 161 1 373 4 23 1 292 1 163 4 8 5 183 1 284 1 80 1 41 5 
144 1 70 2 280 1 373 2 8 2 163 2 208 1 41 2 
363 1 52 1 
363 1 52 1 
221 1 15 1 
221 1 15 1 
221 1 15 1 
363 1 158 1 52 1 
248 1 363 1 52 1 
224 1 221 1 15 1 363 2 52 2 330 1 
363 1 158 1 52 1 
363 1 158 1 52 1 
363 1 270 1 52 1 
363 1 270 1 52 1 
363 1 270 1 52 1 
24 1 237 2 363 2 352 2 164 1 353 1 123 1 52 2 174 2 242 1 224 1 287 1 333 1 81 1 245 2 156 3 323 2 31 2 83 2 
292 1 237 1 163 2 363 1 52 1 165 1 245 1 31 1 248 1 70 2 373 2 8 2 9 1 352 1 98 1 174 1 286 1 124 1 287 1 156 1 204 1 359 1 83 1 41 2 
46 1 57 1 82 1 
57 1 82 1 67 1 
301 1 46 2 82 3 110 1 67 1 111 1 
301 1 46 1 82 2 110 1 67 1 148 1 
301 2 46 1 82 2 110 1 67 1 
362 1 51 1 188 1 319 1 167 3 217 1 243 1 245 5 193 1 31 5 369 1 274 1 141 1 142 1 249 1 143 3 118 2 33 1 7 1 78 1 303 2 123 2 305 1 286 1 124 1 334 1 253 1 227 2 203 1 204 1 205 4 18 2 
48 1 364 1 319 3 167 9 217 3 243 1 245 9 54 1 193 1 31 9 275 1 274 1 369 1 141 3 142 2 249 2 143 8 300 1 97 1 118 6 33 6 7 3 120 1 78 2 303 6 123 5 305 3 125 5 334 3 253 2 204 4 203 2 205 7 18 6 379 5 
362 1 188 1 319 2 167 4 217 1 245 3 193 1 31 3 141 1 142 1 249 1 143 3 97 1 118 2 7 1 78 1 303 2 123 3 305 1 334 1 253 1 227 1 203 1 204 1 205 2 18 2 
362 1 364 1 188 1 319 3 167 7 217 2 245 4 193 1 31 4 275 1 141 2 142 1 249 1 143 5 300 1 97 1 118 4 7 2 78 1 303 4 123 4 305 2 334 2 253 1 227 2 203 1 204 2 205 3 18 4 
127 1 59 1 229 1 
59 1 241 1 
76 1 
231 1 59 1 
231 1 63 1 25 1 336 1 59 3 229 2 
231 1 63 1 59 1 
0 1 59 1 
131 1 20 1 73 7 75 3 77 4 328 1 305 1 151 1 215 2 332 1 345 1 202 3 334 1 272 1 325 2 288 1 19 1 
131 1 20 1 73 7 75 3 77 4 328 1 305 1 151 1 215 2 332 1 345 1 202 3 334 1 272 1 325 2 288 1 19 1 
131 1 20 1 73 7 75 3 77 4 328 1 305 1 151 1 215 2 332 1 307 1 345 1 202 3 334 1 272 1 325 2 288 1 19 1 
312 1 20 1 131 2 28 1 215 3 92 1 113 1 345 2 217 3 244 2 272 1 246 4 192 1 366 3 325 5 141 3 73 31 56 1 75 15 146 1 7 3 77 16 328 2 305 4 151 2 332 1 202 10 355 1 334 4 155 1 378 1 288 1 62 1 19 5 
312 1 313 1 131 1 73 9 75 4 56 2 146 2 77 5 328 1 28 2 305 1 151 1 215 2 113 2 332 1 345 1 202 4 334 1 244 4 272 1 288 1 325 3 19 1 257 1 
263 1 181 1 105 1 212 1 107 1 46 1 182 1 239 2 47 1 268 1 134 1 111 1 50 1 91 1 320 1 66 1 67 1 273 1 96 1 116 1 196 1 57 1 331 2 79 1 176 1 356 1 82 2 337 1 360 1 230 1 
263 1 105 1 107 1 46 1 182 1 239 3 133 1 47 1 268 1 134 1 111 1 50 1 91 1 320 1 66 1 67 1 273 1 96 1 116 1 57 1 331 3 200 1 79 2 201 1 176 1 356 1 82 2 337 1 360 1 230 1 
107 1 46 1 182 1 239 2 133 1 47 1 268 1 134 1 111 1 91 1 320 1 66 1 67 1 273 1 96 1 116 1 57 1 331 2 79 2 201 1 176 1 356 1 82 2 337 1 230 1 
231 2 261 1 211 1 63 1 105 1 162 1 182 2 239 1 134 2 294 1 344 1 91 2 320 1 66 2 170 1 220 1 273 2 96 1 222 1 250 1 59 2 150 1 331 1 200 1 176 1 179 1 338 1 360 1 39 1 230 1 
263 1 105 1 212 1 107 1 46 1 182 1 239 1 47 1 134 1 111 1 50 1 91 1 320 1 66 1 67 1 273 1 96 1 116 1 196 1 57 1 331 1 201 1 176 1 82 2 360 1 230 1 
26 1 
340 1 231 2 261 1 63 1 162 1 266 1 294 2 91 2 320 1 243 1 245 2 220 1 31 2 369 1 96 2 142 1 249 1 143 1 33 2 303 1 59 2 150 1 253 1 176 2 203 1 338 1 38 1 39 1 230 2 
144 1 70 1 281 1 145 1 33 2 34 2 8 1 183 1 58 1 251 1 216 1 138 1 226 1 53 1 243 1 245 3 191 1 171 1 103 1 31 3 128 1 41 1 
144 1 70 1 281 1 145 1 33 1 34 3 8 1 183 1 58 1 123 1 216 1 138 1 226 1 53 1 243 1 245 3 191 1 171 1 193 1 219 1 103 1 31 3 128 1 41 1 
144 1 70 1 281 1 145 1 33 2 34 3 8 1 198 1 183 1 58 1 251 1 123 1 216 1 138 1 226 1 53 1 243 1 245 3 191 1 171 1 193 1 219 1 103 1 31 3 128 1 41 1 
85 1 236 2 183 1 90 1 319 2 216 1 365 1 53 1 138 1 243 3 245 5 171 1 191 1 193 5 219 4 31 5 2 2 369 1 298 1 143 1 142 1 70 1 144 1 281 1 145 1 33 7 34 6 327 1 8 1 198 4 303 1 147 1 58 1 251 4 123 5 329 2 226 1 253 1 203 1 207 2 103 1 128 1 210 1 41 1 
236 2 183 1 90 1 138 1 53 1 243 2 245 4 191 1 193 1 2 2 144 1 142 1 143 1 145 1 8 1 198 2 58 1 303 1 251 2 253 1 203 1 103 1 207 2 214 1 216 1 319 2 167 2 171 1 219 2 31 4 369 1 70 1 33 4 34 4 327 1 123 2 329 2 226 1 128 1 41 1 
85 1 236 2 183 1 90 1 319 2 216 1 53 1 138 1 243 2 245 4 171 1 191 1 193 1 219 2 31 4 2 2 369 1 298 1 143 1 70 1 144 1 142 1 145 1 33 4 34 4 327 1 8 1 198 2 303 1 58 1 251 2 123 1 329 2 226 1 253 1 203 1 207 2 103 1 128 1 41 1 210 1 
85 1 236 2 183 1 90 1 319 2 216 1 53 1 138 1 243 2 245 4 171 1 191 1 193 1 219 2 31 4 2 2 369 1 298 1 143 1 70 1 144 1 142 1 145 1 33 4 34 4 327 1 8 1 198 2 303 1 58 1 251 2 123 1 329 2 226 1 253 1 203 1 207 2 103 1 128 1 41 1 210 1 
42 1 85 1 236 2 183 1 240 1 90 1 65 2 167 2 216 1 53 1 138 1 243 2 245 4 171 1 191 1 193 1 219 2 31 4 369 1 143 1 70 1 144 1 142 1 145 1 33 4 374 2 34 4 8 1 198 2 303 1 58 1 251 2 123 1 329 2 226 1 253 1 60 1 203 1 103 1 128 1 41 1 
85 1 236 2 183 1 90 1 319 2 216 1 53 1 138 1 243 2 245 4 171 1 191 1 193 1 219 3 31 4 2 2 369 1 298 1 143 1 142 1 70 1 144 1 145 1 33 5 34 5 327 1 8 1 198 3 303 1 58 1 147 1 251 3 123 1 329 2 226 1 253 1 203 1 207 2 103 1 128 1 41 1 210 1 
85 1 236 2 183 1 90 1 319 2 216 1 53 1 138 1 243 2 245 4 171 1 191 1 193 1 219 3 31 4 2 2 369 1 298 1 143 1 142 1 70 1 144 1 145 1 33 5 34 5 327 1 8 1 198 3 303 1 58 1 147 1 251 3 123 1 329 2 226 1 253 1 203 1 207 2 103 1 128 1 41 1 210 1 
236 2 183 1 214 1 90 1 65 2 167 2 216 1 53 1 138 1 243 2 245 4 171 1 191 1 193 1 219 2 31 4 369 1 143 1 142 1 70 1 144 1 145 1 33 4 374 2 34 4 8 1 198 2 303 1 58 1 251 2 123 1 329 2 226 1 253 1 60 1 203 1 103 1 128 1 41 1 
73 6 75 3 56 1 146 1 292 2 77 3 328 1 28 1 285 1 305 1 215 1 113 1 332 1 345 1 202 2 334 1 346 1 244 2 127 1 272 1 228 1 37 1 358 1 17 1 325 2 288 1 
291 1 314 1 292 1 27 1 28 2 113 2 271 1 217 1 244 4 246 3 192 1 366 3 325 1 141 2 73 14 75 6 56 2 146 2 7 2 77 8 121 1 285 11 305 2 126 1 202 2 334 1 178 1 228 1 37 4 358 11 378 1 17 2 19 1 
231 1 63 1 23 1 292 1 86 1 163 1 294 1 28 1 91 1 113 1 320 1 244 2 140 1 69 1 96 1 70 2 72 1 326 1 73 2 56 1 75 1 373 1 146 1 8 2 77 1 122 1 121 1 59 1 304 1 126 1 176 1 228 1 178 1 37 1 17 1 129 1 230 1 41 1 
231 2 292 2 294 1 136 1 91 2 345 1 244 6 348 2 140 2 96 3 141 2 56 3 146 3 8 3 7 2 59 2 199 2 304 2 305 3 201 1 202 8 358 7 17 3 19 4 63 2 23 1 163 1 267 2 316 1 269 2 28 3 215 1 113 3 217 2 320 2 272 1 325 4 70 3 326 1 73 20 75 10 373 1 77 10 328 1 121 1 285 7 175 2 332 1 126 1 334 3 176 3 178 1 228 3 37 7 288 1 230 3 129 2 84 1 41 1 
231 2 261 1 63 1 341 1 162 1 294 1 28 1 91 2 113 1 320 1 244 2 220 1 96 2 73 2 56 1 75 1 146 1 77 1 36 1 59 2 252 1 150 1 126 1 176 2 228 1 178 1 17 1 338 1 39 1 230 2 
235 1 163 1 28 1 113 1 217 1 244 2 321 1 325 1 141 1 70 1 73 3 56 1 75 2 146 1 373 1 8 1 7 1 77 1 121 1 284 1 285 1 305 1 202 1 334 1 228 1 37 1 358 1 17 1 41 1 
73 2 56 1 146 1 223 1 77 2 28 1 285 1 305 1 113 1 202 1 346 1 244 2 228 1 37 1 358 1 17 1 19 1 141 1 
73 2 56 1 75 2 146 1 28 1 285 1 113 1 202 1 217 1 334 1 346 1 244 2 228 1 37 1 358 1 17 1 325 1 95 1 
28 1 113 1 217 1 244 2 346 1 325 1 141 1 73 4 56 1 75 2 146 1 7 1 77 2 285 2 305 1 202 2 334 1 228 1 37 2 358 2 17 1 19 1 
73 2 56 1 146 1 223 1 77 2 36 1 28 1 285 1 305 1 113 1 202 1 244 2 228 1 37 1 358 1 17 1 19 1 141 1 
73 2 56 1 75 2 146 1 36 1 28 1 285 1 113 1 202 1 217 1 334 1 244 2 228 1 37 1 358 1 17 1 325 1 95 1 
28 1 113 1 217 1 244 2 325 1 141 1 73 4 56 1 75 2 146 1 7 1 77 2 36 1 285 2 305 1 202 2 334 1 228 1 37 2 358 2 17 1 19 1 
28 1 113 1 217 1 244 2 325 1 141 1 73 4 56 1 75 2 146 1 7 1 77 2 285 2 305 1 202 2 334 1 228 1 37 2 358 2 17 1 19 1 
231 1 63 1 292 1 269 1 294 1 28 1 91 1 113 1 320 1 244 2 140 1 96 1 70 1 73 2 56 1 75 1 146 1 8 1 77 1 59 1 304 1 126 1 176 1 228 1 178 1 17 1 129 1 230 1 
231 1 361 1 63 1 292 1 294 1 28 1 91 1 113 1 320 1 244 2 370 1 96 1 70 1 73 2 56 1 75 1 146 1 8 1 77 1 35 1 59 1 126 1 176 1 228 1 178 1 17 1 129 1 230 1 
28 1 113 1 217 1 244 2 325 1 141 1 73 4 56 1 75 2 146 1 7 1 77 2 121 1 285 2 305 1 202 2 334 1 228 1 37 2 358 2 17 1 19 1 
231 1 63 1 181 1 269 1 28 1 91 1 113 1 217 1 320 1 244 2 348 1 140 1 325 1 141 1 96 1 70 1 73 4 75 2 56 1 146 1 8 1 7 1 77 2 59 1 304 1 285 2 305 1 202 2 334 1 176 1 228 1 37 2 358 2 17 1 19 1 129 1 230 1 
235 1 163 1 28 1 113 1 217 1 244 2 141 1 70 1 73 3 75 1 56 1 146 1 373 1 8 1 7 1 77 2 121 1 284 1 285 1 305 1 202 1 334 1 255 1 228 1 37 1 358 1 17 1 19 1 41 1 
45 2 234 1 87 1 49 1 296 1 345 1 244 6 246 4 192 1 3 1 141 4 299 1 55 1 56 3 146 3 7 4 305 5 202 8 14 1 159 1 19 4 312 1 313 1 265 4 28 3 215 1 113 3 217 4 272 1 30 1 366 3 68 1 325 4 73 41 75 21 117 1 77 20 328 1 332 1 225 1 334 5 378 3 288 1 
312 2 313 1 265 4 234 1 45 2 87 1 49 1 28 4 215 1 296 1 113 4 345 1 217 3 244 8 272 1 246 4 30 1 192 1 366 3 68 1 325 4 3 1 141 4 299 1 55 1 73 38 117 1 56 4 75 18 146 4 7 4 77 20 328 1 305 5 332 1 225 1 202 7 14 1 334 4 378 3 288 1 159 1 19 3 
312 1 313 1 314 2 265 4 234 1 45 1 87 1 49 1 28 2 215 1 296 1 113 2 345 1 217 7 244 4 272 1 246 4 30 1 192 2 366 4 68 1 325 7 3 1 141 7 299 1 73 52 117 1 56 2 75 25 146 2 7 7 77 27 328 1 305 8 332 1 225 1 202 14 334 8 378 2 288 1 159 1 19 7 
313 1 265 2 45 1 49 1 28 2 296 2 113 2 217 3 244 4 246 2 30 1 192 1 366 1 325 3 3 1 141 3 299 1 73 19 302 1 56 2 75 10 146 2 7 3 77 9 305 3 202 6 14 1 334 3 378 1 19 3 
312 2 313 1 265 4 45 2 234 1 87 1 49 1 28 3 296 1 113 3 217 2 244 6 30 1 246 2 366 2 68 1 325 2 3 2 141 3 299 1 73 26 75 12 56 3 117 1 146 3 7 3 77 14 305 3 225 1 202 4 334 2 378 2 159 1 19 2 
224 1 333 1 237 1 363 1 352 1 164 1 10 1 52 1 174 1 83 1 
248 1 359 1 
350 1 237 1 363 1 352 1 209 1 52 1 174 1 83 1 195 1 
237 1 363 1 352 1 164 1 353 1 123 1 52 1 174 1 242 1 224 1 287 1 333 1 81 1 245 1 156 2 323 1 31 1 83 1 
237 1 363 1 352 1 164 1 353 1 123 1 52 1 174 1 242 1 224 1 287 1 333 1 81 1 245 1 156 2 323 1 31 1 83 1 
237 1 363 1 352 1 164 1 353 1 123 1 52 1 174 1 242 1 224 1 287 1 333 1 81 1 245 1 156 2 323 1 31 1 83 1 
88 1 158 1 330 1 
88 1 158 1 330 1 
270 1 130 1 
270 1 330 1 130 1 
165 1 98 1 
292 1 237 1 363 1 163 2 52 1 343 1 165 1 245 1 323 1 31 1 248 1 70 2 373 2 8 2 9 1 352 1 98 1 174 1 286 1 124 1 81 1 156 1 204 1 205 1 359 1 83 1 41 2 
88 1 158 1 
270 1 330 1 130 1 
231 1 259 1 341 1 295 1 28 1 91 1 113 1 320 1 244 2 368 1 96 2 70 2 32 1 5 1 73 2 56 1 75 1 146 1 8 2 77 1 121 1 59 1 252 2 375 1 126 1 176 2 228 1 178 1 17 1 230 2 41 2 
104 1 263 1 181 1 74 1 107 1 46 1 57 1 111 1 149 1 91 1 201 1 320 1 176 2 66 1 82 2 67 1 96 2 230 2 116 1 
263 1 107 1 46 1 57 1 111 1 149 1 91 1 201 1 320 1 176 1 101 1 66 1 82 2 67 1 96 1 230 1 116 1 
231 2 261 1 63 1 162 1 294 1 344 1 91 2 320 1 66 1 220 1 96 1 197 1 74 1 222 1 59 2 150 1 176 1 39 1 338 1 230 1 
104 1 263 1 74 1 107 1 46 1 57 1 111 1 149 1 91 1 201 1 320 1 176 1 66 1 82 2 67 1 96 1 230 1 116 1 
168 1 
143 1 278 1 127 1 193 1 303 1 256 1 123 1 
319 1 167 1 243 1 245 1 193 1 31 1 2 1 369 1 143 1 142 1 33 1 327 1 303 1 123 2 253 1 203 1 207 1 
340 1 231 3 0 2 232 1 233 2 181 1 238 2 241 3 294 1 186 2 91 4 94 1 243 3 245 5 191 2 193 2 96 3 141 2 143 9 249 2 142 4 351 2 7 2 303 8 59 10 305 2 253 4 203 4 206 2 256 1 18 6 63 3 64 2 267 2 114 1 318 2 167 12 319 6 217 2 320 3 172 1 31 5 369 4 278 1 279 2 33 5 118 6 123 8 376 1 334 2 176 3 336 1 229 2 230 3 
340 1 233 1 234 1 87 1 318 2 167 6 319 3 217 2 243 1 245 1 246 1 366 1 193 2 31 1 369 2 141 2 249 1 143 8 142 2 283 1 117 1 33 1 118 5 7 2 303 5 123 5 305 2 225 1 153 1 253 2 334 2 203 2 378 1 159 1 18 5 
233 1 264 1 235 1 163 1 112 1 318 2 345 1 245 1 347 1 31 1 369 1 298 1 144 1 70 1 142 1 143 2 373 1 8 1 328 1 303 2 305 2 332 1 253 1 334 1 203 1 157 1 208 1 41 1 
142 1 143 1 278 1 303 1 123 1 253 1 203 1 193 1 256 1 369 1 
143 5 233 1 118 5 267 1 7 2 303 5 123 5 305 2 318 2 167 10 319 5 217 2 334 2 18 5 141 2 
33 1 243 1 245 1 193 1 31 1 123 1 
231 2 340 1 261 1 63 1 162 1 266 1 294 2 91 2 94 1 320 1 243 1 245 1 220 1 31 1 369 1 96 2 142 1 249 1 143 1 33 2 303 1 59 2 150 1 253 1 176 2 203 1 338 1 38 1 39 1 230 2 
231 1 63 1 235 2 292 1 163 2 269 1 294 1 28 1 184 1 91 1 113 1 244 2 320 1 140 1 96 1 70 3 73 1 75 1 56 1 146 1 373 2 8 3 59 1 304 1 176 1 178 1 228 1 157 1 17 1 230 1 129 1 41 2 
340 1 142 1 249 1 143 1 118 2 303 2 123 4 215 1 319 2 167 4 253 1 203 1 193 2 18 2 369 1 
43 1 237 1 174 1 
165 1 333 1 237 1 247 1 174 1 
43 1 237 1 174 1 
43 1 237 1 174 1 
237 1 115 1 174 1 
237 1 115 1 174 1 
237 1 115 1 174 1 
237 1 174 1 
363 1 52 1 
313 1 73 8 56 1 75 4 146 1 77 4 87 1 328 1 28 1 305 1 215 1 113 1 332 1 345 1 202 2 334 1 244 2 272 1 246 1 366 1 378 1 325 2 288 1 
313 1 87 1 28 2 215 1 113 2 345 1 244 4 272 1 246 2 192 1 366 1 325 2 141 1 73 11 75 5 56 2 146 2 7 1 77 6 328 1 305 2 332 1 13 1 202 3 334 1 378 1 288 1 19 1 
312 1 313 1 234 1 87 1 28 3 215 1 113 3 345 1 217 2 244 6 272 1 246 1 366 1 325 3 141 2 73 19 75 10 56 3 117 1 146 3 7 2 77 9 328 1 305 3 332 1 13 1 202 4 225 1 334 3 378 1 288 1 159 1 19 1 
312 1 313 1 234 1 87 1 28 3 215 1 113 3 345 1 217 1 244 6 272 1 246 1 366 1 325 3 141 2 73 17 75 7 56 3 117 1 146 3 7 2 77 10 328 1 305 3 332 1 13 1 202 5 225 1 334 2 378 1 288 1 159 1 19 2 
313 1 73 8 56 1 75 4 146 1 77 4 87 1 328 1 28 1 305 1 215 1 113 1 332 1 345 1 202 2 334 1 244 2 272 1 246 1 366 1 378 1 325 2 288 1 
313 1 234 1 87 1 28 1 113 1 217 2 244 2 246 1 366 1 325 1 141 2 73 12 75 6 56 1 117 1 146 1 7 2 77 6 305 2 202 2 225 1 334 2 378 1 159 1 19 1 
312 2 313 1 234 1 87 1 28 4 215 1 113 4 345 1 217 1 244 8 272 1 246 1 366 1 325 3 141 2 73 18 75 8 56 4 117 1 146 4 7 2 77 10 328 1 305 3 332 1 13 1 225 1 202 5 334 2 378 1 288 1 159 1 19 2 
312 2 313 1 234 1 87 1 28 4 113 4 217 2 244 8 246 1 366 1 325 3 141 3 73 16 75 7 56 4 117 1 146 4 7 3 77 9 305 3 225 1 202 6 14 1 334 2 378 1 159 1 19 3 
73 7 75 4 77 3 328 3 305 1 332 1 345 3 202 6 334 1 272 2 288 1 325 3 19 3 
312 2 313 1 234 1 87 1 28 4 215 1 113 4 345 1 217 1 244 8 272 1 246 1 366 1 325 3 141 2 73 18 75 8 56 4 117 1 146 4 7 2 77 10 328 1 305 3 332 1 225 1 202 4 14 1 334 2 378 1 288 1 159 1 19 1 
312 1 73 8 75 4 56 2 146 2 77 4 328 1 28 2 305 1 215 1 113 2 332 1 345 1 202 3 334 1 244 4 272 1 325 2 288 1 19 1 
73 6 75 3 77 3 328 1 305 1 215 1 332 1 345 1 202 2 334 1 127 1 272 1 288 1 325 2 
73 4 75 2 56 1 146 1 7 1 77 2 28 1 305 1 113 1 13 1 217 1 202 2 334 1 244 2 325 1 141 1 19 1 
73 7 75 4 7 1 77 3 305 1 217 1 202 2 334 1 246 2 192 1 366 1 378 1 325 1 141 1 19 1 
312 2 291 1 314 1 28 2 215 1 113 2 345 2 217 2 189 1 244 4 272 1 246 2 192 1 366 2 325 5 141 2 73 23 75 12 56 2 146 2 7 2 77 11 328 2 305 3 332 1 202 9 334 3 288 1 19 4 
73 1 75 1 246 1 
73 1 77 1 366 1 
73 6 56 1 75 3 146 1 267 1 7 1 77 3 28 1 305 1 113 1 13 1 202 3 217 1 334 1 244 2 325 2 141 1 19 1 
313 1 234 1 87 1 28 1 113 1 217 2 244 2 246 1 366 1 325 1 141 2 73 12 75 6 56 1 117 1 146 1 7 2 77 6 305 2 202 2 225 1 334 2 378 1 159 1 19 1 
73 6 75 3 77 3 328 1 305 1 332 1 345 1 202 2 334 1 325 1 19 1 
312 1 73 3 75 2 56 1 146 1 77 1 328 1 28 1 113 1 345 1 202 2 189 1 244 2 272 1 325 1 288 1 19 1 
313 1 73 10 56 1 75 5 146 1 77 5 328 2 28 1 305 2 113 1 112 1 332 1 345 2 202 5 334 2 244 2 325 3 19 2 
313 1 73 2 56 1 146 1 77 2 28 1 305 1 113 1 202 1 244 2 141 1 19 1 
313 1 73 4 75 2 56 1 146 1 7 1 77 2 28 1 305 1 113 1 217 1 202 2 334 1 244 2 325 1 141 1 19 1 
312 1 313 1 73 3 75 2 56 3 146 3 77 1 328 1 28 3 113 3 345 1 189 1 202 2 14 1 244 6 325 1 19 1 
312 2 313 1 28 5 215 1 92 1 113 5 345 3 189 1 217 3 244 10 272 1 246 4 192 1 366 3 325 7 141 3 73 34 75 18 56 5 146 5 7 3 77 16 328 3 305 5 332 2 13 1 202 12 14 1 334 5 155 1 378 1 288 1 62 1 19 5 
70 1 80 1 292 1 8 1 183 1 41 1 258 1 
70 1 292 1 8 1 183 1 185 1 218 1 80 1 254 1 194 1 289 1 258 1 41 1 
231 1 162 1 127 1 176 1 59 1 294 1 39 1 230 1 96 1 
231 1 70 2 63 1 326 1 373 1 292 1 163 1 8 2 59 1 294 1 91 1 320 1 176 1 140 1 129 1 96 1 230 1 41 1 
0 1 231 2 144 1 70 2 63 2 326 1 373 2 292 1 163 1 8 2 59 3 91 1 138 1 226 1 320 1 176 1 206 1 140 1 172 1 129 1 96 1 230 1 41 2 
0 1 231 2 361 1 144 1 70 2 63 2 326 1 315 1 373 2 292 1 163 1 8 2 59 3 91 1 138 1 226 1 320 1 176 2 206 1 172 1 129 1 96 2 230 2 41 2 
0 1 231 1 63 1 315 1 33 1 294 1 241 1 59 4 123 1 91 1 139 1 320 1 245 2 176 3 177 1 191 1 193 1 206 1 31 2 172 1 229 1 96 3 230 3 
0 1 231 1 63 1 315 1 33 1 294 1 241 1 59 4 123 1 186 1 91 1 320 1 245 2 176 3 191 1 193 1 206 1 31 2 172 1 229 1 96 3 230 3 
132 1 320 1 176 1 230 1 96 1 91 1 
276 1 231 2 181 1 63 1 294 2 59 3 252 1 91 3 150 1 99 1 201 1 320 2 176 6 336 1 357 1 368 1 16 1 338 1 96 5 230 6 
231 1 63 1 181 1 292 2 163 1 269 1 28 2 91 1 215 1 113 2 345 1 320 1 244 4 272 1 348 1 140 1 325 2 96 1 70 2 73 6 326 1 75 3 56 2 373 1 146 2 8 2 77 3 328 1 121 1 59 1 304 1 285 1 305 1 375 1 175 1 332 1 202 2 334 1 176 1 228 2 37 1 358 1 17 2 288 1 129 1 230 1 41 1 
238 1 294 1 241 1 186 1 94 1 243 1 245 3 191 1 193 1 31 3 369 2 96 1 143 1 142 2 278 1 279 1 33 2 351 1 303 1 59 2 123 1 253 2 176 1 203 2 205 1 256 1 229 1 230 1 
231 1 181 1 63 1 132 1 59 2 91 2 376 1 320 1 176 2 336 1 229 1 96 2 230 2 
231 2 261 1 63 1 181 1 162 1 294 1 59 2 91 2 150 1 320 1 176 2 220 1 338 1 39 1 96 2 230 2 
231 1 261 1 63 1 59 1 136 1 91 2 150 1 320 1 176 2 220 1 172 1 338 1 96 2 230 2 
107 1 320 1 176 1 57 1 82 1 67 1 294 1 230 1 96 1 91 1 
231 1 181 1 59 1 295 1 91 1 201 1 320 1 176 2 368 1 96 2 230 2 
231 3 261 1 181 1 63 1 162 1 294 1 91 3 320 2 220 1 368 1 96 2 276 1 59 4 150 1 176 3 16 1 39 1 338 1 230 3 
231 3 260 1 261 1 181 1 63 1 162 1 294 1 91 3 320 2 220 1 368 1 96 2 276 1 59 4 150 1 176 3 39 1 338 1 230 3 
231 1 361 1 70 2 63 1 326 1 373 1 292 1 163 1 8 2 59 1 294 1 91 1 320 1 176 1 129 1 96 1 230 1 41 1 
231 1 63 1 59 1 91 2 150 1 99 1 320 1 176 1 336 1 172 1 338 1 96 1 230 1 
282 1 21 1 292 1 310 1 61 1 
144 1 371 1 21 1 282 2 145 1 292 1 123 1 138 1 226 1 309 1 245 2 191 1 310 2 193 1 205 1 297 1 31 2 61 2 349 1 
259 1 70 1 32 1 282 1 21 1 5 1 8 1 310 1 41 1 
371 1 21 1 349 1 
127 1 268 1 356 1 337 1 
331 1 105 1 239 1 268 1 356 1 337 1 360 1 
182 1 239 1 273 1 
196 1 105 1 106 1 239 3 268 1 89 1 331 3 356 1 367 2 337 1 360 1 40 1 
331 2 79 1 105 1 239 2 268 1 356 1 337 1 360 1 311 1 
290 1 196 1 331 1 105 1 46 1 173 1 57 1 239 1 82 1 268 1 360 1 
196 1 331 1 105 1 239 1 268 1 337 1 360 1 
196 1 331 1 105 1 239 1 356 1 337 2 360 1 
196 1 44 1 105 2 239 2 268 1 331 2 377 1 169 1 337 1 360 2 
196 1 290 1 105 1 239 3 268 2 317 1 331 3 11 1 79 2 356 1 337 1 360 1 160 1 
196 1 105 1 46 1 239 2 57 1 268 1 111 1 331 2 79 1 356 1 82 2 67 1 337 1 360 1 180 1 
196 1 290 1 105 2 239 4 268 2 331 4 11 1 152 1 79 2 356 1 337 1 360 2 311 1 
196 1 331 1 105 1 239 1 268 1 356 1 337 1 360 1 
290 1 105 1 239 4 268 3 89 1 331 4 11 1 12 1 79 2 356 2 367 1 337 2 360 1 40 1 
196 1 339 1 71 1 105 1 239 2 268 1 331 2 79 1 356 1 337 1 360 1 4 1 
196 1 105 1 239 3 268 1 342 1 89 2 331 3 356 1 367 2 337 1 360 1 40 1 
277 2 100 1 262 1 268 2 
196 1 331 1 308 1 105 1 239 1 360 1 
196 1 331 2 79 1 105 1 239 2 268 1 356 1 337 1 360 1 160 1 
293 1 
196 1 331 1 105 1 239 1 268 1 356 1 337 1 360 1 
196 1 331 3 79 1 105 1 239 3 268 1 356 1 367 1 337 1 360 1 160 1 
290 1 11 1 12 1 268 1 
268 1 337 1 

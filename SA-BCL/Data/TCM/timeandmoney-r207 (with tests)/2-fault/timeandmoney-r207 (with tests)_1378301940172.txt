#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
159 4 209 1 162 1 163 1 188 1 256 1 8 1 81 1 82 1 171 1 63 1 337 1 88 5 238 9 368 2 147 1 217 2 341 2 241 1 300 1 154 7 303 9 275 3 224 1 
159 4 368 2 238 9 209 1 217 2 147 1 341 2 162 1 163 1 188 1 256 1 241 1 8 1 300 1 154 7 81 1 303 9 171 1 82 1 63 1 275 3 224 1 337 1 88 5 
228 1 159 4 251 1 209 1 162 2 163 1 188 1 256 2 8 1 124 1 81 1 171 2 84 1 63 1 337 1 88 5 65 1 238 9 368 2 217 2 341 2 241 1 300 1 154 6 303 9 275 3 224 2 55 1 
228 1 159 4 251 1 209 1 162 2 163 1 188 1 256 2 8 1 124 1 81 1 171 2 84 1 63 1 337 1 88 5 65 1 238 9 368 2 217 2 341 2 241 1 300 1 154 6 303 9 275 3 224 2 55 1 
228 1 159 5 251 1 209 1 162 2 163 1 188 1 256 2 8 1 124 1 81 1 171 2 84 1 63 1 337 1 88 6 65 1 238 10 368 2 217 2 341 2 241 1 300 1 154 7 303 10 275 4 224 2 55 1 
228 1 159 3 251 1 209 1 162 2 163 1 256 2 8 1 124 1 81 1 171 2 84 1 63 1 337 1 88 4 65 1 238 7 368 1 217 2 341 2 241 1 300 1 154 4 303 7 275 2 224 2 55 1 
159 2 238 4 368 2 217 1 341 1 163 1 188 1 256 1 241 1 8 1 154 3 81 1 303 4 171 1 275 1 63 1 224 1 88 3 
238 2 252 1 217 1 341 1 162 1 163 1 256 1 124 1 81 1 303 2 378 1 171 1 63 1 84 1 88 1 143 1 
159 1 154 1 238 3 81 1 303 3 217 2 275 1 162 1 341 2 63 1 163 1 337 1 88 2 
230 1 381 1 120 1 
155 1 178 2 381 1 
373 2 257 1 262 2 28 2 349 1 360 2 223 2 34 2 
249 1 56 1 280 1 40 1 354 1 358 1 360 3 44 1 122 1 166 1 5 1 257 1 11 1 13 2 64 1 366 1 262 3 52 2 266 1 149 1 268 1 299 1 324 1 199 2 201 2 96 1 373 2 242 1 244 1 28 2 349 1 380 1 223 2 73 2 205 1 34 2 36 1 
373 1 262 1 234 1 27 1 28 1 349 1 359 1 360 1 223 1 34 1 
262 1 360 1 359 1 230 1 23 1 361 1 310 1 311 1 28 1 30 1 157 1 316 1 381 1 338 1 
262 1 360 1 359 1 230 1 23 1 373 1 361 1 311 2 28 1 30 1 223 1 34 1 316 2 381 1 338 1 
130 1 128 1 170 1 311 1 316 1 
128 1 170 1 311 2 295 1 230 1 15 1 316 2 381 1 
170 1 311 1 316 1 
262 1 359 1 360 1 60 1 128 1 373 1 234 1 311 1 27 1 349 1 28 1 223 1 34 1 316 1 
381 1 
128 1 170 1 311 2 295 1 164 1 230 1 316 2 381 1 
214 1 1 2 356 1 135 1 161 1 295 1 187 1 230 1 93 1 229 1 128 2 114 2 170 2 311 5 377 2 258 1 139 1 316 5 381 1 
249 1 280 1 40 1 354 1 262 2 52 1 342 1 266 1 360 2 111 1 242 1 13 1 28 1 205 1 223 1 73 1 34 1 366 1 314 1 64 1 
257 1 120 1 
262 2 360 2 322 1 284 1 373 1 257 2 28 2 223 1 34 1 
272 1 342 1 350 1 
248 1 249 1 262 1 280 1 354 1 40 1 52 1 266 1 360 1 257 1 13 1 242 1 73 1 205 1 64 1 366 1 
373 1 9 1 257 1 262 5 28 5 360 5 157 1 223 4 284 1 34 4 314 2 141 1 111 1 142 1 
262 2 234 1 28 2 359 1 360 2 223 2 34 2 198 1 
373 1 257 1 262 3 28 3 360 3 223 3 34 3 314 1 
262 1 234 1 28 1 359 1 360 1 223 1 34 1 
373 1 262 1 28 1 359 1 360 1 322 1 223 1 34 1 284 1 
249 1 280 1 40 1 354 1 360 4 359 1 44 1 122 1 284 1 5 1 361 1 257 1 11 1 13 1 311 1 193 1 366 1 64 1 314 1 316 1 338 1 262 4 52 1 266 1 149 1 23 1 268 1 299 1 199 1 201 2 96 1 111 1 220 1 373 2 242 1 28 3 349 1 30 1 380 1 205 1 223 3 73 1 34 3 36 1 
9 1 257 1 262 2 28 2 360 2 157 1 223 1 34 1 314 1 
262 3 359 1 360 3 284 1 23 1 151 1 111 1 373 1 361 1 311 1 28 3 30 1 193 1 223 3 34 3 316 1 314 2 381 1 338 1 
373 1 262 2 28 2 342 1 360 2 350 1 223 2 34 2 284 1 314 1 
249 1 262 1 354 1 40 1 280 1 52 1 266 1 360 1 257 1 13 1 242 1 73 1 205 1 64 1 366 1 
249 1 262 1 354 1 40 1 280 1 52 1 360 1 6 1 257 1 13 1 242 1 212 1 73 1 205 1 366 1 
56 2 186 1 210 1 165 1 122 1 44 2 45 1 46 1 236 1 265 1 342 2 370 1 149 1 268 1 299 1 199 4 152 1 201 2 96 1 272 2 156 1 304 1 350 2 36 1 
361 1 262 1 28 1 359 1 360 1 223 1 34 1 198 1 
53 1 240 1 
53 1 240 1 
58 1 14 1 
58 1 14 1 
58 1 14 1 
176 1 53 1 240 1 
176 1 53 1 240 1 
191 1 53 1 240 1 
145 1 58 1 53 2 14 1 247 1 240 2 
176 1 53 1 240 1 
53 1 240 1 91 1 
53 1 240 1 91 1 
53 1 240 1 91 1 
360 2 78 1 191 1 105 1 257 1 311 1 83 1 316 1 48 1 174 1 262 2 51 1 92 1 53 1 70 1 200 1 240 1 98 1 375 1 348 1 28 2 133 1 223 2 34 2 
37 1 74 1 145 1 39 2 51 2 53 2 70 1 372 1 200 2 240 2 78 2 79 1 375 3 311 2 316 2 317 1 381 1 158 1 48 2 
171 1 256 1 224 1 
171 1 378 1 256 1 
369 1 171 3 378 1 351 1 224 2 365 1 
369 1 171 2 378 1 351 1 224 1 16 1 
369 1 171 2 378 1 351 2 224 1 
1 1 356 2 135 3 187 1 165 1 76 2 136 1 230 1 7 2 232 1 170 1 83 1 311 5 316 5 318 2 265 1 92 1 295 1 178 3 267 1 126 1 152 1 153 1 128 4 98 1 114 1 155 1 304 1 377 1 183 1 246 1 381 2 
1 2 160 1 356 6 135 8 187 1 165 3 230 1 136 1 285 1 47 1 7 6 169 1 232 2 170 6 311 9 316 9 318 6 265 3 295 1 178 9 93 1 323 5 126 2 152 3 270 1 153 3 98 4 130 5 128 7 99 1 114 2 155 3 304 3 377 2 381 5 
1 1 356 2 135 3 165 1 76 1 230 1 7 2 232 1 311 3 316 3 318 2 265 1 178 4 267 1 93 1 126 1 152 1 153 1 128 2 98 1 114 1 155 2 377 1 304 1 183 1 381 3 
1 1 160 1 356 4 135 5 165 2 76 2 230 1 285 1 7 4 232 1 311 4 316 4 318 4 265 2 178 7 93 1 267 1 126 1 152 2 270 1 153 2 98 2 128 3 114 1 155 3 377 1 304 2 183 1 381 4 
278 1 280 1 120 1 
280 1 327 1 
71 1 
280 1 40 1 242 1 
280 1 72 1 
280 1 40 1 
278 2 280 3 40 1 242 1 298 1 239 1 
293 1 186 3 56 4 370 2 308 1 165 1 69 1 44 3 22 1 199 7 286 1 374 1 61 1 204 2 304 1 313 1 87 1 
293 1 186 3 56 4 370 2 308 1 165 1 69 1 44 3 22 1 199 7 286 1 374 1 61 1 204 2 304 1 313 1 87 1 
293 1 186 3 56 4 370 2 308 1 165 1 69 1 44 3 22 1 199 7 286 1 374 1 61 1 204 2 304 1 313 1 87 1 213 1 
0 1 56 16 186 10 308 1 42 1 165 4 122 1 44 15 286 1 61 5 62 1 313 1 87 2 293 2 66 1 195 1 265 3 370 5 69 2 22 1 268 1 199 31 201 2 152 3 96 1 153 3 129 4 374 2 204 3 304 4 118 1 35 1 119 3 36 1 
56 5 186 4 165 1 122 2 44 4 286 1 61 1 313 1 172 1 87 1 293 1 370 3 69 1 22 1 268 2 219 1 199 9 201 4 96 2 374 1 204 2 304 1 35 1 36 2 
103 1 354 1 208 1 281 1 162 1 163 1 41 1 255 1 256 1 168 1 81 1 13 1 192 1 171 2 63 1 366 1 365 1 88 1 238 2 50 1 52 1 217 1 341 1 175 1 321 1 154 1 303 2 378 1 73 1 224 1 
103 1 354 1 208 1 281 1 162 1 163 1 255 1 256 1 138 1 168 1 81 1 125 1 13 1 171 2 365 1 366 1 88 1 238 3 50 1 52 1 217 1 341 1 175 1 321 1 154 2 303 3 378 1 73 1 224 1 227 1 
238 2 103 1 354 1 50 1 52 1 208 1 162 1 163 1 255 1 321 1 256 1 138 1 168 1 154 2 81 1 303 2 13 1 171 2 378 1 73 1 224 1 365 1 366 1 88 1 227 1 
249 1 103 2 354 1 40 1 280 1 208 2 162 2 190 1 125 1 12 1 13 1 366 1 339 1 238 1 50 2 52 1 217 1 264 1 341 1 303 1 73 1 277 1 101 1 
103 1 354 1 208 1 281 1 162 1 41 1 255 1 256 1 138 1 168 1 13 1 171 2 63 1 366 1 365 1 238 1 50 1 52 1 217 1 341 1 175 1 321 1 303 1 378 1 73 1 224 1 
330 1 
1 1 135 1 187 1 332 2 230 1 288 3 235 1 338 1 295 2 109 1 23 1 343 1 24 1 112 2 26 3 302 1 114 1 155 2 116 1 28 1 30 1 157 1 353 1 356 1 75 1 359 1 360 1 361 1 170 5 310 1 311 4 316 4 262 1 263 2 216 5 94 1 325 1 377 1 328 1 381 1 184 3 102 2 
1 1 356 1 75 1 135 1 187 1 360 1 359 1 230 1 332 2 361 1 310 1 170 5 311 4 288 3 235 1 316 4 338 1 263 2 262 1 216 5 295 2 109 1 94 1 23 1 343 1 24 1 112 2 302 1 325 1 26 3 114 1 155 2 116 1 377 1 28 1 30 1 157 1 328 1 381 1 102 2 184 3 353 1 
1 1 356 1 135 1 253 2 187 1 360 1 359 1 230 1 332 2 361 1 170 4 310 1 288 2 311 4 235 1 316 4 315 1 338 1 262 1 216 4 295 2 178 2 109 1 94 1 23 1 26 2 325 1 114 1 376 2 377 1 28 1 305 1 30 1 328 1 157 1 381 1 184 2 102 2 353 1 
1 1 280 1 135 2 187 1 230 1 332 2 12 1 13 2 288 2 235 1 338 1 295 3 109 1 23 1 112 2 203 1 26 2 346 1 114 1 155 2 116 1 28 1 305 1 30 1 157 1 73 2 353 1 249 2 40 1 356 2 354 1 360 1 359 1 361 1 170 6 310 1 311 5 316 5 366 1 263 2 262 1 52 2 216 4 177 1 178 2 94 1 126 1 271 1 325 1 377 1 328 1 101 1 381 2 184 2 102 2 
262 1 216 2 295 1 164 1 359 1 360 1 94 1 23 1 26 1 361 1 325 1 170 2 310 1 311 3 28 1 235 1 30 1 328 1 157 1 316 3 338 1 353 1 
360 1 359 1 164 1 230 1 361 1 170 1 310 1 311 3 288 1 235 1 316 3 338 1 262 1 216 3 295 1 94 1 23 1 325 1 28 1 30 1 157 1 328 1 381 1 353 1 
164 1 360 1 359 1 230 1 361 1 310 1 170 2 311 3 288 1 235 1 316 3 338 1 262 1 216 3 295 1 94 1 23 1 325 1 26 1 28 1 30 1 157 1 328 1 184 1 381 1 353 1 
1 1 135 1 187 1 230 5 332 2 288 4 235 1 338 1 295 3 109 1 23 1 343 1 24 1 112 2 26 4 302 1 114 1 155 2 116 1 28 1 30 1 157 1 353 1 250 1 356 1 75 1 359 1 360 1 164 1 361 1 170 7 310 1 311 5 316 5 262 1 263 2 216 6 94 1 325 1 377 1 328 1 184 4 381 5 102 2 
1 1 135 1 187 1 332 2 230 1 288 2 235 1 338 1 295 2 109 1 23 1 112 2 26 2 114 1 155 2 116 1 28 1 30 1 305 1 157 1 353 1 356 1 359 1 360 1 361 1 310 1 170 4 311 4 316 4 262 1 263 2 216 4 178 2 94 1 325 1 377 1 328 1 102 2 184 2 381 2 
1 1 356 1 75 1 135 1 360 1 359 1 187 1 230 1 332 2 361 1 170 4 310 1 288 2 311 4 235 1 316 4 338 1 263 2 262 1 216 4 295 2 109 1 94 1 23 1 343 1 112 2 26 2 302 1 325 1 114 1 155 2 116 1 377 1 28 1 30 1 157 1 328 1 381 1 184 2 102 2 353 1 
1 1 356 1 75 1 135 1 360 1 359 1 187 1 230 1 332 2 361 1 170 4 310 1 288 2 311 4 235 1 316 4 338 1 263 2 262 1 216 4 295 2 109 1 94 1 23 1 343 1 112 2 26 2 302 1 325 1 114 1 155 2 116 1 377 1 28 1 30 1 157 1 328 1 381 1 184 2 102 2 353 1 
1 1 356 1 57 1 135 1 253 2 360 1 359 1 187 1 230 1 332 2 361 1 170 4 310 1 288 2 311 4 235 1 315 1 316 4 338 1 262 1 216 4 295 2 178 2 109 1 94 1 23 1 26 2 302 1 325 1 114 1 376 2 377 1 28 1 30 1 157 1 328 1 206 1 381 1 184 2 102 2 353 1 
186 2 56 3 165 1 122 1 44 3 286 1 257 2 313 1 87 1 342 1 370 2 69 1 22 1 149 1 268 1 299 1 199 6 201 2 96 1 272 1 204 1 156 1 304 1 350 1 120 1 36 1 
186 2 56 8 355 1 42 1 43 1 165 1 44 6 122 2 166 1 5 1 257 1 61 1 106 1 320 1 265 2 370 1 342 11 149 1 268 2 299 2 199 14 201 4 96 2 152 1 127 1 153 2 129 3 272 11 304 2 350 4 118 1 119 3 36 2 
248 1 249 1 56 1 280 1 40 1 354 1 360 2 122 1 44 1 166 1 5 1 257 1 13 1 334 1 366 1 64 1 314 1 320 1 262 2 52 1 266 1 149 1 108 1 299 1 268 1 199 2 96 1 111 1 201 2 242 1 28 1 350 1 32 1 205 1 73 1 223 1 34 1 36 1 
56 10 186 8 280 2 5 1 138 1 286 1 11 2 61 4 13 3 64 2 342 7 69 1 22 1 149 3 299 3 150 2 199 20 201 6 111 1 152 2 153 2 345 1 204 1 115 1 242 2 304 3 28 1 31 1 350 7 73 3 205 2 34 1 36 3 249 1 354 2 40 2 360 3 165 3 44 10 122 3 166 1 257 2 313 1 259 2 260 2 87 1 314 1 366 2 262 3 320 1 52 3 265 2 370 4 266 2 268 3 96 3 272 7 274 2 223 1 
249 2 56 1 354 2 280 3 40 2 360 1 283 1 122 2 44 1 166 1 5 1 138 1 12 1 13 7 192 1 314 1 366 2 67 1 262 1 52 8 296 1 149 2 268 2 299 2 199 2 202 1 201 4 96 2 273 1 156 1 244 2 28 1 29 1 223 1 73 8 34 1 101 1 36 2 352 1 
186 1 56 1 360 1 165 1 122 1 44 2 284 1 194 1 320 1 262 1 265 1 370 1 342 1 149 1 268 1 299 1 199 3 201 2 96 1 152 1 153 1 373 1 272 1 304 1 28 1 350 1 223 1 34 1 36 1 
186 1 56 2 265 1 342 1 149 1 122 1 299 1 268 1 199 2 96 1 201 2 272 1 61 1 156 1 304 1 350 1 36 1 236 1 
186 1 370 1 342 1 165 1 149 1 122 1 44 2 299 1 268 1 45 1 199 2 96 1 201 2 152 1 272 1 156 1 350 1 36 1 
56 2 186 2 165 1 122 1 44 2 61 1 265 1 342 2 370 1 149 1 268 1 299 1 199 4 201 2 96 1 152 1 153 1 272 2 156 1 304 1 350 2 36 1 
186 1 56 2 265 1 342 1 296 1 149 1 122 1 299 1 268 1 199 2 96 1 201 2 272 1 61 1 304 1 350 1 36 1 236 1 
186 1 370 1 342 1 296 1 165 1 149 1 122 1 44 2 299 1 268 1 45 1 199 2 96 1 201 2 152 1 272 1 350 1 36 1 
56 2 186 2 165 1 122 1 44 2 61 1 265 1 342 2 370 1 296 1 149 1 268 1 299 1 199 4 201 2 96 1 152 1 153 1 272 2 304 1 350 2 36 1 
186 2 56 2 265 1 370 1 342 2 165 1 44 2 149 1 122 1 299 1 268 1 199 4 152 1 96 1 201 2 153 1 272 2 61 1 304 1 350 2 36 1 
249 1 56 1 40 1 354 1 280 1 360 1 122 1 44 1 166 1 5 1 257 1 11 1 13 1 366 1 64 1 262 1 52 1 266 1 149 1 299 1 268 1 199 2 96 1 201 2 242 1 205 1 73 1 36 1 
329 1 249 1 56 1 40 1 354 1 280 1 360 1 122 1 44 1 166 1 5 1 6 1 257 1 13 1 212 1 366 1 262 1 52 1 149 1 299 1 268 1 199 2 96 1 201 2 242 1 205 1 73 1 36 1 
56 2 186 2 165 1 122 1 44 2 61 1 320 1 265 1 342 2 370 1 149 1 268 1 299 1 199 4 201 2 96 1 152 1 153 1 272 2 304 1 350 2 36 1 
186 2 56 2 354 1 40 1 280 1 360 1 165 1 44 2 122 1 61 1 11 1 13 1 192 1 259 1 366 1 64 1 262 1 52 1 265 1 370 1 342 2 266 1 149 1 299 1 268 1 199 4 152 1 96 1 201 2 153 1 272 2 242 1 304 1 350 2 205 1 73 1 36 1 
186 1 56 2 360 1 165 1 44 1 122 1 284 1 61 1 319 1 320 1 262 1 265 1 342 1 149 1 268 1 299 1 199 3 152 1 201 2 96 1 153 1 373 1 272 1 304 1 28 1 350 1 223 1 34 1 36 1 
185 1 56 9 186 6 307 1 306 1 42 1 165 3 122 2 44 10 61 3 335 1 20 1 265 3 370 3 297 2 268 2 219 1 199 19 201 4 96 2 152 3 153 3 301 1 129 2 243 2 221 1 304 3 118 1 119 1 36 2 
185 1 186 4 56 14 307 1 306 2 42 2 165 2 44 12 122 3 10 1 61 2 80 1 362 1 335 1 140 1 20 2 265 3 68 1 370 2 297 4 268 3 219 1 199 26 201 6 96 3 152 2 153 3 129 2 243 1 100 1 304 3 35 2 119 2 36 3 
185 1 56 20 186 8 307 1 306 2 254 1 42 3 165 5 122 3 44 21 286 1 10 1 80 1 61 4 362 1 335 1 313 1 87 1 140 1 20 1 265 4 68 1 370 4 297 4 69 1 22 1 268 3 219 1 199 41 201 6 96 3 152 4 153 4 301 1 129 4 204 1 243 1 100 1 304 5 35 1 118 1 119 3 36 3 
185 1 56 20 186 7 307 1 306 2 254 1 42 3 165 4 122 4 44 18 286 1 10 1 80 1 61 3 362 1 335 1 313 1 87 1 140 1 20 1 265 4 68 1 370 4 297 4 69 1 22 1 268 4 219 1 199 38 201 8 96 4 152 3 153 4 301 1 129 4 204 1 243 1 100 1 304 5 35 2 118 1 119 3 36 4 
185 1 56 27 186 14 307 1 306 1 42 2 165 8 122 2 44 25 286 1 10 1 80 1 61 7 362 1 335 1 313 1 106 2 87 1 140 1 20 1 265 7 68 1 370 7 297 4 69 1 22 1 268 2 219 1 199 52 201 4 96 2 152 7 153 7 129 4 204 1 243 1 100 1 304 8 35 1 118 2 119 4 36 2 
78 1 74 1 18 1 145 1 51 1 53 1 317 1 200 1 240 1 48 1 
191 1 133 1 
78 1 215 1 51 1 53 1 200 1 90 1 240 1 121 1 48 1 
312 1 176 1 
218 1 247 1 91 1 
74 1 145 1 39 1 51 1 53 1 70 1 372 1 200 1 240 1 78 1 79 1 375 2 311 1 316 1 317 1 381 1 158 1 48 1 
74 1 145 1 39 1 51 1 53 1 70 1 372 1 200 1 240 1 78 1 79 1 375 2 311 1 316 1 317 1 381 1 158 1 48 1 
74 1 145 1 39 1 51 1 53 1 70 1 372 1 200 1 240 1 78 1 79 1 375 2 311 1 316 1 317 1 381 1 158 1 48 1 
312 1 176 1 247 1 
312 1 176 1 247 1 
218 1 91 1 
218 1 247 1 91 1 
105 1 348 1 
39 1 360 2 78 1 191 1 105 1 257 1 311 1 83 1 316 1 48 1 174 1 262 2 51 1 92 1 53 1 372 1 200 1 240 1 128 1 98 1 375 1 348 1 28 2 54 1 133 1 223 2 34 2 
56 1 354 1 280 1 40 1 3 1 360 2 283 1 122 1 44 1 166 1 5 1 13 2 366 1 320 1 262 2 52 2 19 1 149 1 148 1 299 1 268 1 199 2 96 1 201 2 244 2 182 1 28 2 73 2 225 1 36 1 352 1 
367 1 354 1 52 2 208 1 281 1 255 1 321 1 256 1 138 1 13 2 171 2 378 1 192 1 86 1 73 2 224 1 365 1 366 1 290 1 
17 1 354 1 52 1 208 1 281 1 255 1 321 1 256 1 138 1 13 1 171 2 378 1 86 1 73 1 224 1 365 1 366 1 
249 1 367 1 339 1 354 1 280 1 40 1 52 1 208 1 12 1 13 1 379 1 73 1 366 1 101 1 
367 1 354 1 52 1 208 1 281 1 255 1 321 1 256 1 138 1 13 1 171 2 378 1 86 1 73 1 224 1 365 1 290 1 366 1 
59 1 
249 1 354 1 40 1 280 1 360 3 44 1 122 1 5 1 257 1 11 1 13 1 64 1 366 1 262 3 52 1 266 1 149 1 268 1 299 1 199 1 201 2 96 1 373 2 242 1 28 2 349 1 380 1 73 1 223 2 205 1 34 2 36 1 
1 1 356 2 135 1 178 4 187 1 230 2 126 1 7 2 204 1 114 1 346 1 155 2 377 1 381 4 318 2 
214 1 356 1 135 1 139 1 230 1 381 1 120 1 
1 1 356 1 135 1 187 1 230 1 170 1 311 1 316 1 263 1 295 1 178 1 112 1 114 1 155 1 116 1 377 1 381 2 
279 1 278 2 1 4 280 10 135 9 187 4 230 2 4 1 7 6 13 3 192 1 139 1 338 2 292 2 295 3 298 1 110 2 152 2 153 2 346 1 114 4 242 3 155 6 347 2 304 2 72 2 73 3 249 1 354 4 40 3 356 8 357 2 165 2 123 1 170 5 311 5 260 2 366 3 316 5 318 6 214 1 173 2 49 1 52 3 265 2 371 2 178 12 179 2 95 1 126 2 181 2 327 3 377 4 381 8 
1 2 356 5 135 8 42 1 187 2 165 2 230 2 7 5 10 1 80 1 170 1 362 1 311 1 85 1 140 1 336 1 316 1 318 5 265 2 295 1 178 6 126 1 110 1 152 2 153 2 129 1 346 1 114 2 100 1 155 3 347 2 377 2 304 2 381 5 119 1 
1 1 356 2 75 1 135 2 359 1 360 1 187 1 165 1 60 1 286 1 234 1 311 1 87 1 316 1 262 1 69 1 110 1 344 1 373 1 114 1 347 2 377 1 304 2 27 1 349 1 28 1 223 1 34 1 
214 1 1 1 356 1 135 1 187 1 230 1 114 1 377 1 139 1 381 1 
356 5 265 2 135 5 178 10 165 2 110 1 152 2 153 2 7 5 155 5 347 2 304 2 260 1 381 5 318 5 
170 1 311 1 295 1 230 1 316 1 381 1 
279 2 249 2 1 2 354 1 280 1 40 1 356 2 135 2 187 1 12 1 13 4 170 4 311 3 364 1 366 1 316 3 49 1 52 4 295 2 93 1 126 2 203 1 271 1 114 2 346 2 377 2 132 1 73 4 101 1 
51 1 33 1 48 1 
51 1 33 1 48 1 
51 1 348 1 317 1 207 1 48 1 
51 1 33 1 48 1 
51 1 363 1 48 1 
51 1 363 1 48 1 
51 1 363 1 48 1 
51 1 48 1 
53 1 240 1 
56 4 186 3 370 2 165 1 69 1 44 4 122 2 22 1 268 2 199 8 96 2 201 4 286 1 204 1 61 1 304 1 313 1 87 1 35 1 36 2 
186 2 56 3 370 2 69 1 165 1 44 3 22 1 199 6 286 1 204 1 304 1 313 1 87 1 120 1 
186 2 56 2 265 1 370 1 165 1 44 2 122 1 268 1 199 4 152 1 96 1 201 2 153 1 61 1 326 1 304 1 36 1 
56 3 186 2 265 1 370 1 42 1 165 1 44 4 199 7 152 1 153 1 129 2 61 1 304 1 118 1 119 1 
186 9 56 11 165 3 44 12 122 2 286 1 61 4 313 1 106 1 87 2 261 1 265 2 370 5 69 2 22 1 268 2 199 23 152 2 96 2 201 4 153 2 127 1 129 2 204 1 304 3 118 1 35 2 119 2 36 2 
129 1 44 1 199 1 
56 1 199 1 119 1 
56 3 186 3 265 1 370 2 165 1 122 1 44 3 268 1 199 6 201 2 96 1 152 1 153 1 61 1 326 1 304 1 260 1 36 1 
56 6 186 2 42 1 165 2 44 6 122 1 10 1 61 1 80 1 362 1 140 1 265 2 370 1 268 1 199 12 219 1 201 2 96 1 152 2 153 2 129 1 100 1 304 2 119 1 36 1 
56 3 186 2 370 1 165 1 69 1 44 3 199 6 286 1 61 1 304 1 87 1 
261 1 56 1 186 2 370 1 69 1 22 1 44 2 122 1 268 1 199 3 96 1 201 2 61 1 313 1 87 1 35 1 36 1 
186 5 56 5 370 3 69 2 165 2 122 1 44 5 268 1 219 1 199 10 201 2 96 1 344 1 286 1 61 2 304 2 87 2 36 1 
56 2 186 1 265 1 122 1 268 1 219 1 199 2 96 1 201 2 61 1 304 1 36 1 
186 2 56 2 265 1 370 1 165 1 44 2 122 1 268 1 219 1 199 4 152 1 96 1 201 2 153 1 61 1 304 1 36 1 
261 1 186 2 56 1 370 1 69 1 44 2 122 3 268 3 199 3 219 1 96 3 201 6 301 1 61 1 87 1 35 1 36 3 
0 1 56 16 186 12 42 1 165 5 44 18 122 5 286 2 61 5 313 1 87 3 261 1 66 1 195 1 265 3 370 7 69 3 22 1 268 5 219 1 199 34 201 10 96 5 152 3 153 3 129 4 301 1 204 1 326 1 304 5 35 2 118 1 119 3 36 5 
56 4 186 2 42 1 165 1 44 4 122 1 286 1 313 1 87 1 370 2 69 1 22 1 268 1 199 8 219 1 201 2 96 1 129 1 204 1 100 1 304 1 119 1 36 1 
56 6 186 3 42 1 165 1 44 5 122 2 286 1 61 1 313 1 87 1 265 1 370 2 69 1 22 1 268 2 199 11 219 1 201 4 96 2 153 1 129 2 204 1 100 1 326 1 304 2 118 1 119 1 36 2 
56 9 186 4 42 1 165 3 44 10 122 3 286 1 10 1 61 1 80 1 362 1 313 1 87 1 140 1 265 2 370 3 69 1 22 1 268 3 199 19 219 1 201 6 96 3 152 2 153 2 129 1 204 1 326 1 100 1 304 3 35 1 119 1 36 3 
56 10 186 5 42 1 165 2 44 7 122 3 286 1 10 1 61 2 80 1 362 1 313 1 87 1 140 1 265 2 370 3 69 1 22 1 268 3 199 17 219 1 201 6 96 3 152 1 153 2 129 1 204 1 326 1 100 1 304 3 35 1 119 1 36 3 
56 4 186 2 42 1 165 1 44 4 122 1 286 1 313 1 87 1 370 2 69 1 22 1 268 1 199 8 219 1 201 2 96 1 129 1 204 1 100 1 304 1 119 1 36 1 
56 6 186 2 42 1 165 2 44 6 122 1 10 1 61 1 80 1 362 1 140 1 265 2 370 1 268 1 199 12 219 1 201 2 96 1 152 2 153 2 129 1 100 1 304 2 119 1 36 1 
56 10 186 5 42 1 165 2 44 8 122 4 286 1 10 1 61 2 80 1 362 1 313 1 87 1 140 1 265 2 370 3 69 1 22 1 268 4 199 18 219 1 201 8 96 4 152 1 153 2 129 1 204 1 100 1 326 1 304 3 35 2 119 1 36 4 
56 9 186 6 42 1 165 2 44 7 122 4 10 1 61 3 80 1 362 1 140 1 265 3 370 3 268 4 199 16 219 1 201 8 96 4 152 2 153 3 129 1 301 1 100 1 304 3 35 2 119 1 36 4 
186 6 56 3 370 3 165 1 69 3 44 4 22 2 199 7 286 1 61 3 304 1 313 1 87 3 
56 10 186 4 42 1 165 2 44 8 122 4 286 1 10 1 61 1 80 1 362 1 313 1 87 1 140 1 265 2 370 3 69 1 22 1 268 4 199 18 219 1 201 8 96 4 152 1 153 2 129 1 301 1 204 1 100 1 304 3 35 2 119 1 36 4 
9 1 257 1 262 1 28 1 360 1 157 1 291 1 
222 1 104 1 196 1 77 1 226 1 
249 1 354 1 280 1 40 1 12 1 52 1 13 1 73 1 366 1 101 1 120 1 
249 1 280 1 40 1 354 1 262 2 52 1 266 1 360 2 257 1 242 1 13 1 28 1 205 1 223 1 73 1 34 1 314 1 366 1 
279 1 280 3 40 2 354 1 262 2 357 1 52 1 266 1 359 1 360 2 23 1 361 1 257 1 242 2 13 1 72 1 28 2 205 1 223 2 73 1 34 1 314 1 366 1 
279 1 354 1 40 2 280 3 357 1 360 2 359 1 361 1 257 1 13 2 212 1 366 1 314 1 146 1 262 2 52 2 23 1 242 2 28 2 72 1 73 2 223 2 205 1 34 1 
278 1 279 1 249 1 280 4 354 1 40 1 357 1 134 1 230 1 189 1 170 1 13 3 311 2 366 1 316 2 338 1 146 1 52 3 242 1 327 1 72 1 73 3 381 1 
279 1 278 1 249 1 146 1 40 1 354 1 280 4 357 1 52 3 230 1 242 1 13 3 170 1 311 2 327 1 72 1 73 3 316 2 366 1 381 1 338 1 292 1 
354 1 52 1 13 1 73 1 366 1 202 1 
144 1 249 2 67 1 40 2 280 3 354 3 52 7 298 1 202 1 138 1 244 1 273 1 13 6 242 1 192 1 289 1 29 1 245 1 73 7 366 2 352 1 
56 3 186 2 280 1 40 1 354 1 360 2 165 1 44 3 122 2 286 1 257 2 11 1 13 1 192 1 313 1 259 1 87 1 366 1 314 1 64 1 320 1 262 2 52 1 342 1 370 2 266 1 69 1 22 1 149 2 299 2 268 2 199 6 96 2 201 4 272 1 204 1 242 1 304 1 274 1 28 1 350 1 205 1 223 1 73 1 34 1 225 1 36 2 
278 1 249 1 1 2 356 1 280 2 135 1 187 2 230 1 13 1 170 2 311 3 139 1 316 3 338 1 292 1 214 1 173 1 49 1 52 1 295 1 371 1 179 1 128 1 114 2 377 2 327 1 73 1 381 1 
278 1 40 1 280 2 354 2 52 2 298 1 123 1 202 1 13 2 242 1 192 1 73 2 366 1 
249 1 146 1 354 1 40 1 280 1 52 4 333 1 12 1 13 4 192 1 73 4 101 1 366 1 
279 1 144 1 40 1 280 1 354 2 52 2 2 1 13 2 242 1 287 1 245 1 31 1 73 2 366 1 
249 1 354 1 52 1 13 1 171 1 378 1 321 1 73 1 256 1 366 1 
40 1 280 1 354 1 52 2 3 1 138 1 13 2 192 1 73 2 366 1 352 1 
279 1 249 1 40 2 280 3 354 2 52 5 333 1 12 1 13 4 273 1 192 1 29 1 73 5 101 1 366 2 352 1 
279 1 249 1 38 1 40 2 280 3 354 2 52 5 333 1 12 1 13 4 192 1 29 1 73 5 101 1 366 2 352 1 
249 1 280 1 40 1 354 1 262 2 52 1 360 2 257 1 242 1 13 1 28 1 212 1 205 1 223 1 73 1 34 1 314 1 366 1 
279 1 144 1 40 1 280 1 354 2 52 1 298 1 13 1 242 1 289 1 245 1 73 1 366 1 
257 1 197 1 137 1 211 1 167 1 
340 1 359 1 230 1 23 1 197 2 211 1 137 2 167 2 128 1 361 1 257 1 131 1 311 2 117 1 30 1 193 1 316 2 381 1 338 1 
262 1 19 1 360 1 148 1 137 1 211 1 167 1 182 1 28 1 
340 1 117 1 211 1 
238 3 217 1 209 1 341 1 163 1 124 1 154 1 81 1 303 3 63 1 88 1 
159 1 113 1 275 1 88 1 
81 1 88 1 
81 1 163 1 88 1 120 1 
238 1 81 1 303 1 217 1 341 1 163 1 88 1 
103 1 303 1 162 1 
124 2 107 1 238 3 81 1 303 3 217 1 341 1 63 1 163 1 276 1 269 1 88 1 
154 1 368 1 238 2 81 1 303 2 217 1 341 1 163 1 88 1 
159 1 238 1 217 1 341 1 256 1 241 1 303 1 171 1 63 1 224 1 88 1 
238 1 81 1 303 1 217 1 341 1 63 1 88 1 
238 1 81 2 303 1 217 1 341 1 63 1 163 1 
238 2 217 2 282 1 21 1 341 2 97 1 81 1 303 2 63 1 88 1 
300 1 159 1 154 2 238 3 81 1 303 3 209 1 217 1 275 1 341 1 63 1 163 1 88 2 
238 2 217 1 341 1 163 1 256 1 180 1 154 1 81 1 303 2 378 1 171 2 63 1 365 1 224 1 88 1 
159 1 154 2 368 1 238 4 81 1 303 4 217 2 275 1 341 2 63 1 163 1 188 1 88 2 
238 1 81 1 303 1 217 1 341 1 63 1 163 1 88 1 
107 1 159 1 238 4 217 1 341 1 163 2 124 1 154 2 81 2 113 1 303 4 275 1 276 1 88 3 
238 2 217 1 341 1 163 1 231 1 154 1 81 1 233 1 303 2 82 1 63 1 88 1 
107 1 238 3 217 1 341 1 163 1 331 1 124 2 81 1 303 3 63 1 276 2 88 1 
237 1 294 2 309 1 88 2 
238 1 303 1 217 1 341 1 63 1 25 1 
154 1 238 2 81 1 303 2 209 1 217 1 341 1 63 1 163 1 88 1 
89 1 
238 1 81 1 303 1 217 1 341 1 63 1 163 1 88 1 

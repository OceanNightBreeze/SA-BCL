#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (45,74) (45,74) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 6 323 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 154 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (45,74) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 247 329 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 1 192 2 356 1 284 1 197 2 217 1 68 1 2 1 219 2 235 1 47 1 149 9 103 1 153 1 107 6 203 2 317 2 156 1 228 1 78 1 180 5 298 2 183 4 326 2 37 3 249 1 166 1 168 9 
143 1 192 2 356 1 284 1 197 2 217 1 68 1 2 1 219 2 235 1 47 1 149 9 103 1 153 1 107 6 203 2 317 2 156 1 228 1 78 1 180 5 298 2 183 4 37 3 326 2 249 1 166 1 168 9 
143 1 192 2 356 1 284 1 197 2 217 1 68 1 2 1 219 2 235 1 47 1 149 10 103 1 153 1 107 7 203 2 317 2 156 1 228 1 78 1 180 6 298 2 183 5 37 4 326 2 249 1 166 1 168 10 
143 1 192 2 356 1 284 1 197 2 217 1 68 1 2 1 219 2 235 1 47 1 149 7 103 1 153 1 107 4 203 2 317 2 156 1 228 1 180 4 298 2 183 3 37 2 326 1 249 1 166 1 168 7 
203 1 317 1 156 1 192 1 356 1 228 1 78 1 197 1 217 1 180 3 219 1 183 2 37 1 326 2 149 4 249 1 107 3 168 4 
203 1 317 1 156 1 180 1 228 1 197 1 284 1 298 1 2 1 219 1 275 1 149 2 184 1 249 1 314 1 168 2 
203 2 156 1 228 1 180 2 298 1 219 2 47 1 183 1 37 1 149 3 249 1 107 1 168 3 
143 1 192 1 170 1 356 1 217 1 197 1 4 1 219 2 235 1 47 1 149 9 107 7 203 2 317 1 156 1 228 1 180 5 78 1 298 1 183 4 37 3 326 2 249 1 168 9 
143 1 192 1 170 1 356 1 217 1 197 1 4 1 219 2 235 1 47 1 149 9 107 7 203 2 317 1 156 1 228 1 180 5 78 1 298 1 183 4 37 3 326 2 249 1 168 9 
355 1 154 1 109 1 
109 1 160 1 89 2 
287 2 277 1 7 2 372 2 205 2 206 2 299 2 81 1 
253 1 282 1 352 1 193 1 94 1 123 1 234 1 24 1 287 3 27 1 29 1 50 1 28 2 359 1 7 2 70 2 221 1 31 1 264 1 9 1 265 2 178 1 10 1 241 1 130 1 294 1 205 3 321 1 206 2 299 2 81 1 277 1 62 2 372 2 209 2 187 1 214 1 
224 1 287 1 357 1 7 1 372 1 205 1 206 1 299 1 64 1 81 1 
224 1 266 1 355 1 309 1 205 1 206 1 287 1 83 1 361 1 84 1 334 1 63 1 336 1 109 1 
224 1 266 1 355 1 309 2 205 1 299 1 206 1 287 1 83 1 7 1 84 2 372 1 361 1 334 1 109 1 
288 1 360 1 84 1 186 1 309 1 
279 1 288 1 360 1 84 2 355 1 309 2 42 1 109 1 
288 1 84 1 309 1 
224 1 309 1 205 1 299 1 206 1 81 1 287 1 357 1 360 1 7 1 84 1 372 1 64 1 19 1 
109 1 
288 1 360 1 84 2 355 1 309 2 42 1 363 1 109 1 
114 1 147 1 242 1 355 1 309 5 42 1 285 1 45 1 132 1 322 1 82 1 288 2 360 2 84 5 238 2 212 2 139 2 74 1 109 1 
277 1 154 1 
195 1 205 2 206 2 299 1 287 2 277 2 7 1 372 1 40 1 
93 1 148 1 142 1 
265 1 253 1 241 1 352 1 130 1 243 1 205 1 94 1 287 1 27 1 277 1 28 1 359 1 209 1 221 1 31 1 
287 3 48 1 277 1 7 3 372 1 205 3 206 3 299 3 
224 1 287 1 357 1 7 1 205 1 206 1 299 1 
224 1 287 1 7 1 372 1 40 1 195 1 205 1 206 1 299 1 
253 1 282 1 352 1 195 1 309 1 94 1 234 1 24 1 287 4 48 1 27 1 100 1 29 1 28 1 359 1 7 3 70 2 361 1 221 1 334 1 31 1 264 1 9 1 224 1 265 1 10 1 241 1 266 1 130 1 294 1 205 4 206 3 299 3 161 1 81 1 277 1 83 1 136 1 62 1 372 2 84 1 209 1 187 1 214 1 
287 2 48 1 277 1 56 1 7 1 205 2 63 1 206 2 299 1 
224 1 266 1 195 1 309 1 205 3 299 3 206 3 96 1 287 3 48 2 100 1 83 1 136 1 7 3 372 1 84 1 361 1 334 1 109 1 
93 1 195 1 205 2 299 2 206 2 287 2 48 1 7 2 372 1 142 1 
265 1 253 1 241 1 352 1 130 1 205 1 94 1 287 1 27 1 277 1 28 1 359 1 209 1 221 1 31 1 
265 1 253 1 352 1 130 1 1 1 205 1 94 1 287 1 27 1 277 1 28 1 209 1 85 1 221 1 31 1 
282 1 93 2 148 2 257 1 29 1 70 2 291 1 260 1 364 1 240 1 264 1 9 1 178 2 366 1 10 2 129 1 267 1 294 1 38 1 165 1 62 4 251 1 142 2 214 1 
224 1 287 1 83 1 7 1 205 1 206 1 299 1 303 1 
265 1 253 1 241 1 352 1 130 1 205 2 299 1 206 1 94 1 287 2 48 1 27 1 28 1 359 1 136 1 7 1 209 1 221 1 31 1 142 1 
56 1 195 1 205 5 299 4 206 5 287 5 48 2 277 1 7 4 136 1 372 1 375 1 63 1 88 1 
224 1 287 2 357 1 7 2 205 2 206 2 299 2 303 1 
120 1 52 1 
120 1 52 1 
290 1 332 1 
290 1 332 1 
290 1 332 1 
225 1 120 1 52 1 
225 1 120 1 52 1 
35 1 120 1 52 1 
232 1 290 1 335 1 120 2 52 2 332 1 
225 1 120 1 52 1 
120 1 52 1 105 1 
120 1 52 1 105 1 
120 1 52 1 105 1 
128 2 232 1 120 2 309 2 171 1 271 2 159 1 3 1 122 1 246 1 49 3 84 2 124 1 313 2 51 2 52 2 109 1 202 1 365 2 
120 1 309 1 22 1 287 2 49 1 7 2 124 1 313 1 52 1 365 1 222 1 128 1 35 1 339 1 271 1 205 2 270 1 299 2 206 2 277 1 16 1 84 1 189 1 330 1 
317 1 192 1 197 1 
275 1 317 1 197 1 
275 1 192 2 17 1 328 1 197 3 46 1 
275 1 300 1 192 1 328 1 197 2 46 1 
275 1 192 1 328 2 197 2 46 1 
281 1 0 1 216 2 355 1 309 5 42 1 22 1 285 2 237 1 257 1 288 1 6 1 360 4 151 2 238 1 364 1 109 2 222 1 177 1 366 1 129 1 114 1 131 1 160 1 82 3 84 5 139 1 212 1 304 2 305 1 189 1 89 3 
0 1 216 2 147 1 355 1 309 7 42 1 285 2 257 1 288 4 6 1 360 5 238 2 364 1 315 1 109 3 177 1 366 1 129 1 114 1 318 3 369 1 160 1 207 1 82 3 84 7 186 3 212 2 139 2 304 2 189 2 305 1 89 3 
0 1 281 1 147 1 309 2 131 1 82 1 6 1 360 1 84 2 238 1 212 1 139 1 
0 1 281 1 147 1 131 1 309 1 323 1 82 1 6 1 84 1 238 1 212 1 139 1 
253 1 115 1 154 1 
253 1 117 1 
133 1 
253 1 94 1 
253 3 283 1 130 1 115 2 94 1 133 1 69 1 
253 1 130 1 94 1 
90 1 253 1 
10 3 178 4 129 1 12 1 267 2 343 1 181 1 257 1 36 1 324 1 327 2 102 1 259 1 62 7 251 3 239 1 176 1 
10 3 178 4 129 1 12 1 267 2 343 1 181 1 257 1 36 1 324 1 327 2 102 1 259 1 62 7 251 3 239 1 176 1 
10 3 178 4 129 1 12 1 267 2 343 1 181 1 257 1 36 1 324 1 327 2 102 1 259 1 62 7 251 3 239 1 76 1 176 1 
282 1 233 1 257 4 174 1 102 2 259 1 70 2 239 2 364 3 176 2 264 1 9 1 34 3 177 3 10 15 178 16 366 3 129 4 12 2 267 5 157 4 294 1 340 1 343 5 181 1 36 1 324 1 276 1 327 3 62 31 347 1 251 10 138 1 141 1 
282 2 257 1 102 1 259 1 70 4 53 1 239 1 264 2 9 2 176 1 178 5 10 4 129 1 12 1 267 3 268 1 294 2 343 1 181 1 36 1 327 2 62 9 251 4 141 1 
192 1 194 1 66 1 197 2 23 1 219 1 28 1 149 2 175 1 8 1 221 1 107 1 31 1 265 1 112 1 203 1 317 1 156 1 244 1 180 1 228 1 79 1 298 1 162 1 275 1 209 1 249 1 17 1 86 1 168 2 
192 1 66 1 197 2 256 1 23 1 219 1 28 1 149 3 175 1 8 1 221 1 107 2 31 1 265 1 203 1 317 1 244 1 180 1 228 1 79 1 298 1 273 1 162 1 275 1 301 1 209 1 249 1 17 1 86 1 168 3 
192 1 66 1 197 2 256 1 23 1 28 1 149 2 8 1 221 1 107 2 31 1 265 1 317 1 244 1 180 1 228 1 79 1 298 1 275 1 301 1 209 1 249 1 17 1 86 1 168 2 
265 1 253 1 306 1 144 1 203 1 244 2 79 2 298 2 94 1 273 1 345 1 23 2 219 1 27 1 28 1 149 1 39 1 209 1 221 1 185 1 200 1 31 1 168 1 
192 1 194 1 66 1 197 2 23 1 219 1 28 1 149 1 175 1 8 1 221 1 31 1 265 1 203 1 317 1 156 1 244 1 79 1 298 1 162 1 275 1 301 1 209 1 17 1 86 1 168 1 
354 1 
0 1 280 1 42 3 285 2 94 1 5 1 287 1 288 6 238 1 334 1 336 1 201 1 109 2 114 1 205 1 206 1 160 2 345 1 208 1 164 1 247 1 302 2 209 2 212 1 211 1 63 1 253 1 306 1 254 4 355 1 309 5 21 2 27 2 28 2 220 1 361 1 221 1 77 2 31 1 265 2 224 1 266 1 227 1 320 2 272 1 82 2 83 1 371 2 137 2 84 5 329 1 87 2 139 1 188 1 89 2 
224 1 280 1 254 2 266 1 227 1 309 3 42 1 205 1 272 1 206 1 287 1 288 2 83 1 361 1 84 3 334 1 211 1 188 1 63 1 363 1 336 1 77 1 
280 1 254 3 355 1 309 3 42 1 287 1 288 1 361 1 334 1 336 1 363 1 109 1 224 1 266 1 227 1 320 1 205 1 206 1 272 1 83 1 84 3 188 1 211 1 63 1 
280 1 254 3 355 1 309 3 42 1 287 1 288 2 361 1 334 1 363 1 336 1 77 1 109 1 224 1 266 1 227 1 320 1 205 1 206 1 272 1 83 1 371 1 84 3 188 1 211 1 63 1 
280 1 42 3 285 1 287 1 288 7 152 1 238 1 334 1 336 1 109 5 108 1 111 1 114 1 205 1 206 1 160 2 208 1 164 1 302 2 211 1 212 1 63 1 254 6 355 5 309 5 21 2 361 1 362 1 363 1 77 4 126 1 224 1 266 1 227 1 320 4 272 1 83 1 82 1 371 4 84 5 137 2 188 1 139 1 87 2 
280 1 42 2 285 1 287 1 5 1 288 4 238 1 334 1 336 1 109 2 114 1 205 1 206 1 160 2 208 1 164 1 302 2 211 1 212 1 63 1 254 4 355 1 309 4 21 2 361 1 77 2 224 1 266 1 227 1 320 2 272 1 83 1 82 1 371 2 84 4 137 2 139 1 188 1 87 2 89 2 
280 1 254 4 355 1 309 4 42 2 21 2 285 1 287 1 288 4 361 1 362 1 238 1 334 1 336 1 77 2 109 1 108 1 224 1 111 1 114 1 266 1 227 1 320 2 205 1 206 1 272 1 160 2 82 1 208 1 83 1 164 1 371 2 302 2 137 2 84 4 87 2 139 1 188 1 211 1 212 1 63 1 
280 1 254 4 355 1 309 4 42 2 21 2 285 1 287 1 288 4 361 1 362 1 238 1 334 1 336 1 77 2 109 1 108 1 224 1 111 1 114 1 266 1 227 1 320 2 205 1 206 1 272 1 160 2 82 1 208 1 83 1 164 1 371 2 302 2 137 2 84 4 87 2 139 1 188 1 211 1 212 1 63 1 
280 1 254 4 355 1 309 4 42 2 285 1 287 1 25 1 288 4 361 1 362 1 238 1 334 1 336 1 77 2 109 1 127 1 224 1 114 1 266 1 227 1 320 2 341 2 205 1 206 1 272 1 82 1 83 1 346 2 164 1 371 2 137 2 84 4 87 2 139 1 188 1 211 1 212 1 63 1 89 2 213 1 
280 1 254 5 355 1 309 4 42 2 21 2 285 1 287 1 288 5 361 1 362 1 238 1 334 1 336 1 77 3 126 1 109 1 108 1 224 1 111 1 114 1 266 1 227 1 320 3 205 1 206 1 272 1 160 2 82 1 208 1 83 1 164 1 371 3 302 2 137 2 84 4 87 2 139 1 212 1 188 1 211 1 63 1 
280 1 254 5 355 1 309 4 42 2 21 2 285 1 287 1 288 5 361 1 362 1 238 1 334 1 336 1 77 3 126 1 109 1 108 1 224 1 111 1 114 1 266 1 227 1 320 3 205 1 206 1 272 1 160 2 82 1 208 1 83 1 164 1 371 3 302 2 137 2 84 4 87 2 139 1 212 1 188 1 211 1 63 1 
280 1 254 4 355 1 309 4 42 2 285 1 5 1 287 1 288 4 361 1 238 1 334 1 336 1 77 2 109 1 224 1 114 1 266 1 227 1 320 2 341 2 205 1 272 1 206 1 82 1 83 1 346 2 164 1 371 2 137 2 84 4 87 2 188 1 139 1 212 1 211 1 63 1 89 2 213 1 
282 1 93 1 148 1 257 1 29 1 259 1 70 2 291 1 239 1 154 1 176 1 264 1 9 1 178 3 10 3 129 1 267 2 294 1 181 1 36 1 277 2 327 1 62 6 251 2 142 1 214 1 
282 2 119 1 93 4 148 11 233 1 123 1 24 1 257 1 174 1 29 2 70 4 263 1 364 2 264 2 9 2 34 3 177 2 10 6 178 8 366 1 129 2 367 1 267 1 157 3 294 2 59 1 343 1 277 1 62 14 251 2 278 1 142 11 214 1 
253 1 282 1 352 1 93 1 196 1 44 1 94 1 123 1 24 1 287 2 27 1 48 1 28 1 29 1 359 1 7 1 70 2 221 1 31 1 33 1 264 1 9 1 265 1 10 1 178 1 241 1 130 1 243 1 294 1 205 2 206 1 299 1 277 1 136 1 209 1 62 2 278 1 214 1 
282 3 93 7 148 7 94 2 287 3 48 1 7 1 239 1 9 3 10 10 241 2 294 3 205 3 299 1 206 1 343 4 301 1 209 3 62 20 210 1 251 8 252 1 214 3 349 2 253 2 351 2 352 2 172 2 123 1 257 3 24 1 311 2 27 1 258 1 28 3 29 3 359 2 259 1 70 6 221 2 31 2 364 2 176 1 264 3 265 3 177 2 178 10 366 2 129 3 267 4 130 2 181 1 36 1 327 1 277 2 136 1 187 2 278 1 142 7 
253 3 282 2 306 1 146 1 94 2 121 1 123 1 236 1 24 1 287 1 48 1 27 2 28 8 29 2 7 1 291 1 70 4 221 2 104 1 31 2 264 2 9 2 112 1 265 8 178 1 10 1 204 1 294 2 205 1 15 1 321 2 206 1 299 1 345 1 301 1 209 7 62 2 18 1 214 2 
65 1 282 1 93 1 148 1 195 1 257 1 287 1 29 1 7 1 70 2 364 1 264 1 9 1 177 1 178 1 366 1 10 2 129 1 267 1 294 1 205 1 299 1 206 1 372 1 62 3 251 1 278 1 142 1 214 1 
178 2 282 1 129 1 93 1 294 1 148 1 343 1 29 1 165 1 62 2 291 1 70 2 251 1 364 1 142 1 214 1 9 1 264 1 
366 1 10 2 282 1 267 1 93 1 294 1 148 1 257 1 29 1 62 2 291 1 70 2 251 1 142 1 214 1 9 1 264 1 240 1 
177 1 10 2 366 1 178 2 282 1 129 1 267 1 93 2 294 1 148 2 343 1 257 1 29 1 62 4 291 1 70 2 251 2 364 1 142 2 214 1 9 1 264 1 
178 2 282 1 129 1 93 1 294 1 148 1 15 1 343 1 29 1 165 1 62 2 70 2 251 1 364 1 142 1 214 1 9 1 264 1 
366 1 10 2 282 1 267 1 93 1 294 1 148 1 15 1 257 1 29 1 62 2 70 2 251 1 142 1 214 1 9 1 264 1 240 1 
177 1 10 2 366 1 178 2 282 1 129 1 267 1 93 2 294 1 148 2 15 1 343 1 257 1 29 1 62 4 70 2 251 2 364 1 142 2 214 1 9 1 264 1 
177 1 10 2 366 1 178 2 282 1 129 1 267 1 93 2 294 1 148 2 343 1 257 1 29 1 70 2 62 4 251 2 364 1 142 2 214 1 9 1 264 1 
253 1 282 1 352 1 94 1 123 1 24 1 287 1 27 1 28 1 29 1 359 1 70 2 221 1 31 1 9 1 264 1 265 1 178 1 10 1 241 1 130 1 294 1 205 1 277 1 62 2 209 1 187 1 214 1 
253 1 282 1 352 1 1 1 94 1 123 1 24 1 287 1 27 1 28 1 29 1 70 2 221 1 31 1 9 1 264 1 265 1 178 1 10 1 130 1 294 1 205 1 277 1 62 2 209 1 85 1 250 1 214 1 
177 1 10 2 366 1 178 2 282 1 129 1 267 1 93 2 294 1 148 2 343 1 257 1 29 1 62 4 70 2 251 2 278 1 364 1 142 2 214 1 9 1 264 1 
349 1 253 1 282 1 352 1 93 2 148 2 94 1 257 1 287 1 28 1 29 1 359 1 70 2 221 1 364 1 31 1 9 1 264 1 265 1 112 1 177 1 10 2 366 1 178 2 129 1 241 1 267 1 130 1 294 1 205 1 343 1 62 4 209 1 251 2 187 1 142 2 214 1 
282 1 93 1 195 1 148 1 257 1 287 1 29 1 7 1 70 2 364 1 264 1 9 1 177 1 10 1 366 1 178 2 129 1 294 1 13 1 205 1 299 1 206 1 343 1 372 1 62 3 251 1 278 1 142 1 214 1 
231 1 145 4 282 3 92 1 41 1 310 1 233 1 95 1 257 5 174 3 259 1 71 1 70 6 199 1 239 1 53 1 364 4 176 1 264 3 9 3 34 3 177 4 10 21 178 20 366 4 129 5 293 1 267 4 157 4 294 3 368 1 342 1 343 4 344 1 181 1 182 1 274 2 36 1 163 1 327 1 62 41 251 8 141 1 
231 1 145 4 282 4 92 1 41 1 310 1 233 1 95 1 257 4 174 3 259 1 71 1 70 8 199 1 239 1 53 1 364 4 176 1 264 4 9 4 34 3 177 4 10 18 178 20 366 3 129 5 293 1 267 4 157 4 294 4 368 1 342 1 343 3 344 1 181 1 182 1 274 2 36 1 163 1 327 1 62 38 251 7 141 2 
145 4 282 2 92 1 41 1 310 1 233 2 95 1 257 8 174 2 259 1 71 1 70 4 199 1 239 1 53 1 364 7 176 1 264 2 9 2 34 4 177 7 10 25 178 27 366 7 129 8 367 2 267 7 157 4 294 2 368 1 342 1 343 7 344 1 181 1 182 1 274 1 36 1 163 1 327 1 62 52 251 14 141 1 
145 2 282 2 233 1 95 1 257 3 174 1 71 1 70 4 53 1 364 3 264 2 9 2 34 1 177 3 10 10 178 9 366 3 129 3 293 1 267 3 157 2 294 2 343 3 344 2 182 1 274 1 163 1 62 19 251 6 167 1 
145 4 282 3 92 1 41 1 310 1 95 1 257 2 174 2 71 1 70 6 199 1 53 1 364 3 264 3 9 3 34 2 177 3 10 12 178 14 366 2 129 3 267 2 157 2 294 3 368 1 342 1 343 2 344 1 182 1 274 2 163 2 62 26 251 4 141 2 
128 1 57 1 232 1 120 1 313 1 171 1 271 1 52 1 122 1 365 1 
35 1 339 1 
128 1 229 1 14 1 120 1 313 1 271 1 52 1 43 1 365 1 
128 1 232 1 309 1 120 1 171 1 271 1 159 1 122 1 246 1 49 2 124 1 84 1 313 1 51 1 52 1 109 1 202 1 365 1 
128 1 232 1 309 1 120 1 171 1 271 1 159 1 122 1 246 1 49 2 124 1 84 1 313 1 51 1 52 1 109 1 202 1 365 1 
128 1 232 1 309 1 120 1 171 1 271 1 159 1 122 1 246 1 49 2 124 1 84 1 313 1 51 1 52 1 109 1 202 1 365 1 
225 1 101 1 335 1 
225 1 101 1 335 1 
99 1 105 1 
99 1 335 1 105 1 
16 1 330 1 
191 1 309 1 120 1 22 1 287 2 49 1 360 1 7 2 51 1 313 1 52 1 365 1 222 1 128 1 35 1 339 1 205 2 271 1 270 1 299 2 206 2 159 1 277 1 16 1 84 1 189 1 330 1 
225 1 101 1 
99 1 335 1 105 1 
253 1 282 1 91 1 94 1 123 1 24 1 287 2 28 2 29 1 70 2 221 1 104 1 31 1 9 1 264 1 265 2 178 1 10 1 337 1 294 1 205 2 297 1 321 2 206 2 80 1 116 1 62 2 209 2 18 1 278 1 214 1 
265 2 112 1 110 1 317 1 192 1 244 1 197 2 275 1 289 1 28 2 301 1 175 1 209 2 8 1 17 1 221 1 261 1 86 1 31 1 
265 1 110 1 317 1 192 1 67 1 244 1 197 2 275 1 28 1 301 1 175 1 209 1 8 1 17 1 221 1 86 1 31 1 
265 1 253 1 306 1 244 1 179 1 94 1 345 1 27 1 28 1 209 1 221 1 261 1 200 1 31 1 
265 1 110 1 317 1 192 1 244 1 197 2 275 1 289 1 28 1 301 1 175 1 209 1 8 1 17 1 221 1 261 1 86 1 31 1 
218 1 
82 1 355 1 285 1 74 1 45 1 154 1 109 1 
355 1 309 1 21 1 42 1 285 1 288 1 238 1 109 2 114 1 160 1 82 1 208 1 302 1 84 1 139 1 212 1 89 1 
90 2 0 2 42 3 285 8 45 1 94 3 97 1 288 5 238 4 334 2 292 2 109 8 112 1 114 4 115 2 160 6 245 2 117 3 248 2 209 3 212 4 304 6 253 10 353 1 216 6 355 2 309 5 172 2 69 1 257 2 27 1 28 3 220 1 72 2 125 1 221 4 74 1 31 3 364 2 265 3 177 2 366 2 129 2 130 3 269 2 370 2 134 2 82 9 135 1 84 5 139 4 376 1 89 12 377 2 
0 1 216 5 41 1 355 2 309 1 42 1 310 1 285 5 257 2 174 1 288 1 220 1 238 2 199 1 262 1 364 2 109 5 34 1 177 2 55 1 366 2 129 2 114 2 157 1 368 1 342 1 160 3 245 2 82 8 84 1 139 2 212 2 304 5 377 1 89 6 
350 1 309 1 285 2 257 1 287 1 357 1 259 1 7 1 238 1 239 1 108 1 176 1 224 1 129 2 114 1 205 1 299 1 206 1 81 1 245 2 82 2 84 1 372 1 139 1 212 1 64 1 19 1 377 1 
82 1 114 1 355 1 238 1 139 1 212 1 285 1 74 1 109 1 
177 1 366 1 129 1 216 1 285 2 160 1 257 1 82 1 364 1 304 1 89 2 109 1 
288 1 84 1 355 1 309 1 42 1 109 1 
253 1 0 1 306 1 147 1 309 2 42 1 285 1 94 1 27 2 288 2 28 2 220 1 221 1 238 2 125 1 31 1 265 2 114 1 345 1 82 1 247 1 209 2 84 2 329 1 139 2 212 2 
253 1 282 1 352 1 94 1 234 1 24 1 287 3 27 1 28 1 29 1 359 1 7 2 70 2 221 1 31 1 264 1 9 1 265 1 10 1 241 1 130 1 294 1 205 3 206 2 299 2 81 1 277 1 62 1 209 1 372 2 187 1 214 1 
0 1 114 1 216 2 355 2 285 2 160 2 327 1 82 1 220 1 238 1 212 1 139 1 304 2 89 4 109 4 
128 1 271 1 331 1 
128 1 271 1 331 1 
128 1 16 1 374 1 271 1 122 1 
128 1 271 1 331 1 
128 1 307 1 271 1 
128 1 307 1 271 1 
128 1 307 1 271 1 
128 1 271 1 
120 1 52 1 
282 1 257 1 174 1 259 1 70 2 53 1 239 1 264 1 9 1 176 1 34 1 10 4 178 4 129 1 267 2 157 1 294 1 342 1 181 1 36 1 327 1 62 8 251 2 
282 2 233 1 257 1 174 1 259 1 70 4 239 1 53 1 364 1 176 1 264 2 9 2 34 1 177 1 10 5 178 6 129 2 267 2 157 2 294 2 296 1 342 1 343 1 181 1 36 1 327 1 62 11 251 3 
282 3 41 1 310 1 257 3 174 1 259 1 70 6 199 1 239 1 53 1 364 2 176 1 264 3 9 3 34 1 177 2 10 10 178 9 366 2 129 3 267 3 157 1 294 3 368 1 296 1 342 1 343 1 181 1 36 1 327 1 62 19 251 4 141 1 
282 3 41 1 310 1 257 2 174 1 259 1 70 6 199 1 239 1 53 1 364 2 176 1 264 3 9 3 34 1 177 2 10 7 178 10 366 1 129 3 267 3 157 1 294 3 368 1 296 1 342 1 343 2 181 1 36 1 327 1 62 17 251 5 141 1 
282 1 257 1 174 1 259 1 70 2 53 1 239 1 264 1 9 1 176 1 34 1 10 4 178 4 129 1 267 2 157 1 294 1 342 1 181 1 36 1 327 1 62 8 251 2 
282 1 41 1 310 1 257 2 174 1 70 2 199 1 53 1 364 2 264 1 9 1 34 1 177 2 10 6 178 6 366 2 129 2 267 1 157 1 294 1 368 1 342 1 343 1 62 12 251 2 
282 4 41 1 310 1 257 2 174 1 259 1 70 8 199 1 239 1 53 1 364 2 176 1 264 4 9 4 34 1 177 2 10 8 178 10 366 1 129 3 267 3 157 1 294 4 368 1 296 1 342 1 343 2 181 1 36 1 327 1 62 18 251 5 141 2 
282 4 41 1 310 1 257 2 174 1 70 8 199 1 53 1 364 3 264 4 9 4 34 1 177 3 10 7 178 9 366 2 129 3 293 1 267 3 157 1 294 4 368 1 342 1 343 3 62 16 251 6 141 2 
10 4 178 3 129 1 267 3 343 3 181 2 257 1 36 1 259 1 62 7 251 6 239 3 176 3 
282 4 41 1 310 1 257 2 174 1 259 1 70 8 199 1 239 1 53 1 364 2 176 1 264 4 9 4 34 1 177 2 10 8 178 10 366 1 129 3 293 1 267 3 157 1 294 4 368 1 342 1 343 1 181 1 36 1 327 1 62 18 251 4 141 2 
10 4 178 4 129 1 282 2 267 2 294 2 343 1 181 1 257 1 36 1 327 1 259 1 62 8 70 4 251 3 239 1 141 1 9 2 264 2 176 1 
10 3 178 3 129 1 267 2 181 1 257 1 36 1 327 1 259 1 62 6 251 2 239 1 154 1 176 1 
177 1 10 2 366 1 178 2 282 1 129 1 267 1 294 1 296 1 343 1 257 1 70 2 62 4 251 2 364 1 9 1 264 1 
34 1 177 1 366 1 10 4 178 3 129 1 267 1 157 2 233 1 343 1 257 1 174 1 62 7 251 2 364 1 
282 2 233 1 257 3 173 1 259 1 70 4 239 2 364 2 176 2 9 2 264 2 177 2 34 2 178 11 10 12 366 2 129 3 267 5 367 1 157 2 294 2 59 1 343 4 181 1 36 1 327 1 62 23 251 9 141 2 
10 1 62 1 157 1 
34 1 178 1 62 1 
177 1 10 3 178 3 366 1 282 1 129 1 267 2 294 1 296 1 172 1 343 1 257 1 70 2 62 6 251 3 364 1 264 1 9 1 
282 1 41 1 310 1 257 2 174 1 70 2 199 1 53 1 364 2 264 1 9 1 34 1 177 2 10 6 178 6 366 2 129 2 267 1 157 1 294 1 368 1 342 1 343 1 62 12 251 2 
178 3 10 3 129 1 267 1 343 1 257 1 259 1 62 6 251 2 239 1 176 1 
178 1 10 2 282 1 267 1 294 1 343 1 181 1 173 1 36 1 62 3 70 2 251 2 239 1 141 1 176 1 9 1 264 1 
178 5 10 5 282 1 350 1 129 2 267 3 294 1 343 2 257 2 259 1 70 2 62 10 251 5 53 1 239 2 264 1 9 1 176 2 
178 2 282 1 129 1 294 1 343 1 70 2 62 2 251 1 53 1 364 1 9 1 264 1 
177 1 10 2 366 1 178 2 282 1 129 1 267 1 294 1 343 1 257 1 70 2 62 4 251 2 53 1 364 1 9 1 264 1 
10 2 178 1 282 3 293 1 267 1 294 3 343 1 173 1 62 3 70 6 251 2 53 1 239 1 141 1 9 3 264 3 176 1 
282 5 233 1 257 5 173 1 174 1 259 2 70 10 239 3 53 1 364 3 176 3 264 5 9 5 34 3 177 3 10 18 178 16 366 3 129 5 293 1 267 7 157 4 294 5 340 1 296 1 343 5 181 1 36 1 327 1 62 34 347 1 251 12 138 1 141 2 
287 1 277 1 56 1 205 1 63 1 206 1 140 1 
56 1 205 1 206 1 287 1 277 1 358 1 150 1 373 1 63 1 75 1 106 1 140 1 
265 1 253 1 27 1 306 1 28 1 209 1 221 1 31 1 94 1 154 1 345 1 
265 1 253 1 241 1 352 1 130 1 205 2 299 1 206 1 94 1 287 2 48 1 27 1 277 1 28 1 7 1 209 1 221 1 31 1 
90 1 253 3 353 1 352 1 94 2 287 2 48 1 28 1 7 2 361 1 221 1 31 1 265 1 224 1 241 1 130 2 205 2 206 2 299 1 277 1 83 1 248 1 209 1 
90 1 253 3 353 1 352 1 94 2 287 2 48 1 28 2 7 2 361 1 221 1 31 1 265 2 224 1 130 2 205 2 206 2 299 1 277 1 83 1 248 1 209 2 85 1 348 1 
90 1 265 3 253 4 226 1 353 1 130 1 355 1 115 1 309 2 94 1 27 1 333 1 288 1 28 3 248 1 117 1 84 2 209 3 221 1 334 1 348 1 31 1 109 1 
90 1 265 3 253 4 353 1 130 1 355 1 115 1 309 2 94 1 27 1 288 1 28 3 248 1 117 1 84 2 209 3 221 1 334 1 348 1 292 1 31 1 109 1 
265 1 28 1 209 1 221 1 31 1 236 1 
112 1 265 7 253 3 146 1 319 1 130 1 204 1 255 1 321 1 94 2 121 1 69 1 236 1 27 2 28 7 301 1 209 6 221 3 73 1 18 1 31 2 
349 1 253 1 282 2 351 1 352 1 93 1 148 1 94 1 257 1 287 2 48 1 29 2 28 1 359 1 259 1 7 1 70 4 221 1 239 1 31 1 176 1 264 2 9 2 112 1 265 1 10 3 178 3 129 1 241 1 267 2 130 1 294 2 205 2 297 1 206 1 299 1 181 1 36 1 327 1 277 2 62 6 209 1 251 2 187 1 278 1 142 1 214 2 
253 2 355 1 309 3 42 1 285 1 45 1 27 1 288 2 28 1 360 1 72 1 238 2 125 1 334 1 74 1 292 1 109 1 265 1 114 2 115 1 269 1 134 1 82 1 117 1 209 1 84 3 139 2 212 2 
112 1 265 2 253 2 130 1 115 1 94 1 69 1 236 1 28 2 135 1 209 2 221 2 31 1 
265 4 112 1 253 1 306 1 94 1 345 1 27 1 28 4 209 4 221 1 348 1 32 1 31 1 
265 2 253 1 353 1 319 1 130 1 308 1 255 1 94 1 258 1 28 2 312 1 209 2 221 2 31 1 
275 1 265 1 27 1 317 1 28 1 209 1 221 1 86 1 197 1 31 1 
265 2 112 1 253 1 28 2 301 1 209 2 221 1 31 1 94 1 18 1 80 1 
265 5 112 1 253 3 306 1 353 1 146 1 94 2 121 1 345 1 27 1 28 5 209 4 221 2 32 1 18 1 31 2 
265 5 112 1 253 3 306 1 353 1 146 1 94 2 198 1 345 1 27 1 28 5 209 4 221 2 32 1 18 1 31 2 
265 1 253 1 352 1 130 1 205 2 299 1 206 1 94 1 287 2 48 1 27 1 277 1 28 1 7 1 209 1 221 1 85 1 31 1 
265 1 253 1 353 1 319 1 130 1 255 1 94 1 69 1 28 1 209 1 221 2 73 1 31 1 
287 1 316 1 337 1 91 1 205 1 206 1 60 1 116 1 118 1 
169 1 60 1 54 1 
316 1 277 1 286 1 60 1 118 1 
224 1 316 2 169 1 266 1 355 1 309 2 158 1 60 1 286 2 277 1 83 1 100 1 360 1 361 1 84 2 334 1 109 1 54 1 118 2 
249 1 180 1 228 1 154 1 
203 1 149 1 249 1 180 1 228 1 168 1 219 1 
298 1 23 1 168 1 
203 1 155 1 156 1 180 1 228 1 2 2 219 1 149 3 249 1 190 1 168 3 230 1 
326 1 203 1 149 2 249 1 180 1 228 1 107 1 168 2 219 1 
183 1 203 1 317 1 192 1 149 1 156 1 356 1 197 1 180 1 168 1 219 1 
203 1 149 1 156 1 180 1 228 1 168 1 219 1 
203 1 149 1 156 1 249 1 228 2 168 1 219 1 
11 1 203 2 156 1 180 1 228 1 219 2 325 1 98 1 149 2 168 2 
143 1 203 1 156 1 228 1 180 2 219 1 235 1 183 1 37 1 149 3 249 1 107 2 168 3 
203 1 317 1 156 1 192 1 180 1 228 1 197 2 219 1 275 1 149 2 30 1 249 1 17 1 107 1 168 2 
203 2 156 1 228 1 78 1 180 2 219 2 183 1 326 1 37 1 149 4 249 1 107 2 168 4 
203 1 149 1 156 1 249 1 180 1 228 1 168 1 219 1 
155 1 203 1 228 2 180 3 2 1 219 1 61 1 183 1 37 1 149 4 249 2 107 2 230 1 168 4 
203 1 156 1 295 1 170 1 180 1 228 1 58 1 219 1 149 2 249 1 107 1 168 2 
155 1 203 1 156 1 338 1 180 1 228 1 2 2 219 1 149 3 249 1 168 3 230 2 
113 1 26 1 215 2 180 2 
203 1 149 1 156 1 20 1 168 1 219 1 
143 1 203 1 149 2 156 1 249 1 180 1 228 1 107 1 168 2 219 1 
223 1 
203 1 149 1 156 1 249 1 180 1 228 1 168 1 219 1 
143 1 203 1 156 1 228 1 180 1 2 1 219 1 149 3 249 1 107 1 168 3 
61 1 183 1 37 1 180 1 
180 1 228 1 

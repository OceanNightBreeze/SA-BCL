#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 267 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 24 191 271 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 24 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 1 21 1 178 2 80 3 144 1 53 2 25 1 85 1 3 2 356 1 87 1 86 1 226 1 26 1 106 4 262 1 208 2 109 1 110 6 93 1 209 2 111 9 287 2 236 5 132 1 343 1 344 9 134 2 
101 1 21 1 178 2 80 3 144 1 53 2 25 1 85 1 356 1 3 2 87 1 86 1 226 1 26 1 106 4 208 2 262 1 109 1 110 6 93 1 209 2 111 9 287 2 236 5 132 1 343 1 344 9 134 2 
101 1 21 1 178 2 80 4 144 1 53 2 25 1 85 1 356 1 3 2 87 1 86 1 226 1 26 1 106 5 208 2 262 1 109 1 110 7 93 1 209 2 111 10 287 2 236 6 132 1 343 1 344 10 134 2 
101 1 21 1 178 2 80 2 144 1 53 2 25 1 85 1 356 1 3 1 87 1 226 1 26 1 106 3 208 2 262 1 109 1 110 4 93 1 209 2 111 7 287 2 236 4 132 1 343 1 344 7 134 2 
101 1 110 3 109 1 178 1 80 1 287 1 111 4 236 3 53 1 3 2 87 1 86 1 226 1 106 2 344 4 134 1 262 1 208 1 
101 1 126 1 209 1 178 1 162 1 236 1 111 2 287 1 25 1 53 1 144 1 87 1 149 1 344 2 262 1 134 1 
101 1 110 1 209 1 178 2 80 1 111 3 236 2 53 2 85 1 87 1 106 1 344 3 262 1 
101 1 21 1 273 1 178 2 80 3 250 1 85 1 53 2 356 1 3 2 87 1 226 1 86 1 106 4 262 1 208 1 110 7 109 1 209 1 111 9 236 5 287 1 344 9 134 1 
101 1 21 1 273 1 178 2 80 3 250 1 85 1 53 2 356 1 3 2 87 1 226 1 86 1 106 4 262 1 208 1 110 7 109 1 209 1 111 9 236 5 287 1 344 9 134 1 
298 1 60 1 304 1 
363 2 156 1 304 1 
88 2 73 2 127 1 129 2 200 1 339 2 315 2 16 2 
321 2 73 2 296 1 102 1 324 2 177 1 221 1 350 1 352 1 1 1 163 1 88 2 204 1 333 1 189 1 260 2 166 1 32 2 234 1 311 1 35 1 212 1 366 1 315 3 157 1 338 1 289 1 127 1 172 1 268 1 129 2 269 2 200 1 339 3 370 1 16 2 100 1 
88 1 73 1 127 1 283 1 129 1 140 1 339 1 315 1 16 1 317 1 
298 1 140 1 315 1 288 1 11 1 203 1 290 1 159 1 27 1 339 1 173 1 304 1 16 1 232 1 
73 1 298 1 140 1 315 1 88 1 11 1 203 1 290 2 129 1 159 1 27 2 339 1 304 1 16 1 232 1 
171 1 290 1 277 1 27 1 342 1 
171 1 290 2 277 1 298 1 27 2 304 1 186 1 274 1 
171 1 290 1 27 1 
73 1 283 1 140 1 36 1 315 1 317 1 88 1 127 1 290 1 277 1 129 1 27 1 339 1 16 1 
304 1 
192 1 171 1 290 2 277 1 298 1 27 2 304 1 186 1 
298 1 244 1 78 2 299 1 51 1 179 2 97 2 290 5 229 1 171 2 277 2 27 5 56 1 332 1 42 1 304 1 186 1 57 1 334 1 
243 1 73 4 142 2 315 5 114 1 88 1 129 4 183 1 200 1 184 1 339 5 173 1 16 5 8 1 
73 2 40 1 129 2 140 1 339 2 315 2 16 2 317 1 
60 1 200 1 
73 1 315 2 181 1 88 1 183 1 129 1 200 2 339 2 16 2 
14 1 242 1 38 1 
321 1 296 1 324 1 234 1 177 1 350 1 35 1 163 1 315 1 289 1 269 1 200 1 204 1 339 1 370 1 123 1 
321 1 73 1 296 1 324 1 234 1 177 1 350 1 163 1 35 1 142 1 315 2 38 1 289 1 129 1 269 1 204 1 370 1 339 2 16 1 8 1 
88 1 73 3 129 3 200 1 339 3 142 1 315 3 16 3 
73 1 129 1 140 1 339 1 315 1 16 1 317 1 
88 1 73 1 129 1 183 1 140 1 339 1 315 1 16 1 181 1 
321 1 296 1 73 3 102 1 324 1 177 1 350 1 221 1 140 1 163 1 142 1 225 1 88 2 203 1 183 1 204 1 27 1 333 1 232 1 189 1 260 2 166 1 8 1 32 1 193 1 234 1 311 1 35 1 212 1 366 1 315 4 289 1 11 1 127 1 290 1 172 1 268 1 129 3 269 1 200 1 159 1 370 1 339 4 16 3 
243 1 73 1 129 1 200 1 339 2 173 1 315 2 16 2 142 1 
73 3 349 1 193 1 140 1 142 2 315 3 88 1 203 1 11 1 290 1 183 1 129 3 27 1 159 1 339 3 304 1 16 3 232 1 8 1 
73 2 142 1 315 2 38 1 88 1 183 1 129 2 339 2 242 1 16 2 
321 1 296 1 324 1 234 1 350 1 177 1 35 1 163 1 315 1 289 1 269 1 200 1 204 1 339 1 370 1 
321 1 167 1 324 1 234 1 350 1 177 1 35 1 163 1 315 1 289 1 55 1 269 1 200 1 204 1 339 1 
135 1 102 1 22 1 222 1 354 1 333 1 189 1 260 2 166 1 32 4 281 1 366 1 212 2 10 1 38 2 338 2 14 2 268 1 242 2 341 1 72 1 18 1 
73 1 40 1 129 1 140 1 339 1 315 1 16 1 232 1 
155 1 195 1 
155 1 195 1 
67 1 259 1 
67 1 259 1 
67 1 259 1 
155 1 195 1 300 1 
155 1 195 1 300 1 
240 1 155 1 195 1 
348 1 256 1 67 1 155 2 259 1 195 2 
155 1 195 1 300 1 
155 1 258 1 195 1 
155 1 258 1 195 1 
155 1 258 1 195 1 
73 2 353 1 328 1 107 1 27 1 185 1 29 1 278 1 207 1 95 1 155 1 63 1 113 1 315 2 195 1 290 1 320 1 129 2 200 1 339 2 240 1 340 1 16 2 295 1 
348 1 95 2 155 2 249 1 353 2 63 2 195 2 202 1 252 1 357 1 290 2 107 3 27 2 340 2 29 1 43 1 71 2 304 1 188 1 
287 1 134 1 208 1 
162 1 287 1 134 1 
98 1 162 1 187 1 305 1 208 2 134 3 
335 1 98 1 162 1 187 1 208 1 134 2 
98 2 162 1 187 1 208 1 134 2 
73 1 22 1 119 1 298 1 140 1 78 1 299 2 51 1 251 1 179 1 88 1 228 1 277 4 27 5 185 1 231 1 186 1 304 2 57 3 154 1 363 3 58 1 283 1 337 2 36 1 156 1 10 1 315 1 317 1 97 1 127 1 318 2 171 1 290 5 369 2 129 1 339 1 341 1 16 1 72 1 
140 1 51 1 179 1 228 1 277 4 185 1 186 1 231 1 57 3 283 1 337 2 156 1 10 1 290 5 339 1 341 1 70 1 342 2 16 1 72 1 73 1 22 1 298 1 119 1 78 1 299 2 251 1 88 1 257 1 27 5 304 2 263 2 363 3 36 1 315 1 317 1 97 1 127 1 171 3 369 2 129 1 
73 1 298 1 119 1 140 1 78 1 299 2 251 1 179 1 88 1 277 2 27 3 185 1 304 2 231 1 334 1 57 1 154 1 58 1 363 2 283 1 337 1 36 1 156 1 10 1 315 1 317 1 97 1 127 1 318 1 290 3 369 1 129 1 339 1 341 1 16 1 
119 1 78 1 299 2 251 1 179 1 277 1 27 2 185 1 304 1 231 1 334 1 57 1 154 1 363 2 58 1 337 1 156 1 10 1 97 1 318 1 290 2 369 1 267 1 341 1 
177 1 204 1 163 1 
174 1 177 1 
319 1 177 1 60 1 
177 1 115 1 
9 1 
177 1 204 1 
319 2 177 3 204 1 163 1 6 1 4 1 
32 7 92 1 59 1 235 1 212 3 10 1 211 1 338 4 146 1 199 2 205 1 68 1 206 2 362 1 72 1 220 1 46 3 
32 7 92 1 59 1 235 1 212 3 10 1 211 1 338 4 146 1 199 2 205 1 68 1 206 2 362 1 72 1 220 1 46 3 
32 7 92 1 59 1 235 1 212 3 10 1 211 1 338 4 158 1 146 1 199 2 205 1 68 1 206 2 362 1 72 1 220 1 46 3 
136 4 322 1 102 1 175 1 22 3 2 1 251 3 146 1 359 1 205 1 206 3 362 2 189 1 260 2 32 31 92 1 59 2 235 2 211 2 212 15 10 4 366 1 367 1 338 16 199 3 268 1 68 1 341 3 99 1 220 5 46 8 72 4 17 3 47 1 
102 2 146 1 205 1 206 3 362 1 189 2 260 4 32 9 92 1 59 1 308 1 235 1 10 1 366 2 212 4 211 1 215 1 338 5 199 2 268 2 99 1 72 1 46 4 220 1 
101 1 321 1 324 1 0 1 178 1 162 1 82 1 53 1 87 1 305 1 208 1 262 1 110 1 364 1 234 1 209 1 168 1 236 1 287 1 111 2 197 1 265 1 289 1 266 1 292 1 269 1 270 1 69 1 344 2 134 2 
101 1 321 1 324 1 246 1 120 1 0 1 178 1 162 1 82 1 53 1 87 1 305 1 208 1 110 2 364 1 234 1 209 1 310 1 168 1 236 1 287 1 111 3 197 1 265 1 289 1 292 1 269 1 69 1 344 3 134 2 
101 1 321 1 324 1 120 1 162 1 82 1 87 1 305 1 208 1 110 2 364 1 234 1 209 1 310 1 168 1 236 1 111 2 287 1 197 1 265 1 289 1 292 1 269 1 344 2 134 2 
321 1 324 1 246 1 177 1 178 1 82 2 53 1 54 1 105 1 204 1 148 1 234 1 209 2 35 1 111 1 112 1 197 2 170 1 289 1 265 2 269 1 131 1 344 1 
321 1 324 1 120 1 0 1 178 1 162 1 82 1 53 1 305 1 208 1 262 1 364 1 234 1 209 1 168 1 287 1 111 1 197 1 265 1 289 1 266 1 292 1 269 1 69 1 344 1 134 2 
307 1 
321 2 176 2 324 2 177 1 138 1 140 1 139 1 51 1 179 1 54 1 182 1 150 1 186 3 231 1 7 1 232 1 57 2 234 1 156 2 112 1 288 1 289 1 11 1 290 5 159 1 339 1 293 2 117 2 16 1 346 1 161 2 298 1 247 1 78 1 24 1 299 2 81 1 203 1 253 1 165 1 204 1 27 5 28 2 304 2 363 2 34 2 35 2 213 1 315 1 97 1 171 6 269 2 173 1 371 4 373 2 
247 1 138 1 140 1 81 1 203 1 27 3 28 1 150 1 186 1 232 1 192 1 315 1 288 1 11 1 290 3 171 2 159 1 339 1 173 1 371 2 16 1 346 1 
298 1 247 1 138 1 140 1 81 1 203 1 27 3 150 1 304 1 186 1 232 1 192 1 315 1 288 1 11 1 171 1 290 3 159 1 339 1 173 1 371 3 16 1 373 1 346 1 
161 1 298 1 247 1 138 1 140 1 81 1 203 1 27 3 28 1 150 1 186 1 304 1 232 1 192 1 315 1 288 1 11 1 290 3 171 2 159 1 339 1 173 1 371 3 16 1 373 1 346 1 
161 4 176 2 298 5 247 1 272 1 138 1 78 1 140 1 24 1 299 1 51 1 81 1 179 1 203 1 182 1 27 5 28 4 150 1 304 5 186 3 232 1 191 1 57 1 192 1 125 1 34 2 156 2 312 1 315 1 196 1 97 1 288 1 11 1 171 7 290 5 159 1 339 1 293 2 117 2 173 1 371 6 16 1 373 4 346 1 
176 2 138 1 140 1 51 1 179 1 182 1 150 1 186 2 232 1 57 1 156 2 288 1 11 1 290 4 159 1 339 1 293 2 117 2 16 1 346 1 161 2 298 1 247 1 78 1 24 1 81 1 299 1 203 1 165 1 27 4 28 2 304 2 363 2 34 2 315 1 97 1 171 4 173 1 371 4 373 2 
161 2 176 2 298 1 247 1 138 1 272 1 140 1 78 1 24 1 299 1 81 1 51 1 179 1 203 1 182 1 27 4 28 2 150 1 304 1 186 2 232 1 191 1 57 1 34 2 156 2 315 1 196 1 97 1 288 1 11 1 171 4 290 4 159 1 339 1 293 2 117 2 173 1 371 4 16 1 373 2 346 1 
161 2 176 2 298 1 247 1 138 1 272 1 140 1 78 1 24 1 299 1 81 1 51 1 179 1 203 1 182 1 27 4 28 2 150 1 304 1 186 2 232 1 191 1 57 1 34 2 156 2 315 1 196 1 97 1 288 1 11 1 171 4 290 4 159 1 339 1 293 2 117 2 173 1 371 4 16 1 373 2 346 1 
271 1 176 1 247 1 138 1 140 1 78 1 24 1 299 1 81 1 51 1 52 1 179 1 301 1 203 1 27 2 150 1 230 1 232 1 191 1 57 1 315 1 97 1 288 1 11 1 290 2 159 1 339 1 293 1 173 1 371 2 16 1 346 1 
161 3 176 2 298 1 247 1 138 1 272 1 78 1 140 1 24 1 299 1 51 1 81 1 179 1 203 1 182 1 27 4 28 3 150 1 304 1 186 2 232 1 191 1 57 1 34 2 156 2 312 1 315 1 196 1 97 1 288 1 11 1 290 4 171 5 159 1 339 1 293 2 117 2 173 1 371 5 16 1 373 3 346 1 
161 3 176 2 298 1 247 1 138 1 272 1 78 1 140 1 24 1 299 1 51 1 81 1 179 1 203 1 182 1 27 4 28 3 150 1 304 1 186 2 232 1 191 1 57 1 34 2 156 2 312 1 315 1 196 1 97 1 288 1 11 1 290 4 171 5 159 1 339 1 293 2 117 2 173 1 371 5 16 1 373 3 346 1 
176 1 247 1 138 1 78 1 140 1 24 1 299 1 81 1 51 1 179 1 301 1 203 1 27 2 150 1 230 1 232 1 57 1 315 1 97 1 288 1 11 1 290 2 159 1 339 1 293 1 173 1 371 2 16 1 346 1 
32 6 102 1 92 1 60 1 222 1 212 3 10 1 211 1 366 1 38 1 338 3 146 1 14 1 199 1 268 1 200 2 205 1 206 2 242 1 333 1 362 1 72 1 46 2 260 2 189 1 166 1 
136 3 102 2 175 1 245 1 251 2 358 1 147 1 108 1 333 2 189 2 260 4 190 1 166 1 32 12 212 4 366 2 10 2 367 1 157 1 38 10 338 8 14 10 172 1 268 2 200 1 341 2 242 3 46 1 220 1 17 3 
321 1 296 1 73 1 48 1 102 1 324 1 323 1 177 1 350 1 163 1 142 1 204 1 333 1 123 1 152 1 190 1 260 2 189 1 166 1 8 1 32 2 234 1 35 1 366 1 212 1 315 2 157 1 289 1 338 1 269 1 268 1 129 1 172 1 200 1 370 1 339 2 242 1 16 1 
321 1 102 2 324 1 221 1 177 1 142 1 333 2 189 2 190 1 8 1 280 1 234 1 10 1 289 1 338 3 14 2 339 2 242 2 341 1 16 1 73 1 296 1 297 1 350 1 163 1 251 1 84 1 204 1 206 1 261 1 260 4 166 2 32 5 35 1 212 2 366 2 315 2 38 2 128 1 172 1 269 1 129 1 268 2 370 1 46 1 
321 8 73 1 102 2 324 8 177 3 120 1 222 1 142 1 141 1 355 1 54 1 276 1 204 2 361 1 333 2 189 2 260 4 166 2 32 2 234 2 35 2 366 2 212 1 112 1 37 1 315 1 157 1 289 2 338 1 129 1 269 7 268 2 172 1 160 1 270 1 241 1 339 1 16 1 100 2 
20 1 73 1 102 1 22 1 251 1 88 1 183 1 206 1 333 1 189 1 260 2 190 1 166 1 32 3 366 1 10 1 212 2 315 1 38 1 338 1 14 1 129 1 268 1 339 1 242 1 341 1 16 1 46 1 72 1 
135 1 32 2 102 1 222 1 366 1 10 1 38 1 338 2 14 1 268 1 242 1 341 1 333 1 260 2 189 1 166 1 
32 2 102 1 281 1 22 1 222 1 366 1 212 2 38 1 14 1 268 1 206 1 242 1 333 1 46 1 260 2 189 1 72 1 166 1 
32 2 102 1 222 1 366 1 10 1 251 1 38 1 338 2 14 1 268 1 242 1 341 1 333 1 260 2 189 1 166 1 
135 1 32 2 102 1 366 1 10 1 141 1 38 1 338 2 14 1 268 1 242 1 341 1 333 1 260 2 189 1 166 1 
32 2 102 1 281 1 22 1 366 1 212 2 141 1 38 1 14 1 268 1 206 1 242 1 333 1 46 1 260 2 189 1 72 1 166 1 
32 2 102 1 366 1 10 1 141 1 251 1 38 1 338 2 14 1 268 1 242 1 341 1 333 1 260 2 189 1 166 1 
32 2 102 1 366 1 10 1 251 1 38 1 338 2 14 1 268 1 242 1 341 1 333 1 260 2 189 1 166 1 
321 1 296 1 102 1 324 1 350 1 221 1 177 1 163 1 204 1 333 1 260 2 189 1 166 1 32 2 234 1 35 1 366 1 212 1 315 1 157 1 338 1 289 1 269 1 268 1 172 1 200 1 370 1 339 1 
321 1 102 1 324 1 350 1 177 1 163 1 55 1 204 1 333 1 279 1 260 2 189 1 166 1 32 2 167 1 234 1 35 1 366 1 212 1 315 1 157 1 338 1 289 1 269 1 268 1 172 1 200 1 339 1 
32 2 102 1 366 1 10 1 251 1 38 1 338 2 14 1 268 1 242 1 341 1 333 1 190 1 260 2 189 1 166 1 
321 1 296 1 102 1 324 1 350 1 221 1 177 1 163 1 251 1 84 1 204 1 333 1 260 2 189 1 166 1 32 2 234 1 10 1 366 1 315 1 38 1 338 2 289 1 14 1 269 1 268 1 370 1 270 1 339 1 242 1 341 1 
49 1 73 1 102 1 22 1 251 1 88 1 183 1 333 1 189 1 260 2 190 1 166 1 32 3 212 1 366 1 10 1 315 1 38 1 338 2 14 1 129 1 268 1 339 1 341 1 16 1 72 1 
347 1 136 2 102 2 175 1 22 2 248 2 79 1 251 2 145 1 331 1 5 1 306 1 189 2 260 4 32 15 366 2 212 8 10 2 367 1 314 1 215 1 338 7 268 2 341 2 220 1 46 1 72 2 17 1 
347 1 136 2 102 2 175 1 22 2 248 2 79 1 251 2 145 1 331 1 5 1 306 1 189 2 260 4 32 15 366 2 212 8 10 2 367 1 314 1 215 1 338 7 268 2 341 2 220 1 46 1 72 2 17 1 
347 1 136 3 102 2 175 1 22 2 326 1 248 4 79 1 251 4 146 1 331 1 5 1 205 1 206 2 360 1 303 1 362 1 306 1 189 2 260 4 233 1 32 33 92 1 282 1 211 1 366 2 212 15 10 5 367 2 314 1 215 1 338 18 199 1 268 2 341 4 99 1 372 1 72 3 220 2 46 4 17 2 
347 1 136 2 102 2 175 1 22 1 248 1 251 2 145 1 331 1 5 1 30 1 306 1 189 2 260 4 32 11 366 2 212 5 10 2 367 1 314 1 215 1 338 6 268 2 341 2 220 1 46 1 72 1 17 1 
347 1 136 2 102 2 22 1 326 1 248 3 79 1 251 3 331 2 5 1 360 1 206 1 303 1 306 1 189 2 260 4 233 1 32 21 282 1 212 9 366 2 10 3 314 2 367 2 215 1 338 12 268 2 341 3 99 1 372 1 72 1 46 1 17 2 
219 1 300 1 
89 1 256 1 258 1 
216 1 348 1 95 1 155 1 340 1 43 1 353 1 63 1 195 1 252 1 
240 1 295 1 
39 1 239 1 95 1 155 1 340 1 353 1 63 1 195 1 153 1 
348 1 95 1 155 1 249 1 353 1 63 1 195 1 202 1 252 1 290 1 107 2 27 1 29 1 340 1 43 1 71 1 304 1 188 1 
348 1 95 1 155 1 249 1 353 1 63 1 195 1 202 1 252 1 290 1 107 2 27 1 29 1 340 1 43 1 71 1 304 1 188 1 
348 1 95 1 155 1 249 1 353 1 63 1 195 1 202 1 252 1 290 1 107 2 27 1 29 1 340 1 43 1 71 1 304 1 188 1 
256 1 219 1 300 1 
256 1 219 1 300 1 
89 1 258 1 
89 1 256 1 258 1 
278 1 207 1 
73 2 353 1 202 1 328 1 107 1 277 1 27 1 185 1 278 1 207 1 95 1 286 1 155 1 63 1 113 1 315 2 195 1 290 1 320 1 129 2 200 1 339 2 240 1 340 1 71 1 16 2 295 1 
321 2 102 1 324 2 177 1 103 1 143 1 104 1 355 1 204 1 333 1 190 1 260 2 189 1 166 1 32 2 234 1 264 1 366 1 212 1 37 1 315 2 157 1 289 1 338 1 268 1 172 1 269 2 339 2 44 1 16 2 100 2 
321 2 336 1 324 2 234 1 351 1 120 1 168 1 162 1 287 1 197 1 289 1 292 1 269 2 270 1 69 1 31 1 305 1 208 1 134 2 
321 1 336 1 324 1 234 1 120 1 168 1 162 1 287 1 197 1 289 1 292 1 164 1 269 1 69 1 305 1 208 1 134 2 
321 1 324 1 234 1 177 1 351 1 50 1 35 1 112 1 197 1 170 1 54 1 289 1 269 1 204 1 
321 1 336 1 324 1 234 1 351 1 120 1 168 1 162 1 287 1 197 1 289 1 292 1 269 1 69 1 31 1 305 1 208 1 134 2 
151 1 
298 1 60 1 299 1 332 1 42 1 304 1 57 1 
298 1 78 1 299 1 51 1 179 1 182 1 27 1 304 2 186 1 57 1 363 1 34 1 156 1 97 1 171 1 290 1 117 1 
321 1 324 1 74 1 325 1 177 4 78 2 163 1 299 3 51 2 251 1 179 2 203 1 330 1 27 2 204 1 6 1 304 2 186 1 231 1 57 2 363 4 234 1 94 1 337 2 35 1 194 1 156 2 62 1 10 1 97 2 198 1 289 2 319 1 290 2 171 2 369 2 128 1 269 1 218 1 115 2 341 1 
19 1 136 1 325 2 22 2 298 2 78 2 51 2 299 5 251 2 179 2 27 1 360 1 303 1 231 1 186 1 304 5 7 1 57 8 233 1 363 6 282 1 337 5 156 3 10 2 367 1 97 2 290 1 171 1 369 5 341 2 372 1 118 1 345 1 72 2 17 1 
73 1 325 2 140 1 78 1 51 1 299 2 179 1 227 1 88 1 27 1 205 1 362 1 57 2 283 1 36 1 211 1 10 2 315 1 196 1 317 1 97 1 127 1 290 1 129 1 339 1 16 1 118 1 72 1 
298 1 78 1 51 1 299 1 179 1 97 1 42 1 332 1 304 1 57 1 
363 2 337 1 299 2 156 1 10 1 251 1 369 1 341 1 304 1 
290 1 171 1 298 1 27 1 304 1 186 1 
321 4 201 2 324 4 177 1 77 1 78 2 51 1 299 2 179 2 54 1 253 1 204 1 27 3 231 2 186 2 7 2 334 1 57 2 234 1 35 2 112 1 213 1 97 2 289 1 13 1 171 4 290 3 269 4 116 1 
321 1 73 2 296 1 102 1 324 1 221 1 350 1 177 1 163 1 88 2 204 1 333 1 189 1 260 2 166 1 32 1 234 1 35 1 311 1 212 1 366 1 315 3 289 1 127 1 172 1 269 1 129 2 268 1 200 1 339 3 370 1 16 2 
363 4 298 2 337 2 78 1 299 2 51 1 156 2 179 1 97 1 369 2 199 1 231 1 304 4 7 1 57 1 
291 1 340 1 353 1 
291 1 340 1 353 1 
285 1 340 1 43 1 353 1 207 1 
291 1 340 1 353 1 
340 1 353 1 83 1 
340 1 353 1 83 1 
340 1 353 1 83 1 
340 1 353 1 
155 1 195 1 
136 1 102 1 146 1 205 1 206 2 362 1 189 1 260 2 32 8 92 1 10 1 212 4 366 1 211 1 367 1 215 1 338 4 199 1 268 1 372 1 72 1 46 2 17 1 
136 2 102 2 175 1 251 1 146 1 205 1 206 2 362 1 189 2 260 4 32 11 92 1 61 1 211 1 212 5 366 2 10 2 367 1 215 1 338 6 199 1 268 2 341 1 372 1 72 1 220 1 46 3 17 1 
136 1 102 3 22 1 251 2 146 1 205 1 360 1 206 3 303 1 362 1 189 3 260 6 32 17 233 1 92 1 282 1 61 1 211 1 212 8 366 3 10 3 367 1 215 1 338 9 199 1 268 3 341 2 372 1 99 1 72 2 46 4 220 1 17 1 
136 1 102 3 22 1 251 2 227 1 146 1 205 2 360 1 206 4 303 1 362 2 189 3 260 6 32 24 233 1 92 1 282 1 61 1 211 2 212 11 366 3 10 5 367 1 215 1 338 13 199 1 268 3 341 2 372 1 99 1 220 3 72 4 46 7 17 1 
136 1 102 1 146 1 205 1 206 2 362 1 189 1 260 2 32 8 92 1 10 1 212 4 366 1 211 1 367 1 215 1 338 4 199 1 268 1 372 1 72 1 46 2 17 1 
136 1 102 2 22 1 251 2 360 1 206 1 303 1 189 2 260 4 32 11 233 1 282 1 212 5 366 2 10 2 367 1 215 1 338 6 268 2 341 2 372 1 99 1 72 1 46 2 220 1 17 1 
136 1 102 3 22 1 251 2 360 1 206 1 303 1 189 3 260 6 32 11 233 1 282 1 61 1 212 5 366 3 10 2 367 1 215 1 338 6 268 3 341 2 372 1 99 1 72 1 46 1 17 1 
136 1 102 4 22 1 251 3 145 1 360 1 206 2 303 1 189 4 260 8 32 14 233 1 282 1 212 5 366 4 10 3 367 1 215 1 338 9 268 4 341 3 372 1 99 2 72 1 220 3 46 5 17 1 
32 7 92 2 212 4 211 3 10 1 338 3 146 1 205 1 206 3 362 3 72 1 46 6 220 3 
136 1 102 3 22 1 251 2 145 1 360 1 206 1 303 1 189 3 260 6 32 11 233 1 282 1 212 5 366 3 10 2 367 1 215 1 338 6 268 3 341 2 372 1 99 1 72 1 46 1 17 1 
32 8 102 2 92 1 10 1 212 4 366 2 211 1 338 4 146 1 199 1 268 2 205 1 206 2 99 1 362 1 72 1 220 1 46 3 260 4 189 2 
32 6 92 1 60 1 212 3 211 1 10 1 338 3 146 1 199 1 205 1 206 2 362 1 46 2 72 1 
32 2 102 1 61 1 366 1 10 1 251 1 338 2 268 1 341 1 260 2 189 1 
136 2 32 7 175 1 22 1 212 4 10 1 367 1 251 1 338 3 341 1 72 1 220 1 46 1 17 1 
136 2 102 1 175 1 22 1 251 2 227 1 358 1 146 1 108 1 205 2 206 4 362 2 260 2 189 1 32 23 92 1 211 2 10 5 212 10 366 1 338 13 199 1 268 1 341 2 99 1 220 4 46 8 72 4 17 2 
32 1 136 1 212 1 
338 1 32 1 17 1 
32 6 22 1 212 3 10 1 251 1 338 3 128 1 341 1 220 1 46 1 72 1 
136 1 102 2 22 1 251 2 360 1 206 1 303 1 189 2 260 4 32 11 233 1 282 1 212 5 366 2 10 2 367 1 215 1 338 6 268 2 341 2 372 1 99 1 72 1 46 2 220 1 17 1 
32 6 10 1 212 3 211 1 338 3 205 1 206 1 362 1 72 1 46 2 220 1 
32 3 92 1 102 1 211 1 212 2 366 1 338 1 255 1 146 1 268 1 206 1 362 1 99 1 220 1 46 2 260 2 189 1 
32 10 102 1 366 1 211 2 212 5 10 2 215 1 227 1 338 5 268 1 205 1 206 3 362 2 189 1 260 2 46 5 220 2 72 2 
32 2 102 1 366 1 10 1 215 1 338 2 268 1 341 1 260 2 189 1 
32 2 102 1 366 1 10 1 251 1 215 1 338 2 268 1 341 1 260 2 189 1 
32 3 102 3 212 2 366 3 211 1 215 1 145 1 338 1 255 1 268 3 206 1 99 1 362 1 260 6 189 3 46 2 220 1 
136 4 322 1 102 5 175 1 22 3 2 1 251 3 145 1 146 1 255 1 205 2 206 4 362 3 189 5 260 10 32 34 92 1 61 1 211 3 212 18 366 5 10 5 367 1 215 1 338 16 199 1 268 5 341 3 99 2 220 5 46 9 72 5 17 3 47 1 
243 1 200 1 339 1 173 1 315 1 16 1 45 1 
243 1 75 1 309 1 315 1 180 1 275 1 65 1 200 1 339 1 173 1 45 1 16 1 
321 1 73 1 324 1 234 1 177 1 350 1 163 1 35 1 142 1 315 2 289 1 55 1 129 1 269 1 200 1 204 1 339 2 16 1 
321 1 201 1 324 1 234 1 177 1 284 1 163 1 121 1 289 2 41 1 269 1 204 1 6 1 
289 1 321 1 324 1 234 1 177 1 60 1 269 1 204 1 35 1 112 1 54 1 
321 1 73 1 324 1 234 1 177 1 350 1 163 1 35 1 142 1 315 2 289 1 129 1 269 1 200 1 204 1 339 2 370 1 16 1 
321 1 73 2 174 1 324 1 201 1 350 1 177 3 140 1 163 2 142 1 327 1 204 2 232 1 234 1 315 2 289 1 11 1 269 1 129 1 200 1 370 1 339 2 16 2 
321 2 73 2 174 1 324 2 201 1 350 1 177 3 140 1 163 2 142 1 327 1 55 1 204 2 232 1 234 1 169 1 315 2 289 1 11 1 269 2 129 1 200 1 339 2 16 2 
321 3 174 1 324 3 201 1 298 1 177 4 163 1 327 1 203 1 27 2 204 1 304 1 234 1 365 1 169 1 35 1 316 1 289 1 319 1 171 1 290 2 269 3 115 1 
321 3 174 1 201 1 324 3 298 1 234 1 177 4 169 1 35 1 163 1 327 1 203 1 289 1 319 1 290 2 171 1 269 3 204 1 27 2 218 1 115 1 304 1 
289 1 321 1 324 1 234 1 269 1 361 1 
321 7 324 7 234 2 177 3 120 1 284 1 35 2 163 1 121 1 37 1 289 3 276 1 41 1 269 6 204 2 160 1 270 1 241 1 361 1 6 1 100 1 
321 1 73 1 296 1 102 2 324 1 177 1 350 1 221 1 163 1 103 1 142 1 84 1 146 1 204 1 205 1 206 2 333 2 362 1 190 1 260 4 189 2 166 2 32 6 92 1 280 1 234 1 212 3 10 1 211 1 366 2 315 2 38 1 338 3 289 1 14 1 199 1 268 2 129 1 269 1 200 2 339 2 270 1 370 1 242 1 16 1 72 1 46 2 
321 1 324 1 74 1 298 1 177 2 78 2 299 1 51 2 179 2 203 1 330 1 277 1 27 3 332 1 304 1 186 1 57 1 35 1 194 1 97 2 319 1 13 1 290 3 171 2 269 1 218 1 115 1 42 1 
321 2 324 2 234 1 177 2 163 1 62 1 289 2 319 1 269 2 204 1 270 1 361 1 6 1 
321 4 324 4 234 1 177 1 169 1 35 1 112 1 54 1 289 1 12 1 269 4 204 1 270 1 
321 2 33 1 201 1 324 2 234 1 177 1 76 1 163 1 121 1 289 2 41 1 66 1 269 2 204 1 
289 1 321 1 324 1 234 1 269 1 168 1 162 1 35 1 287 1 134 1 
321 2 324 2 234 1 177 1 120 1 143 1 37 1 289 1 269 2 204 1 270 1 
321 5 201 1 324 5 234 2 177 3 35 1 112 1 37 1 54 1 289 2 12 1 276 1 269 4 204 2 270 1 160 1 
321 5 201 1 324 5 234 2 177 3 35 1 112 1 37 1 54 1 289 2 12 1 276 1 217 1 269 4 204 2 270 1 
137 1 200 1 223 1 122 1 64 1 
193 1 298 1 23 1 137 2 140 1 223 1 122 2 64 2 203 1 11 1 329 1 238 1 290 2 277 1 200 1 27 2 159 1 304 1 232 1 
137 1 339 1 264 1 44 1 223 1 315 1 16 1 122 1 104 1 
329 1 238 1 223 1 
101 1 87 1 60 1 236 1 
101 1 87 1 178 1 236 1 111 1 344 1 53 1 
265 1 209 1 344 1 
101 1 178 1 236 1 111 3 53 1 25 2 87 1 15 1 344 3 124 1 91 1 262 1 
101 1 87 1 110 1 178 1 236 1 111 2 344 2 53 1 3 1 
109 1 106 1 178 1 287 1 236 1 111 1 344 1 53 1 134 1 208 1 262 1 
101 1 178 1 236 1 111 1 344 1 53 1 262 1 
101 2 87 1 178 1 111 1 344 1 53 1 262 1 
101 1 178 2 236 1 111 2 313 1 214 1 224 1 53 2 344 2 262 1 
101 1 110 2 21 1 178 1 80 1 111 3 236 2 53 1 356 1 87 1 106 1 344 3 262 1 
101 1 110 1 162 1 178 1 236 1 111 2 287 1 237 1 53 1 87 1 344 2 305 1 134 2 262 1 208 1 
101 1 110 2 178 2 80 1 111 4 236 2 53 2 3 1 87 1 86 1 106 1 344 4 262 1 
101 1 87 1 178 1 236 1 111 1 344 1 53 1 262 1 
101 2 110 2 178 1 80 1 210 1 111 4 236 3 25 1 53 1 87 2 106 1 15 1 344 4 91 1 
101 1 110 1 178 1 273 1 236 1 111 2 53 1 87 1 254 1 133 1 344 2 262 1 
101 1 178 1 236 1 111 3 53 1 25 2 87 1 130 1 15 1 344 3 91 2 262 1 
302 1 90 2 236 2 96 1 
178 1 294 1 111 1 344 1 53 1 262 1 
101 1 87 1 110 1 178 1 236 1 111 2 344 2 53 1 356 1 262 1 
368 1 
101 1 87 1 178 1 236 1 111 1 344 1 53 1 262 1 
101 1 110 1 178 1 111 3 236 1 53 1 25 1 356 1 87 1 344 3 262 1 
106 1 80 1 210 1 236 1 
101 1 236 1 
